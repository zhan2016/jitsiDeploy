/*! callstats.js  version = 3.27.0 2017-12-14 */
function SWPercentileTracker(a,b,c){if(SWPlugin.call(this),99<b||b<1)throw new RangeError("Percentile parameter must be between 1 and 99");this.comparator=a,this.percentile=b,this.meanCalcer="undefined"==typeof c?function(a,b){return(a+b)/2}:c,this.ratio=b/(100-b),this.maxtree=new BinaryTree(a),this.mintree=new BinaryTree(a),this.ratio<1?this.required=1/this.ratio+1:1<this.ratio?this.required=this.ratio+1:this.required=2,this.maxcounter=this.mincounter=0,this.result=null,this.filter=null}var SWPercentileNotification=require("./swPercentileNotification"),BinaryTree=require("./binaryTree"),SWPlugin=require("./swPlugin");SWPercentileTracker.prototype=Object.create(SWPlugin.prototype),SWPercentileTracker.prototype.constructor=SWPercentileTracker,SWPercentileTracker.prototype.addFilter=function(a,b){this.filter={callback:a,that:b}},SWPercentileTracker.prototype.doFilter=function(a){return null===this.filter||(void 0===this.filter.that||null===this.filter.that?this.filter.callback(a):this.filter.callback.call(this.filter.that,a))},SWPercentileTracker.prototype.getResult=function(){return this.result},SWPercentileTracker.prototype.add=function(a){if(this.doFilter(a)){if(this.maxcounter<1)return this.maxtree.insert(a),void++this.maxcounter;this.comparator(a,this.maxtree.getTopValue())<=0?(this.maxtree.insert(a),++this.maxcounter):(this.mintree.insert(a),++this.mincounter),this.balancing(),this.calculate()}},SWPercentileTracker.prototype.remove=function(a){if(this.doFilter(a)){if(this.maxtree.delete(a))--this.maxcounter;else{if(!this.mintree.delete(a))throw new ReferenceError("The requested value "+a+" is not found in trees");--this.mincounter}this.balancing(),this.calculate()}},SWPercentileTracker.prototype.balancing=function(){var a=function(){for(var a=(this.maxcounter+1)/(this.mincounter-1);;a=(this.maxcounter+1)/(this.mincounter-1)){if(this.ratio<a||this.mincounter<1)return;this.maxtree.insertByTop(this.mintree.deleteBottomValue()),++this.maxcounter,--this.mincounter}},b=function(){for(var a=(this.maxcounter-1)/(this.mincounter+1);;a=(this.maxcounter-1)/(this.mincounter+1)){if(a<this.ratio||this.maxcounter<1)return;this.mintree.insertByBottom(this.maxtree.deleteTopValue()),++this.mincounter,--this.maxcounter}};if(!(this.maxcounter+this.mincounter<this.required)){if(this.mincounter<1)return void b.call(this);if(this.maxcounter<1)return void a.call(this);var c=this.maxcounter/this.mincounter;this.ratio<c?b.call(this):a.call(this)}},SWPercentileTracker.prototype.calculate=function(){var a,b,c=new SWPercentileNotification,d=null,e=this.mincounter+this.maxcounter;if(!(e<1)){if(this.mincounter<1?(b=this.maxtree.getTopValue(),a=this.maxtree.getBottomValue()):this.maxcounter<1?(b=this.mintree.getTopValue(),a=this.mintree.getBottomValue()):(b=this.mintree.getTopValue(),a=this.maxtree.getBottomValue()),c.min=a,c.max=b,c.tracked=e,e<this.required||this.mincounter<1)return d=this.ratio<1?a:1<this.ratio?b:this.meanCalcer(a,b),c.actual=d,c.estimated=!0,this.result=c,void this.notify(this.result);var f=this.maxcounter/this.mincounter;d=this.ratio<f?this.maxtree.getTopValue():f<this.ratio?this.mintree.getBottomValue():this.meanCalcer(this.mintree.getBottomValue(),this.maxtree.getTopValue()),c.actual=d,this.result=c,this.notify(this.result)}},SWPercentileTracker.prototype.map=function(a){this.mapping(this.result.actual,a)},module.exports=SWPercentileTracker;