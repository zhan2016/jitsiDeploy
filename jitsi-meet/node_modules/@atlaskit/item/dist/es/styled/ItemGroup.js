import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n    padding: ', 'px ', 'px ', 'px ', 'px;\n  '], ['\n    padding: ', 'px ', 'px ', 'px ', 'px;\n  ']),
    _templateObject2 = _taggedTemplateLiteral(['\n  align-items: center;\n  color: ', ';\n  display: flex;\n  flex: 1 1 auto;\n  ', '\n'], ['\n  align-items: center;\n  color: ', ';\n  display: flex;\n  flex: 1 1 auto;\n  ', '\n']),
    _templateObject3 = _taggedTemplateLiteral(['\n  flex: 0 0 auto;\n  margin-right: -', 'px;\n'], ['\n  flex: 0 0 auto;\n  margin-right: -', 'px;\n']),
    _templateObject4 = _taggedTemplateLiteral(['\n  flex: 1 1 auto;\n  font-size: ', 'px;\n  line-height: 1;\n  text-transform: uppercase;\n  /* Required for children to truncate */\n  min-width: 0;\n'], ['\n  flex: 1 1 auto;\n  font-size: ', 'px;\n  line-height: 1;\n  text-transform: uppercase;\n  /* Required for children to truncate */\n  min-width: 0;\n']);

import styled, { css } from 'styled-components';
import { getThemeStyle, gridSize, smallFontSize, themeNamespace } from '../util/theme';

var getPadding = function getPadding(_ref) {
  var isCompact = _ref.isCompact,
      theme = _ref.theme;

  var paddingType = isCompact ? 'compact' : 'default';

  var _getThemeStyle = getThemeStyle(theme[themeNamespace], paddingType, 'padding'),
      _getThemeStyle$bottom = _getThemeStyle.bottom,
      bottom = _getThemeStyle$bottom === undefined ? 0 : _getThemeStyle$bottom,
      _getThemeStyle$left = _getThemeStyle.left,
      left = _getThemeStyle$left === undefined ? 0 : _getThemeStyle$left,
      _getThemeStyle$right = _getThemeStyle.right,
      right = _getThemeStyle$right === undefined ? 0 : _getThemeStyle$right,
      _getThemeStyle$top = _getThemeStyle.top,
      top = _getThemeStyle$top === undefined ? 0 : _getThemeStyle$top;

  return css(_templateObject, top, right, bottom, left);
};

// eslint-disable-next-line import/prefer-default-export
var GroupTitle = styled.div(_templateObject2, function (_ref2) {
  var theme = _ref2.theme;
  return getThemeStyle(theme[themeNamespace], 'secondaryText', 'default');
}, getPadding);
GroupTitle.displayName = 'ItemGroupTitle';

var GroupTitleAfter = styled.div(_templateObject3, gridSize / 2);
GroupTitleAfter.displayName = 'ItemGroupTitleAfter';

var GroupTitleText = styled.div(_templateObject4, smallFontSize);
GroupTitleText.displayName = 'ItemGroupTitleText';

export { GroupTitle, GroupTitleAfter, GroupTitleText };