import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent } from 'react';
import { Container } from './styled';

var TagGroup = function (_PureComponent) {
  _inherits(TagGroup, _PureComponent);

  function TagGroup() {
    _classCallCheck(this, TagGroup);

    return _possibleConstructorReturn(this, (TagGroup.__proto__ || _Object$getPrototypeOf(TagGroup)).apply(this, arguments));
  }

  _createClass(TagGroup, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          alignment = _props.alignment,
          children = _props.children;


      return React.createElement(
        Container,
        { justify: alignment },
        children
      );
    }
  }]);

  return TagGroup;
}(PureComponent);

TagGroup.defaultProps = {
  alignment: 'start'
};
export default TagGroup;