import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import TooltipStateless from './TooltipStateless';

var Tooltip = function (_PureComponent) {
  _inherits(Tooltip, _PureComponent);

  function Tooltip() {
    var _temp, _this, _ret;

    _classCallCheck(this, Tooltip);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.state = { isVisible: false }, _this.hideTooltip = function () {
      return _this.setState({ isVisible: false });
    }, _this.showTooltip = function () {
      return _this.setState({ isVisible: true });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  Tooltip.prototype.render = function render() {
    var _props = this.props,
        children = _props.children,
        description = _props.description,
        position = _props.position;
    var isVisible = this.state.isVisible;


    return React.createElement(
      TooltipStateless,
      {
        description: description,
        isVisible: isVisible,
        onMouseOut: this.hideTooltip,
        onMouseOver: this.showTooltip,
        position: position
      },
      children
    );
  };

  return Tooltip;
}(PureComponent);

Tooltip.propTypes = {
  children: PropTypes.node,
  description: PropTypes.string,
  position: PropTypes.oneOf(['bottom', 'left', 'right', 'top'])
};
Tooltip.defaultProps = { position: 'bottom' };
export default Tooltip;