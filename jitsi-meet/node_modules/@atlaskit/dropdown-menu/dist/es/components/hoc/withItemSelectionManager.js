import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { Component } from 'react';
import PropTypes from 'prop-types';
import getDisplayName from '../../util/getDisplayName';
import DropdownItemSelectionManager from '../context/DropdownItemSelectionManager';


// HOC that typically wraps @atlaskit/item/ItemGroup

var withDropdownItemSelectionManager = function withDropdownItemSelectionManager(WrappedComponent, selectionBehavior) {
  var _class, _temp;

  return _temp = _class = function (_Component) {
    _inherits(WithDropdownItemSelectionManager, _Component);

    function WithDropdownItemSelectionManager() {
      _classCallCheck(this, WithDropdownItemSelectionManager);

      return _possibleConstructorReturn(this, _Component.apply(this, arguments));
    }

    WithDropdownItemSelectionManager.prototype.render = function render() {
      var _props = this.props,
          children = _props.children,
          id = _props.id,
          otherProps = _objectWithoutProperties(_props, ['children', 'id']);

      return React.createElement(
        WrappedComponent,
        otherProps,
        React.createElement(
          DropdownItemSelectionManager,
          { groupId: id, behavior: selectionBehavior },
          children
        )
      );
    };

    return WithDropdownItemSelectionManager;
  }(Component), _class.displayName = 'WithDropdownItemSelectionManager(' + getDisplayName(WrappedComponent) + ')', _class.propTypes = {
    children: PropTypes.node,
    id: PropTypes.string.isRequired
  }, _temp;
};

export default withDropdownItemSelectionManager;