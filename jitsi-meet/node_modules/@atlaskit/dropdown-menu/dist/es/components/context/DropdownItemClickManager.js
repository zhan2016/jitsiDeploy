import _defineProperty from 'babel-runtime/helpers/defineProperty';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import _PropTypes from 'prop-types';
import { Component } from 'react';
import PropTypes from 'prop-types';
import { clickManagerContext } from '../../util/contextNamespace';

var DropdownItemClickManager = function (_Component) {
  _inherits(DropdownItemClickManager, _Component);

  function DropdownItemClickManager() {
    var _temp, _this, _ret;

    _classCallCheck(this, DropdownItemClickManager);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _Component.call.apply(_Component, [this].concat(args))), _this), _this.handleItemClicked = function (event) {
      _this.props.onItemClicked(event);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  } // eslint-disable-line react/sort-comp

  DropdownItemClickManager.prototype.getChildContext = function getChildContext() {
    return _defineProperty({}, clickManagerContext, {
      itemClicked: this.handleItemClicked
    });
  };

  DropdownItemClickManager.prototype.render = function render() {
    return this.props.children;
  };

  return DropdownItemClickManager;
}(Component);

DropdownItemClickManager.propTypes = {
  children: _PropTypes.any,
  onItemClicked: _PropTypes.func.isRequired
};
DropdownItemClickManager.childContextTypes = _defineProperty({}, clickManagerContext, PropTypes.object);
export default DropdownItemClickManager;