import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n  ', '\n'], ['\n  ', '\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n      to { transform: rotate(360deg); }\n    '], ['\n      to { transform: rotate(360deg); }\n    ']),
    _templateObject3 = _taggedTemplateLiteral(['\n      from { stroke-dashoffset: ', 'px; }\n      to { stroke-dashoffset: ', 'px; }\n    '], ['\n      from { stroke-dashoffset: ', 'px; }\n      to { stroke-dashoffset: ', 'px; }\n    ']),
    _templateObject4 = _taggedTemplateLiteral(['\n      from { opacity: 0; }\n      to { opacity: 1; }\n    '], ['\n      from { opacity: 0; }\n      to { opacity: 1; }\n    ']),
    _templateObject5 = _taggedTemplateLiteral(['', ''], ['', '']);

import styled, { css, keyframes } from 'styled-components';
import { akColorN0, akColorN500 } from '@atlaskit/util-shared-styles';


export var getStrokeColor = function getStrokeColor(invertColor) {
  return invertColor ? akColorN0 : akColorN500;
};

export var svgStyles = css(_templateObject, function (_ref) {
  var invertColor = _ref.invertColor,
      phase = _ref.phase,
      size = _ref.size;

  var strokeWidth = Math.round(size / 10);
  var strokeRadius = size / 2 - strokeWidth / 2;
  var circumference = Math.PI * strokeRadius * 2;

  var idleRotation = '0.86s cubic-bezier(0.4, 0.15, 0.6, 0.85) infinite ' + keyframes(_templateObject2);

  var spinUpStroke = '0.8s ease-in-out ' + keyframes(_templateObject3, circumference, circumference * 0.8);

  var spinUpOpacity = '0.2s ease-in-out ' + keyframes(_templateObject4);

  var activeAnimations = [idleRotation];
  if (phase === 'ENTER') {
    activeAnimations.push(spinUpStroke, spinUpOpacity);
  }

  return '\n      animation: ' + activeAnimations.join(', ') + ';\n      fill: none;\n      stroke: ' + getStrokeColor(invertColor) + ';\n      stroke-dasharray: ' + circumference + 'px;\n      stroke-dashoffset: ' + circumference * 0.8 + 'px;\n      stroke-linecap: round;\n      stroke-width: ' + strokeWidth + 'px;\n      transform-origin: center;\n    ';
});

var Svg = styled.svg(_templateObject5, svgStyles);
Svg.displayName = 'SpinnerSvg';
export default Svg;