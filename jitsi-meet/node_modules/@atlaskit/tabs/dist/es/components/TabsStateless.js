import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import _PropTypes from 'prop-types';

/* eslint-disable react/sort-comp */
import React, { PureComponent } from 'react';

import TabsNav from './TabsNav';
import { TabPane, Tabs } from '../styled';

var TabsStateless = function (_PureComponent) {
  _inherits(TabsStateless, _PureComponent);

  function TabsStateless() {
    _classCallCheck(this, TabsStateless);

    return _possibleConstructorReturn(this, _PureComponent.apply(this, arguments));
  }

  TabsStateless.prototype.render = function render() {
    var _props = this.props,
        onKeyboardNav = _props.onKeyboardNav,
        tabs = _props.tabs;

    var selectedTabs = tabs.filter(function (tab) {
      return tab.isSelected;
    });
    var selectedTab = selectedTabs.length ? React.createElement(
      TabPane,
      { role: 'tabpanel' },
      selectedTabs[0].content
    ) : null;

    return React.createElement(
      Tabs,
      null,
      React.createElement(TabsNav, { onKeyboardNav: onKeyboardNav, tabs: tabs }),
      selectedTab
    );
  };

  return TabsStateless;
}(PureComponent);

TabsStateless.propTypes = {
  /** Handler for navigation using the keyboard buttons. */onKeyboardNav: _PropTypes.func.isRequired /** The tabs to display, with content being hidden unless the tab is selected. */,
  tabs: _PropTypes.arrayOf(_PropTypes.shape({
    content: _PropTypes.any,
    isSelected: _PropTypes.bool,
    label: _PropTypes.string.isRequired,
    onSelect: _PropTypes.func.isRequired
  }))
};
TabsStateless.defaultProps = { tabs: [] };
export default TabsStateless;