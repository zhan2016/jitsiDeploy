'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports.Button = undefined;

var _taggedTemplateLiteral2 = require('babel-runtime/helpers/taggedTemplateLiteral');

var _taggedTemplateLiteral3 = _interopRequireDefault(_taggedTemplateLiteral2);

var _templateObject = (0, _taggedTemplateLiteral3.default)(['\n  align-items: center;\n  appearance: none;\n  background: none;\n  border: none;\n  border-radius: ', ';\n  color: ', ';\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n\n  &:focus {\n    box-shadow: 0 0 0 2px ', ';\n    outline: none;\n  }\n\n  &:hover {\n    color: ', ';\n\n    &:focus {\n      box-shadow: 0 0 0 2px ', ';\n      outline: none;\n    }\n  }\n\n  &::-moz-focus-inner {\n    border: 0;\n    margin: 0;\n    padding: 0;\n  }\n'], ['\n  align-items: center;\n  appearance: none;\n  background: none;\n  border: none;\n  border-radius: ', ';\n  color: ', ';\n  display: flex;\n  justify-content: center;\n  margin: 0;\n  padding: 0;\n\n  &:focus {\n    box-shadow: 0 0 0 2px ', ';\n    outline: none;\n  }\n\n  &:hover {\n    color: ', ';\n\n    &:focus {\n      box-shadow: 0 0 0 2px ', ';\n      outline: none;\n    }\n  }\n\n  &::-moz-focus-inner {\n    border: 0;\n    margin: 0;\n    padding: 0;\n  }\n']);

var _styledComponents = require('styled-components');

var _styledComponents2 = _interopRequireDefault(_styledComponents);

var _theme = require('@atlaskit/theme');

var _constants = require('../constants');

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

var focusColor = (0, _theme.themed)({ light: _theme.colors.R300, dark: _theme.colors.R200 });

// NOTE:
// "-moz-focus-inner" removes some inbuilt padding that Firefox adds (taken from reduced-ui-pack)
// the focus ring is red unless combined with hover, then uses default blue
var Button = exports.Button = _styledComponents2.default.button(_templateObject, function (_ref) {
  var isRounded = _ref.isRounded;
  return isRounded ? _constants.buttonWidthUnitless / 2 + 'px' : (0, _theme.borderRadius)() + 'px';
}, _theme.colors.N500, focusColor, _theme.colors.R500, _constants.focusRingColor);