import _extends from 'babel-runtime/helpers/extends';
import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent } from 'react';
import { Link, Text } from './styled';

var Content = function (_PureComponent) {
  _inherits(Content, _PureComponent);

  function Content() {
    _classCallCheck(this, Content);

    return _possibleConstructorReturn(this, (Content.__proto__ || _Object$getPrototypeOf(Content)).apply(this, arguments));
  }

  _createClass(Content, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          children = _props.children,
          href = _props.href,
          isFocused = _props.isFocused,
          isRemovable = _props.isRemovable,
          markedForRemoval = _props.markedForRemoval,
          color = _props.color;

      var styledProps = { isFocused: isFocused, isRemovable: isRemovable, markedForRemoval: markedForRemoval, color: color };

      return href ? React.createElement(
        Link,
        _extends({}, styledProps, { href: href, tabIndex: '-1' }),
        children
      ) : React.createElement(
        Text,
        styledProps,
        children
      );
    }
  }]);

  return Content;
}(PureComponent);

export default Content;