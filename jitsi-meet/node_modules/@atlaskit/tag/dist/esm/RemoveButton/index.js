import _Object$getPrototypeOf from 'babel-runtime/core-js/object/get-prototype-of';
import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _createClass from 'babel-runtime/helpers/createClass';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent } from 'react';
import RemoveIcon from '@atlaskit/icon/glyph/cross';
import { Button } from './styled';

var RemoveButton = function (_PureComponent) {
  _inherits(RemoveButton, _PureComponent);

  function RemoveButton() {
    var _ref;

    var _temp, _this, _ret;

    _classCallCheck(this, RemoveButton);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, (_ref = RemoveButton.__proto__ || _Object$getPrototypeOf(RemoveButton)).call.apply(_ref, [this].concat(args))), _this), _this.onKeyPress = function (e) {
      var spacebarOrEnter = e.key === ' ' || e.key === 'Enter';

      if (spacebarOrEnter) {
        e.stopPropagation();

        if (_this.props.onRemoveAction) {
          _this.props.onRemoveAction();
        }
      }
    }, _this.onMouseOver = function () {
      if (_this.props.onHoverChange) _this.props.onHoverChange(true);
    }, _this.onMouseOut = function () {
      if (_this.props.onHoverChange) _this.props.onHoverChange(false);
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  _createClass(RemoveButton, [{
    key: 'render',
    value: function render() {
      var _props = this.props,
          isRounded = _props.isRounded,
          onRemoveAction = _props.onRemoveAction,
          removeText = _props.removeText;


      return React.createElement(
        Button,
        {
          'aria-label': removeText,
          isRounded: isRounded,
          onClick: onRemoveAction,
          onKeyPress: this.onKeyPress,
          onMouseOut: this.onMouseOut,
          onMouseOver: this.onMouseOver,
          type: 'button'
        },
        React.createElement(RemoveIcon, { label: removeText, size: 'small' })
      );
    }
  }]);

  return RemoveButton;
}(PureComponent);

export default RemoveButton;