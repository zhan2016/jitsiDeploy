'use strict';

Object.defineProperty(exports, "__esModule", {
  value: true
});

var _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };

var _react = require('react');

var _react2 = _interopRequireDefault(_react);

var _icon = require('@atlaskit/icon');

var _icon2 = _interopRequireDefault(_icon);

function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }

function _objectWithoutProperties(obj, keys) { var target = {}; for (var i in obj) { if (keys.indexOf(i) >= 0) continue; if (!Object.prototype.hasOwnProperty.call(obj, i)) continue; target[i] = obj[i]; } return target; }

var Svg = function Svg(_ref) {
  var title = _ref.title,
      svgProps = _objectWithoutProperties(_ref, ['title']);

  return _react2.default.createElement(
    'svg',
    _extends({ width: '24', height: '24', viewBox: '0 0 24 24', focusable: 'false' }, svgProps, { 'aria-labelledby': 'title-ulafty1' }),
    _react2.default.createElement(
      'title',
      { id: 'title-ulafty1' },
      title
    ),
    _react2.default.createElement(
      'g',
      { fill: 'currentColor', fillRule: 'evenodd' },
      _react2.default.createElement('path', { d: 'M5 15.991c0 .007 14.005.009 14.005.009C18.999 16 19 8.009 19 8.009 19 8.002 4.995 8 4.995 8 5.001 8 5 15.991 5 15.991zM3 8.01C3 6.899 3.893 6 4.995 6h14.01C20.107 6 21 6.902 21 8.009v7.982c0 1.11-.893 2.009-1.995 2.009H4.995A2.004 2.004 0 0 1 3 15.991V8.01z', fillRule: 'nonzero', role: 'presentation' }),
      _react2.default.createElement('path', { d: 'M10.674 14.331c.36.36.941.36 1.3 0l2.758-2.763a.92.92 0 0 0-1.301-1.298l-2.108 2.11-.755-.754a.92.92 0 0 0-1.3 1.3l1.406 1.405z', role: 'presentation' })
    )
  );
};
var IssueIcon = function IssueIcon(props) {
  return _react2.default.createElement(_icon2.default, _extends({ glyph: Svg }, props));
};
exports.default = IssueIcon;