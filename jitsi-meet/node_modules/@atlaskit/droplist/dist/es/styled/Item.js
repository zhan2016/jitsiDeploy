import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n  box-shadow: 0 0 0 2px ', ' inset;\n  outline: none;\n  outline-offset: 0;\n  position: relative; /* prevents bgcolor of a hovered element from obfuscating focus ring of a focused sibling element */\n'], ['\n  box-shadow: 0 0 0 2px ', ' inset;\n  outline: none;\n  outline-offset: 0;\n  position: relative; /* prevents bgcolor of a hovered element from obfuscating focus ring of a focused sibling element */\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  &, &:hover {\n    background-color: ', ';\n    color: ', ';\n  }\n'], ['\n  &, &:hover {\n    background-color: ', ';\n    color: ', ';\n  }\n']),
    _templateObject3 = _taggedTemplateLiteral(['\n  color: ', ';\n'], ['\n  color: ', ';\n']),
    _templateObject4 = _taggedTemplateLiteral(['\n  align-items: center;\n  box-sizing: border-box;\n  color: ', ';\n  cursor: ', ';\n  display: ', ';\n  flex-wrap: nowrap;\n  font-size: ', 'px;\n  font-weight: normal;\n  padding: 0 ', 'px;\n  text-decoration: none;\n\n  &:hover {\n    background-color: ', ';\n    color: ', ';\n    text-decoration: none;\n\n    ', '\n  }\n  &:active {\n    background-color: ', ';\n    color: ', ';\n\n    ', '\n  }\n  &:focus { ', ' }\n\n  ', '\n  ', '\n  ', '\n'], ['\n  align-items: center;\n  box-sizing: border-box;\n  color: ', ';\n  cursor: ', ';\n  display: ', ';\n  flex-wrap: nowrap;\n  font-size: ', 'px;\n  font-weight: normal;\n  padding: 0 ', 'px;\n  text-decoration: none;\n\n  &:hover {\n    background-color: ', ';\n    color: ', ';\n    text-decoration: none;\n\n    ', '\n  }\n  &:active {\n    background-color: ', ';\n    color: ', ';\n\n    ', '\n  }\n  &:focus { ', ' }\n\n  ', '\n  ', '\n  ', '\n']),
    _templateObject5 = _taggedTemplateLiteral(['\n  ', '\n'], ['\n  ', '\n']),
    _templateObject6 = _taggedTemplateLiteral(['\n  display: flex;\n  margin: 0 2px;\n'], ['\n  display: flex;\n  margin: 0 2px;\n']),
    _templateObject7 = _taggedTemplateLiteral(['\n  display: flex;\n'], ['\n  display: flex;\n']),
    _templateObject8 = _taggedTemplateLiteral(['\n  align-items: center;\n  display: flex;\n'], ['\n  align-items: center;\n  display: flex;\n']),
    _templateObject9 = _taggedTemplateLiteral(['\n  display: flex;\n  flex-direction: column;\n  margin: 0 ', 'px;\n  padding: ', 'px 0;\n  overflow: hidden;\n\n  &:first-child { margin: 0; }\n'], ['\n  display: flex;\n  flex-direction: column;\n  margin: 0 ', 'px;\n  padding: ', 'px 0;\n  overflow: hidden;\n\n  &:first-child { margin: 0; }\n']),
    _templateObject10 = _taggedTemplateLiteral(['\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  ', '\n'], ['\n  flex: 1 1 auto;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  white-space: nowrap;\n  ', '\n']),
    _templateObject11 = _taggedTemplateLiteral(['white-space: normal;'], ['white-space: normal;']),
    _templateObject12 = _taggedTemplateLiteral(['\n  color: ', ';\n  flex: 1 1 auto;\n  font-size: 12px;\n  line-height: 16 / 12;\n  margin-top: ', 'px;\n'], ['\n  color: ', ';\n  flex: 1 1 auto;\n  font-size: 12px;\n  line-height: 16 / 12;\n  margin-top: ', 'px;\n']);

import styled, { css } from 'styled-components';
import { colors, fontSize, gridSize, math, themed } from '@atlaskit/theme';

var activeBackgroundColor = themed({ light: colors.B75, dark: colors.DN30 });
var hoverBackgroundColor = themed({ light: colors.N20, dark: colors.DN60 });
var selectedBackgroundColor = themed({ light: colors.N0, dark: colors.DN30 });

var activePrimaryTextColor = themed({ light: colors.N800, dark: colors.DN300 });
var defaultPrimaryTextColor = themed({ light: colors.N800, dark: colors.DN600 });
var disabledPrimaryTextColor = themed({ light: colors.N70, dark: colors.DN70 });
var primaryPrimaryTextColor = themed({ light: colors.B400, dark: colors.B400 });
var selectedPrimaryTextColor = themed({ light: colors.N800, dark: colors.N800 });

var focusedStyles = css(_templateObject, themed({ light: colors.B100, dark: colors.B75 }));

var activeStyles = css(_templateObject2, selectedBackgroundColor, selectedPrimaryTextColor);
var primaryStyles = css(_templateObject3, primaryPrimaryTextColor);

var sharedStyles = function sharedStyles(props) {
  return css(_templateObject4, props.isDisabled ? disabledPrimaryTextColor : defaultPrimaryTextColor, props.isDisabled ? 'not-allowed' : 'pointer', props.isHidden ? 'none' : 'flex', fontSize, math.multiply(gridSize, 1.5), !props.isDisabled && hoverBackgroundColor, props.isDisabled ? disabledPrimaryTextColor : defaultPrimaryTextColor, props.isPrimary && primaryStyles, !props.isDisabled && activeBackgroundColor, !props.isDisabled && activePrimaryTextColor, props.isPrimary && primaryStyles, focusedStyles, props.isFocused && focusedStyles, props.isActive && activeStyles, props.isPrimary && primaryStyles);
};

export var Anchor = styled.a(_templateObject5, function (props) {
  return sharedStyles(props);
});
export var Span = styled.span(_templateObject5, function (props) {
  return sharedStyles(props);
});

// Checkbox/Radio wrapper -- sits left of the children
export var InputWrapper = styled.span(_templateObject6);

// Elements injected before/after the children
export var Before = styled.span(_templateObject7);
export var After = styled.span(_templateObject8);

// Alignment and layout for the children
export var ContentWrapper = styled.span(_templateObject9, gridSize, gridSize);
export var Content = styled.span(_templateObject10, function (props) {
  return props.allowMultiline && css(_templateObject11);
});

// Description is a block element below the children, like a subtitle
export var Description = styled.span(_templateObject12, colors.subtleText, math.divide(gridSize, 2));

// NOTE: Exposed as a named export for this package
export var SecondaryText = styled.span(_templateObject3, colors.subtleText);