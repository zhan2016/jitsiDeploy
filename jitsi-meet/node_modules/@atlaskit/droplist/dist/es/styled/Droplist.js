import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';
import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';

var _templateObject = _taggedTemplateLiteral(['\n  display: inline-flex;\n\n  ', '\n'], ['\n  display: inline-flex;\n\n  ', '\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  0 ', 'px ', 'px -', 'px ', ',\n  0 0 1px ', '\n'], ['\n  0 ', 'px ', 'px -', 'px ', ',\n  0 0 1px ', '\n']),
    _templateObject3 = _taggedTemplateLiteral(['\n  background: ', ';\n  border-radius: ', 'px;\n  box-shadow: ', ';\n  box-sizing: border-box;\n  overflow: auto;\n  padding: ', 'px 0;\n  max-height: ', ';\n'], ['\n  background: ', ';\n  border-radius: ', 'px;\n  box-shadow: ', ';\n  box-sizing: border-box;\n  overflow: auto;\n  padding: ', 'px 0;\n  max-height: ', ';\n']),
    _templateObject4 = _taggedTemplateLiteral(['\n  display: flex;\n  justify-content: center;\n  min-width: ', 'px;\n  padding: ', 'px;\n'], ['\n  display: flex;\n  justify-content: center;\n  min-width: ', 'px;\n  padding: ', 'px;\n']),
    _templateObject5 = _taggedTemplateLiteral(['\n  cursor: pointer;\n  display: inline-flex;\n  transition-duration: 0.2s;\n  transition: box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38);\n\n  ', '\n'], ['\n  cursor: pointer;\n  display: inline-flex;\n  transition-duration: 0.2s;\n  transition: box-shadow 0.15s cubic-bezier(0.47, 0.03, 0.49, 1.38);\n\n  ', '\n']);

import styled, { css } from 'styled-components';
import { borderRadius, colors, gridSize, math, themed } from '@atlaskit/theme';

/* When dropdown contains more than 9 elements (droplist items, droplist groups),
 * it should have scroll and cut off half of the 10th item to indicate that there are more
 * items then are seen. This was previously calculated by mapping over children, but with
 * the current composed API it is simpler to just assume 9 items. */
var getMaxHeight = function getMaxHeight(_ref) {
  var isTall = _ref.isTall,
      maxHeight = _ref.maxHeight,
      rest = _objectWithoutProperties(_ref, ['isTall', 'maxHeight']);

  if (maxHeight) return maxHeight + 'px';

  var heightWithoutPadding = 17;
  var verticalPadding = gridSize(rest);
  var height = heightWithoutPadding + verticalPadding * 2;
  var defaultMaxHeight = 9.5 * height + verticalPadding / 2;

  return isTall ? 'none' : defaultMaxHeight + 'px';
};

export default styled.div(_templateObject, function (props) {
  return props.fit && '\n    display: block;\n    flex: 1 1 auto;\n  ';
});

var backgroundColor = themed({ light: colors.N0, dark: colors.DN50 });
var boxShadow = css(_templateObject2, math.divide(gridSize, 2), gridSize, math.divide(gridSize, 4), colors.N50A, colors.N60A);

export var Content = styled.div(_templateObject3, backgroundColor, borderRadius, boxShadow, math.divide(gridSize, 2), getMaxHeight);

export var SpinnerContainer = styled.div(_templateObject4, math.multiply(gridSize, 20), math.multiply(gridSize, 2.5));

export var Trigger = styled.div(_templateObject5, function (props) {
  return props.fit && '\n    box-sizing: border-box;\n    display: block;\n  ';
});