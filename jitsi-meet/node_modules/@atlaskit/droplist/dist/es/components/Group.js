import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import React, { PureComponent } from 'react';
import PropTypes from 'prop-types';
import Group, { Heading, HeadingText, HeadingAfter } from '../styled/Group';

var DroplistGroup = function (_PureComponent) {
  _inherits(DroplistGroup, _PureComponent);

  function DroplistGroup() {
    var _temp, _this, _ret;

    _classCallCheck(this, DroplistGroup);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.state = { ariaLabel: _this.props.heading }, _this.componentDidMount = function () {
      if (_this.props.heading || _this.props.elemAfter) {
        _this.setState({ ariaLabel: _this.getAriaLabel() });
      }
    }, _this.componentDidUpdate = function () {
      if (_this.props.heading || _this.props.elemAfter) {
        _this.setState({ ariaLabel: _this.getAriaLabel() });
      }
    }, _this.getAriaLabel = function () {
      var _this$props = _this.props,
          elemAfter = _this$props.elemAfter,
          heading = _this$props.heading;

      var afterText = elemAfter && typeof elemAfter === 'string' ? elemAfter : _this.headingElement && _this.headingElement.textContent;

      return heading + ' ' + (afterText || '');
    }, _temp), _possibleConstructorReturn(_this, _ret);
  }

  DroplistGroup.prototype.render = function render() {
    var _this2 = this;

    var _props = this.props,
        children = _props.children,
        elemAfter = _props.elemAfter,
        heading = _props.heading;
    var ariaLabel = this.state.ariaLabel;


    return React.createElement(
      Group,
      { 'aria-label': ariaLabel, role: 'group' },
      heading ? React.createElement(
        Heading,
        { 'aria-hidden': 'true', 'data-role': 'droplistGroupHeading' },
        React.createElement(
          HeadingText,
          null,
          heading
        ),
        elemAfter ? React.createElement(
          HeadingAfter,
          { innerRef: function innerRef(r) {
              return _this2.headingElement = r;
            } },
          elemAfter
        ) : null
      ) : null,
      children
    );
  };

  return DroplistGroup;
}(PureComponent);

DroplistGroup.propTypes = {
  children: PropTypes.node,
  elemAfter: PropTypes.oneOfType([PropTypes.node, PropTypes.string]),
  heading: PropTypes.string
};


DroplistGroup.displayName = 'Group';
export default DroplistGroup;