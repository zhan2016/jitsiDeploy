import _classCallCheck from 'babel-runtime/helpers/classCallCheck';
import _possibleConstructorReturn from 'babel-runtime/helpers/possibleConstructorReturn';
import _inherits from 'babel-runtime/helpers/inherits';
import _PropTypes from 'prop-types';
import React, { Children, cloneElement, PureComponent } from 'react';
import FlagAnimationWrapper from './FlagAnimationWrapper';
import Group, { SROnly, Inner } from '../styled/Group';

var FlagGroup = function (_PureComponent) {
  _inherits(FlagGroup, _PureComponent);

  function FlagGroup() {
    var _temp, _this, _ret;

    _classCallCheck(this, FlagGroup);

    for (var _len = arguments.length, args = Array(_len), _key = 0; _key < _len; _key++) {
      args[_key] = arguments[_key];
    }

    return _ret = (_temp = (_this = _possibleConstructorReturn(this, _PureComponent.call.apply(_PureComponent, [this].concat(args))), _this), _this.renderChildren = function () {
      var _this$props = _this.props,
          children = _this$props.children,
          onDismissed = _this$props.onDismissed;


      return Children.map(children, function (flag, idx) {
        var isDismissAllowed = idx === 0;
        var id = flag.props.id;


        return React.createElement(
          FlagAnimationWrapper,
          { key: id },
          cloneElement(flag, { onDismissed: onDismissed, isDismissAllowed: isDismissAllowed })
        );
      });
    }, _temp), _possibleConstructorReturn(_this, _ret);
  } // eslint-disable-line react/sort-comp

  FlagGroup.prototype.render = function render() {
    return React.createElement(
      Group,
      null,
      React.createElement(
        SROnly,
        null,
        'Flag notifications'
      ),
      React.createElement(
        Inner,
        { component: 'div' },
        this.renderChildren()
      )
    );
  };

  return FlagGroup;
}(PureComponent);

FlagGroup.propTypes = {
  /** Flag elements to be displayed. */
  children: _PropTypes.any.isRequired /** Handler which will be called when a Flag's dismiss button is clicked.
                                        * Receives the id of the dismissed Flag as a parameter.
                                        */
  ,
  onDismissed: _PropTypes.func
};
export default FlagGroup;