import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n  align-items: center;\n  color: ', ';\n  display: flex;\n  flex-shrink: 0;\n'], ['\n  align-items: center;\n  color: ', ';\n  display: flex;\n  flex-shrink: 0;\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  height: 20px;\n  margin-left: 10px;\n'], ['\n  height: 20px;\n  margin-left: 10px;\n']);

import styled from 'styled-components';
import React from 'react';
import PropTypes from 'prop-types';
import { colors } from '@atlaskit/theme';
import Spinner from '@atlaskit/spinner';
import Icon from '@atlaskit/icon/glyph/warning';

// exported for testing
export var WarningIcon = styled.div(_templateObject, colors.yellow);

// Spinner needs set height to avoid height jumping
// Also needs a margin so there is space between it and preceding text
var SpinnerParent = styled.div(_templateObject2);

var ValidationElement = function ValidationElement(_ref) {
  var isDisabled = _ref.isDisabled,
      isInvalid = _ref.isInvalid,
      isLoading = _ref.isLoading;

  if (!isDisabled && isInvalid) {
    return React.createElement(
      WarningIcon,
      null,
      React.createElement(Icon, { label: 'warning' })
    );
  }

  return isLoading ? React.createElement(
    SpinnerParent,
    null,
    React.createElement(Spinner, { size: 'small' })
  ) : null;
};

ValidationElement.propTypes = {
  isDisabled: PropTypes.bool,
  isInvalid: PropTypes.bool,
  isLoading: PropTypes.bool
};

export default ValidationElement;