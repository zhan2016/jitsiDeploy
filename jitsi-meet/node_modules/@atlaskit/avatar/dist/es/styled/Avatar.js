import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n  ', '\n  display: inline-block;\n  position: relative;\n  outline: 0;\n  ', '\n'], ['\n  ', '\n  display: inline-block;\n  position: relative;\n  outline: 0;\n  ', '\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  ', '\n'], ['\n  ', '\n']),
    _templateObject3 = _taggedTemplateLiteral(['\n  ', '\n  pointer-events: none;\n  position: absolute;\n'], ['\n  ', '\n  pointer-events: none;\n  position: absolute;\n']),
    _templateObject4 = _taggedTemplateLiteral(['\n  ', '\n  position: absolute;\n'], ['\n  ', '\n  position: absolute;\n']);

import styled from 'styled-components';
import { BORDER_WIDTH, ICON_OFFSET, SQUARE_ICON_OFFSET, ICON_SIZES } from './constants';
import { getAvatarDimensions, getInnerStyles } from './utils';

// =================================

// OUTER WRAPPER
export default styled.div(_templateObject, function (props) {
  return getAvatarDimensions(props, { includeBorderWidth: true });
}, function (p) {
  return p.stackIndex && 'z-index: ' + p.stackIndex + ';';
});

// INNER WRAPPER
export var Inner = styled.div(_templateObject2, getInnerStyles);

// PRESENCE WRAPPER
var getPresenceLayout = function getPresenceLayout(_ref) {
  var appearance = _ref.appearance,
      size = _ref.size;

  var presencePosition = appearance === 'square' ? -(BORDER_WIDTH[size] * 2) : ICON_OFFSET[size];
  var presenceSize = ICON_SIZES[size];

  return '\n    bottom: ' + presencePosition + 'px;\n    height: ' + presenceSize + 'px;\n    right: ' + presencePosition + 'px;\n    width: ' + presenceSize + 'px;\n  ';
};
export var PresenceWrapper = styled.span(_templateObject3, getPresenceLayout);

// STATUS WRAPPER
var getStatusLayout = function getStatusLayout(_ref2) {
  var appearance = _ref2.appearance,
      size = _ref2.size;

  var statusPosition = appearance === 'square' ? SQUARE_ICON_OFFSET[size] : ICON_OFFSET[size];
  var statusSize = ICON_SIZES[size];

  return '\n    height: ' + statusSize + 'px;\n    right: ' + statusPosition + 'px;\n    top: ' + statusPosition + 'px;\n    width: ' + statusSize + 'px;\n  ';
};
export var StatusWrapper = styled.span(_templateObject4, getStatusLayout);