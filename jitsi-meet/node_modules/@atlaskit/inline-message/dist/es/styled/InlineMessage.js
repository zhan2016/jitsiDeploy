import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n  display: inline-block;\n  &:focus {\n    outline: 1px solid ', ';\n  }\n'], ['\n  display: inline-block;\n  &:focus {\n    outline: 1px solid ', ';\n  }\n']),
    _templateObject2 = _taggedTemplateLiteral(['\n  align-items: center;\n  display: flex;\n  text-decoration: none;\n  ', ';\n'], ['\n  align-items: center;\n  display: flex;\n  text-decoration: none;\n  ', ';\n']),
    _templateObject3 = _taggedTemplateLiteral(['\n    color: ', ';\n    text-decoration: underline;\n  '], ['\n    color: ', ';\n    text-decoration: underline;\n  ']),
    _templateObject4 = _taggedTemplateLiteral(['\n  color: ', ';\n  font-weight: 500;\n  padding: 0 ', 'px;\n'], ['\n  color: ', ';\n  font-weight: 500;\n  padding: 0 ', 'px;\n']),
    _templateObject5 = _taggedTemplateLiteral(['\n  color: ', ';\n  padding: 0 ', 'px;\n'], ['\n  color: ', ';\n  padding: 0 ', 'px;\n']);

import styled, { css } from 'styled-components';
import { colors, themed } from '@atlaskit/theme';
import itemSpacing from './constants';

var getFocusColor = themed('appearance', {
  connectivity: { light: colors.B500, dark: colors.B200 },
  confirmation: { light: colors.G400, dark: colors.G400 },
  info: { light: colors.P500, dark: colors.P300 },
  warning: { light: colors.Y500, dark: colors.Y500 },
  error: { light: colors.R500, dark: colors.R500 }
});

export var Root = styled.div(_templateObject, getFocusColor);

export var ButtonContents = styled.div(_templateObject2, function (_ref) {
  var isHovered = _ref.isHovered;
  return isHovered && css(_templateObject3, colors.N600);
});

var getTitleColor = themed({ light: colors.N600, dark: colors.DN600 });
var getTextColor = themed({ light: colors.N300, dark: colors.DN100 });

export var Title = styled.span(_templateObject4, getTitleColor, itemSpacing);

export var Text = styled.span(_templateObject5, getTextColor, itemSpacing);