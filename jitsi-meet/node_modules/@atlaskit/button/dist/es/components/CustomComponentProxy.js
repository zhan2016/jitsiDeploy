import _objectWithoutProperties from 'babel-runtime/helpers/objectWithoutProperties';
import React from 'react';

/**
 * Styling a button is complicated and there are a number of properties which inform its appearance.
 * We want to be able to style any arbitrary component like a button, but we don't want to pass all
 * of these appearance-related props through to the component or underlying DOM node. This component
 * acts as a layer which catches the appearance-related properties so that they can be used by
 * styled-components, then passes the rest of the props on to the custom component.
 */
/* eslint-disable react/prop-types, no-unused-vars */
var CustomComponentProxy = function CustomComponentProxy(props) {
  var appearance = props.appearance,
      children = props.children,
      component = props.component,
      isActive = props.isActive,
      isDisabled = props.isDisabled,
      isFocus = props.isFocus,
      isHover = props.isHover,
      isSelected = props.isSelected,
      shouldFitContainer = props.shouldFitContainer,
      fit = props.fit,
      proxiedProps = _objectWithoutProperties(props, ['appearance', 'children', 'component', 'isActive', 'isDisabled', 'isFocus', 'isHover', 'isSelected', 'shouldFitContainer', 'fit']);

  var ProxiedComponent = component;
  return React.createElement(
    ProxiedComponent,
    proxiedProps,
    children
  );
};
/* eslint-enable */

export default CustomComponentProxy;