import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n    0% {\n      opacity: ', ';\n      top: ', 'px;\n    }\n\n    50% {\n      opacity: ', ';\n      top: ', 'px;\n    }\n\n    100% {\n      opacity: ', ';\n      top: ', 'px;\n    }\n  '], ['\n    0% {\n      opacity: ', ';\n      top: ', 'px;\n    }\n\n    50% {\n      opacity: ', ';\n      top: ', 'px;\n    }\n\n    100% {\n      opacity: ', ';\n      top: ', 'px;\n    }\n  ']),
    _templateObject2 = _taggedTemplateLiteral(['\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - ', 'px);\n  margin: 0 auto;\n  margin-top: ', 'px;\n  max-height: calc(100% - 1px);\n  max-width: calc(100% - ', 'px);\n  position: relative;\n  width: ', 'px;\n  z-index: ', ';\n\n  animation: ', ' ', 's ease-in-out;\n'], ['\n  display: flex;\n  flex-direction: column;\n  height: calc(100% - ', 'px);\n  margin: 0 auto;\n  margin-top: ', 'px;\n  max-height: calc(100% - 1px);\n  max-width: calc(100% - ', 'px);\n  position: relative;\n  width: ', 'px;\n  z-index: ', ';\n\n  animation: ', ' ', 's ease-in-out;\n']);

import styled, { keyframes } from 'styled-components';
import { akGridSizeUnitless, akZIndexModal } from '@atlaskit/util-shared-styles';
import { WIDTH_ENUM, modalAnimationDuration } from '../shared-variables';

var viewportMargin = akGridSizeUnitless * 7.5;
var doubleViewportMargin = viewportMargin * 2;
var animationDistance = akGridSizeUnitless * -2;

var getWidth = function getWidth(_ref) {
  var width = _ref.width;
  return WIDTH_ENUM.widths[width];
};

// ModalPositioner gets the isOpen prop from the root Modal component, and when this prop changes
// we fire the appropriate entry or exit animation.
// TODO: replace with styled-components animation mixin from util-shared-styles when available.
var getEntryExitAnimation = function getEntryExitAnimation(_ref2) {
  var isOpen = _ref2.isOpen;

  var topFrom = isOpen ? animationDistance : 0;
  var topMid = isOpen ? akGridSizeUnitless * 0.5 : animationDistance * 0.6;
  var topEnd = isOpen ? 0 : animationDistance;

  var opacityFrom = isOpen ? 0 : 1;
  var opacityMid = isOpen ? 0.8 : 0.2;
  var opacityTo = isOpen ? 1 : 0;

  return keyframes(_templateObject, opacityFrom, topFrom, opacityMid, topMid, opacityTo, topEnd);
};

// have to use height because of IE11 bug
// The -1px in max-height is needed for IE11/Edge.
export default styled.div(_templateObject2, doubleViewportMargin, viewportMargin, doubleViewportMargin, getWidth, akZIndexModal, getEntryExitAnimation, modalAnimationDuration);