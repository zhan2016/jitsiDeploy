import _taggedTemplateLiteral from 'babel-runtime/helpers/taggedTemplateLiteral';

var _templateObject = _taggedTemplateLiteral(['\n  height: 100%;\n  left: 0;\n  pointer-events: ', ';\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: ', ';\n'], ['\n  height: 100%;\n  left: 0;\n  pointer-events: ', ';\n  position: fixed;\n  top: 0;\n  width: 100%;\n  z-index: ', ';\n']);

import styled from 'styled-components';
import { akZIndexBlanket } from '@atlaskit/util-shared-styles';

// If the wrapper isn't open, we want `pointer-events: none` so that click events pass through
// the element. Previously we just didn't render ModalWrapper at all is isOpen === false, but now
// we need to always render the ModalWrapper because we need to always render ModalWrapper's child
// Blanket. The Blanket needs to always be rendered (even if isOpen === false) to ensure that the
// blanket opacity transition happens, rather than just appearing when isOpen === true.
export var getPointerEvents = function getPointerEvents(_ref) {
  var isOpen = _ref.isOpen;
  return isOpen ? 'initial' : 'none';
};

// Fixed container to avoid position clashing with other elements
export default styled.div(_templateObject, getPointerEvents, akZIndexBlanket);