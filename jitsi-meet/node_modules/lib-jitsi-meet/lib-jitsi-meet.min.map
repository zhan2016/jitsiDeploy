{"version":3,"sources":["webpack:///webpack/universalModuleDefinition","webpack:///webpack/bootstrap 257a7d9a32a1225f93b7","webpack:///./node_modules/jitsi-meet-logger/lib/index.js","webpack:///./modules/RTC/RTCBrowserType.js","webpack:///./node_modules/strophe.js/strophe.js","webpack:///./modules/util/GlobalOnErrorHandler.js","webpack:///./service/RTC/MediaType.js","webpack:///./modules/statistics/statistics.js","webpack:///./JitsiConferenceEvents.js","webpack:///./service/statistics/AnalyticsEvents.js","webpack:///./service/xmpp/XMPPEvents.js","webpack:///./service/RTC/RTCEvents.js","webpack:///./modules/util/Listenable.js","webpack:///./node_modules/webrtc-adapter/src/js/utils.js","webpack:///./JitsiTrackError.js","webpack:///./service/RTC/VideoType.js","webpack:///./modules/xmpp/SDPUtil.js","webpack:///./node_modules/sdp-transform/lib/index.js","webpack:///./node_modules/events/events.js","webpack:///./JitsiTrackErrors.js","webpack:///./JitsiTrackEvents.js","webpack:///./modules/settings/Settings.js","webpack:///./modules/util/RandomUtil.js","webpack:///(webpack)/buildin/global.js","webpack:///./node_modules/precalltest/dist/utility/timestamps.js","webpack:///./modules/xmpp/ConnectionPlugin.js","webpack:///./node_modules/precalltest/dist/utility/stats/detectbrowser.js","webpack:///./node_modules/bluebird/js/browser/bluebird.js","webpack:///./JitsiConnectionEvents.js","webpack:///./modules/RTC/RTC.js","webpack:///./modules/RTC/RTCUtils.js","webpack:///./modules/xmpp/SdpTransformUtil.js","webpack:///./modules/videosipgw/VideoSIPGWConstants.js","webpack:///./service/connectivity/ConnectionQualityEvents.js","webpack:///./JitsiConferenceErrors.js","webpack:///./node_modules/react-native-callstats/swPlugin.js","webpack:///./node_modules/process/browser.js","webpack:///./service/RTC/Resolutions.js","webpack:///./modules/connectivity/ParticipantConnectionStatus.js","webpack:///./modules/RTC/adapter.screenshare.js","webpack:///./node_modules/jitsi-meet-logger/lib/Logger.js","webpack:///./node_modules/timers-browserify/main.js","webpack:///./node_modules/precalltest/dist/tests/turnTest.js","webpack:///./node_modules/precalltest/dist/utility/messageMaker.js","webpack:///./modules/statistics/LocalStatsCollector.js","webpack:///./service/statistics/Events.js","webpack:///./modules/util/ScriptUtil.js","webpack:///./modules/xmpp/xmpp.js","webpack:///./JitsiConnectionErrors.js","webpack:///./JitsiTranscriptionStatus.js","webpack:///./service/authentication/AuthenticationEvents.js","webpack:///./modules/xmpp/recording.js","webpack:///./JitsiRecorderErrors.js","webpack:///./modules/xmpp/JingleSessionState.js","webpack:///./modules/xmpp/SDP.js","webpack:///./service/RTC/SignalingEvents.js","webpack:///./modules/RTC/JitsiTrack.js","webpack:///./service/RTC/CameraFacingMode.js","webpack:///./node_modules/sdp-transform/lib/grammar.js","webpack:///./node_modules/sdp/sdp.js","webpack:///./modules/transcription/audioRecorder.js","webpack:///./JitsiMediaDevicesEvents.js","webpack:///./index.js","webpack:///./JitsiMeetJS.js","webpack:///./modules/util/AuthUtil.js","webpack:///./JitsiConnection.js","webpack:///./JitsiConference.js","webpack:///./modules/statistics/AvgRTPStatsReporter.js","webpack:///./node_modules/jitsi-meet-logger/lib/LogCollector.js","webpack:///./modules/statistics/AnalyticsAdapter.js","webpack:///./modules/util/UsernameGenerator.js","webpack:///./modules/statistics/CallStats.js","webpack:///./node_modules/react-native-callstats/callstats.js","webpack:///./node_modules/react-native-callstats/callstatsUtils.js","webpack:///./node_modules/react-native-callstats/statsReporter.js","webpack:///./node_modules/react-native-callstats/slidingWindow.js","webpack:///./node_modules/react-native-callstats/swItem.js","webpack:///./node_modules/react-native-callstats/swPercentileTracker.js","webpack:///./node_modules/react-native-callstats/swPercentileNotification.js","webpack:///./node_modules/react-native-callstats/binaryTree.js","webpack:///./node_modules/react-native-callstats/swAvg.js","webpack:///./node_modules/react-native-callstats/pcCallbackHandler.js","webpack:///./node_modules/precalltest/dist/main.js","webpack:///./node_modules/precalltest/dist/turnConnection.js","webpack:///./node_modules/precalltest/dist/utility/parsedIceCandidate.js","webpack:///./node_modules/precalltest/dist/utility/stats/getstatshandler.js","webpack:///./node_modules/precalltest/dist/utility/stats/statsadapter.js","webpack:///./node_modules/setimmediate/setImmediate.js","webpack:///./node_modules/precalltest/dist/tests/rttTest.js","webpack:///./node_modules/precalltest/dist/tests/throughputTest.js","webpack:///./node_modules/precalltest/dist/utility/resultsHandler.js","webpack:///./node_modules/precalltest/dist/utility/onlineCheck.js","webpack:///./modules/statistics/RTPStatsCollector.js","webpack:///./node_modules/current-executing-script/dist/currentExecutingScript.js","webpack:///./service/statistics/constants.js","webpack:///./modules/version/ComponentsVersions.js","webpack:///./modules/connectivity/ConnectionQuality.js","webpack:///./authenticateAndUpgradeRole.js","webpack:///./node_modules/strophejs-plugin-disco/lib/strophe.disco.js","webpack:///./modules/xmpp/strophe.emuc.js","webpack:///./modules/xmpp/ChatRoom.js","webpack:///./modules/xmpp/moderator.js","webpack:///./modules/xmpp/strophe.jingle.js","webpack:///./modules/xmpp/JingleSessionPC.js","webpack:///./node_modules/async/lib/async.js","webpack:///./modules/util/StringUtils.js","webpack:///./modules/xmpp/JingleSession.js","webpack:///./modules/xmpp/SDPDiffer.js","webpack:///./modules/xmpp/SignalingLayerImpl.js","webpack:///./service/RTC/SignalingLayer.js","webpack:///./modules/xmpp/strophe.util.js","webpack:///./modules/xmpp/strophe.ping.js","webpack:///./modules/xmpp/strophe.rayo.js","webpack:///./modules/xmpp/strophe.logger.js","webpack:///./modules/xmpp/Caps.js","webpack:///./JitsiConferenceEventManager.js","webpack:///./modules/util/EventEmitterForwarder.js","webpack:///./modules/DTMF/JitsiDTMFManager.js","webpack:///./JitsiParticipant.js","webpack:///./modules/event/Jvb121EventGenerator.js","webpack:///./modules/P2PDominantSpeakerDetection.js","webpack:///./modules/RTC/BridgeChannel.js","webpack:///./modules/RTC/JitsiLocalTrack.js","webpack:///./modules/RTC/ortc/RTCPeerConnection.js","webpack:///./node_modules/yaeti/index.js","webpack:///./node_modules/yaeti/lib/EventTarget.js","webpack:///./node_modules/yaeti/lib/Event.browser.js","webpack:///./modules/RTC/ortc/RTCSessionDescription.js","webpack:///./node_modules/sdp-transform/lib/parser.js","webpack:///./node_modules/sdp-transform/lib/writer.js","webpack:///./modules/RTC/ortc/utils.js","webpack:///./modules/RTC/ortc/errors.js","webpack:///./modules/RTC/ScreenObtainer.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_core.js","webpack:///./node_modules/webrtc-adapter/src/js/adapter_factory.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/edge_shim.js","webpack:///./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js","webpack:///./node_modules/webrtc-adapter/src/js/edge/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js","webpack:///./node_modules/webrtc-adapter/src/js/safari/safari_shim.js","webpack:///./node_modules/webrtc-adapter/src/js/common_shim.js","webpack:///./modules/RTC/TraceablePeerConnection.js","webpack:///./modules/RTC/JitsiRemoteTrack.js","webpack:///./modules/RTC/LocalSdpMunger.js","webpack:///./modules/xmpp/RtxModifier.js","webpack:///./modules/xmpp/SdpConsistency.js","webpack:///./node_modules/sdp-interop/lib/index.js","webpack:///./node_modules/sdp-interop/lib/interop.js","webpack:///./node_modules/sdp-interop/lib/transform.js","webpack:///./node_modules/sdp-interop/lib/array-equals.js","webpack:///./node_modules/sdp-simulcast/lib/index.js","webpack:///./node_modules/sdp-simulcast/lib/transform-utils.js","webpack:///./modules/TalkMutedDetection.js","webpack:///./modules/transcription/transcriber.js","webpack:///./modules/transcription/recordingResult.js","webpack:///./modules/transcription/transcriptionServices/SphinxTranscriptionService.js","webpack:///./modules/transcription/transcriptionServices/AbstractTranscriptionService.js","webpack:///./modules/transcription/word.js","webpack:///./modules/videosipgw/VideoSIPGW.js","webpack:///./modules/videosipgw/JitsiVideoSIPGWSession.js","webpack:///./modules/statistics/SpeakerStatsCollector.js","webpack:///./modules/statistics/SpeakerStats.js","webpack:///./JitsiMediaDevices.js","webpack:///./modules/RTC/RTCUIHelper.js"],"names":["root","factory","exports","module","define","amd","JitsiMeetJS","self","this","e","__webpack_require__","moduleId","installedModules","i","l","modules","call","m","c","d","name","getter","o","Object","defineProperty","configurable","enumerable","get","n","__esModule","default","object","property","prototype","hasOwnProperty","p","s","t","Logger","LogCollector","idLoggers","loggers","curLevel","levels","TRACE","addGlobalTransport","transport","removeGlobalTransport","getLogger","id","transports","format","logger","push","setLogLevelById","level","length","setLevel","setLogLevel","detectChrome","navigator","webkitGetUserMedia","currentBrowser","RTCBrowserType","RTC_BROWSER_CHROME","verMatch","userAgent","match","ver","parseInt","log","detectOpera","RTC_BROWSER_OPERA","version","info","detectFirefox","mozGetUserMedia","RTC_BROWSER_FIREFOX","detectSafari","test","RTC_BROWSER_SAFARI","matchedVersionParts","versionString","detectIE","ua","window","msie","indexOf","substring","trident","rv","RTC_BROWSER_IEXPLORER","detectEdge","edge","RTC_BROWSER_EDGE","detectElectron","RTC_BROWSER_ELECTRON","detectNWJS","RTC_BROWSER_NWJS","detectReactNative","product","RTC_BROWSER_REACT_NATIVE","console","browserVersion","__WEBPACK_IMPORTED_MODULE_0_jitsi_meet_logger__","__filename","doesVideoMuteByStreamRemove","isFirefox","isEdge","isSafariWithWebrtc","getBrowserType","getBrowserName","split","isChrome","isOpera","isIExplorer","isSafari","getSafariVersion","isNWJS","isElectron","isP2PSupported","isReactNative","isTemasysPluginUsed","getIExplorerVersion","usesNewGumFlow","getChromeVersion","isVideoMuteOnConnInterruptedSupported","getFirefoxVersion","getOperaVersion","getEdgeVersion","usesPlanB","usesUnifiedPlan","supportsBandwidthStatistics","supportsDataChannels","supportsRTTStatistics","supportsSimulcast","supportsRtx","supportsRtpSender","supportsVideo","detectors","warn","__webpack_exports__","a","r","__WEBPACK_AMD_DEFINE_ARRAY__","__WEBPACK_AMD_DEFINE_RESULT__","__WEBPACK_AMD_DEFINE_FACTORY__","requirejs","require","undef","hasProp","obj","prop","hasOwn","normalize","baseName","nameParts","nameSegment","mapValue","foundMap","lastIndex","foundI","foundStarMap","starI","j","part","baseParts","map","config","starMap","nodeIdCompat","jsSuffixRegExp","replace","charAt","slice","concat","splice","join","makeRequire","relName","forceSync","args","aps","arguments","req","apply","makeLoad","depName","value","defined","callDep","waiting","defining","main","Error","splitPrefix","prefix","index","makeRelParts","makeMap","handlers","relParts","plugin","parts","relResourceName","f","pr","uri","deps","callback","cjsModule","ret","usingExports","callbackType","load","alt","setTimeout","cfg","_defined","jQuery","Function","bind","func","_slice","Array","_concat","_args","isArray","arg","toString","elt","len","from","Number","Math","ceil","floor","forEach","thisArg","T","k","TypeError","O","kValue","keyStr","btoa","input","chr1","chr2","chr3","enc1","enc2","enc3","enc4","output","charCodeAt","isNaN","atob","String","fromCharCode","core_sha1","x","olda","oldb","oldc","oldd","olde","w","b","rol","safe_add","sha1_ft","core_hmac_sha1","key","data","bkey","str2binb","ipad","opad","hash","y","lsw","num","cnt","str","bin","binb2str","binb2b64","binarray","triplet","b64_hmac_sha1","b64_sha1","str_hmac_sha1","str_sha1","SHA1","str2binl","md5_cmn","q","md5_ff","md5_gg","md5_hh","md5_ii","core_md5","hexdigest","hex_tab","MD5","utf16to8","out","addCookies","cookies","cookieName","cookieObj","isObj","cookieValue","expires","domain","path","escape","unescape","document","cookie","stropheUtils","Strophe","$build","$iq","$msg","$pres","utils","attrs","Builder","VERSION","NS","HTTPBIND","BOSH","CLIENT","AUTH","ROSTER","PROFILE","DISCO_INFO","DISCO_ITEMS","MUC","SASL","STREAM","FRAMING","BIND","SESSION","STANZAS","XHTML_IM","XHTML","tags","attributes","blockquote","br","cite","em","img","li","ol","span","strong","ul","body","css","validTag","tag","validAttribute","attribute","validCSS","style","Status","ERROR","CONNECTING","CONNFAIL","AUTHENTICATING","AUTHFAIL","CONNECTED","DISCONNECTED","DISCONNECTING","ATTACHED","REDIRECT","CONNTIMEOUT","LogLevel","DEBUG","INFO","WARN","FATAL","ElementType","NORMAL","TEXT","CDATA","FRAGMENT","TIMEOUT","SECONDARY_TIMEOUT","addNamespace","forEachChild","elem","elemName","childNode","childNodes","nodeType","isTagEqual","el","tagName","_xmlGenerator","_makeGenerator","doc","implementation","createDocument","documentMode","_getIEXmlDom","appendChild","createElement","xmlGenerator","docStrings","ActiveXObject","xmlElement","node","xmlTextNode","sort","attr","setAttribute","xmlescape","text","xmlunescape","createTextNode","xmlHtmlNode","html","DOMParser","parseFromString","async","loadXML","getText","nodeValue","copyElement","nodeName","createHtml","cssAttrs","cssName","cssValue","toLowerCase","getAttribute","cssText","createDocumentFragment","escapeNode","unescapeNode","getNodeFromJid","jid","getDomainFromJid","bare","getBareJidFromJid","getResourceFromJid","_handleError","stack","fatal","sourceURL","handler","line","message","fileName","lineNumber","msg","debug","error","serialize","result","tree","child","_requestId","_connectionPlugins","addConnectionPlugin","ptype","xmlns","nodeTree","up","parentNode","moreattrs","removeAttribute","cnode","impNode","xmlGen","importNode","newElem","h","fragment","innerHTML","xhtml","Handler","ns","type","options","matchBareFromJid","ignoreNamespaceFragment","matchBare","user","getNamespace","elNamespace","namespaceMatch","nsMatch","that","isMatch","elem_type","run","TimedHandler","period","lastCalled","Date","getTime","reset","Connection","service","proto","protocol","_proto","Websocket","Bosh","features","_sasl_data","do_session","do_bind","timedHandlers","removeTimeds","removeHandlers","addTimeds","addHandlers","protocolErrorHandlers","HTTP","websocket","_idleTimeout","_disconnectTimeout","authenticated","connected","disconnecting","do_authentication","paused","restored","_data","_uniqueId","_sasl_success_handler","_sasl_failure_handler","_sasl_challenge_handler","maxRetries","_onIdle","registerSASLMechanisms","mechanisms","F","init","_reset","_requests","pause","resume","getUniqueId","suffix","uuid","random","addProtocolErrorHandler","status_code","connect","pass","wait","hold","route","authcid","authzid","servtype","connect_callback","_changeConnectStatus","_connect","attach","sid","rid","wind","_attach","restore","_sessionCachingSupported","_restore","JSON","sessionStorage","setItem","removeItem","xmlInput","xmlOutput","rawInput","rawOutput","nextValidRid","send","_queueData","_send","flush","clearTimeout","sendPresence","errback","timeout","timeoutHandler","addHandler","stanza","deleteTimedHandler","addTimedHandler","deleteHandler","sendIQ","iqtype","element","_sendRestart","thand","handRef","hand","SASLAnonymous","SASLExternal","SASLMD5","SASLOAuthBearer","SASLPlain","SASLSHA1","registerSASLMechanism","mechanism","disconnect","reason","pres","_addSysTimedHandler","_onDisconnectTimeout","_disconnect","_abortAllRequests","_doDisconnect","status","condition","statusChanged","err","_dataRecv","raw","_reqToData","strip","pop","_emptyQueue","cond","conflict","getElementsByTagName","newList","_connect_cb","_callback","bodyWrap","getElementsByTagNameNS","mech","matched","authenticate","_no_auth_received","sortMechanismsByPriority","higher","swap","priority","_attemptSASLAuth","mechanism_found","_addSysHandler","_sasl_success_cb","_sasl_failure_cb","_sasl_challenge_cb","_sasl_mechanism","onStart","request_auth_exchange","isClientFirst","response","onChallenge","_attemptLegacyAuth","_auth1_cb","to","challenge","iq","_auth2_cb","serverSignature","attribMatch","matches","onSuccess","streamfeature_handlers","wrapper","_sasl_auth1_cb","_sasl_bind_cb","resource","jidNode","_sasl_session_cb","onFailure","now","SASLMechanism","connection","_connection","auth_str","test_cnonce","cnonce","nonce","salt","iter","Hi","U","U_old","clientKey","serverKey","clientSignature","responseText","authMessage","substr","_quote","realm","host","digest_uri","cred","A1","A2","core","Request","sends","xmlData","origFunc","date","NaN","abort","dead","age","timeDead","xhr","_newXHR","getResponse","responseXML","documentElement","XMLHttpRequest","overrideMimeType","onreadystatechange","_conn","errors","inactivity","_buildBody","keepalive","_cacheSession","xml:lang","content","xmpp:version","xmlns:xmpp","_onRequestStateChange","_throttledRequestHandler","session","parse","getItem","stringify","typ","_sendTerminate","_callProtocolErrorHandlers","err_callback","reqStatus","_getRequestStatus","_hitError","xmpp:restart","time_elapsed","def","readyState","valid_request","too_many_retries","_removeRequest","reqIs0","_restartRequest","_processRequest","primaryTimeout","secondaryTimeout","requestCompletedWithServerError","contentType","open","sync","setRequestHeader","withCredentials","e2","sendFunc","customHeaders","headers","header","backoff","min","pow","abs","new_service","location","pathname","_buildStream","_check_streamerror","connectstatus","textContent","errorString","_closeSocket","socket","WebSocket","onopen","_onOpen","onerror","_onError","onclose","_onClose","onmessage","_connect_cb_wrapper","_handleStreamStart","streamStart","see_uri","string","_streamWrap","_onMessage","CLOSED","close","closeString","code","rawStanza","search","firstChild","start","startString","oldOnErrorHandler","oldOnUnhandledRejection","onunhandledrejection","_len","_key","event","GlobalOnErrorHandler","callErrorHandler","errHandler","callUnhandledRejectionHandler","VIDEO","AUDIO","_initCallStatsBackend","__WEBPACK_IMPORTED_MODULE_3__CallStats__","isBackendInitialized","userName","__WEBPACK_IMPORTED_MODULE_7__settings_Settings__","callStatsUserName","initBackend","callStatsID","callStatsSecret","swapUserNameAndAlias","callStatsAliasName","aliasName","applicationName","getWiFiStatsMethod","Statistics","xmpp","rtpStatsMap","Map","eventEmitter","__WEBPACK_IMPORTED_MODULE_0_events___default","callStatsIntegrationEnabled","disableThirdPartyRequests","__WEBPACK_IMPORTED_MODULE_6__RTC_RTCBrowserType__","isCallstatsLoaded","__WEBPACK_IMPORTED_MODULE_8__util_ScriptUtil___default","loadScript","customScriptUrl","callStatsConfIDNamespace","callsStatsInstances","instances","add","_","u","v","_instances","audioLevelsEnabled","disableAudioLevels","audioLevelsInterval","analytics","__WEBPACK_IMPORTED_MODULE_2__AnalyticsAdapter__","Set","startRemoteStats","peerconnection","stopRemoteStats","rtpStats","__WEBPACK_IMPORTED_MODULE_5__RTPStatsCollector__","set","localStats","startLocalStats","stream","__WEBPACK_IMPORTED_MODULE_4__LocalStatsCollector__","addAudioLevelListener","listener","on","__WEBPACK_IMPORTED_MODULE_10__service_statistics_Events__","removeAudioLevelListener","removeListener","addBeforeDisposedListener","removeBeforeDisposedListener","addConnectionStatsListener","removeConnectionStatsListener","addByteSentStatsListener","removeByteSentStatsListener","dispose","size","emit","_iteratorNormalCompletion","_didIteratorError","_iteratorError","_step","_iterator","values","Symbol","iterator","next","done","callStats","stopCallStats","tpc","return","_iteratorNormalCompletion2","_didIteratorError2","_iteratorError2","_step2","_iterator2","keys","tpcId","_stopRemoteStats","removeAllListeners","delete","stopLocalStats","stop","startCallStats","remoteUserID","has","newInstance","confID","_getCallStatsConfID","_getAllCallStatsInstances","csInstances","_iteratorNormalCompletion3","_didIteratorError3","_iteratorError3","_step3","_iterator3","statistics","_iteratorNormalCompletion4","_didIteratorError4","_iteratorError4","_step4","_iterator4","cs","roomName","callStatsInstance","sendTerminateEvent","isCallstatsEnabled","sendConnectionResumeOrHoldEvent","isResume","instance","sendResumeOrHoldEvent","sendIceConnectionFailedEvent","sendEvent","__WEBPACK_IMPORTED_MODULE_1__service_statistics_AnalyticsEvents__","sendMuteEvent","muted","sendScreenSharingEvent","ssrc","_iteratorNormalCompletion5","_didIteratorError5","_iteratorError5","_step5","_iterator5","sendDominantSpeakerEvent","_iteratorNormalCompletion6","_didIteratorError6","_iteratorError6","_step6","_iterator6","sendActiveDeviceListEvent","devicesData","globalSet","_iteratorNormalCompletion7","_didIteratorError7","_iteratorError7","_step7","_iterator7","associateStreamWithVideoTag","isLocal","userId","usageLabel","containerId","sendGetUserMediaFailed","__WEBPACK_IMPORTED_MODULE_9__JitsiTrackError__","gum","constraintName","constraints","_iteratorNormalCompletion8","_didIteratorError8","_iteratorError8","_step8","_iterator8","sendCreateOfferFailed","sendCreateAnswerFailed","sendSetLocalDescFailed","sendSetRemoteDescFailed","sendAddIceCandidateFailed","sendLog","globalSubSet","_iteratorNormalCompletion9","_didIteratorError9","_iteratorError9","_step9","_iterator9","stats","_iteratorNormalCompletion10","_didIteratorError10","_iteratorError10","_step10","_iterator10","csPerStats","sendApplicationLog","sendFeedback","overall","detailed","LOCAL_JID","reportGlobalError","sendEventToAll","eventName","USER_STATUS_CHANGED","AUTH_STATUS_CHANGED","AVAILABLE_DEVICES_CHANGED","AVATAR_CHANGED","BEFORE_STATISTICS_DISPOSED","CONFERENCE_ERROR","CONFERENCE_FAILED","CONFERENCE_JOINED","CONFERENCE_LEFT","CONNECTION_INTERRUPTED","CONNECTION_RESTORED","DATA_CHANNEL_OPENED","DISPLAY_NAME_CHANGED","DOMINANT_SPEAKER_CHANGED","DTMF_SUPPORT_CHANGED","ENDPOINT_MESSAGE_RECEIVED","JVB121_STATUS","KICKED","LAST_N_ENDPOINTS_CHANGED","LOCK_STATE_CHANGED","MESSAGE_RECEIVED","PARTICIPANT_CONN_STATUS_CHANGED","PARTCIPANT_FEATURES_CHANGED","PARTICIPANT_PROPERTY_CHANGED","P2P_STATUS","PHONE_NUMBER_CHANGED","RECORDER_STATE_CHANGED","VIDEO_SIP_GW_AVAILABILITY_CHANGED","VIDEO_SIP_GW_SESSION_STATE_CHANGED","START_MUTED_POLICY_CHANGED","STARTED_MUTED","SUBJECT_CHANGED","SUSPEND_DETECTED","TALK_WHILE_MUTED","TRACK_ADDED","TRACK_AUDIO_LEVEL_CHANGED","TRACK_MUTE_CHANGED","TRACK_REMOVED","TRANSCRIPTION_STATUS_CHANGED","USER_JOINED","USER_LEFT","USER_ROLE_CHANGED","g","S","C","E","R","I","P","A","D","N","L","M","TRANSPORT_REPLACE_SUCCESS","_CONNECTION_TIMES_","_ICE_CHECKING_DURATION","_ICE_CONNECTION_STATE_","_ICE_ESTABLISHMENT_DURATION","_ICE_GATHERING_DURATION","_NO_DATA_FROM_SOURCE","_TRACK_UNMUTE","_TTFM_","AVG_RTP_STATS","BRIDGE_DOWN","CONFERENCE_ERROR_","CONNECTION_DISCONNECTED_","CONNECTION_FAILED_","DATA_CHANNEL_OPEN","DEVICE_LIST","FEEDBACK","FOCUS_LEFT","GET_USER_MEDIA_DEVICE_NOT_FOUND_","GET_USER_MEDIA_FAIL_","GET_USER_MEDIA_FAILED_","GET_USER_MEDIA_SUCCESS_","GET_USER_MEDIA_USER_CANCEL_","ICE_ESTABLISHMENT_DURATION_DIFF","ICE_FAILED","P2P_ESTABLISHED","P2P_FAILED","P2P_SWITCH_TO_JVB","REMOTELY_MUTED","SESSION_INITIATE","SESSION_INITIATE_RECEIVED","SESSION_TERMINATE","SESSION_RESTART","TRANSPORT_REPLACE_START","ADD_ICE_CANDIDATE_FAILED","AUDIO_MUTED_BY_FOCUS","AUTHENTICATION_REQUIRED","CALL_ACCEPTED","CALL_INCOMING","CALL_ENDED","CHAT_ERROR_RECEIVED","CONFERENCE_SETUP_FAILED","CONNECTION_ESTABLISHED","CONNECTION_FAILED","CONNECTION_ICE_FAILED","EMUC_ROOM_ADDED","EMUC_ROOM_REMOVED","ETHERPAD","FOCUS_DISCONNECTED","GRACEFUL_SHUTDOWN","ICE_RESTARTING","JINGLE_ERROR","JINGLE_FATAL_ERROR","LOCAL_ROLE_CHANGED","MUC_DESTROYED","MUC_JOINED","MUC_MEMBER_JOINED","MUC_MEMBER_LEFT","MUC_LEFT","MUC_ROLE_CHANGED","MUC_LOCK_CHANGED","PARTICIPANT_AUDIO_MUTED","PARTICIPANT_VIDEO_MUTED","PARTICIPANT_VIDEO_TYPE_CHANGED","PASSWORD_REQUIRED","PEERCONNECTION_READY","PRESENCE_STATUS","PROMPT_FOR_LOGIN","READY_TO_JOIN","REMOTE_STATS","RESERVATION_ERROR","ROOM_CONNECT_ERROR","ROOM_CONNECT_NOT_ALLOWED_ERROR","ROOM_JOIN_ERROR","ROOM_MAX_USERS_ERROR","SENDING_CHAT_MESSAGE","SESSION_ACCEPT_TIMEOUT","START_MUTED_FROM_FOCUS","TRANSPORT_INFO","ICE_CONNECTION_STATE_CHANGED","JSON_MESSAGE_RECEIVED","CREATE_ANSWER_FAILED","CREATE_OFFER_FAILED","RTC_READY","ENDPOINT_CONN_STATUS_CHANGED","LASTN_ENDPOINT_CHANGED","LASTN_VALUE_CHANGED","LOCAL_TRACK_SSRC_UPDATED","TRACK_ATTACHED","REMOTE_TRACK_ADDED","REMOTE_TRACK_MUTE","REMOTE_TRACK_REMOVED","REMOTE_TRACK_UNMUTE","SET_LOCAL_DESCRIPTION_FAILED","SET_REMOTE_DESCRIPTION_FAILED","AUDIO_OUTPUT_DEVICE_CHANGED","DEVICE_LIST_CHANGED","DEVICE_LIST_AVAILABLE","LOCAL_UFRAG_CHANGED","REMOTE_UFRAG_CHANGED","writable","Listenable","addEventListener","addListener","removeEventListener","off","logDisabled_","deprecationWarnings_","disableLog","bool","disableWarnings","deprecated","oldMethod","newMethod","extractVersion","uastring","expr","pos","detectBrowser","browser","webkitRTCPeerConnection","mediaDevices","shimCreateObjectURL","JitsiTrackError","devices","_typeof","__WEBPACK_IMPORTED_MODULE_0__JitsiTrackErrors__","PERMISSION_DENIED","TRACK_ERROR_TO_MESSAGE_MAP","NOT_FOUND","constraint","video","UNSUPPORTED_RESOLUTION","failedConstraintName","mandatory","minWidth","minHeight","CONSTRAINT_FAILED","GENERAL","FIREFOX_EXTENSION_NEEDED","CHROME_EXTENSION_INSTALLATION_ERROR","CHROME_EXTENSION_USER_GESTURE_REQUIRED","CHROME_EXTENSION_USER_CANCELED","CHROME_EXTENSION_GENERIC_ERROR","ELECTRON_DESKTOP_PICKER_ERROR","ELECTRON_DESKTOP_PICKER_NOT_FOUND","TRACK_IS_DISPOSED","TRACK_NO_STREAM_FOUND","NO_DATA_FROM_SOURCE","create","constructor","CAMERA","DESKTOP","SDPUtil","filterSpecialChars","iceparams","mediadesc","sessiondesc","pwd","ufrag","findLine","parseICEUfrag","parseICEPwd","buildICEUfrag","frag","buildICEPwd","parseMID","parseMLine","media","shift","port","fmt","buildMLine","mline","parseRTPMap","clockrate","channels","parseSCTPMap","buildRTPMap","parseCrypto","parseFingerprint","fingerprint","parseFmtp","parseICECandidate","candidate","elems","foundation","component","ip","generation","tcptype","network","buildICECandidate","cand","hasOwnAttribute","parseSSRC","desc","lines","parseRTCPFB","pt","params","parseExtmap","direction","haystack","needle","sessionpart","findLines","needles","candidateToJingle","candidateFromJingle","__WEBPACK_IMPORTED_MODULE_2__RTC_RTCBrowserType__","parsePrimaryVideoSsrc","videoMLine","numSsrcs","ssrcs","ssrcInfo","filter","array","numGroups","ssrcGroups","primarySsrc","fidGroup","find","group","semantics","simGroup","generateSsrc","__WEBPACK_IMPORTED_MODULE_1__util_RandomUtil___default","randomInt","getSsrcAttribute","mLine","attributeName","ssrcLine","parseGroupSsrcs","ssrcGroup","ssrcStr","getMedia","sdp","getUfrag","ufragLines","startsWith","preferVideoCodec","codecName","payloadType","rtp","codec","payload","payloadTypes","payloads","payloadIndex","unshift","stripVideoCodec","removePts","rtxApts","item","rtxPts","fmtp","keepPts","rtcpFb","parser","writer","write","parseFmtpConfig","parseParams","parsePayloads","parseRemoteCandidates","parseImageAttributes","parseSimulcastStreamList","EventEmitter","_events","_maxListeners","isFunction","isObject","isUndefined","defaultMaxListeners","setMaxListeners","er","listeners","context","newListener","warned","trace","once","fired","list","position","listenerCount","evlistener","emitter","LOCAL_TRACK_STOPPED","TRACK_AUDIO_OUTPUT_CHANGED","TRACK_VIDEOTYPE_CHANGED","getLocalStorage","storage","localStorage","_p8","_callStatsUserName","_machineId","username","__WEBPACK_IMPORTED_MODULE_1__util_UsernameGenerator___default","generateUsername","machineId","jitsiMeetId","sessionId","max","randomElement","arr","RandomUtil","randomHexDigit","randomHexString","randomAlphanumStr","eval","getCurrent","performance","timing","navigationStart","getConnectionPluginDefinition","base","_class","_classCallCheck","_base","_class2","_ref","_this","__proto__","getPrototypeOf","_createClass","ConnectionPluginListenable","__WEBPACK_IMPORTED_MODULE_0__util_Listenable__","detect","Constants","browserName","chrome","codeBaseType","csioReactNative","csioGetOsName","csioGetOsVer","codeBase","os","osVersion","appVersion","parseFloat","opera","safari","firefox","exec","osName","windows","mac","android","ios","process","global","setImmediate","_dereq_","1","Promise","any","promises","SomePromiseArray","promise","setHowMany","setUnwrap","_SomePromiseArray","2","Async","_customScheduler","_isTickUsed","_lateQueue","Queue","_normalQueue","_haveDrainedQueues","_trampolineEnabled","drainQueues","_drainQueues","_schedule","schedule","AsyncInvokeLater","fn","receiver","_queueTick","AsyncInvoke","AsyncSettlePromises","_pushOne","firstLineError","util","setScheduler","prev","hasCustomScheduler","enableTrampoline","disableTrampolineIfNecessary","hasDevTools","haveItemsQueued","fatalError","isNode","stderr","exit","throwLater","invokeLater","invoke","settlePromises","_settlePromises","_drainQueue","queue","./queue","./schedule","./util","3","INTERNAL","tryConvertToPromise","calledBind","rejectThis","_reject","targetRejected","promiseRejectionQueued","bindingPromise","_then","bindingResolved","_bitField","_resolveCallback","target","bindingRejected","_propagateFrom","propagateFromFunction","_boundValue","boundValueFunction","maybePromise","_target","_setBoundTo","_setOnCancel","_boundTo","_isBound","resolve","4","old","bluebird","noConflict","./promise","5","cr","callerCache","getterCache","ensureMethod","methodName","classString","caller","namedGetter","indexedGetter","getGetter","canEvaluate","isIdentifier","undefined","propertyName","maybeGetter","6","PromiseArray","apiRejection","tryCatch","errorObj","_async","break","cancel","cancellation","_warn","_isCancellable","_cancelBy","_isFollowing","_followee","_cancelBranched","parent","_cancellationParent","_setWillBeCancelled","_branchHasCancelled","_branchesRemainingToCancel","_enoughBranchesHaveCancelled","canceller","_invokeOnCancel","_cancel","_setCancelled","_cancelPromises","_length","_unsetOnCancel","_onCancelField","isPending","_isCancelled","isCancellable","isCancelled","_doInvokeOnCancel","onCancelCallback","internalOnly","_attachExtraTrace","_resultCancelled","_onCancel","_invokeInternalOnCancel","7","NEXT_FILTER","getKeys","cb","boundTo","predicateLoop","matchesPredicate","./es5","8","Context","_trace","CapturedTrace","peekContext","contextStack","longStackTraces","_promiseCreated","_pushContext","_popContext","_peekContext","deactivateLongStackTraces","activateLongStackTraces","Promise_pushContext","Promise_popContext","Promise_PeekContext","Promise_peekContext","Promise_promiseCreated","ctx","9","generatePromiseLifecycleEventObject","defaultFireEvent","cancellationExecute","executor","reject","onCancel","_attachCancellationCallback","cancellationAttachCancellationCallback","previousOnCancel","cancellationOnCancel","cancellationSetOnCancel","cancellationClearCancellationData","cancellationPropagateFrom","flags","branchesRemainingToCancel","isFulfilled","longStackTracesCaptureStackTrace","longStackTracesAttachExtraTrace","ignoreSelf","canAttachTrace","_parent","attachExtraTrace","__stackCleaned__","parsed","parseStackAndMessage","notEnumerableProp","shouldUseOwnTrace","warnings","warning","Warning","activeFireEvent","formatAndLogError","cleanStack","isTraceLine","stackFramePattern","isInternalFrame","shouldIgnore","indentStackFrames","title","isSoft","formatStack","printWarning","fireRejectionEvent","localHandler","localEventFired","formatNonError","maxChars","longStackTracesIsSupported","captureStackTrace","parseLineInfo","parseLineInfoRegex","_promisesCreated","uncycle","unhandledRejectionHandled","possiblyUnhandledRejection","getDomain","_getDomain","bluebirdFramePattern","nodeFramePattern","parseLinePattern","debugging","env","wForgottenReturn","suppressUnhandledRejections","_ensurePossibleRejectionHandled","_setRejectionIsUnhandled","_notifyUnhandledRejection","_notifyUnhandledRejectionIsHandled","_setReturnedNonUndefined","_returnedNonUndefined","_isRejectionUnhandled","_settledValue","_setUnhandledRejectionIsNotified","_unsetUnhandledRejectionIsNotified","_isUnhandledRejectionNotified","_unsetRejectionIsUnhandled","onPossiblyUnhandledRejection","domainBind","onUnhandledRejectionHandled","disableLongStackTraces","Promise_captureStackTrace","_captureStackTrace","Promise_attachExtraTrace","hasLongStackTraces","fireDomEvent","CustomEvent","dispatchEvent","domEvent","detail","cancelable","Event","createEvent","initCustomEvent","fireGlobalEvent","method","eventToObjectGenerator","promiseCreated","promiseFulfilled","promiseRejected","promiseResolved","promiseCancelled","promiseChained","unhandledRejection","rejectionHandled","globalEventFired","domEventFired","opts","warningsOption","_clearCancellationData","_execute","monitoring","_fireEvent","inherits","nodes","stackToIndex","cycleEdgeNode","currentChildLength","stacks","current","currentLastIndex","currentLastLine","commonRootMeetPoint","v8stackFramePattern","v8stackFormatter","stackTraceLimit","ignoreUntil","hasStackAfterThrow","isTTY","color","checkForgottenReturns","returnValue","handlerLine","creatorLine","traceLines","lineMatches","firstUserLine","setBounds","lastLineError","firstFileName","lastFileName","firstStackLines","lastStackLines","firstIndex","replacement","./errors","10","returner","thrower","thenReturn","throw","thenThrow","catchThrow","_reason","caught","catchReturn","_value","11","promiseAllThis","PromiseAll","PromiseReduce","reduce","all","each","mapSeries","12","subError","nameProperty","defaultMessage","SubError","OperationalError","cause","isOperational","_TypeError","_RangeError","es5","Objectfreeze","freeze","CancellationError","TimeoutError","AggregateError","RangeError","methods","indent","errorTypes","__BluebirdErrorTypes__","RejectionError","13","isES5","getDescriptor","getOwnPropertyDescriptor","names","getOwnPropertyNames","propertyIsWritable","descriptor","ObjectKeys","ObjectGetDescriptor","ObjectDefineProperty","ObjectFreeze","ObjectGetPrototypeOf","ArrayIsArray","14","PromiseMap","15","PassThroughHandlerContext","called","cancelPromise","FinallyHandlerCancelReaction","finallyHandler","checkCancel","succeed","fail","reasonOrValue","isFinallyHandler","isRejected","catchFilter","_passThrough","success","then","lastly","finally","tap","tapCatch","handlerOrPredicate","catchInstances","./catch_filter","16","Proxyable","PromiseSpawn","generatorFunction","yieldHandler","internal","_finallyPromise","_promise","_stack","_generatorFunction","_receiver","_generator","_yieldHandlers","yieldHandlers","_yieldedPromise","_cancellationPhase","_isResolved","_cleanup","_fulfill","_promiseCancelled","coroutine","returnSentinel","_continue","_promiseFulfilled","_promiseRejected","_run","_rejectCallback","traceParent","bitField","_proxy","PromiseSpawn$","generator","spawn","addYieldHandler","17","last","spread","18","MappingPromiseArray","limit","_filter","constructor$","_preservedValues","_limit","_inFlight","_queue","_asyncInit","concurrency","isFinite","_init$","_init","_values","preservedValues","_totalResolved","_resolve","booleans","19","_resolveFromSyncValue","attempt","try","20","wrapAsOperationalError","rErrorKey","markAsOriginatingFromRejection","maybeWrapAsError","multiArgs","wrapped","21","spreadAdapter","val","nodeback","successAdapter","errorAdapter","newReason","asCallback","nodeify","adapter","22","_fulfillmentHandler0","_rejectionHandler0","_promise0","_receiver0","_resolveFromExecutor","deferResolve","deferReject","fillTypes","makeSelfResolutionError","reflectHandler","PromiseInspection","UNDEFINED_BINDING","APPLY","createContext","nodebackForPromise","catch","reflect","didFulfill","didReject","_setIsFinal","toJSON","fulfillmentValue","rejectionReason","originatesFromRejection","getNewLibraryCopy","is","fromNode","fromCallback","_isFateSealed","_setAsyncGuaranteed","cast","_setFulfilled","fulfilled","rejected","internalData","haveInternalData","settler","_settlePromiseCtx","_settlePromiseLateCancellationObserver","_addCallbacks","_setLength","_setRejected","_setFollowing","_isFinal","_unsetCancelled","_receiverAt","_promiseAt","_fulfillmentHandlerAt","_rejectionHandlerAt","_migrateCallback0","follower","fulfill","_migrateCallbackAt","proxyable","shouldBind","_setFollowee","synchronous","ignoreNonErrorWarnings","ensureErrorObject","hasStack","_settlePromiseFromHandler","_settlePromise","isPromise","asyncGuaranteed","_settlePromise0","_clearCallbackDataAtIndex","_fulfillPromises","_rejectPromises","defer","pending","toFastProperties","./any.js","./async","./bind","./call_get.js","./cancel","./context","./debuggability","./direct_resolve","./each.js","./filter.js","./finally","./generators.js","./join","./map.js","./method","./nodeback","./nodeify.js","./promise_array","./promisify.js","./props.js","./race.js","./reduce.js","./settle.js","./some.js","./synchronous_inspection","./thenables","./timers.js","./using.js","23","resolveValueIfEmpty","asArray","_iterate","_resolveEmptyArray","getActualLength","shouldCopyValues","isResolved","24","propsFilter","noCopyPropsPattern","isPromisified","__isPromisified__","hasPromisified","getDataPropertyOrDefault","defaultPromisified","promisifiableMethods","suffixRegexp","inheritedDataKeys","passesDefaultFilter","defaultFilter","keyWithoutAsyncSuffix","promisifyAll","promisifier","RegExp","escapeIdentRegex","promisifiedKey","makeNodePromisified","THIS","promisified","withAppended","makeNodePromisifiedEval","__","defaultThis","promisify","copyDescriptors","isClass","25","PropertiesPromiseArray","entries","isMap","Es6Map","mapToEntries","_isMap","props","castValue","extractEntry","keyOffset","26","capacity","_capacity","_front","_willBeOverCapacity","_checkCapacity","wrapMask","front","_resizeTo","oldCapacity","src","srcIndex","dst","dstIndex","27","race","raceLater","28","ReductionPromiseArray","initialValue","_each","_fn","_initialValue","_currentCancellable","_eachValues","completed","valueOrReason","gotAccum","accum","_gotAccum","gotValue","_eachComplete","sender","_resultCancelled$","29","noAsyncScheduler","NativePromise","getNativePromise","MutationObserver","GlobalSetImmediate","ProcessNextTick","nextTick","isRecentNode","nativePromise","standalone","cordova","div","toggleScheduled","div2","classList","toggle","observe","30","SettledPromiseArray","_promiseResolved","inspection","_settledValueField","settle","31","_howMany","_unwrap","_initialized","some","howMany","CANCELLATION","isArrayResolved","_canPossiblyFulfill","_getRangeError","count","_addFulfilled","_fulfilled","_addRejected","_checkOutcome","_rejected","32","__isCancelled","33","34","HandleWrapper","handle","successClear","failureClear","afterValue","delay","ms","handleWrapper","35","resources","thenable","_isDisposable","_getDisposer","_setDisposable","tryDispose","Disposer","_context","FunctionDisposer","maybeUnwrapDisposer","isDisposer","ResourceList","NULL","doDispose","_unsetDisposable","using","spreadArgs","disposer","reflectedResources","resultPromise","inspections","_disposer","36","tryCatcher","tryCatchTarget","isPrimitive","maybeError","safeToString","appendee","defaultValue","hasMethods","hasMethodsOtherThanConstructor","hasThisAssignmentAndStaticMethods","thisAssignmentPattern","FakeConstructor","rident","filledRange","isError","ignore","hasEnvVariables","globalObject","Child","Parent","excludedPrototypes","isExcludedProto","visitedKeys","enumeration","ArrayFrom","itResult","it","loadTimes","versions","WRONG_STATE","CONNECTION_DISCONNECTED","assign","rtcTrackIdCounter","RTC","conference","peerConnections","peerConnectionIdCounter","localTracks","_channel","_channelOpen","_lastN","_lastNEndpoints","_pinnedEndpoint","_selectedEndpoint","_lastNChangeListener","_onLastNChanged","__WEBPACK_IMPORTED_MODULE_11__RTCUtils__","isDeviceChangeAvailable","__WEBPACK_IMPORTED_MODULE_10__service_RTC_RTCEvents___default","deviceId","_updateAudioOutputForAudioTracks","getAudioOutputDevice","__WEBPACK_IMPORTED_MODULE_7__util_Listenable__","wsUrl","_this2","__WEBPACK_IMPORTED_MODULE_1__BridgeChannel__","_channelOpenListener","sendPinnedEndpointMessage","sendSelectedEndpointMessage","__WEBPACK_IMPORTED_MODULE_2__util_GlobalOnErrorHandler___default","sendSetLastNMessage","_this3","lastNEndpoints","oldLastNEndpoints","leavingLastNEndpoints","enteringLastNEndpoints","isInLastN","__WEBPACK_IMPORTED_MODULE_3__JitsiConferenceEvents__","mode","maxFrameHeight","sendReceiverVideoConstraintMessage","signaling","iceConfig","isP2P","pcConstraints","getPCConstraints","abtestSuspendVideo","setSuspendVideo","__WEBPACK_IMPORTED_MODULE_12__statistics_statistics__","addPermanentProperties","newConnection","__WEBPACK_IMPORTED_MODULE_13__TraceablePeerConnection__","traceablePeerConnection","track","localVideo","getLocalTracks","__WEBPACK_IMPORTED_MODULE_8__service_RTC_MediaType__","localAudio","mediaType","tracks","getType","remoteTracks","pcRemoteTracks","getRemoteTracks","mutePromises","audioTrack","mute","unmute","owner","removedTracks","pcRemovedTracks","removeRemoteTracks","audioLevel","getTrackBySSRC","isAudioTrack","setAudioLevel","sendMessage","remoteAudioTracks","setAudioOutput","__WEBPACK_IMPORTED_MODULE_9__RTCBrowserType__","newObtainAudioAndVideoPermissions","obtainAudioAndVideoPermissions","tracksInfo","metaData","sourceId","sourceType","videoType","_track$getSettings","getSettings","facingMode","__WEBPACK_IMPORTED_MODULE_4__JitsiLocalTrack__","kind","rtcId","newTracks","trackInfo","micDeviceId","__WEBPACK_IMPORTED_MODULE_14__service_RTC_VideoType___default","cameraDeviceId","localTrack","_extends","_isReceivingData","__WEBPACK_IMPORTED_MODULE_5__JitsiTrackError__","__WEBPACK_IMPORTED_MODULE_6__JitsiTrackErrors__","eventType","isRTCReady","getDeviceAvailability","p2pPcConstraints","elSelector","attachMediaStream","getStreamID","getTrackID","isDeviceListAvailable","deviceType","getCurrentlyAvailableMediaDevices","device","getEventDataForActiveDevice","setAudioOutputDevice","isUserStreamById","streamId","enumerateDevices","mediaStream","stopMediaStream","isDesktopSharingEnabled","getConstraints","um","audio","isNewStyleConstraintsSupported","optional","__WEBPACK_IMPORTED_MODULE_1__service_RTC_CameraFacingMode___default","USER","minFps","maxFps","fps","minFrameRate","maxFrameRate","resolution","__WEBPACK_IMPORTED_MODULE_8__service_RTC_Resolutions___default","width","ideal","height","maxWidth","maxHeight","echoCancellation","disableAEC","disableAP","googEchoCancellation","googAutoGainControl","disableAGC","googNoiseSuppression","disableNS","googHighpassFilter","disableHPF","googNoiseSuppression2","googEchoCancellation2","googAutoGainControl2","chromeMediaSource","screen","AdapterJS","WebRTCPlugin","screensharingKey","mozMediaSource","mediaSource","errmsg","__WEBPACK_IMPORTED_MODULE_4__util_GlobalOnErrorHandler___default","chromeMediaSourceId","desktopStream","bandwidth","firefox_fake_device","fake","setAvailableDevices","audioTracksReceived","getAudioTracks","videoTracksReceived","getVideoTracks","pollForAvailableMediaDevices","rawEnumerateDevicesWithCallback","ds","currentlyAvailableMediaDevices","newDevices","mediaDeviceInfoToJSON","groupId","label","facing","onMediaDevicesListChanged","AVAILABLE_DEVICES_POLL_INTERVAL_TIME","sendDeviceListToAnalytics","deviceList","devicesPropsArray","__WEBPACK_IMPORTED_MODULE_14__statistics_statistics__","__WEBPACK_IMPORTED_MODULE_0__service_statistics_AnalyticsEvents__","devicesReceived","videoInputDevices","audioInputDevices","videoInputDevicesWithEmptyLabels","audioInputDevicesWithEmptyLabels","maybeApply","wrapGetUserMedia","getUserMedia","successCallback","errorCallback","enumerateDevicesThroughMediaStreamTrack","MediaStreamTrack","getSources","sources","convertMediaStreamTrackSource","source","defaultSetVideoSrc","srcObjectPropertyName","jitsiObjectURL","URL","webkitURL","createObjectURL","onReady","GUM","rtcReady","__WEBPACK_IMPORTED_MODULE_12__ScreenObtainer__","rtcUtils","isDeviceChangeEventSupported","wrapAttachMediaStream","origAttachMediaStream","res","audioOutputChanged","setSinkId","ex","__WEBPACK_IMPORTED_MODULE_3_jitsi_meet_logger__","__WEBPACK_IMPORTED_MODULE_2_events___default","audioOutputDeviceId","featureDetectionAudioEl","isAudioOutputDeviceChangeAvailable","DEFAULT_CONSTRAINTS","aspectRatio","RTCUtils","setPrototypeOf","__WEBPACK_IMPORTED_MODULE_6__util_Listenable__","RTCPeerConnectionType","RTCPeerConnection","foundDevices","srcObject","__WEBPACK_IMPORTED_MODULE_13__xmpp_SDPUtil__","webkitMediaStream","videoTracks","audioTracks","__WEBPACK_IMPORTED_MODULE_11__ortc_RTCPeerConnection__","jitsiRemoteId","errorMessage","webRTCReadyPromise","webRTCReady","isPluginInstalled","pluginInfo","plugName","containerSel","$","show","getUserMediaWithConstraints","_initPCConstraints","googHighStartBitrate","googPayloadPadding","googScreencastMinBitrate","googCpuOveruseDetection","googCpuOveruseEncodeUsage","googCpuUnderuseThreshold","googCpuOveruseThreshold","useIPv6","googIPv6","disableSuspendVideo","googSuspendBelowMinBitrate","failureCallback","umDevices","desktopSharingExtensionExternalInstallation","desktopSharingSources","isSupported","desktopSharingOptions","obtainStream","_this4","dsOptions","streams","audioStream","videoStream","audioVideo","NativeMediaStream","MediaStream","addTrack","desktop","_desktopStream","__WEBPACK_IMPORTED_MODULE_7__service_RTC_MediaType__","__WEBPACK_IMPORTED_MODULE_15__service_RTC_VideoType___default","deviceGUM","obtainDevices","hasDesktop","audioDeviceRequested","videoDeviceRequested","mediaStreamsMetaData","maybeRequestDesktopDevice","_newGetDesktopMedia","maybeRequestCaptureDevices","requestedCaptureDevices","_newGetUserMediaWithConstraints","avStream","Boolean","onRTCReady","_isDeviceListAvailable","getTracks","release","url","revokeObjectURL","deviceData","enable","re","parsePrimarySSRC","parseSecondarySSRC","_getSSRCCount","MLineWrap","ssrcNumber","attrName","ssrcObj","ssrcNum","primarySSRC","msid","findGroup","fecGroup","findGroupByPrimarySSRC","videoSSRCs","getSSRCs","ssrcGroupInfo","secondarySsrc","groupInfo","oldSSRC","newSSRC","SdpTransformWrap","rawSDP","parsedSDP","__WEBPACK_IMPORTED_MODULE_0_sdp_transform__","selectedMLine","ERROR_SESSION_EXISTS","STATUS_AVAILABLE","STATUS_UNDEFINED","STATUS_BUSY","STATE_ON","STATE_OFF","STATE_PENDING","STATE_RETRYING","STATE_FAILED","ERROR_NO_CONNECTION","REMOTE_STATS_UPDATED","LOCAL_STATS_UPDATED","VIDEOBRIDGE_NOT_AVAILABLE","CHAT_ERROR","CONFERENCE_DESTROYED","CONFERENCE_MAX_USERS","CONNECTION_ERROR","NOT_ALLOWED_ERROR","INCOMPATIBLE_SERVER_VERSIONS","PASSWORD_NOT_SUPPORTED","SETUP_FAILED","SWPlugin","attaches","signalListeners","mapFnc","remove","notify","addMapFnc","mapping","addSignalListener","signalName","signalize","defaultSetTimout","defaultClearTimeout","runTimeout","fun","cachedSetTimeout","cleanUpNextTick","draining","currentQueue","queueIndex","drainQueue","marker","cachedClearTimeout","Item","noop","argv","prependListener","prependOnceListener","binding","cwd","chdir","dir","umask","1080","order","fullhd","720","hd","960","360","640","vga","180","320","DEFAULT_NOT_IN_LAST_N_TIMEOUT","DEFAULT_RTC_MUTE_TIMEOUT","ParticipantConnectionStatus","ACTIVE","INACTIVE","INTERRUPTED","RESTORING","ParticipantConnectionStatusHandler","rtc","trackTimers","connStatusFromJvb","outOfLastNTimeout","rtcMuteTimeout","rtcMutedTimestamp","enteredLastNTimestamp","restoringTimers","isConnectionActiveByJvb","isRestoringTimedout","isVideoMuted","isVideoTrackFrozen","__WEBPACK_IMPORTED_MODULE_4__RTC_RTCBrowserType__","_onEndpointConnStatusChanged","onEndpointConnStatusChanged","__WEBPACK_IMPORTED_MODULE_5__service_RTC_RTCEvents___default","_onP2PStatus","refreshConnectionStatusForAll","__WEBPACK_IMPORTED_MODULE_1__JitsiConferenceEvents__","_onTrackRtcMuted","onTrackRtcMuted","_onTrackRtcUnmuted","onTrackRtcUnmuted","_onRemoteTrackAdded","onRemoteTrackAdded","_onRemoteTrackRemoved","onRemoteTrackRemoved","_onSignallingMuteChanged","onSignallingMuteChanged","_onLastNValueChanged","participantIds","participantId","clearRtcMutedTimestamp","endpointId","isActive","myUserId","figureOutConnectionStatus","participant","newStatus","getConnectionStatus","getId","_setConnectionStatus","__WEBPACK_IMPORTED_MODULE_6__statistics_statistics__","remoteTrack","__WEBPACK_IMPORTED_MODULE_3__service_RTC_MediaType__","getParticipantId","__WEBPACK_IMPORTED_MODULE_2__JitsiTrackEvents__","hasAnyVideoRTCMuted","hasAnyVideoTrackWebRTCMuted","_getVideoFrozenTimeout","participants","getParticipants","getParticipantById","inP2PMode","isP2PActive","isRestoringTimedOut","_isRestoringTimedout","audioOnlyMode","getLastN","isConnActiveByJvb","newState","_getNewStateForP2PMode","_getNewStateForJvbMode","_clearRestoringTimer","_changeConnectionStatus","leavingLastN","enteringLastN","rTimer","isMuted","onwebrtcready","isUsingPlugin","_onwebrtcreadies","onwebrtcreadyDone","pluginId","onload","portalLink","downloadLink","companyName","downloadLinks","win","platform","TAGS","NONE","pageId","defineWebRTCInterface","pluginInjectionInterval","injectPlugin","PLUGIN_STATES","INITIALIZING","INJECTING","INJECTED","READY","pluginState","PLUGIN_LOG_LEVELS","WARNING","VERBOSE","SENSITIVE","WaitForPluginReady","callWhenPluginReady","__TemWebRTCReady0","maybeThroughWebRTCReady","timer","setInterval","clearInterval","PLUGIN","REQUIRE_INSTALLATION","NOT_SUPPORTED","BUTTON","REFRESH","REQUIRE_REFRESH","_iceConnectionStates","starting","checking","disconnected","failed","closed","_iceConnectionFiredStates","isDefined","parseWebrtcDetectedBrowser","hasMatch","opr","addons","webrtcDetectedBrowser","webrtcDetectedVersion","webrtcMinimumVersion","webrtcDetectedType","webrtcDetectedDCSupport","chromiumVersion","StyleMedia","InstallTrigger","webstore","isMobile","addEvent","evnt","attachEvent","renderNotificationBar","buttonText","buttonLink","openNewTab","displayRefreshBar","top","left","right","backgroundColor","border","borderBottom","zIndex","webkitTransition","transition","contentWindow","contentDocument","getElementById","EXTENSION","preventDefault","cancelBubble","pluginInstallInterval","isIE","plugins","refresh","removeChild","webkitTransform","transform","checkMediaDataChannelSettings","peerBrowserAgent","peerBrowserVersion","beOfferer","isLocalFirefox","isLocalFirefoxInterop","isPeerFirefox","MozDontOfferDataChannel","checkIceConnectionState","peerId","iceConnectionState","createIceServer","createIceServers","RTCSessionDescription","RTCIceCandidate","reattachMediaStream","exception","time","timeEnd","groupCollapsed","groupEnd","checkPluginReadyState","logLevel","getAllCams","comName","plugType","installedCb","notInstalledCb","pluginArray","mimeTypes","variable","password","iceServer","urlParts","hasCredentials","credential","urls","iceServers","ConstructSessionDescription","servers","invalidConstraits","PEER_CONNECTION_VERSION","PeerConnection","GetSources","constraintsToPlugin","cc","exact","oldname","toUpperCase","oc","mix","advanced","requestUserMedia","kinds","enableSoundTracks","elementId","temp","classHTML","className","class","clientWidth","clientHeight","insertBefore","children","setStreamId","newElement","forwardEventHandlers","getStreamWithId","destElem","srcElem","properties","propName","subPrototype","sdpMid","ConstructIceCandidate","sdpMLineIndex","pluginNeededButNotInstalledCb","pluginNeededButNotInstalledCbPriv","hidePluginInstallPrompt","popupString","SDPUtils","generateIdentifier","localCName","splitLines","blob","trim","splitSections","matchPrefix","parseCandidate","relatedAddress","relatedPort","tcpType","writeCandidate","parseRtpMap","clockRate","numChannels","writeRtpMap","preferredPayloadType","writeExtmap","headerExtension","preferredId","kv","writeFmtp","parameters","param","parseRtcpFb","parameter","writeRtcpFb","rtcpFeedback","fb","parseSsrcMedia","sp","colon","getDtlsParameters","mediaSection","fpLine","role","fingerprints","algorithm","writeDtlsParameters","setupType","fp","getIceParameters","usernameFragment","writeIceParameters","parseRtpParameters","description","codecs","headerExtensions","fecMechanisms","rtcp","rtpmapline","fmtps","writeRtpDescription","caps","parseRtpEncodingParameters","encodingParameters","hasRed","hasUlpfec","flows","apt","encParam","codecPayloadType","rtx","fec","maxBitrate","writeSessionBoilerplate","writeMediaSection","transceiver","iceGatherer","getLocalParameters","dtlsTransport","mid","rtpSender","rtpReceiver","sendEncodingParameters","getDirection","logging","browserDetails","chromeShim","edgeShim","firefoxShim","safariShim","shimPeerConnection","browserShim","shimGetUserMedia","shimMediaStream","shimSourceObject","shimOnTrack","./chrome/chrome_shim","./edge/edge_shim","./firefox/firefox_shim","./safari/safari_shim","./utils","_ontrack","_ontrackpoly","te","HTMLMediaElement","_srcObject","pcConfig","iceTransportPolicy","iceTransports","pc","origGetStats","getStats","selector","fixChromeStats_","standardReport","report","standardStats","timestamp","stat","makeMapStats","legacyStats","successCallbackWrapper_","generateCertificate","nativeMethod","nativeAddIceCandidate","addIceCandidate","../utils.js","./getusermedia","constraintsToChrome_","oldname_","shimConstraints_","face","getSupportedConstraints","back","shimError_","PermissionDeniedError","ConstraintNotSatisfiedError","onError","getUserMediaPromise_","origGetUserMedia","RTCIceGatherer","_eventTarget","onicecandidate","onaddstream","ontrack","onremovestream","onsignalingstatechange","oniceconnectionstatechange","onnegotiationneeded","ondatachannel","localStreams","remoteStreams","getLocalStreams","getRemoteStreams","localDescription","remoteDescription","signalingState","iceGatheringState","iceOptions","gatherPolicy","usingBundle","bundlePolicy","server","transceivers","_localIceCandidatesBuffer","_emitBufferedCandidates","sections","every","state","addStream","clone","_maybeFireNegotiationNeeded","removeStream","idx","getSenders","getReceivers","_getCommonCapabilities","localCapabilities","remoteCapabilities","commonCapabilities","lCodec","rCodec","lHeaderExtension","rHeaderExtension","_createIceAndDtlsTransports","iceTransport","RTCIceTransport","onlocalcandidate","evt","end","complete","onicestatechange","_updateConnectionState","RTCDtlsTransport","ondtlsstatechange","_transceive","recv","encodings","cname","recvEncodingParameters","receive","setLocalDescription","_pendingOffer","isIceLite","isDatachannel","remoteIceParameters","cands","setRemoteCandidates","remoteDtlsParameters","_updateSignalingState","hasCallback","setRemoteDescription","receiverList","remoteSsrc","isComplete","RTCRtpReceiver","getCapabilities","RTCRtpSender","trackEvent","states","new","connecting","createOffer","offerOptions","numAudioTracks","numVideoTracks","offerToReceiveAudio","offerToReceiveVideo","wantReceive","createAnswer","addRemoteCandidate","mLineIndex","results","../utils","mozSrcObject","mozRTCPeerConnection","newIceServers","newServer","mozRTCSessionDescription","mozRTCIceCandidate","nativeGetStats","onSucc","onErr","SecurityError","The operation is insecure.","getUserMedia_","constraintsToFF37_","orgEnumerateDevices","successCb","turnUrlParts","attachMediaStream_base","reattachMediaStream_base","baseGetUserMedia","REQUIRE_INSTALLATION_FF","REQUIRE_INSTALLATION_CHROME","BUTTON_FF","BUTTON_CHROME","copy","failureCb","updatedConstraints","checkIfReady","chromeCallback","onIFrameCallback","chromeExtensionStatus","postFrameMessage","captureSourceId","HasScreensharingFeature","isScreensharingAvailable","iframe","isLoaded","display","postMessage","callerInfo","fileLocation","column","globalTransports","consoleTransport","transportIdx","LOG","Timeout","clearFn","_id","_clearFn","unref","ref","enroll","msecs","_idleTimeoutId","unenroll","_unrefActive","active","_onTimeout","clearImmediate","TurnTest","resolveCb","rejectCb","setMessageCallback","handleMessage","setErrorCallback","handleError","forceStopped","initiate","finished","randomAsciiString","MessageMaker","Timestamps","sentBytes","padding","LocalStatsCollector","interval","intervalId","intervalMilis","__WEBPACK_IMPORTED_MODULE_0__RTC_RTCBrowserType__","AudioContext","webkitAudioContext","suspend","isLocalStatsSupported","analyser","createAnalyser","smoothingTimeConstant","fftSize","createMediaStreamSource","Uint8Array","frequencyBinCount","getByteTimeDomainData","samples","maxVolume","toFixed","newLevel","lastLevel","diff","CONNECTION_STATS","AUDIO_LEVEL","BEFORE_DISPOSED","BYTE_SENT_STATS","currentExecutingScript","ScriptUtil","prepend","relativeURL","loadCallback","script","referenceNode","scriptEl","scriptSrc","baseScriptSrc","lastIndexOf","XMPP","token","disconnectInProgress","connectionTimes","authenticatedUser","_initStrophePlugins","bosh","conn","__WEBPACK_IMPORTED_MODULE_1_strophe_js__","__WEBPACK_IMPORTED_MODULE_14__Caps__","clientNode","initFeaturesList","__WEBPACK_IMPORTED_MODULE_13__util_Listenable__","addFeature","disableRtx","enableLipSync","rayo","credentials","statusStr","getStatusString","useStunTurn","p2p","jingle","getStunAndTurnCredentials","pingJid","ping","hasPingSupport","hasPing","startInterval","__WEBPACK_IMPORTED_MODULE_5__JitsiConnectionEvents__","anonymousConnectionFailed","connectionFailed","lastErrorMsg","__WEBPACK_IMPORTED_MODULE_4__JitsiConnectionErrors__","OTHER_ERROR","stopInterval","wasIntentionalDisconnect","errMsg","lastErrorStatus","getLastErrorStatus","SERVER_ERROR","CONNECTION_DROPPED_ERROR","connectionHandler","attaching","_options$hosts","hosts","anonymousdomain","configDomain","hostname","mucNickname","roomjid","muc","cfgNickname","useNicks","nick","__WEBPACK_IMPORTED_MODULE_3__util_RandomUtil___default","emuc","createRoom","getLog","_connection$rayo","dial","moderate","setMute","eject","sessions","ev","evType","jvb","p2pStunServers","stunServers","__WEBPACK_IMPORTED_MODULE_7__strophe_emuc__","__WEBPACK_IMPORTED_MODULE_8__strophe_jingle__","__WEBPACK_IMPORTED_MODULE_9__strophe_util__","__WEBPACK_IMPORTED_MODULE_10__strophe_ping__","__WEBPACK_IMPORTED_MODULE_11__strophe_rayo__","__WEBPACK_IMPORTED_MODULE_12__strophe_logger__","OFF","ON","IDENTITY_UPDATED","getJibriErrorDetails","errorIqNode","querySelector","errorText","errorChild","Recording","focusMucJid","jirecon","_isSupported","types","JIRECON","JIBRI","JIBRI_FILE","COLIBRI","jireconRid","XMPPEvents","JitsiRecorderErrors","AVAILABLE","UNAVAILABLE","PENDING","RETRYING","BUSY","FAILED","action","START","STOP","handleJibriPresence","jibri","errorDetails","setRecordingJibri","errCallback","INVALID_STATE","recording_mode","streamid","setRecordingJirecon","mucjid","stateStr","setRecordingColibri","setRecording","toggleRecording","statusChangeHandler","oldState","RECORDER_UNAVAILABLE","RECORDER_BUSY","NO_TOKEN","getState","getURL","STATE_CHANGE_FAILED","ENDED","SDP","mediaI","failICE","removeTcpCandidates","removeUdpCandidates","getMediaSsrcMap","mediaSSRCs","tmp","mediaindex","__WEBPACK_IMPORTED_MODULE_0__SDPUtil__","linessrc","containsSSRC","medias","mangle","newdesc","rtpmap","removeSessionLines","removeMediaLines","toJingle","thecreator","assrcline","creator","amidline","afmtpline","rtcpFbToJingle","crypto","required","ssrcMap","_ref2","_slicedToArray","availableSsrc","ssrcParameters","ssrcSdpLine","ridLines","rids","ridLine","ridInfo","senders","transportToJingle","sctpmap","sctpAttrs","number","setup","payloadtype","subtype","rtcpFbFromJingle","fromJingle","groups","contents","jingle2media","sctp","streamCount","PEER_VIDEO_TYPE_CHANGED","PEER_MUTED_CHANGED","addMediaStreamInactiveHandler","onended","oninactive","__WEBPACK_IMPORTED_MODULE_1_jitsi_meet_logger__","trackHandler2Prop","track_mute","track_unmute","track_ended","JitsiTrack","streamInactiveHandler","trackMediaType","containers","disposed","_streamInactiveHandler","_setStream","_setHandler","container","_onTrackAttach","__WEBPACK_IMPORTED_MODULE_4__RTCUtils__","_maybeFireTrackAttached","_attachTTFMTracker","getStreamId","trackId","getTrackId","isVideoTrack","ENVIRONMENT","grammar","reg","z","encoding","rate","address","sessionConfig","raddr","maxMessageSize","dir2","parseIceOptions","getMid","maxptime","extension","parseRtcpParameters","rtcpParameters","rsize","reducedSize","compound","mux","parseMsid","spec","planB","generateSessionId","sessId","sessVer","getKind","startRecorder","trackRecorder","recorder","startTime","stopRecorder","determineCorrectFileType","MediaRecorder","isTypeSupported","AUDIO_WEBM","AUDIO_OGG","AudioRecorder","jitsiConference","recorders","fileType","isRecording","RecordingResult","instantiateTrackRecorder","updateNames","originalStream","getOriginalStream","mimeType","ondataavailable","dataEvent","removeTrack","recorderToRemove","newName","getDisplayName","download","Blob","href","click","getRecordingResults","getFileType","PERMISSION_PROMPT_IS_SHOWN","addDeviceTypeToAnalyticsEvent","__WEBPACK_IMPORTED_MODULE_28__modules_videosipgw_VideoSIPGWConstants__","__WEBPACK_IMPORTED_MODULE_18_jitsi_meet_logger___default","JitsiConnection","__WEBPACK_IMPORTED_MODULE_6__JitsiConnection__","constants","participantConnectionStatus","__WEBPACK_IMPORTED_MODULE_21__modules_connectivity_ParticipantConnectionStatus__","recordingStatus","__WEBPACK_IMPORTED_MODULE_17__modules_xmpp_recording__","recordingTypes","sipVideoGW","transcriptionStatus","__WEBPACK_IMPORTED_MODULE_15__JitsiTranscriptionStatus__","events","__WEBPACK_IMPORTED_MODULE_5__JitsiConferenceEvents__","__WEBPACK_IMPORTED_MODULE_8__JitsiConnectionEvents__","__WEBPACK_IMPORTED_MODULE_14__JitsiTrackEvents__","__WEBPACK_IMPORTED_MODULE_10__JitsiMediaDevicesEvents__","connectionQuality","__WEBPACK_IMPORTED_MODULE_2__service_connectivity_ConnectionQualityEvents__","__WEBPACK_IMPORTED_MODULE_4__JitsiConferenceErrors__","__WEBPACK_IMPORTED_MODULE_7__JitsiConnectionErrors__","__WEBPACK_IMPORTED_MODULE_11__JitsiRecorderErrors___default","__WEBPACK_IMPORTED_MODULE_13__JitsiTrackErrors__","__WEBPACK_IMPORTED_MODULE_12__JitsiTrackError__","logLevels","__WEBPACK_IMPORTED_MODULE_9__JitsiMediaDevices__","__WEBPACK_IMPORTED_MODULE_27__modules_statistics_statistics__","enableAnalyticsLogging","enableWindowOnErrorHandler","__WEBPACK_IMPORTED_MODULE_3__modules_util_GlobalOnErrorHandler___default","getGlobalOnErrorHandler","aprops","deploymentInfo","logObject","__WEBPACK_IMPORTED_MODULE_22__modules_RTC_RTC__","addGlobalLogTransport","globalTransport","removeGlobalLogTransport","createLocalTracks","emitEvent","__WEBPACK_IMPORTED_MODULE_23__modules_RTC_RTCBrowserType__","mStream","__WEBPACK_IMPORTED_MODULE_19__service_RTC_MediaType__","_setRealDeviceIdFromDeviceList","oldResolution","newResolution","__WEBPACK_IMPORTED_MODULE_20__service_RTC_Resolutions___default","resName","isMultipleAudioInputSupported","isCollectingLocalStats","__WEBPACK_IMPORTED_MODULE_16__modules_statistics_LocalStatsCollector__","lineno","colno","getMachineId","__WEBPACK_IMPORTED_MODULE_26__modules_settings_Settings__","AuthUtil","__WEBPACK_IMPORTED_MODULE_1__modules_util_AuthUtil___default","RTCUIHelper","__WEBPACK_IMPORTED_MODULE_24__modules_RTC_RTCUIHelper__","__WEBPACK_IMPORTED_MODULE_25__modules_util_ScriptUtil___default","getTokenAuthUrl","urlPattern","roleUpgrade","appID","__WEBPACK_IMPORTED_MODULE_4__modules_xmpp_xmpp__","__WEBPACK_IMPORTED_MODULE_2__JitsiConnectionEvents__","errType","__WEBPACK_IMPORTED_MODULE_3__modules_statistics_statistics__","_xmpp","setToken","initJitsiConference","__WEBPACK_IMPORTED_MODULE_1__JitsiConference__","getConnectionTimes","feature","submit","removeFeature","JitsiConference","__WEBPACK_IMPORTED_MODULE_7_events___default","eventManager","__WEBPACK_IMPORTED_MODULE_10__JitsiConferenceEventManager__","componentsVersions","__WEBPACK_IMPORTED_MODULE_3__modules_version_ComponentsVersions__","jvbJingleSession","lastDominantSpeaker","dtmfManager","somebodySupportsDTMF","authEnabled","startAudioMuted","startVideoMuted","startMutedPolicy","availableDevices","isMutedByFocus","wasStopped","__WEBPACK_IMPORTED_MODULE_4__modules_connectivity_ConnectionQuality__","avgRtpStatsReporter","__WEBPACK_IMPORTED_MODULE_2__modules_statistics_AvgRTPStatsReporter__","avgRtpStatsN","isJvbConnectionInterrupted","speakerStatsCollector","__WEBPACK_IMPORTED_MODULE_31__modules_statistics_SpeakerStatsCollector__","deferredStartP2PTask","backToP2PDelay","isP2PConnectionInterrupted","p2pJingleSession","videoSIPGWHandler","__WEBPACK_IMPORTED_MODULE_28__modules_videosipgw_VideoSIPGW__","room","__WEBPACK_IMPORTED_MODULE_5_jitsi_meet_logger__","setupXMPPListeners","_onIceConnectionInterrupted","__WEBPACK_IMPORTED_MODULE_30__service_xmpp_XMPPEvents__","_onIceConnectionRestored","_onIceConnectionEstablished","updateDeviceAvailability","__WEBPACK_IMPORTED_MODULE_21__modules_RTC_RTC__","setupRTCListeners","__WEBPACK_IMPORTED_MODULE_19__modules_connectivity_ParticipantConnectionStatus__","_peerConnStatusRtcMuteTimeout","_peerConnStatusOutOfLastNTimeout","windowLocation","enableDisplayNameInStats","displayName","__WEBPACK_IMPORTED_MODULE_24__modules_statistics_statistics__","callStatsCustomScriptUrl","enableStatsID","setupChatRoomListeners","setupStatisticsListeners","enableTalkWhileMuted","__WEBPACK_IMPORTED_MODULE_25__modules_TalkMutedDetection__","__WEBPACK_IMPORTED_MODULE_11__JitsiConferenceEvents__","setLastN","channelLastN","jvb121Status","__WEBPACK_IMPORTED_MODULE_17__modules_event_Jvb121EventGenerator__","p2pDominantSpeakerDetection","__WEBPACK_IMPORTED_MODULE_20__modules_P2PDominantSpeakerDetection__","authenticateAndUpgradeRole","__WEBPACK_IMPORTED_MODULE_8__authenticateAndUpgradeRole__","isJoined","joined","isP2PEnabled","enabled","isP2PTestModeEnabled","testing","p2pTestMode","leave","onLocalTrackRemoved","closeBridgeChannel","onMemberLeft","getJid","getName","isAuthEnabled","isLoggedIn","authIdentity","getAuthLogin","isExternalAuthEnabled","moderator","getExternalAuthUrl","urlForPopup","getPopupLoginUrl","getLoginUrl","getLocalAudioTrack","getLocalVideoTrack","eventId","addCommandListener","command","addPresenceListener","removeCommandListener","removePresenceListener","sendTextMessage","sendCommand","addToPresence","sendCommandOnce","removeCommand","removeFromPresence","setDisplayName","setSubject","subject","isModerator","getTranscriber","transcriber","__WEBPACK_IMPORTED_MODULE_26__modules_transcription_transcriber___default","localAudioTracks","__WEBPACK_IMPORTED_MODULE_18__service_RTC_MediaType__","getTranscriptionStatus","localVideoTrack","replaceTrack","_fireAudioLevelChangeEvent","activeTpc","getActivePeerConnection","_fireMuteChangeEvent","muteParticipant","myroomjid","_setConference","removeLocalTrack","__WEBPACK_IMPORTED_MODULE_16__JitsiTrackEvents__","muteHandler","audioLevelHandler","__WEBPACK_IMPORTED_MODULE_27__service_RTC_VideoType___default","oldTrack","newTrack","__WEBPACK_IMPORTED_MODULE_14__JitsiTrackError__","__WEBPACK_IMPORTED_MODULE_15__JitsiTrackErrors__","_doReplaceTrack","_setupNewTrack","replaceTrackPromises","getTrack","addLocalTrack","setAudioMute","setVideoMute","_addLocalTrackAsUnmute","addAsUnmutePromises","addTrackAsUnmute","_removeLocalTrackAsMute","removeAsMutePromises","removeTrackAsMute","getRole","lock","_this5","lockRoom","__WEBPACK_IMPORTED_MODULE_9__JitsiConferenceErrors__","unlock","selectParticipant","selectEndpoint","pinParticipant","pinEndpoint","lastN","isInteger","isVideoActive","setMediaTransferActive","getParticipantCount","countHidden","isHidden","kickParticipant","kick","onMemberJoined","statsID","_this6","__WEBPACK_IMPORTED_MODULE_0_strophe_js__","__WEBPACK_IMPORTED_MODULE_13__JitsiParticipant__","_role","getFeatures","_supportsDTMF","updateDTMFSupport","_maybeStartOrStopP2P","_this7","onLocalRoleChanged","onUserRoleChanged","onDisplayNameChanged","_displayName","_this8","_tracks","onCallAccepted","answer","setAnswer","onTransportInfo","transportInfo","addIceCandidates","removedTrack","_this9","_onIncomingCallP2P","jingleSession","jingleOffer","rejectReason","getMemberRole","remoteJid","reasonDescription","errorMsg","__WEBPACK_IMPORTED_MODULE_22__modules_RTC_RTCBrowserType__","_rejectIncomingCall","_acceptP2PIncomingCall","onIncomingCall","isFocus","_acceptJvbIncomingCall","_this10","initialize","__WEBPACK_IMPORTED_MODULE_6__modules_util_GlobalOnErrorHandler___default","_setBridgeChannel","acceptOffer","_suspendMediaTransferForJvbConnection","offerIq","webSocket","first","bridgeChannelType","openBridgeChannel","initializeBridgeChannel","terminate","sendSessionTerminate","onCallEnded","reasonCondition","reasonText","forceJvb121","p2pFailed","_stopP2PSession","onSuspendDetected","supportsDTMF","isDTMFSupported","sendTones","tones","duration","peerConnection","__WEBPACK_IMPORTED_MODULE_12__modules_DTMF_JitsiDTMFManager___default","isRecordingSupported","getRecordingState","getRecordingURL","_this11","isSIPCallingSupported","hangup","startTranscriber","stopTranscriber","getPhoneNumber","getPhonePin","getConnectionState","setStartMutedPolicy","policy","getStartMutedPolicy","isStartAudioMuted","isStartVideoMuted","getLogs","getJingleLog","metadata","getXmppLog","setLocalParticipantProperty","overallFeedback","detailedFeedback","remoteUserId","getLocalSSRC","getSSRC","getUsageLabel","_isFocus","mucJid","_fireIncompatibleVersionsEvent","sendEndpointMessage","sendChannelMessage","broadcastEndpointMessage","isConnectionInterrupted","_onIceConnectionFailed","isInitiator","remoteID","getStatsID","_addRemoteJVBTracks","_addRemoteTracks","_addRemoteP2PTracks","logName","__WEBPACK_IMPORTED_MODULE_23__service_RTC_RTCEvents__","p2pEstablishmentDuration","establishmentDuration","jvbEstablishmentDuration","forceJVB121Ratio","establishmentDurationDiff","_setP2PStatus","_removeRemoteJVBTracks","_maybeClearDeferredStartP2P","_removeRemoteTracks","_removeRemoteP2PTracks","sessionNickname","_resumeMediaTransferForJvbConnection","_startP2PSession","newP2PJingleSession","invite","userLeftEvent","peers","peerCount","shouldBeInP2P","peer","myId","peersId","wasP2PEstablished","getP2PConnectionState","startP2PSession","peerJid","stopP2PSession","getSpeakerStats","setReceiverVideoConstraint","createVideoSIPGWSession","sipAddress","__WEBPACK_IMPORTED_MODULE_29__modules_videosipgw_VideoSIPGWConstants__","AverageStatReport","sum","nextValue","calculate","ConnectionAvgStats","_n","_sampleIdx","_avgRTT","_avgRemoteRTTMap","_avgRtpStatsReporter","_avgEnd2EndRTT","_onConnectionStats","_calculateAvgStats","_conference","_onUserLeft","_onRemoteStatsUpdated","_processRemoteStats","__WEBPACK_IMPORTED_MODULE_5__RTC_RTCBrowserType__","addNext","rtt","batchReport","localCandidateType","remoteCandidateType","transportType","appendReport","jvbEnd2EndRTT","jvbStatsMonitor","avgRTTDiff","stat_avg_rtt_diff","avgRemoteRTT","_calculateAvgRemoteRTT","avgLocalRTT","stat_avg_end2endrtt","__WEBPACK_IMPORTED_MODULE_6__statistics__","_resetAvgStats","remoteAvg","avg","validData","jvbRTT","rttAvg","clear","AvgRTPStatsReporter","_avgAudioBitrateUp","_avgAudioBitrateDown","_avgVideoBitrateUp","_avgVideoBitrateDown","_avgBandwidthUp","_avgBandwidthDown","_avgPacketLossTotal","_avgPacketLossUp","_avgPacketLossDown","_avgRemoteFPS","_avgRemoteScreenFPS","_avgLocalFPS","_avgLocalScreenFPS","_avgRemoteCameraPixels","_avgRemoteScreenPixels","_avgLocalCameraPixels","_avgLocalScreenPixels","_avgCQ","_onLocalStatsUpdated","_onP2PStatusChanged","p2pStatsMonitor","_onJvb121StatusChanged","oldStatus","_resetAvgJvbStats","confSize","bitrate","packetLoss","frameRate","framerate","upload","total","_calculateAvgVideoFps","__WEBPACK_IMPORTED_MODULE_7__service_RTC_VideoType__","_calculateAvgVideoPixels","peerResolutions","peerPixelsSum","myID","peerID","videosResolution","peerAvgPixels","_calculatePeerAvgVideoPixels","videos","getTracksByMediaType","__WEBPACK_IMPORTED_MODULE_4__service_RTC_MediaType__","peerSsrcCount","peerSsrcPixels","peerFpsSum","videosFps","peerAvgFPS","_calculatePeerAvgVideoFps","peerSsrcFps","logStorage","stringifyObjects","storeInterval","maxEntryLength","_log","storeLogsIntervalID","totalLen","outputCache","someObject","formatLogMessage","prevMessage","_flush","_reschedulePublishInterval","force","reschedule","isReady","cachedQueue","storeLogs","AnalyticsAbstract","cacheAnalytics","CacheAnalytics","eventCache","eventCacheCopy","AnalyticsAdapter","analyticsHandlers","permanentProperties","callstatsname","__WEBPACK_IMPORTED_MODULE_1__settings_Settings__","modifiedData","drainCachedEvents","wrtcFuncNames","DEFAULT_REMOTE_USER","reportType","_fabrics","CallStats","hasFabric","fabrics","backendInitialized","_addNewFabric","_emptyReportQueue","backend","atLeastOneFabric","defaultInstance","csInstance","defaultConfID","defaultPC","reportsQueue","errorData","_reportError","eventData","sendFabricEvent","associateMstWithUserID","callStatsId","_error","reportError","theBackend","tryCatchMethods","originalMethod","_len2","theArguments","_key2","__WEBPACK_IMPORTED_MODULE_1__util_GlobalOnErrorHandler___default","debugMethods","_len3","_key3","originalReportError","CallStatsBackend","callstats","_traceAndCatchBackendCalls","userID","configParams","applicationVersion","_initCallback","attachWifiStatsHandler","addresses","_reportEvent","conferenceID","sendUserFeedback","comment","fabricAttributes","remoteEndpointType","endpointType","addNewFabric","fabricUsage","multiplex","_addNewFabricCallback","streamEndpointId","fabricEvent","fabricTerminated","bb","currentOffset","$a","rtc_rtp_parameters","Sb","above","ccDriven","sumMaxBitrateDiff","sumThroughputDiff","prevCsioAvgBRKbps","_a","streamType","ub","outbound","csioAvgBRKbps","csioSCSValidationSampleCount","csioAvgMaxBitrateDiff","csioAvgDeltaThroughput","csioMaxBitrateAboveRatio","csioCCDrivenRatio","oncanplay","ab","ucID","jc","kc","Xb","jb","mediaPlaybackStartEvent","highResTs","onsuspend","mediaSuspendedEvent","Aa","codebase","Fb","hb","googLocalAddress","googRemoteAddress","selectedCandidatePairId","localAddr","remoteAddr","googCodecName","codecImplementationName","lastStatsSent","Transport","latestEventSent","bytesReceived","bytesSent","csioReceivedBwKbps","csioSentBwKbps","csioIntBytesReceived","csioIntBytesSent","packetsSent","csioSentPacketRate","csioIntPacketsSent","packetsReceived","csioReceivedPacketRate","csioIntPacketsReceived","lastRawStatsSentInterval","statsPollingStart","rawstatsTS","lastProcessedStatsSentInterval","Fa","da","ma","encodeURIComponent","apiTS","timeShift","fabricState","pcState","pcID","pcHash","Ua","authToken","localID","deviceID","pa","G","H","J","K","nc","B","googActiveConnection","activeConnectionIndex","selected","localCandidate","remoteCandidate","bwe","trackStats","candidatePair","Ub","localStartTime","Wb","Q","associatedVideoTag","usage","typePreference","googLocalCandidateType","googRemoteCandidateType","googTransportType","localAddrType","remoteAddrType","iceCandidates","transportData","ipv6","relayType","cd","fabricTransportSwitch","xb","disrupted","mozRtt","googRtt","roundTripTime","gd","Vb","Za","kb","senderConfiguration","V","W","X","ja","fire","OnPolling","OnOneWayAudioDisruptionsRequest","disruptionType","oneWayMedia","OnSendingThroughputObservationsRequest","sendingThroughputObservations","OnStatsRequest","Y","Ma","Z","inbound","vb","noInboundAudioOnlyFabric","connectionState","onLine","processedStatsTupleArray","Da","aa","od","getConferenceURL","conferenceURL","fractionLoss","csioIntFL","csioIntBRKbps","quality","csioMark","csioMediaType","jitter","googJitterReceived","audioOutputLevel","audioInputLevel","averageRTT","csioAvgRtt","averageJitter","csioAvgJitter","packetLossPercentage","csioPktLossPercentage","statsType","batteryStatus","batteryLevel","Xa","isBatteryCharging","charging","wifiStats","ka","mark","wb","bad","fair","processedStatistics","ba","Ra","msgStat","getStat","processedStats","lastFabricState","clockUnsynced","Oa","cacheEvent","channel","includes","isRemote","syncHandler","Ob","na","offsetResults","ld","_isTokenValid","Hb","ia","pd","nb","sendAuthenticationRequest","ob","authOngoing","eb","userJoinedSent","iceCandidatesNumber","authStatus","tokenData","clockSync","stateMachine","pageURL","wsStatus","getWSConnectionState","ca","ea","ga","ha","Reporter","csioChromeLegacyGetStats","la","oa","qa","ra","va","wa","xa","ya","PreCallTest","za","Ba","Ca","defaultConfig","recommendedConfig","preCallTest","Ga","La","updateRemoteUserID","sendCachedEvents","gb","userJoined","decodeURIComponent","sendCachedUserJoinedEvents","ib","fabricSetupFailed","statsSubmissionInterval","updateConferenceId","sendCachedFeedback","Jb","userFeedback","Kb","size_max","size_ewma","statNum_max","statNum_ewma","msg_num","maxInterval","minInterval","avgInterval","stdInterval","lastTime","samplesCount","memorySizeOf","Sa","authInProgress","tokenGenerator","cryptotype","subtle","subtlecrypto","webkitSubtle","msCrypto","sign","alg","csiosign","ArrayBuffer","byteLength","oncomplete","decode","importKey","kty","extractable","ext","use","setAuthType","expiry","setupAuthToken","Ib","submissionInterval","setSubmissionInterval","setReportingMode","adaptiveInterval","collectSDP","tokenGenerationError","jd","client_id","grant_type","auth","token_type","access_token","expires_in","gc","crashDisconnect","hc","_isChannelReady","_setupWebSocketConnection","Qb","RETRY","GET_NEW_TOKEN","REPORT_ERROR","errorCode","authError","appSecretTokenGenerator","keyID","Va","detectBrowserInfo","Wa","measureAppLoadingPerformance","loading","Ya","syncStartTime","syncAttempts","maxAllowedLatency","db","fabricHold","fabricResume","audioMute","audioUnmute","videoPause","videoResume","fabricUsageEvent","screenShareStart","screenShareStop","dominantSpeaker","userIDChangedEvent","activeDeviceList","applicationErrorLog","autoFabricSetup","userLeft","refreshPresence","fabricStateChange","iceDisruptionStart","iceDisruptionEnd","iceConnectionDisruptionStart","iceConnectionDisruptionEnd","iceAborted","iceTerminated","iceFailed","iceRestarted","fabricDropped","connectedDevices","iceCompleted","iceCandidateFound","sdpSubmission","callStatsEvent","lb","mb","failure","httpError","wsChannelFailure","csProtoError","appConnectivityError","ok","pb","qb","sendonly","receiveonly","sendrecv","inactive","rb","unbundled","local","remote","noAudioInMultiplexFabric","noOutboundAudioOnlyFabric","excellent","established","initializing","checkingDisrupted","yb","iceConnectionFailure","signalingError","applicationError","applicationLog","zb","mediaConfigError","negotiationFailure","sdpError","iceFailure","transportFailure","Ab","gThreshold","rThreshold","Bb","Cb","Db","Eb","Mb","encodeURI","ontimeout","Nb","filename","col","jsVersion","Pb","invalidWebRTCFunctionName","Rb","Tb","syncedStartTime","simulcastGroup","localSDP","remoteSDP","Zb","Yb","ids","sdpPayload","$b","sc","localCandidates","remoteCandidates","iceCandidatePairs","activeIceCandidatePair","Nc","currPair","_b","ac","endpoint","magicKey","bc","ec","sent","remoteofferSinceCreate","senderConfig","errorSinceCreate","Authorization","adaptiveStats","qmodelThresholdsAPI","confidence","recommended","callstatsID","lc","fabric","qc","rc","tc","activeDevicelist","pcCallback","statsInterval","conferenceFinished","onHold","Qc","uc","wc","yc","buffer","zc","DataView","getUint8","Ac","digest","Ic","Pc","changedState","prevState","sentSenderConfigRequest","senderExists","app_id","local_id","getParameters","callFinished","callStarts","ad","Rc","Yc","numNegotiationNeededCalls","Zc","prevIceConnectionState","currIceConnectionState","gatheringIceCandidatesDelay","disruptionDelay","disruptedTS","prevPair","connectivityIceStatusDelay","bd","failureDelay","prevIceConnectionStateTs","iceConnectionStateTS","_c","fabricSetupSent","setupDelay","iceGatheringDelay","iceConnectivityDelay","fabricTransmissionDirection","clockSyncOffset","switchDelay","dd","ed","fd","codecId","isGreaterBetter","upperThreshold","lowerThreshold","kd","md","_wsConnectionState","conferenceCreationTS","conferenceDuration","getBattery","csioproxy","initializeSinceCreate","disableBeforeUnloadHandler","appVer","disablePrecalltest","addnewfabricSinceCreate","localUserIDObject","intervalAdaptionPhase","currentActivePhaseIndex","userQoe","csError","qualityRating","good","poor","webRTCFunctions","DOMException","domError","function","reportUserIDChange","idType","userIDType","setProxyConfig","collectorURL","authServiceURL","csioInternalAPIURL","wsURL","callStatsAPIReturnStatus","setIdentifiers","transmissionDirection","callstatsUtils","MAX_VALUE","support","loadEventEnd","getEntriesByType","PusherPlug","invoker","Notifier","SenderGate","lastResponsed","onDataSent","Measurement","frameRateReceived","frameWidth","droppedFramesNum","packetLosts","packetsDiscarded","NumberComparator","MeasurementRTTComparator","MeasurementFrameHeightComparator","frameHeight","MeasurementFrameWidthComparator","MeasurementJitterComparator","MeasurementFrameRateReceivedComparator","MeasurementMerger","Assembler","unknown","SWValueTracker","extractorFnc","delta","actual","Signals","SWValueHolder","FractionLost","intervalPacketsRecv","intervalLoss","FractionLostComparator","getValue","FractionLostMerger","getIntervalLoss","getIntervalPacketsRecv","Monitor","measurements","SlidingWindow","maxItemsNum","timeoutInMs","packetLostTracker","addPlugin","packetsDiscardedTracker","resolutionTracker","jitter95PercentileTracker","SWPercentileTracker","addFilter","rtt95PercentileTracker","frameHeight50PercentileTracker","frameHeight95PercentileTracker","frameRate50PercentileTracker","frameRate95PercentileTracker","frameWidth50PercentileTracker","frameWidth95PercentileTracker","rttAvgRTTracker","SWAvg","frameRateMeanTracker","frameHeightMeanTracker","frameWidthMeanTracker","jitterAvgTracker","intervalFractionLosts","FLPercentileTracker","lastSent","firstAdded","lastAdded","doSending","lastTraffic","InboundMonitor","bytesReceivedTracker","packetsReceivedTracker","csioIntBRKbpsCount","csioIntPRCount","InbAudioMonitor","eModel","Direction","MediaTypes","InbVideoMonitor","frameRateReceivedTracker","frameRatePercTracker","setFrameRateReceived10","frameRateReceived10","OutboundMonitor","bytesSentTracker","packetsSentTracker","OutbVideoMonitor","started","maxTs","stable","stableTs","ready","maxVerified","stableVerified","OutbAudioMonitor","Monitors","monitors","assembler","sendable","inbOneWayAudioDisruption","hasTrafficTs","outbOneWayAudioDisruption","Analyzer","lastForwarded","lastInterval","sentCounter","nextInterval","Idle","Run","OnStop","OnStart","analyzer","senderGate","sendingThroughputObservationsSent","currentState","disruptions","adaptiveSending","minMeasurementsNum","SendingTimeTresholds","regular","minDeltaTimeInMs","requestStats","RTT","do","getMediaType","getResolution","getFrameRate","getFrameWidth","getFrameHeight","getLatencyData","getDroppedFramesNum","getPacketLosts","getJitter","getBytesReceived","getPacketsReceived","getPacketsDiscarded","getBytesSent","getPacketsSent","rawdats","setupCodeBase","checkForNan","checkForNegativeValue","discardedPackets","packetsLost","droppedFrames","googFrameRateOutput","googFrameRateDecoded","googFrameRateReceived","googFrameRateSent","framerateMean","googFrameHeightReceived","googFrameHeightSent","googFrameWidthReceived","googFrameWidthSent","validateRTT","getActual","getFirst","getDelta","getPrevious","VideoThroughputThresholds","green","red","AudioThroughputThresholds","FrameRateRatioTresholds","VideoRTTThresholds","VideoFractionLostTreshdolds","AudioFractionLostTresholds","AudioEModelTresholds","avQualityRating","avQualityRatingString","doStart","getStartTime","hasTraffic","getLastMeasurement","getTotalTimeInMs","getDeltaTimeInMs","getLast","setSSRC","requestSending","setIntBRAndPR","csioIntPR","requestSendingIf","getAvgRTT","getResult","percentileTrackerExtractor","getRTT95","getJitter95","getFrameRateMean","getFrameWidth50Percentile","getFrameWidth95Percentile","getFrameHeight50Percentile","getFrameHeight95Percentile","getFrameRate50Percentile","getFrameRate95Percentile","getFrameHeightMean","getFrameWidthMean","getAvgJitter","getQualityEvaluation","getQualityReverseEvaluation","hasData","getItemsNum","csioIntMs","csioPercentileFl","csioIntPktLoss","csioPercentileJitter","csioSig2Latency","csioTimeElapseMs","csioeM","csiores","csioFrameWidth95Percentile","csioFrameWidth50Percentile","csioFrameHeight95Percentile","csioFrameHeight50Percentile","csioFrameRate95Percentile","csioFrameRate50Percentile","csioFrameWidthMean","csioFrameHeightMean","csioFrameRateMean","addIntervalFractionLost","getLastFractionLost","getIntervalFractionLost95","isValid","doSend","setRTT95","csioIntPktRcv","csioAvgPacketSize","getQuality","setFrameRatioQuality","verificationElapsedThreshold","initialElapsedThreshold","minStableKBpsSlack","getSendingKBitrateObservations","maxsendingKBitrate","timeToMaxSendingKBitrate","stablesendingKBitrate","timeToStableSendingKBitrate","checkSendingKBitrateObservations","setEModelQuality","setThroughputQuality","OneWayAudioDisruptionTimeout","DisruptionsMediaType","DisruptionsType","getMonitor","isSendable","checkDistortions","getInbOneWayAudioDisruption","getOutbOneWayAudioDisruption","getSendingThroughputObservations","items","minItemsNum","SWItem","setMaxItemsNum","setTimeoutInMs","setMinItemsNum","getElapsed","foreach","created","comparator","percentile","meanCalcer","ratio","maxtree","BinaryTree","mintree","maxcounter","mincounter","SWPercentileNotification","doFilter","insert","getTopValue","balancing","ReferenceError","insertByTop","deleteBottomValue","insertByBottom","deleteTopValue","getBottomValue","tracked","estimated","BinaryTreeNode","bottom","node_counter","duplicate_counter","getTop","getBottom","getDuplicatedCounter","getNodeCounter","getSize","logTree","inserting","getRightist","getLeftist","extractor","calc","pcCallbackHandler","onIceCandidateCallback","onIceConnectionStateChangeCallback","onPcSignalingStateChangeCallback","onPcNegotiationNeededCallback","iceCandidateCallback","iceConnectionStateChangeCallback","pcSignalingStateChangeCallback","pcNegotiationNeededCallback","_turnConnection","_rttTest","_throughputTest","_resultsHandler","_onlineCheck","_detectbrowser","TEST_NAMES","THROUGHPUT","browserInfo","turnConnection","TurnConnection","onlineCheck","OnlineCheck","callsInProgress","turnTests","resultsHandler","turnTestCounter","ResultsHandler","buildName","buildVersion","_start","startTurnTests","getFailureNumber","activeTurnTest","forceStop","getIceResults","sendResults","getResults","RttTest","ThroughputTest","handleTestResults","median","_parsedIceCandidate","_getstatshandler","statshandler","GetStatsHandler","pctpc1","pctpc2","sendChannel","messageCallback","parsedIceResults","raiseSendError","rejectDisconnect","connectionTimer","createDataChannel","ordered","maxRetransmits","binaryType","assignEvent","onIceCandidate","onIceStateChange","onCreateOfferSuccess","onCreateOfferError","onSetLocalSuccess","onSetSessionDescriptionError","onSetRemoteSuccess","onSetRemoteSessionDescriptionError","onCreateAnswerSuccess","onCreateAnswerError","ParsedIceCandidate","isRelay","isTypeTransportUdp","relayUdpGathered","isTypeTransportTcp","relayTcpGathered","isTypeTransportTls","relayTlsGathered","isServerReflexive","srflxGathered","getOtherPc","onAddIceCandidateSuccess","onAddIceCandidateError","iceTimer","turnIpAddress","turnIpVersion","turnTransport","ipv6Supported","ipv4Supported","relayTlsSuccess","relayTcpSuccess","relayUdpSuccess","srflxSuccess","getIceCandidates","ipAddress","localCandidateId","mozLocalTransport","candidateType","iceCandidateStr","typeTransport","extractTypeTransport","_statsadapter","StatsAdapter","isPromiseBased","csioGetStats","iceCandidatesHandler","getStatsFirefox","getStatsSafari","getStatsChrome","getStatsEdge","extractRawStats","processRawStatsForIceInfo","getParsedStats","statsClassifier","transportStats","formatRelayType","tasksByHandle","runIfPresent","currentlyRunningATask","task","registerImmediate","nextHandle","attachTo","importScripts","postMessageIsAsynchronous","oldOnMessage","messagePrefix","onGlobalMessage","MessageChannel","port1","port2","_turnTest","sendTimer","countSent","rtts","startTimestamp","sendPing","calculateRtt","calculateMetrics","fillResults","sentMessages","unAckedMessages","maxMessages","variance","endTimestamp","_messageMaker","receivedBytes","secondHalfBytes","secondHalfStart","bufferEmpty","chunkSize","messageMaker","lastMessage","intervals","intervalStart","intervalLength","intervalBytes","startSend","averageThroughput","average","bufferListener","fillBuffer","bufferedAmount","bufferFullThreshold","usePolling","make","bufferedAmountLowThreshold","maxDuration","bytesPrepared","fractionLostBytes","trunc","failures","tests","addEntry","online","calculatePacketLoss","lostPackets","totalPackets","round","SsrcStats","loss","StatsCollector","_browserType","KEYS_BY_BROWSER_TYPE","_getStatValue","_defineGetStatValueMethod","baselineAudioLevelsReport","currentAudioLevelsReport","currentStatsReport","previousStatsReport","audioLevelsIntervalId","conferenceStats","audioLevelsIntervalMilis","statsIntervalId","statsIntervalMilis","ssrc2stats","browserSupported","receiveBandwidth","sendBandwidth","remoteAddress","localAddress","activeConnection","currentRoundTripTime","setLoss","setResolution","addBitrate","resetBitrate","setFramerate","startAudioLevelStats","processAudioLevelReport","processStatsReport","itemStatByKey","pair","getNonNegativeStat","getStatValue","byteSentStats","localip","conferenceStatsTransport","remoteCandidateId","portNumber","msType","before","ssrcIds","remoteSource","ssrcStats","isDownloadStream","packetsNow","packetsBefore","packetsDiff","packetsLostNow","packetsLostBefore","packetsLostDiff","packetsTotal","bytesReceivedNow","bytesReceivedBefore","nowBytesTransmitted","timeMs","bitrateReceivedKbps","bitrateSentKbps","bitrateDownload","bitrateUpload","resolutions","framerates","audioBitrateDownload","audioBitrateUpload","videoBitrateDownload","videoBitrateUpload","userResolutions","userFramerates","__WEBPACK_IMPORTED_MODULE_1__service_statistics_Events__","_nearestExecutingScript","scripts","eligibleScripts","skipStackDepth","isNotOpera","supportsScriptReadyState","scriptReadyRegex","hasStackBeforeThrowing","hasStackAfterThrowing","getScriptUrlFromStack","ignoreMessage","pageUrl","hasAttribute","hasNativeCurrentScriptAccessor","currentScript","fullPageUrl","Infinity","thrownErr","near","far","origin","ComponentsVersions","processPresence","FOCUS_COMPONENT","VIDEOBRIDGE_COMPONENT","XMPP_SERVER_COMPONENT","mucResource","componentName","__WEBPACK_IMPORTED_MODULE_0__statistics_statistics__","getComponentVersion","getTarget","simulcast","millisSinceStart","simulcastFormat","kSimulcastFormats","targetHeight","pixels","MAX_SAFE_INTEGER","startBitrate","VideoType","Resolutions","__WEBPACK_IMPORTED_MODULE_2_jitsi_meet_logger__","STATS_MESSAGE_TYPE","layers","ConnectionQuality","_localStats","_lastConnectionQualityUpdate","_remoteStats","_timeIceConnected","_timeVideoUnmuted","_updateLocalConnectionQuality","__WEBPACK_IMPORTED_MODULE_0__service_connectivity_ConnectionQualityEvents__","_broadcastLocalStats","_updateRemoteStats","_updateLocalStats","_maybeUpdateUnmuteTime","resolutionName","activeTPC","isSimulcastOn","prevConnectionQuality","diffSeconds","updateLocalConnectionQuality","_calculateConnectionQuality","onLoginSuccessful","roomPassword","canceled","rejectPromise","__WEBPACK_IMPORTED_MODULE_1__modules_xmpp_xmpp__","__WEBPACK_IMPORTED_MODULE_0__JitsiConnectionEvents__","authenticationError","connectionError","strophe_js","_identities","_features","_items","_onDiscoInfo","_onDiscoItems","addIdentity","category","lang","var_name","addItem","call_back","_buildIQResult","query_attrs","iqresult","var","MucConnectionPlugin","rooms","__WEBPACK_IMPORTED_MODULE_3__ConnectionPlugin__","onPresence","onPresenceUnavailable","onPresenceError","onMessage","onMute","roomJid","__WEBPACK_IMPORTED_MODULE_2__ChatRoom__","__WEBPACK_IMPORTED_MODULE_4__service_xmpp_XMPPEvents___default","createNonAnonymousRoom","filterNodeFromPresenceJSON","packet2JSON","packet","json2packet","VALID_FIELD_NAMES","ChatRoom","members","presMap","presHandlers","noBridgeAvailable","__WEBPACK_IMPORTED_MODULE_8__moderator__","initPresenceMap","lastPresences","phoneNumber","phonePin","participantPropertyListener","locked","__WEBPACK_IMPORTED_MODULE_3__JitsiTranscriptionStatus__","__WEBPACK_IMPORTED_MODULE_4__util_Listenable__","xns","__WEBPACK_IMPORTED_MODULE_5__settings_Settings__","addVideoInfoToPresence","userRegion","allocateConferenceFocus","fromJoin","getInfo","__WEBPACK_IMPORTED_MODULE_7__service_xmpp_XMPPEvents___default","getForm","form","formSubmit","member","$statusNode","hasStatusUpdate","mucUserItem","affiliation","getFocusUserJid","isHiddenDomain","hiddenDomain","newRole","_initFocus","memberOfThis","displayJids","att","phone","pin","processNode","lastJibri","recording","__WEBPACK_IMPORTED_MODULE_9__recording__","recordingType","tagHandlers","nickname","skipEvents","onMucMemberLeft","reasonSelect","doLeave","isSelfPresence","isKick","membersKeys","onParticipantLeft","txt","subjectText","stamp","dateParts","discoRoomInfo","json","jsonString","topic","kickIQ","onNotSupported","formsubmit","handlerIdx","sendVideoInfoPresence","sendAudioInfoPresence","addAudioInfoToPresence","mutedNode","__WEBPACK_IMPORTED_MODULE_6__service_RTC_MediaType__","videoTypeNode","isSipGatewayEnabled","iqToFocus","doMuteAudio","onMucLeft","doReject","createExpBackoffTimer","step","Moderator","__WEBPACK_IMPORTED_MODULE_2__settings_Settings__","xmppService","getNextTimeout","getNextErrorTimeout","externalAuthEnabled","sipGatewayEnabled","call_control","AuthenticationEvents","setFocusUserJid","focusJid","focusUserJid","getFocusComponent","focusComponent","focus","createConferenceIq","machineUID","machine-uid","session-id","enforcedBridge","audioPacketDelay","minBitrate","openSctp","__WEBPACK_IMPORTED_MODULE_1__RTC_RTCBrowserType__","stereo","useRoomAsSharedDocumentName","parseSessionId","resultIq","parseConfigOptions","authenticationEnabled","_allocateConferenceFocusSuccess","_allocateConferenceFocusError","invalidSession","reservationErr","errorTextNode","waitMs","retrySec","errorIq","urlCallback","_getLoginUrl","popup","urlCb","logout","logoutUrl","__WEBPACK_IMPORTED_MODULE_2_strophe_js__","JingleConnectionPlugin","jvbIceConfig","p2pIceConfig","mediaConstraints","OfferToReceiveAudio","OfferToReceiveVideo","__WEBPACK_IMPORTED_MODULE_8__ConnectionPlugin__","onJingle","fromJid","ack","sess","startMuted","audioMuted","videoMuted","__WEBPACK_IMPORTED_MODULE_3__service_xmpp_XMPPEvents___default","__WEBPACK_IMPORTED_MODULE_7__JingleSessionPC__","modifyContents","replaceTransport","successTime","sendTransportReject","addRemoteStream","removeRemoteStream","me","__WEBPACK_IMPORTED_MODULE_5__util_RandomUtil___default","onTerminated","iceservers","dict","updateLog","JingleSessionPC","localJid","_iceCheckingStartedTimestamp","_gatheringStartedTimestamp","_localVideoActive","_remoteVideoActive","_gatheringReported","lasticecandidate","signalingLayer","__WEBPACK_IMPORTED_MODULE_10__SignalingLayerImpl__","webrtcIceUdpDisable","webrtcIceTcpDisable","modificationQueue","__WEBPACK_IMPORTED_MODULE_1_async___default","_processQueueTasks","wasConnected","__WEBPACK_IMPORTED_MODULE_5__JingleSession__","jingleContents","videoContents","actionName","__WEBPACK_IMPORTED_MODULE_6__JingleSessionState__","isreconnect","wasstable","pcOptions","disableSimulcast","disableH264","preferH264","_abtestSuspendVideoEnabled","enableFirefoxSimulcast","createPeerConnection","__WEBPACK_IMPORTED_MODULE_11__statistics_statistics__","sendIceCandidate","__WEBPACK_IMPORTED_MODULE_12__service_xmpp_XMPPEvents___default","_assertNotEnded","iceConnectionEventName","iceStarted","setChatRoom","__WEBPACK_IMPORTED_MODULE_7__SDP__","ice","__WEBPACK_IMPORTED_MODULE_9__SDPUtil__","jcand","errorMesssage","__WEBPACK_IMPORTED_MODULE_13__util_GlobalOnErrorHandler___default","usedrip","dripContainer","sendIceCandidates","candidates","__WEBPACK_IMPORTED_MODULE_3_strophe_js__","initiator","fingerprintLine","newJingleErrorHandler","rtcCandidate","finishedCallback","iceCandidate","outerHTML","ssrcElement","setSSRCOwner","i3","ssrcInfoElement","generateRecvonlySsrc","setOfferAnswerCycle","sendSessionAccept","offerSdp","sendSessionInitiate","jingleAnswer","jingleOfferAnswerIq","newRemoteSdp","_processNewJingleOfferIq","oldLocalSdp","_renegotiate","sendContentModify","newLocalSdp","notifyMySSRCUpdate","onJingleFatalError","jingleOfferElem","originalOffer","sendTransportAccept","accept","responder","videoTransferActive","newSendersValue","sessionModify","_this12","transportAccept","medialines","transportReject","sessionTerminate","sourceAddElem","currentRemoteSdp","addSsrcInfo","i1","i2","_addOrRemoveRemoteStream","isAdd","_this13","logPrefix","readSsrcInfo","addOrRemoveSsrcInfo","_parseSsrcInfoFromSourceAdd","_parseSsrcInfoFromSourceRemove","_processRemoteAddSource","_processRemoteRemoveSource","remoteSdp","removeSsrcInfo","optionalRemoteSdp","_this14","_initiatorRenegotiate","_responderRenegotiate","_this15","_this16","offer","_this17","clearRecvonlySsrc","newLocalSDP","sourceRemoveElem","ssrcLines","operationName","oldSDP","currentLocalSDP","sdpDiff","__WEBPACK_IMPORTED_MODULE_8__SDPDiffer__","addedMedia","getNewMedia","removedMedia","_addRemoveTrackAsMuteUnmute","isMute","_this18","workFunction","oldLocalSDP","removeTrackMute","addTrackUnmute","_verifyNoSSRCChanged","audioActive","videoActive","_this19","logAudioStr","logVideoStr","isSessionActive","audioActiveChanged","setAudioTransferActive","pcVideoActiveChanged","setVideoTransferActive","_this20","newVideoSenders","parseVideoSenders","_modifyRemoteVideoActive","remoteVideoSenders","isRemoteVideoActive","newSDP","sdpDiffer","request","_this21","errResponse","errorElSel","errorReasonSel","errorMsgSel","abTesting","enableSuspendVideoTest","_getInitiatorJid","__WEBPACK_IMPORTED_MODULE_4__util_StringUtils__","integerHash","only_once","previous_async","_toString","_isArray","_map","_keys","eachSeries","iterate","forEachSeries","eachLimit","_eachLimit","forEachLimit","running","replenish","doParallel","doSeries","_asyncMap","eachfn","mapLimit","_mapLimit","memo","inject","foldl","reduceRight","reversed","reverse","foldr","filterSeries","select","selectSeries","rejectSeries","_detect","main_callback","detectSeries","sortBy","criteria","auto","tasks","remainingTasks","taskComplete","theCallback","taskCallback","safeResults","rkey","requires","retry","times","attempts","wrappedTask","wrappedCallback","wrappedResults","finalAttempt","seriesCallback","series","waterfall","wrapIterator","_parallel","parallel","parallelLimit","makeCallback","concatSeries","whilst","doWhilst","until","doUntil","worker","_insert","drain","saturated","workers","empty","kill","idle","priorityQueue","_compareTasks","sequence","compare","beg","cargo","working","drained","ts","_console_fn","memoize","hasher","queues","memoized","unmemoized","unmemoize","counter","timesSeries","seq","fns","newargs","nextargs","compose","_applyEach","go","applyEach","applyEachSeries","forever","JingleSession","__WEBPACK_IMPORTED_MODULE_1__JingleSessionState__","doInitialize","arrayEquals","array1","array2","equals","SDPDiffer","mySDP","otherSDP","myMedias","othersMedias","newMedia","othersMediaIdx","myMedia","othersMedia","otherSsrcGroup","mySsrcGroup","modify","sdpMediaSsrcs","modified","mediaSsrc","nv","SignalingLayerImpl","ssrcOwners","chatRoom","__WEBPACK_IMPORTED_MODULE_3__service_RTC_SignalingLayer__","oldChatRoom","_audioMuteHandler","_videoMuteHandler","_videoTypeHandler","__WEBPACK_IMPORTED_MODULE_2__service_RTC_SignalingEvents__","__WEBPACK_IMPORTED_MODULE_1__service_RTC_MediaType__","getMediaPresenceInfo","SignalingLayer","__WEBPACK_IMPORTED_MODULE_0__modules_util_Listenable__","__WEBPACK_IMPORTED_MODULE_2__util_GlobalOnErrorHandler__","resetLastErrorStatusRegExpr","lastErrorStatusRegExpr","errStatusCapture","PingConnectionPlugin","failedPings","PING","RAYO_XMLNS","RayoConnectionPlugin","__WEBPACK_IMPORTED_MODULE_2__ConnectionPlugin__","onRayo","roomPass","callResource","StropheLogger","__WEBPACK_IMPORTED_MODULE_1__ConnectionPlugin__","logIncoming","logOutgoing","compareIdentities","IDENTITY_PROPERTIES_FOR_COMPARE","IDENTITY_PROPERTIES","Caps","disco","versionToCapabilities","jidToVersion","__WEBPACK_IMPORTED_MODULE_1__service_xmpp_XMPPEvents___default","_addChatRoom","_removeChatRoom","CAPS","_handleCaps","_onMucMemberLeft","_removeJidToVersionEntry","__WEBPACK_IMPORTED_MODULE_2__util_Listenable__","_generateVersion","_fixChatRoomPresenceMap","identities","accumulatedValue","identity","_notifyVersionChanged","oldVersion","JitsiConferenceEventManager","__WEBPACK_IMPORTED_MODULE_6__JitsiConferenceEvents__","__WEBPACK_IMPORTED_MODULE_10__modules_statistics_statistics__","__WEBPACK_IMPORTED_MODULE_11__service_xmpp_XMPPEvents__","__WEBPACK_IMPORTED_MODULE_11__service_xmpp_XMPPEvents___default","__WEBPACK_IMPORTED_MODULE_4_jitsi_meet_logger__","chatRoomForwarder","__WEBPACK_IMPORTED_MODULE_3__modules_util_EventEmitterForwarder___default","forward","__WEBPACK_IMPORTED_MODULE_5__JitsiConferenceErrors__","setParticipantPropertyListener","setProperty","__WEBPACK_IMPORTED_MODULE_2__service_authentication_AuthenticationEvents___default","myJid","_status","updated","isAudioAvailable","isVideoAvailable","_availableDevices","__WEBPACK_IMPORTED_MODULE_8__service_RTC_RTCEvents___default","__WEBPACK_IMPORTED_MODULE_9__service_RTC_VideoType___default","ignoreStartMuted","_onByteSentStatsReceived","EventEmitterForwarder","dest","srcEvent","JitsiParticipant","hidden","_jid","_hidden","_statsID","_connectionStatus","__WEBPACK_IMPORTED_MODULE_2__modules_connectivity_ParticipantConnectionStatus__","_properties","jitsiTrack","isWebRTCTrackMuted","oldValue","_isMediaTypeMuted","Jvb121EventGenerator","_jvb121","evaluateStatus","P2PDominantSpeakerDetection","__WEBPACK_IMPORTED_MODULE_0__JitsiConferenceEvents__","_audioLevel","myUserID","BridgeChannel","_eventEmitter","_mode","datachannel","_handleChannel","ws","OPEN","colibriClass","msgPayload","jsonObject","pinnedEndpoint","selectedEndpoint","maxFrameHeightPixels","__WEBPACK_IMPORTED_MODULE_1__service_RTC_RTCEvents___default","dominantSpeakerEndpoint","isOpen","JitsiLocalTrack","__WEBPACK_IMPORTED_MODULE_4__JitsiTrackEvents__","__WEBPACK_IMPORTED_MODULE_5__RTCBrowserType__","_constraints","_prevSetMuted","_facingMode","_trackEnded","_hasSentData","_testDataSent","_realDeviceId","_noDataFromSourceTimeout","_onDeviceListChanged","__WEBPACK_IMPORTED_MODULE_6__RTCUtils__","_onAudioOutputDeviceChanged","__WEBPACK_IMPORTED_MODULE_9__service_RTC_RTCEvents___default","_initNoDataFromSourceHandlers","__WEBPACK_IMPORTED_MODULE_1__JitsiTrack__","__WEBPACK_IMPORTED_MODULE_10__service_RTC_VideoType___default","_onNoDataFromSourceError","_checkForCameraIssues","_clearNoDataFromSourceMuteResources","__WEBPACK_IMPORTED_MODULE_11__service_statistics_AnalyticsEvents__","_fireNoDataFromSourceEvent","isReceivingData","_get","storedMSID","getMSID","_queueSetMuted","setMuted","_setMuted","__WEBPACK_IMPORTED_MODULE_2__JitsiTrackError__","__WEBPACK_IMPORTED_MODULE_3__JitsiTrackErrors__","logMuteInfo","_removeStreamFromConferenceAsMute","_unregisterHandlers","_stopStream","streamOptions","getDeviceId","getCameraFacingMode","streamsInfo","streamInfo","cont","_addStreamToConferenceAsUnmute","_sendMuteStatus","detach","_bytesSent","trackSettings","__WEBPACK_IMPORTED_MODULE_7__service_RTC_CameraFacingMode___default","_stopStreamInProgress","_switchCamera","RTCSignalingState","haveLocalOffer","haveRemoteOffer","RTCIceGatheringState","gathering","CNAME","ortcRTCPeerConnection","_bufferedIceCandidates","_closed","_dtlsTransport","_iceGatherer","_iceGatheringState","_iceTransport","_localCapabilities","_localDescription","_localTrackInfos","_mids","_remoteDescription","_remoteStreams","_remoteTrackInfos","_sdpGlobalFields","__WEBPACK_IMPORTED_MODULE_6__xmpp_SDPUtil__","_signalingState","_setIceGatherer","_setIceTransport","_setDtlsTransport","__WEBPACK_IMPORTED_MODULE_1_yaeti___default","EventTarget","usePromise","_addIceCandidate","_addStream","_updateAndEmitSignalingStateChange","_createAnswer","_createOffer","_getStats","_removeStream","_setLocalDescription","_setRemoteDescription","__WEBPACK_IMPORTED_MODULE_4__errors__","getTrackById","_emitNegotiationNeeded","_createLocalDescription","addMediaSection","mediaObject","iceUfrag","localIceParameters","icePwd","localIceCandidates","candidateObject","endOfCandidates","rtpObject","paramFmtp","_iteratorNormalCompletion11","_didIteratorError11","_iteratorError11","_step11","_iterator11","_iteratorNormalCompletion12","_didIteratorError12","_iteratorError12","_step12","_iterator12","localTrackInfos","enableRtx","hasVideoRtx","rtxSsrc","rtcpMux","rtcpRsize","sdpObject","getLocalCandidates","localDtlsParameters","getRemoteParameters","ipVer","netType","sessionVersion","msidSemantic","semantic","mids","_ref3","_ref4","__WEBPACK_IMPORTED_MODULE_2__RTCSessionDescription__","_sdpObject","_iteratorNormalCompletion13","_didIteratorError13","_iteratorError13","_step13","_iterator13","sdpCandidate","sdpMIndex","sdpAttribute","degradationPreference","muxId","_iteratorNormalCompletion14","_didIteratorError14","_iteratorError14","_step14","_iterator14","codecCapability","ptime","_iteratorNormalCompletion15","_didIteratorError15","_iteratorError15","_step15","_iterator15","_iteratorNormalCompletion16","_didIteratorError16","_iteratorError16","_step16","_iterator16","encrypt","preferredEncrypt","_iteratorNormalCompletion17","_didIteratorError17","_iteratorError17","_step17","_iterator17","_iteratorNormalCompletion18","_didIteratorError18","_iteratorError18","_step18","_iterator18","_iteratorNormalCompletion19","_didIteratorError19","_iteratorError19","_step19","_iterator19","rtpSenders","rtpReceivers","_iteratorNormalCompletion20","_didIteratorError20","_iteratorError20","_step20","_iterator20","sending","_iteratorNormalCompletion21","_didIteratorError21","_iteratorError21","_step21","_iterator21","msGetStats","_iteratorNormalCompletion22","_didIteratorError22","_iteratorError22","_step22","_iterator22","isAudio","_iteratorNormalCompletion26","_didIteratorError26","_iteratorError26","_step26","_iterator26","_iteratorNormalCompletion23","_didIteratorError23","_iteratorError23","_step23","_iterator23","_iteratorNormalCompletion27","_didIteratorError27","_iteratorError27","_step27","_iterator27","datas","_iteratorNormalCompletion24","_didIteratorError24","_iteratorError24","_step24","_iterator24","_iteratorNormalCompletion25","_didIteratorError25","_iteratorError25","_step25","_iterator25","__WEBPACK_IMPORTED_MODULE_3__utils__","_startIceAndDtls","currentRemoteSsrcs","newRemoteTrackInfos","addedRemoteStreams","addedRemoteTracks","removedRemoteTracks","_iteratorNormalCompletion28","_didIteratorError28","_iteratorError28","_step28","_iterator28","_ref5","_ref6","streamRemoteId","trackRemoteId","_getParametersForRtpReceiver","_iteratorNormalCompletion29","_didIteratorError29","_iteratorError29","_step29","_iterator29","_iteratorNormalCompletion30","_didIteratorError30","_iteratorError30","_step30","_iterator30","_ref7","_ref8","_iteratorNormalCompletion31","_didIteratorError31","_iteratorError31","_step31","_iterator31","_ref9","_ref10","_iteratorNormalCompletion32","_didIteratorError32","_iteratorError32","_step32","_iterator32","_emitAddStream","_iteratorNormalCompletion33","_didIteratorError33","_iteratorError33","_step33","_iterator33","_ref11","_ref12","_emitRemoveStream","_iteratorNormalCompletion34","_didIteratorError34","_iteratorError34","_step34","_iterator34","_iteratorNormalCompletion35","_didIteratorError35","_iteratorError35","_step35","_iterator35","_getParametersForRtpSender","onstatechange","_emitConnectionStateChange","iceGatherOptions","_updateAndEmitIceGatheringStateChange","_emitIceCandidate","gather","_emitIceConnectionStateChange","getNominatedCandidatePair","oncandidatepairchange","isLocalInitialAnswer","_handleLocalInitialAnswer","_handleLocalReAnswer","_emitBufferedIceCandidates","_sendMedia","_receiveMedia","isRemoteInitialOffer","_handleRemoteInitialOffer","_handleRemoteReOffer","remoteIceCandidates","_iteratorNormalCompletion36","_didIteratorError36","_iteratorError36","_step36","_iterator36","yaetiEventTarget","_listeners","defineProperties","listenersType","oldListener","dummyListener","stopImmediatePropagation","_yaeti","defaultPrevented","_sdp","_type","__WEBPACK_IMPORTED_MODULE_0_sdp_transform___default","toIntIfInt","parseReg","needsBlank","keyLocation","rawName","validLine","paramReducer","acc","scid","formatRegExp","makeLine","formatStr","defaultOuterOrder","defaultInnerOrder","outerOrder","innerOrder","getFirstActiveMediaSection","codecsMap","savedHeaderExtension","icelite","midToKind","infos","rtxMap","rtxSet","ssrcObject","filterWithCapabilities","localFullCapabilities","remoteRtxMap","remoteCodec","remoteCodecName","localCodec","remoteParamName","remoteParamValue","localParamName","localParamValue","remoteFb","localFb","rtxCodec","remoteExtension","localExtension","remoteFecMechanism","localFecMechanism","InvalidStateError","klass","obtainWebRTCScreen","streamCallback","failCallback","gumFunction","getWebStoreInstallUrl","desktopSharingChromeExtId","checkChromeExtInstalled","runtime","getVersion","lastError","extVersion","updateRequired","minVersion","s1","s2","n1","n2","desktopSharingChromeMinExtVersion","doGetStreamFromExtension","getStream","desktopSharingChromeSources","onGetStreamResponse","__WEBPACK_IMPORTED_MODULE_0__JitsiTrackError__","__WEBPACK_IMPORTED_MODULE_1__JitsiTrackErrors__","waitForExtensionAfterInstall","waitInterval","retries","currentRetries","installed","initFirefoxExtensionDetection","desktopSharingFirefoxDisabled","firefoxExtInstalled","desktopSharingFirefoxExtId","__WEBPACK_IMPORTED_MODULE_2__RTCBrowserType__","chromeExtInstalled","chromeExtUpdateRequired","reDetectFirefoxExtension","ScreenObtainer","intChromeExtPromise","disableDesktopSharing","desktopSharingChromeDisabled","_createObtainStreamMethod","JitsiMeetNW","obtainDesktopStream","jitsiError","obtainScreenOnElectron","desktopSharingChromeMethod","append","obtainScreenFromExtension","obtainScreenOnFirefox","extensionRequired","desktopSharingFirefoxMaxVersionExtRequired","JitsiMeetScreenObtainer","openDesktopPicker","_options","gumOptions","alert","handleExternalInstall","install","handleExtensionInstallationError","webStoreInstallUrl","checkForChromeExtensionOnInterval","checkAgain","adapterFactory","dependencies","shimChrome","shimFirefox","shimEdge","shimSafari","commonShim","shimAddTrackRemoveTrack","shimGetSendersWithDtmf","shimRTCIceCandidate","shimReplaceTrack","shimRTCIceServerUrls","shimCallbacksAPI","shimLocalStreamsAPI","shimRemoteStreamsAPI","shimTrackEventTransceiver","shimCreateOfferLegacy","origSetRemoteDescription","shimSenderWithDtmf","dtmf","_dtmf","createDTMFSender","_pc","_senders","origAddTrack","origRemoveTrack","origAddStream","origRemoveStream","origGetSenders","replaceInternalStreamId","_reverseStreams","internalId","externalStream","internalStream","_streams","origGetLocalStreams","nativeStreams","newStream","oldStream","origSetLocalDescription","origLocalDescription","OrigPeerConnection","localcandidate","remotecandidate","remap","getSupportedFacingModeLies","dev","DevicesNotFoundError","TrackStartError","MediaDeviceFailedDueToShutdown","MediaDeviceKillSwitchOn","shimRTCPeerConnection","origMSTEnabled","RTCDtmfSender","setTrack","dtlsRole","getCommonCapabilities","findCodecByPayloadType","rtxCapabilityMatches","lRtx","rRtx","lCodecs","rCodecs","isActionAllowedInSignalingState","maybeAddCandidate","alreadyAdded","getRemoteCandidates","addTrackToStreamAndFireEvent","fireAddTrack","_dispatchEvent","makeError","edgeVersion","canTrickleIceCandidates","needNegotiation","rtcpMuxPolicy","hasTurn","isString","_iceGatherers","iceCandidatePoolSize","_config","_sdpSessionId","_sdpSessionVersion","_dtlsRole","_isClosed","onicegatheringstatechange","_emitGatheringStateChange","getConfiguration","_createTransceiver","hasBundleTransport","associatedRemoteMediaStreams","clonedStream","clonedTrack","_createIceGatherer","bufferCandidates","_gather","_disposeIceAndDtlsTransports","remoteMsid","setTransport","isNewTrack","nativeTrack","mediaSectionsInOffer","candidateString","inboundrtp","outboundrtp","candidatepair","RTCTrackEvent","modernStatsTypes","InternalError","NotSupportedError","nativeGetUserMedia","nativeGetSettings","applyConstraints","nativeApplyConstraints","_localStreams","getStreamById","_addTrack","_onaddstream","_onaddstreampoly","withCallback","errcb","RTCTransceiver","origCreateOffer","audioTransceiver","getTransceivers","setDirection","addTransceiver","videoTransceiver","NativeRTCIceCandidate","nativeCandidate","parsedCandidate","augmentedCandidate","eventNameToWrap","nativeAddEventListener","nativeEventName","_eventMap","nativeRemoveEventListener","unwrappedCb","nativeCreateObjectURL","nativeRevokeObjectURL","newId","dsc","nativeSetAttribute","TraceablePeerConnection","audioTransferActive","_addedStreams","localSSRCs","localUfrag","remoteUfrag","_peerVideoTypeChanged","__WEBPACK_IMPORTED_MODULE_15__service_RTC_SignalingEvents__","_peerMutedChanged","__WEBPACK_IMPORTED_MODULE_7__RTCUtils__","statsinterval","maxstats","Interop","interop","Simulcast","numOfLayers","SIMULCAST_LAYERS","explodeRemoteSimulcast","sdpConsistency","__WEBPACK_IMPORTED_MODULE_12__xmpp_SdpConsistency__","localSdpMunger","__WEBPACK_IMPORTED_MODULE_5__LocalSdpMunger__","rtxModifier","__WEBPACK_IMPORTED_MODULE_10__xmpp_RtxModifier__","what","__WEBPACK_IMPORTED_MODULE_8__RTCBrowserType__","_remoteStreamAdded","_remoteStreamRemoved","endTime","extractPrimarySSRC","SIM_LAYER_RIDS","dumpSDP","_getDesiredMediaDirection","mediaTransferActive","hasAnyTracksOfType","videoTrack","_setVideoType","endpoints","endpointTrackMap","mediaTrack","__WEBPACK_IMPORTED_MODULE_6__RTC__","onaddtrack","_remoteTrackAdded","onremovetrack","_remoteTrackRemoved","streamAudioTracks","streamVideoTracks","mediaLines","__WEBPACK_IMPORTED_MODULE_11__xmpp_SDP__","mls","__WEBPACK_IMPORTED_MODULE_14__xmpp_SDPUtil__","trackSsrc","ownerEndpointId","getSSRCOwner","peerMediaInfo","getPeerMediaInfo","_createRemoteTrack","__WEBPACK_IMPORTED_MODULE_3__JitsiRemoteTrack__","remoteTracksMap","isUserStream","_removeRemoteTrackById","_getRemoteTrackById","removedAudioTrack","removedVideoTrack","_removeRemoteTrack","toBeRemoved","_getSSRC","_injectSsrcGroupForUnifiedSimulcast","__WEBPACK_IMPORTED_MODULE_1_sdp_transform___default","simulcast_03","getters","toPlanB","maybeAddMutedLocalVideoTracksToSDP","transformer","__WEBPACK_IMPORTED_MODULE_13__xmpp_SdpTransformUtil__","audioMedia","selectMedia","changed","videoMedia","toRawSDP","webrtcStream","generateNewStreamSSRCInfo","setPrimarySsrc","setSsrcCache","fidGroups","rtxSsrcMapping","_assertTrackBelongs","webRtcStream","_handleFirefoxRemoveStream","doesBelong","isMediaStreamInPc","_ensureSimulcastGroupIsLast","localSdp","sdpStr","videoStartIndex","simStartIndex","otherStartIndex","simEndIndex","simStr","otherEndIndex","_adjustLocalMediaDirection","modifiedDirection","desiredAudioDirection","desiredVideoDirection","parsedSdp","toUnifiedPlan","_insertUnifiedPlanSimulcastReceive","mungeRemoteDescription","stripRtx","firstSsrcs","newSsrcLines","resStr","_injectH264IfNotPresent","payloadsArray","dummyPayloadType","clearVideoSsrcCache","peerTracks","_removePeerConnection","simParams","scaleResolutionDownBy","setParameters","_createOfferOrAnswer","isOffer","_successCallback","resultSdp","hasPrimarySsrcCached","makeVideoPrimarySsrcsConsistent","mungeLocalDescription","modifyRtxSsrcs","groupsMap","groupSSRCs","_processLocalSSRCsMap","_errorCallback","trackMSID","newSSRCNum","oldSSRCNum","currNumSsrcs","RTCEvents","ttfmTrackerAudioAttached","ttfmTrackerVideoAttached","JitsiRemoteTrack","hasBeenMuted","_bindMuteHandlers","_onTrackMute","_onTrackUnmute","gumStart","gumEnd","gumDuration","ttfm","__WEBPACK_IMPORTED_MODULE_4__statistics_statistics__","__WEBPACK_IMPORTED_MODULE_3__RTCBrowserType__","_playCallback","LocalSdpMunger","localVideos","isInPeerConnection","shouldFakeSdp","requiredSSRCs","ssrcCache","cachedPrimarySsrc","primaryCname","removeSSRC","addSSRCAttribute","addSSRCGroup","modifyRtxSsrcs2","__WEBPACK_IMPORTED_MODULE_2__xmpp_SdpTransformUtil__","_addMutedLocalVideoTracksToSDP","updateAssociatedRtxStream","primarySsrcInfo","primarySsrcMsid","primarySsrcCname","previousRtxSSRC","getRtxSSRC","dumpSSRCGroups","removeGroupsWithSSRC","RtxModifier","correspondingRtxSsrcs","ssrcMapping","sdpTransformer","__WEBPACK_IMPORTED_MODULE_1__SdpTransformUtil__","getSSRCCount","primaryVideoSsrcs","getPrimaryVideoSSRCs","getSSRCAttrValue","correspondingRtxSsrc","previousAssociatedRtxStream","__WEBPACK_IMPORTED_MODULE_2__SDPUtil__","containsAnySSRCGroups","findGroups","removeGroupsBySemantics","SdpConsistency","injectRecvOnly","newPrimarySsrc","getPrimaryVideoSsrc","replaceSSRC","cache","mlB2UMap","mlU2BMap","candidateToUnifiedPlan","candidateToPlanB","getFirstSendingIndexFromAnswer","rewrite","type2bl","uLine","bundleOnly","hasBundle","cached","recvonlySsrcs","mid2ul","bIdx","uIdx","bLine","ssrc2group","ssrc2ml","related","DEFAULT_NUM_OF_LAYERS","processVideo","validateDescription","transformUtils","parseSsrcs","writeSsrcs","clearSsrcCache","_parseSimLayers","_buildNewToOldSsrcMap","newSsrcList","oldSsrcList","newSsrc","oldSsrc","_fillInSourceDataFromCache","newSimSsrcs","newMsid","newCname","ssrcsToReplace","ssrcsToAdd","_generateSourceData","simSsrcs","simSsrc","_restoreSimulcast","simulcastSsrcs","relatedGroup","relatedSsrcs","relatedSSRC","nuke","invalid","TalkMutedDetection","_eventFired","_trackMuteChanged","_trackAdded","_isLocalAudioTrack","Transcriber","audioRecorder","transcriptionService","SphinxService","transcription","BEFORE_STATE","lineLength","hasPopulatedArrays","twoDimensionalArray","callBack","wordArray","offset","getUTCMilliseconds","wordObject","begin","word","maybeMerge","recordingResult","merge","arrays","potentialWords","lowestWordArray","wordToAdd","updateTranscription","foundSmaller","wordToCompare","getTranscription","TranscriptionService","Word","sphinxURL","toReturn","sendRequest","audioFileBlob","DONE","formatResponse","objects","filler","verify","audioBlob","getWord","getBeginTime","getEndTime","VideoSIPGW","sessionStateChangeListener","sessionStateChanged","handleJibriSIPStatus","handleJibriSIPState","__WEBPACK_IMPORTED_MODULE_2__VideoSIPGWConstants__","sipaddress","setState","__WEBPACK_IMPORTED_MODULE_1__JitsiVideoSIPGWSession__","addStateListener","removeStateListener","STATE_CHANGED","JitsiVideoSIPGWSession","__WEBPACK_IMPORTED_MODULE_3__VideoSIPGWConstants__","_sendJibriIQ","displayname","SpeakerStatsCollector","users","dominantSpeakerId","__WEBPACK_IMPORTED_MODULE_1__SpeakerStats___default","_onDominantSpeaker","_onUserJoin","_onUserLeave","_onDisplayNameChange","oldDominantSpeaker","newDominantSpaker","setIsDominantSpeaker","savedUser","markAsHasLeft","SpeakerStats","isLocalStats","_userId","_isLocalStats","totalDominantSpeakerTime","_dominantSpeakerStart","_hasLeft","_isDominantSpeaker","isNowDominantSpeaker","timeElapsed","logOutputDevice","__WEBPACK_IMPORTED_MODULE_6__modules_statistics_statistics__","__WEBPACK_IMPORTED_MODULE_3__modules_RTC_RTC__","JitsiMediaDevices","isDevicePermissionGranted","permissions","__WEBPACK_IMPORTED_MODULE_2__service_RTC_MediaType__","__WEBPACK_IMPORTED_MODULE_4__modules_RTC_RTCBrowserType__","__WEBPACK_IMPORTED_MODULE_1__JitsiMediaDevicesEvents__","__WEBPACK_IMPORTED_MODULE_0__RTCBrowserType__","getVideoElementName","findVideoElement","containerElement","videoElemName","matching","isResizeEventSupported","setVolume","streamElement","volume","setAutoPlay","autoPlay","autoplay"],"mappings":";CAAA,SAAAA,EAAAC,GACA,gBAAAC,UAAA,gBAAAC,QACAA,OAAAD,QAAAD,IACA,kBAAAG,gBAAAC,IACAD,UAAAH,GACA,gBAAAC,SACAA,QAAAI,YAAAL,IAEAD,EAAAM,YAAAL,KACC,mBAAAM,WAAAC,KAAA,WACD,gBAAAC,GCNA,QAAAC,GAAAC,GAGA,GAAAC,EAAAD,GACA,MAAAC,GAAAD,GAAAT,OAGA,IAAAC,GAAAS,EAAAD,IACAE,EAAAF,EACAG,KACAZ,WAUA,OANAa,GAAAJ,GAAAK,KAAAb,EAAAD,QAAAC,IAAAD,QAAAQ,GAGAP,EAAAW,KAGAX,EAAAD,QAvBA,GAAAU,KA4DA,OAhCAF,GAAAO,EAAAF,EAGAL,EAAAQ,EAAAN,EAGAF,EAAAS,EAAA,SAAAjB,EAAAkB,EAAAC,GACAX,EAAAY,EAAApB,EAAAkB,IACAG,OAAAC,eAAAtB,EAAAkB,GACAK,gBACAC,cACAC,IAAAN,KAMAX,EAAAkB,EAAA,SAAAzB,GACA,GAAAkB,GAAAlB,KAAA0B,WACA,WAA2B,MAAA1B,GAAA2B,SAC3B,WAAiC,MAAA3B,GAEjC,OADAO,GAAAS,EAAAE,EAAA,IAAAA,GACAA,GAIAX,EAAAY,EAAA,SAAAS,EAAAC,GAAsD,MAAAT,QAAAU,UAAAC,eAAAlB,KAAAe,EAAAC,IAGtDtB,EAAAyB,EAAA,GAGAzB,IAAA0B,EAAA,eAAA3B,EAAA4B,EAAAT,GC/CA,GAAAU,GAAA5B,EAAA,IACA6B,EAAA7B,EAAA,IAwBA8B,KAKAC,KAKAC,EAAAJ,EAAAK,OAAAC,KAGAzC,GAAAD,SAMA2C,mBAAA,SAAAC,GACAR,EAAAO,mBAAAC,IAOAC,sBAAA,SAAAD,GACAR,EAAAS,sBAAAD,IAMAE,UAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAA,GAAAd,GAAAI,EAAAO,EAAAC,EAAAC,EAOA,OANAF,IACAT,EAAAS,GAAAT,EAAAS,OACAT,EAAAS,GAAAI,KAAAD,IAEAX,EAAAY,KAAAD,GAEAA,GASAE,gBAAA,SAAAC,EAAAN,GAEA,OADAnC,GAAAmC,EAAAT,EAAAS,OAAAR,EACA5B,EAAA,EAAsBA,EAAAC,EAAA0C,OAAc3C,IACpCC,EAAAD,GAAA4C,SAAAF,IAOAG,YAAA,SAAAH,GACAb,EAAAa,CAEA,KADA,GAAA1C,GAAA,EACaA,EAAA4B,EAAAe,OAAoB3C,IACjC4B,EAAA5B,GAAA4C,SAAAF,EAGA,QAAAN,KAAAT,GAAA,CACA,GAAA1B,GAAA0B,EAAAS,MACA,KAAApC,EAAA,EAAsBA,EAAAC,EAAA0C,OAAc3C,IACpCC,EAAAD,GAAA4C,SAAAF,KAOAZ,OAAAL,EAAAK,OAIAJ,2DCmNA,QAASoB,KACL,GAAIC,UAAUC,mBAAoB,CAC9BC,EAAiBC,EAAeC,kBAIhC,IAAMC,GAAWL,UAAUM,UAAUC,MAAM,oBACrCC,EAAMH,EAAWI,SAASJ,EAAS,GAAI,IAAM,WAInD,OAFAb,GAAOkB,IAAP,mCAA8CF,GAEvCA,EAGX,MAAO,MAMX,QAASG,KACL,GAAML,GAAYN,UAAUM,SAE5B,IAAIA,EAAUC,MAAM,aAAc,CAC9BL,EAAiBC,EAAeS,iBAChC,IAAMC,GAAUP,EAAUC,MAAM,4BAA4B,EAI5D,OAFAf,GAAOsB,KAAP,kCAA8CD,GAEvCA,EAGX,MAAO,MAMX,QAASE,KACL,GAAIf,UAAUgB,gBAAiB,CAC3Bd,EAAiBC,EAAec,mBAChC,IAAMJ,GAAUJ,SACZT,UAAUM,UAAUC,MAAM,uBAAuB,GAAI,GAIzD,OAFAf,GAAOkB,IAAP,oCAA+CG,GAExCA,EAGX,MAAO,MAMX,QAASK,KACL,GAAI,yBAAyBC,KAAKnB,UAAUM,WAAY,CACpDJ,EAAiBC,EAAeiB,kBAEhC,IAAMC,GACArB,UAAUM,UAAUC,MAAM,2BAC1Be,EAAgBD,GAAuBA,EAAoB,GAC3DR,EAAUS,EAAgBb,SAASa,EAAe,KAAO,CAI/D,OAFA9B,GAAOsB,KAAP,mCAA+CD,GAExCA,EAGX,MAAO,MAMX,QAASU,KACL,GAAIV,UACEW,EAAKC,OAAOzB,UAAUM,UAEtBoB,EAAOF,EAAGG,QAAQ,QAEpBD,GAAO,IAEPb,EAAUJ,SAASe,EAAGI,UAAUF,EAAO,EAAGF,EAAGG,QAAQ,IAAKD,IAAQ,IAGtE,IAAMG,GAAUL,EAAGG,QAAQ,WAE3B,KAAKd,GAAWgB,EAAU,EAAG,CAEzB,GAAMC,GAAKN,EAAGG,QAAQ,MAEtBd,GAAUJ,SAASe,EAAGI,UAAUE,EAAK,EAAGN,EAAGG,QAAQ,IAAKG,IAAM,IAQlE,MALIjB,KACAX,EAAiBC,EAAe4B,sBAChCvC,EAAOsB,KAAP,sCAAkDD,IAG/CA,EAMX,QAASmB,KACL,GAAInB,UACEW,EAAKC,OAAOzB,UAAUM,UAEtB2B,EAAOT,EAAGG,QAAQ,QAWxB,QATKd,GAAWoB,EAAO,IACnBpB,EAAUJ,SAASe,EAAGI,UAAUK,EAAO,EAAGT,EAAGG,QAAQ,IAAKM,IAAQ,KAGlEpB,IACAX,EAAiBC,EAAe+B,iBAChC1C,EAAOsB,KAAP,iCAA6CD,IAG1CA,EAMX,QAASsB,KACL,GAAM7B,GAAYN,UAAUM,SAE5B,IAAIA,EAAUC,MAAM,YAAa,CAC7BL,EAAiBC,EAAeiC,oBAChC,IAAMvB,GAAUP,EAAUC,MAAM,sBAAsB,EAItD,OAFAf,GAAOsB,KAAP,qCAAiDD,GAE1CA,EAGX,MAAO,MAMX,QAASwB,KACL,GAAM/B,GAAYN,UAAUM,SAE5B,IAAIA,EAAUC,MAAM,eAAgB,CAChCL,EAAiBC,EAAemC,gBAChC,IAAMzB,GAAUP,EAAUC,MAAM,yBAAyB,EAIzD,OAFAf,GAAOsB,KAAP,wCAAoDD,GAE7CA,EAGX,MAAO,MAMX,QAAS0B,KACL,GAAMhC,GACAP,UAAUM,UAAUC,MAAM,wCAC5BM,QAMJ,IAAIN,GAA+B,gBAAtBP,UAAUwC,QAA2B,CAC9CtC,EAAiBC,EAAesC,wBAChC,IAAIjF,SAEA+C,IAASA,EAAMX,OAAS,IACxBpC,EAAO+C,EAAM,GACbM,EAAUN,EAAM,IAEpB/C,IAASA,EAAO,gBAChBqD,IAAYA,EAAU,WACtB6B,QAAQ5B,KAAR,sBAAmCtD,EAAnC,UAAiDqD,OAGjDA,GAAU,IAGd,OAAOA,GD/YXlC,WCvHIgE,cAEAzC,SAEEV,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAEnB1C,GAEFC,mBAAoB,qBAEpBQ,kBAAmB,oBAEnBK,oBAAqB,sBAErBc,sBAAuB,wBAEvBG,iBAAkB,mBAElBd,mBAAoB,qBAEpBkB,iBAAkB,mBAElBF,qBAAsB,uBAEtBK,yBAA0B,2BAS1BK,4BA3BmB,WA4Bf,QACI3C,EAAe4C,aACZ5C,EAAe6C,UACf7C,EAAe8C,uBAQ1BC,eAvCmB,WAwCf,MAAOhD,IAOXiD,eA/CmB,WAkDf,OAF8D,IAA5CnD,UAAUM,UAAUqB,QAAQ,WAGnC,UAGJzB,EAAekD,MAAM,gBAAgB,IAOhDC,SA7DmB,WA8Df,MAAOnD,KAAmBC,EAAeC,oBAO7CkD,QArEmB,WAsEf,MAAOpD,KAAmBC,EAAeS,mBAO7CmC,UA7EmB,WA8Ef,MAAO7C,KAAmBC,EAAec,qBAO7CsC,YArFmB,WAsFf,MAAOrD,KAAmBC,EAAe4B,uBAO7CiB,OA7FmB,WA8Ff,MAAO9C,KAAmBC,EAAe+B,kBAO7CsB,SArGmB,WAsGf,MAAOtD,KAAmBC,EAAeiB,oBAS7C6B,mBA/GmB,WAgHf,MAAO9C,GAAeqD,YACfrD,EAAesD,oBAAsB,IAOhDC,OAxHmB,WAyHf,MAAOxD,KAAmBC,EAAemC,kBAO7CqB,WAhImB,WAiIf,MAAOzD,KAAmBC,EAAeiC,sBAQ7CwB,eAzImB,WA0If,OAAQzD,EAAe6C,UAO3Ba,cAjJmB,WAkJf,MAAO3D,KAAmBC,EAAesC,0BAO7CqB,oBAzJmB,WA6Jf,MACK3D,GAAeqD,aACRrD,EAAe8C,sBACnB9C,EAAeoD,eACZpD,EAAe4D,sBAAwB,IAYtDC,eA7KmB,WA8Kf,MAAQ7D,GAAekD,YACZlD,EAAe8D,oBAAsB,IACzC9D,EAAe4C,aACf5C,EAAe8C,sBAU1BiB,sCA3LmB,WA4Lf,MAAO/D,GAAekD,YAAclD,EAAewD,cAOvDQ,kBAnMmB,WAoMf,MAAOhE,GAAe4C,YAAcJ,EAAiB,MAOzDsB,iBA3MmB,WA4Mf,MAAO9D,GAAekD,WAAaV,EAAiB,MAOxDyB,gBAnNmB,WAoNf,MAAOjE,GAAemD,UAAYX,EAAiB,MAQvDoB,oBA5NmB,WA6Nf,MAAO5D,GAAeoD,cAAgBZ,EAAiB,MAQ3D0B,eArOmB,WAsOf,MAAOlE,GAAe6C,SAAWL,EAAiB,MAQtDc,iBA9OmB,WA+Of,MAAOtD,GAAeqD,SAAWb,EAAiB,MAGtD2B,UAlPmB,WAmPf,OAAQnE,EAAeoE,mBAG3BA,gBAtPmB,WAuPf,MAAOpE,GAAe4C,aAQ1ByB,4BA/PmB,WAkQf,OAAQrE,EAAe4C,cAAgB5C,EAAe6C,UAO1DyB,qBAzQmB,WA2Qf,OAAQtE,EAAe6C,UAQ3B0B,sBAnRmB,WA4Rf,OAAQvE,EAAe4C,cAAgB5C,EAAe6C,UAO1D2B,kBAnSmB,WAoSf,MAAOxE,GAAekD,YACflD,EAAe4C,aACf5C,EAAewD,cACfxD,EAAeuD,UACfvD,EAAe0D,iBAG1Be,YA3SmB,WA4Sf,OAAQzE,EAAe4C,aAG3B8B,kBA/SmB,WAgTf,MAAO1E,GAAe4C,aAS1B+B,cAzTmB,WA4Tf,OAAQ3E,EAAe8C,sBAsO/BN,GA5BA,WAgBI,IAAK,GAfD9B,UACEkE,GACFxC,EACAJ,EACAE,EACA1B,EACAZ,EACAgB,EACAiB,EACAT,EACAL,GAKKjE,EAAI,EAAGA,EAAI8H,EAAUnF,OAAQ3C,IAElC,GADA4D,EAAUkE,EAAU9H,KAEhB,MAAO4D,EAMf,OAHArB,GAAOwF,KAAK,yCACZ9E,EAAiBC,EAAeiB,mBAEzB,KAKX6D,EAAAC,EAAA1G,IAAApB,KAAAqB,EAAA,2CAAA5B,EAAA4B,EAAAT,GAAA,GAAAmH,GAAAlI,EAAAS,CCnhBA0H,gBAAAC,EAAA,mBAAAC,EAgBC,WAWD,GAAAC,GAAAC,EAAAhJ,GACA,SAAAiJ,GAUA,QAAAC,GAAAC,EAAAC,GACA,MAAAC,GAAAzI,KAAAuI,EAAAC,GAWA,QAAAE,GAAAtI,EAAAuI,GACA,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAtJ,EAAAuJ,EAAAC,EACAC,EAAAX,KAAA3C,MAAA,KACAuD,EAAAC,EAAAD,IACAE,EAAAF,KAAA,QAGA,IAAAnJ,EAAA,CAwBA,IAtBA4I,GADA5I,IAAA4F,MAAA,MACAxD,OAAA,EAMAgH,EAAAE,cAAAC,EAAA5F,KAAA3D,EAAA4I,MACA5I,EAAA4I,GAAA5I,EAAA4I,GAAAY,QAAAD,EAAA,KAIA,MAAAvJ,EAAA,GAAAyJ,OAAA,IAAAP,IAOAlJ,EADAkJ,EAAAQ,MAAA,EAAAR,EAAA9G,OAAA,GACAuH,OAAA3J,IAIAP,EAAA,EAAuBA,EAAAO,EAAAoC,OAAiB3C,IAExC,UADAwJ,EAAAjJ,EAAAP,IAEAO,EAAA4J,OAAAnK,EAAA,GACAA,GAAA,MACiB,WAAAwJ,EAAA,CAMjB,OAAAxJ,GAAA,IAAAA,GAAA,OAAAO,EAAA,WAAAA,EAAAP,EAAA,GACA,QACqBA,GAAA,IACrBO,EAAA4J,OAAAnK,EAAA,KACAA,GAAA,GAMAO,IAAA6J,KAAA,KAIA,IAAAX,GAAAG,IAAAF,EAAA,CAGA,IAAA1J,GAFA+I,EAAAxI,EAAA4F,MAAA,MAEAxD,OAAsC3C,EAAA,EAAOA,GAAA,GAG7C,GAFAgJ,EAAAD,EAAAkB,MAAA,EAAAjK,GAAAoK,KAAA,KAEAX,EAGA,IAAAF,EAAAE,EAAA9G,OAA8C4G,EAAA,EAAOA,GAAA,EAKrD,IAJAN,EAAAS,EAAAD,EAAAQ,MAAA,EAAAV,GAAAa,KAAA,SAKAnB,IAAAD,IACA,CAEAE,EAAAD,EACAG,EAAApJ,CACA,OAMA,GAAAkJ,EACA,OAMAG,GAAAO,KAAAZ,KACAK,EAAAO,EAAAZ,GACAM,EAAAtJ,IAIAkJ,GAAAG,IACAH,EAAAG,EACAD,EAAAE,GAGAJ,IACAH,EAAAoB,OAAA,EAAAf,EAAAF,GACA3I,EAAAwI,EAAAqB,KAAA,MAIA,MAAA7J,GAGA,QAAA8J,GAAAC,EAAAC,GACA,kBAIA,GAAAC,GAAAC,EAAAtK,KAAAuK,UAAA,EAQA,OAHA,gBAAAF,GAAA,QAAAA,EAAA7H,QACA6H,EAAAhI,KAAA,MAEAmI,EAAAC,MAAApC,EAAAgC,EAAAN,QAAAI,EAAAC,MAUA,QAAAM,GAAAC,GACA,gBAAAC,GACAC,EAAAF,GAAAC,GAIA,QAAAE,GAAA1K,GACA,GAAAkI,EAAAyC,EAAA3K,GAAA,CACA,GAAAiK,GAAAU,EAAA3K,SACA2K,GAAA3K,GACA4K,EAAA5K,MACA6K,EAAAR,MAAApC,EAAAgC,GAGA,IAAA/B,EAAAuC,EAAAzK,KAAAkI,EAAA0C,EAAA5K,GACA,SAAA8K,OAAA,MAAA9K,EAEA,OAAAyK,GAAAzK,GAMA,QAAA+K,GAAA/K,GACA,GAAAgL,GACAC,EAAAjL,IAAAmE,QAAA,OAKA,OAJA8G,IAAA,IACAD,EAAAhL,EAAAoE,UAAA,EAAA6G,GACAjL,IAAAoE,UAAA6G,EAAA,EAAAjL,EAAAoC,UAEA4I,EAAAhL,GAKA,QAAAkL,GAAAnB,GACA,MAAAA,GAAAgB,EAAAhB,MA9LA,GAAAc,GAAAT,EAAAe,EAAAC,EACAX,KACAE,KACAvB,KACAwB,KACAvC,EAAAlI,OAAAU,UAAAC,eACAoJ,KAAAR,MACAH,EAAA,OA+LA4B,GAAA,SAAAnL,EAAAqL,GACA,GAAAC,GACAC,EAAAR,EAAA/K,GACAgL,EAAAO,EAAA,GACAC,EAAAH,EAAA,EAEArL,GAAAuL,EAAA,GAEAP,IAEAM,EAAAZ,EADAM,EAAA1C,EAAA0C,EAAAQ,KAKAR,EAEAhL,EADAsL,KAAAhD,UACAgD,EAAAhD,UAAAtI,GAlEA+J,EAkEAyB,EAjEA,SAAAxL,GACA,MAAAsI,GAAAtI,EAAA+J,MAkEAzB,EAAAtI,EAAAwL,IAKAR,GADAO,EAAAR,EADA/K,EAAAsI,EAAAtI,EAAAwL,KAEA,GACAxL,EAAAuL,EAAA,GACAP,IACAM,EAAAZ,EAAAM,IA5EA,IAAAjB,EAiFA,QACA0B,EAAAT,IAAA,IAAAhL,IACAQ,EAAAR,EACA0L,GAAAV,EACAjK,EAAAuK,IAUAF,GACApD,QAAA,SAAAhI,GACA,MAAA8J,GAAA9J,IAEAlB,QAAA,SAAAkB,GACA,GAAAX,GAAAoL,EAAAzK,EACA,iBAAAX,EACAA,EAEAoL,EAAAzK,OAGAjB,OAAA,SAAAiB,GACA,OACA6B,GAAA7B,EACA2L,IAAA,GACA7M,QAAA2L,EAAAzK,GACAoJ,QAvBApJ,EAuBAA,EAtBA,WACA,MAAAoJ,uBAAApJ,SAFA,IAAAA,KA4BA6K,EAAA,SAAA7K,EAAA4L,EAAAC,EAAA9B,GACA,GAAA+B,GAAAvB,EAAAwB,EAAA5C,EAAA1J,EAAA4L,EAGAW,EAFA/B,KACAgC,QAAAJ,EAQA,IAHAR,EAAAH,EADAnB,KAAA/J,GAIA,cAAAiM,GAAA,aAAAA,EAAA,CAKA,IADAL,KAAAxJ,QAAAyJ,EAAAzJ,QAAA,8BAAAwJ,EACAnM,EAAA,EAAuBA,EAAAmM,EAAAxJ,OAAiB3C,GAAA,EAKxC,gBAHA8K,GADApB,EAAAgC,EAAAS,EAAAnM,GAAA4L,IACAI,GAIAxB,EAAAxK,GAAA2L,EAAApD,QAAAhI,OACiB,gBAAAuK,EAEjBN,EAAAxK,GAAA2L,EAAAtM,QAAAkB,GACAgM,SACiB,eAAAzB,EAEjBuB,EAAA7B,EAAAxK,GAAA2L,EAAArM,OAAAiB,OACiB,IAAAkI,EAAAuC,EAAAF,IACjBrC,EAAAyC,EAAAJ,IACArC,EAAA0C,EAAAL,GACAN,EAAAxK,GAAAiL,EAAAH,OACiB,KAAApB,EAAApI,EAIjB,SAAA+J,OAAA9K,EAAA,YAAAuK,EAHApB,GAAApI,EAAAmL,KAAA/C,EAAA3I,EAAAsJ,EAAAC,MAAAO,EAAAC,OACAN,EAAAxK,GAAAgL,EAAAF,GAMAwB,EAAAF,IAAAxB,MAAAI,EAAAzK,GAAAiK,UAEAjK,IAIA8L,KAAAhN,UAAAmJ,GACA6D,EAAAhN,UAAA2L,EAAAzK,GACAyK,EAAAzK,GAAA8L,EAAAhN,QACiBiN,IAAA9D,GAAA+D,IAEjBvB,EAAAzK,GAAA+L,QAGS/L,KAGTyK,EAAAzK,GAAA6L,IAIA9D,EAAAC,EAAAoC,EAAA,SAAAwB,EAAAC,EAAA9B,EAAAC,EAAAmC,GACA,mBAAAP,GACA,MAAAR,GAAAQ,GAEAR,EAAAQ,GAAAC,GAMAnB,EAAAS,EAAAS,EAAAV,EAAAW,IAAAJ,EACS,KAAAG,EAAAhC,OAAA,CAMT,IAJAR,EAAAwC,GACAA,MACAxB,EAAAhB,EAAAwC,KAAAxC,EAAAyC,WAEAA,EACA,MAGAA,GAAAjC,QAGAgC,EAAAC,EACAA,EAAA9B,EACAA,EAAA,MAEA6B,EAAA3D,EA6BA,MAxBA4D,MAAA,aAIA,kBAAA9B,KACAA,EAAAC,EACAA,EAAAmC,GAIAnC,EACAa,EAAA5C,EAAA2D,EAAAC,EAAA9B,GAQAqC,WAAA,WACAvB,EAAA5C,EAAA2D,EAAAC,EAAA9B,IACa,GAGbK,GAOAA,EAAAhB,OAAA,SAAAiD,GACA,MAAAjC,GAAAiC,IAMAtE,EAAAuE,SAAA7B,GAEAzL,EAAA,SAAAgB,EAAA4L,EAAAC,GACA,mBAAA7L,GACA,SAAA8K,OAAA,4DAIAc,GAAAhC,SAIAiC,EAAAD,EACAA,MAGA1D,EAAAuC,EAAAzK,IAAAkI,EAAAyC,EAAA3K,KACA2K,EAAA3K,MAAA4L,EAAAC,MAIA5M,KACAsN,cAIAvN,EAAA,8CAWA,SAAAJ,EAAAC,GACA,qBAAAG,OAAAC,IAMA,MAAAJ,GAAAD,EALAI,GAAA,iCACA,MAAAH,GAAAD,MAMCQ,KAAA,SAAAR,GAsBD4N,SAAA3L,UAAA4L,OACAD,SAAA3L,UAAA4L,KAAA,SAAAtE,GACA,GAAAuE,GAAAtN,KACAuN,EAAAC,MAAA/L,UAAA6I,MACAmD,EAAAD,MAAA/L,UAAA8I,OACAmD,EAAAH,EAAA/M,KAAAuK,UAAA,EACA,mBACA,MAAAuC,GAAArC,MAAAlC,GAAA/I,KAAAyN,EAAAjN,KAAAkN,EAAAH,EAAA/M,KAAAuK,UAAA,QAQAyC,MAAAG,UACAH,MAAAG,QAAA,SAAAC,GACA,yBAAA7M,OAAAU,UAAAoM,SAAArN,KAAAoN,KAkBAJ,MAAA/L,UAAAsD,UACAyI,MAAA/L,UAAAsD,QAAA,SAAA+I,GACA,GAAAC,GAAA/N,KAAAgD,OACAgL,EAAAC,OAAAlD,UAAA,MAMA,MALAiD,IAAA,EAAAE,KAAAC,KAAAH,GAAAE,KAAAE,MAAAJ,IACA,IACAA,GAAAD,GAGcC,EAAAD,EAAYC,IAC1B,GAAAA,IAAAhO,YAAAgO,KAAAF,EACA,MAAAE,EAGA,YAUAR,MAAA/L,UAAA4M,UACAb,MAAA/L,UAAA4M,QAAA,SAAA5B,EAAA6B,GACA,GAAAC,GAAAC,CACA,WAAAxO,KACA,SAAAyO,WAAA,+BAIA,IAAAC,GAAA3N,OAAAf,MAIA+N,EAAAW,EAAA1L,SAAA,CAGA,sBAAAyJ,GACA,SAAAgC,WAAAhC,EAAA,qBAUA,KANA1B,UAAA/H,OAAA,IACAuL,EAAAD,GAGAE,EAAA,EAEAA,EAAAT,GAAA,CACA,GAAAY,EAOAH,KAAAE,KAGAC,EAAAD,EAAAF,GAGA/B,EAAAjM,KAAA+N,EAAAI,EAAAH,EAAAE,IAGAF,MASA,IAAAI,GAAA,mEACApP,GAAAqP,OACArP,EAAAqP,KAAA,SAAAC,GAKA,GACAC,GAAAC,EAAAC,EACAC,EAAAC,EAAAC,EAAAC,EAFAC,EAAA,GAGAjP,EAAA,CACA,IAKA6O,GAJAH,EAAAD,EAAAS,WAAAlP,OAIA,EACA8O,GAAA,EAAAJ,IAAA,GAJAC,EAAAF,EAAAS,WAAAlP,OAIA,EACA+O,GAAA,GAAAJ,IAAA,GAJAC,EAAAH,EAAAS,WAAAlP,OAIA,EACAgP,EAAA,GAAAJ,EAEAO,MAAAR,IACAG,GAAA,EAAAJ,IAAA,EACAK,EAAAC,EAAA,IACaG,MAAAP,KACbI,EAAA,IAEAC,IAAAV,EAAAvE,OAAA6E,GAAAN,EAAAvE,OAAA8E,GACAP,EAAAvE,OAAA+E,GAAAR,EAAAvE,OAAAgF,SACShP,EAAAyO,EAAA9L,OACT,OAAAsM,KAIA9P,EAAAiQ,OACAjQ,EAAAiQ,KAAA,SAAAX,GAKA,GACAC,GAAAC,EAAAC,EACAE,EAAAC,EAAAC,EAFAC,EAAA,GAGAjP,EAAA,CAEAyO,KAAA1E,QAAA,yBACA,IAMA2E,EALAH,EAAA7J,QAAA+J,EAAAzE,OAAAhK,OAKA,GAJA8O,EAAAP,EAAA7J,QAAA+J,EAAAzE,OAAAhK,QAIA,EACA2O,GAAA,GAAAG,IAAA,GAJAC,EAAAR,EAAA7J,QAAA+J,EAAAzE,OAAAhK,QAIA,EACA4O,GAAA,EAAAG,IAAA,GAJAC,EAAAT,EAAA7J,QAAA+J,EAAAzE,OAAAhK,OAMAiP,GAAAI,OAAAC,aAAAZ,GAEA,KAAAK,IACAE,GAAAI,OAAAC,aAAAX,IAEA,KAAAK,IACAC,GAAAI,OAAAC,aAAAV,UAES5O,EAAAyO,EAAA9L,OACT,OAAAsM,OAmBA9P,EASCQ,KATDP,EASC,WAKD,QAAAmQ,GAAAC,EAAA9B,GAGA8B,EAAA9B,GAAA,YAAAA,EAAA,GACA8B,EAAA,IAAA9B,EAAA,WAAAA,CAEA,IAOA1N,GAAAuJ,EAAA/H,EAAAiO,EAAAC,EAAAC,EAAAC,EAAAC,EAPAC,EAAA,GAAA3C,OAAA,IACAlF,EAAA,WACA8H,GAAA,UACA1P,GAAA,WACAC,EAAA,UACAV,GAAA,UAGA,KAAAI,EAAA,EAAaA,EAAAwP,EAAA7M,OAAc3C,GAAA,GAC3B,CAOA,IANAyP,EAAAxH,EACAyH,EAAAK,EACAJ,EAAAtP,EACAuP,EAAAtP,EACAuP,EAAAjQ,EAEA2J,EAAA,EAAeA,EAAA,GAAQA,IAEJuG,EAAAvG,GAAnBA,EAAA,GAAmBiG,EAAAxP,EAAAuJ,GACPyG,EAAAF,EAAAvG,EAAA,GAAAuG,EAAAvG,EAAA,GAAAuG,EAAAvG,EAAA,IAAAuG,EAAAvG,EAAA,OACZ/H,EAAAyO,IAAAD,EAAA/H,EAAA,GAAAiI,EAAA3G,EAAAwG,EAAA1P,EAAAC,IACA2P,IAAArQ,EAAAkQ,EAAAvG,KAgCA/H,EAhCA+H,EAkCA/H,EAAA,cAAAA,EAAA,cACAA,EAAA,6BAlCA5B,EAAAU,EACAA,EAAAD,EACAA,EAAA2P,EAAAD,EAAA,IACAA,EAAA9H,EACAA,EAAAzG,CAGAyG,GAAAgI,EAAAhI,EAAAwH,GACAM,EAAAE,EAAAF,EAAAL,GACArP,EAAA4P,EAAA5P,EAAAsP,GACArP,EAAA2P,EAAA3P,EAAAsP,GACAhQ,EAAAqQ,EAAArQ,EAAAiQ,GAoBA,GAAArO,EAlBA,QAAAyG,EAAA8H,EAAA1P,EAAAC,EAAAV,GAOA,QAAAsQ,GAAA1O,EAAAuO,EAAA1P,EAAAC,GAEA,MAAAkB,GAAA,GAAeuO,EAAA1P,GAAA0P,EAAAzP,EACfkB,EAAA,GAAeuO,EAAA1P,EAAAC,EACfkB,EAAA,GAAeuO,EAAA1P,EAAA0P,EAAAzP,EAAAD,EAAAC,EACfyP,EAAA1P,EAAAC,EAeA,QAAA6P,GAAAC,EAAAC,GAEA,GAAAC,GAAAC,EAAAH,EACAE,GAAA3N,OAAA,KAAyB2N,EAAAf,EAAAe,EAAA,EAAAF,EAAAzN,QAGzB,QADA6N,GAAA,GAAArD,OAAA,IAAAsD,EAAA,GAAAtD,OAAA,IACAnN,EAAA,EAAiBA,EAAA,GAAQA,IAEzBwQ,EAAAxQ,GAAA,UAAAsQ,EAAAtQ,GACAyQ,EAAAzQ,GAAA,WAAAsQ,EAAAtQ,EAGA,IAAA0Q,GAAAnB,EAAAiB,EAAAtG,OAAAqG,EAAAF,IAAA,MAAAA,EAAA1N,OACA,OAAA4M,GAAAkB,EAAAvG,OAAAwG,GAAA,KAOA,QAAAT,GAAAT,EAAAmB,GAEA,GAAAC,IAAA,MAAApB,IAAA,MAAAmB,EAEA,QADAnB,GAAA,KAAAmB,GAAA,KAAAC,GAAA,KACA,SAAAA,EAMA,QAAAZ,GAAAa,EAAAC,GAEA,MAAAD,IAAAC,EAAAD,IAAA,GAAAC,EAOA,QAAAP,GAAAQ,GAIA,OAFAC,MAEAhR,EAAA,EAAiBA,EAAA,EAAA+Q,EAAApO,OAAoB3C,GAAA,EAErCgR,EAAAhR,GAAA,KAHA,IAGA+Q,EAAA7B,WAAAlP,EAAA,QAAAA,EAAA,EAEA,OAAAgR,GAMA,QAAAC,GAAAD,GAIA,OAFAD,GAAA,GAEA/Q,EAAA,EAAiBA,EAAA,GAAAgR,EAAArO,OAAqB3C,GAAA,EAEtC+Q,GAAA1B,OAAAC,aAAA0B,EAAAhR,GAAA,QAAAA,EAAA,GAHA,IAKA,OAAA+Q,GAMA,QAAAG,GAAAC,GAKA,OADAC,GAAA7H,EADAwH,EAAA,GAEA/Q,EAAA,EAAiBA,EAAA,EAAAmR,EAAAxO,OAAyB3C,GAAA,EAK1C,IAHAoR,GAAAD,EAAAnR,GAAA,SAAAA,EAAA,aACAmR,EAAAnR,EAAA,aAAAA,EAAA,cACAmR,EAAAnR,EAAA,aAAAA,EAAA,UACAuJ,EAAA,EAAeA,EAAA,EAAOA,IAEtB,EAAAvJ,EAAA,EAAAuJ,EAAA,GAAA4H,EAAAxO,OAAiDoO,GAAA,IACrCA,GAXZ,mEAWY/G,OAAAoH,GAAA,KAAA7H,GAAA,GAGZ,OAAAwH,GAOA,OACAM,cAAA,SAAAjB,EAAAC,GAAyC,MAAAa,GAAAf,EAAAC,EAAAC,KACzCiB,SAAA,SAAA/P,GAAkC,MAAA2P,GAAA3B,EAAAgB,EAAAhP,GAAA,EAAAA,EAAAoB,UAClCsO,WACAd,iBACAoB,cAAA,SAAAnB,EAAAC,GAAyC,MAAAY,GAAAd,EAAAC,EAAAC,KACzCmB,SAAA,SAAAjQ,GAAkC,MAAA0P,GAAA1B,EAAAgB,EAAAhP,GAAA,EAAAA,EAAAoB,YAjLlC,kBAAApD,MAAAC,IACAD,EAAA,6BACA,MAAAH,OAIAD,EAAAsS,KAAArS,GAPA,IAAAD,GAAAC,CAkMAD,GASCQ,KATDP,EASC,WAKD,GAAA6Q,GAAA,SAAAT,EAAAmB,GACA,GAAAC,IAAA,MAAApB,IAAA,MAAAmB,EAEA,QADAnB,GAAA,KAAAmB,GAAA,KAAAC,GAAA,KACA,SAAAA,GAaAc,EAAA,SAAAX,GAEA,OADAC,MACAhR,EAAA,EAAsBA,EAAA,EAAA+Q,EAAApO,OAAoB3C,GAAA,EAE1CgR,EAAAhR,GAAA,SAAA+Q,EAAA7B,WAAAlP,EAAA,KAAAA,EAAA,EAEA,OAAAgR,IAgCAW,EAAA,SAAAC,EAAA3J,EAAA8H,EAAAP,EAAAjO,EAAAC,GACA,MAAAyO,IA9CAY,EA8CAZ,IAAAhI,EAAA2J,GAAA3B,EAAAT,EAAAhO,OA9CAsP,EA8CAvP,GA7CAsP,IAAA,GAAAC,EA6CAf,EA9CA,IAAAc,GAAAC,GAiDAe,EAAA,SAAA5J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAjO,EAAAC,GACA,MAAAmQ,GAAA5B,EAAA1P,GAAA0P,EAAAzP,EAAA2H,EAAA8H,EAAAP,EAAAjO,EAAAC,IAGAsQ,EAAA,SAAA7J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAjO,EAAAC,GACA,MAAAmQ,GAAA5B,EAAAzP,EAAAD,GAAAC,EAAA2H,EAAA8H,EAAAP,EAAAjO,EAAAC,IAGAuQ,EAAA,SAAA9J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAjO,EAAAC,GACA,MAAAmQ,GAAA5B,EAAA1P,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAjO,EAAAC,IAGAwQ,EAAA,SAAA/J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAjO,EAAAC,GACA,MAAAmQ,GAAAtR,GAAA0P,GAAAzP,GAAA2H,EAAA8H,EAAAP,EAAAjO,EAAAC,IAMAyQ,EAAA,SAAAzC,EAAA9B,GAEA8B,EAAA9B,GAAA,SAAA3M,EAAA,GACAyO,EAAA,IAAA9B,EAAA,YAAAA,CAQA,QADA+B,GAAAC,EAAAC,EAAAC,EALA3H,EAAA,WACA8H,GAAA,UACA1P,GAAA,WACAC,EAAA,UAGAN,EAAA,EAAuBA,EAAAwP,EAAA7M,OAAc3C,GAAA,GAErCyP,EAAAxH,EACAyH,EAAAK,EACAJ,EAAAtP,EACAuP,EAAAtP,EAEA2H,EAAA4J,EAAA5J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,iBACAM,EAAAuR,EAAAvR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,kBACAK,EAAAwR,EAAAxR,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,iBACA+P,EAAA8B,EAAA9B,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,mBACAiI,EAAA4J,EAAA5J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,iBACAM,EAAAuR,EAAAvR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,kBACAK,EAAAwR,EAAAxR,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,mBACA+P,EAAA8B,EAAA9B,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,iBACAiI,EAAA4J,EAAA5J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,iBACAM,EAAAuR,EAAAvR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,mBACAK,EAAAwR,EAAAxR,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,eACA+P,EAAA8B,EAAA9B,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,oBACAiI,EAAA4J,EAAA5J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,kBACAM,EAAAuR,EAAAvR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,kBACAK,EAAAwR,EAAAxR,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,oBACA+P,EAAA8B,EAAA9B,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,mBAEAiI,EAAA6J,EAAA7J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,iBACAM,EAAAwR,EAAAxR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,kBACAK,EAAAyR,EAAAzR,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,kBACA+P,EAAA+B,EAAA/B,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,kBACAiI,EAAA6J,EAAA7J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,iBACAM,EAAAwR,EAAAxR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,gBACAK,EAAAyR,EAAAzR,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,mBACA+P,EAAA+B,EAAA/B,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,kBACAiI,EAAA6J,EAAA7J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,gBACAM,EAAAwR,EAAAxR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,mBACAK,EAAAyR,EAAAzR,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,kBACA+P,EAAA+B,EAAA/B,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,kBACAiI,EAAA6J,EAAA7J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,mBACAM,EAAAwR,EAAAxR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,gBACAK,EAAAyR,EAAAzR,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,kBACA+P,EAAA+B,EAAA/B,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,oBAEAiI,EAAA8J,EAAA9J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,cACAM,EAAAyR,EAAAzR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,mBACAK,EAAA0R,EAAA1R,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,mBACA+P,EAAAgC,EAAAhC,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,kBACAiI,EAAA8J,EAAA9J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,kBACAM,EAAAyR,EAAAzR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,kBACAK,EAAA0R,EAAA1R,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,kBACA+P,EAAAgC,EAAAhC,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,oBACAiI,EAAA8J,EAAA9J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,iBACAM,EAAAyR,EAAAzR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,kBACAK,EAAA0R,EAAA1R,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,kBACA+P,EAAAgC,EAAAhC,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,gBACAiI,EAAA8J,EAAA9J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,iBACAM,EAAAyR,EAAAzR,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,mBACAK,EAAA0R,EAAA1R,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,kBACA+P,EAAAgC,EAAAhC,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,kBAEAiI,EAAA+J,EAAA/J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,iBACAM,EAAA0R,EAAA1R,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,kBACAK,EAAA2R,EAAA3R,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,oBACA+P,EAAAiC,EAAAjC,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,iBACAiI,EAAA+J,EAAA/J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,kBACAM,EAAA0R,EAAA1R,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,mBACAK,EAAA2R,EAAA3R,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,iBACA+P,EAAAiC,EAAAjC,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,mBACAiI,EAAA+J,EAAA/J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,iBACAM,EAAA0R,EAAA1R,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,kBACAK,EAAA2R,EAAA3R,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,mBACA+P,EAAAiC,EAAAjC,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,mBACAiI,EAAA+J,EAAA/J,EAAA8H,EAAA1P,EAAAC,EAAAkP,EAAAxP,EAAA,iBACAM,EAAA0R,EAAA1R,EAAA2H,EAAA8H,EAAA1P,EAAAmP,EAAAxP,EAAA,oBACAK,EAAA2R,EAAA3R,EAAAC,EAAA2H,EAAA8H,EAAAP,EAAAxP,EAAA,iBACA+P,EAAAiC,EAAAjC,EAAA1P,EAAAC,EAAA2H,EAAAuH,EAAAxP,EAAA,kBAEAiI,EAAAgI,EAAAhI,EAAAwH,GACAM,EAAAE,EAAAF,EAAAL,GACArP,EAAA4P,EAAA5P,EAAAsP,GACArP,EAAA2P,EAAA3P,EAAAsP,EAEA,QAAA3H,EAAA8H,EAAA1P,EAAAC,GAiBA,QARA4R,UAAA,SAAA3Q,GACA,MA1IA,UAAA4P,GAGA,OAFAgB,GAAA,mBACApB,EAAA,GACA/Q,EAAA,EAAsBA,EAAA,EAAAmR,EAAAxO,OAAyB3C,IAE/C+Q,GAAAoB,EAAAnI,OAAAmH,EAAAnR,GAAA,IAAAA,EAAA,UACAmS,EAAAnI,OAAAmH,EAAAnR,GAAA,IAAAA,EAAA,OAEA,OAAA+Q,IAkIAkB,EAAAP,EAAAnQ,GAAA,EAAAA,EAAAoB,UAGA+N,KAAA,SAAAnP,GACA,MA1JA,UAAAyP,GAEA,OADAD,GAAA,GACA/Q,EAAA,EAAsBA,EAAA,GAAAgR,EAAArO,OAAqB3C,GAAA,EAE3C+Q,GAAA1B,OAAAC,aAAA0B,EAAAhR,GAAA,KAAAA,EAAA,OAEA,OAAA+Q,IAoJAkB,EAAAP,EAAAnQ,GAAA,EAAAA,EAAAoB,YAnMA,kBAAApD,MAAAC,IACAD,EAAA,4BACA,MAAAH,OAIAD,EAAAiT,IAAAhT,GAPA,IAAAD,GAAAC,CA0MAD,GASCQ,KATDP,EASC,WA8DD,OA1DAiT,SAAA,SAAAtB,GACA,GAAA/Q,GAAAK,EACAiS,EAAA,GACA5E,EAAAqD,EAAApO,MACA,KAAA3C,EAAA,EAAuBA,EAAA0N,EAAS1N,KAChCK,EAAA0Q,EAAA7B,WAAAlP,KACA,GAAAK,GAAA,IACAiS,GAAAvB,EAAA/G,OAAAhK,GACiBK,EAAA,MACjBiS,GAAAjD,OAAAC,aAAA,IAAAjP,GAAA,OACAiS,GAAAjD,OAAAC,aAAA,IAAAjP,GAAA,MACAiS,GAAAjD,OAAAC,aAAA,IAAAjP,GAAA,QAEAiS,GAAAjD,OAAAC,aAAA,IAAAjP,GAAA,MACAiS,GAAAjD,OAAAC,aAAA,IAAAjP,GAAA,MAGA,OAAAiS,IAGAC,WAAA,SAAAC,GAoBA,GAAAC,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,CACA,KAAAN,IAAAD,OACAK,EAAA,GACAC,EAAA,GACAC,EAAA,GAEAJ,EAAA,iBADAD,EAAAF,EAAAC,IAEAG,EAAAI,OAAAC,SAAAN,EAAAD,EAAA3H,MAAA2H,IACAC,IACAE,EAAAH,EAAAG,QAAA,YAAoDH,EAAAG,QAAA,GACpDC,EAAAJ,EAAAI,OAAA,WAAkDJ,EAAAI,OAAA,GAClDC,EAAAL,EAAAK,KAAA,SAA8CL,EAAAK,KAAA,IAE9CG,SAAAC,OACAV,EAAA,IAAAG,EAAAC,EAAAC,EAAAC,KAlEA,kBAAAxT,MAAAC,IACAD,EAAA,8BACA,MAAAH,OAIAD,EAAAiU,aAAAhU,GAPA,IAAAD,GAAAC,CA4mKA,OAxhKA,UAAAD,EAAAC,GACA,qBAAAG,MAAAC,IACAD,EAAA,gBACA,eACA,cACA,iBACA,WACA,MAAAH,GAAAwL,MAAAjL,KAAA+K,iBAEK,CAEL,GAAAjK,GAAArB,EAAAD,EAAAsS,KAAAtS,EAAAiT,IAAAjT,EAAAiU,aACAjU,GAAAkU,QAAA5S,EAAA4S,QACAlU,EAAAmU,OAAA7S,EAAA6S,OACAnU,EAAAoU,IAAA9S,EAAA8S,IACApU,EAAAqU,KAAA/S,EAAA+S,KACArU,EAAAsU,MAAAhT,EAAAgT,MACAtU,EAAAsS,KAAAhR,EAAAgR,KACAtS,EAAAiT,IAAA3R,EAAA2R,IACAjT,EAAAkS,cAAA5Q,EAAAgR,KAAAJ,cACAlS,EAAAmS,SAAA7Q,EAAAgR,KAAAH,SACAnS,EAAAoS,cAAA9Q,EAAAgR,KAAAF,cACApS,EAAAqS,SAAA/Q,EAAAgR,KAAAD,WAEC7R,KAAA,SAAA8R,EAAAW,EAAAsB,GAeD,QAAAJ,GAAA/S,EAAAoT,GAA8B,UAAAN,GAAAO,QAAArT,EAAAoT,GAsB9B,QAAAJ,GAAAI,GAAqB,UAAAN,GAAAO,QAAA,KAAAD,GAWrB,QAAAF,GAAAE,GAAuB,UAAAN,GAAAO,QAAA,WAAAD,GA9CvB,GAAAN,EAwgHA,QAj9GAA,GAEAQ,QAAA,SAqBAC,IACAC,SAAA,sCACAC,KAAA,iBACAC,OAAA,gBACAC,KAAA,iBACAC,OAAA,mBACAC,QAAA,oBACAC,WAAA,wCACAC,YAAA,yCACAC,IAAA,iCACAC,KAAA,mCACAC,OAAA,mCACAC,QAAA,sCACAC,KAAA,mCACAC,QAAA,sCACAf,QAAA,oBACAgB,QAAA,sCACAC,SAAA,sCACAC,MAAA,gCASAA,OACAC,MAAA,mFACAC,YACAhN,GAAA,QACAiN,YAAA,SACAC,MACAC,MAAA,SACAC,MACAC,KAAA,sCACAC,IAAA,SACAC,IAAA,SACAlU,GAAA,SACAmU,MAAA,SACAC,UACAC,IAAA,SACAC,SAEAC,KAAA,6IAQAC,SAAA,SAAAC,GACA,OAAA/V,GAAA,EAA2BA,EAAAqT,EAAA0B,MAAAC,KAAArS,OAA+B3C,IAC1D,GAAA+V,IAAA1C,EAAA0B,MAAAC,KAAAhV,GACA,QAGA,WASAgW,eAAA,SAAAD,EAAAE,GACA,YAAA5C,EAAA0B,MAAAE,WAAAc,IAAA1C,EAAA0B,MAAAE,WAAAc,GAAApT,OAAA,EACA,OAAA3C,GAAA,EAA+BA,EAAAqT,EAAA0B,MAAAE,WAAAc,GAAApT,OAA0C3C,IACzE,GAAAiW,IAAA5C,EAAA0B,MAAAE,WAAAc,GAAA/V,GACA,QAIA,WAEAkW,SAAA,SAAAC,GACA,OAAAnW,GAAA,EAA2BA,EAAAqT,EAAA0B,MAAAc,IAAAlT,OAA8B3C,IACzD,GAAAmW,IAAA9C,EAAA0B,MAAAc,IAAA7V,GACA,QAGA,YAoBAoW,QACAC,MAAA,EACAC,WAAA,EACAC,SAAA,EACAC,eAAA,EACAC,SAAA,EACAC,UAAA,EACAC,aAAA,EACAC,cAAA,EACAC,SAAA,EACAC,SAAA,EACAC,YAAA,IAYAC,UACAC,MAAA,EACAC,KAAA,EACAC,KAAA,EACAd,MAAA,EACAe,MAAA,GAUAC,aACAC,OAAA,EACAC,KAAA,EACAC,MAAA,EACAC,SAAA,IAiBAC,QAAA,IACAC,kBAAA,GAcAC,aAAA,SAAArX,EAAAwK,GACAsI,EAAAS,GAAAvT,GAAAwK,GAiBA8M,aAAA,SAAAC,EAAAC,EAAA9K,GACA,GAAAjN,GAAAgY,CACA,KAAAhY,EAAA,EAAmBA,EAAA8X,EAAAG,WAAAtV,OAA4B3C,KAC/CgY,EAAAF,EAAAG,WAAAjY,IACAkY,WAAA7E,EAAAgE,YAAAC,QACAS,IAAApY,KAAAwY,WAAAH,EAAAD,IACA9K,EAAA+K,IAkBAG,WAAA,SAAAC,EAAA7X,GACA,MAAA6X,GAAAC,UAAA9X,GAOA+X,cAAA,KAMAC,eAAA,WACA,GAAAC,EAYA,iBARAtF,SAAAuF,eAAAC,gBACAxF,SAAAuF,eAAAC,gBAAAxF,SAAAyF,cAAAzF,SAAAyF,aAAA,IACAH,EAAA7Y,KAAAiZ,gBACAC,YAAAL,EAAAM,cAAA,YAEAN,EAAAtF,SAAAuF,eACAC,eAAA,gCAEAF,GASAO,aAAA,WAIA,MAHA1F,GAAAiF,gBACAjF,EAAAiF,cAAAjF,EAAAkF,kBAEAlF,EAAAiF,eAWAM,aAAA,WAYA,OAXAJ,GAAA,KACAQ,GACA,yBACA,yBACA,yBACA,yBACA,qBACA,oBACA,oBAGA1Y,EAAA,EAAuBA,EAAA0Y,EAAArW,QACvB,OAAA6V,EAD8ClY,IAE9C,IACAkY,EAAA,GAAAS,eAAAD,EAAA1Y,IACiB,MAAAV,GACjB4Y,EAAA,KAMA,MAAAA,IAqBAU,WAAA,SAAA3Y,GACA,IAAAA,EAAoB,WAEpB,IAGA0H,GAAAjI,EAAAmO,EAHAgL,EAAA9F,EAAA0F,eAAAD,cAAAvY,EAIA,KAAA0H,EAAA,EAAmBA,EAAAyC,UAAA/H,OAAsBsF,IAAA,CACzC,GAAAsF,GAAA7C,UAAAzC,EACA,IAAAsF,EACA,mBAAAtF,IACA,gBAAAA,GACAkR,EAAAN,YAAAxF,EAAA+F,YAAA7L,QACa,oBAAAtF,IACb,kBAAAsF,GAAA8L,KACA,IAAArZ,EAAA,EAA2BA,EAAAuN,EAAA5K,OAAgB3C,IAAA,CAC3C,GAAAsZ,GAAA/L,EAAAvN,EACA,iBAAAuB,IACA,kBAAA+X,GAAAD,UAAA,KACAC,EAAA,IACA,OAAAA,EAAA,IACAH,EAAAI,aAAAD,EAAA,GAAAA,EAAA,QAGa,oBAAArR,GACb,IAAAkG,IAAAZ,GACAA,EAAAlM,eAAA8M,aACAZ,EAAAY,IACA,OAAAZ,EAAAY,IACAgL,EAAAI,aAAApL,EAAAZ,EAAAY,IAOA,MAAAgL,IAYAK,UAAA,SAAAC,GAMA,MADAA,IADAA,GADAA,GADAA,GADAA,IAAA1P,QAAA,gBACAA,QAAA,cACAA,QAAA,cACAA,QAAA,gBACAA,QAAA,gBAaA2P,YAAA,SAAAD,GAMA,MADAA,IADAA,GADAA,GADAA,GADAA,IAAA1P,QAAA,UAAmC,MACnCA,QAAA,QAAiC,MACjCA,QAAA,QAAiC,MACjCA,QAAA,UAAmC,MACnCA,QAAA,UAAmC,MAenCqP,YAAA,SAAAK,GACA,MAAApG,GAAA0F,eAAAY,eAAAF,IAYAG,YAAA,SAAAC,GACA,GAAAV,EAUA,OARAW,WAEAX,MADAW,YACAC,gBAAAF,EAAA,cAEAV,EAAA,GAAAF,eAAA,qBACAe,MAAA,QACAb,EAAAc,QAAAJ,IAEAV,GAYAe,QAAA,SAAApC,GACA,IAAAA,EAAoB,WAEpB,IAAA/G,GAAA,EACA,KAAA+G,EAAAG,WAAAtV,QAAAmV,EAAAI,WAAA7E,EAAAgE,YAAAE,OACAxG,GAAA+G,EAAAqC,UAGA,QAAAna,GAAA,EAAuBA,EAAA8X,EAAAG,WAAAtV,OAA4B3C,IACnD8X,EAAAG,WAAAjY,GAAAkY,WAAA7E,EAAAgE,YAAAE,OACAxG,GAAA+G,EAAAG,WAAAjY,GAAAma,UAIA,OAAA9G,GAAAmG,UAAAzI,IAeAqJ,YAAA,SAAAtC,GACA,GAAA9X,GAAAoY,CACA,IAAAN,EAAAI,WAAA7E,EAAAgE,YAAAC,OAAA,CAGA,IAFAc,EAAA/E,EAAA6F,WAAApB,EAAAO,SAEArY,EAAA,EAAuBA,EAAA8X,EAAA7C,WAAAtS,OAA4B3C,IACnDoY,EAAAmB,aAAAzB,EAAA7C,WAAAjV,GAAAqa,SACAvC,EAAA7C,WAAAjV,GAAA+K,MAGA,KAAA/K,EAAA,EAAuBA,EAAA8X,EAAAG,WAAAtV,OAA4B3C,IACnDoY,EAAAS,YAAAxF,EAAA+G,YAAAtC,EAAAG,WAAAjY,SAES8X,GAAAI,WAAA7E,EAAAgE,YAAAE,OACTa,EAAA/E,EAAA0F,eAAAY,eAAA7B,EAAAqC,WAEA,OAAA/B,IAgBAkC,WAAA,SAAAxC,GACA,GAAA9X,GAAAoY,EAAA7O,EAAAwM,EAAAE,EAAAlL,EAAA8K,EAAA0E,EAAAjB,EAAAkB,EAAAC,CACA,IAAA3C,EAAAI,WAAA7E,EAAAgE,YAAAC,OAEA,GADAvB,EAAA+B,EAAAuC,SAAAK,cACArH,EAAA0B,MAAAe,SAAAC,GACA,IAEA,IADAqC,EAAA/E,EAAA6F,WAAAnD,GACA/V,EAAA,EAA8BA,EAAAqT,EAAA0B,MAAAE,WAAAc,GAAApT,OAA0C3C,IAGxE,GAFAiW,EAAA5C,EAAA0B,MAAAE,WAAAc,GAAA/V,aACA+K,EAAA+M,EAAA6C,aAAA1E,KACA,OAAAlL,GAAA,KAAAA,WAAA,IAAAA,EASA,GANA,UAAAkL,GAAA,gBAAAlL,aACAA,EAAA6P,UACA7P,IAAA6P,SAIA,UAAA3E,EAAA,CAGA,IAFAJ,KACA0E,EAAAxP,EAAA5E,MAAA,KACAoD,EAAA,EAAsCA,EAAAgR,EAAA5X,OAAqB4G,IAE3DiR,GADAlB,EAAAiB,EAAAhR,GAAApD,MAAA,MACA,GAAA4D,QAAA,WAAAA,QAAA,WAAA2Q,cACArH,EAAA0B,MAAAmB,SAAAsE,KACAC,EAAAnB,EAAA,GAAAvP,QAAA,WAAAA,QAAA,WACA8L,EAAArT,KAAAgY,EAAA,KAAAC,GAGA5E,GAAAlT,OAAA,IACAoI,EAAA8K,EAAAzL,KAAA,MACAgO,EAAAmB,aAAAtD,EAAAlL,QAGAqN,GAAAmB,aAAAtD,EAAAlL,EAIA,KAAA/K,EAAA,EAA+BA,EAAA8X,EAAAG,WAAAtV,OAA4B3C,IAC3DoY,EAAAS,YAAAxF,EAAAiH,WAAAxC,EAAAG,WAAAjY,KAEiB,MAAAJ,GACjBwY,EAAA/E,EAAA+F,YAAA,QAIA,KADAhB,EAAA/E,EAAA0F,eAAA8B,yBACA7a,EAAA,EAA2BA,EAAA8X,EAAAG,WAAAtV,OAA4B3C,IACvDoY,EAAAS,YAAAxF,EAAAiH,WAAAxC,EAAAG,WAAAjY,SAGS,IAAA8X,EAAAI,WAAA7E,EAAAgE,YAAAI,SAET,IADAW,EAAA/E,EAAA0F,eAAA8B,yBACA7a,EAAA,EAAuBA,EAAA8X,EAAAG,WAAAtV,OAA4B3C,IACnDoY,EAAAS,YAAAxF,EAAAiH,WAAAxC,EAAAG,WAAAjY,SAES8X,GAAAI,WAAA7E,EAAAgE,YAAAE,OACTa,EAAA/E,EAAA+F,YAAAtB,EAAAqC,WAEA,OAAA/B,IAYA0C,WAAA,SAAA3B,GACA,sBAAAA,GAAuCA,EACvCA,EAAApP,QAAA,iBACAA,QAAA,cACAA,QAAA,aACAA,QAAA,cACAA,QAAA,cACAA,QAAA,cACAA,QAAA,cACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,cAYAgR,aAAA,SAAA5B,GACA,sBAAAA,GAAuCA,EACvCA,EAAApP,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,aACAA,QAAA,eAYAiR,eAAA,SAAAC,GACA,MAAAA,GAAAvW,QAAA,OAAmC,KACnCuW,EAAA9U,MAAA,SAYA+U,iBAAA,SAAAD,GACA,GAAAE,GAAA9H,EAAA+H,kBAAAH,EACA,IAAAE,EAAAzW,QAAA,OACA,MAAAyW,EAEA,IAAArP,GAAAqP,EAAAhV,MAAA,IAEA,OADA2F,GAAA3B,OAAA,KACA2B,EAAA1B,KAAA,MAaAiR,mBAAA,SAAAJ,GACA,GAAA1Z,GAAA0Z,EAAA9U,MAAA,IACA,OAAA5E,GAAAoB,OAAA,EAA2B,MAC3BpB,EAAA4I,OAAA,KACA5I,EAAA6I,KAAA,OAYAgR,kBAAA,SAAAH,GACA,MAAAA,KAAA9U,MAAA,cAMAmV,aAAA,SAAA1b,YACAA,EAAA2b,OACAlI,EAAAmI,MAAA5b,EAAA2b,OAEA3b,EAAA6b,UACApI,EAAAmI,MAAA,UAAA7b,KAAA+b,QAAA,IAAA9b,EAAA6b,UAAA,IACA7b,EAAA+b,KAAA,MAAA/b,EAAAW,KAAA,KAAAX,EAAAgc,SACShc,EAAAic,SACTxI,EAAAmI,MAAA,UAAA7b,KAAA+b,QAAA,IACA9b,EAAAic,SAAA,IAAAjc,EAAAkc,WAAA,MACAlc,EAAAW,KAAA,KAAAX,EAAAgc,SAEAvI,EAAAmI,MAAA,UAAA5b,EAAAgc,UAkCAnY,IAAA,SAAAf,EAAAqZ,KAWAC,MAAA,SAAAD,GACApc,KAAA8D,IAAA9D,KAAAqX,SAAAC,MAAA8E,IASAlY,KAAA,SAAAkY,GACApc,KAAA8D,IAAA9D,KAAAqX,SAAAE,KAAA6E,IASAhU,KAAA,SAAAgU,GACApc,KAAA8D,IAAA9D,KAAAqX,SAAAG,KAAA4E,IASAE,MAAA,SAAAF,GACApc,KAAA8D,IAAA9D,KAAAqX,SAAAX,MAAA0F,IASAP,MAAA,SAAAO,GACApc,KAAA8D,IAAA9D,KAAAqX,SAAAI,MAAA2E,IAYAG,UAAA,SAAApE,GACA,GAAAqE,EAEA,KAAArE,EAAoB,WAEpB,mBAAAA,GAAAsE,OACAtE,IAAAsE,OAGA,IACApc,GAAAqc,EADAhC,EAAAvC,EAAAuC,QAQA,KALAvC,EAAA6C,aAAA,eACAN,EAAAvC,EAAA6C,aAAA,cAGAwB,EAAA,IAAA9B,EACAra,EAAA,EAAmBA,EAAA8X,EAAA7C,WAAAtS,OAA4B3C,IAC/C,cAAA8X,EAAA7C,WAAAjV,GAAAqa,WACA8B,GAAA,IAAArE,EAAA7C,WAAAjV,GAAAqa,SACA,KAAAhH,EAAAmG,UAAA1B,EAAA7C,WAAAjV,GAAA+K,OAAA,IAIA,IAAA+M,EAAAG,WAAAtV,OAAA,GAEA,IADAwZ,GAAA,IACAnc,EAAA,EAAuBA,EAAA8X,EAAAG,WAAAtV,OAA4B3C,IAEnD,QADAqc,EAAAvE,EAAAG,WAAAjY,IACAkY,UACA,IAAA7E,GAAAgE,YAAAC,OAEA6E,GAAA9I,EAAA6I,UAAAG,EACA,MACA,KAAAhJ,GAAAgE,YAAAE,KAEA4E,GAAA9I,EAAAmG,UAAA6C,EAAAlC,UACA,MACA,KAAA9G,GAAAgE,YAAAG,MAEA2E,GAAA,YAAAE,EAAAlC,UAAA,MAGAgC,GAAA,KAAA9B,EAAA,QAEA8B,IAAA,IAGA,OAAAA,IAOAG,WAAA,EAMAC,sBASAC,oBAAA,SAAAjc,EAAAkc,GACApJ,EAAAkJ,mBAAAhc,GAAAkc,KA8CA7I,QAAA,SAAArT,EAAAoT,GAEA,aAAApT,GAAA,YAAAA,GAAA,OAAAA,IACAoT,MAAA+I,MACA/I,EAAA+I,MAAArJ,EAAAS,GAAAG,OACSN,IACTA,GAAqB+I,MAAArJ,EAAAS,GAAAG,UAKrBtU,KAAAgd,SAAAtJ,EAAA6F,WAAA3Y,EAAAoT,GAGAhU,KAAAwZ,KAAAxZ,KAAAgd,UAGAtJ,EAAAO,QAAAxS,WAUAgb,KAAA,WACA,MAAAzc,MAAAgd,UAaAnP,SAAA,WACA,MAAA6F,GAAA6I,UAAAvc,KAAAgd,WAaAC,GAAA,WAEA,MADAjd,MAAAwZ,KAAAxZ,KAAAwZ,KAAA0D,WACAld,MAaAR,KAAA,WAEA,MADAQ,MAAAwZ,KAAAxZ,KAAAgd,SACAhd,MAeAgU,MAAA,SAAAmJ,GACA,OAAA3O,KAAA2O,GACAA,EAAAzb,eAAA8M,cACA2O,EAAA3O,GACAxO,KAAAwZ,KAAA4D,gBAAA5O,GAEAxO,KAAAwZ,KAAAI,aAAApL,EAAA2O,EAAA3O,IAIA,OAAAxO,OAmBAU,EAAA,SAAAE,EAAAoT,EAAA8F,GACA,GAAA4C,GAAAhJ,EAAA6F,WAAA3Y,EAAAoT,EAAA8F,EAKA,OAJA9Z,MAAAwZ,KAAAN,YAAAwD,GACA,gBAAA5C,IAAA,gBAAAA,KACA9Z,KAAAwZ,KAAAkD,GAEA1c,MAiBAqd,MAAA,SAAAlF,GACA,GAAAmF,GACAC,EAAA7J,EAAA0F,cACA,KACAkE,WAAAC,EAAAC,WACS,MAAAvd,GACTqd,KAEA,GAAAG,GAAAH,EACAC,EAAAC,WAAArF,MACAzE,EAAA+G,YAAAtC,EAGA,OAFAnY,MAAAwZ,KAAAN,YAAAuE,GACAzd,KAAAwZ,KAAAiE,EACAzd,MAeA6B,EAAA,SAAAiY,GACA,GAAA4C,GAAAhJ,EAAA+F,YAAAK,EAEA,OADA9Z,MAAAwZ,KAAAN,YAAAwD,GACA1c,MAcA0d,EAAA,SAAAxD,GACA,GAAAyD,GAAApK,SAAA4F,cAAA,OAGAwE,GAAAC,UAAA1D,CAKA,KAFA,GAAA2D,GAAAnK,EAAAiH,WAAAgD,GAEAE,EAAAvF,WAAAtV,OAAA,GACAhD,KAAAwZ,KAAAN,YAAA2E,EAAAvF,WAAA,GAEA,OAAAtY,QAiCA0T,EAAAoK,QAAA,SAAA/B,EAAAgC,EAAAnd,EAAAod,EAAAvb,EAAAuL,EAAAiQ,GACAje,KAAA+b,UACA/b,KAAA+d,KACA/d,KAAAY,OACAZ,KAAAge,OACAhe,KAAAyC,KACAzC,KAAAie,YAA+BC,oBAAAC,4BAE/Bne,KAAAie,QAAAG,YACA1K,EAAAtL,KAAA,yEACApI,KAAAie,QAAAC,iBAAAle,KAAAie,QAAAG,gBACApe,MAAAie,QAAAG,WAGApe,KAAAie,QAAAC,iBACAle,KAAAgO,OAAA0F,EAAA+H,kBAAAzN,GAAA,KAEAhO,KAAAgO,OAGAhO,KAAAqe,SAGA3K,EAAAoK,QAAArc,WAYA6c,aAAA,SAAAnG,GACA,GAAAoG,GAAApG,EAAA6C,aAAA,QAIA,OAHAuD,IAAAve,KAAAie,QAAAE,0BACAI,IAAA/X,MAAA,SAEA+X,GAYAC,eAAA,SAAArG,GACA,GAAAsG,KACA,KAAAze,KAAA+d,GACA,QAEA,IAAAW,GAAA1e,IAQA,OAPA0T,GAAAwE,aAAAC,EAAA,cAAAA,GACAuG,EAAAJ,aAAAnG,KAAAuG,EAAAX,KACAU,QAGAA,KAAAze,KAAAse,aAAAnG,KAAAnY,KAAA+d,IAcAY,QAAA,SAAAxG,GACA,GAAAnK,GAAAmK,EAAA6C,aAAA,OACAhb,MAAAie,QAAAC,mBACAlQ,EAAA0F,EAAA+H,kBAAAzN,GAEA,IAAA4Q,GAAAzG,EAAA6C,aAAA,OACA,UAAAhb,KAAAwe,eAAArG,IACAnY,KAAAY,OAAA8S,EAAA8E,WAAAL,EAAAnY,KAAAY,OACAZ,KAAAge,OAAAxQ,MAAAG,QAAA3N,KAAAge,OAAA,IAAAhe,KAAAge,KAAAjZ,QAAA6Z,OAAA5e,KAAAge,OACAhe,KAAAyC,IAAA0V,EAAA6C,aAAA,QAAAhb,KAAAyC,IACAzC,KAAAgO,UAAAhO,KAAAgO,OAgBA6Q,IAAA,SAAA1G,GACA,GAAAqE,GAAA,IACA,KACAA,EAAAxc,KAAA+b,QAAA5D,GACS,MAAAlY,GAET,KADAyT,GAAAiI,aAAA1b,GACAA,EAEA,MAAAuc,IASA3O,SAAA,WACA,mBAAiB7N,KAAA+b,QAAA,IAAA/b,KAAAY,KAAA,IACjBZ,KAAAyC,GAAA,IAAAzC,KAAA+d,GAAA,OA6BArK,EAAAoL,aAAA,SAAAC,EAAAhD,GACA/b,KAAA+e,SACA/e,KAAA+b,UACA/b,KAAAgf,eAAAC,OAAAC,UACAlf,KAAAqe,SAGA3K,EAAAoL,aAAArd,WAQAod,IAAA,WAEA,MADA7e,MAAAgf,eAAAC,OAAAC,UACAlf,KAAA+b,WAMAoD,MAAA,WACAnf,KAAAgf,eAAAC,OAAAC,WASArR,SAAA,WACA,wBAAiB7N,KAAA+b,QAAA,IAAA/b,KAAA+e,OAAA,OAiJjBrL,EAAA0L,WAAA,SAAAC,EAAApB,GAEAje,KAAAqf,UAEArf,KAAAie,aACA,IAAAqB,GAAAtf,KAAAie,QAAAsB,UAAA,EAGA,KAAAF,EAAAta,QAAA,YAAAsa,EAAAta,QAAA,SACA,IAAAua,EAAAva,QAAA,MACA/E,KAAAwf,OAAA,GAAA9L,GAAA+L,UAAAzf,MAEAA,KAAAwf,OAAA,GAAA9L,GAAAgM,KAAA1f,MAIAA,KAAAsb,IAAA,GAEAtb,KAAAmT,OAAA,KAEAnT,KAAA2f,SAAA,KAGA3f,KAAA4f,cACA5f,KAAA6f,cACA7f,KAAA8f,WAGA9f,KAAA+f,iBACA/f,KAAAgM,YACAhM,KAAAggB,gBACAhgB,KAAAigB,kBACAjgB,KAAAkgB,aACAlgB,KAAAmgB,eACAngB,KAAAogB,uBACAC,QACAC,cAGAtgB,KAAAugB,aAAA,KACAvgB,KAAAwgB,mBAAA,KAEAxgB,KAAAygB,iBACAzgB,KAAA0gB,aACA1gB,KAAA2gB,iBACA3gB,KAAA4gB,qBACA5gB,KAAA6gB,UACA7gB,KAAA8gB,YAEA9gB,KAAA+gB,SACA/gB,KAAAghB,UAAA,EAEAhhB,KAAAihB,sBAAA,KACAjhB,KAAAkhB,sBAAA,KACAlhB,KAAAmhB,wBAAA,KAGAnhB,KAAAohB,WAAA,EAIAphB,KAAAugB,aAAAvT,WAAA,WACAhN,KAAAqhB,WACKhU,KAAArN,MAAA,KAEL+T,EAAAnB,WAAA5S,KAAAie,QAAApL,SACA7S,KAAAshB,uBAAAthB,KAAAie,QAAAsD,WAGA,QAAA/S,KAAAkF,GAAAkJ,mBACA,GAAAlJ,EAAAkJ,mBAAAlb,eAAA8M,GAAA,CACA,GAAAsO,GAAApJ,EAAAkJ,mBAAApO,GAEAgT,EAAA,YACAA,GAAA/f,UAAAqb,EACA9c,KAAAwO,GAAA,GAAAgT,GACAxhB,KAAAwO,GAAAiT,KAAAzhB,QAKA0T,EAAA0L,WAAA3d,WAOA0d,MAAA,WACAnf,KAAAwf,OAAAkC,SAGA1hB,KAAA6f,cACA7f,KAAA8f,WAGA9f,KAAA+f,iBACA/f,KAAAgM,YACAhM,KAAAggB,gBACAhgB,KAAAigB,kBACAjgB,KAAAkgB,aACAlgB,KAAAmgB,eAEAngB,KAAAygB,iBACAzgB,KAAA0gB,aACA1gB,KAAA2gB,iBACA3gB,KAAA8gB,YAEA9gB,KAAA+gB,SACA/gB,KAAA2hB,aACA3hB,KAAAghB,UAAA,GAYAY,MAAA,WACA5hB,KAAA6gB,WAQAgB,OAAA,WACA7hB,KAAA6gB,WAyBAiB,YAAA,SAAAC,GACA,GAAAC,GAAA,uCAAA5X,QAAA,iBAAA1J,GACA,GAAA6H,GAAA,GAAA2F,KAAA+T,SAAA,CAEA,QADA,MAAAvhB,EAAA6H,EAAA,EAAAA,EAAA,GACAsF,SAAA,KAEA,uBAAA5N,IAAA,gBAAAA,GACA+hB,EAAA,IAAAD,EAEAC,EAAA,IA0BAE,wBAAA,SAAA3C,EAAA4C,EAAA1V,GACAzM,KAAAogB,sBAAAb,GAAA4C,GAAA1V,GA4CA2V,QAAA,SAAA9G,EAAA+G,EAAA5V,EAAA6V,EAAAC,EAAAC,EAAAC,GACAziB,KAAAsb,MAIAtb,KAAA0iB,QAAAhP,EAAA+H,kBAAAzb,KAAAsb,KAKAtb,KAAAyiB,WAAA/O,EAAA2H,eAAArb,KAAAsb,KAKAtb,KAAAqiB,OAKAriB,KAAA2iB,SAAA,OAEA3iB,KAAA4iB,iBAAAnW,EACAzM,KAAA2gB,iBACA3gB,KAAA0gB,aACA1gB,KAAAygB,iBACAzgB,KAAA8gB,YAGA9gB,KAAAmT,OAAAO,EAAA6H,iBAAAvb,KAAAsb,KAEAtb,KAAA6iB,qBAAAnP,EAAA+C,OAAAE,WAAA,MAEA3W,KAAAwf,OAAAsD,SAAAR,EAAAC,EAAAC,IA2BAO,OAAA,SAAAzH,EAAA0H,EAAAC,EAAAxW,EAAA6V,EAAAC,EAAAW,GACA,KAAAljB,KAAAwf,iBAAA9L,GAAAgM,MAGA,MACA9e,KAAA,sBACAqb,QAAA,+DAJAjc,MAAAwf,OAAA2D,QAAA7H,EAAA0H,EAAAC,EAAAxW,EAAA6V,EAAAC,EAAAW,IAoCAE,QAAA,SAAA9H,EAAA7O,EAAA6V,EAAAC,EAAAW,GACA,IAAAljB,KAAAqjB,2BAGA,MACAziB,KAAA,sBACAqb,QAAA,gEAJAjc,MAAAwf,OAAA8D,SAAAhI,EAAA7O,EAAA6V,EAAAC,EAAAW,IAaAG,yBAAA,WACA,GAAArjB,KAAAwf,iBAAA9L,GAAAgM,KAAA,CACA,IAAA6D,KAAwB,QACxB,KACAC,eAAAC,QAAA,yBACAD,eAAAE,WAAA,aACa,MAAAzjB,GACb,SAEA,SAEA,UAsBA0jB,SAAA,SAAAxL,KAwBAyL,UAAA,SAAAzL,KAkBA0L,SAAA,SAAAnT,KAkBAoT,UAAA,SAAApT,KAiBAqT,aAAA,SAAAd,KAiBAe,KAAA,SAAA7L,GACA,UAAAA,EAAA,CACA,qBAAAA,GAAAuB,KACA,OAAArZ,GAAA,EAA2BA,EAAA8X,EAAAnV,OAAiB3C,IAC5CL,KAAAikB,WAAA9L,EAAA9X,QAES,kBAAA8X,GAAAsE,KACTzc,KAAAikB,WAAA9L,EAAAsE,QAEAzc,KAAAikB,WAAA9L,EAGAnY,MAAAwf,OAAA0E,UAWAC,MAAA,WAGAC,aAAApkB,KAAAugB,cACAvgB,KAAAqhB,WAmBAgD,aAAA,SAAAlM,EAAA1L,EAAA6X,EAAAC,GACA,GAAAC,GAAA,KACA9F,EAAA1e,IACA,mBAAAmY,GAAAsE,OACAtE,IAAAsE,OAEA,IAAAha,GAAA0V,EAAA6C,aAAA,KAMA,IALAvY,IACAA,EAAAzC,KAAA8hB,YAAA,gBACA3J,EAAAyB,aAAA,KAAAnX,IAGA,kBAAAgK,IAAA,kBAAA6X,GAAA,CACA,GAAAvI,GAAA/b,KAAAykB,WAAA,SAAAC,GAEAF,GACA9F,EAAAiG,mBAAAH,GAGA,UADAE,EAAA1J,aAAA,QAEAsJ,GACAA,EAAAI,GAEiBjY,GACjBA,EAAAiY,IAEa,qBAAAjiB,EAGb8hB,KACAC,EAAAxkB,KAAA4kB,gBAAAL,EAAA,WAOA,MALA7F,GAAAmG,cAAA9I,GAEAuI,GACAA,EAAA,YAOA,MADAtkB,MAAAgkB,KAAA7L,GACA1V,GAiBAqiB,OAAA,SAAA3M,EAAA1L,EAAA6X,EAAAC,GACA,GAAAC,GAAA,KACA9F,EAAA1e,IACA,mBAAAmY,GAAAsE,OACAtE,IAAAsE,OAEA,IAAAha,GAAA0V,EAAA6C,aAAA,KAMA,IALAvY,IACAA,EAAAzC,KAAA8hB,YAAA,UACA3J,EAAAyB,aAAA,KAAAnX,IAGA,kBAAAgK,IAAA,kBAAA6X,GAAA,CACA,GAAAvI,GAAA/b,KAAAykB,WAAA,SAAAC,GAEAF,GACA9F,EAAAiG,mBAAAH,EAEA,IAAAO,GAAAL,EAAA1J,aAAA,OACA,eAAA+J,EACAtY,GACAA,EAAAiY,OAEiB,cAAAK,EAKjB,MACAnkB,KAAA,eACAqb,QAAA,sBAAA8I,EANAT,IACAA,EAAAI,KAQa,6BAAAjiB,EAGb8hB,KACAC,EAAAxkB,KAAA4kB,gBAAAL,EAAA,WAOA,MALA7F,GAAAmG,cAAA9I,GAEAuI,GACAA,EAAA,YAOA,MADAtkB,MAAAgkB,KAAA7L,GACA1V,GAOAwhB,WAAA,SAAAe,GACA,UAAAA,IACAA,EAAAtM,UACAsM,EAAA1M,WACA,MACA1X,KAAA,eACAqb,QAAA,+BAGAjc,MAAA+gB,MAAAle,KAAAmiB,IAMAC,aAAA,WACAjlB,KAAA+gB,MAAAle,KAAA,WACA7C,KAAAwf,OAAAyF,eAEAjlB,KAAAugB,aAAAvT,WAAA,WACAhN,KAAAqhB,WACShU,KAAArN,MAAA,MAyBT4kB,gBAAA,SAAA7F,EAAAhD,GACA,GAAAmJ,GAAA,GAAAxR,GAAAoL,aAAAC,EAAAhD,EAEA,OADA/b,MAAAkgB,UAAArd,KAAAqiB,GACAA,GAaAP,mBAAA,SAAAQ,GAGAnlB,KAAAggB,aAAAnd,KAAAsiB,IAmEAV,WAAA,SAAA1I,EAAAgC,EAAAnd,EAAAod,EAAAvb,EAAAuL,EAAAiQ,GACA,GAAAmH,GAAA,GAAA1R,GAAAoK,QAAA/B,EAAAgC,EAAAnd,EAAAod,EAAAvb,EAAAuL,EAAAiQ,EAEA,OADAje,MAAAmgB,YAAAtd,KAAAuiB,GACAA,GAaAP,cAAA,SAAAM,GAGAnlB,KAAAigB,eAAApd,KAAAsiB,EAGA,IAAA9kB,GAAAL,KAAAmgB,YAAApb,QAAAogB,EACA9kB,IAAA,GACAL,KAAAmgB,YAAA3V,OAAAnK,EAAA,IAaAihB,uBAAA,SAAAC,GACAvhB,KAAAuhB,eACAA,MACA7N,EAAA2R,cACA3R,EAAA4R,aACA5R,EAAA6R,QACA7R,EAAA8R,gBACA9R,EAAA+R,UACA/R,EAAAgS,WAEArX,QAAArO,KAAA2lB,sBAAAtY,KAAArN,QAWA2lB,sBAAA,SAAAC,GACA5lB,KAAAuhB,WAAAqE,EAAAnkB,UAAAb,MAAAglB,GAmBAC,WAAA,SAAAC,GAIA,GAHA9lB,KAAA6iB,qBAAAnP,EAAA+C,OAAAQ,cAAA6O,GAEApS,EAAAxP,KAAA,kCAAA4hB,GACA9lB,KAAA0gB,UAAA,CACA,GAAAqF,KACA/lB,MAAA2gB,iBACA3gB,KAAAygB,gBACAsF,EAAAjS,GACAiJ,MAAArJ,EAAAS,GAAAG,OACA0J,KAAA,iBAIAhe,KAAAwgB,mBAAAxgB,KAAAgmB,oBACA,IAAAhmB,KAAAimB,qBAAA5Y,KAAArN,OACAA,KAAAwf,OAAA0G,YAAAH,OAEArS,GAAAxP,KAAA,gEACAlE,KAAAwf,OAAA2G,oBACAnmB,KAAAomB,iBAaAvD,qBAAA,SAAAwD,EAAAC,GAEA,OAAA9X,KAAAkF,GAAAkJ,mBACA,GAAAlJ,EAAAkJ,mBAAAlb,eAAA8M,GAAA,CACA,GAAAtC,GAAAlM,KAAAwO,EACA,IAAAtC,EAAAqa,cACA,IACAra,EAAAqa,cAAAF,EAAAC,GACqB,MAAAE,GACrB9S,EAAA4I,MAAA9N,EAAA,gDACAgY,IAOA,GAAAxmB,KAAA4iB,iBACA,IACA5iB,KAAA4iB,iBAAAyD,EAAAC,GACa,MAAArmB,GACbyT,EAAAiI,aAAA1b,GACAyT,EAAA4I,MACA,iDAAArc,KAWAmmB,cAAA,SAAAE,GACA,gBAAAtmB,MAAAugB,cACA6D,aAAApkB,KAAAugB,cAIA,OAAAvgB,KAAAwgB,qBACAxgB,KAAA2kB,mBAAA3kB,KAAAwgB,oBACAxgB,KAAAwgB,mBAAA,MAGA9M,EAAAxP,KAAA,4BACAlE,KAAAwf,OAAA4G,gBAEApmB,KAAAygB,iBACAzgB,KAAA2gB,iBACA3gB,KAAA8gB,YAGA9gB,KAAAgM,YACAhM,KAAA+f,iBACA/f,KAAAggB,gBACAhgB,KAAAigB,kBACAjgB,KAAAkgB,aACAlgB,KAAAmgB,eAGAngB,KAAA6iB,qBAAAnP,EAAA+C,OAAAO,aAAAsP,GACAtmB,KAAA0gB,cAeA+F,UAAA,SAAAzb,EAAA0b,GACAhT,EAAAxP,KAAA,mBACA,IAAAiU,GAAAnY,KAAAwf,OAAAmH,WAAA3b,EACA,WAAAmN,EAAA,CAEAnY,KAAA2jB,WAAAjQ,EAAA0L,WAAA3d,UAAAkiB,WACAxL,EAAAuC,WAAA1a,KAAAwf,OAAAoH,OAAAzO,EAAAG,WAAAtV,OACAhD,KAAA2jB,SAAAxL,EAAAG,WAAA,IAEAtY,KAAA2jB,SAAAxL,IAGAnY,KAAA6jB,WAAAnQ,EAAA0L,WAAA3d,UAAAoiB,WACA6C,EACA1mB,KAAA6jB,SAAA6C,GAEA1mB,KAAA6jB,SAAAnQ,EAAA6I,UAAApE,IAMA,KADA,GAAA9X,GAAA+kB,EACAplB,KAAAigB,eAAAjd,OAAA,GACAoiB,EAAAplB,KAAAigB,eAAA4G,OACAxmB,EAAAL,KAAAgM,SAAAjH,QAAAqgB,KACA,GACAplB,KAAAgM,SAAAxB,OAAAnK,EAAA,EAKA,MAAAL,KAAAmgB,YAAAnd,OAAA,GACAhD,KAAAgM,SAAAnJ,KAAA7C,KAAAmgB,YAAA0G,MAIA,IAAA7mB,KAAA2gB,eAAA3gB,KAAAwf,OAAAsH,cACA9mB,KAAAomB,oBADA,CAKA,GACAW,GAAAC,EADAhJ,EAAA7F,EAAA6C,aAAA,OAEA,WAAAgD,GAAA,cAAAA,EAAA,CAEA,GAAAhe,KAAA2gB,cACA,MAeA,OAXAoG,GAAA5O,EAAA6C,aAAA,aACAgM,EAAA7O,EAAA8O,qBAAA,YACA,OAAAF,GACA,wBAAAA,GAAAC,EAAAhkB,OAAA,IACA+jB,EAAA,YAEA/mB,KAAA6iB,qBAAAnP,EAAA+C,OAAAG,SAAAmQ,IAEA/mB,KAAA6iB,qBAAAnP,EAAA+C,OAAAG,SAAA,eAEA5W,MAAAomB,cAAAW,GAKA,GAAArI,GAAA1e,IACA0T,GAAAwE,aAAAC,EAAA,cAAAuE,GACA,GAAArc,GAAA6mB,CAIA,KAFAA,EAAAxI,EAAA1S,SACA0S,EAAA1S,YACA3L,EAAA,EAAuBA,EAAA6mB,EAAAlkB,OAAoB3C,IAAA,CAC3C,GAAA+kB,GAAA8B,EAAA7mB,EAGA,MACA+kB,EAAAzG,QAAAjC,KACAgC,EAAA+B,eAAA2E,EAAA/G,KAKAK,EAAA1S,SAAAnJ,KAAAuiB,GAJAA,EAAAvG,IAAAnC,IACAgC,EAAA1S,SAAAnJ,KAAAuiB,GAKiB,MAAAnlB,GAEjByT,EAAAtL,KAAA,wDAAAnI,EAAAgc,gBAUAsF,cAkBA4F,YAAA,SAAAnc,EAAAoc,EAAAV,GACAhT,EAAAxP,KAAA,0BACAlE,KAAA0gB,YAEA,IAAA2G,EACA,KACAA,EAAArnB,KAAAwf,OAAAmH,WAAA3b,GACS,MAAA/K,GACT,iBAAAA,EAAoC,KAAAA,EACpCD,MAAA6iB,qBAAAnP,EAAA+C,OAAAG,SAAA,cACA5W,KAAAomB,cAAA,cAEA,GAAAiB,IAEArnB,KAAA2jB,WAAAjQ,EAAA0L,WAAA3d,UAAAkiB,WACA0D,EAAA3M,WAAA1a,KAAAwf,OAAAoH,OAAAS,EAAA/O,WAAAtV,OACAhD,KAAA2jB,SAAA0D,EAAA/O,WAAA,IAEAtY,KAAA2jB,SAAA0D,IAGArnB,KAAA6jB,WAAAnQ,EAAA0L,WAAA3d,UAAAoiB,WACA6C,EACA1mB,KAAA6jB,SAAA6C,GAEA1mB,KAAA6jB,SAAAnQ,EAAA6I,UAAA8K,KAIArnB,KAAAwf,OAAA2H,YAAAE,KACA3T,EAAA+C,OAAAG,UAYA,GANAyQ,EAAAC,uBACAD,EAAAC,uBAAA5T,EAAAS,GAAAW,OAAA,YAAA9R,OAAA,EAEAqkB,EAAAJ,qBAAA,mBAAAjkB,OAAA,GACAqkB,EAAAJ,qBAAA,YAAAjkB,OAAA,EAEA,CAKA,GAAA3C,GAAAknB,EAAAC,KACAjG,EAAA8F,EAAAJ,qBAAA,YACA,IAAA1F,EAAAve,OAAA,EACA,IAAA3C,EAAA,EAAuBA,EAAAkhB,EAAAve,OAAuB3C,IAC9CknB,EAAA7T,EAAA6G,QAAAgH,EAAAlhB,IACAL,KAAAuhB,WAAAgG,IAAAC,EAAA3kB,KAAA7C,KAAAuhB,WAAAgG,GAGA,KAAAC,EAAAxkB,QACA,IAAAqkB,EAAAJ,qBAAA,QAAAjkB,YAOAhD,KAAA4gB,mBACA5gB,KAAAynB,aAAAD,GALAxnB,KAAAwf,OAAAkI,kBAAAN,OAhBApnB,MAAAwf,OAAAkI,kBAAAN,IAkCAO,yBAAA,SAAApG,GAEA,GAAAlhB,GAAAuJ,EAAAge,EAAAC,CACA,KAAAxnB,EAAA,EAAmBA,EAAAkhB,EAAAve,OAAA,IAA2B3C,EAAA,CAE9C,IADAunB,EAAAvnB,EACAuJ,EAAAvJ,EAAA,EAA2BuJ,EAAA2X,EAAAve,SAAuB4G,EAClD2X,EAAA3X,GAAAnI,UAAAqmB,SAAAvG,EAAAqG,GAAAnmB,UAAAqmB,WACAF,EAAAhe,EAGAge,KAAAvnB,IACAwnB,EAAAtG,EAAAlhB,GACAkhB,EAAAlhB,GAAAkhB,EAAAqG,GACArG,EAAAqG,GAAAC,GAGA,MAAAtG,IAgBAwG,iBAAA,SAAAxG,GACAA,EAAAvhB,KAAA2nB,yBAAApG,MACA,IAAAlhB,GAAA,EAAA2nB,IACA,KAAA3nB,EAAA,EAAmBA,EAAAkhB,EAAAve,SAAuB3C,EAC1C,GAAAkhB,EAAAlhB,GAAAoB,UAAA8C,KAAAvE,MAAA,CAGAA,KAAAihB,sBAAAjhB,KAAAioB,eACAjoB,KAAAkoB,iBAAA7a,KAAArN,MAAA,KACA,qBACAA,KAAAkhB,sBAAAlhB,KAAAioB,eACAjoB,KAAAmoB,iBAAA9a,KAAArN,MAAA,KACA,qBACAA,KAAAmhB,wBAAAnhB,KAAAioB,eACAjoB,KAAAooB,mBAAA/a,KAAArN,MAAA,KACA,uBAEAA,KAAAqoB,gBAAA,GAAA9G,GAAAlhB,GACAL,KAAAqoB,gBAAAC,QAAAtoB,KAEA,IAAAuoB,GAAA5U,EAAA,QACAoJ,MAAArJ,EAAAS,GAAAU,KACA+Q,UAAA5lB,KAAAqoB,gBAAAznB,MAEA,IAAAZ,KAAAqoB,gBAAAG,cAAA,CACA,GAAAC,GAAAzoB,KAAAqoB,gBAAAK,YAAA1oB,KAAA,KACAuoB,GAAA1mB,EAAAgN,KAAA4Z,IAEAzoB,KAAAgkB,KAAAuE,EAAA9L,QACAuL,IACA,OAEA,MAAAA,IAQAW,mBAAA,WACA,OAAAjV,EAAA2H,eAAArb,KAAAsb,MAGAtb,KAAA6iB,qBACAnP,EAAA+C,OAAAG,SACA,8BAEA5W,KAAA6lB,WAAA,gCAGA7lB,KAAA6iB,qBAAAnP,EAAA+C,OAAAI,eAAA,MACA7W,KAAAioB,eACAjoB,KAAA4oB,UAAAvb,KAAArN,MACA,0BAEAA,KAAAgkB,KAAApQ,GACAoK,KAAA,MACA6K,GAAA7oB,KAAAmT,OACA1Q,GAAA,YACiB/B,EAAA,SAAcqc,MAAArJ,EAAAS,GAAAI,OAC/B7T,EAAA,eAAiCmB,EAAA6R,EAAA2H,eAAArb,KAAAsb,MACjCmB,UAiBAgL,aAAA,SAAAD,GACAxnB,KAAA+nB,iBAAAP,IACAxnB,KAAA2oB,sBAQAP,mBAAA,SAAAjQ,GACA,GAAA2Q,GAAArZ,KAAAiE,EAAA6G,QAAApC,IACAsQ,EAAAzoB,KAAAqoB,gBAAAK,YAAA1oB,KAAA8oB,GACApE,EAAA/Q,EAAA,YACAoJ,MAAArJ,EAAAS,GAAAU,MAMA,OAJA,KAAA4T,GACA/D,EAAA7iB,EAAAgN,KAAA4Z,IAEAzoB,KAAAgkB,KAAAU,EAAAjI,YAmBAmM,UAAA,SAAAzQ,GAEA,GAAA4Q,GAAAnV,GAAsBoK,KAAA,MAAAvb,GAAA,YACtB/B,EAAA,SAAyBqc,MAAArJ,EAAAS,GAAAI,OACzB7T,EAAA,eAA6BmB,EAAA6R,EAAA2H,eAAArb,KAAAsb,MAC7B2B,KACAvc,EAAA,YAAAmB,EAAA7B,KAAAqiB,KAaA,OAXA3O,GAAAgI,mBAAA1b,KAAAsb,OAIAtb,KAAAsb,IAAA5H,EAAA+H,kBAAAzb,KAAAsb,KAAA,YAEAyN,EAAA9L,KAAAvc,EAAA,eAAgCmB,EAAA6R,EAAAgI,mBAAA1b,KAAAsb,MAEhCtb,KAAAioB,eAAAjoB,KAAAgpB,UAAA3b,KAAArN,MAAA,KACA,qBACAA,KAAAgkB,KAAA+E,EAAAtM,YAcAyL,iBAAA,SAAA/P,GACA,GAAAnY,KAAA4f,WAAA,qBACA,GAAAqJ,GAEAC,EAAA,wBACAC,EAFA1Z,KAAAiE,EAAA6G,QAAApC,IAEAxU,MAAAulB,EAKA,IAJA,MAAAC,EAAA,KACAF,EAAAE,EAAA,IAGAF,IAAAjpB,KAAA4f,WAAA,oBAUA,MARA5f,MAAA6kB,cAAA7kB,KAAAkhB,uBACAlhB,KAAAkhB,sBAAA,KACAlhB,KAAAmhB,0BACAnhB,KAAA6kB,cAAA7kB,KAAAmhB,yBACAnhB,KAAAmhB,wBAAA,MAGAnhB,KAAA4f,cACA5f,KAAAmoB,iBAAA,MAGAzU,EAAAxP,KAAA,kCAEAlE,KAAAqoB,iBACAroB,KAAAqoB,gBAAAe,YAIAppB,KAAA6kB,cAAA7kB,KAAAkhB,uBACAlhB,KAAAkhB,sBAAA,KACAlhB,KAAAmhB,0BACAnhB,KAAA6kB,cAAA7kB,KAAAmhB,yBACAnhB,KAAAmhB,wBAAA,KAGA,IAAAkI,MACAC,EAAA,SAAAtd,EAAAmM,GACA,KAAAnM,EAAAhJ,QACAhD,KAAA6kB,cAAA7Y,EAAA6a,MAGA,OADA7mB,MAAAupB,eAAAlc,KAAArN,MAAAmY,MAaA,OAVAkR,GAAAxmB,KAAA7C,KAAAioB,eAAA,SAAA9P,GACAmR,EAAAjc,KAAArN,MAAAqpB,EAAAlR,IACS9K,KAAArN,MAAA,mCACTqpB,EAAAxmB,KAAA7C,KAAAioB,eAAA,SAAA9P,GACAmR,EAAAjc,KAAArN,MAAAqpB,EAAAlR,IACS9K,KAAArN,MAAA0T,EAAAS,GAAAW,OAAA,uBAGT9U,KAAAilB,mBAcAsE,eAAA,SAAApR,GAEAnY,KAAA2f,SAAAxH,CACA,IAAA9X,GAAAqc,CACA,KAAArc,EAAA,EAAmBA,EAAA8X,EAAAG,WAAAtV,OAA4B3C,IAE/C,UADAqc,EAAAvE,EAAAG,WAAAjY,IACAqa,WACA1a,KAAA8f,YAGA,YAAApD,EAAAhC,WACA1a,KAAA6f,cAIA,KAAA7f,KAAA8f,QAEA,MADA9f,MAAA6iB,qBAAAnP,EAAA+C,OAAAK,SAAA,QAGA9W,MAAAioB,eAAAjoB,KAAAwpB,cAAAnc,KAAArN,MAAA,UACA,oBAEA,IAAAypB,GAAA/V,EAAAgI,mBAAA1b,KAAAsb,IAWA,OAVAmO,GACAzpB,KAAAgkB,KAAApQ,GAA+BoK,KAAA,MAAAvb,GAAA,iBAC/B/B,EAAA,QAAsCqc,MAAArJ,EAAAS,GAAAa,OACtCtU,EAAA,eAA2CmB,EAAA4nB,GAAAhN,QAE3Czc,KAAAgkB,KAAApQ,GAA+BoK,KAAA,MAAAvb,GAAA,iBAC/B/B,EAAA,QAAsCqc,MAAArJ,EAAAS,GAAAa,OACtCyH,YAeA+M,cAAA,SAAArR,GACA,aAAAA,EAAA6C,aAAA,SACAtH,EAAAxP,KAAA,uBACA,IAAAoiB,EAKA,OALAnO,GAAA8O,qBAAA,YACAjkB,OAAA,IACAsjB,EAAA,YAEAtmB,KAAA6iB,qBAAAnP,EAAA+C,OAAAK,SAAAwP,MAKA,GACAoD,GADArc,EAAA8K,EAAA8O,qBAAA,OAEA,MAAA5Z,EAAArK,OAAA,GAqBA,MAFA0Q,GAAAxP,KAAA,wBACAlE,KAAA6iB,qBAAAnP,EAAA+C,OAAAK,SAAA,UAlBA4S,EAAArc,EAAA,GAAA4Z,qBAAA,QACAjkB,OAAA,IACAhD,KAAAsb,IAAA5H,EAAA6G,QAAAmP,EAAA,IAEA1pB,KAAA6f,YACA7f,KAAAioB,eAAAjoB,KAAA2pB,iBAAAtc,KAAArN,MACA,kCAEAA,KAAAgkB,KAAApQ,GAAmCoK,KAAA,MAAAvb,GAAA,oBACnC/B,EAAA,WAAiDqc,MAAArJ,EAAAS,GAAAc,UACjDwH,UAEAzc,KAAAygB,iBACAzgB,KAAA6iB,qBAAAnP,EAAA+C,OAAAM,UAAA,SAsBA4S,iBAAA,SAAAxR,GACA,cAAAA,EAAA6C,aAAA,QACAhb,KAAAygB,iBACAzgB,KAAA6iB,qBAAAnP,EAAA+C,OAAAM,UAAA,UACS,cAAAoB,EAAA6C,aAAA,QAGT,MAFAtH,GAAAxP,KAAA,4BACAlE,KAAA6iB,qBAAAnP,EAAA+C,OAAAK,SAAA,QAGA,WAaAqR,iBAAA,SAAAhQ,GAcA,MAZAnY,MAAAihB,wBACAjhB,KAAA6kB,cAAA7kB,KAAAihB,uBACAjhB,KAAAihB,sBAAA,MAEAjhB,KAAAmhB,0BACAnhB,KAAA6kB,cAAA7kB,KAAAmhB,yBACAnhB,KAAAmhB,wBAAA,MAGAnhB,KAAAqoB,iBACAroB,KAAAqoB,gBAAAuB,YACA5pB,KAAA6iB,qBAAAnP,EAAA+C,OAAAK,SAAA,UAiBAkS,UAAA,SAAA7Q,GAQA,MAPA,WAAAA,EAAA6C,aAAA,SACAhb,KAAAygB,iBACAzgB,KAAA6iB,qBAAAnP,EAAA+C,OAAAM,UAAA,OACS,UAAAoB,EAAA6C,aAAA,UACThb,KAAA6iB,qBAAAnP,EAAA+C,OAAAK,SAAA,MACA9W,KAAA6lB,WAAA,8BAgBAG,oBAAA,SAAAjH,EAAAhD,GACA,GAAAmJ,GAAA,GAAAxR,GAAAoL,aAAAC,EAAAhD,EAGA,OAFAmJ,GAAA7G,QACAre,KAAAkgB,UAAArd,KAAAqiB,GACAA,GAiBA+C,eAAA,SAAAlM,EAAAgC,EAAAnd,EAAAod,EAAAvb,GACA,GAAA2iB,GAAA,GAAA1R,GAAAoK,QAAA/B,EAAAgC,EAAAnd,EAAAod,EAAAvb,EAGA,OAFA2iB,GAAA/G,QACAre,KAAAmgB,YAAAtd,KAAAuiB,GACAA,GAYAa,qBAAA,WAMA,MALAvS,GAAAxP,KAAA,mCACAlE,KAAA6iB,qBAAAnP,EAAA+C,OAAAW,YAAA,MACApX,KAAAwf,OAAAyG,uBAEAjmB,KAAAomB,oBAUA/E,QAAA,WAMA,IALA,GAAAhhB,GAAA6kB,EAAAgC,EAKAlnB,KAAAkgB,UAAAld,OAAA,GACAhD,KAAA+f,cAAAld,KAAA7C,KAAAkgB,UAAA2G,MAIA,MAAA7mB,KAAAggB,aAAAhd,OAAA,GACAkiB,EAAAllB,KAAAggB,aAAA6G,OACAxmB,EAAAL,KAAA+f,cAAAhb,QAAAmgB,KACA,GACAllB,KAAA+f,cAAAvV,OAAAnK,EAAA,EAKA,IAAAwpB,OAAA5K,OAAAC,SAEA,KADAgI,KACA7mB,EAAA,EAAmBA,EAAAL,KAAA+f,cAAA/c,OAA+B3C,IAClD6kB,EAAAllB,KAAA+f,cAAA1f,IACAL,KAAAygB,eAAAyE,EAAA7G,OACA6G,EAAAlG,WAAAkG,EAAAnG,OACA8K,GAAA,EACA3E,EAAArG,OACAqI,EAAArkB,KAAAqiB,GAGAgC,EAAArkB,KAAAqiB,GAIAllB,MAAA+f,cAAAmH,EAEA9C,aAAApkB,KAAAugB,cAEAvgB,KAAAwf,OAAA6B,UAGArhB,KAAA0gB,YAEA1gB,KAAAugB,aAAAvT,WAAA,WACAhN,KAAAqhB,WACahU,KAAArN,MAAA,QAqCb0T,EAAAoW,cAAA,SAAAlpB,EAAA4nB,EAAAV,GAIA9nB,KAAAY,OAIAZ,KAAAwoB,gBAkBAxoB,KAAA8nB,YAGApU,EAAAoW,cAAAroB,WAoBA8C,KAAA,SAAAwlB,GACA,UAUAzB,QAAA,SAAAyB,GACA/pB,KAAAgqB,YAAAD,GAeArB,YAAA,SAAAqB,EAAAjB,GACA,SAAApd,OAAA,6CAOAke,UAAA,WACA5pB,KAAAgqB,YAAA,MAMAZ,UAAA,WACAppB,KAAAgqB,YAAA,OAoBAtW,EAAA2R,cAAA,aACA3R,EAAA2R,cAAA5jB,UAAA,GAAAiS,GAAAoW,cAAA,mBAEApW,EAAA2R,cAAA5jB,UAAA8C,KAAA,SAAAwlB,GACA,cAAAA,EAAAtH,SAOA/O,EAAA+R,UAAA,aACA/R,EAAA+R,UAAAhkB,UAAA,GAAAiS,GAAAoW,cAAA,eAEApW,EAAA+R,UAAAhkB,UAAA8C,KAAA,SAAAwlB,GACA,cAAAA,EAAAtH,SAGA/O,EAAA+R,UAAAhkB,UAAAinB,YAAA,SAAAqB,GACA,GAAAE,GAAAF,EAAArH,OAKA,OAJAuH,IAAA,KACAA,GAAAF,EAAAtH,QACAwH,GAAA,KACAA,GAAAF,EAAA1H,KACAtO,EAAArB,SAAAuX,IAOAvW,EAAAgS,SAAA,aACAhS,EAAAgS,SAAAjkB,UAAA,GAAAiS,GAAAoW,cAAA,qBAEApW,EAAAgS,SAAAjkB,UAAA8C,KAAA,SAAAwlB,GACA,cAAAA,EAAAtH,SAGA/O,EAAAgS,SAAAjkB,UAAAinB,YAAA,SAAAqB,EAAAjB,EAAAoB,GACA,GAAAC,GAAAD,GAAAzX,EAAAF,UAAA,WAAArE,KAAA+T,UACAgI,EAAA,KAAAlW,EAAArB,SAAAqX,EAAAtH,QAoEA,OAnEAwH,IAAA,MACAA,GAAAE,EACAJ,EAAAnK,WAAAuK,SACAJ,EAAAnK,WAAA,6BAAAqK,EAEAA,EAAA,MAAAA,EAEAjqB,KAAA0oB,YAAA,SAAAqB,EAAAjB,GASA,IARA,GAAAsB,GAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAApqB,EAAAmO,EAAA6T,EACAqI,EAAAC,EAAAC,EACAC,EAAA,UACAC,EAAAf,EAAAnK,WAAA,iCACAkJ,EAAA,IACAqB,EAAAJ,EAAAnK,WAAAuK,OACAjB,EAAA,wBAEAJ,EAAAnlB,MAAAulB,IAAA,CACA,GAAAC,GAAAL,EAAAnlB,MAAAulB,EAEA,QADAJ,IAAA1e,QAAA+e,EAAA,OACAA,EAAA,IACA,QACAiB,EAAAjB,EAAA,EACA,MACA,SACAkB,EAAAlB,EAAA,EACA,MACA,SACAmB,EAAAnB,EAAA,IAKA,GAAAiB,EAAAW,OAAA,EAAAZ,EAAAnnB,UAAAmnB,EAEA,MADAJ,GAAAnK,cACAmK,EAAA5B,kBAWA,KAPA2C,GADAD,GAAA,KAAAT,EAGAC,EAAA5a,KAAA4a,GACAA,GAAA,UAEAhI,EAAAtO,EAAArB,SAAAqX,EAAA1H,MACAkI,EAAAE,EAAA3Y,EAAAtB,eAAA6R,EAAAgI,GACAhqB,EAAA,EAAeA,EAAAiqB,EAAUjqB,IAAA,CAEzB,IADAmqB,EAAA1Y,EAAAtB,eAAA6R,EAAAvQ,EAAAR,SAAAmZ,IACAjc,EAAA,EAAiBA,EAAA,EAAOA,IACxB+b,EAAA/b,IAAAgc,EAAAhc,EAEAic,GAAAD,EASA,IAPAD,EAAAzY,EAAAR,SAAAiZ,GAEAG,EAAA5Y,EAAAtB,eAAA+Z,EAAA,cACAI,EAAA7Y,EAAAF,cAAA2Y,EAAA,cACAK,EAAA9Y,EAAAtB,eAAAsB,EAAAD,SAAAC,EAAAR,SAAAoZ,IAAAI,GACAf,EAAAnK,WAAA,oBAAA9N,EAAAJ,cAAAiZ,EAAAG,GAEAtc,EAAA,EAAeA,EAAA,EAAOA,IACtBkc,EAAAlc,IAAAoc,EAAApc,EAIA,OADAqc,IAAA,MAAAhc,KAAAiD,EAAAR,SAAAoZ,KAEGrd,KAAArN,MAEHiqB,GAOAvW,EAAA6R,QAAA,aACA7R,EAAA6R,QAAA9jB,UAAA,GAAAiS,GAAAoW,cAAA,oBAEApW,EAAA6R,QAAA9jB,UAAA8C,KAAA,SAAAwlB,GACA,cAAAA,EAAAtH,SAYA/O,EAAA6R,QAAA9jB,UAAAupB,OAAA,SAAA5Z,GACA,UAAAA,EAAAhH,QAAA,cAAAA,QAAA,iBAIAsJ,EAAA6R,QAAA9jB,UAAAinB,YAAA,SAAAqB,EAAAjB,EAAAoB,GASA,IARA,GAMAf,GANAD,EAAA,mCACAiB,EAAAD,GAAAzX,EAAAF,UAAA,cAAArE,KAAA+T,UACAgJ,EAAA,GACAC,EAAA,KACAd,EAAA,GAIAtB,EAAAnlB,MAAAulB,IAIA,OAHAC,EAAAL,EAAAnlB,MAAAulB,GACAJ,IAAA1e,QAAA+e,EAAA,OACAA,EAAA,GAAAA,EAAA,GAAA/e,QAAA,iBACA+e,EAAA,IACA,YACA8B,EAAA9B,EAAA,EACA,MACA,aACAiB,EAAAjB,EAAA,EACA,MACA,WACAA,EAAA,EACA,MACA,YACA+B,EAAA/B,EAAA,GAKA,GAAAgC,GAAApB,EAAApH,SAAA,IAAAoH,EAAA5W,MACA,QAAA+X,IACAC,IAAA,IAAAD,EAGA,IAAAE,GAAArX,EAAArB,SAAAqX,EAAAtH,QAAA,IAAAwI,EAAA,IAAAjrB,KAAAgqB,YAAA3H,MACAgJ,EAAA5Y,EAAA1B,KAAAqa,GAAA,IAAAhB,EAAA,IAAAD,EACAmB,EAAA,gBAAAH,EAEAN,EAAA,EAiBA,OAhBAA,IAAA,iBACAA,GAAA,YAAA7qB,KAAAgrB,OAAAjX,EAAArB,SAAAqX,EAAAtH,UAAA,IACAoI,GAAA,SAAA7qB,KAAAgrB,OAAAC,GAAA,IACAJ,GAAA,SAAA7qB,KAAAgrB,OAAAZ,GAAA,IACAS,GAAA,eACAA,GAAA,UAAA7qB,KAAAgrB,OAAAb,GAAA,IACAU,GAAA,cAAA7qB,KAAAgrB,OAAAG,GAAA,IACAN,GAAA,YAAApY,EAAAF,UAAAE,EAAAF,UAAA8Y,GAAA,IACAjB,EAAA,aACAD,EAAA,SACA1X,EAAAF,UAAA+Y,IAAA,IACAT,GAAA,WAEA7qB,KAAA0oB,YAAA,WACA,UAEAmC,GAOAnX,EAAA8R,gBAAA,aACA9R,EAAA8R,gBAAA/jB,UAAA,GAAAiS,GAAAoW,cAAA,qBAEApW,EAAA8R,gBAAA/jB,UAAA8C,KAAA,SAAAwlB,GACA,cAAAA,EAAA1H,MAGA3O,EAAA8R,gBAAA/jB,UAAAinB,YAAA,SAAAqB,GACA,GAAAE,GAAA,IAWA,OAVA,QAAAF,EAAAtH,UACAwH,IAAA,KAAAF,EAAArH,SAEAuH,GAAA,IACAA,GAAA,IACAA,GAAA,eACAA,GAAAF,EAAA1H,KACA4H,GAAA,IACAA,GAAA,IAEAlW,EAAArB,SAAAuX,IAYAvW,EAAA4R,aAAA,aACA5R,EAAA4R,aAAA7jB,UAAA,GAAAiS,GAAAoW,cAAA,kBAEApW,EAAA4R,aAAA7jB,UAAAinB,YAAA,SAAAqB,GAQA,MAAAA,GAAAtH,UAAAsH,EAAArH,QAAA,GAAAqH,EAAArH,UAIAhP,UACAC,SACAC,MACAC,KAp/GA,SAAAG,GAAsB,UAAAN,GAAAO,QAAA,UAAAD,IAq/GtBF,QACAhC,OACAW,MACAf,cAAAI,EAAAJ,cACAC,SAAAG,EAAAH,SACAC,cAAAE,EAAAF,cACAC,SAAAC,EAAAD,YAcA,SAAArS,EAAAC,GACA,qBAAAG,OAAAC,IASA,MAAAJ,GAAAiU,QAAAC,OARA/T,GAAA,yCAAA2rB,GACA,MAAA9rB,GACA8rB,EAAA7X,QACA6X,EAAA5X,WAOC3T,EAAA,SAAA0T,EAAAC,GAi5BD,MA73BAD,GAAA8X,QAAA,SAAArT,EAAA7K,EAAA2V,EAAAwI,GACAzrB,KAAAyC,KAAAiR,EAAAiJ,WACA3c,KAAA0rB,QAAAvT,EACAnY,KAAA0Q,KAAAgD,EAAA6I,UAAApE,GAGAnY,KAAA2rB,SAAAre,EACAtN,KAAAsN,OACAtN,KAAAijB,MACAjjB,KAAA4rB,KAAAC,IACA7rB,KAAAyrB,SAAA,EACAzrB,KAAA8rB,SACA9rB,KAAA+rB,KAAA,KAEA/rB,KAAAgsB,IAAA,WACA,MAAAhsB,MAAA4rB,MACA,GAAA3M,MACAjf,KAAA4rB,MAAA,IAFyB,GAIzB5rB,KAAAisB,SAAA,WACA,MAAAjsB,MAAA+rB,MACA,GAAA9M,MACAjf,KAAA+rB,MAAA,IAFyB,GAIzB/rB,KAAAksB,IAAAlsB,KAAAmsB,WAGAzY,EAAA8X,QAAA/pB,WAcA2qB,YAAA,WACA,GAAA5S,GAAA,IACA,IAAAxZ,KAAAksB,IAAAG,aAAArsB,KAAAksB,IAAAG,YAAAC,iBAEA,oBADA9S,EAAAxZ,KAAAksB,IAAAG,YAAAC,iBACA5T,QAKA,KAJAhF,GAAA4I,MAAA,6BACA5I,EAAA4I,MAAA,iBAAAtc,KAAAksB,IAAArB,cACAnX,EAAA4I,MAAA,gBACA5I,EAAA6I,UAAAvc,KAAAksB,IAAAG,cACA,kBAES,IAAArsB,KAAAksB,IAAArB,aAGT,KAFAnX,GAAA4I,MAAA,6BACA5I,EAAA4I,MAAA,iBAAAtc,KAAAksB,IAAArB,cACA,WAGA,OAAArR,IAWA2S,QAAA,WACA,GAAAD,GAAA,IAWA,OAVArnB,QAAA0nB,gBACAL,EAAA,GAAAK,iBACAC,kBACAN,EAAAM,iBAAA,2BAES3nB,OAAAyU,gBACT4S,EAAA,GAAA5S,eAAA,sBAGA4S,EAAAO,mBAAAzsB,KAAAsN,KAAAD,KAAA,KAAArN,MACAksB,IA4BAxY,EAAAgM,KAAA,SAAAqK,GACA/pB,KAAA0sB,MAAA3C,EAEA/pB,KAAAijB,IAAA/U,KAAAE,MAAA,WAAAF,KAAA+T,UAEAjiB,KAAAgjB,IAAA,KAGAhjB,KAAAuiB,KAAA,EACAviB,KAAAsiB,KAAA,GACAtiB,KAAA6E,OAAA,EACA7E,KAAA2sB,OAAA,EACA3sB,KAAA4sB,WAAA,KAEA5sB,KAAA2hB,cAGAjO,EAAAgM,KAAAje,WAYAmlB,MAAA,KAQAiG,WAAA,WACA,GAAAxF,GAAA1T,EAAA,QACAsP,IAAAjjB,KAAAijB,MACAlG,MAAArJ,EAAAS,GAAAC,UAQA,OANA,QAAApU,KAAAgjB,KACAqE,EAAArT,OAA4BgP,IAAAhjB,KAAAgjB,MAE5BhjB,KAAA0sB,MAAAzO,QAAA6O,WAAA9sB,KAAA0sB,MAAArJ,4BACArjB,KAAA+sB,gBAEA1F,GAQA3F,OAAA,WACA1hB,KAAAijB,IAAA/U,KAAAE,MAAA,WAAAF,KAAA+T,UACAjiB,KAAAgjB,IAAA,KACAhjB,KAAA2sB,OAAA,EACA3sB,KAAA0sB,MAAArJ,4BACAxe,OAAA2e,eAAAE,WAAA,wBAGA1jB,KAAA0sB,MAAA3I,aAAA/jB,KAAAijB,MAQAH,SAAA,SAAAR,EAAAC,EAAAC,GACAxiB,KAAAsiB,QAAAtiB,KAAAsiB,KACAtiB,KAAAuiB,QAAAviB,KAAAuiB,KACAviB,KAAA2sB,OAAA,CAGA,IAAA1W,GAAAjW,KAAA6sB,aAAA7Y,OACA6U,GAAA7oB,KAAA0sB,MAAAvZ,OACA6Z,WAAA,KACA1K,KAAAtiB,KAAAsiB,KACAC,KAAAviB,KAAAuiB,KACA0K,QAAA,0BACArpB,IAAA,MACAspB,eAAA,MACAC,aAAAzZ,EAAAS,GAAAE,MAGAmO,IACAvM,EAAAjC,OACAwO,SAIA,IAAA2E,GAAAnnB,KAAA0sB,MAAAvF,WAEAnnB,MAAA2hB,UAAA9e,KACA,GAAA6Q,GAAA8X,QAAAvV,EAAAwG,OACAzc,KAAAotB,sBAAA/f,KACArN,KAAAmnB,EAAA9Z,KAAArN,KAAA0sB,QACAzW,EAAAwG,OAAAzB,aAAA,SACAhb,KAAAqtB,4BA2BAlK,QAAA,SAAA7H,EAAA0H,EAAAC,EAAAxW,EAAA6V,EAAAC,EAAAW,GACAljB,KAAA0sB,MAAApR,MACAtb,KAAAgjB,MACAhjB,KAAAijB,MAEAjjB,KAAA0sB,MAAA9J,iBAAAnW,EAEAzM,KAAA0sB,MAAAvZ,OAAAO,EAAA6H,iBAAAvb,KAAA0sB,MAAApR,KAEAtb,KAAA0sB,MAAAjM,iBACAzgB,KAAA0sB,MAAAhM,aAEA1gB,KAAAsiB,QAAAtiB,KAAAsiB,KACAtiB,KAAAuiB,QAAAviB,KAAAuiB,KACAviB,KAAA6E,OAAAqe,GAAAljB,KAAA6E,OAEA7E,KAAA0sB,MAAA7J,qBAAAnP,EAAA+C,OAAAS,SAAA,OAsBAoM,SAAA,SAAAhI,EAAA7O,EAAA6V,EAAAC,EAAAW,GACA,GAAAoK,GAAA/J,KAAAgK,MAAA1oB,OAAA2e,eAAAgK,QAAA,wBACA,eAAAF,GACA,OAAAA,GACAA,EAAArK,KACAqK,EAAAtK,KACAsK,EAAAhS,eACAA,GACA,OAAAA,GACA5H,EAAA+H,kBAAA6R,EAAAhS,OAAA5H,EAAA+H,kBAAAH,IAGA,OAAA5H,EAAA2H,eAAAC,IAAA5H,EAAA6H,iBAAA+R,EAAAhS,WAMA,MAAmB1a,KAAA,sBAAAqb,QAAA,oCAHnBjc,MAAA0sB,MAAA5L,YACA9gB,KAAAmjB,QAAAmK,EAAAhS,IAAAgS,EAAAtK,IAAAsK,EAAArK,IAAAxW,EAAA6V,EAAAC,EAAAW,IAaA6J,cAAA,WACA/sB,KAAA0sB,MAAAjM,cACAzgB,KAAA0sB,MAAApR,KAAAtb,KAAAijB,KAAAjjB,KAAAgjB,KACAne,OAAA2e,eAAAC,QAAA,uBAAAF,KAAAkK,WACAnS,IAAAtb,KAAA0sB,MAAApR,IACA2H,IAAAjjB,KAAAijB,IACAD,IAAAhjB,KAAAgjB,OAIAne,OAAA2e,eAAAE,WAAA,yBAWAyD,YAAA,SAAAE,GACA,GACAN,GAAAC,EADA0G,EAAArG,EAAArM,aAAA,OAEA,WAAA0S,GAAA,cAAAA,EAcA,MAZA3G,GAAAM,EAAArM,aAAA,aACAtH,EAAA4I,MAAA,2BAAAyK,GACAC,EAAAK,EAAAJ,qBAAA,YACA,OAAAF,GACA,wBAAAA,GAAAC,EAAAhkB,OAAA,IACA+jB,EAAA,YAEA/mB,KAAA0sB,MAAA7J,qBAAAnP,EAAA+C,OAAAG,SAAAmQ,IAEA/mB,KAAA0sB,MAAA7J,qBAAAnP,EAAA+C,OAAAG,SAAA,WAEA5W,KAAA0sB,MAAAtG,cAAAW,GACArT,EAAA+C,OAAAG,QAKA5W,MAAAgjB,MACAhjB,KAAAgjB,IAAAqE,EAAArM,aAAA,OAEA,IAAAkI,GAAAmE,EAAArM,aAAA,WACAkI,KAAmBljB,KAAA6E,OAAAhB,SAAAqf,EAAA,IACnB,IAAAX,GAAA8E,EAAArM,aAAA,OACAuH,KAAmBviB,KAAAuiB,KAAA1e,SAAA0e,EAAA,IACnB,IAAAD,GAAA+E,EAAArM,aAAA,OACAsH,KAAmBtiB,KAAAsiB,KAAAze,SAAAye,EAAA,IACnB,IAAAsK,GAAAvF,EAAArM,aAAA,aACA4R,KAAyB5sB,KAAA4sB,WAAA/oB,SAAA+oB,EAAA,MASzB1G,YAAA,SAAAH,GACA/lB,KAAA2tB,eAAA5H,IAQAK,cAAA,WACApmB,KAAAgjB,IAAA,KACAhjB,KAAAijB,IAAA/U,KAAAE,MAAA,WAAAF,KAAA+T,UACAjiB,KAAA0sB,MAAArJ,4BACAxe,OAAA2e,eAAAE,WAAA,wBAGA1jB,KAAA0sB,MAAA3I,aAAA/jB,KAAAijB,MASA6D,YAAA,WACA,WAAA9mB,KAAA2hB,UAAA3e,QASA4qB,2BAAA,SAAA5iB,GACA,GACA6iB,GADAC,EAAA9tB,KAAA+tB,kBAAA/iB,IAEA6iB,EAAA7tB,KAAA0sB,MAAAtM,sBAAAC,KAAAyN,KAEAD,EAAArtB,KAAAR,KAAA8tB,IAcAE,UAAA,SAAAF,GACA9tB,KAAA2sB,SACAjZ,EAAAtL,KAAA,4BAAA0lB,EACA,uBAAA9tB,KAAA2sB,QACA3sB,KAAA2sB,OAAA,GACA3sB,KAAA0sB,MAAAzG,wBASAyB,kBAAA,SAAAN,GAEAA,EADAA,EACAA,EAAA/Z,KAAArN,KAAA0sB,OAEA1sB,KAAA0sB,MAAAvF,YAAA9Z,KAAArN,KAAA0sB,MAEA,IAAAzW,GAAAjW,KAAA6sB,YACA7sB,MAAA2hB,UAAA9e,KACA,GAAA6Q,GAAA8X,QAAAvV,EAAAwG,OACAzc,KAAAotB,sBAAA/f,KACArN,KAAAonB,EAAA/Z,KAAArN,KAAA0sB,QACAzW,EAAAwG,OAAAzB,aAAA,SACAhb,KAAAqtB,4BAQApH,qBAAA,WACAjmB,KAAAmmB,qBAMAA,kBAAA,WAEA,IADA,GAAAnb,GACAhL,KAAA2hB,UAAA3e,OAAA,IACAgI,EAAAhL,KAAA2hB,UAAAkF,OACAiF,SACA9gB,EAAAkhB,IAAAJ,QAGA9gB,EAAAkhB,IAAAO,mBAAA,cASApL,QAAA,WACA,GAAA3Q,GAAA1Q,KAAA0sB,MAAA3L,KASA,IAPA/gB,KAAA0sB,MAAAjM,eAAA,IAAAzgB,KAAA2hB,UAAA3e,QACA,IAAA0N,EAAA1N,SAAAhD,KAAA0sB,MAAA/L,gBACAjN,EAAAxP,KAAA,wDAEAwM,EAAA7N,KAAA,QAGA7C,KAAA0sB,MAAA7L,OAAA,CAIA,GAAA7gB,KAAA2hB,UAAA3e,OAAA,GAAA0N,EAAA1N,OAAA,GAEA,OADAiT,GAAAjW,KAAA6sB,aACAxsB,EAAA,EAA2BA,EAAAqQ,EAAA1N,OAAiB3C,IAC5C,OAAAqQ,EAAArQ,KACA,YAAAqQ,EAAArQ,GACA4V,EAAAjC,OACA6U,GAAA7oB,KAAA0sB,MAAAvZ,OACA6Z,WAAA,KACAiB,eAAA,OACAd,aAAAzZ,EAAAS,GAAAE,OAGA4B,EAAAoH,MAAA3M,EAAArQ,IAAA4c,YAIAjd,MAAA0sB,MAAA3L,MACA/gB,KAAA0sB,MAAA3L,SACA/gB,KAAA2hB,UAAA9e,KACA,GAAA6Q,GAAA8X,QAAAvV,EAAAwG,OACAzc,KAAAotB,sBAAA/f,KACArN,UAAA0sB,MAAAjG,UAAApZ,KAAArN,KAAA0sB,QACAzW,EAAAwG,OAAAzB,aAAA,SACAhb,KAAAqtB,2BAGA,GAAArtB,KAAA2hB,UAAA3e,OAAA,GACA,GAAAkrB,GAAAluB,KAAA2hB,UAAA,GAAAqK,KACA,QAAAhsB,KAAA2hB,UAAA,GAAAoK,MACA/rB,KAAA2hB,UAAA,GAAAsK,WACA/d,KAAAE,MAAAsF,EAAAsE,kBAAAhY,KAAAsiB,OACAtiB,KAAAqtB,2BAIAa,EAAAhgB,KAAAE,MAAAsF,EAAAqE,QAAA/X,KAAAsiB,QACA5O,EAAAtL,KAAA,WACApI,KAAA2hB,UAAA,GAAAlf,GACA,oBAAAyL,KAAAE,MAAAsF,EAAAqE,QAAA/X,KAAAsiB,MACA,gCACAtiB,KAAAqtB,+BAcAU,kBAAA,SAAA/iB,EAAAmjB,GACA,GAAAL,EACA,QAAA9iB,EAAAkhB,IAAAkC,WACA,IACAN,EAAA9iB,EAAAkhB,IAAA7F,OACa,MAAApmB,GAGbyT,EAAA4I,MACA,mEACAwR,GAMA,gBAHAvlB,IACAulB,EAAA,gBAAAK,KAAA,GAEAL,GAeAV,sBAAA,SAAA9f,EAAAtC,GAGA,GAFA0I,EAAA2I,MAAA,cAAArR,EAAAvI,GAAA,IAAAuI,EAAAygB,MACA,qBAAAzgB,EAAAkhB,IAAAkC,YACApjB,EAAA8gB,MACA9gB,EAAA8gB,aAGA,QAAA9gB,EAAAkhB,IAAAkC,WAAA,CAIA,GAAAN,GAAA9tB,KAAA+tB,kBAAA/iB,EACA,IAAAhL,KAAA2gB,eAAAmN,GAAA,IAGA,MAFA9tB,MAAAguB,UAAAF,OACA9tB,MAAA4tB,2BAAA5iB,EAIA,IAAAqjB,GAAAP,EAAA,GAAAA,EAAA,IACAQ,EAAAtjB,EAAAygB,MAAAzrB,KAAA0sB,MAAAtL,UAOA,KANAiN,GAAAC,KAEAtuB,KAAAuuB,eAAAvjB,GACA0I,EAAA2I,MAAA,cAAArR,EAAAvI,GAAA,2BAGA,MAAAqrB,EAAA,CAEA,GAAAU,GAAAxuB,KAAA2hB,UAAA,KAAA3W,GACAhL,KAAA2hB,UAAA,KAAA3W,GAMAwjB,GAAAxuB,KAAA2hB,UAAA3e,OAAA,GACAhD,KAAA2hB,UAAA,GAAAqK,MAAA9d,KAAAE,MAAAsF,EAAAsE,kBAAAhY,KAAAsiB,QACAtiB,KAAAyuB,gBAAA,GAEAzuB,KAAA0sB,MAAA3I,aAAA9V,OAAAjD,EAAAiY,KAAA,GACAvP,EAAA2I,MAAA,cAAArR,EAAAvI,GAAA,IAAAuI,EAAAygB,MAAA,YACAne,EAAAtC,GACAhL,KAAA2sB,OAAA,MACS,KAAAmB,GACTA,GAAA,KAAAA,EAAA,KACAA,GAAA,MAEApa,EAAA4I,MAAA,cAAAtR,EAAAvI,GAAA,IAAAuI,EAAAygB,MAAA,UAAAqC,EAAA,aACA9tB,KAAAguB,UAAAF,GACA9tB,KAAA4tB,2BAAA5iB,GACA8iB,GAAA,KAAAA,EAAA,MACA9tB,KAAA0sB,MAAA7J,qBAAAnP,EAAA+C,OAAAQ,cAAA,MACAjX,KAAA0sB,MAAAtG,kBAGA1S,EAAA4I,MAAA,cAAAtR,EAAAvI,GAAA,IAAAuI,EAAAygB,MAAA,UAAAqC,EAAA,YAGAO,IAAAC,EAESA,IAAAtuB,KAAA0sB,MAAAhM,WACT1gB,KAAA0sB,MAAA7J,qBAAAnP,EAAA+C,OAAAG,SAAA,aAFA5W,KAAAqtB,6BAeAqB,gBAAA,SAAAruB,GACA,GAAAN,GAAAC,KACAgL,EAAAhL,KAAA2hB,UAAAthB,GACAytB,EAAA9tB,KAAA+tB,kBAAA/iB,GAAA,EAGA,IAAAA,EAAAygB,MAAAzrB,KAAA0sB,MAAAtL,WACAphB,KAAA0sB,MAAAzG,2BADA,CAKA,GAAAiI,GAAAljB,EAAAghB,MACA2C,GAAAnf,MAAA0e,IACAA,EAAAhgB,KAAAE,MAAAsF,EAAAqE,QAAA/X,KAAAsiB,MACAsM,EAAA,OAAA5jB,EAAA+gB,MACA/gB,EAAAihB,WAAA/d,KAAAE,MAAAsF,EAAAsE,kBAAAhY,KAAAsiB,MACAuM,EAAA,IAAA7jB,EAAAkhB,IAAAkC,aACAN,EAAA,GAAAA,GAAA,IAkBA,KAjBAa,GAAAC,GACAC,KACAD,GACAlb,EAAA4I,MAAA,WAAAtc,KAAA2hB,UAAAthB,GAAAoC,GACA,sCAEAuI,EAAA8gB,SACA9gB,EAAAkhB,IAAAJ,QAEA9gB,EAAAkhB,IAAAO,mBAAA,aACAzsB,KAAA2hB,UAAAthB,GAAA,GAAAqT,GAAA8X,QAAAxgB,EAAA0gB,QACA1gB,EAAA2gB,SACA3gB,EAAAiY,IACAjY,EAAAygB,OACAzgB,EAAAhL,KAAA2hB,UAAAthB,IAGA,IAAA2K,EAAAkhB,IAAAkC,WAAA,CACA1a,EAAA2I,MAAA,cAAArR,EAAAvI,GAAA,IAAAuI,EAAAygB,MAAA,WAEA,KACA,GAAAqD,GAAA9uB,KAAA0sB,MAAAzO,QAAA6Q,aAAA,yBACA9jB,GAAAkhB,IAAA6C,KAAA,OAAA/uB,KAAA0sB,MAAArN,SAAArf,KAAA0sB,MAAAzO,QAAA+Q,eACAhkB,EAAAkhB,IAAA+C,kBAEAjkB,EAAAkhB,IAAA+C,iBAAA,eAAAH,GAEA9uB,KAAA0sB,MAAAzO,QAAAiR,kBACAlkB,EAAAkhB,IAAAgD,oBAEa,MAAAC,GAOb,MANAzb,GAAA4I,MAAA,oBAAA6S,EAAAthB,YACA7N,KAAA0sB,MAAAhM,WACA1gB,KAAA0sB,MAAA7J,qBACAnP,EAAA+C,OAAAG,SAAA,mBAEA5W,MAAA0sB,MAAA7G,aAMA,GAAAuJ,GAAA,WAEA,GADApkB,EAAA4gB,KAAA,GAAA3M,MACAlf,EAAA2sB,MAAAzO,QAAAoR,cAAA,CACA,GAAAC,GAAAvvB,EAAA2sB,MAAAzO,QAAAoR,aACA,QAAAE,KAAAD,GACAA,EAAA5tB,eAAA6tB,IACAvkB,EAAAkhB,IAAA+C,iBAAAM,EAAAD,EAAAC,IAIAvkB,EAAAkhB,IAAAlI,KAAAhZ,EAAA0F,MAKA,IAAA1F,EAAAygB,MAAA,GAGA,GAAA+D,GACA,IADAthB,KAAAuhB,IAAAvhB,KAAAE,MAAAsF,EAAAqE,QAAA/X,KAAAsiB,MACApU,KAAAwhB,IAAA1kB,EAAAygB,MAAA,GACAze,YAAA,WAEAoiB,KACiBI,OAEjBJ,IAGApkB,GAAAygB,QAEAzrB,KAAA0sB,MAAA9I,YAAAlQ,EAAA0L,WAAA3d,UAAAmiB,YACA5Y,EAAA0gB,QAAAhR,WAAA1a,KAAA4mB,OAAA5b,EAAA0gB,QAAApT,WAAAtV,OACAhD,KAAA0sB,MAAA9I,UAAA5Y,EAAA0gB,QAAApT,WAAA,IAEAtY,KAAA0sB,MAAA9I,UAAA5Y,EAAA0gB,UAGA1rB,KAAA0sB,MAAA5I,YAAApQ,EAAA0L,WAAA3d,UAAAqiB,WACA9jB,KAAA0sB,MAAA5I,UAAA9Y,EAAA0F,UAGAgD,GAAA2I,MAAA,qBACA,IAAAhc,EAAA,kBACA,8BACA2K,EAAAkhB,IAAAkC,cAUAG,eAAA,SAAAvjB,GACA0I,EAAA2I,MAAA,mBACA,IAAAhc,EACA,KAAAA,EAAAL,KAAA2hB,UAAA3e,OAAA,EAA2C3C,GAAA,EAAQA,IACnD2K,IAAAhL,KAAA2hB,UAAAthB,IACAL,KAAA2hB,UAAAnX,OAAAnK,EAAA,EAIA2K,GAAAkhB,IAAAO,mBAAA,aACAzsB,KAAAqtB,4BASAoB,gBAAA,SAAApuB,GACA,GAAA2K,GAAAhL,KAAA2hB,UAAAthB,EACA,QAAA2K,EAAA+gB,OACA/gB,EAAA+gB,KAAA,GAAA9M,OAGAjf,KAAA0uB,gBAAAruB,IAeAsmB,WAAA,SAAA3b,GACA,IACA,MAAAA,GAAAohB,cACS,MAAAnsB,GACT,mBAAAA,EAAsC,KAAAA,EACtCD,MAAA0sB,MAAA7G,WAAA,yBAWA8H,eAAA,SAAA5H,GACArS,EAAAxP,KAAA,4BACA,IAAA+R,GAAAjW,KAAA6sB,aAAA7Y,OAA4CgK,KAAA,aAC5C+H,IACA9P,EAAAoH,MAAA0I,EAAAtJ,OAEA,IAAAzR,GAAA,GAAA0I,GAAA8X,QACAvV,EAAAwG,OACAzc,KAAAotB,sBAAA/f,KACArN,UAAA0sB,MAAAjG,UAAApZ,KAAArN,KAAA0sB,QACAzW,EAAAwG,OAAAzB,aAAA,OAEAhb,MAAA2hB,UAAA9e,KAAAmI,GACAhL,KAAAqtB,4BAQAnJ,MAAA,WACAE,aAAApkB,KAAA0sB,MAAAnM,cACAvgB,KAAAqtB,2BAGArtB,KAAA0sB,MAAAnM,aAAAvT,WAAA,WACAhN,KAAAqhB,WACShU,KAAArN,KAAA0sB,OAAA,MAOTzH,aAAA,WACAjlB,KAAAqtB,2BACAjJ,aAAApkB,KAAA0sB,MAAAnM,eAUA8M,yBAAA,WACArtB,KAAA2hB,UAIAjO,EAAA2I,MAAA,wCACArc,KAAA2hB,UAAA3e,OAAA,aAJA0Q,EAAA2I,MAAA,2DAOArc,KAAA2hB,WAAA,IAAA3hB,KAAA2hB,UAAA3e,SAIAhD,KAAA2hB,UAAA3e,OAAA,GACAhD,KAAA0uB,gBAAA,GAGA1uB,KAAA2hB,UAAA3e,OAAA,GACAkL,KAAAyhB,IAAA3vB,KAAA2hB,UAAA,GAAAsB,IACAjjB,KAAA2hB,UAAA,GAAAsB,KAAAjjB,KAAA6E,QACA7E,KAAA0uB,gBAAA,MAIAhb,IAaA,SAAAlU,EAAAC,GACA,qBAAAG,OAAAC,IASA,MAAAJ,GAAAiU,QAAAC,OARA/T,GAAA,8CAAA2rB,GACA,MAAA9rB,GACA8rB,EAAA7X,QACA6X,EAAA5X,WAOC3T,EAAA,SAAA0T,EAAAC,GAihBD,MAlfAD,GAAA+L,UAAA,SAAAsK,GACA/pB,KAAA0sB,MAAA3C,EACA/pB,KAAA4mB,MAAA,SAEA,IAAAvH,GAAA0K,EAAA1K,OACA,QAAAA,EAAAta,QAAA,YAAAsa,EAAAta,QAAA,SAGA,GAAA6qB,GAAA,EAEA,QAAA7F,EAAA9L,QAAAsB,UAAA,WAAA1a,OAAAgrB,SAAAtQ,SACAqQ,GAAA,KAEAA,GAAA,MAGAA,GAAA,MAAA/qB,OAAAgrB,SAAA3E,KAEA,IAAA7L,EAAAta,QAAA,KACA6qB,GAAA/qB,OAAAgrB,SAAAC,SAAAzQ,EAEAuQ,GAAAvQ,EAGA0K,EAAA1K,QAAAuQ,IAIAlc,EAAA+L,UAAAhe,WAOAsuB,aAAA,WACA,MAAApc,GAAA,QACAoJ,MAAArJ,EAAAS,GAAAY,QACA8T,GAAA7oB,KAAA0sB,MAAAvZ,OACAlP,QAAA,SAaA+rB,mBAAA,SAAA3I,EAAA4I,GACA,GAAAtD,EAMA,SAJAA,EADAtF,EAAAC,uBACAD,EAAAC,uBAAA5T,EAAAS,GAAAW,OAAA,SAEAuS,EAAAJ,qBAAA,iBAEAjkB,OACA,QAQA,QANAsZ,GAAAqQ,EAAA,GAEArG,EAAA,GACAxM,EAAA,GAGAzZ,EAAA,EAAuBA,EAAAic,EAAAhE,WAAAtV,OAA6B3C,IAAA,CACpD,GAAAJ,GAAAqc,EAAAhE,WAAAjY,EACA,IAHA,wCAGAJ,EAAA+a,aAAA,SACA,KACa,UAAA/a,EAAAya,SACbZ,EAAA7Z,EAAAiwB,YAEA5J,EAAArmB,EAAAya,SAIA,GAAAyV,GAAA,0BAiBA,OAdAA,IADA7J,GAGA,UAGAxM,IACAqW,GAAA,MAAArW,GAGApG,EAAA4I,MAAA6T,GAGAnwB,KAAA0sB,MAAA7J,qBAAAoN,EAAA3J,GACAtmB,KAAA0sB,MAAAtG,oBAUA1E,OAAA,aAUAoB,SAAA,WAEA9iB,KAAAowB,eAGApwB,KAAAqwB,OAAA,GAAAC,WAAAtwB,KAAA0sB,MAAArN,QAAA,QACArf,KAAAqwB,OAAAE,OAAAvwB,KAAAwwB,QAAAnjB,KAAArN,MACAA,KAAAqwB,OAAAI,QAAAzwB,KAAA0wB,SAAArjB,KAAArN,MACAA,KAAAqwB,OAAAM,QAAA3wB,KAAA4wB,SAAAvjB,KAAArN,MACAA,KAAAqwB,OAAAQ,UAAA7wB,KAAA8wB,oBAAAzjB,KAAArN,OAWAmnB,YAAA,SAAAE,GAEA,GADArnB,KAAAgwB,mBAAA3I,EAAA3T,EAAA+C,OAAAG,UAEA,MAAAlD,GAAA+C,OAAAG,UAYAma,mBAAA,SAAA9U,GACA,GAAAK,MAGAyB,EAAA9B,EAAAjB,aAAA,QACA,iBAAA+C,GACAzB,EAAA,4BACSyB,IAAArK,EAAAS,GAAAY,UACTuH,EAAA,4BAAAyB,EAGA,IAAAna,GAAAqY,EAAAjB,aAAA,UAOA,OANA,gBAAApX,GACA0Y,EAAA,8BACS,QAAA1Y,IACT0Y,EAAA,8BAAA1Y,IAGA0Y,IACAtc,KAAA0sB,MAAA7J,qBAAAnP,EAAA+C,OAAAG,SAAA0F,GACAtc,KAAA0sB,MAAAtG,qBAaA0K,oBAAA,SAAA7U,GACA,OAAAA,EAAAvL,KAAA3L,QAAA,eAAAkX,EAAAvL,KAAA3L,QAAA,UAEA,GAAA2L,GAAAuL,EAAAvL,KAAAtG,QAAA,sBACA,SAAAsG,EAAA,MAEA,IAAAsgB,OAAA7W,YAAAC,gBAAA1J,EAAA,YAAA4b,eACAtsB,MAAA0sB,MAAA/I,SAAAqN,GACAhxB,KAAA0sB,MAAA7I,SAAA5H,EAAAvL,MAGA1Q,KAAA+wB,mBAAAC,IAEAhxB,KAAAmnB,YAAA6J,OAES,QAAA/U,EAAAvL,KAAA3L,QAAA,YACT/E,KAAA0sB,MAAA7I,SAAA5H,EAAAvL,MACA1Q,KAAA0sB,MAAA/I,SAAA1H,EACA,IAAAgV,GAAAhV,EAAAjB,aAAA,gBACAiW,IACAjxB,KAAA0sB,MAAA7J,qBACAnP,EAAA+C,OAAAU,SACA,gDAEAnX,KAAA0sB,MAAAvN,QACAnf,KAAA0sB,MAAArN,QAAA4R,EACAjxB,KAAA8iB,aAEA9iB,KAAA0sB,MAAA7J,qBACAnP,EAAA+C,OAAAG,SACA,2BAEA5W,KAAA0sB,MAAAtG,qBAES,CACT,GAAA8K,GAAAlxB,KAAAmxB,YAAAlV,EAAAvL,MACAyH,MAAAgC,YAAAC,gBAAA8W,EAAA,YAAA5E,eACAtsB,MAAAqwB,OAAAQ,UAAA7wB,KAAAoxB,WAAA/jB,KAAArN,MACAA,KAAA0sB,MAAAvF,YAAAhP,EAAA,KAAA8D,EAAAvL,QAYAwV,YAAA,SAAAH,GACA,GAAA/lB,KAAAqwB,QAAArwB,KAAAqwB,OAAAjC,aAAAkC,UAAAe,OAAA,CACAtL,GACA/lB,KAAA0sB,MAAA1I,KAAA+B,EAEA,IAAAuL,GAAA3d,EAAA,SAAyCoJ,MAAArJ,EAAAS,GAAAY,SACzC/U,MAAA0sB,MAAA9I,UAAA0N,EACA,IAAAC,GAAA7d,EAAA6I,UAAA+U,EACAtxB,MAAA0sB,MAAA5I,UAAAyN,EACA,KACAvxB,KAAAqwB,OAAArM,KAAAuN,GACa,MAAAtxB,GACbyT,EAAAxP,KAAA,iCAGAlE,KAAA0sB,MAAAtG,iBAQAA,cAAA,WACA1S,EAAAxP,KAAA,uCACAlE,KAAAowB,gBAOAe,YAAA,SAAAzM,GACA,kBAAAA,EAAA,cASA0L,aAAA,WACA,GAAApwB,KAAAqwB,OAA0B,IAC1BrwB,KAAAqwB,OAAAiB,QACS,MAAArxB,IACTD,KAAAqwB,OAAA,MASAvJ,YAAA,WACA,UAQA8J,SAAA,SAAA3wB,GACAD,KAAA0sB,MAAAhM,YAAA1gB,KAAA0sB,MAAA/L,eACAjN,EAAA4I,MAAA,iCACAtc,KAAA0sB,MAAAtG,iBACSnmB,GAAA,OAAAA,EAAAuxB,OAAAxxB,KAAA0sB,MAAAhM,WAAA1gB,KAAAqwB,QAKT3c,EAAA4I,MAAA,iCACAtc,KAAA0sB,MAAA7J,qBACAnP,EAAA+C,OAAAG,SACA,0EAEA5W,KAAA0sB,MAAAtG,iBAEA1S,EAAAxP,KAAA,qBASAwjB,kBAAA,SAAAN,GACA1T,EAAA4I,MAAA,wCACAtc,KAAA0sB,MAAA7J,qBACAnP,EAAA+C,OAAAG,SACA,wCAEAwQ,IACAA,IAAA/Z,KAAArN,KAAA0sB,UAGA1sB,KAAA0sB,MAAAtG,iBAQAH,qBAAA,aAKAE,kBAAA,aAQAuK,SAAA,SAAApU,GACA5I,EAAA4I,MAAA,mBAAAA,GACAtc,KAAA0sB,MAAA7J,qBACAnP,EAAA+C,OAAAG,SACA,0EAEA5W,KAAAkmB,eAQA7E,QAAA,WACA,GAAA3Q,GAAA1Q,KAAA0sB,MAAA3L,KACA,IAAArQ,EAAA1N,OAAA,IAAAhD,KAAA0sB,MAAA7L,OAAA,CACA,OAAAxgB,GAAA,EAA2BA,EAAAqQ,EAAA1N,OAAiB3C,IAC5C,UAAAqQ,EAAArQ,GAAA,CACA,GAAAqkB,GAAA+M,CAEA/M,GADA,YAAAhU,EAAArQ,GACAL,KAAA+vB,eAAAtT,OAEA/L,EAAArQ,GAEAoxB,EAAA/d,EAAA6I,UAAAmI,GACA1kB,KAAA0sB,MAAA9I,UAAAc,GACA1kB,KAAA0sB,MAAA5I,UAAA2N,GACAzxB,KAAAqwB,OAAArM,KAAAyN,GAGAzxB,KAAA0sB,MAAA3L,WA2BAqQ,WAAA,SAAAnV,GACA,GAAA9D,GAAAzH,EAEA4gB,EAAA,uDACA,IAAArV,EAAAvL,OAAA4gB,EAMA,MALAtxB,MAAA0sB,MAAA7I,SAAAyN,GACAtxB,KAAA0sB,MAAA/I,SAAA1H,QACAjc,KAAA0sB,MAAA/L,eACA3gB,KAAA0sB,MAAAtG,gBAGS,QAAAnK,EAAAvL,KAAAghB,OAAA,WAGT,GADAvZ,MAAAgC,YAAAC,gBAAA6B,EAAAvL,KAAA,YAAA4b,iBACAtsB,KAAA+wB,mBAAA5Y,GACA,WAGAzH,GAAA1Q,KAAAmxB,YAAAlV,EAAAvL,MACAyH,MAAAgC,YAAAC,gBAAA1J,EAAA,YAAA4b,eAGA,OAAAtsB,MAAAgwB,mBAAA7X,EAAAzE,EAAA+C,OAAAC,cAKA1W,KAAA0sB,MAAA/L,eACA,aAAAxI,EAAAwZ,WAAAjX,UACA,gBAAAvC,EAAAwZ,WAAA3W,aAAA,SACAhb,KAAA0sB,MAAA/I,SAAAxL,OACAnY,MAAA0sB,MAAA7I,SAAAnQ,EAAA6I,UAAApE,SAKAnY,MAAA0sB,MAAAjG,UAAAtO,EAAA8D,EAAAvL,OAQA8f,QAAA,WACA9c,EAAAxP,KAAA,iBACA,IAAA0tB,GAAA5xB,KAAA+vB,cACA/vB,MAAA0sB,MAAA9I,UAAAgO,EAAAnV,OAEA,IAAAoV,GAAAne,EAAA6I,UAAAqV,EACA5xB,MAAA0sB,MAAA5I,UAAA+N,GACA7xB,KAAAqwB,OAAArM,KAAA6N,IAcAlL,WAAA,SAAAjC,GACA,MAAAA,IAQAR,MAAA,WACAlkB,KAAA0sB,MAAAvI,SAOAc,aAAA,WACAb,aAAApkB,KAAA0sB,MAAAnM,cACAvgB,KAAA0sB,MAAArL,QAAAhU,KAAArN,KAAA0sB,WAGAhZ,IAIA,kBAAA9T,MAAAC,KACAD,EAAA,WACA,eACA,eACA,qBACA,SAAA0pB,GACA,MAAAA,KAMA1gB,GAAA,qBAMAA,EAAA,aA3qMAF,EAAAuC,MAAAvL,EAAA8I,GAAAE,KAAA/I,EAAAD,QAAA+I,kBCdA,GAAMuD,MAGA8lB,EAAoBjtB,OAAO4rB,QAY3BsB,EAA0BltB,OAAOmtB,oBAYvCntB,QAAO4rB,QAlBP,WAA0C,OAAAwB,GAAAlnB,UAAA/H,OAAN6H,EAAM2C,MAAAykB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANrnB,EAAMqnB,GAAAnnB,UAAAmnB,EACtClmB,GAASqC,QAAQ,SAAA0N,GAAA,MAAWA,gBAAWlR,KACvCinB,GAAqBA,eAAqBjnB,IAiB9ChG,OAAOmtB,qBAPP,SAAuCG,GACnCnmB,EAASqC,QAAQ,SAAA0N,GAAA,MAAWA,GAAQ,KAAM,KAAM,KAAM,KAAMoW,EAAMrM,UAClEiM,GAA2BA,EAAwBI,GAOvD,IAAMC,IAKF3N,WALyB,SAKd1I,GACP/P,EAASnJ,KAAKkZ,IAOlBsW,iBAbyB,SAaR/V,GACb,GAAMgW,GAAaztB,OAAO4rB,OAErB6B,IAGLA,EAAW,KAAM,KAAM,KAAM,KAAMhW,IAOvCiW,8BA1ByB,SA0BKjW,GAC1B,GAAMgW,GAAaztB,OAAOmtB,oBAErBM,IAGLA,EAAWhW,IAKnB3c,GAAOD,QAAU0yB,gEC9EjBlyB,EAAAS,EAAA0H,EAAA,qBAAAmqB,IAGO,IAAMC,GAAQ,QAKRD,EAAQ,kBAAAvyB,EAAA4B,EAAAT,GAAA,uBAAAnB,GCuDrB,QAASyyB,GAAsBzU,GAC3B,IAAI0U,EAAArqB,EAAUsqB,uBAAd,CAIA,GAAMC,GAAWC,EAAAxqB,EAASyqB,iBAErBJ,GAAArqB,EAAU0qB,aACXC,YAAahV,EAAQgV,YACrBC,gBAAiBjV,EAAQiV,gBACzBL,SAAU5U,EAAQkV,qBACZlV,EAAQmV,mBAAqBP,EACnCQ,UAAWpV,EAAQkV,qBACbN,EAAW5U,EAAQmV,mBACzBE,gBAAiBrV,EAAQqV,gBACzBC,mBAAoBtV,EAAQsV,sBAE5B3wB,EAAO0Z,MAAM,gDAsEN,QAASkX,GAAWC,EAAMxV,GAMrCje,KAAK0zB,YAAc,GAAIC,KACvB3zB,KAAK4zB,aAAe,GAAIC,GAAAvrB,EACxBtI,KAAKyzB,KAAOA,EACZzzB,KAAKie,QAAUA,MAEfje,KAAK8zB,4BACC9zB,KAAKie,QAAQgV,aAAejzB,KAAKie,QAAQiV,sBAKnCM,EAAWO,0BACnB/zB,KAAK8zB,8BACDE,EAAA1rB,EAAerB,gBACfyrB,EAAsB1yB,KAAKie,UAhIbA,EAkIGje,KAAKie,QAjIzBgW,IACDC,EAAA5rB,EAAW6rB,WACPlW,EAAQmW,iBACD,0DACK,MACE,GAEK,iBAAM1B,GAAsBzU,KAEnDgW,OA2HKj0B,KAAKie,QAAQoW,0BACdzxB,EAAOwF,KAAK,6CAtIxB,IAA0B6V,EAgJtBje,MAAKs0B,oBAAsB,GAAIX,KAE/BH,EAAWe,UAAUC,IAAIx0B,MDpLR6B,EAAAyG,EAAAmsB,CAAA,IAAAlsB,GAAAnH,EAAA,IAAAf,EAAAe,IAAAmH,GAAAzH,EAAAM,EAAA,GAAAkH,EAAAlH,EAAA,IAAAQ,EAAAR,EAAA,IAAAV,EAAAU,EAAA,IAAAszB,EAAAtzB,EAAA,IAAAd,EAAAc,EAAA,GAAAT,EAAAS,EAAA,IAAAO,EAAAP,EAAA,IAAAsc,EAAAtc,IAAAO,GAAA0K,EAAAjL,EAAA,IAAAuzB,EAAAvzB,EAAA,ICSfwB,EAAS1C,EAAQ,GAAqBsC,UAAUyD,GAMlD2uB,SAKAX,IAyFJT,GAAW/R,KAAO,SAASxD,GACvBuV,EAAWqB,oBAAsB5W,EAAQ6W,mBAEE,gBAAhC7W,GAAQ8W,sBACfvB,EAAWuB,oBAAsB9W,EAAQ8W,qBAG7CvB,EAAWO,0BAA4B9V,EAAQ8V,2BAkEnDP,EAAWqB,sBACXrB,EAAWuB,oBAAsB,IACjCvB,EAAWO,6BACXP,EAAWwB,UAAYC,EAAA3sB,EAEvBvH,OAAOC,eAAewyB,EAAY,aAM9BryB,IAN2C,WAWvC,MAJKyzB,KACDA,EAAa,GAAIM,MAGdN,KAQfpB,EAAW/xB,UAAU0zB,iBAAmB,SAASC,GAC7Cp1B,KAAKq1B,gBAAgBD,EAErB,KACI,GAAME,GACA,GAAIC,GAAAjtB,EACF8sB,EACA5B,EAAWuB,oBACX,IACA/0B,KAAK4zB,aAEb0B,GAAS1D,MAAM4B,EAAWqB,oBAC1B70B,KAAK0zB,YAAY8B,IAAIJ,EAAe3yB,GAAI6yB,GAC1C,MAAOr1B,GACL2C,EAAO0Z,MAAP,iDAA8Drc,KAItEuzB,EAAWiC,cAEXjC,EAAWkC,gBAAkB,SAASC,EAAQlpB,GAC1C,GAAK+mB,EAAWqB,mBAAhB,CAGA,GAAMY,GAAa,GAAIG,GAAAttB,EAAWqtB,EAAQnC,EAAWuB,oBACjDtoB,EAEJzM,MAAKy1B,WAAW5yB,KAAK4yB,GACrBA,EAAW7D,UAGf4B,EAAW/xB,UAAUo0B,sBAAwB,SAASC,GAC7CtC,EAAWqB,oBAGhB70B,KAAK4zB,aAAamC,GAAGC,EAAA1tB,EAA8BwtB,IAGvDtC,EAAW/xB,UAAUw0B,yBAA2B,SAASH,GAChDtC,EAAWqB,oBAGhB70B,KAAK4zB,aAAasC,eAAeF,EAAA1tB,EAA8BwtB,IAGnEtC,EAAW/xB,UAAU00B,0BAA4B,SAASL,GACtD91B,KAAK4zB,aAAamC,GAAGC,EAAA5lB,EAAkC0lB,IAG3DtC,EAAW/xB,UAAU20B,6BAA+B,SAASN,GACzD91B,KAAK4zB,aAAasC,eACdF,EAAA5lB,EAAkC0lB,IAG1CtC,EAAW/xB,UAAU40B,2BAA6B,SAASP,GACvD91B,KAAK4zB,aAAamC,GAAGC,EAAAr1B,EAAmCm1B,IAG5DtC,EAAW/xB,UAAU60B,8BAAgC,SAASR,GAC1D91B,KAAK4zB,aAAasC,eACdF,EAAAr1B,EACAm1B,IAGRtC,EAAW/xB,UAAU80B,yBAA2B,SAAST,GACrD91B,KAAK4zB,aAAamC,GAAGC,EAAAt1B,EAAkCo1B,IAG3DtC,EAAW/xB,UAAU+0B,4BAA8B,SAASV,GACxD91B,KAAK4zB,aAAasC,eAAeF,EAAAt1B,EAC7Bo1B,IAGRtC,EAAW/xB,UAAUg1B,QAAU,WAC3B,IAQSz2B,KAAKs0B,oBAAoBoC,MAC1B12B,KAAK4zB,aAAa+C,KAAKX,EAAA5lB,EAT3B,IAAAwmB,MAAAC,KAAAC,QAAA,KAWA,OAAAC,GAAAC,EAAwBh3B,KAAKs0B,oBAAoB2C,SAAjDC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAA2D,IAAhDU,GAAgDP,EAAA3rB,KACvDpL,MAAKu3B,cAAcD,EAAUE,MAZjC,MAAAhR,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAAA,GAAAY,MAAAC,KAAAC,QAAA,KAcA,OAAAC,GAAAC,EAAoB93B,KAAK0zB,YAAYqE,OAArCb,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAA6C,IAAlCM,GAAkCH,EAAAzsB,KACzCpL,MAAKi4B,iBAAiBD,IAf1B,MAAAxR,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAiBI53B,KAAK4zB,cACL5zB,KAAK4zB,aAAasE,qBAlB1B,QAqBI1E,EAAWe,UAAU4D,OAAOn4B,QAIpCwzB,EAAW4E,eAAiB,SAASzC,GACjC,GAAKnC,EAAWqB,mBAIhB,IAAK,GAAIx0B,GAAI,EAAGA,EAAImzB,EAAWiC,WAAWzyB,OAAQ3C,IAC9C,GAAImzB,EAAWiC,WAAWp1B,GAAGs1B,SAAWA,EAAQ,CACzBnC,EAAWiC,WAAWjrB,OAAOnK,EAAG,GAExC,GAAGg4B,MACd,SAUZ7E,EAAW/xB,UAAUw2B,iBAAmB,SAASD,GAC7C,GAAM1C,GAAWt1B,KAAK0zB,YAAYvyB,IAAI62B,EAElC1C,KACAA,EAAS+C,OACTr4B,KAAK0zB,YAAYyE,OAAOH,KAQhCxE,EAAW/xB,UAAU4zB,gBAAkB,SAASmC,GAC5Cx3B,KAAKi4B,iBAAiBT,EAAI/0B,KAW9B+wB,EAAW/xB,UAAU62B,eAAiB,SAASd,EAAKe,GAChD,GAAKv4B,KAAK8zB,4BAEH,GAAI9zB,KAAKs0B,oBAAoBkE,IAAIhB,EAAI/0B,IACxCG,EAAO0Z,MAAM,oDADV,CAMP1Z,EAAOsB,KAAP,0BAAsCszB,EAAtC,MAEA,IAAMiB,GACA,GAAI9F,GAAArqB,EACFkvB,GAEIkB,OAAQ14B,KAAK24B,sBACbJ,gBAGZv4B,MAAKs0B,oBAAoBkB,IAAIgC,EAAI/0B,GAAIg2B,KASzCjF,EAAWoF,0BAA4B,WACnC,GAAMC,GAAc,GAAI3D,KADsB4D,KAAAC,KAAAC,QAAA,KAG9C,OAAAC,GAAAC,EAAyB1F,EAAWe,UAApC2C,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,KAA+C,IAApCK,GAAoCF,EAAA7tB,MAAAguB,KAAAC,KAAAC,QAAA,KAC3C,OAAAC,GAAAC,EAAiBL,EAAW7E,oBAAoB2C,SAAhDC,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,KAA0D,IAA/CK,GAA+CF,EAAAnuB,KACtDytB,GAAYrE,IAAIiF,IAFuB,MAAAjT,GAAA6S,KAAAC,EAAA9S,EAAA,aAAA4S,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,WAAA4B,EAAA,KAAAC,MAHD,MAAA9S,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,IAS9C,MAAOH,IASXrF,EAAW/xB,UAAUk3B,oBAAsB,WAEvC,MAAO34B,MAAKie,QAAQoW,yBACXr0B,KAAKie,QAAQoW,yBADf,IAC2Cr0B,KAAKie,QAAQyb,SACzD15B,KAAKie,QAAQyb,UAMvBlG,EAAW/xB,UAAU81B,cAAgB,SAASC,GAC1C,GAAMmC,GAAoB35B,KAAKs0B,oBAAoBnzB,IAAIq2B,EAAI/0B,GAEvDk3B,KAUsC,IAAlC35B,KAAKs0B,oBAAoBoC,MACzB12B,KAAK4zB,aAAa+C,KAAKX,EAAA5lB,GAE3BpQ,KAAKs0B,oBAAoB6D,OAAOX,EAAI/0B,IAGpCk3B,EAAkBC,uBAW1BpG,EAAW/xB,UAAUo4B,mBAAqB,WACtC,MAAO75B,MAAK8zB,6BAShBN,EAAW/xB,UAAUq4B,gCAAkC,SAAStC,EAAKuC,GACjE,GAAMC,GAAWh6B,KAAKs0B,oBAAoBnzB,IAAIq2B,EAAI/0B,GAE9Cu3B,IACAA,EAASC,sBAAsBF,IAQvCvG,EAAW/xB,UAAUy4B,6BAA+B,SAAS1C,GACzD,GAAMwC,GAAWh6B,KAAKs0B,oBAAoBnzB,IAAIq2B,EAAI/0B,GAE9Cu3B,IACAA,EAASE,+BAEb1G,EAAWwB,UAAUmF,UAAUC,EAAA7xB,IASnCirB,EAAW/xB,UAAU44B,cAAgB,SAAS7C,EAAK8C,EAAOtc,GACtD,GAAMgc,GAAWxC,GAAOx3B,KAAKs0B,oBAAoBnzB,IAAIq2B,EAAI/0B,GAEzDkwB,GAAArqB,EAAU+xB,cAAcC,EAAOtc,EAAMgc,IAUzCxG,EAAW/xB,UAAU84B,uBACf,SAAS3I,EAAO4I,GAAM,GAAAC,MAAAC,KAAAC,QAAA,KACpB,OAAAC,GAAAC,EAAiB76B,KAAKs0B,oBAAoB2C,SAA1CC,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,KAAoDG,EAAAxvB,MAC7CmvB,uBAAuB3I,EAAO4I,GAFjB,MAAAhU,GAAAkU,KAAAC,EAAAnU,EAAA,aAAAiU,GAAAI,EAAApD,QAAAoD,EAAApD,SAAA,WAAAiD,EAAA,KAAAC,MAU5BnH,EAAW/xB,UAAUq5B,yBAA2B,WAAW,GAAAC,MAAAC,KAAAC,QAAA,KACvD,OAAAC,GAAAC,EAAiBn7B,KAAKs0B,oBAAoB2C,SAA1CC,OAAAC,cAAA4D,GAAAG,EAAAC,EAAA/D,QAAAC,MAAA0D,KAAoDG,EAAA9vB,MAC7C0vB,2BAFgD,MAAAtU,GAAAwU,KAAAC,EAAAzU,EAAA,aAAAuU,GAAAI,EAAA1D,QAAA0D,EAAA1D,SAAA,WAAAuD,EAAA,KAAAC,MAW3DzH,EAAW4H,0BAA4B,SAASC,GAC5C,GAAMC,GAAY9H,EAAWoF,2BAE7B,IAAI0C,EAAU5E,KAAM,IAAA6E,MAAAC,KAAAC,QAAA,KAChB,OAAAC,GAAAC,EAAiBL,EAAjBpE,OAAAC,cAAAoE,GAAAG,EAAAC,EAAAvE,QAAAC,MAAAkE,KAA4B,IAAjB9B,GAAiBiC,EAAAtwB,KACxBunB,GAAArqB,EAAU8yB,0BAA0BC,EAAa5B,IAFrC,MAAAjT,GAAAgV,KAAAC,EAAAjV,EAAA,aAAA+U,GAAAI,EAAAlE,QAAAkE,EAAAlE,SAAA,WAAA+D,EAAA,KAAAC,SAKhB9I,GAAArqB,EAAU8yB,0BAA0BC,EAAa,OAmBzD7H,EAAW/xB,UAAUm6B,4BAA8B,SAC3CpE,EACAgD,EACAqB,EACAC,EACAC,EACAC,GACJ,GAAMhC,GAAWh6B,KAAKs0B,oBAAoBnzB,IAAIq2B,EAAI/0B,GAE9Cu3B,IACAA,EAAS4B,4BACLpB,EACAqB,EACAC,EACAC,EACAC,IAWZxI,EAAWyI,uBAAyB,SAASh8B,GACzC,GAAMqc,GACArc,YAAai8B,GAAA5zB,EAhevB,SAA2CgU,GACvC,GAAMkK,GAAM,GAAI9a,MAkBhB,OAfA8a,GAAI5K,MAAQU,EAAMV,MAGlB4K,EAAI5lB,MAAQ0b,EAAM1b,MAAQ,kBAAoB0b,EAAM6f,KAAO7f,EAAM6f,IAAI7f,OAC9DA,EAAM6f,IAAI7f,MAAM1b,KADuB,MACV0b,EAAM6f,IAAI7f,MAAM1b,KAAS,IAK7D4lB,EAAI4V,eAAiB9f,EAAM6f,KAAO7f,EAAM6f,IAAIE,YACtC9Y,KAAKkK,UAAUnR,EAAM6f,IAAIE,aAAe,GAG9C7V,EAAIvK,QAAUK,EAAML,QAEbuK,GA8cqCvmB,GAAKA,EAC3Cq7B,EAAY9H,EAAWoF,2BAE7B,IAAI0C,EAAU5E,KAAM,IAAA4F,MAAAC,KAAAC,QAAA,KAChB,OAAAC,GAAAC,EAAiBpB,EAAjBpE,OAAAC,cAAAmF,GAAAG,EAAAC,EAAAtF,QAAAC,MAAAiF,KAA4B,IAAjB7C,GAAiBgD,EAAArxB,KACxBunB,GAAArqB,EAAU2zB,uBAAuB3f,EAAOmd,IAF5B,MAAAjT,GAAA+V,KAAAC,EAAAhW,EAAA,aAAA8V,GAAAI,EAAAjF,QAAAiF,EAAAjF,SAAA,WAAA8E,EAAA,KAAAC,SAKhB7J,GAAArqB,EAAU2zB,uBAAuB3f,EAAO,OAUhDkX,EAAW/xB,UAAUk7B,sBAAwB,SAAS18B,EAAGu3B,GACrD,GAAMwC,GAAWh6B,KAAKs0B,oBAAoBnzB,IAAIq2B,EAAI/0B,GAE9Cu3B,IACAA,EAAS2C,sBAAsB18B,IAUvCuzB,EAAW/xB,UAAUm7B,uBAAyB,SAAS38B,EAAGu3B,GACtD,GAAMwC,GAAWh6B,KAAKs0B,oBAAoBnzB,IAAIq2B,EAAI/0B,GAE9Cu3B,IACAA,EAAS4C,uBAAuB38B,IAUxCuzB,EAAW/xB,UAAUo7B,uBAAyB,SAAS58B,EAAGu3B,GACtD,GAAMwC,GAAWh6B,KAAKs0B,oBAAoBnzB,IAAIq2B,EAAI/0B,GAE9Cu3B,IACAA,EAAS6C,uBAAuB58B,IAUxCuzB,EAAW/xB,UAAUq7B,wBAA0B,SAAS78B,EAAGu3B,GACvD,GAAMwC,GAAWh6B,KAAKs0B,oBAAoBnzB,IAAIq2B,EAAI/0B,GAE9Cu3B,IACAA,EAAS8C,wBAAwB78B,IAUzCuzB,EAAW/xB,UAAUs7B,0BAA4B,SAAS98B,EAAGu3B,GACzD,GAAMwC,GAAWh6B,KAAKs0B,oBAAoBnzB,IAAIq2B,EAAI/0B,GAE9Cu3B,IACAA,EAAS+C,0BAA0B98B,IAS3CuzB,EAAWwJ,QAAU,SAASv8B,GAC1B,GAAMw8B,GAAe,GAAI/H,KADIgI,KAAAC,KAAAC,QAAA,KAO7B,OAAAC,GAAAC,EAAoB9J,EAAWe,UAA/B2C,OAAAC,cAAA+F,GAAAG,EAAAC,EAAAlG,QAAAC,MAAA6F,KAA0C,IAA/BK,GAA+BF,EAAAjyB,KAClCmyB,GAAMjJ,oBAAoBoC,MAC1BuG,EAAazI,IAAI+I,EAAMjJ,oBAAoB2C,SAASG,OAAOhsB,QATtC,MAAAob,GAAA2W,KAAAC,EAAA5W,EAAA,aAAA0W,GAAAI,EAAA7F,QAAA6F,EAAA7F,SAAA,WAAA0F,EAAA,KAAAC,IAa7B,GAAIH,EAAavG,KAAM,IAAA8G,MAAAC,KAAAC,QAAA,KACnB,OAAAC,GAAAC,EAAyBX,EAAzB/F,OAAAC,cAAAqG,GAAAG,EAAAC,EAAAxG,QAAAC,MAAAmG,KAAuC,IAA5BK,GAA4BF,EAAAvyB,KACnCunB,GAAArqB,EAAUw1B,mBAAmBr9B,EAAGo9B,IAFjB,MAAArX,GAAAiX,KAAAC,EAAAlX,EAAA,aAAAgX,GAAAI,EAAAnG,QAAAmG,EAAAnG,SAAA,WAAAgG,EAAA,KAAAC,SAKnB/K,GAAArqB,EAAUw1B,mBAAmBr9B,EAAG,OAUxC+yB,EAAW/xB,UAAUs8B,aAAe,SAASC,EAASC,GAClDtL,EAAArqB,EAAUy1B,aAAa/9B,KAAK24B,sBAAuBqF,EAASC,GAC5DzK,EAAWwB,UAAUmF,UACjBC,EAAAxwB,GAEIwB,MAAO4yB,EACPC,cAIZzK,EAAW0K,UAAYh+B,EAAQ,IAAsCg+B,UAOrE1K,EAAW2K,kBAAoB,SAAS7hB,GAChCA,YAAiB4f,GAAA5zB,GAAmBgU,EAAM6f,IAC1C3I,EAAWyI,uBAAuB3f,GAElCkX,EAAWwJ,QAAQ1gB,IAS3BkX,EAAW4K,eAAiB,SAASC,EAAW3tB,GAC5C1Q,KAAKg1B,UAAUmF,UAAUkE,EAAW3tB,GACpC8iB,EAAWwJ,QACPzZ,KAAKkK,WAEG7sB,KAAMy9B,EACN3tB,4pECntBhBxQ,EAAAS,EAAA0H,EAAA,uCAAAi2B,IAOO,IAAMC,GAAsB,iCAKtBC,EAA4B,qCAK5BC,EAAiB,2BAOjBC,EAA6B,sCAK7BC,EAAmB,mBAKnBC,EAAoB,oBAMpBC,EAAoB,oBAKpBC,EAAkB,kBAMlBC,EAAyB,mCAKzBC,EAAsB,gCAKtBC,EAAsB,+BAKtBC,EAAuB,gCAKvBC,EAA2B,6BAK3BC,EAAuB,gCAMvBC,EAA4B,uCAgB5BC,EAAgB,0BAKhBC,EAAS,qBAUTC,EAA2B,mCAK3BC,EAAqB,gCAKrBC,EAAmB,6BAgBnBC,EACP,6CAKOC,EACP,yCAMOC,EACP,0CAOOC,EAAa,uBAKbC,EAAuB,gCAKvBC,EAAyB,kCAMzBC,EACP,2CAWOC,EACP,2CAKOC,EACP,wCAKOC,EAAgB,2BAKhBC,EAAkB,4BAKlBC,EAAmB,6BAKnBC,EAAmB,8BAQnBC,EAAc,wBAKdC,EAA4B,gCAK5BC,EAAqB,8BAQrBC,EAAgB,0BAQhBC,EACP,wCAMOC,EAAc,wBAKdC,EAAY,sBAKZC,EAAoB,yBAKpBzC,EAAsB,qCAAAr+B,EAAA4B,EAAAT,GAAA,YAAAA,GAAAT,EAAAkB,EAAA,qBAAA0G,KAAAnH,EAAAT,EAAAkB,EAAA,qBAAAxB,KAAAe,EAAAT,EAAAkB,EAAA,qBAAAf,KAAAM,EAAAT,EAAAkB,EAAA,qBAAAyG,KAAAlH,EAAAT,EAAAkB,EAAA,qBAAAD,KAAAR,EAAAT,EAAAkB,EAAA,qBAAAnB,KAAAU,EAAAT,EAAAkB,EAAA,qBAAA6yB,KAAAtzB,EAAAT,EAAAkB,EAAA,qBAAAvB,KAAAc,EAAAT,EAAAkB,EAAA,qBAAAlB,KAAAS,EAAAT,EAAAkB,EAAA,qBAAAF,KAAAP,EAAAT,EAAAkB,EAAA,qBAAA6b,KAAAtc,EAAAT,EAAAkB,EAAA,qBAAAwK,KAAAjL,EAAAT,EAAAkB,EAAA,qBAAA8yB,KAAAvzB,EAAAT,EAAAkB,EAAA,qBAAApB,KAAAW,EAAAT,EAAAkB,EAAA,qBAAAm/B,KAAA5/B,EAAAT,EAAAkB,EAAA,qBAAAmP,KAAA5P,EAAAT,EAAAkB,EAAA,qBAAAuO,KAAAhP,EAAAT,EAAAkB,EAAA,qBAAA4yB,KAAArzB,EAAAT,EAAAkB,EAAA,qBAAAo/B,KAAA7/B,EAAAT,EAAAkB,EAAA,qBAAA0M,KAAAnN,EAAAT,EAAAkB,EAAA,qBAAAq/B,KAAA9/B,EAAAT,EAAAkB,EAAA,qBAAAs/B,KAAA//B,EAAAT,EAAAkB,EAAA,qBAAAsO,KAAA/O,EAAAT,EAAAkB,EAAA,qBAAAu/B,KAAAhgC,EAAAT,EAAAkB,EAAA,qBAAA2M,KAAApN,EAAAT,EAAAkB,EAAA,qBAAAw/B,KAAAjgC,EAAAT,EAAAkB,EAAA,qBAAAy/B,KAAAlgC,EAAAT,EAAAkB,EAAA,qBAAA0/B,KAAAngC,EAAAT,EAAAkB,EAAA,qBAAA6M,KAAAtN,EAAAT,EAAAkB,EAAA,qBAAA2/B,KAAApgC,EAAAT,EAAAkB,EAAA,qBAAAgO,KAAAzO,EAAAT,EAAAkB,EAAA,qBAAA4/B,KAAArgC,EAAAT,EAAAkB,EAAA,qBAAA6/B,KAAAtgC,EAAAT,EAAAkB,EAAA,qBAAA8/B,KAAAvgC,EAAAT,EAAAkB,EAAA,qBAAA+H,KC/QnC1J,EAAAS,EAAA0H,EAAA,qBAAAu5B,IAuCO,IAAMC,GAAqB,GAarBC,EAAyB,iBAqBzBC,EAAyB,MAazBC,EAA8B,wBAa9BC,EAA0B,oBAS1BC,EAAuB,sBASvBC,EAAgB,eAahBC,EAAS,OAkCTC,EAAgB,gBAOhBC,EAAc,wBAWdC,EAAoB,mBAOpBxD,EAAyB,yBASzByD,EAA2B,0BAY3BC,EAAqB,oBAOrBzD,EAAsB,sBAQtB0D,EAAoB,8BAKpBC,EAAc,qBAQdC,EAAW,kBAOXC,EAAa,uBAabC,EACP,8BAcOC,EAAuB,oBAgDvBC,EAAyB,sBAuBzBC,EAA0B,uBAU1BC,EAA8B,0BAS9BC,EACP,gCAQOC,EAAa,wBAObC,EAAkB,kBAOlBC,EAAa,aAObC,EAAoB,oBAOpBC,EAAiB,2BAWjBC,EAAmB,mBAOnBC,EAA4B,wBAO5BC,EAAoB,oBAOpBC,EAAkB,kBAOlBC,EAA0B,+BAO1BjC,EAA4B,2CAAA3hC,EAAA4B,GC9MzClC,EAAOD,SA5OHokC,yBAA0B,gCAI1BC,qBAAsB,4BACtBC,wBAAyB,+BACzB1B,YAAa,mBAKb2B,cAAe,2BAIfC,cAAe,2BAMfC,WAAY,wBACZC,oBAAqB,2BACrBC,wBAAyB,+BAKzBC,uBAAwB,4BAIxBC,kBAAmB,yBAInBxF,uBAAwB,8BAIxBC,oBAAqB,2BAIrBwF,sBAAuB,6BAIvBtF,qBAAsB,4BAKtBuF,gBAAiB,uBAKjBC,kBAAmB,yBACnBC,SAAU,gBACVC,mBAAoB,0BACpB/B,WAAY,kBACZgC,kBAAmB,yBAMnBC,eAAgB,qBAYhBC,aAAc,oBAGdC,mBAAoB,0BAGpBzF,OAAQ,cAGR0F,mBAAoB,yBAIpBvF,iBAAkB,wBAGlBwF,cAAe,qBAGfC,WAAY,kBAGZC,kBAAmB,yBAGnBC,gBAAiB,uBAGjBC,SAAU,gBAIVC,iBAAkB,wBAGlBC,iBAAkB,wBAIlBC,wBAAyB,mBAIzBC,wBAAyB,mBAMzBC,+BAAgC,kBAKhC/F,4BAA6B,mCAC7BgG,kBAAmB,yBACnBC,qBAAsB,4BAKtB9F,qBAAsB,gCACtB+F,gBAAiB,uBACjBC,iBAAkB,wBAGlBC,cAAe,qBAKfhG,uBAAwB,4BAIxBiG,aAAc,oBACdC,kBAAmB,8BACnBC,mBAAoB,0BACpBC,+BAAgC,sCAChCC,gBAAiB,uBAKjBC,qBAAsB,4BAGtBC,qBAAsB,4BAYtBC,uBAAwB,8BAIxBC,uBAAwB,8BAIxBpG,gBAAiB,uBAIjBC,iBAAkB,wBAQlBM,6BAA8B,oCAK9B8F,eAAgB,4BAQhBzG,kCAAmC,qCAUnCC,mCACI,qCAIJyG,6BAA8B,oCAM9BC,sBAAuB,wCAAA3mC,EAAA4B,GCjJ3BlC,EAAOD,SAxFHmnC,qBAAsB,2BAKtBC,oBAAqB,0BACrBC,UAAW,YACXrE,kBAAmB,wBACnBsE,6BAA8B,mCAC9B7H,yBAA0B,+BAC1B8H,uBAAwB,6BAOxBC,oBAAqB,0BAQrBC,yBAA0B,+BAE1B3I,0BAA2B,gCAC3B4I,eAAgB,qBAMhBC,mBAAoB,yBAIpBC,kBAAmB,wBAMnBC,qBAAsB,2BAItBC,oBAAqB,0BAKrBC,6BAA8B,mCAK9BC,8BAA+B,oCAC/BC,4BAA6B,kCAC7BC,oBAAqB,0BACrBC,sBAAuB,4BAMvBxI,0BAA2B,gCAS3ByI,oBAAqB,0BASrBC,qBAAsB,sCAAA9nC,EAAA4B,EAAAT,GAAA,gBAAAmH,GAAAnH,EAAA,IAAAf,EAAAe,IAAAmH,GAAAzH,EAAA,mBAAAb,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MClFLomC,aAMjB,QAAAA,KAA+C,GAAnCrU,GAAmC7oB,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,GAApB,GAAI8oB,GAAAvrB,gGAAgBtI,KAAAioC,GAC3CjoC,KAAK4zB,aAAeA,EAGpB5zB,KAAKkoC,iBAAmBloC,KAAK+1B,GAAK/1B,KAAKmoC,YACvCnoC,KAAKooC,oBAAsBpoC,KAAKqoC,IAAMroC,KAAKk2B,6DAQnCmI,EAAWvI,GACnB91B,KAAK4zB,aAAauU,YAAY9J,EAAWvI,0CAS9BuI,EAAWvI,GACtB91B,KAAK4zB,aAAasC,eAAemI,EAAWvI,+CC3BpD,IAAAwS,MACAC,KAGAx0B,GACAy0B,WAAA,SAAAC,GACA,uBAAAA,GACA,GAAA/8B,OAAA,wBAAA+8B,GACA,4BAEAH,EAAAG,EACAxoC,EAAA,8BACA,+BAOAyoC,gBAAA,SAAAD,GACA,uBAAAA,GACA,GAAA/8B,OAAA,wBAAA+8B,GACA,4BAEAF,GAAAE,EACA,oCAAAA,EAAA,wBAGA3kC,IAAA,WACA,mBAAAe,QAAA,CACA,GAAAyjC,EACA,MAEA,oBAAAxiC,UAAA,kBAAAA,SAAAhC,KACAgC,QAAAhC,IAAAmH,MAAAnF,QAAAiF,aAQA49B,WAAA,SAAAC,EAAAC,GACAN,GAGAziC,QAAAsC,KAAAwgC,EAAA,8BAAAC,EACA,cAWAC,eAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAtlC,GAAAolC,EAAAplC,MAAAqlC,EACA,OAAArlC,MAAAX,QAAAimC,GAAAplC,SAAAF,EAAAslC,GAAA,KASAC,cAAA,SAAArkC,GACA,GAAAzB,GAAAyB,KAAAzB,UAGAoZ,IAKA,IAJAA,EAAA2sB,QAAA,KACA3sB,EAAAvY,QAAA,cAGAY,MAAAzB,UAEA,MADAoZ,GAAA2sB,QAAA,iBACA3sB,CAIA,IAAApZ,EAAAgB,gBACAoY,EAAA2sB,QAAA,UACA3sB,EAAAvY,QAAAjE,KAAA8oC,eAAA1lC,EAAAM,UACA,0BACK,IAAAN,EAAAC,mBAEL,GAAAwB,EAAAukC,wBACA5sB,EAAA2sB,QAAA,SACA3sB,EAAAvY,QAAAjE,KAAA8oC,eAAA1lC,EAAAM,UACA,+BACO,CACP,IAAAN,EAAAM,UAAAC,MAAA,wBAOA,MAFA6Y,GAAA2sB,QAAA,2EAEA3sB,CANAA,GAAA2sB,QAAA,SACA3sB,EAAAvY,QAAAjE,KAAA8oC,eAAA1lC,EAAAM,UACA,8BAOK,IAAAN,EAAAimC,cACLjmC,EAAAM,UAAAC,MAAA,sBACA6Y,EAAA2sB,QAAA,OACA3sB,EAAAvY,QAAAjE,KAAA8oC,eAAA1lC,EAAAM,UACA,4BACK,KAAAN,EAAAimC,eACLjmC,EAAAM,UAAAC,MAAA,wBAOA,MADA6Y,GAAA2sB,QAAA,2BACA3sB,CALAA,GAAA2sB,QAAA,SACA3sB,EAAAvY,QAAAjE,KAAA8oC,eAAA1lC,EAAAM,UACA,0BAMA,MAAA8Y,IAMA7c,GAAAD,SACAoE,IAAAiQ,EAAAjQ,IACA6kC,WAAA50B,EAAA40B,WACAH,WAAAz0B,EAAAy0B,WACAE,gBAAA30B,EAAA20B,gBACAI,eAAA/0B,EAAA+0B,eACAQ,oBAAAv1B,EAAAu1B,oBACAJ,cAAAn1B,EAAAm1B,cAAA77B,KAAA0G,iCCxFA,SAASw1B,GAAgBjtB,EAAO2B,EAASurB,GACrC,GAAqB,qBAAVltB,EAAP,YAAAmtB,EAAOntB,cAA6BA,EAAM1b,KAkB1C,OARAZ,KAAKm8B,KACD7f,QACA+f,YAAape,EACburB,QAASA,GAAWh8B,MAAMG,QAAQ67B,GAC5BA,EAAQl/B,MAAM,WAIhBgS,EAAM1b,MACd,IAAK,kBACL,IAAK,wBACL,IAAK,gBACDZ,KAAKY,KAAO8oC,EAAAC,kBACZ3pC,KAAKic,QACC2tB,EAA2B5pC,KAAKY,OAC3BZ,KAAKm8B,IAAIqN,aAAe/+B,KAAK,KACxC,MACJ,KAAK,uBACL,IAAK,gBACDzK,KAAKY,KAAO8oC,EAAAG,UACZ7pC,KAAKic,QACC2tB,EAA2B5pC,KAAKY,OAC3BZ,KAAKm8B,IAAIqN,aAAe/+B,KAAK,KACxC,MACJ,KAAK,8BACL,IAAK,uBACD,GAAM2xB,GAAiB9f,EAAM8f,gBAAkB9f,EAAMwtB,UAEjD7rB,IACOA,EAAQ8rB,SACNP,GAAWA,EAAQzkC,QAAQ,UAAY,KACrB,aAAnBq3B,GACsB,aAAnBA,GACmB,cAAnBA,GACmB,cAAnBA,GACmB,UAAnBA,GACmB,WAAnBA,IACXp8B,KAAKY,KAAO8oC,EAAAM,uBACZhqC,KAAKic,QACC2tB,EAA2B5pC,KAAKY,MA6CtD,SAA2CqpC,EAAsB5N,GAC7D,GAAIA,GAAeA,EAAY0N,OAAS1N,EAAY0N,MAAMG,UACtD,OAAQD,GACR,IAAK,QACD,MAAO5N,GAAY0N,MAAMG,UAAUC,QACvC,KAAK,SACD,MAAO9N,GAAY0N,MAAMG,UAAUE,SACvC,SACI,MAAO/N,GAAY0N,MAAMG,UAAUD,IAAyB,GAIpE,MAAO,IAvDiB7N,EACAne,KAEZje,KAAKY,KAAO8oC,EAAAW,kBACZrqC,KAAKic,QACC2tB,EAA2B5pC,KAAKY,MAC5B0b,EAAM8f,eAEpB,MAGJ,SACIp8B,KAAKY,KAAO8oC,EAAAY,QACZtqC,KAAKic,QACCK,EAAML,SAAW2tB,EAA2B5pC,KAAKY,UAGxD,IAAqB,gBAAV0b,GAWd,KAAM,IAAI5Q,OAAM,oBAVZk+B,GAA2BttB,IAC3Btc,KAAKY,KAAO0b,EACZtc,KAAKic,QAAUgC,GAAW2rB,EAA2BttB,IAKrDtc,KAAKic,QAAUK,EAMvBtc,KAAK4b,MAAQU,EAAMV,WAAclQ,QAASkQ,MDK9C7H,wNC9IM61B,IAENA,GAA2BF,EAAAM,wBACrB,sCACNJ,EAA2BF,EAAAa,0BACrB,qCACNX,EAA2BF,EAAAc,qCACrB,qCACNZ,EACIF,EAAAe,wCACE,8FAENb,EAA2BF,EAAAgB,gCACrB,+CACNd,EAA2BF,EAAAiB,gCACrB,sCACNf,EAA2BF,EAAAkB,+BACrB,mCACNhB,EAA2BF,EAAAmB,mCACrB,kCACNjB,EAA2BF,EAAAY,SACrB,6BACNV,EAA2BF,EAAAC,mBACrB,4CACNC,EAA2BF,EAAAG,WACrB,2CACND,EAA2BF,EAAAW,mBACrB,sCACNT,EAA2BF,EAAAoB,mBACrB,kCACNlB,EAA2BF,EAAAqB,uBACrB,iDACNnB,EAA2BF,EAAAsB,qBACrB,wDA2GNzB,EAAgB9nC,UAAYV,OAAOkqC,OAAOv/B,MAAMjK,WAChD8nC,EAAgB9nC,UAAUypC,YAAc3B,EAuBxClhC,EAAAC,KAAA,SAAArI,EAAA4B,GCrJAlC,EAAOD,SARHyrC,OAAQ,SAKRC,QAAS,qBAAAnrC,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAA,GAAAsI,GAAAnH,EAAA,GAAAf,GAAAe,IAAAmH,GAAAnH,EAAA,KAAAN,EAAAM,IAAAf,GAAAiI,EAAAlH,EAAA,GCbPwB,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAKnBolC,GACFC,mBADY,SACOxxB,GAIf,MAAOA,GAAOA,EAAK1P,QAAQ,iBAAkB,IAAM0P,GAEvDyxB,UAPY,SAOFC,EAAWC,GACjB,GAAI/6B,GAAO,KACPg7B,SAAKC,QAcT,QAZKA,EAAQN,EAAQO,SAASJ,EAAW,eAAgBC,MAC7CC,EACEL,EAAQO,SACNJ,EACA,aACAC,MACZ/6B,GACIi7B,MAAON,EAAQQ,cAAcF,GAC7BD,IAAKL,EAAQS,YAAYJ,KAI1Bh7B,GAEXm7B,cAzBY,SAyBE7vB,GACV,MAAOA,GAAKhX,UAAU,KAE1B+mC,cA5BY,SA4BEC,GACV,qBAAsBA,GAE1BF,YA/BY,SA+BA9vB,GACR,MAAOA,GAAKhX,UAAU,KAE1BinC,YAlCY,SAkCAP,GACR,mBAAoBA,GAExBQ,SArCY,SAqCHlwB,GACL,MAAOA,GAAKhX,UAAU,IAE1BmnC,WAxCY,SAwCDnwB,GACP,GAAMtL,MACAvE,EAAQ6P,EAAKhX,UAAU,GAAGwB,MAAM,IAUtC,OARAkK,GAAK07B,MAAQjgC,EAAMkgC,QACnB37B,EAAK47B,KAAOngC,EAAMkgC,QAClB37B,EAAK4O,MAAQnT,EAAMkgC,QACa,KAA5BlgC,EAAMA,EAAMnJ,OAAS,IACrBmJ,EAAM0a,MAEVnW,EAAK67B,IAAMpgC,EAEJuE,GAEX87B,WAtDY,SAsDDC,GACP,WACSA,EAAML,MADf,IACwBK,EAAMH,KAD9B,IACsCG,EAAMntB,MAD5C,IAEQmtB,EAAMF,IAAI9hC,KAAK,MAE3BiiC,YA3DY,SA2DA1wB,GACR,GAAMtL,MACFvE,EAAQ6P,EAAKhX,UAAU,GAAGwB,MAAM,IAQpC,OANAkK,GAAKjO,GAAK0J,EAAMkgC,QAChBlgC,EAAQA,EAAM,GAAG3F,MAAM,KACvBkK,EAAK9P,KAAOuL,EAAMkgC,QAClB37B,EAAKi8B,UAAYxgC,EAAMkgC,QACvB37B,EAAKk8B,SAAWzgC,EAAMnJ,OAASmJ,EAAMkgC,QAAU,IAExC37B,GAQXm8B,aA7EY,SA6EC7wB,GACT,GAAM7P,GAAQ6P,EAAKhX,UAAU,IAAIwB,MAAM,IAQvC,QAPiB2F,EAAM,GACNA,EAAM,GAGHA,EAAMnJ,OAAS,EAAImJ,EAAM,GAAK,OAKtD2gC,YAxFY,SAwFAr0B,GACR,GAAIuD,eACcvD,EAAGuC,aAAa,MAD9B,IACuCvC,EAAGuC,aAAa,QADvD,IAEIvC,EAAGuC,aAAa,YAOxB,OALIvC,GAAGuC,aAAa,aACmB,MAAhCvC,EAAGuC,aAAa,cACnBgB,OAAYvD,EAAGuC,aAAa,aAGzBgB,GAEX+wB,YApGY,SAoGA/wB,GACR,GAAMtL,MACAvE,EAAQ6P,EAAKhX,UAAU,GAAGwB,MAAM,IAStC,OAPAkK,GAAK0F,IAAMjK,EAAMkgC,QACjB37B,EAAK,gBAAkBvE,EAAMkgC,QAC7B37B,EAAK,cAAgBvE,EAAMkgC,QACvBlgC,EAAMnJ,SACN0N,EAAK,kBAAoBvE,EAAM1B,KAAK,MAGjCiG,GAEXs8B,iBAjHY,SAiHKhxB,GACb,GAAMtL,MACAvE,EAAQ6P,EAAKhX,UAAU,IAAIwB,MAAM,IAMvC,OAJAkK,GAAKK,KAAO5E,EAAMkgC,QAClB37B,EAAKu8B,YAAc9gC,EAAMkgC,QAGlB37B,GAEXw8B,UA3HY,SA2HFlxB,GACN,GAAMtL,MACFvE,EAAQ6P,EAAKxV,MAAM,IAEvB2F,GAAMkgC,QACNlgC,EAAQA,EAAM1B,KAAK,KAAKjE,MAAM,IAC9B,KAAK,GAAInG,GAAI,EAAGA,EAAI8L,EAAMnJ,OAAQ3C,IAAK,CAGnC,IAFA,GAAIoQ,GAAMtE,EAAM9L,GAAGmG,MAAM,KAAK,GAEvBiK,EAAIzN,QAAqB,MAAXyN,EAAI,IACrBA,EAAMA,EAAIzL,UAAU,EAExB,IAAMoG,GAAQe,EAAM9L,GAAGmG,MAAM,KAAK,EAE9BiK,IAAOrF,EACPsF,EAAK7N,MAAOjC,KAAM6P,EACdrF,UACGqF,GAEPC,EAAK7N,MAAOjC,KAAM,GACdwK,MAAOqF,IAInB,MAAOC,IAEXy8B,kBArJY,SAqJMnxB,GACd,GAAMoxB,MACAC,EAAQrxB,EAAKxV,MAAM,IAEzB4mC,GAAUE,WAAaD,EAAM,GAAGroC,UAAU,IAC1CooC,EAAUG,UAAYF,EAAM,GAC5BD,EAAU7tB,SAAW8tB,EAAM,GAAGtyB,cAC9BqyB,EAAUtlB,SAAWulB,EAAM,GAC3BD,EAAUI,GAAKH,EAAM,GACrBD,EAAUd,KAAOe,EAAM,GAGvBD,EAAUpvB,KAAOqvB,EAAM,GACvBD,EAAUK,WAAa,CACvB,KAAK,GAAIptC,GAAI,EAAGA,EAAIgtC,EAAMrqC,OAAQ3C,GAAK,EACnC,OAAQgtC,EAAMhtC,IACd,IAAK,QACD+sC,EAAU,YAAcC,EAAMhtC,EAAI,EAClC,MACJ,KAAK,QACD+sC,EAAU,YAAcC,EAAMhtC,EAAI,EAClC,MACJ,KAAK,aACD+sC,EAAUK,WAAaJ,EAAMhtC,EAAI,EACjC,MACJ,KAAK,UACD+sC,EAAUM,QAAUL,EAAMhtC,EAAI,EAC9B,MACJ,SACIuC,EAAOkB,IAAP,sCAEQupC,EAAMhtC,GAFd,QAEwBgtC,EAAMhtC,EAAI,GAFlC,KAWR,MANA+sC,GAAUO,QAAU,IAIpBP,EAAU3qC,GAAKyL,KAAK+T,SAASpU,SAAS,IAAIkd,OAAO,EAAG,IAE7CqiB,GAEXQ,kBA/LY,SA+LMC,GACd,GAAI7xB,IAAO,eACQ6xB,EAAKP,WACpBO,EAAKN,UACLM,EAAKtuB,SACLsuB,EAAK/lB,SACL+lB,EAAKL,GACLK,EAAKvB,KACL,MACAuB,EAAK7vB,MACPvT,KAAK,IAGP,QADAuR,GAAQ,IACA6xB,EAAK7vB,MACb,IAAK,QACL,IAAK,QACL,IAAK,QACG6vB,EAAKC,gBAAgB,aACdD,EAAKC,gBAAgB,cAC5B9xB,GAAQ,QACRA,GAAQ,IACRA,GAAQ6xB,EAAK,YACb7xB,GAAQ,IACRA,GAAQ,QACRA,GAAQ,IACRA,GAAQ6xB,EAAK,YACb7xB,GAAQ,KAchB,MAVI6xB,GAAKC,gBAAgB,aACrB9xB,GAAQ,UACRA,GAAQ,IACRA,GAAQ6xB,EAAKH,QACb1xB,GAAQ,KAEZA,GAAQ,aACRA,GAAQ,IACRA,GAAQ6xB,EAAKC,gBAAgB,cAAgBD,EAAKJ,WAAa,KAInEM,UAzOY,SAyOFC,GAON,IAAK,GAHCt9B,GAAO,GAAIijB,KACXsa,EAAQD,EAAKxnC,MAAM,QAEhBnG,EAAI,EAAGA,EAAI4tC,EAAMjrC,OAAQ3C,IAC9B,GAAiC,YAA7B4tC,EAAM5tC,GAAG2E,UAAU,EAAG,GAAkB,CAExC,GAAMw1B,GAAOyT,EAAM5tC,GAAGmG,MAAM,WAAW,GAAGA,MAAM,KAAK,EAEhDkK,GAAKvP,IAAIq5B,IACV9pB,EAAK8kB,IAAIgF,MAGb9pB,EAAKvP,IAAIq5B,GAAM33B,KAAKorC,EAAM5tC,IAIlC,MAAOqQ,IAEXw9B,YA/PY,SA+PAlyB,GACR,GAAM7P,GAAQ6P,EAAK+O,OAAO,IAAIvkB,MAAM,KAC9BkK,IAMN,OAJAA,GAAKy9B,GAAKhiC,EAAMkgC,QAChB37B,EAAKsN,KAAO7R,EAAMkgC,QAClB37B,EAAK09B,OAASjiC,EAEPuE,GAEX29B,YAzQY,SAyQAryB,GACR,GAAM7P,GAAQ6P,EAAK+O,OAAO,GAAGvkB,MAAM,KAC7BkK,IAYN,OAVAA,GAAKtF,MAAQe,EAAMkgC,SACc,IAA7B37B,EAAKtF,MAAMrG,QAAQ,KACnB2L,EAAK49B,UAAY,QAEjB59B,EAAK49B,UAAY59B,EAAKtF,MAAM2f,OAAOra,EAAKtF,MAAMrG,QAAQ,KAAO,GAC7D2L,EAAKtF,MAAQsF,EAAKtF,MAAM2f,OAAO,EAAGra,EAAKtF,MAAMrG,QAAQ,OAEzD2L,EAAKnE,IAAMJ,EAAMkgC,QACjB37B,EAAK09B,OAASjiC,EAEPuE,GAEXk7B,SAzRY,SAyRH2C,EAAUC,EAAQC,GAGvB,IAAK,GAFDR,GAAQM,EAAS/nC,MAAM,QAElBnG,EAAI,EAAGA,EAAI4tC,EAAMjrC,OAAQ3C,IAC9B,GAAI4tC,EAAM5tC,GAAG2E,UAAU,EAAGwpC,EAAOxrC,UAAYwrC,EACzC,MAAOP,GAAM5tC,EAGrB,KAAKouC,EACD,QAIJR,GAAQQ,EAAYjoC,MAAM,OAC1B,KAAK,GAAIoD,GAAI,EAAGA,EAAIqkC,EAAMjrC,OAAQ4G,IAC9B,GAAIqkC,EAAMrkC,GAAG5E,UAAU,EAAGwpC,EAAOxrC,UAAYwrC,EACzC,MAAOP,GAAMrkC,EAIrB,WAEJ8kC,UA/SY,SA+SFH,EAAUC,EAAQC,GAIxB,IAAK,GAHDR,GAAQM,EAAS/nC,MAAM,QACrBmoC,KAEGtuC,EAAI,EAAGA,EAAI4tC,EAAMjrC,OAAQ3C,IAC1B4tC,EAAM5tC,GAAG2E,UAAU,EAAGwpC,EAAOxrC,UAAYwrC,GACzCG,EAAQ9rC,KAAKorC,EAAM5tC,GAG3B,IAAIsuC,EAAQ3rC,SAAWyrC,EACnB,MAAOE,EAIXV,GAAQQ,EAAYjoC,MAAM,OAC1B,KAAK,GAAIoD,GAAI,EAAGA,EAAIqkC,EAAMjrC,OAAQ4G,IAC1BqkC,EAAMrkC,GAAG5E,UAAU,EAAGwpC,EAAOxrC,UAAYwrC,GACzCG,EAAQ9rC,KAAKorC,EAAMrkC,GAI3B,OAAO+kC,IAEXC,kBAtUY,SAsUM5yB,GAKd,GAAmC,IAA/BA,EAAKjX,QAAQ,cAEbiX,OAAYA,MACT,IAA8B,iBAA1BA,EAAKhX,UAAU,EAAG,IAMzB,MALApC,GAAOkB,IACH,kEAEJlB,EAAOkB,IAAIkY,GAEJ,IAE6B,UAApCA,EAAKhX,UAAUgX,EAAKhZ,OAAS,KAE7BgZ,EAAOA,EAAKhX,UAAU,EAAGgX,EAAKhZ,OAAS,GAE3C,IAAMoqC,MACAC,EAAQrxB,EAAKxV,MAAM,IAEzB,IAAiB,QAAb6mC,EAAM,GAIN,MAHAzqC,GAAOkB,IAAI,uCACXlB,EAAOkB,IAAIkY,GAEJ,IAEXoxB,GAAUE,WAAaD,EAAM,GAAGroC,UAAU,IAC1CooC,EAAUG,UAAYF,EAAM,GAC5BD,EAAU7tB,SAAW8tB,EAAM,GAAGtyB,cAC9BqyB,EAAUtlB,SAAWulB,EAAM,GAC3BD,EAAUI,GAAKH,EAAM,GACrBD,EAAUd,KAAOe,EAAM,GAGvBD,EAAUpvB,KAAOqvB,EAAM,GAEvBD,EAAUK,WAAa,GACvB,KAAK,GAAIptC,GAAI,EAAGA,EAAIgtC,EAAMrqC,OAAQ3C,GAAK,EACnC,OAAQgtC,EAAMhtC,IACd,IAAK,QACD+sC,EAAU,YAAcC,EAAMhtC,EAAI,EAClC,MACJ,KAAK,QACD+sC,EAAU,YAAcC,EAAMhtC,EAAI,EAClC,MACJ,KAAK,aACD+sC,EAAUK,WAAaJ,EAAMhtC,EAAI,EACjC,MACJ,KAAK,UACD+sC,EAAUM,QAAUL,EAAMhtC,EAAI,EAC9B,MACJ,SACIuC,EAAOkB,IAAP,oBAA+BupC,EAAMhtC,GAArC,QAA+CgtC,EAAMhtC,EAAI,GAAzD,KASR,MANA+sC,GAAUO,QAAU,IAIpBP,EAAU3qC,GAAKyL,KAAK+T,SAASpU,SAAS,IAAIkd,OAAO,EAAG,IAE7CqiB,GAEXyB,oBAxYY,SAwYQhB,GAChB,GAAI7xB,GAAO,cAEXA,IAAQ6xB,EAAK7yB,aAAa,cAC1BgB,GAAQ,IACRA,GAAQ6xB,EAAK7yB,aAAa,aAC1BgB,GAAQ,GAER,IAAIuD,GAAWsuB,EAAK7yB,aAAa,WAmBjC,QAfI8zB,EAAAxmC,EAAenC,aAA0C,WAA3BoZ,EAASxE,gBACvCwE,EAAW,OAGfvD,GAAQuD,EACRvD,GAAQ,IACRA,GAAQ6xB,EAAK7yB,aAAa,YAC1BgB,GAAQ,IACRA,GAAQ6xB,EAAK7yB,aAAa,MAC1BgB,GAAQ,IACRA,GAAQ6xB,EAAK7yB,aAAa,QAC1BgB,GAAQ,IACRA,GAAQ,MACRA,OAAY6xB,EAAK7yB,aAAa,QAC9BgB,GAAQ,IACA6xB,EAAK7yB,aAAa,SAC1B,IAAK,QACL,IAAK,QACL,IAAK,QACG6yB,EAAK7yB,aAAa,aACX6yB,EAAK7yB,aAAa,cACzBgB,GAAQ,QACRA,GAAQ,IACRA,GAAQ6xB,EAAK7yB,aAAa,YAC1BgB,GAAQ,IACRA,GAAQ,QACRA,GAAQ,IACRA,GAAQ6xB,EAAK7yB,aAAa,YAC1BgB,GAAQ,KAchB,MAV+B,QAA3BuD,EAASxE,gBACTiB,GAAQ,UACRA,GAAQ,IACRA,GAAQ6xB,EAAK7yB,aAAa,WAC1BgB,GAAQ,KAEZA,GAAQ,aACRA,GAAQ,KACRA,GAAQ6xB,EAAK7yB,aAAa,eAAiB,KAE3C,QAQJ+zB,sBAtcY,SAscUC,GAClB,GAAMC,GAAWD,EAAWE,MACvBnlC,IAAI,SAAAolC,GAAA,MAAYA,GAAS1sC,KACzB2sC,OAAO,SAAC5U,EAAM3uB,EAAOwjC,GAAd,MAAwBA,GAAMtqC,QAAQy1B,KAAU3uB,IACvD7I,OACCssC,EACCN,EAAWO,YAAcP,EAAWO,WAAWvsC,QAAW,CAEjE,MAAIisC,EAAW,GAAmB,IAAdK,GAApB,CAIA,GAAIE,GAAc,IAElB,IAAiB,IAAbP,EACAO,EAAcR,EAAWE,MAAM,GAAGzsC,OAC/B,IAAiB,IAAbwsC,EAAgB,CAEvB,GAAMQ,GACAT,EAAWO,WAAWG,KACpB,SAAAC,GAAA,MAA6B,QAApBA,EAAMC,WAEnBH,KACAD,EAAcC,EAASP,MAAM1oC,MAAM,KAAK,QAEzC,IAAIyoC,GAAY,EAAG,CAEtB,GAAMY,GACAb,EAAWO,WAAWG,KACpB,SAAAC,GAAA,MAA6B,QAApBA,EAAMC,WAEnBC,KACAL,EAAcK,EAASX,MAAM1oC,MAAM,KAAK,IAIhD,MAAOgpC,KAOXM,aAjfY,WAkfR,MAAOC,GAAAznC,EAAW0nC,UAAU,EAAG,aAYnCC,iBA9fY,SA8fKC,EAAO1V,EAAM2V,GAC1B,IAAK,GAAI9vC,GAAI,EAAGA,EAAI6vC,EAAMhB,MAAMlsC,SAAU3C,EAAG,CACzC,GAAM+vC,GAAWF,EAAMhB,MAAM7uC,EAE7B,IAAI+vC,EAAS3tC,KAAO+3B,GACb4V,EAAS95B,YAAc65B,EAC1B,MAAOC,GAAShlC,QAa5BilC,gBAjhBY,SAihBIC,GACZ,MAAOA,GACFpB,MACA1oC,MAAM,KACNuD,IAAI,SAAAwmC,GAAA,MAAW1sC,UAAS0sC,EAAS,OAS1CC,SA9hBY,SA8hBHC,EAAKzyB,GACV,MAAOyyB,GAAIrE,MAAMsD,KAAK,SAAAjvC,GAAA,MAAKA,GAAEud,OAASA,KAO1C0yB,SAtiBY,SAsiBHD,GACL,GAAME,GACAF,EAAIjqC,MAAM,MAAM4oC,OAAO,SAAApzB,GAAA,MAAQA,GAAK40B,WAAW,iBAErD,IAAID,EAAW3tC,OAAS,EACpB,MAAO2tC,GAAW,GAAG5lB,OAAO,eAAe/nB,SAenD6tC,iBA1jBY,SA0jBK7B,EAAY8B,GACzB,GAAIC,GAAc,IAElB,IAAK/B,GAAe8B,EAApB,CAIA,IAAK,GAAIzwC,GAAI,EAAGA,EAAI2uC,EAAWgC,IAAIhuC,SAAU3C,EAAG,CAC5C,GAAM2wC,GAAMhC,EAAWgC,IAAI3wC,EAE3B,IAAI2wC,EAAIC,OACDD,EAAIC,MAAMl2B,gBAAkB+1B,EAAU/1B,cAAe,CACxDg2B,EAAcC,EAAIE,OAClB,QAGR,GAAIH,EAAa,CAIb,GAAMI,GACAnC,EAAWoC,SACRvjC,WACArH,MAAM,KACNuD,IAAI,SAAApI,GAAA,MAAKkC,UAASlC,EAAG,MACxB0vC,EAAeF,EAAapsC,QAAQgsC,EAE1CI,GAAa3mC,OAAO6mC,EAAc,GAClCF,EAAaG,QAAQP,GACrB/B,EAAWoC,SAAWD,EAAa1mC,KAAK,QAahD8mC,gBApmBY,SAomBIvC,EAAY8B,GACxB,GAAK9B,GAAe8B,EAApB,CAIA,GAAMU,MAL6B5a,KAAAC,KAAAC,QAAA,KAOnC,OAAAC,GAAAC,EAAkBgY,EAAWgC,IAA7B9Z,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAkC,IAAvBoa,GAAuBja,EAAA3rB,KAC1B4lC,GAAIC,OACDD,EAAIC,MAAMl2B,gBAAkB+1B,EAAU/1B,eACzCy2B,EAAU3uC,KAAKmuC,EAAIE,UAVQ,MAAA1qB,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAcnC,GAAI0a,EAAUxuC,OAAS,EAAG,CAGtB,GAAMyuC,GAAUD,EAAUznC,IAAI,SAAA2nC,GAAA,aAAeA,IACvCC,EAAS3C,EAAW4C,KAAKxC,OAC3B,SAAAsC,GAAA,OAA0C,IAAlCD,EAAQ1sC,QAAQ2sC,EAAK1nC,SAEjCwnC,GAAU3uC,KAAVoI,MAAAumC,yHAAkBG,EAAO5nC,IAAI,SAAA2nC,GAAA,MAAQA,GAAKR,WAK1C,IAIMW,GAJS7C,EAAWoC,SACrBvjC,WACArH,MAAM,KACNuD,IAAIkE,QACcmhC,OAAO,SAAAjB,GAAA,OAAiC,IAA3BqD,EAAUzsC,QAAQopC,IAE/B,KAAnB0D,EAAQ7uC,QAERgsC,EAAW1C,KAAO,EAClB0C,EAAWV,UAAY,WACvBU,EAAWoC,SAAW,KAEtBpC,EAAWoC,SAAWS,EAAQpnC,KAAK,KAGvCukC,EAAWgC,IAAMhC,EAAWgC,IAAI5B,OAC5B,SAAAsC,GAAA,OAA2C,IAAnCG,EAAQ9sC,QAAQ2sC,EAAKR,WACjClC,EAAW4C,KAAO5C,EAAW4C,KAAKxC,OAC9B,SAAAsC,GAAA,OAA2C,IAAnCG,EAAQ9sC,QAAQ2sC,EAAKR,WAC7BlC,EAAW8C,SACX9C,EAAW8C,OAAS9C,EAAW8C,OAAO1C,OAClC,SAAAsC,GAAA,OAA2C,IAAnCG,EAAQ9sC,QAAQ2sC,EAAKR,eAMjD7oC,GAAAC,EAAA5H,IAAAF,KAAAqB,EAAA,qCAAA5B,EAAA4B,EAAAT,GC/pBA,GAAA2wC,GAAA7xC,EAAA,KACA8xC,EAAA9xC,EAAA,IAEAR,GAAAuyC,MAAAD,EACAtyC,EAAA6tB,MAAAwkB,EAAAxkB,MACA7tB,EAAAwyC,gBAAAH,EAAAG,gBACAxyC,EAAAyyC,YAAAJ,EAAAI,YACAzyC,EAAA0yC,cAAAL,EAAAK,cACA1yC,EAAA2yC,sBAAAN,EAAAM,sBACA3yC,EAAA4yC,qBAAAP,EAAAO,qBACA5yC,EAAA6yC,yBAAAR,EAAAQ,wCCWA,QAAAC,KACAxyC,KAAAyyC,QAAAzyC,KAAAyyC,YACAzyC,KAAA0yC,cAAA1yC,KAAA0yC,sBAwQA,QAAAC,GAAA/kC,GACA,wBAAAA,GAOA,QAAAglC,GAAAhlC,GACA,sBAAAA,IAAA,OAAAA,EAGA,QAAAilC,GAAAjlC,GACA,gBAAAA,EAnRAjO,EAAAD,QAAA8yC,EAGAA,iBAEAA,EAAA/wC,UAAAgxC,eACAD,EAAA/wC,UAAAixC,qBAIAF,EAAAM,oBAAA,GAIAN,EAAA/wC,UAAAsxC,gBAAA,SAAA3xC,GACA,GA4PA,gBA5PAA,MAAA,GAAAoO,MAAApO,GACA,KAAAqN,WAAA,8BAEA,OADAzO,MAAA0yC,cAAAtxC,EACApB,MAGAwyC,EAAA/wC,UAAAk1B,KAAA,SAAA3Y,GACA,GAAAg1B,GAAAj3B,EAAAhO,EAAAlD,EAAAxK,EAAA4yC,CAMA,IAJAjzC,KAAAyyC,UACAzyC,KAAAyyC,YAGA,UAAAz0B,KACAhe,KAAAyyC,QAAAn2B,OACAs2B,EAAA5yC,KAAAyyC,QAAAn2B,SAAAtc,KAAAyyC,QAAAn2B,MAAAtZ,QAAA,CAEA,IADAgwC,EAAAjoC,UAAA,aACAW,OACA,KAAAsnC,EAGA,IAAAxsB,GAAA,GAAA9a,OAAA,yCAAAsnC,EAAA,IAEA,MADAxsB,GAAA0sB,QAAAF,EACAxsB,EAOA,GAAAqsB,EAFA92B,EAAA/b,KAAAyyC,QAAAz0B,IAGA,QAEA,IAAA20B,EAAA52B,GACA,OAAAhR,UAAA/H,QAEA,OACA+Y,EAAAvb,KAAAR,KACA,MACA,QACA+b,EAAAvb,KAAAR,KAAA+K,UAAA,GACA,MACA,QACAgR,EAAAvb,KAAAR,KAAA+K,UAAA,GAAAA,UAAA,GACA,MAEA,SACAF,EAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,GACAgR,EAAA9Q,MAAAjL,KAAA6K,OAEG,IAAA+nC,EAAA72B,GAIH,IAHAlR,EAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,GAEAgD,GADAklC,EAAAl3B,EAAAzR,SACAtH,OACA3C,EAAA,EAAeA,EAAA0N,EAAS1N,IACxB4yC,EAAA5yC,GAAA4K,MAAAjL,KAAA6K,EAGA,WAGA2nC,EAAA/wC,UAAA0mC,YAAA,SAAAnqB,EAAA8X,GACA,GAAAr1B,EAEA,KAAAkyC,EAAA7c,GACA,KAAArnB,WAAA,8BA2CA,OAzCAzO,MAAAyyC,UACAzyC,KAAAyyC,YAIAzyC,KAAAyyC,QAAAU,aACAnzC,KAAA22B,KAAA,cAAA3Y,EACA20B,EAAA7c,YACAA,cAEA91B,KAAAyyC,QAAAz0B,GAGA40B,EAAA5yC,KAAAyyC,QAAAz0B,IAEAhe,KAAAyyC,QAAAz0B,GAAAnb,KAAAizB,GAGA91B,KAAAyyC,QAAAz0B,IAAAhe,KAAAyyC,QAAAz0B,GAAA8X,GANA91B,KAAAyyC,QAAAz0B,GAAA8X,EASA8c,EAAA5yC,KAAAyyC,QAAAz0B,MAAAhe,KAAAyyC,QAAAz0B,GAAAo1B,SAIA3yC,EAHAoyC,EAAA7yC,KAAA0yC,eAGAF,EAAAM,oBAFA9yC,KAAA0yC,gBAKAjyC,EAAA,GAAAT,KAAAyyC,QAAAz0B,GAAAhb,OAAAvC,IACAT,KAAAyyC,QAAAz0B,GAAAo1B,UACAttC,QAAAwW,MAAA,mIAGAtc,KAAAyyC,QAAAz0B,GAAAhb,QACA,kBAAA8C,SAAAutC,OAEAvtC,QAAAutC,SAKArzC,MAGAwyC,EAAA/wC,UAAAs0B,GAAAyc,EAAA/wC,UAAA0mC,YAEAqK,EAAA/wC,UAAA6xC,KAAA,SAAAt1B,EAAA8X,GAMA,QAAAkL,KACAhhC,KAAAk2B,eAAAlY,EAAAgjB,GAEAuS,IACAA,KACAzd,EAAA7qB,MAAAjL,KAAA+K,YAVA,IAAA4nC,EAAA7c,GACA,KAAArnB,WAAA,8BAEA,IAAA8kC,KAcA,OAHAvS,GAAAlL,WACA91B,KAAA+1B,GAAA/X,EAAAgjB,GAEAhhC,MAIAwyC,EAAA/wC,UAAAy0B,eAAA,SAAAlY,EAAA8X,GACA,GAAA0d,GAAAC,EAAAzwC,EAAA3C,CAEA,KAAAsyC,EAAA7c,GACA,KAAArnB,WAAA,8BAEA,KAAAzO,KAAAyyC,UAAAzyC,KAAAyyC,QAAAz0B,GACA,MAAAhe,KAMA,IAHAgD,GADAwwC,EAAAxzC,KAAAyyC,QAAAz0B,IACAhb,OACAywC,GAAA,EAEAD,IAAA1d,GACA6c,EAAAa,EAAA1d,WAAA0d,EAAA1d,mBACA91B,MAAAyyC,QAAAz0B,GACAhe,KAAAyyC,QAAAvc,gBACAl2B,KAAA22B,KAAA,iBAAA3Y,EAAA8X,OAEG,IAAA8c,EAAAY,GAAA,CACH,IAAAnzC,EAAA2C,EAAoB3C,KAAA,GACpB,GAAAmzC,EAAAnzC,KAAAy1B,GACA0d,EAAAnzC,GAAAy1B,UAAA0d,EAAAnzC,GAAAy1B,aAAA,CACA2d,EAAApzC,CACA,OAIA,GAAAozC,EAAA,EACA,MAAAzzC,KAEA,KAAAwzC,EAAAxwC,QACAwwC,EAAAxwC,OAAA,QACAhD,MAAAyyC,QAAAz0B,IAEAw1B,EAAAhpC,OAAAipC,EAAA,GAGAzzC,KAAAyyC,QAAAvc,gBACAl2B,KAAA22B,KAAA,iBAAA3Y,EAAA8X,GAGA,MAAA91B,OAGAwyC,EAAA/wC,UAAAy2B,mBAAA,SAAAla,GACA,GAAAvN,GAAAwiC,CAEA,KAAAjzC,KAAAyyC,QACA,MAAAzyC,KAGA,KAAAA,KAAAyyC,QAAAvc,eAKA,MAJA,KAAAnrB,UAAA/H,OACAhD,KAAAyyC,WACAzyC,KAAAyyC,QAAAz0B,UACAhe,MAAAyyC,QAAAz0B,GACAhe,IAIA,QAAA+K,UAAA/H,OAAA,CACA,IAAAyN,IAAAzQ,MAAAyyC,QACA,mBAAAhiC,GACAzQ,KAAAk4B,mBAAAznB,EAIA,OAFAzQ,MAAAk4B,mBAAA,kBACAl4B,KAAAyyC,WACAzyC,KAKA,GAAA2yC,EAFAM,EAAAjzC,KAAAyyC,QAAAz0B,IAGAhe,KAAAk2B,eAAAlY,EAAAi1B,OACG,IAAAA,EAEH,KAAAA,EAAAjwC,QACAhD,KAAAk2B,eAAAlY,EAAAi1B,IAAAjwC,OAAA,GAIA,cAFAhD,MAAAyyC,QAAAz0B,GAEAhe,MAGAwyC,EAAA/wC,UAAAwxC,UAAA,SAAAj1B,GAQA,MANAhe,MAAAyyC,SAAAzyC,KAAAyyC,QAAAz0B,GAEA20B,EAAA3yC,KAAAyyC,QAAAz0B,KACAhe,KAAAyyC,QAAAz0B,IAEAhe,KAAAyyC,QAAAz0B,GAAA1T,YAIAkoC,EAAA/wC,UAAAiyC,cAAA,SAAA11B,GACA,GAAAhe,KAAAyyC,QAAA,CACA,GAAAkB,GAAA3zC,KAAAyyC,QAAAz0B,EAEA,IAAA20B,EAAAgB,GACA,QACA,IAAAA,EACA,MAAAA,GAAA3wC,OAEA,UAGAwvC,EAAAkB,cAAA,SAAAE,EAAA51B,GACA,MAAA41B,GAAAF,cAAA11B,KAgBApQ,y0BC5SA1N,EAAAS,EAAA0H,EAAA,uCAAA2iC,IAOO,IAAML,GACP,qCAMOH,EACP,0CASOC,EACP,6CAMOC,EACP,qCAMOL,EAAoB,wBAMpBO,EACP,oCAMOC,EACP,wCAMON,EAA2B,+BAK3BD,EAAU,cAKVT,EAAY,gBAMZF,EAAoB,wBAMpBmB,EAAoB,0BAKpBC,EAAwB,wBAMxBf,EAAyB,6BAMzBgB,EAAsB,sCAAA/qC,EAAA4B,EAAAT,GAAA,YAAAL,QAAAC,eAAAa,EAAA,cAAAuJ,OAAA,IAAAhK,EAAAT,EAAAkB,EAAA,uCAAA0G,KAAAnH,EAAAT,EAAAkB,EAAA,6CAAAxB,KAAAe,EAAAT,EAAAkB,EAAA,8CAAAf,KAAAM,EAAAT,EAAAkB,EAAA,sCAAAyG,KAAAlH,EAAAT,EAAAkB,EAAA,2CAAAD,KCjGnC1B,EAAAS,EAAA0H,EAAA,uCAAA2iC,IAGO,IAAM6I,GAAsB,gBActBpT,EAA4B,2BAK5BqT,EAA6B,2BAK7BpT,EAAqB,yBAKrBqT,EAA0B,yBAM1B/I,EAAsB,sCAAA/qC,EAAA4B,EAAAT,GAAA,uBAAAnB,GCgFnC,QAAS+zC,KACL,GAAIC,SAEJ,KAEIA,GAAWpvC,QAAU7E,MAAMk0C,aAC7B,MAAO53B,GACL1Z,EAAO0Z,MAAMA,GAGjB,MAAO23B,GAaX,QAASE,KACL,OAAUjmC,KAAK+T,SAASpU,SAAS,IAA1B,aAAyCkd,OAAO,EAAG,GDxG3B,GAAAxiB,GAAAnH,EAAA,GAAAf,GAAAe,IAAAmH,GAAAnH,EAAA,KAAAN,EAAAM,IAAAf,GCrC7BuC,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAIrBmuC,SAEAC,QAKJhsC,GAAAC,GAKIyqB,wBACI,IAAKqhB,EAAoB,CACrB,GAAMF,GAAeF,GAEjBE,KACAE,EAAqBF,EAAa1mB,QAAQ,sBAEzC4mB,IACDA,EAmEhB,WACI,GAAME,GAAWC,EAAAjsC,EAAkBksC,kBAInC,OAFA5xC,GAAOkB,IAAI,0BAA2BwwC,GAE/BA,KAvESJ,GACAA,EAAazwB,QACT,oBACA2wB,IAKhB,MAAOA,IAOXK,gBACI,IAAKJ,EAAY,CACb,GAAMH,GAAeF,GAEjBE,KACAG,EAAaH,EAAa1mB,QAAQ,gBAEjC6mB,IACDA,EAuDhB,WACI,GAAMK,GA8BCP,IAAQA,IAAQA,IAAQA,GA1B/B,OAFAvxC,GAAOkB,IAAI,eAAgB4wC,GAEpBA,KA3DSR,GACAA,EAAazwB,QAAQ,cAAe4wB,IAKhD,MAAOA,IAOXM,gBAGI,GAAMT,GAAeF,GAErB,OAAOE,GAAeA,EAAa1mB,QAAQ,qBAO/CmnB,cAAcA,GACV,GAAMT,GAAeF,GAEjBE,KACIS,EACAT,EAAazwB,QAAQ,YAAakxB,GAElCT,EAAaxwB,WAAW,kBA4DsBljB,KAAAqB,EAAA,0CAAA5B,EAAA4B,GC5H9D,QAASmuC,GAAUvgB,EAAKmlB,GACpB,MAAO1mC,MAAKE,MAAMF,KAAK+T,UAAY2yB,EAAMnlB,EAAM,IAAMA,EAQzD,QAASolB,GAAcC,GACnB,MAAOA,GAAI9E,EAAU,EAAG8E,EAAI9xC,OAAS,IAzBzC,GA8CM+xC,IAKFC,eALe,WAMX,MAAOH,GA7CI,qBAoDfI,gBAbe,SAaClnC,GAGZ,IAFA,GAAIpB,GAAM,GAEHoB,KACHpB,GAAO3M,KAAKg1C,gBAGhB,OAAOroC,IAEXkoC,gBACAK,kBApCJ,SAA2BlyC,GAGvB,IAAK,GAFDwZ,GAAS,GAEJnc,EAAI,EAAGA,EAAI2C,EAAQ3C,GAAK,EAC7Bmc,GAAUq4B,EApCZ,iEAuCF,OAAOr4B,IA8BPwzB,YAGJrwC,GAAOD,QAAUq1C,iBC5EjB,GAAA/T,EAGAA,GAAA,WACA,MAAAhhC,QAGA,KAEAghC,KAAA5zB,SAAA,mBAAAA,EAAA+nC,MAAA,QACC,MAAAl1C,GAED,gBAAA4E,UACAm8B,EAAAn8B,QAOAlF,EAAAD,QAAAshC,+BClBiPjgC,QAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAA01C,WAAzR,WAAsB,MAAAvwC,gBAAAwwC,aAAAxwC,OAAAwwC,YAAAxrB,KAAAhlB,OAAAwwC,YAAAC,QAAAzwC,OAAAwwC,YAAAC,OAAAC,gBAAA1wC,OAAAwwC,YAAAxrB,MAAAhlB,OAAAwwC,YAAAC,OAAAC,gBAAAt2B,KAAA4K,mICKnC,QAAS2rB,KAA+C,GAAjBC,GAAiB1qC,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,6BAAA2qC,KAAAC,EAAA31C,KAAA01C,MAIpD,iBAAAE,GAII,QAAAC,KAAqB,GAAAC,EAAAH,GAAA31C,KAAA61C,EAAA,QAAA5jB,GAAAlnB,UAAA/H,OAAN6H,EAAM2C,MAAAykB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANrnB,EAAMqnB,GAAAnnB,UAAAmnB,EAAA,IAAA6jB,qKAAA/1C,MAAA81C,EAAAD,EAAAG,WAAAj1C,OAAAk1C,eAAAJ,IAAAr1C,KAAAyK,MAAA6qC,GAAA91C,MAAAuK,OACRM,IADQ,OAEjBkrC,GAAKhsB,WAAa,KAFDgsB,EAJzB,MAAAH,2TAAAC,EAAqBJ,GAArBS,EAAAL,IAAAplC,IAAA,OAAArF,MAAA,SAaS2e,GACD/pB,KAAK+pB,WAAaA,MAd1B8rB,KDT+BhsB,gSC+BnCxhB,GAAA+H,EAAeolC,GAKR,IAAMW,GACPX,EAA8BY,EAAA9tC,IAAA,SAAArI,EAAA4B,EAAAT,GAAA,YCrCqlGL,QAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAA22C,OAAjqG,WAAkB,GAAAz0C,GAAA00C,EAAAC,YAAAC,OAAAv2C,EAAA,KAAAa,EAAA,KAAAM,EAAA,KAAAf,EAAAi2C,EAAAG,aAAAD,MAAwF,IAAA3xC,iBAAAzB,YAAAyB,OAAAzB,UAAAM,WAAAmB,OAAA6xC,iBAAA,MAAA7xC,gBAAA8xC,gBAAA12C,EAAA4E,OAAA8xC,iBAAA9xC,eAAA+xC,eAAA91C,EAAA+D,OAAA+xC,gBAAA/xC,eAAA6xC,kBAAAt1C,EAAA,iBAA+Pm1C,YAAA30C,EAAAi1C,SAAAx2C,EAAAy2C,GAAA72C,EAAA82C,UAAAj2C,EAAA4C,UAAAtC,EAAuD,IAAAmH,IAAAnH,EAAAgC,UAAAM,WAAAqX,cAAAlZ,EAAAuB,UAAA4zC,WAAA1uC,EAAA,GAAA2uC,WAAA7zC,UAAA4zC,YAAAr2C,UAAkH,KAAAA,EAAA4H,EAAAxD,QAAA,WAAAnD,EAAA00C,EAAAC,YAAAW,MAAA5uC,EAAAC,EAAAvD,UAAArE,EAAA,SAAAA,EAAA4H,EAAAxD,QAAA,cAAAuD,EAAAC,EAAAvD,UAAArE,EAAA,IAAAN,EAAAi2C,EAAAG,aAAAD,SAAA,KAAA71C,EAAA4H,EAAAxD,QAAA,SAAAnD,EAAA00C,EAAAC,YAAAW,MAAA5uC,EAAAC,EAAAvD,UAAArE,EAAA,SAAAA,EAAA4H,EAAAxD,QAAA,cAAAuD,EAAAC,EAAAvD,UAAArE,EAAA,IAAAN,EAAAi2C,EAAAG,aAAAD,SAAA,KAAA71C,EAAA4H,EAAAxD,QAAA,UAAAnD,EAAA00C,EAAAC,YAAAzxC,KAAAwD,EAAAC,EAAAvD,UAAArE,EAAA,GAAAN,EAAAi2C,EAAAG,aAAAD,SAAA,KAAA71C,EAAA4H,EAAAxD,QAAA,UAAAnD,EAAA00C,EAAAC,YAAAlxC,KAAAiD,EAAAC,EAAAvD,UAAArE,EAAA,GAAAN,EAAAi2C,EAAAG,aAAApxC,OAAA,KAAA1E,EAAA4H,EAAAxD,QAAA,YAAAnD,EAAA00C,EAAAC,YAAAC,OAAAluC,EAAAC,EAAAvD,UAAArE,EAAA,GAAAN,EAAAi2C,EAAAG,aAAAD,SAAA,KAAA71C,EAAA4H,EAAAxD,QAAA,YAAAnD,EAAA00C,EAAAC,YAAAY,OAAA7uC,EAAAC,EAAAvD,UAAArE,EAAA,SAAAA,EAAA4H,EAAAxD,QAAA,cAAAuD,EAAAC,EAAAvD,UAAArE,EAAA,IAAAN,EAAAi2C,EAAAG,aAAAD,SAAA,KAAA71C,EAAA4H,EAAAxD,QAAA,aAAAnD,EAAA00C,EAAAC,YAAAa,QAAA9uC,EAAAC,EAAAvD,UAAArE,EAAA,GAAAN,EAAAi2C,EAAAG,aAAAW,UAAA,KAAAz2C,EAAA4H,EAAAxD,QAAA,cAAAnD,EAAA00C,EAAAC,YAAAzxC,KAAAnE,EAAA4H,EAAAxD,QAAA,MAAAuD,EAAAC,EAAAvD,UAAArE,EAAA,EAAAA,EAAA,GAAAN,EAAAi2C,EAAAG,aAAAD,OAA6iC,IAAArmC,KAAQvO,EAAA,eAAA2G,EAAA,UAA6B3G,EAAA,aAAA2G,EAAA,kCAAmD3G,EAAA,aAAA2G,EAAA,6BAA8C3G,EAAA,aAAA2G,EAAA,uBAAwC3G,EAAA,aAAA2G,EAAA,eAAgC3G,EAAA,eAAA2G,EAAA,kCAAqD3G,EAAA,aAAA2G,EAAA,gCAAiD3G,EAAA,sBAAA2G,EAAA,mBAA6C3G,EAAA,gBAAA2G,EAAA,mBAAuC3G,EAAA,YAAA2G,EAAA,+BAA+C3G,EAAA,cAAA2G,EAAA,iCAAmD3G,EAAA,YAAA2G,EAAA,+BAA+C3G,EAAA,aAAA2G,EAAA,iCAAkD3G,EAAA,iBAAA2G,EAAA,+CAAoE3G,EAAA,aAAA2G,EAAA,eAAgC3G,EAAA,UAAA2G,EAAA,YAA0B3G,EAAA,WAAA2G,EAAA,YAA2B3G,EAAA,SAAA2G,EAAA,UAAuB3G,EAAA,QAAA2G,EAAA,gBAA4B3G,EAAA,MAAA2G,EAAA,uBAAiC3G,EAAA,WAAA2G,EAAA,aAA4B3G,EAAA,SAAA2G,EAAA,4CAAyD3G,EAAA,MAAA2G,EAAA,QAAkB3G,EAAA,OAAA2G,EAAA,SAAoB3G,EAAA,OAAA2G,EAAA,SAAoB3G,EAAA,OAAA2G,EAAA,UAAqB3G,EAAA,aAAA2G,EAAA,iFAAgG7H,SAAAD,QAAoB,KAAAC,IAAAyP,GAAA,GAAAA,EAAAzO,eAAAhB,KAAAD,EAAA0P,EAAAzP,IAAA6H,EAAAhE,KAAAgE,GAAA,CAAuDtI,EAAAQ,EAAAmB,CAAM,OAAM,OAAA3B,GAAA,UAAAsE,KAAAtE,KAAAa,EAAA,eAAAu2C,KAAAp3C,GAAA,GAAAA,EAAAq2C,EAAAgB,OAAAC,SAAAt3C,GAAyF,IAAAq2C,GAAAgB,OAAAE,IAAA12C,EAAA,yBAAAu2C,KAAA9uC,GAAA,EAAgE,MAAM,KAAA+tC,GAAAgB,OAAAG,QAAA32C,EAAA,sBAAAu2C,KAAA9uC,GAAA,EAAiE,MAAM,KAAA+tC,GAAAgB,OAAAI,IAAA52C,KAAA,yBAAAu2C,KAAAx1C,IAAA,OAAAf,EAAA,UAAAA,EAAA,IAA0F,OAAOy1C,YAAA30C,EAAAmE,eAAAuC,EAAAuF,WAAAipC,GAAA72C,EAAA82C,UAAAj2C,EAAA+1C,SAAAx2C,EAAAqD,UAAAtC,GAAgK,IAAAk1C,GAAA52C,EAAA42C,WAAiCG,cAAcD,OAAA,SAAAY,QAAA,UAAA/xC,KAAA,OAAA6G,OAAA,UAA8DqqC,aAAcC,OAAA,SAAAY,QAAA,UAAA/xC,KAAA,OAAAP,KAAA,8BAAAqyC,OAAA,UAAiGG,QAASC,QAAA,UAAAC,IAAA,WAAAC,QAAA,UAAAC,IAAA,kBAAAz3C,EAAA4B,EAAAT,IAAA,SCF36Gu2C,EAAAC,EAAAC,GA4BA53C,EAAwR,WAAsC,eAAAA,GAAA4B,EAAAT,EAAAmH,GAA0B,QAAA3G,GAAAd,EAAA4zB,GAAgB,IAAAtzB,EAAAN,GAAA,CAAU,IAAAe,EAAAf,GAAA,CAAU,GAAAwH,GAAA,kBAAAwvC,iBAA0C,KAAApjB,GAAApsB,EAAA,MAAAA,GAAAxH,KAAwB,IAAAT,EAAA,MAAAA,GAAAS,KAAoB,IAAAuL,GAAA,GAAAX,OAAA,uBAAA5K,EAAA,IAA8C,MAAAuL,GAAAmlB,KAAA,mBAAAnlB,EAAkC,GAAA/L,GAAAc,EAAAN,IAAYpB,WAAYmC,GAAAf,GAAA,GAAAN,KAAAF,EAAAZ,QAAA,SAAAO,GAAoD,MAAA2B,GAAjBC,EAAAf,GAAA,GAAAb,IAAiBA,IAAgBK,IAAAZ,QAAAO,EAAA4B,EAAAT,EAAAmH,GAAsB,MAAAnH,GAAAN,GAAApB,QAA8D,OAA1CW,GAAA,kBAAAy3C,kBAA0Ch3C,EAAA,EAAYA,EAAAyH,EAAAvF,OAAWlC,IAAAc,EAAA2G,EAAAzH,GAAY,OAAAc,KAAYm2C,GAAA,SAAAD,EAAAn4C,EAAAD,GACjwB,YACAC,GAAAD,QAAA,SAAAs4C,GAEA,QAAAC,GAAAC,GACA,GAAAvrC,GAAA,GAAAwrC,GAAAD,GACAE,EAAAzrC,EAAAyrC,SAIA,OAHAzrC,GAAA0rC,WAAA,GACA1rC,EAAA2rC,YACA3rC,EAAA8U,OACA22B,EAPA,GAAAD,GAAAH,EAAAO,iBAUAP,GAAAC,IAAA,SAAAC,GACA,MAAAD,GAAAC,IAGAF,EAAAv2C,UAAAw2C,IAAA,WACA,MAAAA,GAAAj4C,aAKIw4C,GAAA,SAAAV,EAAAn4C,EAAAD,GACJ,YAOA,SAAA+4C,KACAz4C,KAAA04C,oBACA14C,KAAA24C,eACA34C,KAAA44C,WAAA,GAAAC,GAAA,IACA74C,KAAA84C,aAAA,GAAAD,GAAA,IACA74C,KAAA+4C,sBACA/4C,KAAAg5C,qBACA,IAAAj5C,GAAAC,IACAA,MAAAi5C,YAAA,WACAl5C,EAAAm5C,gBAEAl5C,KAAAm5C,UAAAC,EAyDA,QAAAC,GAAAC,EAAAC,EAAA3rC,GACA5N,KAAA44C,WAAA/1C,KAAAy2C,EAAAC,EAAA3rC,GACA5N,KAAAw5C,aAGA,QAAAC,GAAAH,EAAAC,EAAA3rC,GACA5N,KAAA84C,aAAAj2C,KAAAy2C,EAAAC,EAAA3rC,GACA5N,KAAAw5C,aAGA,QAAAE,GAAAtB,GACAp4C,KAAA84C,aAAAa,SAAAvB,GACAp4C,KAAAw5C,aAtFA,GAAAI,EACA,KAAK,SAAAluC,OAAoB,MAAAzL,GAAY25C,EAAA35C,EACrC,GAAAm5C,GAAAtB,EAAA,cACAe,EAAAf,EAAA,WACA+B,EAAA/B,EAAA,SAgBAW,GAAAh3C,UAAAq4C,aAAA,SAAAR,GACA,GAAAS,GAAA/5C,KAAAm5C,SAGA,OAFAn5C,MAAAm5C,UAAAG,EACAt5C,KAAA04C,oBACAqB,GAGAtB,EAAAh3C,UAAAu4C,mBAAA,WACA,MAAAh6C,MAAA04C,kBAGAD,EAAAh3C,UAAAw4C,iBAAA,WACAj6C,KAAAg5C,uBAGAP,EAAAh3C,UAAAy4C,6BAAA,WACAL,EAAAM,cACAn6C,KAAAg5C,wBAIAP,EAAAh3C,UAAA24C,gBAAA,WACA,MAAAp6C,MAAA24C,aAAA34C,KAAA+4C,oBAIAN,EAAAh3C,UAAA44C,WAAA,SAAAp6C,EAAAq6C,GACAA,GACA3C,EAAA4C,OAAAtI,MAAA,UAAAhyC,YAAAyL,OAAAzL,EAAA2b,MAAA3b,GACA,MACA03C,EAAA6C,KAAA,IAEAx6C,KAAAy6C,WAAAx6C,IAIAw4C,EAAAh3C,UAAAg5C,WAAA,SAAAnB,EAAA1rC,GAKA,GAJA,IAAA7C,UAAA/H,SACA4K,EAAA0rC,EACAA,EAAA,WAA0B,KAAA1rC,KAE1B,mBAAAZ,YACAA,WAAA,WACAssC,EAAA1rC,IACS,OACJ,KACL5N,KAAAm5C,UAAA,WACAG,EAAA1rC,KAEK,MAAA3N,GACL,SAAAyL,OAAA,oEAmBAmuC,EAAAM,aAKA1B,EAAAh3C,UAAAi5C,YAAA,SAAApB,EAAAC,EAAA3rC,GACA5N,KAAAg5C,mBACAK,EAAA74C,KAAAR,KAAAs5C,EAAAC,EAAA3rC,GAEA5N,KAAAm5C,UAAA,WACAnsC,WAAA,WACAssC,EAAA94C,KAAA+4C,EAAA3rC,IACiB,QAKjB6qC,EAAAh3C,UAAAk5C,OAAA,SAAArB,EAAAC,EAAA3rC,GACA5N,KAAAg5C,mBACAS,EAAAj5C,KAAAR,KAAAs5C,EAAAC,EAAA3rC,GAEA5N,KAAAm5C,UAAA,WACAG,EAAA94C,KAAA+4C,EAAA3rC,MAKA6qC,EAAAh3C,UAAAm5C,eAAA,SAAAxC,GACAp4C,KAAAg5C,mBACAU,EAAAl5C,KAAAR,KAAAo4C,GAEAp4C,KAAAm5C,UAAA,WACAf,EAAAyC,uBA/BApC,EAAAh3C,UAAAi5C,YAAArB,EACAZ,EAAAh3C,UAAAk5C,OAAAlB,EACAhB,EAAAh3C,UAAAm5C,eAAAlB,GAmCAjB,EAAAh3C,UAAAq5C,YAAA,SAAAC,GACA,KAAAA,EAAA/3C,SAAA,IACA,GAAAs2C,GAAAyB,EAAA1O,OACA,sBAAAiN,GAAA,CAIA,GAAAC,GAAAwB,EAAA1O,QACAz+B,EAAAmtC,EAAA1O,OACAiN,GAAA94C,KAAA+4C,EAAA3rC,OALA0rC,GAAAuB,oBASApC,EAAAh3C,UAAAy3C,aAAA,WACAl5C,KAAA86C,YAAA96C,KAAA84C,cACA94C,KAAA0hB,SACA1hB,KAAA+4C,sBACA/4C,KAAA86C,YAAA96C,KAAA44C,aAGAH,EAAAh3C,UAAA+3C,WAAA,WACAx5C,KAAA24C,cACA34C,KAAA24C,eACA34C,KAAAm5C,UAAAn5C,KAAAi5C,eAIAR,EAAAh3C,UAAAigB,OAAA,WACA1hB,KAAA24C,gBAGAh5C,EAAAD,QAAA+4C,EACA94C,EAAAD,QAAAk6C,mBAEGoB,UAAA,GAAAC,aAAA,GAAAC,SAAA,KAAyCC,GAAA,SAAArD,EAAAn4C,EAAAD,GAC5C,YACAC,GAAAD,QAAA,SAAAs4C,EAAAoD,EAAAC,EAAAh/B,GACA,GAAAi/B,MACAC,EAAA,SAAA9mB,EAAAx0B,GACAD,KAAAw7C,QAAAv7C,IAGAw7C,EAAA,SAAAx7C,EAAAizC,GACAA,EAAAwI,0BACAxI,EAAAyI,eAAAC,MAAAL,IAAA,KAAAv7C,KAAAC,IAGA47C,EAAA,SAAAvtC,EAAA4kC,GACA,aAAAlzC,KAAA87C,YACA97C,KAAA+7C,iBAAA7I,EAAA8I,SAIAC,EAAA,SAAAh8C,EAAAizC,GACAA,EAAAwI,wBAAA17C,KAAAw7C,QAAAv7C,GAGA+3C,GAAAv2C,UAAA4L,KAAA,SAAAiB,GACAgtC,IACAA,KACAtD,EAAAv2C,UAAAy6C,eAAA7/B,EAAA8/B,wBACAnE,EAAAv2C,UAAA26C,YAAA//B,EAAAggC,qBAEA,IAAAC,GAAAjB,EAAA/sC,GACA3B,EAAA,GAAAqrC,GAAAoD,EACAzuC,GAAAuvC,eAAAl8C,KAAA,EACA,IAAAg8C,GAAAh8C,KAAAu8C,SAEA,IADA5vC,EAAA6vC,YAAAF,GACAA,YAAAtE,GAAA,CACA,GAAA9E,IACAwI,0BACAtD,QAAAzrC,EACAqvC,SACAL,eAAAW,EAEAN,GAAAJ,MAAAR,EAAAK,SAAA9uC,EAAAumC,GACAoJ,EAAAV,MACAC,EAAAI,SAAAtvC,EAAAumC,GACAvmC,EAAA8vC,aAAAH,OAEA3vC,GAAAovC,iBAAAC,EAEA,OAAArvC,IAGAqrC,EAAAv2C,UAAA+6C,YAAA,SAAAzzC,YACAA,GACA/I,KAAA87C,UAAA,QAAA97C,KAAA87C,UACA97C,KAAA08C,SAAA3zC,GAEA/I,KAAA87C,WAAA,QAAA97C,KAAA87C,WAIA9D,EAAAv2C,UAAAk7C,SAAA,WACA,yBAAA38C,KAAA87C,YAGA9D,EAAA3qC,KAAA,SAAAiB,EAAAlD,GACA,MAAA4sC,GAAA4E,QAAAxxC,GAAAiC,KAAAiB,UAIIuuC,GAAA,SAAA/E,EAAAn4C,EAAAD,GACJ,YACA,IAAAo9C,EACA,oBAAA9E,WAAA8E,EAAA9E,QAMA,IAAA+E,GAAAjF,EAAA,cACAiF,GAAAC,WANA,WACA,IAAShF,UAAA+E,IAAA/E,QAAA8E,GACT,MAAA78C,IACA,MAAA88C,IAIAp9C,EAAAD,QAAAq9C,IAEGE,YAAA,KAAeC,GAAA,SAAApF,EAAAn4C,EAAAD,GAClB,YACA,IAAAy9C,GAAAp8C,OAAAkqC,MACA,IAAAkS,EAAA,CACA,GAAAC,GAAAD,EAAA,MACAE,EAAAF,EAAA,KACAC,GAAA,SAAAC,EAAA,WAGA19C,EAAAD,QAAA,SAAAs4C,GA4DA,QAAAsF,GAAAv0C,EAAAw0C,GACA,GAAAjE,EAEA,IADA,MAAAvwC,IAAAuwC,EAAAvwC,EAAAw0C,IACA,kBAAAjE,GAAA,CACA,GAAAr9B,GAAA,UAAA49B,EAAA2D,YAAAz0C,GAAA,mBACA8wC,EAAAhsC,SAAA0vC,GAAA,GACA,UAAAvF,GAAAvpC,UAAAwN,GAEA,MAAAq9B,GAGA,QAAAmE,GAAA10C,GAGA,MADAu0C,GAAAv0C,EADA/I,KAAA6mB,OAEA5b,MAAAlC,EAAA/I,MAiBA,QAAA09C,GAAA30C,GACA,MAAAA,GAAA/I,MAEA,QAAA29C,GAAA50C,GACA,GAAA8C,IAAA7L,IAEA,OADA6L,GAAA,IAAAA,EAAAqC,KAAA0mC,IAAA,EAAA/oC,EAAA9C,EAAA/F,SACA+F,EAAA8C,GAhGA,GAKA+xC,GALA/D,EAAA/B,EAAA,UACA+F,EAAAhE,EAAAgE,WACAhE,GAAAiE,aAyEA9F,EAAAv2C,UAAAjB,KAAA,SAAA+8C,GACA,GAAA1yC,MAAAP,MAAA9J,KAAAuK,UAAA,EAWA,OADAF,GAAAhI,KAAA06C,GACAv9C,KAAA47C,MAAA6B,aAAAM,GAAAlzC,WAWAmtC,EAAAv2C,UAAAN,IAAA,SAAA68C,GACA,GACAn9C,EACA,IAFA,gBAAAm9C,GAUAn9C,EAAA88C,MAPA,IAAAE,EAAA,CACA,GAAAI,GAAAL,EAAAI,EACAn9C,GAAA,OAAAo9C,IAAAP,MAEA78C,GAAA68C,CAKA,OAAA19C,MAAA47C,MAAA/6C,aAAAk9C,GAAAC,cAIG9C,SAAA,KAAYgD,GAAA,SAAApG,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QAAA,SAAAs4C,EAAAmG,EAAAC,EAAA/hC,GACA,GAAAw9B,GAAA/B,EAAA,UACAuG,EAAAxE,EAAAwE,SACAC,EAAAzE,EAAAyE,SACAjkC,EAAA29B,EAAAuG,MAEAvG,GAAAv2C,UAAA+8C,MAAAxG,EAAAv2C,UAAAg9C,OAAA,WACA,IAAApiC,EAAAqiC,eAAA,MAAA1+C,MAAA2+C,MAAA,2BAIA,KAFA,GAAAvG,GAAAp4C,KACA0c,EAAA07B,EACAA,EAAAwG,kBAAA,CACA,IAAAxG,EAAAyG,UAAAniC,GAAA,CACAA,EAAAoiC,eACApiC,EAAAqiC,YAAAN,SAEA/hC,EAAAsiC,iBAEA,OAGA,GAAAC,GAAA7G,EAAA8G,mBACA,UAAAD,MAAAL,iBAAA,CACAxG,EAAA0G,eACA1G,EAAA2G,YAAAN,SAEArG,EAAA4G,iBAEA,OAEA5G,EAAA0G,gBAAA1G,EAAA2G,YAAAN,SACArG,EAAA+G,sBACAziC,EAAA07B,EACAA,EAAA6G,IAKAjH,EAAAv2C,UAAA29C,oBAAA,WACAp/C,KAAAq/C,8BAGArH,EAAAv2C,UAAA69C,6BAAA,WACA,gBAAAt/C,KAAAq/C,4BACAr/C,KAAAq/C,4BAAA,GAGArH,EAAAv2C,UAAAo9C,UAAA,SAAAU,GACA,MAAAA,KAAAv/C,MACAA,KAAAq/C,2BAAA,EACAr/C,KAAAw/C,uBAGAx/C,KAAAo/C,wBACAp/C,KAAAs/C,iCACAt/C,KAAAw/C,wBAOAxH,EAAAv2C,UAAAu9C,gBAAA,WACAh/C,KAAAs/C,gCACAt/C,KAAAy/C,WAIAzH,EAAAv2C,UAAAg+C,QAAA,WACAz/C,KAAA4+C,mBACA5+C,KAAA0/C,gBACArlC,EAAAsgC,OAAA36C,KAAA2/C,gBAAA3/C,eAGAg4C,EAAAv2C,UAAAk+C,gBAAA,WACA3/C,KAAA4/C,UAAA,GAAA5/C,KAAA66C,mBAGA7C,EAAAv2C,UAAAo+C,eAAA,WACA7/C,KAAA8/C,uBAGA9H,EAAAv2C,UAAAm9C,eAAA,WACA,MAAA5+C,MAAA+/C,cAAA//C,KAAAggD,gBAGAhI,EAAAv2C,UAAAw+C,cAAA,WACA,MAAAjgD,MAAA+/C,cAAA//C,KAAAkgD,eAGAlI,EAAAv2C,UAAA0+C,kBAAA,SAAAC,EAAAC,GACA,GAAAxG,EAAAlsC,QAAAyyC,GACA,OAAA//C,GAAA,EAAuBA,EAAA+/C,EAAAp9C,SAA6B3C,EACpDL,KAAAmgD,kBAAAC,EAAA//C,GAAAggD,OAEK,aAAAD,EACL,qBAAAA,IACA,IAAAC,EAAA,CACA,GAAApgD,GAAAo+C,EAAA+B,GAAA5/C,KAAAR,KAAAo8C,cACAn8C,KAAAq+C,IACAt+C,KAAAsgD,kBAAArgD,KACAoa,EAAAogC,WAAAx6C,WAIAmgD,GAAAG,iBAAAvgD,OAKAg4C,EAAAv2C,UAAA+9C,gBAAA,WACA,GAAAY,GAAApgD,KAAAwgD,WACAxgD,MAAA6/C,iBACAxlC,EAAAsgC,OAAA36C,KAAAmgD,kBAAAngD,KAAAogD,IAGApI,EAAAv2C,UAAAg/C,wBAAA,WACAzgD,KAAA4+C,mBACA5+C,KAAAmgD,kBAAAngD,KAAAwgD,gBACAxgD,KAAA6/C,mBAIA7H,EAAAv2C,UAAA8+C,iBAAA,WACAvgD,KAAAy+C,aAKGvD,SAAA,KAAYwF,GAAA,SAAA5I,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QAAA,SAAAihD,GACA,GAAA9G,GAAA/B,EAAA,UACA8I,EAAA9I,EAAA,SAAA/f,KACAsmB,EAAAxE,EAAAwE,SACAC,EAAAzE,EAAAyE,QAmCA,OAjCA,UAAA/pB,EAAAssB,EAAAzI,GACA,gBAAAn4C,GACA,GAAA6gD,GAAA1I,EAAAgE,aACA2E,GAAA,OAAA1gD,GAAA,EAAsCA,EAAAk0B,EAAAvxB,SAAsB3C,EAAA,CAC5D,GAAAqxC,GAAAnd,EAAAl0B,EAEA,IAAAqxC,IAAAhmC,OACA,MAAAgmC,KAAAjwC,oBAAAiK,QACA,GAAAzL,YAAAyxC,GACA,MAAA2M,GAAAwC,GAAArgD,KAAAsgD,EAAA7gD,OAEa,sBAAAyxC,GAAA,CACb,GAAAsP,GAAA3C,EAAA3M,GAAAlxC,KAAAsgD,EAAA7gD,EACA,IAAA+gD,IAAA1C,EACA,MAAA0C,EACiB,IAAAA,EACjB,MAAA3C,GAAAwC,GAAArgD,KAAAsgD,EAAA7gD,OAEa,IAAA45C,EAAAjH,SAAA3yC,GAAA,CAEb,OADA83B,GAAA6oB,EAAAlP,GACA9nC,EAAA,EAA+BA,EAAAmuB,EAAA/0B,SAAiB4G,EAAA,CAChD,GAAA6G,GAAAsnB,EAAAnuB,EACA,IAAA8nC,EAAAjhC,IAAAxQ,EAAAwQ,GACA,QAAAswC,GAGA,MAAA1C,GAAAwC,GAAArgD,KAAAsgD,EAAA7gD,IAGA,MAAA0gD,QAOGM,QAAA,GAAA/F,SAAA,KAAuBgG,GAAA,SAAApJ,EAAAn4C,EAAAD,GAC1B,YACAC,GAAAD,QAAA,SAAAs4C,GASA,QAAAmJ,KACAnhD,KAAAohD,OAAA,GAAAD,GAAAE,cAAAC,KAuBA,QAAAA,KACA,GAAA93C,GAAA+3C,EAAAv+C,OAAA,CACA,IAAAwG,GAAA,EACA,MAAA+3C,GAAA/3C,GAnCA,GAAAg4C,MACAD,IAgEA,OA9DAvJ,GAAAv2C,UAAAggD,gBAAA,aACAzJ,EAAAv2C,UAAAigD,aAAA,aACA1J,EAAAv2C,UAAAkgD,YAAA,WAA4C,aAC5C3J,EAAA4J,aAAA5J,EAAAv2C,UAAAmgD,aAAA,aAKAT,EAAA1/C,UAAAigD,aAAA,oBACA1hD,KAAAohD,SACAphD,KAAAohD,OAAAK,gBAAA,KACAF,EAAA1+C,KAAA7C,KAAAohD,UAIAD,EAAA1/C,UAAAkgD,YAAA,WACA,YAAA3hD,KAAAohD,OAAA,CACA,GAAA/N,GAAAkO,EAAA16B,MACAla,EAAA0mC,EAAAoO,eAEA,OADApO,GAAAoO,gBAAA,KACA90C,EAEA,aAcAw0C,EAAAE,cAAA,KACAF,EAAAlW,OAZA,WACA,GAAAuW,EAAA,UAAAL,IAYAA,EAAAU,0BAAA,aACAV,EAAAW,wBAAA,WACA,GAAAC,GAAA/J,EAAAv2C,UAAAigD,aACAM,EAAAhK,EAAAv2C,UAAAkgD,YACAM,EAAAjK,EAAA4J,aACAM,EAAAlK,EAAAv2C,UAAAmgD,aACAO,EAAAnK,EAAAv2C,UAAAggD,eACAN,GAAAU,0BAAA,WACA7J,EAAAv2C,UAAAigD,aAAAK,EACA/J,EAAAv2C,UAAAkgD,YAAAK,EACAhK,EAAA4J,aAAAK,EACAjK,EAAAv2C,UAAAmgD,aAAAM,EACAlK,EAAAv2C,UAAAggD,gBAAAU,EACAX,MAEAA,KACAxJ,EAAAv2C,UAAAigD,aAAAP,EAAA1/C,UAAAigD,aACA1J,EAAAv2C,UAAAkgD,YAAAR,EAAA1/C,UAAAkgD,YACA3J,EAAA4J,aAAA5J,EAAAv2C,UAAAmgD,aAAAN,EACAtJ,EAAAv2C,UAAAggD,gBAAA,WACA,GAAAW,GAAApiD,KAAA4hD,cACAQ,IAAA,MAAAA,EAAAX,kBAAAW,EAAAX,gBAAAzhD,QAGAmhD,QAGIkB,GAAA,SAAAvK,EAAAn4C,EAAAD,GACJ,YACAC,GAAAD,QAAA,SAAAs4C,EAAAmJ,GA6MA,QAAAmB,GAAA1hD,EAAAw3C,GACA,OAAYA,WA0FZ,QAAAmK,KAA6B,SAuB7B,QAAAC,GAAAC,EAAA7F,EAAA8F,GACA,GAAAtK,GAAAp4C,IACA,KACAyiD,EAAA7F,EAAA8F,EAAA,SAAAC,GACA,qBAAAA,GACA,SAAAl0C,WAAA,qCACAorC,EAAAhsC,SAAA80C,GAEAvK,GAAAwK,4BAAAD,KAEK,MAAA1iD,GACL,MAAAA,IAIA,QAAA4iD,GAAAF,GACA,IAAA3iD,KAAA4+C,iBAAA,MAAA5+C,KAEA,IAAA8iD,GAAA9iD,KAAAwgD,qBACAsC,EACAjJ,EAAAlsC,QAAAm1C,GACAA,EAAAjgD,KAAA8/C,GAEA3iD,KAAAy8C,cAAAqG,EAAAH,IAGA3iD,KAAAy8C,aAAAkG,GAIA,QAAAI,KACA,MAAA/iD,MAAA8/C,eAGA,QAAAkD,GAAAL,GACA3iD,KAAA8/C,eAAA6C,EAGA,QAAAM,KACAjjD,KAAAk/C,2BACAl/C,KAAA8/C,sBAGA,QAAAoD,GAAAjE,EAAAkE,GACA,SAAAA,GAAA,CACAnjD,KAAAk/C,oBAAAD,CACA,IAAAmE,GAAAnE,EAAAI,oCACA+D,IACAA,EAAA,GAEAnE,EAAAI,2BAAA+D,EAAA,EAEA,MAAAD,IAAAlE,EAAAtC,YACA38C,KAAAw8C,YAAAyC,EAAAvC,UAWA,QAAAL,KACA,GAAA1vC,GAAA3M,KAAA08C,QACA,iBAAA/vC,GACAA,YAAAqrC,GACArrC,EAAA02C,cACA12C,EAAAvB,eAMAuB,EAGA,QAAA22C,KACAtjD,KAAAohD,OAAA,GAAAC,GAAArhD,KAAA4hD,gBAGA,QAAA2B,GAAAjnC,EAAAknC,GACA,GAAAC,EAAAnnC,GAAA,CACA,GAAA+2B,GAAArzC,KAAAohD,MAIA,aAHA/N,GACAmQ,IAAAnQ,IAAAqQ,kBAEArQ,EACAA,EAAAsQ,iBAAArnC,OACS,KAAAA,EAAAsnC,iBAAA,CACT,GAAAC,GAAAC,EAAAxnC,EACAu9B,GAAAkK,kBAAAznC,EAAA,QACAunC,EAAA5nC,QAAA,KAAA4nC,EAAAjoC,MAAAnR,KAAA,OACAovC,EAAAkK,kBAAAznC,EAAA,yBA2DA,QAAAlU,GAAA6T,EAAA+nC,EAAA5L,GACA,GAAApuC,EAAAi6C,SAAA,CACA,GACA7B,GADA8B,EAAA,GAAAC,GAAAloC,EAEA,IAAA+nC,EACA5L,EAAAkI,kBAAA4D,OACK,IAAAl6C,EAAAw3C,kBAAAY,EAAApK,EAAA4J,gBACLQ,EAAAuB,iBAAAO,OACK,CACL,GAAAL,GAAAC,EAAAI,EACAA,GAAAtoC,MAAAioC,EAAA5nC,QAAA,KAAA4nC,EAAAjoC,MAAAnR,KAAA,MAGA25C,EAAA,UAAAF,IACAG,EAAAH,EAAA,QAqDA,QAAAI,GAAA1oC,GAEA,OADAjP,MACAtM,EAAA,EAAmBA,EAAAub,EAAA5Y,SAAkB3C,EAAA,CACrC,GAAA2b,GAAAJ,EAAAvb,GACAkkD,EAAA,yBAAAvoC,GACAwoC,EAAAjgD,KAAAyX,GACAyoC,EAAAF,GAAAG,EAAA1oC,EACAuoC,KAAAE,IACAE,GAAA,MAAA3oC,EAAA3R,OAAA,KACA2R,EAAA,OAAAA,GAEArP,EAAA9J,KAAAmZ,IAGA,MAAArP,GAiBA,QAAAm3C,GAAAxnC,GACA,GAAAV,GAAAU,EAAAV,MACAK,EAAAK,EAAAzO,UAGA,OAFA+N,GAAA,gBAAAA,MAAA5Y,OAAA,EAjBA,SAAAsZ,GAEA,OADAV,GAAAU,EAAAV,MAAAxR,QAAA,YAAA5D,MAAA,MACAnG,EAAA,EAAmBA,EAAAub,EAAA5Y,SAAkB3C,EAAA,CACrC,GAAA2b,GAAAJ,EAAAvb,EACA,6BAAA2b,GAAAwoC,EAAAjgD,KAAAyX,GACA,MAMA,MAHA3b,GAAA,kBAAAic,EAAA1b,OACAgb,IAAAtR,MAAAjK,IAEAub,GAOAU,IAAA,yBAEAL,UACAL,MAAA,eAAAU,EAAA1b,KAAAgb,EAAA0oC,EAAA1oC,IAIA,QAAAyoC,GAAA/nC,EAAAsoC,EAAAC,GACA,sBAAA/+C,SAAA,CACA,GAAAmW,EACA,IAAA49B,EAAAjH,SAAAt2B,GAAA,CACA,GAAAV,GAAAU,EAAAV,KACAK,GAAA2oC,EAAAE,EAAAlpC,EAAAU,OAEAL,GAAA2oC,EAAAl1C,OAAA4M,EAEA,mBAAAyoC,GACAA,EAAA9oC,EAAA4oC,GACS,kBAAA/+C,SAAAhC,KACT,gBAAAgC,SAAAhC,KACAgC,QAAAhC,IAAAmY,IAKA,QAAA+oC,GAAApkD,EAAAqkD,EAAAn/B,EAAAsyB,GACA,GAAA8M,KACA,KACA,kBAAAD,KACAC,KACA,qBAAAtkD,EACAqkD,EAAA7M,GAEA6M,EAAAn/B,EAAAsyB,IAGK,MAAAn4C,GACLoa,EAAAogC,WAAAx6C,GAGA,uBAAAW,EACAwjD,EAAAxjD,EAAAklB,EAAAsyB,IAAA8M,GACAb,EAAAv+B,EAAA,wBAGAs+B,EAAAxjD,EAAAw3C,GAIA,QAAA+M,GAAAp8C,GACA,GAAAqI,EACA,sBAAArI,GACAqI,EAAA,cACArI,EAAAnI,MAAA,aACA,QACK,CAIL,GAHAwQ,EAAArI,GAAA,kBAAAA,GAAA8E,SACA9E,EAAA8E,WAAAgsC,EAAAhsC,SAAA9E,GACA,4BACAxE,KAAA6M,GACA,IAEAA,EADAmS,KAAAkK,UAAA1kB,GAGA,MAAA9I,IAIA,IAAAmR,EAAApO,SACAoO,EAAA,iBAGA,WAGA,SAAAA,GAEA,MAAAA,GAAApO,OADA,GAEAoO,EAEAA,EAAA2Z,OAAA,EAAAq6B,IAAA,OARAh0C,GAAA,qBAWA,QAAAi0C,KACA,wBAAAC,GAKA,QAAAC,GAAAvpC,GACA,GAAAmN,GAAAnN,EAAArY,MAAA6hD,EACA,IAAAr8B,EACA,OACAjN,SAAAiN,EAAA,GACAnN,KAAAnY,SAAAslB,EAAA,QA+CA,QAAAk4B,GAAApC,GACAj/C,KAAA0jD,QAAAzE,EACAj/C,KAAAylD,iBAAA,CACA,IAAAziD,GAAAhD,KAAA4/C,QAAA,YAAAX,EAAA,EAAAA,EAAAW,QACA0F,GAAAtlD,KAAAqhD,GACAr+C,EAAA,IAAAhD,KAAA0lD,UA/sBA,GAKAC,GACAC,EAQAb,EAdAc,EAAA7N,EAAA8N,WACAzrC,EAAA29B,EAAAuG,OACA4F,EAAArM,EAAA,YAAAqM,QACAtK,EAAA/B,EAAA,UACA2L,EAAA5J,EAAA4J,eAGAsC,EACA,2DACAC,EAAA,6BACAC,EAAA,kCACAzB,EAAA,KACAM,EAAA,KACAH,KAEAuB,IAAA,GAAArM,EAAAsM,IAAA,mBAKAlC,IAAA,GAAApK,EAAAsM,IAAA,uBACAD,IAAArM,EAAAsM,IAAA,sBAEA3E,IAAA,GAAA3H,EAAAsM,IAAA,gCACAD,IAAArM,EAAAsM,IAAA,+BAEAC,EAAA,GAAAvM,EAAAsM,IAAA,iCACAlC,KAAApK,EAAAsM,IAAA,+BAEAnO,GAAAv2C,UAAA4kD,4BAAA,WACA,GAAArK,GAAAh8C,KAAAu8C,SACAP,GAAAF,WAAA,QAAAE,EAAAF,UACA,QAGA9D,EAAAv2C,UAAA6kD,gCAAA,WACA,cAAAtmD,KAAA87C,WAAA,CACA97C,KAAAumD,0BACA,IAAAxmD,GAAAC,IACAgN,YAAA,WACAjN,EAAAymD,6BACK,KAGLxO,EAAAv2C,UAAAglD,mCAAA,WACAzB,EAAA,mBACAW,SAAA3lD,OAGAg4C,EAAAv2C,UAAAilD,yBAAA,WACA1mD,KAAA87C,UAAA,UAAA97C,KAAA87C,WAGA9D,EAAAv2C,UAAAklD,sBAAA,WACA,qBAAA3mD,KAAA87C,YAGA9D,EAAAv2C,UAAA+kD,0BAAA,WACA,GAAAxmD,KAAA4mD,wBAAA,CACA,GAAA9gC,GAAA9lB,KAAA6mD,eACA7mD,MAAA8mD,mCACA9B,EAAA,qBACAY,EAAA9/B,EAAA9lB,QAIAg4C,EAAAv2C,UAAAqlD,iCAAA,WACA9mD,KAAA87C,UAAA,OAAA97C,KAAA87C,WAGA9D,EAAAv2C,UAAAslD,mCAAA,WACA/mD,KAAA87C,WAAA,OAAA97C,KAAA87C,WAGA9D,EAAAv2C,UAAAulD,8BAAA,WACA,cAAAhnD,KAAA87C,WAAA,GAGA9D,EAAAv2C,UAAA8kD,yBAAA,WACAvmD,KAAA87C,UAAA,QAAA97C,KAAA87C,WAGA9D,EAAAv2C,UAAAwlD,2BAAA,WACAjnD,KAAA87C,WAAA,QAAA97C,KAAA87C,UACA97C,KAAAgnD,kCACAhnD,KAAA+mD,qCACA/mD,KAAAymD,uCAIAzO,EAAAv2C,UAAAmlD,sBAAA,WACA,eAAA5mD,KAAA87C,WAAA,GAGA9D,EAAAv2C,UAAAk9C,MAAA,SAAA1iC,EAAA+nC,EAAA5L,GACA,MAAAhwC,GAAA6T,EAAA+nC,EAAA5L,GAAAp4C,OAGAg4C,EAAAkP,6BAAA,SAAA5N,GACA,GAAAnmC,GAAA0yC,GACAD,GACA,kBAAAtM,GAAA,OAAAnmC,EACAmmC,EAAAO,EAAAsN,WAAAh0C,EAAAmmC,WAIAtB,EAAAoP,4BAAA,SAAA9N,GACA,GAAAnmC,GAAA0yC,GACAF,GACA,kBAAArM,GAAA,OAAAnmC,EACAmmC,EAAAO,EAAAsN,WAAAh0C,EAAAmmC,UAIA,IAAA+N,GAAA,YACArP,GAAAwJ,gBAAA,WACA,GAAAnnC,EAAA+/B,oBAAApwC,EAAAw3C,gBACA,SAAA91C,OAAA,qGAEA,KAAA1B,EAAAw3C,iBAAA6D,IAAA,CACA,GAAAiC,GAAAtP,EAAAv2C,UAAA8lD,mBACAC,EAAAxP,EAAAv2C,UAAA6+C,iBACAt2C,GAAAw3C,mBACA6F,EAAA,WACA,GAAAhtC,EAAA+/B,oBAAApwC,EAAAw3C,gBACA,SAAA91C,OAAA,qGAEAssC,GAAAv2C,UAAA8lD,mBAAAD,EACAtP,EAAAv2C,UAAA6+C,kBAAAkH,EACArG,EAAAU,4BACAxnC,EAAA4/B,mBACAjwC,EAAAw3C,oBAEAxJ,EAAAv2C,UAAA8lD,mBAAAjE,EACAtL,EAAAv2C,UAAA6+C,kBAAAiD,EACApC,EAAAW,0BACAznC,EAAA6/B,iCAIAlC,EAAAyP,mBAAA,WACA,MAAAz9C,GAAAw3C,iBAAA6D,IAGA,IAAAqC,GAAA,WACA,IACA,qBAAAC,aAAA,CACA,GAAAx1B,GAAA,GAAAw1B,aAAA,cAEA,OADA9N,GAAAjC,OAAAgQ,cAAAz1B,GACA,SAAAvxB,EAAAuxB,GACA,GAAA01B,GAAA,GAAAF,aAAA/mD,EAAAma,eACA+sC,OAAA31B,EACA41B,eAEA,QAAAlO,EAAAjC,OAAAgQ,cAAAC,IAES,wBAAAG,QACT71B,EAAA,GAAA61B,OAAA,eACAnO,EAAAjC,OAAAgQ,cAAAz1B,GACA,SAAAvxB,EAAAuxB,GACA,GAAA01B,GAAA,GAAAG,OAAApnD,EAAAma,eACAgtC,eAGA,OADAF,GAAAC,OAAA31B,GACA0nB,EAAAjC,OAAAgQ,cAAAC,OAGA11B,EAAA5e,SAAA00C,YAAA,gBACAC,gBAAA,4BACArO,EAAAjC,OAAAgQ,cAAAz1B,GACA,SAAAvxB,EAAAuxB,GACA,GAAA01B,GAAAt0C,SAAA00C,YAAA,cAGA,OAFAJ,GAAAK,gBAAAtnD,EAAAma,kBAAA,EACAoX,IACA0nB,EAAAjC,OAAAgQ,cAAAC,KAGK,MAAA5nD,IACL,kBACA,aAIAkoD,EACAtO,EAAAS,OACA,WACA,MAAA3C,GAAAhhB,KAAA1rB,MAAA0sC,EAAA5sC,YAGA8uC,EAAAjC,OAKA,SAAAh3C,GACA,GAAA28C,GAAA,KAAA38C,EAAAma,cACAqtC,EAAAvO,EAAAjC,OAAA2F,EACA,SAAA6K,IACAA,EAAAn9C,MAAA4uC,EAAAjC,UAAAttC,MAAA9J,KAAAuK,UAAA,SARA,WACA,UAiBAs9C,GACAC,eAAAhG,EACAiG,iBAAAjG,EACAkG,gBAAAlG,EACAmG,gBAAAnG,EACAoG,iBAAApG,EACAqG,eAAA,SAAA/nD,EAAAw3C,EAAA17B,GACA,OAAgB07B,UAAA17B,UAEhBwnC,QAAA,SAAAtjD,EAAAsjD,GACA,OAAgBA,YAEhB0E,mBAAA,SAAAhoD,EAAAklB,EAAAsyB,GACA,OAAgBtyB,SAAAsyB,YAEhByQ,iBAAAvG,GAGA8B,EAAA,SAAAxjD,GACA,GAAAkoD,KACA,KACAA,EAAAX,EAAAl9C,MAAA,KAAAF,WACK,MAAA9K,GACLoa,EAAAogC,WAAAx6C,GACA6oD,KAGA,GAAAC,KACA,KACAA,EAAArB,EAAA9mD,EACAynD,EAAAznD,GAAAqK,MAAA,KAAAF,YACK,MAAA9K,GACLoa,EAAAogC,WAAAx6C,GACA8oD,KAGA,MAAAA,IAAAD,EAGA9Q,GAAAhuC,OAAA,SAAAg/C,GASA,GAPA,oBADAA,EAAAjoD,OAAAioD,MAEAA,EAAAxH,gBACAxJ,EAAAwJ,mBACSwH,EAAAxH,iBAAAxJ,EAAAyP,sBACTJ,KAGA,YAAA2B,GAAA,CACA,GAAAC,GAAAD,EAAA/E,QACAj6C,GAAAi6C,WAAAgF,EACA7C,EAAAp8C,EAAAi6C,SAEApK,EAAAjH,SAAAqW,IACA,oBAAAA,KACA7C,IAAA6C,EAAA7C,kBAIA,mBAAA4C,MAAAtK,eAAA10C,EAAA00C,aAAA,CACA,GAAArkC,EAAA+/B,kBACA,SAAA1uC,OACA,uDAEAssC,GAAAv2C,UAAAynD,uBACAjG,EACAjL,EAAAv2C,UAAAy6C,eAAAgH,EACAlL,EAAAv2C,UAAA++C,UAAAuC,EACA/K,EAAAv2C,UAAAg7C,aAAAuG,EACAhL,EAAAv2C,UAAAmhD,4BACAC,EACA7K,EAAAv2C,UAAA0nD,SAAA3G,EACArG,EAAA+G,EACAl5C,EAAA00C,gBAWA,MATA,cAAAsK,KACAA,EAAAI,aAAAp/C,EAAAo/C,YACAp/C,EAAAo/C,cACApR,EAAAv2C,UAAA4nD,WAAAjF,IACS4E,EAAAI,YAAAp/C,EAAAo/C,aACTp/C,EAAAo/C,cACApR,EAAAv2C,UAAA4nD,WAAA9G,IAGAvK,GAKAA,EAAAv2C,UAAA4nD,WAAA9G,EACAvK,EAAAv2C,UAAA0nD,SAAA,SAAA1G,EAAA7F,EAAA8F,GACA,IACAD,EAAA7F,EAAA8F,GACK,MAAAziD,GACL,MAAAA,KAGA+3C,EAAAv2C,UAAA++C,UAAA,aACAxI,EAAAv2C,UAAAg7C,aAAA,SAAA1gC,KACAi8B,EAAAv2C,UAAAmhD,4BAAA,SAAAD,KAGA3K,EAAAv2C,UAAA8lD,mBAAA,aACAvP,EAAAv2C,UAAA6+C,kBAAA,aACAtI,EAAAv2C,UAAAynD,uBAAA,aACAlR,EAAAv2C,UAAAy6C,eAAA,SAAA+C,EAAAkE,IAmEA,IAAAhH,GALA,SAAA8C,EAAAkE,GACA,MAAAA,IAAAlE,EAAAtC,YACA38C,KAAAw8C,YAAAyC,EAAAvC,WA2RAgI,EAAA,WAA+B,UAC/Bc,EAAA,uCA4DA3L,GAAAyP,SAAAjI,EAAA31C,OACAy1C,EAAAE,gBAEAA,EAAA5/C,UAAAikD,QAAA,WACA,GAAA1iD,GAAAhD,KAAA4/C,OACA,MAAA58C,EAAA,IAIA,OAHAumD,MACAC,KAEAnpD,EAAA,EAAAmZ,EAAAxZ,cAAgCwZ,IAAoBnZ,EACpDkpD,EAAA1mD,KAAA2W,GACAA,IAAAkqC,OAGA,KAAArjD,GADA2C,EAAAhD,KAAA4/C,QAAAv/C,GACA,EAA4BA,GAAA,IAAQA,EAAA,CACpC,GAAAub,GAAA2tC,EAAAlpD,GAAAub,eACA4tC,EAAA5tC,KACA4tC,EAAA5tC,GAAAvb,GAGA,IAAAA,EAAA,EAAmBA,EAAA2C,IAAY3C,EAAA,CAC/B,GACAwL,GAAA29C,EADAD,EAAAlpD,GAAAub,MAEA,aAAA/P,OAAAxL,EAAA,CACAwL,EAAA,IACA09C,EAAA19C,EAAA,GAAA63C,eACA6F,EAAA19C,EAAA,GAAA+zC,QAAA,GAEA2J,EAAAlpD,GAAAqjD,eACA6F,EAAAlpD,GAAAu/C,QAAA,CACA,IAAA6J,GAAAppD,EAAA,EAAAkpD,EAAAlpD,EAAA,GAAAL,IAEA6L,GAAA7I,EAAA,GACAymD,EAAA/F,QAAA6F,EAAA19C,EAAA,GACA49C,EAAA/F,QAAAgC,UACA+D,EAAA7J,QACA6J,EAAA/F,QAAA9D,QAAA,IAEA6J,EAAA/F,eACA+F,EAAA7J,QAAA,EAGA,QADA8J,GAAAD,EAAA7J,QAAA,EACAh2C,EAAAvJ,EAAA,EAA+BuJ,GAAA,IAAQA,EACvC2/C,EAAA3/C,GAAAg2C,QAAA8J,EACAA,GAEA,YAKArI,EAAA5/C,UAAAkiD,iBAAA,SAAArnC,GACA,IAAAA,EAAAsnC,iBAAA,CACA5jD,KAAA0lD,SAMA,KALA,GAAA7B,GAAAC,EAAAxnC,GACAL,EAAA4nC,EAAA5nC,QACA0tC,GAAA9F,EAAAjoC,OAEAy3B,EAAArzC,cACAqzC,GACAsW,EAAA9mD,KAAAyhD,EAAAjR,EAAAz3B,MAAApV,MAAA,QACA6sC,IAAAqQ,SAhRA,SAAAiG,GAEA,OADAC,GAAAD,EAAA,GACAtpD,EAAA,EAAmBA,EAAAspD,EAAA3mD,SAAmB3C,EAAA,CAMtC,OALA05C,GAAA4P,EAAAtpD,GACAwpD,EAAAD,EAAA5mD,OAAA,EACA8mD,EAAAF,EAAAC,GACAE,GAAA,EAEAngD,EAAAmwC,EAAA/2C,OAAA,EAAqC4G,GAAA,IAAQA,EAC7C,GAAAmwC,EAAAnwC,KAAAkgD,EAAA,CACAC,EAAAngD,CACA,OAIA,IAAAA,EAAAmgD,EAAyCngD,GAAA,IAAQA,EAAA,CACjD,GAAAoS,GAAA+9B,EAAAnwC,EACA,IAAAggD,EAAAC,KAAA7tC,EAIA,KAHA4tC,GAAA/iC,MACAgjC,IAKAD,EAAA7P,IA0PA4P,GA5RA,SAAAA,GACA,OAAAtpD,GAAA,EAAmBA,EAAAspD,EAAA3mD,SAAmB3C,GACtC,IAAAspD,EAAAtpD,GAAA2C,QACA3C,EAAA,EAAAspD,EAAA3mD,QAAA2mD,EAAAtpD,GAAA,KAAAspD,EAAAtpD,EAAA,SACAspD,EAAAn/C,OAAAnK,EAAA,GACAA,MAwRAspD,GACA9P,EAAAkK,kBAAAznC,EAAA,QAzSA,SAAAL,EAAA0tC,GACA,OAAAtpD,GAAA,EAAmBA,EAAAspD,EAAA3mD,OAAA,IAAuB3C,EAC1CspD,EAAAtpD,GAAAwC,KAAA,wBACA8mD,EAAAtpD,GAAAspD,EAAAtpD,GAAAoK,KAAA,KAKA,OAHApK,GAAAspD,EAAA3mD,SACA2mD,EAAAtpD,GAAAspD,EAAAtpD,GAAAoK,KAAA,OAEAwR,EAAA,KAAA0tC,EAAAl/C,KAAA,OAiSAwR,EAAA0tC,IACA9P,EAAAkK,kBAAAznC,EAAA,wBAGA,IAAAgpC,GAAA,WACA,GAAA0E,GAAA,YACAC,EAAA,SAAAruC,EAAAU,GACA,sBAAAV,cAEAU,EAAA1b,eACA0b,EAAAL,QACAK,EAAAzO,WAEAs3C,EAAA7oC,GAGA,oBAAA5Q,OAAAw+C,iBACA,kBAAAx+C,OAAA45C,kBAAA,CACA55C,MAAAw+C,iBAAA,EACA1F,EAAAwF,EACAlF,EAAAmF,CACA,IAAA3E,GAAA55C,MAAA45C,iBAKA,OAHAZ,GAAA,SAAA1oC,GACA,MAAA+pC,GAAAxhD,KAAAyX,IAEA,SAAAu9B,EAAA4Q,GACAz+C,MAAAw+C,iBAAA,EACA5E,EAAA/L,EAAA4Q,GACAz+C,MAAAw+C,iBAAA,GAGA,GAAA1jC,GAAA,GAAA9a,MAEA,oBAAA8a,GAAA5K,OACA4K,EAAA5K,MAAApV,MAAA,SAAAzB,QAAA,sBAIA,MAHAy/C,GAAA,IACAM,EAAAmF,EACAtF,KACA,SAAA7jD,GACAA,EAAA8a,UAAAlQ,QAAAkQ,MAIA,IAAAwuC,EACA,KAAS,SAAA1+C,OACT,MAAAzL,GACAmqD,EAAA,SAAAnqD,GAEA,eAAAumB,KAAA4jC,GACA,gBAAA1+C,OAAAw+C,iBAWApF,EAAA,SAAAlpC,EAAAU,GACA,sBAAAV,KAEA,gBAAAU,IACA,kBAAAA,aACAA,EAAA1b,eACA0b,EAAAL,QAGAkpC,EAAA7oC,GAFAA,EAAAzO,YAKA,OAtBA22C,EAAAwF,EACAlF,EAAAmF,EACA,SAAAnpD,GACA4K,MAAAw+C,iBAAA,CACA,KAAiB,SAAAx+C,OACjB,MAAAzL,GAAsBa,EAAA8a,MAAA3b,EAAA2b,MACtBlQ,MAAAw+C,iBAAA,MAoBA,oBAAApkD,2BAAAsC,OACA28C,EAAA,SAAA9oC,GACAnW,QAAAsC,KAAA6T,IAEA49B,EAAAS,QAAA3C,EAAA4C,OAAA8P,MACAtF,EAAA,SAAA9oC,EAAA4oC,GACA,GAAAyF,GAAAzF,EAAA,eACA/+C,SAAAsC,KAAAkiD,EAAAruC,EAAA,WAEK49B,EAAAS,QAAA,oBAAA5uC,QAAAkQ,QACLmpC,EAAA,SAAA9oC,EAAA4oC,GACA/+C,QAAAsC,KAAA,KAAA6T,EACA4oC,EAAA,oCAKA,IAAA76C,IACAi6C,WACAzC,mBACA9C,gBACA0K,cAKA,OAFA5H,IAAAxJ,EAAAwJ,mBAGAA,gBAAA,WACA,MAAAx3C,GAAAw3C,iBAEAyC,SAAA,WACA,MAAAj6C,GAAAi6C,UAEAvF,aAAA,WACA,MAAA10C,GAAA00C,cAEA0K,WAAA,WACA,MAAAp/C,GAAAo/C,YAEAjN,sBAAA,WACA,MAAAA,IAEAE,mBAAA,WACA,MAAAA,IAEAkO,sBA3eA,SAAAC,EAAAlC,EAAA1nD,EAAAw3C,EACA6G,GACA,YAAAuL,GAAA,OAAAlC,GACAlC,EAAA,CACA,YAAAnH,KAAA0H,wBAAA,MACA,cAAAvO,EAAA0D,WAAA,MAEAl7C,QAAA,IACA,IAAA6pD,GAAA,GACAC,EAAA,EACA,IAAApC,EAAAlH,OAAA,CAGA,OAFAuJ,GAAArC,EAAAlH,OAAAxlC,MAAApV,MAAA,MACAoV,EAAA0oC,EAAAqG,GACAtqD,EAAAub,EAAA5Y,OAAA,EAA0C3C,GAAA,IAAQA,EAAA,CAClD,GAAA2b,GAAAJ,EAAAvb,EACA,KAAA2lD,EAAAzhD,KAAAyX,GAAA,CACA,GAAA4uC,GAAA5uC,EAAArY,MAAAsiD,EACA2E,KACAH,EAAA,MAAAG,EAAA,GACA,IAAAA,EAAA,OAAAA,EAAA,OAEA,QAIA,GAAAhvC,EAAA5Y,OAAA,EAEA,IADA6nD,GAAAjvC,EAAA,EACA,KAAAvb,EAAA,EAA+BA,EAAAsqD,EAAA3nD,SAAuB3C,EAEtD,GAAAsqD,EAAAtqD,KAAAwqD,EAAA,CACAxqD,EAAA,IACAqqD,EAAA,KAAAC,EAAAtqD,EAAA,GAEA,SAMA,GAAA+b,GAAA,8BAAAxb,EACA,WAAA6pD,EAAA,yDAEAC,CACAtS,GAAAuG,MAAAviC,KAAAksC,KAicAwC,UA7OA,SAAAlR,EAAAmR,GACA,GAAA1F,IAAA,CAOA,OAFA2F,GACAC,EALAC,EAAAtR,EAAAh+B,MAAApV,MAAA,MACA2kD,EAAAJ,EAAAnvC,MAAApV,MAAA,MACA4kD,GAAA,EACA5hD,GAAA,EAGAnJ,EAAA,EAAmBA,EAAA6qD,EAAAloD,SAA4B3C,EAE/C,GADAmc,EAAA+oC,EAAA2F,EAAA7qD,IACA,CACA2qD,EAAAxuC,EAAAN,SACAkvC,EAAA5uC,EAAAR,IACA,OAGA,IAAA3b,EAAA,EAAmBA,EAAA8qD,EAAAnoD,SAA2B3C,EAAA,CAC9C,GAAAmc,EACA,IADAA,EAAA+oC,EAAA4F,EAAA9qD,IACA,CACA4qD,EAAAzuC,EAAAN,SACA1S,EAAAgT,EAAAR,IACA,QAGAovC,EAAA,GAAA5hD,EAAA,IAAAwhD,IAAAC,GACAD,IAAAC,GAAAG,GAAA5hD,IAIAk7C,EAAA,SAAA1oC,GACA,GAAA+pC,EAAAxhD,KAAAyX,GAAA,QACA,IAAA9X,GAAAqhD,EAAAvpC,EACA,UAAA9X,GACAA,EAAAgY,WAAA8uC,GACAI,GAAAlnD,EAAA8X,MAAA9X,EAAA8X,MAAAxS,OA4MApB,OACAugC,WA/bA,SAAA/nC,EAAAyqD,GACA,GAAApvC,GAAArb,EACA,yDAEA,OADAyqD,KAAApvC,GAAA,QAAAovC,EAAA,aACAjjD,EAAA6T,IA4bAolC,gBACAqG,eACAS,sBAIGmD,WAAA,GAAApQ,SAAA,KAA0BqQ,IAAA,SAAAzT,EAAAn4C,EAAAD,GAC7B,YACAC,GAAAD,QAAA,SAAAs4C,GACA,QAAAwT,KACA,MAAAxrD,MAAAoL,MAEA,QAAAqgD,KACA,KAAAzrD,MAAA8lB,OAGAkyB,EAAAv2C,UAAAg2B,OACAugB,EAAAv2C,UAAAiqD,WAAA,SAAAtgD,GAEA,MADAA,aAAA4sC,IAAA5sC,EAAAi7C,8BACArmD,KAAA47C,MACA4P,aAAAzN,IAAyC3yC,kBAGzC4sC,EAAAv2C,UAAAkqD,MACA3T,EAAAv2C,UAAAmqD,UAAA,SAAA9lC,GACA,MAAA9lB,MAAA47C,MACA6P,aAAA1N,IAAwCj4B,mBAGxCkyB,EAAAv2C,UAAAoqD,WAAA,SAAA/lC,GACA,GAAA/a,UAAA/H,QAAA,EACA,MAAAhD,MAAA47C,aACA6P,UAA4C3lC,iBAE5C,IAAAgmC,GAAA/gD,UAAA,GACAgR,EAAA,WAAkC,KAAA+vC,GAClC,OAAA9rD,MAAA+rD,OAAAjmC,EAAA/J,IAIAi8B,EAAAv2C,UAAAuqD,YAAA,SAAA5gD,GACA,GAAAL,UAAA/H,QAAA,EAEA,MADAoI,aAAA4sC,IAAA5sC,EAAAi7C,8BACArmD,KAAA47C,aACA4P,UAA6CpgD,gBAE7C,IAAA6gD,GAAAlhD,UAAA,EACAkhD,aAAAjU,IAAAiU,EAAA5F,6BACA,IAAAtqC,GAAA,WAAkC,MAAAkwC,GAClC,OAAAjsD,MAAA+rD,OAAA3gD,EAAA2Q,UAKImwC,IAAA,SAAApU,EAAAn4C,EAAAD,GACJ,YACAC,GAAAD,QAAA,SAAAs4C,EAAAoD,GAIA,QAAA+Q,KACA,MAAAC,GAAApsD,MAJA,GAAAqsD,GAAArU,EAAAsU,OACAF,EAAApU,EAAAuU,GAUAvU,GAAAv2C,UAAA+qD,KAAA,SAAAlT,GACA,MAAA+S,GAAArsD,KAAAs5C,EAAA8B,EAAA,GACAQ,MAAAuQ,aAAApO,GAAA/9C,cAGAg4C,EAAAv2C,UAAAgrD,UAAA,SAAAnT,GACA,MAAA+S,GAAArsD,KAAAs5C,EAAA8B,MAGApD,EAAAwU,KAAA,SAAAtU,EAAAoB,GACA,MAAA+S,GAAAnU,EAAAoB,EAAA8B,EAAA,GACAQ,MAAAuQ,aAAApO,GAAA7F,WAGAF,EAAAyU,UAlBA,SAAAvU,EAAAoB,GACA,MAAA+S,GAAAnU,EAAAoB,EAAA8B,YAqBIsR,IAAA,SAAA5U,EAAAn4C,EAAAD,GACJ,YAOA,SAAAitD,GAAAC,EAAAC,GACA,QAAAC,GAAA7wC,GACA,KAAAjc,eAAA8sD,IAAA,UAAAA,GAAA7wC,EACA8nC,GAAA/jD,KAAA,UACA,gBAAAic,KAAA4wC,GACA9I,EAAA/jD,KAAA,OAAA4sD,GACAlhD,MAAA45C,kBACA55C,MAAA45C,kBAAAtlD,UAAAkrC,aAEAx/B,MAAAlL,KAAAR,MAIA,MADAspD,GAAAwD,EAAAphD,OACAohD,EAmDA,QAAAC,GAAA9wC,GACA,KAAAjc,eAAA+sD,IACA,UAAAA,GAAA9wC,EACA8nC,GAAA/jD,KAAA,2BACA+jD,EAAA/jD,KAAA,UAAAic,GACAjc,KAAAgtD,MAAA/wC,EACAjc,KAAAitD,eAAA,EAEAhxC,YAAAvQ,QACAq4C,EAAA/jD,KAAA,UAAAic,WACA8nC,EAAA/jD,KAAA,QAAAic,EAAAL,QACKlQ,MAAA45C,mBACL55C,MAAA45C,kBAAAtlD,UAAAkrC,aAlFA,GAsBAgiB,GAAAC,EAtBAC,EAAAtV,EAAA,SACAuV,EAAAD,EAAAE,OACAzT,EAAA/B,EAAA,UACAwR,EAAAzP,EAAAyP,SACAvF,EAAAlK,EAAAkK,kBAmBAI,EAAAwI,EAAA,qBACAY,EAAAZ,EAAA,0CACAa,EAAAb,EAAA,gCACAc,EAAAd,EAAA,mCACA,KACAO,EAAAz+C,UACA0+C,EAAAO,WACC,MAAAztD,GACDitD,EAAAP,EAAA,0BACAQ,EAAAR,EAAA,4BAMA,OAHAgB,GAAA,sHACAnnD,MAAA,KAEAnG,EAAA,EAAeA,EAAAstD,EAAA3qD,SAAoB3C,EACnC,kBAAAmN,OAAA/L,UAAAksD,EAAAttD,MACAotD,EAAAhsD,UAAAksD,EAAAttD,IAAAmN,MAAA/L,UAAAksD,EAAAttD,IAIA+sD,GAAApsD,eAAAysD,EAAAhsD,UAAA,UACA2J,MAAA,EACAnK,gBACA+mC,YACA9mC,gBAEAusD,EAAAhsD,UAAAwrD,eAAA,CACA,IAAAlqD,GAAA,CACA0qD,GAAAhsD,UAAAoM,SAAA,WACA,GAAA+/C,GAAApgD,MAAA,EAAAzK,EAAA,GAAA0H,KAAA,KACAkC,EAAA,KAAAihD,EAAA,sBACA7qD,KACA6qD,EAAApgD,MAAA,EAAAzK,EAAA,GAAA0H,KAAA,IACA,QAAApK,GAAA,EAAmBA,EAAAL,KAAAgD,SAAiB3C,EAAA,CAGpC,OAFA+Q,GAAApR,KAAAK,KAAAL,KAAA,4BAAAA,KAAAK,GAAA,GACA4tC,EAAA78B,EAAA5K,MAAA,MACAoD,EAAA,EAAuBA,EAAAqkC,EAAAjrC,SAAkB4G,EACzCqkC,EAAArkC,GAAAgkD,EAAA3f,EAAArkC,EAGA+C,KADAyE,EAAA68B,EAAAxjC,KAAA,OACA,KAGA,MADA1H,KACA4J,GAmBA28C,EAAAyD,EAAArhD,MAEA,IAAAmiD,GAAAniD,MAAAoiD,sBACAD,KACAA,EAAAR,GACAE,oBACAC,eACAT,mBACAgB,eAAAhB,EACAU,mBAEAL,EAAApsD,eAAA0K,MAAA,0BACAN,MAAAyiD,EACA7lB,YACA9mC,cACAD,mBAIAtB,EAAAD,SACAgM,YACA+C,UAAAy+C,EACAQ,WAAAP,EACAI,kBAAAM,EAAAN,kBACAR,iBAAAc,EAAAd,iBACAS,aAAAK,EAAAL,aACAC,eAAAI,EAAAJ,eACAtJ,aAGGlD,QAAA,GAAA/F,SAAA,KAAuB8S,IAAA,SAAAlW,EAAAn4C,EAAAD,GAC1B,GAAAuuD,GAAA,WACA,YACA,iBAAAjuD,OAGA,IAAAiuD,EACAtuD,EAAAD,SACA4tD,OAAAvsD,OAAAusD,OACAtsD,eAAAD,OAAAC,eACAktD,cAAAntD,OAAAotD,yBACAp2B,KAAAh3B,OAAAg3B,KACAq2B,MAAArtD,OAAAstD,oBACApY,eAAAl1C,OAAAk1C,eACAtoC,QAAAH,MAAAG,QACAsgD,QACAK,mBAAA,SAAAvlD,EAAAC,GACA,GAAAulD,GAAAxtD,OAAAotD,yBAAAplD,EAAAC,EACA,SAAAulD,MAAAvmB,WAAAumB,EAAA/4B,WAGC,CACD,GAAAgD,MAAgB92B,eAChB0P,KAAgBvD,SAChByR,KAAkB4rB,YAAAzpC,UAElB+sD,EAAA,SAAA1tD,GACA,GAAA6L,KACA,QAAA8D,KAAA3P,GACA03B,EAAAh4B,KAAAM,EAAA2P,IACA9D,EAAA9J,KAAA4N,EAGA,OAAA9D,IAGA8hD,EAAA,SAAA3tD,EAAA2P,GACA,OAAgBrF,MAAAtK,EAAA2P,KAGhBi+C,EAAA,SAAA5tD,EAAA2P,EAAAu9B,GAEA,MADAltC,GAAA2P,GAAAu9B,EAAA5iC,MACAtK,GAGA6tD,EAAA,SAAA5lD,GACA,MAAAA,IAGA6lD,EAAA,SAAA7lD,GACA,IACA,MAAAhI,QAAAgI,GAAAmiC,YAAAzpC,UAEA,MAAAxB,GACA,MAAAqf,KAIAuvC,EAAA,SAAA9lD,GACA,IACA,yBAAAqI,EAAA5Q,KAAAuI,GAEA,MAAA9I,GACA,UAIAN,GAAAD,SACAiO,QAAAkhD,EACA92B,KAAAy2B,EACAJ,MAAAI,EACAxtD,eAAA0tD,EACAR,cAAAO,EACAnB,OAAAqB,EACA1Y,eAAA2Y,EACAX,QACAK,mBAAA,WACA,iBAKIQ,IAAA,SAAAhX,EAAAn4C,EAAAD,GACJ,YACAC,GAAAD,QAAA,SAAAs4C,EAAAoD,GACA,GAAA2T,GAAA/W,EAAAjuC,GAEAiuC,GAAAv2C,UAAA2tC,OAAA,SAAAkK,EAAAr7B,GACA,MAAA8wC,GAAA/uD,KAAAs5C,EAAAr7B,EAAAm9B,IAGApD,EAAA5I,OAAA,SAAA8I,EAAAoB,EAAAr7B,GACA,MAAA8wC,GAAA7W,EAAAoB,EAAAr7B,EAAAm9B,UAII4T,IAAA,SAAAlX,EAAAn4C,EAAAD,GACJ,YACAC,GAAAD,QAAA,SAAAs4C,EAAAqD,EAAAsF,GAMA,QAAAsO,GAAA7W,EAAAp6B,EAAAjC,GACA/b,KAAAo4C,UACAp4C,KAAAge,OACAhe,KAAA+b,UACA/b,KAAAkvD,UACAlvD,KAAAmvD,cAAA,KAOA,QAAAC,GAAAC,GACArvD,KAAAqvD,iBAOA,QAAAC,GAAAlN,EAAAt8B,GACA,aAAAs8B,EAAA+M,gBACApkD,UAAA/H,OAAA,EACAo/C,EAAA+M,cAAA3T,QAAA11B,GAEAs8B,EAAA+M,cAAA1P,UAEA2C,EAAA+M,cAAA,SAMA,QAAAI,KACA,MAAAF,GAAA7uD,KAAAR,UAAAo4C,QAAAmE,UAAAsK,iBAEA,QAAA2I,GAAA1pC,GACA,IAAAwpC,EAAAtvD,KAAA8lB,GAEA,MADAw4B,GAAAr+C,EAAA6lB,EACAw4B,EAEA,QAAA+Q,GAAAI,GACA,GAAArX,GAAAp4C,KAAAo4C,QACAr8B,EAAA/b,KAAA+b,OAEA,KAAA/b,KAAAkvD,OAAA,CACAlvD,KAAAkvD,SACA,IAAAviD,GAAA3M,KAAA0vD,mBACA3zC,EAAAvb,KAAA43C,EAAAgE,eACArgC,EAAAvb,KAAA43C,EAAAgE,cAAAqT,EACA,IAAA9iD,IAAAg0C,EACA,MAAAh0C,EACS,aAAAA,EAAA,CACTyrC,EAAAsO,0BACA,IAAApK,GAAAjB,EAAA1uC,EAAAyrC,EACA,IAAAkE,YAAAtE,GAAA,CACA,SAAAh4C,KAAAmvD,cAAA,CACA,GAAA7S,EAAA0D,eAAA,CACA,GAAAl6B,GACA,GAAAynC,GAAA,6BAGA,OAFAnV,GAAAkI,kBAAAx6B,GACAw4B,EAAAr+C,EAAA6lB,EACAw4B,EACqBhC,EAAAyD,aACrBzD,EAAAsG,4BACA,GAAAwM,GAAApvD,OAGA,MAAAs8C,GAAAV,MACA2T,EAAAC,SAAAxvD,eAKA,MAAAo4C,GAAAuX,cACAL,EAAAtvD,MACAs+C,EAAAr+C,EAAAwvD,EACAnR,IAEAgR,EAAAtvD,MACAyvD,GArFA,GAAA5V,GAAA/B,EAAA,UACAyV,EAAAvV,EAAAuV,kBACAjP,EAAAzE,EAAAyE,SACAsR,EAAA9X,EAAA,kBAAA6I,EA2IA,OAjIAsO,GAAAxtD,UAAAiuD,iBAAA,WACA,WAAA1vD,KAAAge,MAOAoxC,EAAA3tD,UAAA8+C,iBAAA,WACA+O,EAAAtvD,KAAAqvD,iBAmEArX,EAAAv2C,UAAAouD,aAAA,SAAA9zC,EAAAiC,EAAA8xC,EAAAN,GACA,wBAAAzzC,GAAA/b,KAAA+vD,OACA/vD,KAAA47C,MAAAkU,EACAN,SAEA,GAAAP,GAAAjvD,KAAAge,EAAAjC,YAIAi8B,EAAAv2C,UAAAuuD,OACAhY,EAAAv2C,UAAAwuD,QAAA,SAAAl0C,GACA,MAAA/b,MAAA6vD,aAAA9zC,EACA,EACAszC,EACAA,IAIArX,EAAAv2C,UAAAyuD,IAAA,SAAAn0C,GACA,MAAA/b,MAAA6vD,aAAA9zC,EAAA,EAAAszC,IAGArX,EAAAv2C,UAAA0uD,SAAA,SAAAC,GACA,GAAAriD,GAAAhD,UAAA/H,MACA,QAAA+K,EACA,MAAA/N,MAAA6vD,aAAAO,EACA,SAEAf,EAEA,IACAhvD,GADAgwD,EAAA,GAAA7iD,OAAAO,EAAA,GACAnE,EAAA,CACA,KAAAvJ,EAAA,EAAmBA,EAAA0N,EAAA,IAAa1N,EAAA,CAChC,GAAAqxC,GAAA3mC,UAAA1K,EACA,KAAAw5C,EAAAjH,SAAAlB,GAGA,MAAAsG,GAAA0K,OAAA,GAAAj0C,WACA,6DACAorC,EAAA2D,YAAA9L,IAJA2e,GAAAzmD,KAAA8nC,EAQA2e,EAAArtD,OAAA4G,CACA,IAAAmS,GAAAhR,UAAA1K,EACA,OAAAL,MAAA6vD,aAAAD,EAAAS,EAAAt0C,EAAA/b,MACA,SAEAqvD,IAKAJ,KAGGqB,iBAAA,EAAApV,SAAA,KAA+BqV,IAAA,SAAAzY,EAAAn4C,EAAAD,GAClC,YACAC,GAAAD,QAAA,SAAAs4C,EACAoG,EACAhD,EACAC,EACAmV,EACAn0C,GAyBA,QAAAo0C,GAAAC,EAAAnX,EAAAoX,EAAA/0C,GACA,GAAAS,EAAAqiC,eAAA,CACA,GAAAkS,GAAA,GAAA5Y,GAAAoD,GACAyV,EAAA7wD,KAAA6wD,gBAAA,GAAA7Y,GAAAoD,EACAp7C,MAAA8wD,SAAAF,EAAAZ,OAAA,WACA,MAAAa,KAEAD,EAAArJ,qBACAqJ,EAAAnU,aAAAz8C,WAEAA,KAAA8wD,SAAA,GAAA9Y,GAAAoD,IACAmM,oBAEAvnD,MAAA+wD,OAAAn1C,EACA5b,KAAAgxD,mBAAAN,EACA1wD,KAAAixD,UAAA1X,EACAv5C,KAAAkxD,kBACAlxD,KAAAmxD,eAAA,kBAAAR,IACAA,GAAApmD,OAAA6mD,GACAA,EACApxD,KAAAqxD,gBAAA,KACArxD,KAAAsxD,sBA7CA,GACA7iD,GADAqpC,EAAA,YACArpC,UACAorC,EAAA/B,EAAA,UACAwG,EAAAzE,EAAAyE,SACAD,EAAAxE,EAAAwE,SACA+S,IA0CAvX,GAAAyP,SAAAmH,EAAAD,GAEAC,EAAAhvD,UAAA8vD,YAAA,WACA,cAAAvxD,KAAA8wD,UAGAL,EAAAhvD,UAAA+vD,SAAA,WACAxxD,KAAA8wD,SAAA9wD,KAAAkxD,WAAA,KACA70C,EAAAqiC,gBAAA,OAAA1+C,KAAA6wD,kBACA7wD,KAAA6wD,gBAAAY,WACAzxD,KAAA6wD,gBAAA,OAIAJ,EAAAhvD,UAAAiwD,kBAAA,WACA,IAAA1xD,KAAAuxD,cAAA,CACA,GAEA/0C,EACA,aAHAxc,KAAAkxD,WAAAz5B,OAaAz3B,KAAA8wD,SAAApP,eACAllC,EAAA6hC,EAAAr+C,KAAAkxD,WAAAz5B,QAAAj3B,KAAAR,KAAAkxD,mBAEAlxD,KAAA8wD,SAAAnP,kBAbA,CACA,GAAA77B,GAAA,GAAAkyB,GAAAuV,kBACA,+BACAvV,GAAA2Z,UAAAC,eAAA9rC,EACA9lB,KAAA8wD,SAAAxQ,kBAAAx6B,GACA9lB,KAAA8wD,SAAApP,eACAllC,EAAA6hC,EAAAr+C,KAAAkxD,WAAAvF,OAAAnrD,KAAAR,KAAAkxD,WACAprC,GACA9lB,KAAA8wD,SAAAnP,cAOA3hD,KAAAsxD,sBACAtxD,KAAAqxD,gBAAA,KACArxD,KAAA6xD,UAAAr1C,KAGAi0C,EAAAhvD,UAAAqwD,kBAAA,SAAA1mD,GACApL,KAAAqxD,gBAAA,KACArxD,KAAA8wD,SAAApP,cACA,IAAAllC,GAAA6hC,EAAAr+C,KAAAkxD,WAAA95B,MAAA52B,KAAAR,KAAAkxD,WAAA9lD,EACApL,MAAA8wD,SAAAnP,cACA3hD,KAAA6xD,UAAAr1C,IAGAi0C,EAAAhvD,UAAAswD,iBAAA,SAAAjsC,GACA9lB,KAAAqxD,gBAAA,KACArxD,KAAA8wD,SAAAxQ,kBAAAx6B,GACA9lB,KAAA8wD,SAAApP,cACA,IAAAllC,GAAA6hC,EAAAr+C,KAAAkxD,WAAAvF,OACAnrD,KAAAR,KAAAkxD,WAAAprC,EACA9lB,MAAA8wD,SAAAnP,cACA3hD,KAAA6xD,UAAAr1C,IAGAi0C,EAAAhvD,UAAA8+C,iBAAA,WACA,GAAAvgD,KAAAqxD,0BAAArZ,GAAA,CACA,GAAAI,GAAAp4C,KAAAqxD,eACArxD,MAAAqxD,gBAAA,KACAjZ,EAAAqG,WAIAgS,EAAAhvD,UAAA22C,QAAA,WACA,MAAAp4C,MAAA8wD,UAGAL,EAAAhvD,UAAAuwD,KAAA,WACAhyD,KAAAkxD,WAAAlxD,KAAAgxD,mBAAAxwD,KAAAR,KAAAixD,WACAjxD,KAAAixD,UACAjxD,KAAAgxD,0BACAhxD,KAAA8xD,2BAGArB,EAAAhvD,UAAAowD,UAAA,SAAAr1C,GACA,GAAA47B,GAAAp4C,KAAA8wD,QACA,IAAAt0C,IAAA8hC,EAEA,MADAt+C,MAAAwxD,WACAxxD,KAAAsxD,mBACAlZ,EAAAqG,SAEArG,EAAA6Z,gBAAAz1C,EAAAvc,KAIA,IAAAmL,GAAAoR,EAAApR,KACA,SAAAoR,EAAA6a,KAEA,MADAr3B,MAAAwxD,WACAxxD,KAAAsxD,mBACAlZ,EAAAqG,SAEArG,EAAA2D,iBAAA3wC,EAGA,IAAAkxC,GAAAjB,EAAAjwC,EAAApL,KAAA8wD,SACA,IAAAxU,YAAAtE,IAKA,QAJAsE,EA1IA,SAAAlxC,EAAAgmD,EAAAc,GACA,OAAA7xD,GAAA,EAAmBA,EAAA+wD,EAAApuD,SAA0B3C,EAAA,CAC7C6xD,EAAAxQ,cACA,IAAAllC,GAAA6hC,EAAA+S,EAAA/wD,IAAA+K,EAEA,IADA8mD,EAAAvQ,cACAnlC,IAAA8hC,EAAA,CACA4T,EAAAxQ,cACA,IAAA/0C,GAAAqrC,EAAA0K,OAAApE,EAAAr+C,EAEA,OADAiyD,GAAAvQ,cACAh1C,EAEA,GAAA2vC,GAAAjB,EAAA7+B,EAAA01C,EACA,IAAA5V,YAAAtE,GAAA,MAAAsE,GAEA,aA6HAA,EACAt8C,KAAAmxD,eACAnxD,KAAA8wD,WAJA,CAiBA,GAAAqB,IADA7V,IAAAC,WACAT,SAEA,cAAAqW,IACAnyD,KAAAqxD,gBAAA/U,EACAA,EAAA8V,OAAApyD,KAAA,OACS,aAAAmyD,GACTna,EAAAuG,OAAA5D,OACA36C,KAAA8xD,kBAAA9xD,KAAAs8C,EAAA2P,UAES,aAAAkG,GACTna,EAAAuG,OAAA5D,OACA36C,KAAA+xD,iBAAA/xD,KAAAs8C,EAAAwP,WAGA9rD,KAAA0xD,wBAzBA1xD,MAAA+xD,iBACA,GAAAtjD,GACA,oGAAArE,QAAA,KAAAsF,OAAAtE,IACA,oBACApL,KAAA+wD,OAAAvqD,MAAA,MAAA8D,MAAA,MAAAG,KAAA,SA0BAutC,EAAA2Z,UAAA,SAAAjB,EAAAzyC,GACA,qBAAAyyC,GACA,SAAAjiD,GAAA,yEAEA,IAAAkiD,GAAA5vD,OAAAkd,GAAA0yC,aACA0B,EAAA5B,EACA70C,MAAAlQ,QAAAkQ,KACA,mBACA,GAAA02C,GAAA5B,EAAAzlD,MAAAjL,KAAA+K,WACAwnD,EAAA,GAAAF,cAAAtU,GAAA4S,EACA/0C,GACAjP,EAAA4lD,EAAAna,SAGA,OAFAma,GAAArB,WAAAoB,EACAC,EAAAT,0BACAnlD,IAIAqrC,EAAA2Z,UAAAa,gBAAA,SAAAlZ,GACA,qBAAAA,GACA,SAAA7qC,GAAA,gCAAAorC,EAAA2D,YAAAlE,GAEA8X,GAAAvuD,KAAAy2C,IAGAtB,EAAAua,MAAA,SAAA7B,GAEA,GADAr0C,EAAAssB,WAAA,yCACA,kBAAA+nB,GACA,MAAAtS,GAAA,yEAEA,IAAAmU,GAAA,GAAA9B,GAAAC,EAAA1wD,MACA2M,EAAA4lD,EAAAna,SAEA,OADAma,GAAAP,KAAAha,EAAAua,OACA5lD,MAIG2+C,WAAA,GAAApQ,SAAA,KAA0BuX,IAAA,SAAA3a,EAAAn4C,EAAAD,GAC7B,YACAC,GAAAD,QACA,SAAAs4C,EAAAmG,EAAA9C,EAAAD,EAAA/gC,EACAwrC,GACA,GAAAhM,GAAA/B,EAAA,SACA+B,GAAAgE,YACAhE,EAAAwE,SACAxE,EAAAyE,SAuGAtG,EAAAvtC,KAAA,WACA,GACA6uC,GADAoZ,EAAA3nD,UAAA/H,OAAA,CAEA0vD,GAAA,qBAAA3nD,WAAA2nD,KACApZ,EAAAvuC,UAAA2nD,GA+CA,IAAA7nD,MAAAP,MAAA9J,KAAAuK,UACAuuC,IAAAzuC,EAAAgc,KACA,IAAAla,GAAA,GAAAwxC,GAAAtzC,GAAAutC,SACA,iBAAAkB,EAAA3sC,EAAAgmD,OAAArZ,GAAA3sC,MAKGuuC,SAAA,KAAY0X,IAAA,SAAA9a,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QAAA,SAAAs4C,EACAmG,EACAC,EACA/C,EACAD,EACA/+B,GAOA,QAAAw2C,GAAA3a,EAAAoB,EAAAwZ,EAAAC,GACA/yD,KAAAgzD,aAAA9a,GACAl4C,KAAA8wD,SAAAvJ,oBACA,IAAAp0C,GAAA0yC,GACA7lD,MAAAonB,UAAA,OAAAjU,EAAAmmC,EAAAO,EAAAsN,WAAAh0C,EAAAmmC,GACAt5C,KAAAizD,iBAAAF,IAAA3X,EACA,GAAA5tC,OAAAxN,KAAAgD,UACA,KACAhD,KAAAkzD,OAAAJ,EACA9yD,KAAAmzD,UAAA,EACAnzD,KAAAozD,UACA/4C,EAAAsgC,OAAA36C,KAAAqzD,WAAArzD,aA6GA,QAAA+J,GAAAmuC,EAAAoB,EAAAr7B,EAAA80C,GACA,qBAAAzZ,GACA,MAAA8E,GAAA,gCAAAvE,EAAA2D,YAAAlE,GAGA,IAAAwZ,GAAA,CACA,aAAA70C,EAAA,CACA,mBAAAA,IAAA,OAAAA,EAQA,MAAA+5B,GAAA0K,OAAA,GAAAj0C,WACA,gDACAorC,EAAA2D,YAAAv/B,IATA,oBAAAA,GAAAq1C,YACA,MAAAtb,GAAA0K,OACA,GAAAj0C,WAAA,4CACAorC,EAAA2D,YAAAv/B,EAAAq1C,cAEAR,GAAA70C,EAAAq1C,YASA,UAAAT,GAAA3a,EAAAoB,EAFAwZ,EAAA,gBAAAA,IACAS,SAAAT,OAAA,EAAAA,EAAA,EACAC,GAAA3a,UApJA,GAAAyN,GAAA7N,EAAA8N,WACAjM,EAAA/B,EAAA,UACAuG,EAAAxE,EAAAwE,SACAC,EAAAzE,EAAAyE,SACAjkC,EAAA29B,EAAAuG,MAeA1E,GAAAyP,SAAAuJ,EAAA1U,GAEA0U,EAAApxD,UAAA4xD,WAAA,WACArzD,KAAAwzD,eAAA,IAGAX,EAAApxD,UAAAgyD,MAAA,aAEAZ,EAAApxD,UAAAqwD,kBAAA,SAAA1mD,EAAAS,GACA,GAAAorB,GAAAj3B,KAAA0zD,QACA1wD,EAAAhD,KAAAgD,SACA2wD,EAAA3zD,KAAAizD,iBACAH,EAAA9yD,KAAAkzD,MAEA,IAAArnD,EAAA,GAGA,GADAorB,EADAprB,GAAA,EAAAA,EAAA,GACAT,EACA0nD,GAAA,IACA9yD,KAAAmzD,YACAnzD,KAAA86C,cACA96C,KAAAuxD,eAAA,aAEK,CACL,GAAAuB,GAAA,GAAA9yD,KAAAmzD,WAAAL,EAGA,MAFA77B,GAAAprB,GAAAT,EACApL,KAAAozD,OAAAvwD,KAAAgJ,KAGA,QAAA8nD,MAAA9nD,GAAAT,EAEA,IAAAgtC,GAAAp4C,KAAA8wD,SACArkD,EAAAzM,KAAAonB,UACAmyB,EAAAnB,EAAAgE,aACAhE,GAAAsJ,cACA,IAAA/0C,GAAA0xC,EAAA5xC,GAAAjM,KAAA+4C,EAAAnuC,EAAAS,EAAA7I,GACAslD,EAAAlQ,EAAAuJ,aAOA,IANAtlC,EAAAkuC,sBACA59C,EACA27C,EACA,OAAAqL,EAAA,+BACAvb,GAEAzrC,IAAA2xC,EAEA,MADAt+C,MAAAw7C,QAAA7uC,EAAA1M,KAIA,IAAAq8C,GAAAjB,EAAA1uC,EAAA3M,KAAA8wD,SACA,IAAAxU,YAAAtE,GAAA,CAEA,GAAAma,IADA7V,IAAAC,WACAT,SAEA,iBAAAqW,GAIA,MAHAW,IAAA,GAAA9yD,KAAAmzD,YACAl8B,EAAAprB,GAAAywC,EACAA,EAAA8V,OAAApyD,MAAA,GAAA6L,EAAA,MAEa,iBAAAsmD,GAEA,oBAAAA,IACbnyD,KAAAw7C,QAAAc,EAAAwP,gBAGA9rD,KAAAy/C,aALA9yC,GAAA2vC,EAAA2P,SASAh1B,EAAAprB,GAAAc,EAGA,QADA3M,KAAA4zD,gBACA5wD,IACA,OAAA2wD,EACA3zD,KAAA+yD,QAAA97B,EAAA08B,GAEA3zD,KAAA6zD,SAAA58B,QAOA47B,EAAApxD,UAAAq5C,YAAA,WAIA,IAHA,GAAAC,GAAA/6C,KAAAozD,OACAN,EAAA9yD,KAAAkzD,OACAj8B,EAAAj3B,KAAA0zD,QACA3Y,EAAA/3C,OAAA,GAAAhD,KAAAmzD,UAAAL,GAAA,CACA,GAAA9yD,KAAAuxD,cAAA,MACA,IAAA1lD,GAAAkvC,EAAAl0B,KACA7mB,MAAA8xD,kBAAA76B,EAAAprB,QAIAgnD,EAAApxD,UAAAsxD,QAAA,SAAAe,EAAA78B,GAIA,OAHAlpB,GAAAkpB,EAAAj0B,OACA2J,EAAA,GAAAa,OAAAO,GACAnE,EAAA,EACAvJ,EAAA,EAAmBA,EAAA0N,IAAS1N,EAC5ByzD,EAAAzzD,KAAAsM,EAAA/C,KAAAqtB,EAAA52B,GAEAsM,GAAA3J,OAAA4G,EACA5J,KAAA6zD,SAAAlnD,IAGAkmD,EAAApxD,UAAAkyD,gBAAA,WACA,MAAA3zD,MAAAizD,kBA4BAjb,EAAAv2C,UAAAsI,IAAA,SAAAuvC,EAAAr7B,GACA,MAAAlU,GAAA/J,KAAAs5C,EAAAr7B,EAAA,OAGA+5B,EAAAjuC,IAAA,SAAAmuC,EAAAoB,EAAAr7B,EAAA80C,GACA,MAAAhpD,GAAAmuC,EAAAoB,EAAAr7B,EAAA80C,OAMG7X,SAAA,KAAY6Y,IAAA,SAAAjc,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QACA,SAAAs4C,EAAAoD,EAAAC,EAAA+C,EAAA/hC,GACA,GAAAw9B,GAAA/B,EAAA,UACAuG,EAAAxE,EAAAwE,QAEArG,GAAAoQ,OAAA,SAAA9O,GACA,qBAAAA,GACA,SAAAtB,GAAAvpC,UAAA,gCAAAorC,EAAA2D,YAAAlE,GAEA,mBACA,GAAA3sC,GAAA,GAAAqrC,GAAAoD,EACAzuC,GAAA46C,qBACA56C,EAAA+0C,cACA,IAAAt2C,GAAAizC,EAAA/E,GAAAruC,MAAAjL,KAAA+K,WACAu9C,EAAA37C,EAAAg1C,aAIA,OAHAtlC,GAAAkuC,sBACAn/C,EAAAk9C,EAAA,iBAAA37C,GACAA,EAAAqnD,sBAAA5oD,GACAuB,IAIAqrC,EAAAic,QAAAjc,EAAAkc,IAAA,SAAA5a,GACA,qBAAAA,GACA,MAAA8E,GAAA,gCAAAvE,EAAA2D,YAAAlE,GAEA,IAAA3sC,GAAA,GAAAqrC,GAAAoD,EACAzuC,GAAA46C,qBACA56C,EAAA+0C,cACA,IAAAt2C,EACA,IAAAL,UAAA/H,OAAA,GACAqZ,EAAAssB,WAAA,gDACA,IAAA/6B,GAAA7C,UAAA,GACAq3C,EAAAr3C,UAAA,EACAK,GAAAyuC,EAAAlsC,QAAAC,GAAAywC,EAAA/E,GAAAruC,MAAAm3C,EAAAx0C,GACAywC,EAAA/E,GAAA94C,KAAA4hD,EAAAx0C,OAEAxC,GAAAizC,EAAA/E,IAEA,IAAAgP,GAAA37C,EAAAg1C,aAIA,OAHAtlC,GAAAkuC,sBACAn/C,EAAAk9C,EAAA,cAAA37C,GACAA,EAAAqnD,sBAAA5oD,GACAuB,GAGAqrC,EAAAv2C,UAAAuyD,sBAAA,SAAA5oD,GACAA,IAAAyuC,EAAAyE,SACAt+C,KAAAiyD,gBAAA7mD,EAAAnL,MAEAD,KAAA+7C,iBAAA3wC,UAKG8vC,SAAA,KAAYiZ,IAAA,SAAArc,EAAAn4C,EAAAD,GACf,YAaA,SAAA00D,GAAArrD,GACA,GAAA4D,EACA,KARA5D,EAQAA,YAPA2C,QACA0hD,EAAAnX,eAAAltC,KAAA2C,MAAAjK,UAMA,EACAkL,EAAA,GAAAogD,GAAAhkD,IACAnI,KAAAmI,EAAAnI,KACA+L,EAAAsP,QAAAlT,EAAAkT,QACAtP,EAAAiP,MAAA7S,EAAA6S,KAEA,QADAmc,GAAAq1B,EAAAr1B,KAAAhvB,GACA1I,EAAA,EAAuBA,EAAA03B,EAAA/0B,SAAiB3C,EAAA,CACxC,GAAAoQ,GAAAsnB,EAAA13B,EACAg0D,GAAA9vD,KAAAkM,KACA9D,EAAA8D,GAAA1H,EAAA0H,IAGA,MAAA9D,GApBA,GAAA5D,EAuBA,OADA8wC,GAAAya,+BAAAvrD,GACAA,EA7BA,GAAA8wC,GAAA/B,EAAA,UACAyc,EAAA1a,EAAA0a,iBAEAxH,EADAjV,EAAA,YACAiV,iBACAK,EAAAtV,EAAA,SAOAuc,EAAA,gCAsCA10D,GAAAD,QAjBA,SAAA04C,EAAAoc,GACA,gBAAAhuC,EAAApb,GACA,UAAAgtC,EAAA,CACA,GAAA5xB,EAAA,CACA,GAAAiuC,GAAAL,EAAAG,EAAA/tC,GACA4xB,GAAAkI,kBAAAmU,GACArc,EAAAoD,QAAAiZ,OACS,IAAAD,EAEA,CACT,GAAA3pD,MAAAP,MAAA9J,KAAAuK,UAAA,EACAqtC,GAAAqZ,SAAA5mD,OAHAutC,GAAAqZ,SAAArmD,EAKAgtC,GAAA,UAMGkT,WAAA,GAAArK,QAAA,GAAA/F,SAAA,KAAqCwZ,IAAA,SAAA5c,EAAAn4C,EAAAD,GACxC,YACAC,GAAAD,QAAA,SAAAs4C,GAMA,QAAA2c,GAAAC,EAAAC,GAEA,IAAAhb,EAAAlsC,QAAAinD,GAAA,MAAAE,GAAAt0D,KADAR,KACA40D,EAAAC,EACA,IAAAloD,GACA0xC,EAAAwW,GAAA5pD,MAHAjL,KAGAo8C,eAAA,MAAA7xC,OAAAqqD,GACAjoD,KAAA2xC,GACAjkC,EAAAogC,WAAA9tC,EAAA1M,GAIA,QAAA60D,GAAAF,EAAAC,GACA,GACAtb,GADAv5C,KACAo8C,cACAzvC,WAAAioD,EACAvW,EAAAwW,GAAAr0D,KAAA+4C,EAAA,MACA8E,EAAAwW,GAAAr0D,KAAA+4C,EAAA,KAAAqb,EACAjoD,KAAA2xC,GACAjkC,EAAAogC,WAAA9tC,EAAA1M,GAGA,QAAA80D,GAAAjvC,EAAA+uC,GAEA,IAAA/uC,EAAA,CACA,GAAAkvC,GAAA,GAAAtpD,OAAAoa,EAAA,GACAkvC,GAAAhI,MAAAlnC,EACAA,EAAAkvC,EAEA,GAAAroD,GAAA0xC,EAAAwW,GAAAr0D,KANAR,KAMAo8C,cAAAt2B,EACAnZ,KAAA2xC,GACAjkC,EAAAogC,WAAA9tC,EAAA1M,GAlCA,GAAA45C,GAAA/B,EAAA,UACAz9B,EAAA29B,EAAAuG,OACAF,EAAAxE,EAAAwE,SACAC,EAAAzE,EAAAyE,QAmCAtG,GAAAv2C,UAAAwzD,WAAAjd,EAAAv2C,UAAAyzD,QAAA,SAAAL,EACA52C,GACA,qBAAA42C,GAAA,CACA,GAAAM,GAAAL,WACA72C,GAAAld,OAAAkd,GAAA00C,SACAwC,EAAAR,GAEA30D,KAAA47C,MACAuZ,EACAJ,SAEA/0D,KACA60D,GAGA,MAAA70D,UAIGk7C,SAAA,KAAYka,IAAA,SAAAtd,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QAAA,WAUA,QAAA8wD,MA0DA,QAAAxY,GAAAyK,GACAA,IAAArH,GAXA,SAAAr7C,EAAA0iD,GACA,SAAA1iD,KAAAmrC,cAAA8M,EACA,SAAAvpC,GAAA,uFAEA,sBAAAg0C,GACA,SAAAh0C,GAAA,gCAAAorC,EAAA2D,YAAAiF,KAOAziD,KAAAyiD,GAEAziD,KAAA87C,UAAA,EACA97C,KAAAq1D,4BACAr1D,KAAAs1D,0BACAt1D,KAAAu1D,iBACAv1D,KAAAw1D,kBACAx1D,KAAAy1D,qBAAAhT,GACAziD,KAAAyhD,kBACAzhD,KAAAqpD,WAAA,iBAAArpD,MAqnBA,QAAA01D,GAAA/gC,GAA0B30B,KAAAo4C,QAAA2D,iBAAApnB,GAC1B,QAAAghC,GAAAhhC,GAAyB30B,KAAAo4C,QAAA6Z,gBAAAt9B,MA4CzB,QAAAihC,GAAAxqD,GACA,GAAAzJ,GAAA,GAAAq2C,GAAAoD,EACAz5C,GAAA0zD,qBAAAjqD,EACAzJ,EAAA2zD,mBAAAlqD,EACAzJ,EAAA4zD,UAAAnqD,EACAzJ,EAAA6zD,WAAApqD,EArvBA,GAaAy6C,GAbAgQ,EAAA,WACA,UAAApnD,GAAA,wEAEAqnD,EAAA,WACA,UAAA9d,GAAA+d,kBAAA/1D,KAAAu8C,YAEA6B,EAAA,SAAAhiC,GACA,MAAA47B,GAAA0K,OAAA,GAAAj0C,GAAA2N,KAGA45C,KACAnc,EAAA/B,EAAA,SAIA+N,GADAhM,EAAAS,OACA,WACA,GAAA3tC,GAAAgrC,EAAAxkC,MAEA,iBADAxG,MAAA,MACAA,GAGA,WACA,aAGAktC,EAAAkK,kBAAA/L,EAAA,aAAA6N,EAEA,IAAAuH,GAAAtV,EAAA,SACAW,EAAAX,EAAA,WACAz9B,EAAA,GAAAo+B,EACA2U,GAAApsD,eAAAg3C,EAAA,UAAuC5sC,MAAAiP,GACvC,IAAAsS,GAAAmrB,EAAA,YACArpC,EAAAupC,EAAAvpC,UAAAke,EAAAle,SACAupC,GAAA0V,WAAA/gC,EAAA+gC,UACA,IAAAH,GAAAvV,EAAAuV,kBAAA5gC,EAAA4gC,iBACAvV,GAAAwV,aAAA7gC,EAAA6gC,aACAxV,EAAA+U,iBAAApgC,EAAAogC,iBACA/U,EAAA+V,eAAAphC,EAAAogC,iBACA/U,EAAAyV,eAAA9gC,EAAA8gC,cACA,IAAArS,GAAA,aACA6a,KACAtV,KACAtF,EAAAvD,EAAA,eAAAE,EAAAoD,GACA+C,EACArG,EAAA,mBAAAE,EAAAoD,EACAC,EAAA+C,EAAAoS,GACArP,EAAArJ,EAAA,aAAAE,GAEAke,EAAA/U,EAAAlW,OACA5uB,EAAAy7B,EAAA,mBAAAE,EAAAmJ,GAEA8N,GADA5yC,EAAAglC,cAEAvJ,EAAA,aAAAE,EAAAqD,EAAAsF,IACAiP,EAAA9X,EAAA,kBAAA6I,GACAwV,EAAAre,EAAA,cACAwG,EAAAzE,EAAAyE,SACAD,EAAAxE,EAAAwE,QA0sBA,OAjrBArG,GAAAv2C,UAAAoM,SAAA,WACA,0BAGAmqC,EAAAv2C,UAAAsqD,OAAA/T,EAAAv2C,UAAA20D,MAAA,SAAA9c,GACA,GAAAvrC,GAAAhD,UAAA/H,MACA,IAAA+K,EAAA,GACA,GACA1N,GADAgwD,EAAA,GAAA7iD,OAAAO,EAAA,GACAnE,EAAA,CACA,KAAAvJ,EAAA,EAAmBA,EAAA0N,EAAA,IAAa1N,EAAA,CAChC,GAAAqxC,GAAA3mC,UAAA1K,EACA,KAAAw5C,EAAAjH,SAAAlB,GAGA,MAAA0M,GAAA,0DACAvE,EAAA2D,YAAA9L,GAHA2e,GAAAzmD,KAAA8nC,EAQA,MAFA2e,GAAArtD,OAAA4G,EACA0vC,EAAAvuC,UAAA1K,GACAL,KAAA+vD,YAAAH,EAAAS,EAAA/W,EAAAt5C,OAEA,MAAAA,MAAA+vD,YAAAzW,IAGAtB,EAAAv2C,UAAA40D,QAAA,WACA,MAAAr2D,MAAA47C,MAAAka,EACAA,SAAA91D,cAGAg4C,EAAAv2C,UAAAsuD,KAAA,SAAAuG,EAAAC,GACA,GAAAl6C,EAAA4nC,YAAAl5C,UAAA/H,OAAA,GACA,kBAAAszD,IACA,kBAAAC,GAAA,CACA,GAAAn6C,GAAA,kDACAy9B,EAAA2D,YAAA8Y,EACAvrD,WAAA/H,OAAA,IACAoZ,GAAA,KAAAy9B,EAAA2D,YAAA+Y,IAEAv2D,KAAA2+C,MAAAviC,GAEA,MAAApc,MAAA47C,MAAA0a,EAAAC,aAAAxY,YAGA/F,EAAAv2C,UAAA41B,KAAA,SAAAi/B,EAAAC,GAEAv2D,KAAA47C,MAAA0a,EAAAC,aAAAxY,WACAyY,eAGAxe,EAAAv2C,UAAAkxD,OAAA,SAAArZ,GACA,wBAAAA,GACA8E,EAAA,gCAAAvE,EAAA2D,YAAAlE,IAEAt5C,KAAAusD,MAAA3Q,MAAAtC,aAAAyE,GAAAkY,WAGAje,EAAAv2C,UAAAg1D,OAAA,WACA,GAAA9pD,IACA02C,eACAsM,cACA+G,wBACAC,uBASA,OAPA32D,MAAAqjD,eACA12C,EAAA+pD,iBAAA12D,KAAAoL,QACAuB,EAAA02C,gBACKrjD,KAAA2vD,eACLhjD,EAAAgqD,gBAAA32D,KAAA8lB,SACAnZ,EAAAgjD,eAEAhjD,GAGAqrC,EAAAv2C,UAAA8qD,IAAA,WAIA,MAHAxhD,WAAA/H,OAAA,GACAhD,KAAA2+C,MAAA,wDAEA,GAAAR,GAAAn+C,MAAAo4C,WAGAJ,EAAAv2C,UAAA6a,MAAA,SAAAg9B,GACA,MAAAt5C,MAAA+rD,OAAAlS,EAAA+c,wBAAAtd,IAGAtB,EAAA6e,kBAAAl3D,EAAAD,QAEAs4C,EAAA8e,GAAA,SAAAlC,GACA,MAAAA,aAAA5c,IAGAA,EAAA+e,SAAA/e,EAAAgf,aAAA,SAAA1d,GACA,GAAA3sC,GAAA,GAAAqrC,GAAAoD,EACAzuC,GAAA46C,oBACA,IAAAiN,GAAAzpD,UAAA/H,OAAA,KAAAjC,OAAAgK,UAAA,IAAAypD,UAEAh4C,EAAA6hC,EAAA/E,GAAA6c,EAAAxpD,EAAA6nD,GAKA,OAJAh4C,KAAA8hC,GACA3xC,EAAAslD,gBAAAz1C,EAAAvc,MAEA0M,EAAAsqD,iBAAAtqD,EAAAuqD,sBACAvqD,GAGAqrC,EAAAuU,IAAA,SAAArU,GACA,UAAAiG,GAAAjG,GAAAE,WAGAJ,EAAAmf,KAAA,SAAApuD,GACA,GAAA4D,GAAA0uC,EAAAtyC,EAOA,OANA4D,aAAAqrC,MACArrC,EAAA,GAAAqrC,GAAAoD,IACAmM,qBACA56C,EAAAyqD,gBACAzqD,EAAA2oD,mBAAAvsD,GAEA4D,GAGAqrC,EAAA4E,QAAA5E,EAAAqf,UAAArf,EAAAmf,KAEAnf,EAAA0K,OAAA1K,EAAAsf,SAAA,SAAAxxC,GACA,GAAAnZ,GAAA,GAAAqrC,GAAAoD,EAGA,OAFAzuC,GAAA46C,qBACA56C,EAAAslD,gBAAAnsC,MACAnZ,GAGAqrC,EAAA8B,aAAA,SAAAR,GACA,qBAAAA,GACA,SAAA7qC,GAAA,gCAAAorC,EAAA2D,YAAAlE,GAEA,OAAAj/B,GAAAy/B,aAAAR,IAGAtB,EAAAv2C,UAAAm6C,MAAA,SACA0a,EACAC,EACA9hC,EAAA8kB,EACAge,GAEA,GAAAC,YAAAD,EACAnf,EAAAof,EAAAD,EAAA,GAAAvf,GAAAoD,GACAY,EAAAh8C,KAAAu8C,UACA4V,EAAAnW,EAAAF,SAEA0b,KACApf,EAAA8D,eAAAl8C,KAAA,GACAo4C,EAAAmP,8BACAhO,GACA,YAAAv5C,KAAA87C,aAEAvC,EADA,aAAA4Y,GACAnyD,KAAAo8C,cAEAJ,IAAAh8C,iBAAA08C,UAGA18C,KAAAqpD,WAAA,iBAAArpD,KAAAo4C,GAGA,IAAAjlC,GAAA0yC,GACA,iBAAAsM,GAAA,CACA,GAAAp2C,GAAA3Q,EAAAqsD,EAAAzb,EAAA0b,iBACA,cAAAvF,IACA/mD,EAAA4wC,EAAAsZ,mBACAv5C,EAAAu6C,GACS,aAAAnE,IACT/mD,EAAA4wC,EAAAqZ,qBACAt5C,EAAAw6C,EACAva,EAAAiL,+BAEAwQ,EAAAzb,EAAA2b,uCACAvsD,EAAA,GAAAmiD,GAAA,8BACAvR,EAAAsE,kBAAAl1C,GACA2Q,EAAAw6C,GAGAl8C,EAAAsgC,OAAA8c,EAAAzb,GACAjgC,QAAA,OAAA5I,EAAA4I,EACA,kBAAAA,IACA89B,EAAAsN,WAAAh0C,EAAA4I,GACAq8B,UACAmB,WACAnuC,cAGA4wC,GAAA4b,cAAAtB,EAAAC,EAAAne,EAAAmB,EAAApmC,EAGA,OAAAilC,IAGAJ,EAAAv2C,UAAAm+C,QAAA,WACA,aAAA5/C,KAAA87C,WAGA9D,EAAAv2C,UAAAw1D,cAAA,WACA,qBAAAj3D,KAAA87C,YAGA9D,EAAAv2C,UAAAq9C,aAAA,WACA,2BAAA9+C,KAAA87C,YAGA9D,EAAAv2C,UAAAo2D,WAAA,SAAA9pD,GACA/N,KAAA87C,WAAA,MAAA97C,KAAA87C,UACA,MAAA/tC,GAGAiqC,EAAAv2C,UAAA21D,cAAA,WACAp3D,KAAA87C,UAAA,SAAA97C,KAAA87C,UACA97C,KAAAqpD,WAAA,mBAAArpD,OAGAg4C,EAAAv2C,UAAAq2D,aAAA,WACA93D,KAAA87C,UAAA,SAAA97C,KAAA87C,UACA97C,KAAAqpD,WAAA,kBAAArpD,OAGAg4C,EAAAv2C,UAAAs2D,cAAA,WACA/3D,KAAA87C,UAAA,SAAA97C,KAAA87C,UACA97C,KAAAqpD,WAAA,kBAAArpD,OAGAg4C,EAAAv2C,UAAA+0D,YAAA,WACAx2D,KAAA87C,UAAA,QAAA97C,KAAA87C,WAGA9D,EAAAv2C,UAAAu2D,SAAA,WACA,eAAAh4D,KAAA87C,WAAA,GAGA9D,EAAAv2C,UAAAw2D,gBAAA,WACAj4D,KAAA87C,WAAA,MAAA97C,KAAA87C,WAGA9D,EAAAv2C,UAAAi+C,cAAA,WACA1/C,KAAA87C,UAAA,MAAA97C,KAAA87C,UACA97C,KAAAqpD,WAAA,mBAAArpD,OAGAg4C,EAAAv2C,UAAA09C,oBAAA,WACAn/C,KAAA87C,UAAA,QAAA97C,KAAA87C,WAGA9D,EAAAv2C,UAAAy1D,oBAAA,WACA78C,EAAA2/B,uBACAh6C,KAAA87C,UAAA,UAAA97C,KAAA87C,YAGA9D,EAAAv2C,UAAAy2D,YAAA,SAAArsD,GACA,GAAAc,GAAA,IAAAd,EAAA7L,KAAAw1D,WAAAx1D,KACA,EAAA6L,EAAA,IACA,IAAAc,IAAAqpD,EAEK,gBAAArpD,GAAA3M,KAAA28C,WACL38C,KAAAo8C,cAEAzvC,GAGAqrC,EAAAv2C,UAAA02D,WAAA,SAAAtsD,GACA,MAAA7L,MACA,EAAA6L,EAAA,MAGAmsC,EAAAv2C,UAAA22D,sBAAA,SAAAvsD,GACA,MAAA7L,MACA,EAAA6L,EAAA,MAGAmsC,EAAAv2C,UAAA42D,oBAAA,SAAAxsD,GACA,MAAA7L,MACA,EAAA6L,EAAA,MAGAmsC,EAAAv2C,UAAA26C,YAAA,aAEApE,EAAAv2C,UAAA62D,kBAAA,SAAAC,GACAA,EAAAzc,SAAA,IACA0c,GAAAD,EAAAlD,qBACA3S,EAAA6V,EAAAjD,mBACAld,EAAAmgB,EAAAhD,UACAhc,EAAAgf,EAAAL,YAAA,YACA3e,MAAAyc,GACAh2D,KAAA43D,cAAAY,EAAA9V,EAAAtK,EAAAmB,EAAA,OAGAvB,EAAAv2C,UAAAg3D,mBAAA,SAAAF,EAAA1sD,GACA,GAAA2sD,GAAAD,EAAAH,sBAAAvsD,GACA62C,EAAA6V,EAAAF,oBAAAxsD,GACAusC,EAAAmgB,EAAAJ,WAAAtsD,GACA0tC,EAAAgf,EAAAL,YAAArsD,YACA0tC,MAAAyc,GACAh2D,KAAA43D,cAAAY,EAAA9V,EAAAtK,EAAAmB,EAAA,OAGAvB,EAAAv2C,UAAAm2D,cAAA,SACAY,EACA9V,EACAtK,EACAmB,EACApmC,GAEA,GAAAtH,GAAA7L,KAAA4/C,SAOA,IALA/zC,GAAA,QACAA,EAAA,EACA7L,KAAA63D,WAAA,IAGA,IAAAhsD,EACA7L,KAAAu1D,UAAAnd,EACAp4C,KAAAw1D,WAAAjc,EACA,kBAAAif,KACAx4D,KAAAq1D,qBACA,OAAAliD,EAAAqlD,EAAA3e,EAAAsN,WAAAh0C,EAAAqlD,IAEA,kBAAA9V,KACA1iD,KAAAs1D,mBACA,OAAAniD,EAAAuvC,EAAA7I,EAAAsN,WAAAh0C,EAAAuvC,QAEK,CACL,GAAAjN,GAAA,EAAA5pC,EAAA,CACA7L,MAAAy1C,EAAA,GAAA2C,EACAp4C,KAAAy1C,EAAA,GAAA8D,EACA,kBAAAif,KACAx4D,KAAAy1C,EAAA,GACA,OAAAtiC,EAAAqlD,EAAA3e,EAAAsN,WAAAh0C,EAAAqlD,IAEA,kBAAA9V,KACA1iD,KAAAy1C,EAAA,GACA,OAAAtiC,EAAAuvC,EAAA7I,EAAAsN,WAAAh0C,EAAAuvC,IAIA,MADA1iD,MAAA63D,WAAAhsD,EAAA,GACAA,GAGAmsC,EAAAv2C,UAAA2wD,OAAA,SAAAsG,EAAA9qD,GACA5N,KAAA43D,yBAAA7Z,GAAAnwC,EAAA8qD,EAAA,OAGA1gB,EAAAv2C,UAAAs6C,iBAAA,SAAA3wC,EAAAutD,GACA,iBAAA34D,KAAA87C,WAAA,CACA,GAAA1wC,IAAApL,KACA,MAAAA,MAAAiyD,gBAAA4D,OACA,IAAAvZ,GAAAjB,EAAAjwC,EAAApL,KACA,MAAAs8C,YAAAtE,IAAA,MAAAh4C,MAAAyxD,SAAArmD,EAEAutD,IAAA34D,KAAAk8C,eAAAI,EAAA,EAEA,IAAAlE,GAAAkE,EAAAC,SAEA,IAAAnE,IAAAp4C,KAAA,CAKA,GAAAmyD,GAAA/Z,EAAA0D,SACA,iBAAAqW,GAAA,CACA,GAAApkD,GAAA/N,KAAA4/C,SACA7xC,GAAA,GAAAqqC,EAAAkgB,kBAAAt4D,KACA,QAAAK,GAAA,EAAuBA,EAAA0N,IAAS1N,EAChC+3C,EAAAqgB,mBAAAz4D,KAAAK,EAEAL,MAAA+3D,gBACA/3D,KAAA63D,WAAA,GACA73D,KAAA44D,aAAAxgB,OACK,iBAAA+Z,GACLnyD,KAAAyxD,SAAArZ,EAAA6T,cACK,iBAAAkG,GACLnyD,KAAAw7C,QAAApD,EAAA0T,eACK,CACL,GAAAhmC,GAAA,GAAAynC,GAAA,6BACAnV,GAAAkI,kBAAAx6B,GACA9lB,KAAAw7C,QAAA11B,QArBA9lB,MAAAw7C,QAAAqa,OAyBA7d,EAAAv2C,UAAAwwD,gBACA,SAAAnsC,EAAA+yC,EAAAC,GACA,GAAAzlB,GAAAwG,EAAAkf,kBAAAjzC,GACAkzC,EAAA3lB,IAAAvtB,CACA,KAAAkzC,IAAAF,GAAAz8C,EAAA4nC,WAAA,CACA,GAAAhoC,GAAA,4CACA49B,EAAA2D,YAAA13B,EACA9lB,MAAA2+C,MAAA1iC,MAEAjc,KAAAsgD,kBAAAjN,IAAAwlB,GAAAG,GACAh5D,KAAAw7C,QAAA11B,IAGAkyB,EAAAv2C,UAAAg0D,qBAAA,SAAAhT,GACA,GAAAA,IAAArH,EAAA,CACA,GAAAhD,GAAAp4C,IACAA,MAAAunD,qBACAvnD,KAAA0hD,cACA,IAAAmX,MACAtwD,EAAAvI,KAAAmpD,SAAA1G,EAAA,SAAAr3C,GACAgtC,EAAA2D,iBAAA3wC,IACK,SAAA0a,GACLsyB,EAAA6Z,gBAAAnsC,EAAA+yC,IAEAA,MACA74D,KAAA2hD,uBAEAp5C,GACA6vC,EAAA6Z,gBAAA1pD,QAIAyvC,EAAAv2C,UAAAw3D,0BAAA,SACAl9C,EAAAw9B,EAAAnuC,EAAAgtC,GAEA,GAAA+Z,GAAA/Z,EAAA0D,SACA,cAAAqW,GAAA,CACA/Z,EAAAsJ,cACA,IAAA7xC,EACA0pC,KAAA0c,EACA7qD,GAAA,gBAAAA,GAAApI,OAKA6M,EAAAwuC,EAAAtiC,GAAA9Q,MAAAjL,KAAAo8C,cAAAhxC,IAJAyE,EAAAyuC,GACAr+C,EAAA,GAAAwO,GAAA,iCACAorC,EAAA2D,YAAApyC,IAKAyE,EAAAwuC,EAAAtiC,GAAAvb,KAAA+4C,EAAAnuC,EAEA,IAAAk9C,GAAAlQ,EAAAuJ,aAEA,YADAwQ,EAAA/Z,EAAA0D,cAGAjsC,IAAA8wC,EACAvI,EAAAoD,QAAApwC,GACKyE,IAAAyuC,EACLlG,EAAA6Z,gBAAApiD,EAAA5P,OAEAoc,EAAAkuC,sBAAA16C,EAAAy4C,EAAA,GAAAlQ,EAAAp4C,MACAo4C,EAAA2D,iBAAAlsC,OAIAmoC,EAAAv2C,UAAA86C,QAAA,WAEA,IADA,GAAA5vC,GAAA3M,KACA2M,EAAAmyC,gBAAAnyC,IAAAoyC,WACA,OAAApyC,IAGAqrC,EAAAv2C,UAAAs9C,UAAA,WACA,MAAA/+C,MAAAs1D,oBAGAtd,EAAAv2C,UAAAm3D,aAAA,SAAAxgB,GACAp4C,KAAAs1D,mBAAAld,GAGAJ,EAAAv2C,UAAAy3D,eAAA,SAAA9gB,EAAAr8B,EAAAw9B,EAAAnuC,GACA,GAAA+tD,GAAA/gB,YAAAJ,GACAma,EAAAnyD,KAAA87C,UACAsd,EAAA,cAAAjH,EACA,WAAAA,IACAgH,GAAA/gB,EAAAqI,0BAEAlH,YAAA0V,IACA1V,EAAAmW,oBACAnW,EAAA4V,cAAA/W,EACAiG,EAAAtiC,GAAAvb,KAAA+4C,EAAAnuC,KAAAkzC,GACAlG,EAAAoD,QAAA8C,EAAAr+C,IAES8b,IAAA+5C,EACT1d,EAAAqZ,SAAAqE,EAAAt1D,KAAA+4C,IACSA,YAAAiX,GACTjX,EAAAmY,kBAAAtZ,GACS+gB,GAAA/gB,YAAA+F,GACT/F,EAAAqH,UAEAlG,EAAAkF,UAEK,kBAAA1iC,GACLo9C,GAGAC,GAAAhhB,EAAA8e,sBACAl3D,KAAAi5D,0BAAAl9C,EAAAw9B,EAAAnuC,EAAAgtC,IAHAr8B,EAAAvb,KAAA+4C,EAAAnuC,EAAAgtC,GAKKmB,YAAAiX,GACLjX,EAAAgY,gBACA,aAAAY,GACA5Y,EAAAuY,kBAAA1mD,EAAAgtC,GAEAmB,EAAAwY,iBAAA3mD,EAAAgtC,IAGK+gB,IACLC,GAAAhhB,EAAA8e,sBACA,aAAA/E,GACA/Z,EAAAqZ,SAAArmD,GAEAgtC,EAAAoD,QAAApwC,KAKA4sC,EAAAv2C,UAAAk2D,uCAAA,SAAAvV,GACA,GAAArmC,GAAAqmC,EAAArmC,QACAq8B,EAAAgK,EAAAhK,QACAmB,EAAA6I,EAAA7I,SACAnuC,EAAAg3C,EAAAh3C,KACA,mBAAA2Q,GACAq8B,YAAAJ,GAGAh4C,KAAAi5D,0BAAAl9C,EAAAw9B,EAAAnuC,EAAAgtC,GAFAr8B,EAAAvb,KAAA+4C,EAAAnuC,EAAAgtC,GAIKA,YAAAJ,IACLI,EAAAoD,QAAApwC,IAIA4sC,EAAAv2C,UAAAi2D,kBAAA,SAAAtV,GACApiD,KAAAk5D,eAAA9W,EAAAhK,QAAAgK,EAAArmC,QAAAqmC,EAAA7I,SAAA6I,EAAAh3C,QAGA4sC,EAAAv2C,UAAA43D,gBAAA,SAAAt9C,EAAA3Q,EAAA+mD,GACA,GAAA/Z,GAAAp4C,KAAAu1D,UACAhc,EAAAv5C,KAAAk4D,YAAA,EACAl4D,MAAAu1D,iBACAv1D,KAAAw1D,kBACAx1D,KAAAk5D,eAAA9gB,EAAAr8B,EAAAw9B,EAAAnuC,IAGA4sC,EAAAv2C,UAAA63D,0BAAA,SAAAztD,GACA,GAAA4pC,GAAA,EAAA5pC,EAAA,CACA7L,MAAAy1C,EAAA,GACAz1C,KAAAy1C,EAAA,GACAz1C,KAAAy1C,EAAA,GACAz1C,KAAAy1C,EAAA,WAGAuC,EAAAv2C,UAAAgwD,SAAA,SAAArmD,GACA,GAAA+mD,GAAAnyD,KAAA87C,SACA,iBAAAqW,KAAA,KACA,GAAA/mD,IAAApL,KAAA,CACA,GAAAwmB,GAAAqvC,GAEA,OADA71D,MAAAsgD,kBAAA95B,GACAxmB,KAAAw7C,QAAAh1B,GAEAxmB,KAAAo3D,gBACAp3D,KAAAs1D,mBAAAlqD,GAEA,MAAA+mD,GAAA,IACA,cAAAA,GACAnyD,KAAA66C,kBAEAxgC,EAAAugC,eAAA56C,SAKAg4C,EAAAv2C,UAAA+5C,QAAA,SAAA11B,GACA,GAAAqsC,GAAAnyD,KAAA87C,SACA,iBAAAqW,KAAA,KAIA,GAHAnyD,KAAA83D,eACA93D,KAAAq1D,qBAAAvvC,EAEA9lB,KAAAg4D,WACA,MAAA39C,GAAAggC,WAAAv0B,EAAA+zB,EAAAS,SAGA,MAAA6X,GAAA,EACA93C,EAAAugC,eAAA56C,MAEAA,KAAAsmD,oCAIAtO,EAAAv2C,UAAA83D,iBAAA,SAAAxrD,EAAA3C,GACA,OAAA/K,GAAA,EAAmBA,EAAA0N,EAAS1N,IAAA,CAC5B,GAAA0b,GAAA/b,KAAAo4D,sBAAA/3D,GACA+3C,EAAAp4C,KAAAm4D,WAAA93D,GACAk5C,EAAAv5C,KAAAk4D,YAAA73D,EACAL,MAAAs5D,0BAAAj5D,GACAL,KAAAk5D,eAAA9gB,EAAAr8B,EAAAw9B,EAAAnuC,KAIA4sC,EAAAv2C,UAAA+3D,gBAAA,SAAAzrD,EAAA+X,GACA,OAAAzlB,GAAA,EAAmBA,EAAA0N,EAAS1N,IAAA,CAC5B,GAAA0b,GAAA/b,KAAAq4D,oBAAAh4D,GACA+3C,EAAAp4C,KAAAm4D,WAAA93D,GACAk5C,EAAAv5C,KAAAk4D,YAAA73D,EACAL,MAAAs5D,0BAAAj5D,GACAL,KAAAk5D,eAAA9gB,EAAAr8B,EAAAw9B,EAAAzzB,KAIAkyB,EAAAv2C,UAAAo5C,gBAAA,WACA,GAAAsX,GAAAnyD,KAAA87C,UACA/tC,EAAA,MAAAokD,CAEA,IAAApkD,EAAA,GACA,gBAAAokD,GAAA,CACA,GAAArsC,GAAA9lB,KAAAq1D,oBACAr1D,MAAAq5D,gBAAAr5D,KAAAs1D,mBAAAxvC,EAAAqsC,GACAnyD,KAAAw5D,gBAAAzrD,EAAA+X,OACS,CACT,GAAA1a,GAAApL,KAAAs1D,kBACAt1D,MAAAq5D,gBAAAr5D,KAAAq1D,qBAAAjqD,EAAA+mD,GACAnyD,KAAAu5D,iBAAAxrD,EAAA3C,GAEApL,KAAA63D,WAAA,GAEA73D,KAAAkpD,0BAGAlR,EAAAv2C,UAAAolD,cAAA,WACA,GAAAsL,GAAAnyD,KAAA87C,SACA,qBAAAqW,GACAnyD,KAAAs1D,mBACK,aAAAnD,GACLnyD,KAAAq1D,6BAOArd,EAAAyhB,MAAAzhB,EAAA0hB,QAAA,WAGA,MAFAr9C,GAAAssB,WAAA,gCAGAyP,QAFA,GAAAJ,GAAAoD,GAGAwB,QAAA8Y,EACAhT,OAAAiT,IAIA9b,EAAAkK,kBAAA/L,EACA,2BACA6d,GAEA/d,EAAA,YAAAE,EAAAoD,EAAAC,EAAA+C,EACA/hC,GACAy7B,EAAA,UAAAE,EAAAoD,EAAAC,EAAAh/B,GACAy7B,EAAA,YAAAE,EAAAmG,EAAAC,EAAA/hC,GACAy7B,EAAA,oBAAAE,GACAF,EAAA,4BAAAE,GACAF,EAAA,UACAE,EAAAmG,EAAA9C,EAAAD,EAAA/gC,EAAAwrC,GACA7N,YACAA,EAAA/zC,QAAA,QACA6zC,EAAA,YAAAE,EAAAmG,EAAAC,EAAA/C,EAAAD,EAAA/+B,GACAy7B,EAAA,iBAAAE,GACAF,EAAA,cAAAE,EAAAoG,EAAA/C,EAAA6a,EAAA9a,EAAA/+B,GACAy7B,EAAA,eAAAE,EAAAoD,EAAA/+B,GACAy7B,EAAA,mBAAAE,EAAAoG,EAAAhD,EAAAC,EAAAmV,EAAAn0C,GACAy7B,EAAA,gBAAAE,GACAF,EAAA,kBAAAE,EAAAoD,GACAtD,EAAA,cAAAE,EAAAmG,EAAA9C,EAAA+C,GACAtG,EAAA,aAAAE,EAAAoD,EAAAC,EAAA+C,GACAtG,EAAA,eAAAE,EAAAmG,EAAAC,EAAA/C,EAAAD,EAAA/+B,GACAy7B,EAAA,eAAAE,EAAAmG,EAAA9hC,GACAy7B,EAAA,aAAAE,EAAAmG,EAAAC,GACAtG,EAAA,eAAAE,EAAAoD,GACAtD,EAAA,aAAAE,EAAAoD,GACAtD,EAAA,YAAAE,GAEA6B,EAAA8f,iBAAA3hB,GACA6B,EAAA8f,iBAAA3hB,EAAAv2C,WAUAm0D,GAAettD,EAAA,IACfstD,GAAexlD,EAAA,IACfwlD,GAAel1D,EAAA,IACfk1D,EAAA,GACAA,EAAA,cACAA,UACAA,MACAA,EAAA,GAAA5d,GAAAoD,IACA/+B,EAAAyuC,UAAArS,EAAAmB,eAAAC,EAAAkR,eACA/S,KAIG4hB,WAAA,EAAAC,UAAA,EAAAC,SAAA,EAAAC,gBAAA,EAAAC,WAAA,EAAA1J,iBAAA,EAAA2J,YAAA,EAAAC,kBAAA,EAAAC,mBAAA,GAAAC,YAAA,GAAA9O,WAAA,GAAArK,QAAA,GAAAoZ,cAAA,GAAAC,YAAA,GAAAC,kBAAA,GAAAC,SAAA,GAAAC,WAAA,GAAAC,WAAA,GAAAC,aAAA,GAAAC,eAAA,GAAAC,kBAAA,GAAAC,iBAAA,GAAAC,aAAA,GAAAC,YAAA,GAAAC,cAAA,GAAAC,cAAA,GAAAC,YAAA,GAAAC,2BAAA,GAAAC,cAAA,GAAAC,cAAA,GAAAC,aAAA,GAAArgB,SAAA,KAA0gBsgB,IAAA,SAAA1jB,EAAAn4C,EAAAD,GAC7gB,YACAC,GAAAD,QAAA,SAAAs4C,EAAAoD,EAAAC,EACA+C,EAAAoS,GAYA,QAAArS,GAAAlnB,GACA,GAAAmhB,GAAAp4C,KAAA8wD,SAAA,GAAA9Y,GAAAoD,EACAnkB,aAAA+gB,IACAI,EAAA8D,eAAAjlB,EAAA,GAEAmhB,EAAAqE,aAAAz8C,MACAA,KAAA0zD,QAAAz8B,EACAj3B,KAAA4/C,QAAA,EACA5/C,KAAA4zD,eAAA,EACA5zD,KAAAyzD,cAAA,GApBA,GAAA5Z,GAAA/B,EAAA,SAoLA,OAnLA+B,GAAAlsC,QAqBAksC,EAAAyP,SAAAnL,EAAAqS,GAEArS,EAAA18C,UAAAuB,OAAA,WACA,MAAAhD,MAAA4/C,SAGAzB,EAAA18C,UAAA22C,QAAA,WACA,MAAAp4C,MAAA8wD,UAGA3S,EAAA18C,UAAAgyD,MAAA,QAAAhyC,GAAAgT,EAAAgnC,GACA,GAAAxkC,GAAAokB,EAAAr7C,KAAA0zD,QAAA1zD,KAAA8wD,SACA,IAAA75B,YAAA+gB,GAAA,CAEA,GAAAma,IADAl7B,IAAAslB,WACAT,SAIA,IAFA97C,KAAA0zD,QAAAz8B,EAEA,aAAAk7B,GAEA,MADAnyD,MAAA8wD,SAAAoG,sBACAjgC,EAAA2kB,MACAn6B,EACAzhB,KAAAw7C,eAEAx7C,KACAy7D,EAES,iBAAAtJ,GAEA,oBAAAA,GACTnyD,KAAAw7C,QAAAvkB,EAAA60B,WAEA9rD,KAAAy/C,SAJAxoB,KAAAg1B,SAQA,WADAh1B,EAAA4iB,EAAA6hB,QAAAzkC,IAQA,IAAAA,EAAAj0B,OASAhD,KAAA27D,SAAA1kC,IARA,IAAAwkC,EACAz7D,KAAA47D,qBAGA57D,KAAA6zD,SAnEA,SAAAe,GACA,OAAAA,GACA,eACA,gBACA,kBAAAjhC,OA+DA8nC,QAZA,CACA,GAAAj1C,GAAA43B,EACA,oDAAAvE,EAAA2D,YAAAvmB,IAAAnR,QACA9lB,MAAA8wD,SAAAmB,gBAAAzrC,QAgBA23B,EAAA18C,UAAAk6D,SAAA,SAAA1kC,GACA,GAAAlpB,GAAA/N,KAAA67D,gBAAA5kC,EAAAj0B,OACAhD,MAAA4/C,QAAA7xC,EACA/N,KAAA0zD,QAAA1zD,KAAA87D,mBAAA,GAAAtuD,OAAAO,GAAA/N,KAAA0zD,OAIA,QAHAl3C,GAAAxc,KAAA8wD,SACAiL,KACA5J,EAAA,KACA9xD,EAAA,EAAmBA,EAAA0N,IAAS1N,EAAA,CAC5B,GAAAi8C,GAAAjB,EAAApkB,EAAA52B,GAAAmc,EAIA21C,GAFA7V,YAAAtE,IACAsE,IAAAC,WACAT,UAEA,KAGAigB,EACA,OAAA5J,GACA7V,EAAA+J,8BAES,OAAA8L,EACT,aAAAA,IACA7V,EAAA8V,OAAApyD,KAAAK,GACAL,KAAA0zD,QAAArzD,GAAAi8C,GAEAyf,EADa,aAAA5J,GACbnyD,KAAA8xD,kBAAAxV,EAAA2P,SAAA5rD,GACa,aAAA8xD,GACbnyD,KAAA+xD,iBAAAzV,EAAAwP,UAAAzrD,GAEAL,KAAA0xD,kBAAArxD,GAGA07D,EAAA/7D,KAAA8xD,kBAAAxV,EAAAj8C,GAGA07D,GAAAv/C,EAAA06C,uBAGA/Y,EAAA18C,UAAA8vD,YAAA,WACA,cAAAvxD,KAAA0zD,SAGAvV,EAAA18C,UAAAoyD,SAAA,SAAAzoD,GACApL,KAAA0zD,QAAA,KACA1zD,KAAA8wD,SAAAW,SAAArmD,IAGA+yC,EAAA18C,UAAAg+C,QAAA,YACAz/C,KAAAuxD,eAAAvxD,KAAA8wD,SAAAlS,mBACA5+C,KAAA0zD,QAAA,KACA1zD,KAAA8wD,SAAArR,YAGAtB,EAAA18C,UAAA+5C,QAAA,SAAA11B,GACA9lB,KAAA0zD,QAAA,KACA1zD,KAAA8wD,SAAAmB,gBAAAnsC,OAGAq4B,EAAA18C,UAAAqwD,kBAAA,SAAA1mD,EAAAS,GAGA,MAFA7L,MAAA0zD,QAAA7nD,GAAAT,IACApL,KAAA4zD,gBACA5zD,KAAA4/C,UACA5/C,KAAA6zD,SAAA7zD,KAAA0zD,cAMAvV,EAAA18C,UAAAiwD,kBAAA,WAEA,MADA1xD,MAAAy/C,cAIAtB,EAAA18C,UAAAswD,iBAAA,SAAAjsC,GAGA,MAFA9lB,MAAA4zD,iBACA5zD,KAAAw7C,QAAA11B,OAIAq4B,EAAA18C,UAAA8+C,iBAAA,WACA,IAAAvgD,KAAAuxD,cAAA,CACA,GAAAt6B,GAAAj3B,KAAA0zD,OAEA,IADA1zD,KAAAy/C,UACAxoB,YAAA+gB,GACA/gB,EAAAwnB,aAEA,QAAAp+C,GAAA,EAAuBA,EAAA42B,EAAAj0B,SAAmB3C,EAC1C42B,EAAA52B,YAAA23C,IACA/gB,EAAA52B,GAAAo+C,WAMAN,EAAA18C,UAAAq6D,iBAAA,WACA,UAGA3d,EAAA18C,UAAAo6D,gBAAA,SAAA9tD,GACA,MAAAA,IAGAowC,KAGGjD,SAAA,KAAY8gB,IAAA,SAAAlkB,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QAAA,SAAAs4C,EAAAoD,GA2BA,QAAA6gB,GAAAxrD,GACA,OAAAyrD,EAAA33D,KAAAkM,GAGA,QAAA0rD,GAAA7iB,GACA,IACA,WAAAA,EAAA8iB,kBAEA,MAAAn8D,GACA,UAIA,QAAAo8D,GAAAtzD,EAAA0H,EAAAsR,GACA,GAAA6yC,GAAA/a,EAAAyiB,yBAAAvzD,EAAA0H,EAAAsR,EACAw6C,EACA,SAAA3H,GAAAuH,EAAAvH,GAiBA,QAAA4H,GAAAzzD,EAAAgZ,EAAA06C,EAAArtB,GAGA,OAFArX,GAAA8hB,EAAA6iB,kBAAA3zD,GACA4D,KACAtM,EAAA,EAAmBA,EAAA03B,EAAA/0B,SAAiB3C,EAAA,CACpC,GAAAoQ,GAAAsnB,EAAA13B,GACA+K,EAAArC,EAAA0H,GACAksD,EAAAvtB,IAAAwtB,GACAA,EAAAnsD,EAAArF,EAAArC,EACA,mBAAAqC,IACA+wD,EAAA/wD,IACAixD,EAAAtzD,EAAA0H,EAAAsR,KACAqtB,EAAA3+B,EAAArF,EAAArC,EAAA4zD,IACAhwD,EAAA9J,KAAA4N,EAAArF,GAIA,MA/BA,UAAAuB,EAAAoV,EAAA06C,GACA,OAAAp8D,GAAA,EAAmBA,EAAAsM,EAAA3J,OAAgB3C,GAAA,GACnC,GAAAoQ,GAAA9D,EAAAtM,EACA,IAAAo8D,EAAAl4D,KAAAkM,GAEA,OADAosD,GAAApsD,EAAArG,QAAAqyD,EAAA,IACA7yD,EAAA,EAA2BA,EAAA+C,EAAA3J,OAAgB4G,GAAA,EAC3C,GAAA+C,EAAA/C,KAAAizD,EACA,SAAApuD,GAAA,qGACArE,QAAA,KAAA2X,MAsBApV,EAAAoV,EAAA06C,GACA9vD,EAgKA,QAAAmwD,GAAA/zD,EAAAgZ,EAAAqtB,EAAA2tB,EAAAvI,GAKA,OAJAiI,GAAA,GAAAO,QAAAC,EAAAl7C,GAAA,KACA4rC,EACA6O,EAAAzzD,EAAAgZ,EAAA06C,EAAArtB,GAEA/uC,EAAA,EAAA0N,EAAA4/C,EAAA3qD,OAAyC3C,EAAA0N,EAAS1N,GAAA,GAClD,GAAAoQ,GAAAk9C,EAAAttD,GACAi5C,EAAAqU,EAAAttD,EAAA,GACA68D,EAAAzsD,EAAAsR,CACA,IAAAg7C,IAAAI,EACAp0D,EAAAm0D,GACAC,EAAA1sD,EAAA2sD,EAAA3sD,EAAA6oC,EAAAv3B,EAAAyyC,OACS,CACT,GAAA6I,GAAAN,EAAAzjB,EAAA,WACA,MAAA6jB,GAAA1sD,EAAA2sD,EAAA3sD,EACA6oC,EAAAv3B,EAAAyyC,IAEA3a,GAAAkK,kBAAAsZ,EAAA,wBACAt0D,EAAAm0D,GAAAG,GAIA,MADAxjB,GAAA8f,iBAAA5wD,GACAA,EAjQA,GAAAq0D,MACAvjB,EAAA/B,EAAA,UACAqe,EAAAre,EAAA,cACAwlB,EAAAzjB,EAAAyjB,aACA/I,EAAA1a,EAAA0a,iBACA1W,EAAAhE,EAAAgE,YACApvC,EAAAqpC,EAAA,YAAArpC,UAEA8tD,GAA0BH,sBAU1BF,EAAA,GAAAc,QAAA,QARA,iBACA,OACA,YACA,SACA,SACA,YACA,qBAEAvyD,KAAA,WAEAmyD,EAAA,SAAAh8D,GACA,MAAAi5C,GAAAiE,aAAAl9C,IACA,MAAAA,EAAAyJ,OAAA,IACA,gBAAAzJ,GAuDAq8D,EAAA,SAAA7rD,GACA,MAAAA,GAAAhH,QAAA,gBAwJA+yD,EAAAtf,MArJA0f,GA2HA,SAAA9wD,EAAA8sC,EAAA9kB,EAAA6kB,EAAAkkB,EAAAhJ,GAMA,QAAA6I,KACA,GAAApM,GAAA1X,CACAA,KAAA6jB,IAAAnM,EAAAjxD,KACA,IAAAo4C,GAAA,GAAAJ,GAAAoD,EACAhD,GAAAmP,oBACA,IAAA1G,GAAA,gBAAAuH,IAAApoD,OAAAy9D,EACAz9D,KAAAooD,GAAA37C,EACA6sC,EAAA6c,EAAA/d,EAAAoc,EACA,KACA3T,EAAA51C,MAAAgmD,EAAAqM,EAAAvyD,UAAAuuC,IACS,MAAAr5C,GACTm4C,EAAA6Z,gBAAAsC,EAAAt0D,OAAA,GAGA,MADAm4C,GAAA6e,iBAAA7e,EAAA8e,sBACA9e,EAnBA,GAAAqlB,GAAA,WAAmC,MAAAz9D,SACnCooD,EAAA37C,CAqBA,OApBA,gBAAA27C,KACA37C,EAAA6sC,GAkBAO,EAAAkK,kBAAAsZ,EAAA,wBACAA,EAqCArlB,GAAA0lB,UAAA,SAAApkB,EAAAr7B,GACA,qBAAAq7B,GACA,SAAA7qC,GAAA,gCAAAorC,EAAA2D,YAAAlE,GAEA,IAAA6iB,EAAA7iB,GACA,MAAAA,EAGA,IAbA7sC,GAAA8sC,EAAAib,EAaAjb,YADAt7B,EAAAld,OAAAkd,IACAi1B,QAAAkqB,EAAAn/C,EAAAi1B,QACAshB,IAAAv2C,EAAAu2C,UACA7nD,GAfAF,EAeA6sC,EAfAC,EAeAA,EAfAib,EAeAA,EAdA2I,EAAA1wD,EAAA8sC,SACA9sC,EAAA,KAAA+nD,GAeA,OADA3a,GAAA8jB,gBAAArkB,EAAA3sC,EAAAsvD,GACAtvD,GAGAqrC,EAAA8kB,aAAA,SAAA9gB,EAAA/9B,GACA,qBAAA+9B,IAAA,gBAAAA,GACA,SAAAvtC,GAAA,+FAGA,IAAA+lD,MADAv2C,EAAAld,OAAAkd,IACAu2C,UACAzyC,EAAA9D,EAAA8D,MACA,iBAAAA,OAxRA,QAyRA,IAAAqtB,GAAAnxB,EAAAmxB,MACA,mBAAAA,OAAAwtB,EACA,IAAAG,GAAA9+C,EAAA8+C,WAGA,IAFA,kBAAAA,OAAAI,IAEAtjB,EAAAiE,aAAA/7B,GACA,SAAA2rC,YAAA,sEAIA,QADA31B,GAAA8hB,EAAA6iB,kBAAA1gB,GACA37C,EAAA,EAAmBA,EAAA03B,EAAA/0B,SAAiB3C,EAAA,CACpC,GAAA+K,GAAA4wC,EAAAjkB,EAAA13B,GACA,iBAAA03B,EAAA13B,IACAw5C,EAAA+jB,QAAAxyD,KACA0xD,EAAA1xD,EAAA3J,UAAAsgB,EAAAqtB,EAAA2tB,EACAvI,GACAsI,EAAA1xD,EAAA2W,EAAAqtB,EAAA2tB,EAAAvI,IAIA,MAAAsI,GAAA9gB,EAAAj6B,EAAAqtB,EAAA2tB,EAAAvI,OAKGlJ,WAAA,GAAAqP,aAAA,GAAAzf,SAAA,KAA0C2iB,IAAA,SAAA/lB,EAAAn4C,EAAAD,GAC7C,YACAC,GAAAD,QAAA,SACAs4C,EAAAmG,EAAA9C,EAAA+C,GAqCA,QAAA0f,GAAA/0D,GACA,GACAg1D,GADAC,IAEA,aAAAC,GAAAl1D,YAAAk1D,GACAF,EAAAG,EAAAn1D,GACAi1D,SACK,CACL,GAAAjmC,GAAAq1B,EAAAr1B,KAAAhvB,GACAgF,EAAAgqB,EAAA/0B,MACA+6D,GAAA,GAAAvwD,OAAA,EAAAO,EACA,QAAA1N,GAAA,EAAuBA,EAAA0N,IAAS1N,EAAA,CAChC,GAAAoQ,GAAAsnB,EAAA13B,EACA09D,GAAA19D,GAAA0I,EAAA0H,GACAstD,EAAA19D,EAAA0N,GAAA0C,GAGAzQ,KAAAgzD,aAAA+K,GACA/9D,KAAAm+D,OAAAH,EACAh+D,KAAAwzD,cAAAwK,GAAA,MAkCA,QAAAI,GAAAlmB,GACA,GAAAvrC,GACA0xD,EAAAhjB,EAAAnD,EAEA,OAAAtF,GAAAyrB,IAGA1xD,EADK0xD,YAAArmB,GACLqmB,EAAAziB,MACA5D,EAAAomB,iBAAArgB,kBAEA,GAAA+f,GAAAO,GAAAjmB,UAGAimB,YAAArmB,IACArrC,EAAAuvC,eAAAmiB,EAAA,GAEA1xD,GAXAyxC,EAAA,6EA7FA,GAGA6f,GAHApkB,EAAA/B,EAAA,UACAlF,EAAAiH,EAAAjH,SACAwa,EAAAtV,EAAA,QAEA,mBAAAnkB,OAAAsqC,EAAAtqC,IAEA,IAAAuqC,GAAA,WAIA,QAAAI,GAAAlzD,EAAAqF,GACAzQ,KAAA6L,GAAAT,EACApL,KAAA6L,EAAA6qB,GAAAjmB,EACA5E,IANA,GAAAA,GAAA,EACA6qB,EAAA,CAQA,iBAAA3sB,GACA2sB,EAAA3sB,EAAA2sB,KACA7qB,EAAA,CACA,IAAAc,GAAA,GAAAa,OAAA,EAAAzD,EAAA2sB,KAEA,OADA3sB,GAAAsE,QAAAiwD,EAAA3xD,GACAA,KAmCAktC,GAAAyP,SAAAwU,EAAA3f,GAEA2f,EAAAr8D,UAAAgyD,MAAA,aAEAqK,EAAAr8D,UAAAqwD,kBAAA,SAAA1mD,EAAAS,GAGA,GAFA7L,KAAA0zD,QAAA7nD,GAAAT,IACApL,KAAA4zD,gBACA5zD,KAAA4/C,QAAA,CACA,GAAAgV,EACA,IAAA50D,KAAAm+D,OACAvJ,EAzCA,SAAAmJ,GAGA,OAFApxD,GAAA,GAAAsxD,GACAj7D,EAAA+6D,EAAA/6D,OAAA,IACA3C,EAAA,EAAmBA,EAAA2C,IAAY3C,EAAA,CAC/B,GAAAoQ,GAAAstD,EAAA/6D,EAAA3C,GACA+K,EAAA2yD,EAAA19D,EACAsM,GAAA6oB,IAAA/kB,EAAArF,GAEA,MAAAuB,IAiCA3M,KAAA0zD,aACS,CACTkB,IAEA,QADA2J,GAAAv+D,KAAAgD,SACA3C,EAAA,EAAA0N,EAAA/N,KAAAgD,SAAgD3C,EAAA0N,IAAS1N,EACzDu0D,EAAA50D,KAAA0zD,QAAArzD,EAAAk+D,IAAAv+D,KAAA0zD,QAAArzD,GAIA,MADAL,MAAA6zD,SAAAe,MAGA,UAGAkJ,EAAAr8D,UAAAq6D,iBAAA,WACA,UAGAgC,EAAAr8D,UAAAo6D,gBAAA,SAAA9tD,GACA,MAAAA,IAAA,GAsBAiqC,EAAAv2C,UAAA28D,MAAA,WACA,MAAAA,GAAAp+D,OAGAg4C,EAAAomB,MAAA,SAAAlmB,GACA,MAAAkmB,GAAAlmB,OAIG+I,QAAA,GAAA/F,SAAA,KAAuBsjB,IAAA,SAAA1mB,EAAAn4C,EAAAD,GAC1B,YAQA,SAAAm5C,GAAA4lB,GACAz+D,KAAA0+D,UAAAD,EACAz+D,KAAA4/C,QAAA,EACA5/C,KAAA2+D,OAAA,EAGA9lB,EAAAp3C,UAAAm9D,oBAAA,SAAAloC,GACA,MAAA12B,MAAA0+D,UAAAhoC,GAGAmiB,EAAAp3C,UAAAk4C,SAAA,SAAA/rC,GACA,GAAA5K,GAAAhD,KAAAgD,QACAhD,MAAA6+D,eAAA77D,EAAA,GAEAhD,KADAA,KAAA2+D,OAAA37D,EAAAhD,KAAA0+D,UAAA,GACA9wD,EACA5N,KAAA4/C,QAAA58C,EAAA,GAGA61C,EAAAp3C,UAAAoB,KAAA,SAAAy2C,EAAAC,EAAA3rC,GACA,GAAA5K,GAAAhD,KAAAgD,SAAA,CACA,IAAAhD,KAAA4+D,oBAAA57D,GAIA,MAHAhD,MAAA25C,SAAAL,GACAt5C,KAAA25C,SAAAJ,OACAv5C,MAAA25C,SAAA/rC,EAGA,IAAAhE,GAAA5J,KAAA2+D,OAAA37D,EAAA,CACAhD,MAAA6+D,eAAA77D,EACA,IAAA87D,GAAA9+D,KAAA0+D,UAAA,CACA1+D,MAAA4J,EAAA,EAAAk1D,GAAAxlB,EACAt5C,KAAA4J,EAAA,EAAAk1D,GAAAvlB,EACAv5C,KAAA4J,EAAA,EAAAk1D,GAAAlxD,EACA5N,KAAA4/C,QAAA58C,GAGA61C,EAAAp3C,UAAA4qC,MAAA,WACA,GAAA0yB,GAAA/+D,KAAA2+D,OACAhyD,EAAA3M,KAAA++D,EAKA,OAHA/+D,MAAA++D,UACA/+D,KAAA2+D,OAAAI,EAAA,EAAA/+D,KAAA0+D,UAAA,EACA1+D,KAAA4/C,UACAjzC,GAGAksC,EAAAp3C,UAAAuB,OAAA,WACA,MAAAhD,MAAA4/C,SAGA/G,EAAAp3C,UAAAo9D,eAAA,SAAAnoC,GACA12B,KAAA0+D,UAAAhoC,GACA12B,KAAAg/D,UAAAh/D,KAAA0+D,WAAA,IAIA7lB,EAAAp3C,UAAAu9D,UAAA,SAAAP,GACA,GAAAQ,GAAAj/D,KAAA0+D,SACA1+D,MAAA0+D,UAAAD,EAhEA,SAAAS,EAAAC,EAAAC,EAAAC,EAAAtxD,GACA,OAAAnE,GAAA,EAAmBA,EAAAmE,IAASnE,EAC5Bw1D,EAAAx1D,EAAAy1D,GAAAH,EAAAt1D,EAkEA,GAjEAs1D,EAAAt1D,EAiEA,OAjEAu1D,IAiEAn/D,KAAA,EAAAA,KAAAi/D,EAHAj/D,KAAA2+D,OACA3+D,KAAA4/C,QACAqf,EAAA,IAIAt/D,EAAAD,QAAAm5C,OAEIymB,IAAA,SAAAxnB,EAAAn4C,EAAAD,GACJ,YACAC,GAAAD,QAAA,SACAs4C,EAAAoD,EAAAC,EAAA+C,GASA,QAAAmhB,GAAArnB,EAAA+G,GACA,GAAA3C,GAAAjB,EAAAnD,EAEA,IAAAoE,YAAAtE,GACA,MAAAwnB,GAAAljB,EAGA,YADApE,EAAA2B,EAAA6hB,QAAAxjB,IAEA,MAAAkG,GAAA,oDAAAvE,EAAA2D,YAAAtF,GAGA,IAAAvrC,GAAA,GAAAqrC,GAAAoD,YACA6D,GACAtyC,EAAAuvC,eAAA+C,EAAA,EAIA,QAFAuZ,GAAA7rD,EAAA8kD,SACA/O,EAAA/1C,EAAA6uC,QACAn7C,EAAA,EAAA0N,EAAAmqC,EAAAl1C,OAA0C3C,EAAA0N,IAAS1N,EAAA,CACnD,GAAAu0D,GAAA1c,EAAA73C,aAEAu0D,GAAAv0D,IAAA63C,KAIAF,EAAAmf,KAAAvC,GAAAhZ,MAAA4c,EAAA9V,SAAA/1C,EAAA,MAEA,MAAAA,GAlCA,GAAAktC,GAAA/B,EAAA,UAEA0nB,EAAA,SAAApnB,GACA,MAAAA,GAAA2X,KAAA,SAAA1gB,GACA,MAAAkwB,GAAAlwB,EAAA+I,KAiCAJ,GAAAunB,KAAA,SAAArnB,GACA,MAAAqnB,GAAArnB,WAGAF,EAAAv2C,UAAA89D,KAAA,WACA,MAAAA,GAAAv/D,iBAKGk7C,SAAA,KAAYukB,IAAA,SAAA3nB,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QAAA,SAAAs4C,EACAmG,EACAC,EACA/C,EACAD,EACA/+B,GAKA,QAAAqjD,GAAAxnB,EAAAoB,EAAAqmB,EAAAC,GACA5/D,KAAAgzD,aAAA9a,EACA,IAAA/kC,GAAA0yC,GACA7lD,MAAA6/D,IAAA,OAAA1sD,EAAAmmC,EAAAO,EAAAsN,WAAAh0C,EAAAmmC,YACAqmB,IACAA,EAAA3nB,EAAA4E,QAAA+iB,IACA/c,4BAAA5iD,MAEAA,KAAA8/D,cAAAH,EACA3/D,KAAA+/D,oBAAA,KAEA//D,KAAAggE,YADAJ,IAAAxkB,EACA5tC,MAAAxN,KAAA4/C,SACK,IAAAggB,EACL,YAIA5/D,KAAA8wD,SAAAvJ,qBACAvnD,KAAAwzD,eAAA,GA0FA,QAAAyM,GAAAC,EAAA7wB,GACArvC,KAAAqjD,cACAhU,EAAAwkB,SAAAqM,GAEA7wB,EAAAmM,QAAA0kB,GAIA,QAAA5T,GAAApU,EAAAoB,EAAAqmB,EAAAC,GACA,wBAAAtmB,GACA8E,EAAA,gCAAAvE,EAAA2D,YAAAlE,IAEA,GAAAomB,GAAAxnB,EAAAoB,EAAAqmB,EAAAC,GACAxnB,UAGA,QAAA+nB,GAAAC,GACApgE,KAAAogE,QACApgE,KAAAqvC,MAAAgxB,UAAAD,EACA,IAAAh1D,GAAAiwC,EAAAr7C,KAAAoL,MAAApL,KAAAqvC,MAAAyhB,SACA,OAAA1lD,aAAA4sC,IACAh4C,KAAAqvC,MAAA0wB,oBAAA30D,EACAA,EAAAwwC,MAAA0kB,aAAAviB,GAAA/9C,cAEAsgE,EAAA9/D,KAAAR,KAAAoL,GAIA,QAAAk1D,GAAAl1D,GACA,GAAAikC,GAAArvC,KAAAqvC,MACA+I,EAAA/I,EAAAyhB,SACAxX,EAAA+E,EAAAhP,EAAAwwB,IACAznB,GAAAsJ,cACA,IAAA/0C,IAEAA,WADA0iC,EAAA2wB,YACA1mB,EAAA94C,KAAA43C,EAAAgE,cAAAhxC,EAAApL,KAAA6L,MAAA7L,KAAAgD,QAEAs2C,EAAA94C,KAAA43C,EAAAgE,cACAp8C,KAAAogE,MAAAh1D,EAAApL,KAAA6L,MAAA7L,KAAAgD,kBAEAg1C,KACA3I,EAAA0wB,oBAAApzD,EAEA,IAAA27C,GAAAlQ,EAAAuJ,aAOA,OANAtlC,GAAAkuC,sBACA59C,EACA27C,WACAjZ,EAAA2wB,YAAA,gCACA5nB,GAEAzrC,EAlKA,GAAAk5C,GAAA7N,EAAA8N,WACAjM,EAAA/B,EAAA,UACAuG,EAAAxE,EAAAwE,QAsBAxE,GAAAyP,SAAAoW,EAAAvhB,GAEAuhB,EAAAj+D,UAAA4+D,UAAA,SAAAD,YACApgE,KAAAggE,aACA,OAAAhgE,KAAAggE,aACAI,IAAAhlB,GACAp7C,KAAAggE,YAAAn9D,KAAAu9D,IAIAV,EAAAj+D,UAAA8+D,cAAA,SAAAn1D,GAIA,MAHA,QAAApL,KAAAggE,aACAhgE,KAAAggE,YAAAn9D,KAAAuI,GAEApL,KAAAggE,aAGAN,EAAAj+D,UAAAgyD,MAAA,aAEAiM,EAAAj+D,UAAAm6D,mBAAA,WACA57D,KAAA6zD,kBAAA7zD,KAAAggE,YAAAhgE,KAAAggE,YACAhgE,KAAA8/D,gBAGAJ,EAAAj+D,UAAAq6D,iBAAA,WACA,UAGA4D,EAAAj+D,UAAAoyD,SAAA,SAAAzoD,GACApL,KAAA8wD,SAAA/U,iBAAA3wC,GACApL,KAAA0zD,QAAA,MAGAgM,EAAAj+D,UAAA8+C,iBAAA,SAAAigB,GACA,GAAAA,IAAAxgE,KAAA8/D,cAAA,MAAA9/D,MAAAy/C,SACAz/C,MAAAuxD,gBACAvxD,KAAAygE,oBACAzgE,KAAA+/D,8BAAA/nB,IACAh4C,KAAA+/D,oBAAAthB,SAEAz+C,KAAA8/D,wBAAA9nB,IACAh4C,KAAA8/D,cAAArhB,WAIAihB,EAAAj+D,UAAAk6D,SAAA,SAAA1kC,GACAj3B,KAAA0zD,QAAAz8B,CACA,IAAA7rB,GACA/K,EACA2C,EAAAi0B,EAAAj0B,MAWA,aAVAhD,KAAA8/D,eACA10D,EAAApL,KAAA8/D,cACAz/D,EAAA,IAEA+K,EAAA4sC,EAAA4E,QAAA3lB,EAAA,IACA52B,EAAA,GAGAL,KAAA+/D,oBAAA30D,GAEAA,EAAAukD,aACA,KAActvD,EAAA2C,IAAY3C,EAAA,CAC1B,GAAA+hD,IACAge,MAAA,KACAh1D,MAAA6rB,EAAA52B,GACAwL,MAAAxL,EACA2C,SACAqsC,MAAArvC,KAEAoL,KAAAwwC,MAAAukB,aAAApiB,GAAAqE,cAAArE,KAIA/9C,KAAAggE,cACA50D,IACAwwC,MAAA57C,KAAAugE,yBAAAxiB,GAAA/9C,cAEAoL,EAAAwwC,MAAAqkB,WAAA70D,EAAApL,OAGAg4C,EAAAv2C,UAAA6qD,OAAA,SAAAhT,EAAAqmB,GACA,MAAArT,GAAAtsD,KAAAs5C,EAAAqmB,EAAA,OAGA3nB,EAAAsU,OAAA,SAAApU,EAAAoB,EAAAqmB,EAAAC,GACA,MAAAtT,GAAApU,EAAAoB,EAAAqmB,EAAAC,OAyDG1kB,SAAA,KAAYwlB,IAAA,SAAA5oB,EAAAn4C,EAAAD,GACf,YACA,IACA05C,GADAS,EAAA/B,EAAA,UAEA6oB,EAAA,WACA,SAAAj1D,OAAA,mEAEAk1D,EAAA/mB,EAAAgnB,kBACA,IAAAhnB,EAAAS,QAAA,mBAAAwmB,kBAAA,CACA,GAAAC,GAAAnpB,EAAAC,aACAmpB,EAAArpB,EAAAspB,QACA7nB,GAAAS,EAAAqnB,aACA,SAAA5nB,GAAgCynB,EAAAvgE,KAAAo3C,EAAA0B,IAChC,SAAAA,GAAgC0nB,EAAAxgE,KAAAm3C,EAAA2B,QAC/B,sBAAAsnB,IACD,kBAAAA,GAAAhkB,QAAA,CACA,GAAAukB,GAAAP,EAAAhkB,SACAxD,GAAA,SAAAE,GACA6nB,EAAApR,KAAAzW,QAiCAF,GA/BC,mBAAA0nB,mBACD,mBAAAj8D,SACAA,OAAAzB,YACAyB,OAAAzB,UAAAg+D,YAAAv8D,OAAAw8D,kBA2BCxpB,EACD,SAAAyB,GACAzB,EAAAyB,IAEC,mBAAAtsC,YACD,SAAAssC,GACAtsC,WAAAssC,EAAA,IAGAqnB,EAnCA,WACA,GAAAW,GAAA/tD,SAAA4F,cAAA,OACA6vC,GAAoB1zC,eACpBisD,KACAC,EAAAjuD,SAAA4F,cAAA,MAaA,OAZA,IAAA2nD,kBAAA,WACAQ,EAAAG,UAAAC,OAAA,OACAH,OAEAI,QAAAH,EAAAxY,GAQA,SAAA1P,GACA,GAAAx4C,GAAA,GAAAggE,kBAAA,WACAhgE,EAAA+kB,aACAyzB,KAEAx4C,GAAA6gE,QAAAL,EAAAtY,GAVAuY,IACAA,KACAC,EAAAC,UAAAC,OAAA,WAuBA/hE,GAAAD,QAAA05C,IAEG8B,SAAA,KAAY0mB,IAAA,SAAA9pB,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QACA,SAAAs4C,EAAAmG,EAAA9hC,GAIA,QAAAwlD,GAAA5qC,GACAj3B,KAAAgzD,aAAA/7B,GAJA,GAAA8+B,GAAA/d,EAAA+d,iBACAje,GAAA,UAKAwR,SAAAuY,EAAA1jB,GAEA0jB,EAAApgE,UAAAqgE,iBAAA,SAAAj2D,EAAAk2D,GAGA,MAFA/hE,MAAA0zD,QAAA7nD,GAAAk2D,IACA/hE,KAAA4zD,gBACA5zD,KAAA4/C,UACA5/C,KAAA6zD,SAAA7zD,KAAA0zD,cAMAmO,EAAApgE,UAAAqwD,kBAAA,SAAA1mD,EAAAS,GACA,GAAAc,GAAA,GAAAopD,EAGA,OAFAppD,GAAAmvC,UAAA,SACAnvC,EAAAq1D,mBAAA52D,EACApL,KAAA8hE,iBAAAj2D,EAAAc,IAEAk1D,EAAApgE,UAAAswD,iBAAA,SAAAjsC,EAAAja,GACA,GAAAc,GAAA,GAAAopD,EAGA,OAFAppD,GAAAmvC,UAAA,SACAnvC,EAAAq1D,mBAAAl8C,EACA9lB,KAAA8hE,iBAAAj2D,EAAAc,IAGAqrC,EAAAiqB,OAAA,SAAA/pB,GAEA,MADA77B,GAAAssB,WAAA,0BACA,GAAAk5B,GAAA3pB,GAAAE,WAGAJ,EAAAv2C,UAAAwgE,OAAA,WACA,MAAAjqB,GAAAiqB,OAAAjiE,UAIGk7C,SAAA,KAAYgnB,IAAA,SAAApqB,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QACA,SAAAs4C,EAAAmG,EAAAC,GAQA,QAAAjG,GAAAlhB,GACAj3B,KAAAgzD,aAAA/7B,GACAj3B,KAAAmiE,SAAA,EACAniE,KAAAoiE,WACApiE,KAAAqiE,gBAiHA,QAAAC,GAAApqB,EAAAqqB,GACA,MAAAA,UAAA,EACA,MAAAnkB,GAAA,iEAEA,IAAAzxC,GAAA,GAAAwrC,GAAAD,GACAE,EAAAzrC,EAAAyrC,SAGA,OAFAzrC,GAAA0rC,WAAAkqB,GACA51D,EAAA8U,OACA22B,EApIA,GAAAyB,GAAA/B,EAAA,UACA4V,EAAA5V,EAAA,YAAA4V,WACAD,EAAA3V,EAAA,YAAA2V,eACA9/C,EAAAksC,EAAAlsC,QACA60D,IASA3oB,GAAAyP,SAAAnR,EAAAgG,GAEAhG,EAAA12C,UAAAgyD,MAAA,WACA,GAAAzzD,KAAAqiE,aAGA,OAAAriE,KAAAmiE,SAAA,CAIAniE,KAAAwzD,eAAA,EACA,IAAAiP,GAAA90D,EAAA3N,KAAA0zD,UACA1zD,KAAAuxD,eACAkR,GACAziE,KAAAmiE,SAAAniE,KAAA0iE,uBACA1iE,KAAAw7C,QAAAx7C,KAAA2iE,eAAA3iE,KAAAgD,eARAhD,MAAA6zD,cAYA1b,EAAA12C,UAAAggB,KAAA,WACAzhB,KAAAqiE,gBACAriE,KAAAyzD,SAGAtb,EAAA12C,UAAA62C,UAAA,WACAt4C,KAAAoiE,YAGAjqB,EAAA12C,UAAA8gE,QAAA,WACA,MAAAviE,MAAAmiE,UAGAhqB,EAAA12C,UAAA42C,WAAA,SAAAuqB,GACA5iE,KAAAmiE,SAAAS,GAGAzqB,EAAA12C,UAAAqwD,kBAAA,SAAA1mD,GAEA,MADApL,MAAA6iE,cAAAz3D,GACApL,KAAA8iE,eAAA9iE,KAAAuiE,YACAviE,KAAA0zD,QAAA1wD,OAAAhD,KAAAuiE,UACA,IAAAviE,KAAAuiE,WAAAviE,KAAAoiE,QACApiE,KAAA6zD,SAAA7zD,KAAA0zD,QAAA,IAEA1zD,KAAA6zD,SAAA7zD,KAAA0zD,cAOAvb,EAAA12C,UAAAswD,iBAAA,SAAAjsC,GAEA,MADA9lB,MAAA+iE,aAAAj9C,GACA9lB,KAAAgjE,iBAGA7qB,EAAA12C,UAAAiwD,kBAAA,WACA,MAAA1xD,MAAA0zD,kBAAA1b,IAAA,MAAAh4C,KAAA0zD,QACA1zD,KAAAy/C,WAEAz/C,KAAA+iE,aAAAP,GACAxiE,KAAAgjE,kBAGA7qB,EAAA12C,UAAAuhE,cAAA,WACA,GAAAhjE,KAAAuiE,UAAAviE,KAAA0iE,sBAAA,CAEA,OADAziE,GAAA,GAAAwtD,GACAptD,EAAAL,KAAAgD,SAAmC3C,EAAAL,KAAA0zD,QAAA1wD,SAAyB3C,EAC5DL,KAAA0zD,QAAArzD,KAAAmiE,GACAviE,EAAA4C,KAAA7C,KAAA0zD,QAAArzD,GAQA,OALAJ,GAAA+C,OAAA,EACAhD,KAAAw7C,QAAAv7C,GAEAD,KAAAy/C,aAIA,UAGAtH,EAAA12C,UAAAqhE,WAAA,WACA,MAAA9iE,MAAA4zD,gBAGAzb,EAAA12C,UAAAwhE,UAAA,WACA,MAAAjjE,MAAA0zD,QAAA1wD,OAAAhD,KAAAgD,UAGAm1C,EAAA12C,UAAAshE,aAAA,SAAAj9C,GACA9lB,KAAA0zD,QAAA7wD,KAAAijB,IAGAqyB,EAAA12C,UAAAohE,cAAA,SAAAz3D,GACApL,KAAA0zD,QAAA1zD,KAAA4zD,kBAAAxoD,GAGA+sC,EAAA12C,UAAAihE,oBAAA,WACA,MAAA1iE,MAAAgD,SAAAhD,KAAAijE,aAGA9qB,EAAA12C,UAAAkhE,eAAA,SAAAC,GACA,GAAA3mD,GAAA,qCACAjc,KAAAmiE,SAAA,4BAAAS,EAAA,QACA,WAAAlV,GAAAzxC,IAGAk8B,EAAA12C,UAAAm6D,mBAAA,WACA57D,KAAAw7C,QAAAx7C,KAAA2iE,eAAA,KAcA3qB,EAAAsqB,KAAA,SAAApqB,EAAAqqB,GACA,MAAAD,GAAApqB,EAAAqqB,IAGAvqB,EAAAv2C,UAAA6gE,KAAA,SAAAC,GACA,MAAAD,GAAAtiE,KAAAuiE,IAGAvqB,EAAAO,kBAAAJ,KAGGmT,WAAA,GAAApQ,SAAA,KAA0BgoB,IAAA,SAAAprB,EAAAn4C,EAAAD,GAC7B,YACAC,GAAAD,QAAA,SAAAs4C,GACA,QAAA+d,GAAA3d,YACAA,GACAA,IAAAmE,UACAv8C,KAAA87C,UAAA1D,EAAA0D,UACA97C,KAAAgiE,mBAAA5pB,EAAA6e,gBACA7e,EAAAyO,yBAGA7mD,KAAA87C,UAAA,EACA97C,KAAAgiE,2BAIAjM,EAAAt0D,UAAAolD,cAAA,WACA,MAAA7mD,MAAAgiE,mBAGA,IAAA52D,GAAA2qD,EAAAt0D,UAAA2J,MAAA,WACA,IAAApL,KAAAqjD,cACA,SAAA50C,WAAA,4FAEA,OAAAzO,MAAA6mD,iBAGA/gC,EAAAiwC,EAAAt0D,UAAA6a,MACAy5C,EAAAt0D,UAAAqkB,OAAA,WACA,IAAA9lB,KAAA2vD,aACA,SAAAlhD,WAAA,0FAEA,OAAAzO,MAAA6mD,iBAGAxD,EAAA0S,EAAAt0D,UAAA4hD,YAAA,WACA,oBAAArjD,KAAA87C,YAGA6T,EAAAoG,EAAAt0D,UAAAkuD,WAAA,WACA,oBAAA3vD,KAAA87C,YAGAiE,EAAAgW,EAAAt0D,UAAAs+C,UAAA,WACA,oBAAA//C,KAAA87C,YAGAigB,EAAAhG,EAAAt0D,UAAAs6D,WAAA,WACA,oBAAA/7D,KAAA87C,WAGAia,GAAAt0D,UAAAy+C,YAAA,WACA,mBAAAlgD,KAAA87C,YAGA9D,EAAAv2C,UAAA0hE,cAAA,WACA,qBAAAnjE,KAAA87C,YAGA9D,EAAAv2C,UAAAu+C,aAAA,WACA,MAAAhgD,MAAAu8C,UAAA4mB,iBAGAnrB,EAAAv2C,UAAAy+C,YAAA,WACA,mBAAAlgD,KAAAu8C,UAAAT,YAGA9D,EAAAv2C,UAAAs+C,UAAA,WACA,MAAAA,GAAAv/C,KAAAR,KAAAu8C,YAGAvE,EAAAv2C,UAAAkuD,WAAA,WACA,MAAAA,GAAAnvD,KAAAR,KAAAu8C,YAGAvE,EAAAv2C,UAAA4hD,YAAA,WACA,MAAAA,GAAA7iD,KAAAR,KAAAu8C,YAGAvE,EAAAv2C,UAAAs6D,WAAA,WACA,MAAAA,GAAAv7D,KAAAR,KAAAu8C,YAGAvE,EAAAv2C,UAAA2J,MAAA,WACA,MAAAA,GAAA5K,KAAAR,KAAAu8C,YAGAvE,EAAAv2C,UAAAqkB,OAAA,WACA,GAAAk2B,GAAAh8C,KAAAu8C,SAEA,OADAP,GAAAiL,6BACAnhC,EAAAtlB,KAAAw7C,IAGAhE,EAAAv2C,UAAAwqD,OAAA,WACA,MAAAjsD,MAAA6mD,iBAGA7O,EAAAv2C,UAAAqqD,QAAA,WAEA,MADA9rD,MAAAinD,6BACAjnD,KAAA6mD,iBAGA7O,EAAA+d,0BAGIqN,IAAA,SAAAtrB,EAAAn4C,EAAAD,GACJ,YACAC,GAAAD,QAAA,SAAAs4C,EAAAoD,GACA,GAAAvB,GAAA/B,EAAA,UACAwG,EAAAzE,EAAAyE,SACA1L,EAAAiH,EAAAjH,SA0CA9pC,KAAgBpH,cAsChB,OA9EA,UAAAqH,EAAAmqC,GACA,GAAAN,EAAA7pC,GAAA,CACA,GAAAA,YAAAivC,GAAA,MAAAjvC,EACA,IAAAgnD,GA4BA,SAAAhnD,GACA,IACA,MAAAA,GALAgnD,KAMK,MAAA9vD,GAEL,MADAq+C,GAAAr+C,IACAq+C,IAjCAv1C,EACA,IAAAgnD,IAAAzR,EAAA,CACApL,KAAAwO,cACA,IAAA/0C,GAAAqrC,EAAA0K,OAAAqN,EAAA9vD,EAEA,OADAizC,MAAAyO,cACAh1C,EACS,qBAAAojD,GACT,MA+BA,UAAAhnD,GACA,IACA,MAAAD,GAAAtI,KAAAuI,EAAA,aACK,MAAA9I,GACL,WAnCA8I,IACA4D,EAAA,GAAAqrC,GAAAoD,GACAryC,EAAA6yC,MACAjvC,EAAA8kD,SACA9kD,EAAA6uC,eAEA7uC,EACA,MAEAA,GA8BA,SAAAkD,EAAAkgD,EAAA7c,GACA,GAAAkF,GAAA,GAAAJ,GAAAoD,GACAzuC,EAAAyrC,CACAlF,MAAAwO,eACAtJ,EAAAmP,qBACArU,KAAAyO,aACA,IAAAkX,MACAr8C,EAAAq9B,EAAAwE,SAAA0R,GAAAvvD,KAAAqP,EAQA,SAAAzE,GACAgtC,IACAA,EAAA2D,iBAAA3wC,GACAgtC,EAAA,OAGA,SAAAtyB,GACAsyB,IACAA,EAAA6Z,gBAAAnsC,EAAA+yC,MACAzgB,EAAA,OAEA,OAlBAygB,MAEAzgB,GAAA57B,IAAA8hC,IACAlG,EAAA6Z,gBAAAz1C,EAAAvc,MAAA,GACAm4C,EAAA,MAcAzrC,GAtDA5D,EAAAgnD,EAAA7c,GAGA,MAAAnqC,OAyDGmyC,SAAA,KAAYmoB,IAAA,SAAAvrB,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QAAA,SAAAs4C,EAAAoD,EAAA/+B,GAIA,QAAAinD,GAAAC,GACAvjE,KAAAujE,SAqDA,QAAAC,GAAAp4D,GAEA,MADAgZ,cAAApkB,KAAAujE,QACAn4D,EAGA,QAAAq4D,GAAA39C,GAEA,KADA1B,cAAApkB,KAAAujE,QACAz9C,EAhEA,GAAA+zB,GAAA/B,EAAA,UACA0V,EAAAxV,EAAAwV,YAMA8V,GAAA7hE,UAAA8+C,iBAAA,WACAn8B,aAAApkB,KAAAujE,QAGA,IAAAG,GAAA,SAAAt4D,GAAkC,MAAAu4D,IAAA3jE,MAAA0rD,WAAAtgD,IAClCu4D,EAAA3rB,EAAA2rB,MAAA,SAAAC,EAAAx4D,GACA,GAAAuB,GACA42D,CAgBA,iBAfAn4D,GACAuB,EAAAqrC,EAAA4E,QAAAxxC,GACAwwC,MAAA8nB,EAAA,UAAAE,UACAvnD,EAAAqiC,gBAAAtzC,YAAA4sC,IACArrC,EAAA8vC,aAAArxC,KAGAuB,EAAA,GAAAqrC,GAAAoD,GACAmoB,EAAAv2D,WAAA,WAAwCL,EAAA8kD,aAAkBmS,GAC1DvnD,EAAAqiC,gBACA/xC,EAAA8vC,aAAA,GAAA6mB,GAAAC,IAEA52D,EAAA46C,sBAEA56C,EAAAuqD,sBACAvqD,EAGAqrC,GAAAv2C,UAAAkiE,MAAA,SAAAC,GACA,MAAAD,GAAAC,EAAA5jE,OAiCAg4C,EAAAv2C,UAAA8iB,QAAA,SAAAq/C,EAAA3nD,GACA2nD,IACA,IAAAj3D,GAAAsyC,EAEA4kB,EAAA,GAAAP,GAAAt2D,WAAA,WACAL,EAAAozC,aAnCA,SAAA3H,EAAAn8B,EAAAgjC,GACA,GAAAz4B,EAGAA,GAFA,gBAAAvK,GACAA,YAAAvQ,OACAuQ,EAEA,GAAAuxC,GAAA,uBAGA,GAAAA,GAAAvxC,GAEA49B,EAAAya,+BAAA9tC,GACA4xB,EAAAkI,kBAAA95B,GACA4xB,EAAAoD,QAAAh1B,GAEA,MAAAy4B,GACAA,EAAAR,UAoBA9xC,EAAAsP,EAAAgjC,IAEK2kB,GAYL,OAVAvnD,GAAAqiC,gBACAO,EAAAj/C,KAAA+vD,QACApjD,EAAAsyC,EAAArD,MAAA4nB,EAAAC,SACAI,WACApnB,aAAAonB,IAEAl3D,EAAA3M,KAAA47C,MAAA4nB,EAAAC,SACAI,UAGAl3D,MAKGuuC,SAAA,KAAY4oB,IAAA,SAAAhsB,EAAAn4C,EAAAD,GACf,YACAC,GAAAD,QAAA,SAAAs4C,EAAAoG,EAAA/C,EACA6a,EAAA9a,EAAA/+B,GAQA,QAAAovC,GAAAxrD,GACA+M,WAAA,WAA8B,KAAA/M,IAAS,GAavC,QAAAw2B,GAAAstC,EAAAhC,GACA,GAAA1hE,GAAA,EACA0N,EAAAg2D,EAAA/gE,OACA2J,EAAA,GAAAqrC,GAAAoD,EAqBA,OApBA,SAAAjkB,KACA,GAAA92B,GAAA0N,EAAA,MAAApB,GAAA8kD,UACA,IAAAnV,GAhBA,SAAA0nB,GACA,GAAA1nB,GAAAjB,EAAA2oB,EAOA,OANA1nB,KAAA0nB,GACA,kBAAAA,GAAAC,eACA,kBAAAD,GAAAE,cACAF,EAAAC,iBACA3nB,EAAA6nB,eAAAH,EAAAE,gBAEA5nB,GAQAynB,EAAA1jE,KACA,IAAAi8C,YAAAtE,IACAsE,EAAA2nB,gBAAA,CACA,IACA3nB,EAAAjB,EACAiB,EAAA4nB,eAAAE,WAAArC,GACAgC,EAAA3rB,SACiB,MAAAn4C,GACjB,MAAAwrD,GAAAxrD,GAEA,GAAAq8C,YAAAtE,GACA,MAAAsE,GAAAV,MAAAzkB,EAAAs0B,EACA,gBAGAt0B,OAGAxqB,EAGA,QAAA03D,GAAA3zD,EAAA0nC,EAAAlF,GACAlzC,KAAA+gB,MAAArQ,EACA1Q,KAAA8wD,SAAA1Y,EACAp4C,KAAAskE,SAAApxB,EAoCA,QAAAqxB,GAAAjrB,EAAAlB,EAAAlF,GACAlzC,KAAAgzD,aAAA1Z,EAAAlB,EAAAlF,GASA,QAAAsxB,GAAAp5D,GACA,MAAAi5D,GAAAI,WAAAr5D,IACApL,KAAA+jE,UAAA/jE,KAAA6L,OAAAs4D,eAAA/4D,GACAA,EAAAgtC,WAEAhtC,EAGA,QAAAs5D,GAAA1hE,GACAhD,KAAAgD,SACAhD,KAAAo4C,QAAA,KACAp4C,KAAAgD,EAAA,QA5GA,GAAA62C,GAAA/B,EAAA,UACArpC,EAAAqpC,EAAA,YAAArpC,UACA66C,EAAAxR,EAAA,UAAAwR,SACAhL,EAAAzE,EAAAyE,SACAD,EAAAxE,EAAAwE,SACAsmB,IAiDAN,GAAA5iE,UAAAiP,KAAA,WACA,MAAA1Q,MAAA+gB,OAGAsjD,EAAA5iE,UAAA22C,QAAA,WACA,MAAAp4C,MAAA8wD,UAGAuT,EAAA5iE,UAAAgoB,SAAA,WACA,MAAAzpB,MAAAo4C,UAAAiL,cACArjD,KAAAo4C,UAAAhtC,QAEAu5D,GAGAN,EAAA5iE,UAAA2iE,WAAA,SAAArC,GACA,GAAAt4C,GAAAzpB,KAAAypB,WACAypB,EAAAlzC,KAAAskE,kBACApxB,KAAAwO,cACA,IAAA/0C,GAAA8c,IAAAk7C,EACA3kE,KAAA4kE,UAAAn7C,EAAAs4C,GAAA,IAIA,iBAHA7uB,KAAAyO,cACA3hD,KAAA8wD,SAAA+T,mBACA7kE,KAAA+gB,MAAA,KACApU,GAGA03D,EAAAI,WAAA,SAAA9jE,GACA,aAAAA,GACA,kBAAAA,GAAA8oB,UACA,kBAAA9oB,GAAAyjE,YAMA9a,EAAAib,EAAAF,GAEAE,EAAA9iE,UAAAmjE,UAAA,SAAAn7C,EAAAs4C,GAEA,MADA/hE,MAAA0Q,OACAlQ,KAAAipB,IAAAs4C,IAiBA2C,EAAAjjE,UAAA8+C,iBAAA,WAEA,OADAxyC,GAAA/N,KAAAgD,OACA3C,EAAA,EAAuBA,EAAA0N,IAAS1N,EAAA,CAChC,GAAAqxC,GAAA1xC,KAAAK,EACAqxC,aAAAsG,IACAtG,EAAA+M,WAKAzG,EAAA8sB,MAAA,WACA,GAAA/2D,GAAAhD,UAAA/H,MACA,IAAA+K,EAAA,QAAAqwC,GACA,sDACA,IAAA9E,GAAAvuC,UAAAgD,EAAA,EACA,sBAAAurC,GACA,MAAA8E,GAAA,gCAAAvE,EAAA2D,YAAAlE,GAEA,IAAAxqC,GACAi2D,IACA,KAAAh3D,GAAAP,MAAAG,QAAA5C,UAAA,KAEAgD,GADAe,EAAA/D,UAAA,IACA/H,OACA+hE,OAEAj2D,EAAA/D,UACAgD,IAGA,QADAg2D,GAAA,GAAAW,GAAA32D,GACA1N,EAAA,EAAuBA,EAAA0N,IAAS1N,EAAA,CAChC,GAAAopB,GAAA3a,EAAAzO,EACA,IAAAgkE,EAAAI,WAAAh7C,GAAA,CACA,GAAAu7C,GAAAv7C,GACAA,IAAA2uB,WACA+rB,eAAAa,OACa,CACb,GAAA1oB,GAAAjB,EAAA5xB,EACA6yB,aAAAtE,KACAvuB,EACA6yB,EAAAV,MAAA4oB,EAAA,WACAT,YACAl4D,MAAAxL,YAIA0jE,EAAA1jE,GAAAopB,EAIA,GADAw7C,GAAA,GAAAz3D,OAAAu2D,EAAA/gE,OACA,KAAA3C,EAAA,EAAuBA,EAAA4kE,EAAAjiE,SAA+B3C,EACtD4kE,EAAA5kE,GAAA23C,EAAA4E,QAAAmnB,EAAA1jE,IAAAg2D,SAGA,IAAA6O,GAAAltB,EAAAuU,IAAA0Y,GACAlV,KAAA,SAAAoV,GACA,OAAA9kE,GAAA,EAA+BA,EAAA8kE,EAAAniE,SAAwB3C,EAAA,CACvD,GAAA0hE,GAAAoD,EAAA9kE,EACA,IAAA0hE,EAAApS,aAEA,MADArR,GAAAr+C,EAAA8hE,EAAAzlD,QACAgiC,CACqB,KAAAyjB,EAAA1e,cAErB,WADA6hB,GAAAzmB,QAGA0mB,GAAA9kE,GAAA0hE,EAAA32D,QAEAgtC,EAAAsJ,eAEApI,EAAA+E,EAAA/E,EACA,IAAA3sC,GAAAo4D,EACAzrB,EAAAruC,aAAAk6D,GAAA7rB,EAAA6rB,GACA7c,EAAAlQ,EAAAuJ,aAGA,OAFAtlC,GAAAkuC,sBACA59C,EAAA27C,EAAA,gBAAAlQ,GACAzrC,IAGAyrC,EAAA8sB,EAAAlV,OAAA,WACA,GAAA+R,GAAA,GAAA/pB,GAAA+d,kBAAAmP,EACA,OAAAzuC,GAAAstC,EAAAhC,IAIA,OAFAgC,GAAA3rB,UACAA,EAAAqE,aAAAsnB,GACA3rB,GAGAJ,EAAAv2C,UAAA0iE,eAAA,SAAAa,GACAhlE,KAAA87C,UAAA,OAAA97C,KAAA87C,UACA97C,KAAAolE,UAAAJ,GAGAhtB,EAAAv2C,UAAAwiE,cAAA,WACA,cAAAjkE,KAAA87C,WAAA,GAGA9D,EAAAv2C,UAAAyiE,aAAA,WACA,MAAAlkE,MAAAolE,WAGAptB,EAAAv2C,UAAAojE,iBAAA,WACA7kE,KAAA87C,WAAA,OAAA97C,KAAA87C,UACA97C,KAAAolE,kBAGAptB,EAAAv2C,UAAAujE,SAAA,SAAA1rB,GACA,qBAAAA,GACA,UAAAirB,GAAAjrB,EAAAt5C,KAAAk2D,IAEA,UAAAznD,OAKG68C,WAAA,GAAApQ,SAAA,KAA0BmqB,IAAA,SAAAvtB,EAAAn4C,EAAAD,GAC7B,YAWA,SAAA4lE,KACA,IACA,GAAAtpB,GAAAupB,CAEA,OADAA,GAAA,KACAvpB,EAAA/wC,MAAAjL,KAAA+K,WACK,MAAA9K,GAEL,MADAq+C,GAAAr+C,IACAq+C,GAGA,QAAAD,GAAA/E,GAEA,MADAisB,GAAAjsB,EACAgsB,EAuBA,QAAAE,GAAA5Q,GACA,aAAAA,mBACA,gBAAAA,IAAA,gBAAAA,GAIA,QAAAhiB,GAAAxnC,GACA,wBAAAA,IACA,gBAAAA,IAAA,OAAAA,EAGA,QAAAmpD,GAAAkR,GACA,MAAAD,GAAAC,GAEA,GAAA/5D,OAAAg6D,EAAAD,IAFAA,EAKA,QAAAnI,GAAAthB,EAAA2pB,GACA,GAEAtlE,GAFA0N,EAAAiuC,EAAAh5C,OACA2J,EAAA,GAAAa,OAAAO,EAAA,EAEA,KAAA1N,EAAA,EAAeA,EAAA0N,IAAS1N,EACxBsM,EAAAtM,GAAA27C,EAAA37C,EAGA,OADAsM,GAAAtM,GAAAslE,EACAh5D,EAGA,QAAA2vD,GAAAvzD,EAAA0H,EAAAm1D,GACA,IAAAxY,EAAAa,MASA,SAAiBvsD,eAAAlB,KAAAuI,EAAA0H,GAAA1H,EAAA0H,SARjB,IAAAu9B,GAAAjtC,OAAAotD,yBAAAplD,EAAA0H,EAEA,cAAAu9B,EACA,MAAAA,EAAA7sC,KAAA,MAAA6sC,EAAAxY,IACAwY,EAAA5iC,MACAw6D,SAOA,QAAA7hB,GAAAh7C,EAAAnI,EAAAwK,GACA,GAAAo6D,EAAAz8D,GAAA,MAAAA,EACA,IAAAwlD,IACAnjD,QACAnK,gBACAC,cACA8mC,YAGA,OADAolB,GAAApsD,eAAA+H,EAAAnI,EAAA2tD,GACAxlD,EAGA,QAAA0iD,GAAAljD,GACA,KAAAA,GAsEA,QAAAq1D,GAAAtkB,GACA,IACA,qBAAAA,GAAA,CACA,GAAAvhB,GAAAq1B,EAAAgB,MAAA9U,EAAA73C,WAEAokE,EAAAzY,EAAAa,OAAAl2B,EAAA/0B,OAAA,EACA8iE,EAAA/tC,EAAA/0B,OAAA,KACA,IAAA+0B,EAAA/0B,QAAA,gBAAA+0B,EAAA,IACAguC,EACAC,EAAAzhE,KAAA+0C,EAAA,KAAA8T,EAAAgB,MAAA9U,GAAAt2C,OAAA,CAEA,IAAA6iE,GAAAC,GACAC,EACA,SAGA,SACK,MAAA9lE,GACL,UAIA,QAAA05D,GAAA5wD,GAEA,QAAAk9D,MACAA,EAAAxkE,UAAAsH,CAEA,KADA,GAAAzI,GAAA,EACAA,KAAA,GAAA2lE,EACA,OAAAl9D,GAKA,QAAA+0C,GAAA1sC,GACA,MAAA80D,GAAA3hE,KAAA6M,GAGA,QAAA+0D,GAAAvD,EAAAh3D,EAAAmW,GAEA,OADApV,GAAA,GAAAa,OAAAo1D,GACAviE,EAAA,EAAkBA,EAAAuiE,IAAWviE,EAC7BsM,EAAAtM,GAAAuL,EAAAvL,EAAA0hB,CAEA,OAAApV,GAGA,QAAA+4D,GAAA38D,GACA,IACA,MAAAA,GAAA,GACK,MAAA9I,GACL,oCAIA,QAAAmmE,GAAAr9D,GACA,MAAAA,aAAA2C,QACA,OAAA3C,GACA,gBAAAA,IACA,gBAAAA,GAAAkT,SACA,gBAAAlT,GAAAnI,KAGA,QAAA0zD,GAAAr0D,GACA,IACA8jD,EAAA9jD,EAAA,oBAEA,MAAAomE,KAGA,QAAAzP,GAAA32D,GACA,aAAAA,IACAA,YAAAyL,OAAAoiD,uBAAAf,uBACA9sD,EAAAgtD,eAGA,QAAAxJ,GAAA16C,GACA,MAAAq9D,GAAAr9D,IAAAqkD,EAAAkB,mBAAAvlD,EAAA,SAkBA,QAAAy0C,GAAAz0C,GACA,SAAa8E,SAAArN,KAAAuI,GAGb,QAAA40D,GAAA3vD,EAAA6a,EAAAumB,GAEA,OADArX,GAAAq1B,EAAAgB,MAAApgD,GACA3N,EAAA,EAAmBA,EAAA03B,EAAA/0B,SAAiB3C,EAAA,CACpC,GAAAoQ,GAAAsnB,EAAA13B,EACA,IAAA+uC,EAAA3+B,GACA,IACA28C,EAAApsD,eAAA6nB,EAAApY,EAAA28C,EAAAc,cAAAlgD,EAAAyC,IACa,MAAA41D,MAyCb,QAAAlgB,GAAA11C,GACA,MAAA61D,GAAA3uB,EAAAwO,IAAA11C,UAGA,QAAAowD,KACA,qBAAA7oB,SACA,IACA,GAAAI,GAAA,GAAAJ,SAAA,aACA,IAAkB,wBAAAnqC,SAAArN,KAAA43C,GAClB,MAAAJ,SAES,MAAA/3C,KAIT,QAAAknD,GAAApnD,EAAA8gD,GACA,MAAA9gD,GAAAsN,KAAAwzC,GA3UA,GAIA0kB,GAJAnY,EAAAtV,EAAA,SACA+F,EAAA,mBAAAz6C,WAEAk7C,GAAgBr+C,MAEhBsmE,EAAA,mBAAAxmE,WACA,mBAAA8E,wBACA+yC,aACA53C,UAAA,KAiBAspD,EAAA,SAAAkd,EAAAC,GAGA,QAAAl4D,KACAvO,KAAAkrC,YAAAs7B,EACAxmE,KAAAgzD,aAAAyT,CACA,QAAAzoB,KAAAyoB,GAAAhlE,UACAqH,EAAAtI,KAAAimE,EAAAhlE,UAAAu8C,IACA,MAAAA,EAAA3zC,OAAA2zC,EAAAh7C,OAAA,KAEAhD,KAAAg+C,EAAA,KAAAyoB,EAAAhlE,UAAAu8C,IATA,GAAAl1C,MAAoBpH,cAepB,OAFA6M,GAAA9M,UAAAglE,EAAAhlE,UACA+kE,EAAA/kE,UAAA,GAAA8M,GACAi4D,EAAA/kE,WA8DAi7D,EAAA,WACA,GAAAgK,IACAl5D,MAAA/L,UACAV,OAAAU,UACA2L,SAAA3L,WAGAklE,EAAA,SAAA/R,GACA,OAAAv0D,GAAA,EAAuBA,EAAAqmE,EAAA1jE,SAA+B3C,EACtD,GAAAqmE,EAAArmE,KAAAu0D,EACA,QAGA,UAGA,IAAAxH,EAAAa,MAAA,CACA,GAAArN,GAAA7/C,OAAAstD,mBACA,iBAAAtlD,GAGA,IAFA,GAAA4D,MACAi6D,EAAA7lE,OAAAkqC,OAAA,MACA,MAAAliC,IAAA49D,EAAA59D,IAAA,CACA,GAAAgvB,EACA,KACAA,EAAA6oB,EAAA73C,GACiB,MAAA9I,GACjB,MAAA0M,GAEA,OAAAtM,GAAA,EAA+BA,EAAA03B,EAAA/0B,SAAiB3C,EAAA,CAChD,GAAAoQ,GAAAsnB,EAAA13B,EACA,KAAAumE,EAAAn2D,GAAA,CACAm2D,EAAAn2D,KACA,IAAAu9B,GAAAjtC,OAAAotD,yBAAAplD,EAAA0H,EACA,OAAAu9B,GAAA,MAAAA,EAAA7sC,KAAA,MAAA6sC,EAAAxY,KACA7oB,EAAA9J,KAAA4N,IAGA1H,EAAAqkD,EAAAnX,eAAAltC,GAEA,MAAA4D,IAGA,GAAA7D,MAAwBpH,cACxB,iBAAAqH,GACA,GAAA49D,EAAA59D,GAAA,QACA,IAAA4D,KAGAk6D,GAAA,OAAAp2D,KAAA1H,GACA,GAAAD,EAAAtI,KAAAuI,EAAA0H,GACA9D,EAAA9J,KAAA4N,OACiB,CACjB,OAAApQ,GAAA,EAAmCA,EAAAqmE,EAAA1jE,SAA+B3C,EAClE,GAAAyI,EAAAtI,KAAAkmE,EAAArmE,GAAAoQ,GACA,QAAAo2D,EAGAl6D,GAAA9J,KAAA4N,GAGA,MAAA9D,OAMAq5D,EAAA,sBAiCAE,EAAA,wBA8CAnN,EACA,aAAArtD,OAOA,SAAAN,GACA,MAAAq4C,GAAAr4C,KACA,GAAAM,OAAAg6D,EAAAt6D,KARA,SAAAA,GACA,GAAAq4C,EAAAr4C,GAAA,MAAAA,EACA,KAAiB,SAAAM,OAAAg6D,EAAAt6D,IACjB,MAAAob,GAAwB,MAAAA,KA0BxBk1C,EAAA,SAAA/mC,GACA,MAAAy4B,GAAAz/C,QAAAgnB,GACAA,EAEA,KAGA,uBAAAuC,gBAAAC,SAAA,CACA,GAAA2vC,GAAA,kBAAAt5D,OAAAQ,KAAA,SAAA2mB,GACA,MAAAnnB,OAAAQ,KAAA2mB,IACK,SAAAA,GAIL,IAHA,GAEAoyC,GAFAp6D,KACAq6D,EAAAryC,EAAAuC,OAAAC,cAEA4vC,EAAAC,EAAA5vC,QAAAC,MACA1qB,EAAA9J,KAAAkkE,EAAA37D,MAEA,OAAAuB,GAGA+uD,GAAA,SAAA/mC,GACA,MAAAy4B,GAAAz/C,QAAAgnB,GACAA,EACS,MAAAA,GAAA,kBAAAA,GAAAuC,OAAAC,UACT2vC,EAAAnyC,GAEA,MAIA,GAAA2lB,YAAA3C,GACA,qBAAA6F,EAAA7F,GAAA58B,cAEAurD,WAAA3uB,YACAA,EAAAwO,IAqBAx5C,GACAixD,UACA9f,eACA4e,oBACAJ,2BACA7Q,UACA99C,QAAAy/C,EAAAz/C,QACA+tD,UACA3X,oBACAyhB,cACA5yB,WACAwzB,UACAvoB,cACAS,WACAD,WACAiL,WACAgU,eACA/I,mBACAoF,mBACAwM,cACAt4D,SAAA63D,EACAjiB,iBACAsV,oBACAnC,0BACAtC,iCACA9W,cACAmgB,kBACAxjB,YAAA,mBAAA3D,iBACA,kBAAAA,QAAAywB,UACA3sB,SACAgsB,kBACAngB,MACAvO,OAAA2uB,EACA1F,mBACA1Z,aAEAx6C,GAAAu0D,aAAAv0D,EAAA2tC,QAAA,WACA,GAAAr2C,GAAA0zC,EAAAuvB,SAAA1tD,KAAAhT,MAAA,KAAAuD,IAAAkE,OACA,YAAAhK,EAAA,IAAAA,EAAA,OAAAA,EAAA,QAGA0I,EAAA2tC,QAAA3tC,EAAAgtD,iBAAAhiB,EAEA,KAAK,SAAAjsC,OAAoB,MAAAzL,GAAY0M,EAAAo+C,cAAA9qD,EACrCN,EAAAD,QAAAiN,IAEGs0C,QAAA,UAAgB,QAz9KNthD,EAAAD,QAAAO,GAAb,IAAAA,EA09KwB,oBAAA4E,SAAA,OAAAA,OAAuDA,OAAAy8B,EAAAz8B,OAAAmzC,QAA+G,mBAAAj4C,OAAA,OAAAA,OAAyDA,KAAAuhC,EAAAvhC,KAAAi4C,4RCt/KvP93C,EAAAS,EAAA0H,EAAA,+BAAA8+D,IAWO,IAAMC,GAA0B,oCAS1B9iC,EAAyB,mCAQzBC,EAAoB,8BAMpB4iC,EAAc,kCAAAlnE,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAA,GAAAsI,GAAAnH,EAAA,GAAAf,GAAAe,IAAAmH,GAAAnH,EAAA,MAAAN,EAAAM,EAAA,GAAAkH,EAAAlH,IAAAN,GAAAc,EAAAR,EAAA,GAAAV,EAAAU,EAAA,KAAAszB,EAAAtzB,EAAA,IAAAd,EAAAc,EAAA,IAAAT,EAAAS,EAAA,IAAAO,EAAAP,EAAA,GAAAsc,EAAAtc,EAAA,GAAAiL,EAAAjL,EAAA,GAAAuzB,EAAAvzB,IAAAiL,GAAA5L,EAAAW,EAAA,IAAA4/B,EAAA5/B,EAAA,GAAA4P,EAAA5P,EAAA,KAAAgP,EAAAhP,EAAA,IAAAqzB,EAAArzB,IAAAgP,GAAA6wB,EAAA,mBAAAhhC,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MAAA0M,EAAAxN,OAAAsmE,QAAA,SAAApnE,GAAA,OAAA4B,GAAA,EAAAA,EAAAkJ,UAAA/H,OAAAnB,IAAA,IAAAT,GAAA2J,UAAAlJ,EAAA,QAAA0G,KAAAnH,GAAAL,OAAAU,UAAAC,eAAAlB,KAAAY,EAAAmH,KAAAtI,EAAAsI,GAAAnH,EAAAmH,IAAA,MAAAtI,ICfrB2C,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAErBqhE,EAAoB,EA+EHC,cAMjB,QAAAA,GAAYC,GAA0B,GAAdvpD,GAAclT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,gBAAA9K,EAAA4B,GAAA,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,sCAAAzO,KAAAunE,EAAA,IAAAxxB,qKAAA/1C,MAAAunE,EAAAvxB,WAAAj1C,OAAAk1C,eAAAsxB,IAAA/mE,KAAAR,MAAA,OAElC+1C,GAAKyxB,WAAaA,EAMlBzxB,EAAK0xB,gBAAkB,GAAI9zC,KAM3BoiB,EAAK2xB,wBAA0B,EAE/B3xB,EAAK4xB,eAEL5xB,EAAK93B,QAAUA,EAKf83B,EAAK6xB,SAAW,KAQhB7xB,EAAK8xB,gBAUL9xB,EAAK+xB,QAAU,EAQf/xB,EAAKgyB,gBAAkB,KAQvBhyB,EAAKiyB,gBAAkB,KAQvBjyB,EAAKkyB,kBAAoB,KAGzBlyB,EAAKmyB,qBAAuBnyB,EAAKoyB,gBAAgB96D,KAArB0oC,GAIxBqyB,EAAA9/D,EAAS+/D,wBAAwB,YACjCD,EAAA9/D,EAAS6/B,YAAYmgC,EAAAhgE,EAAUq/B,4BAC3B,SAAA4gC,GAAA,MAAYxyB,GAAKyyB,iCAAiCD,KAEtDH,EAAA9/D,EAAS6/B,YACLmgC,EAAAhgE,EAAUs/B,oBACV,iBAAMmO,GAAKyyB,iCACPJ,EAAA9/D,EAASmgE,2BA/Ea1yB,QANrBwxB,6TAAYmB,EAAA,GAMS3yB,mDA4Hd3gB,EAAgBuzC,GAAO,GAAAC,GAAA5oE,IAC3CA,MAAK4nE,SAAW,GAAIiB,GAAAvgE,EAChB8sB,EAAgBuzC,EAAO3oE,KAAK4zB,cAEhC5zB,KAAK8oE,qBAAuB,WAExBF,EAAKf,eAML,KACIe,EAAKhB,SAASmB,0BACVH,EAAKZ,iBACTY,EAAKhB,SAASoB,4BACVJ,EAAKX,mBACX,MAAO3rD,GACL2sD,EAAA3gE,EAAqB+pB,iBAAiB/V,GACtC1Z,EAAO0Z,MACH,wBAAwBssD,EAAKX,kBAA7B,WACYW,EAAKZ,gBADjB,sBAEA1rD,GAGRssD,EAAK1yC,eAAeoyC,EAAAhgE,EAAUo6B,kBAC1BkmC,EAAKE,sBACTF,EAAKE,qBAAuB,MAMP,IAAjBF,EAAKd,QACLc,EAAKhB,SAASsB,oBAAoBN,EAAKd,SAI/C9nE,KAAKmoC,YAAYmgC,EAAAhgE,EAAUo6B,kBACvB1iC,KAAK8oE,sBAGT9oE,KAAKmoC,YAAYmgC,EAAAhgE,EAAU2+B,uBACvBjnC,KAAKkoE,gEAQwB,GAAAiB,GAAAnpE,KAArBopE,EAAqBr+D,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MAC3Bs+D,EAAoBrpE,KAAK+nE,oBAC3BuB,KACAC,IAEJvpE,MAAK+nE,gBAAkBqB,EAEvBE,EAAwBD,EAAkBj6B,OACtC,SAAA3sC,GAAA,OAAO0mE,EAAKK,UAAU/mE,KAE1B8mE,EAAyBH,EAAeh6B,OACpC,SAAA3sC,GAAA,OAAyC,IAAnC4mE,EAAkBtkE,QAAQtC,KAEpCzC,KAAKwnE,WAAW5zC,aAAa+C,KACzB8yC,EAAAjqC,yBACA8pC,EACAC,yCAQAvpE,KAAK4nE,WAOD5nE,KAAK4nE,UAAmC,cAAvB5nE,KAAK4nE,SAAS8B,MAC/B1pE,KAAK4nE,SAASt2C,QAGlBtxB,KAAK4nE,SAAW,KAChB5nE,KAAK6nE,oBAAep3D,IAAA,6BAAArF,MAAA,SAYDu+D,GACnB3pE,KAAK4nE,UACL5nE,KAAK4nE,SAASgC,mCAAmCD,0CAc1ClnE,GAEXzC,KAAKioE,kBAAoBxlE,EACrBzC,KAAK4nE,UAAY5nE,KAAK6nE,cACtB7nE,KAAK4nE,SAASoB,4BAA4BvmE,uCAYtCA,GAERzC,KAAKgoE,gBAAkBvlE,EACnBzC,KAAK4nE,UAAY5nE,KAAK6nE,cACtB7nE,KAAK4nE,SAASmB,0BAA0BtmE,gDAoE3BonE,EAAWC,EAAWC,EAAO9rD,GAC9C,GAAM+rD,GAAgBzC,EAAI0C,iBAAiBF,YAEhC9rD,EAAQisD,qBACf9B,EAAA9/D,EAAS6hE,gBAAgBH,EAAe/rD,EAAQisD,oBAEhDE,EAAA9hE,EAAW0sB,UAAUq1C,wBACfH,mBAAoBjsD,EAAQisD,qBAGtC,IAAMI,GACA,GAAIC,GAAAjiE,EACFtI,KACAA,KAAK0nE,wBACLmC,EACAC,EAAWE,EACXD,EAAO9rD,EAKf,OAHAje,MAAKynE,gBAAgBjyC,IAAI80C,EAAc7nE,GAAI6nE,GAC3CtqE,KAAK0nE,yBAA2B,EAEzB4C,gDAYWE,GAClB,GAAM/nE,GAAK+nE,EAAwB/nE,EAEnC,SAAIzC,KAAKynE,gBAAgBjvC,IAAI/1B,KAEzBzC,KAAKynE,gBAAgBtvC,OAAO11B,UAErBgO,IAAA,gBAAArF,MAAA,SAWDq/D,GACV,IAAKA,EACD,KAAM,IAAI/+D,OAAM,uCAGpB1L,MAAK2nE,YAAY9kE,KAAK4nE,GAEtBA,EAAMjD,WAAaxnE,KAAKwnE,8CASxB,MAAOxnE,MAAK8nE,oDAQZ,GAAM4C,GAAa1qE,KAAK2qE,eAAeC,EAAAx6D,EAGvC,OAAOs6D,GAAW1nE,OAAS0nE,EAAW,aAAK3sB,0CAQ3C,GAAM8sB,GAAa7qE,KAAK2qE,eAAeC,EAAAtiE,EAGvC,OAAOuiE,GAAW7nE,OAAS6nE,EAAW,aAAK9sB,oCAShC+sB,GACX,GAAIC,GAAS/qE,KAAK2nE,YAAYr9D,OAO9B,iBALIwgE,IACAC,EAASA,EAAO37B,OACZ,SAAAq7B,GAAA,MAASA,GAAMO,YAAcF,KAG9BC,0CASKD,GACZ,GAAIG,MADmBr0C,KAAAC,KAAAC,QAAA,KAGvB,OAAAC,GAAAC,EAAkBh3B,KAAKynE,gBAAgBxwC,SAAvCC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAiD,IACvCs0C,GADuCn0C,EAAA3rB,MAClB+/D,uBAA2BL,EAElDI,KACAD,EAAeA,EAAa1gE,OAAO2gE,KAPpB,MAAA1kD,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAWvB,MAAOm0C,wCAQE7/D,GACT,GAAMggE,KASN,OAPAprE,MAAK2qE,eAAeC,EAAAtiE,GAAiB+F,QAAQ,SAAAg9D,GAEzCD,EAAavoE,KAAKuI,EAAQigE,EAAWC,OAASD,EAAWE,YAKtDvzB,QAAQuU,IAAI6e,4CAONX,GACb,GAAMxhC,GAAMjpC,KAAK2nE,YAAY5iE,QAAQ0lE,IAExB,IAATxhC,GAIJjpC,KAAK2nE,YAAYn9D,OAAOy+B,EAAK,MAAAx4B,IAAA,qBAAArF,MAAA,SAUdogE,GACf,GAAIC,MADkB/zC,KAAAC,KAAAC,QAAA,KAGtB,OAAAC,GAAAC,EAAkB93B,KAAKynE,gBAAgBxwC,SAAvCC,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAiD,IACvCg0C,GADuC7zC,EAAAzsB,MACjBugE,mBAAmBH,EAE/CC,GAAgBA,EAAclhE,OAAOmhE,IANnB,MAAAllD,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAatB,MAJAh1B,GAAOyZ,MACH,6BAA6BmvD,EAA7B,WACiBC,EAAczoE,QAE5ByoE,+CAiKHzrE,KAAK4nE,WACL5nE,KAAK4nE,SAASt2C,QACdtxB,KAAK6nE,gBAEL7nE,KAAKk2B,eAAeoyC,EAAAhgE,EAAU2+B,uBAC1BjnC,KAAKkoE,6DAYH1wC,EAAKgD,EAAMoxC,EAAY/vC,GACjC,GAAM4uC,GAAQjzC,EAAIq0C,eAAerxC,EAE5BiwC,KAEOA,EAAMqB,gBAIPrB,EAAM5uC,YAAcA,GAC3Bj5B,EAAO0Z,MACAmuD,EADP,qBACgC5uC,EAAU,KAAO,UADjD,UAIJ4uC,EAAMsB,cAAcH,EAAYp0C,IAR5B50B,EAAOwF,KAAP,6CAAyDoyB,+CAqB9C3R,EAAIqoB,GACnB,IAAIlxC,KAAK4nE,SAGL,KAAM,IAAIl8D,OAAM,+BAFhB1L,MAAK4nE,SAASoE,YAAYnjD,EAAIqoB,oCAY7B9lC,GACDpL,KAAK8nE,SAAW18D,IAChBpL,KAAK8nE,OAAS18D,EACVpL,KAAK4nE,UAAY5nE,KAAK6nE,cACtB7nE,KAAK4nE,SAASsB,oBAAoB99D,GAEtCpL,KAAK4zB,aAAa+C,KAAK2xC,EAAAhgE,EAAU4+B,oBAAqB97B,sCAUpD3I,GACN,OAAQzC,KAAK+nE,iBACN/nE,KAAK+nE,gBAAgBhjE,QAAQtC,IAAO,KAAAgO,IAAA,mCAAArF,MAAA,SAWdm9D,GAC7B,GAAM0D,GAAoBjsE,KAAKmrE,gBAAgBP,EAAAtiE,GADRwwB,KAAAC,KAAAC,QAAA,KAGvC,OAAAC,GAAAC,EAAoB+yC,EAApB/0C,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,KAAuCG,EAAA7tB,MAC7B8gE,eAAe3D,GAJc,MAAA/hD,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,8DAppBL/a,GAClC,GAAM7W,GAAiB+kE,EAAA7jE,EAAelB,gBAKtC,QAJ2BA,EACrBghE,EAAA9/D,EAAS8jE,kCAAkCnuD,GAC3CmqD,EAAA9/D,EAAS+jE,+BAA+BpuD,IAEpB8xC,KACtB,SAAAuc,GACI,GAAMvB,GAAS3jE,EAhJ/B,WACI,OADqD2D,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,OAC1BhB,IAAI,SAAAwiE,GAAY,GAEnCC,GAKAD,EALAC,SACAC,EAIAF,EAJAE,WACA92C,EAGA42C,EAHA52C,OACA80C,EAEA8B,EAFA9B,MACAiC,EACAH,EADAG,UANmCC,EASNlC,EAAMmC,cAA/BrE,EAT+BoE,EAS/BpE,SAAUsE,EATqBF,EASrBE,UAOlB,OAFAvF,IAAqB,EAEd,GAAIwF,GAAAxkE,GACPigE,WACAsE,aACA/B,UAAWL,EAAMsC,KACjBC,MAAO1F,EACPkF,WACAC,aACA92C,SACA80C,QACAiC,UAAWA,GAAa,UAuHQJ,GAvL5C,SAA2BA,EAAYruD,GACnC,GAAMgvD,MACF1E,EAAW,IAmBf,OAjBA+D,GAAWj+D,QAAQ,SAAA6+D,GACXA,EAAUpC,YAAcF,EAAAtiE,EACxBigE,EAAWtqD,EAAQkvD,YACZD,EAAUR,YAAcU,EAAA9kE,EAAU6iC,SACzCo9B,EAAWtqD,EAAQovD,gBAEvB/F,GAAqB,CACrB,IAAMgG,GAAa,GAAIR,GAAAxkE,EAAJilE,KACZL,GACH3E,WACAsE,WAAY5uD,EAAQ4uD,WACpBG,MAAO1F,IAGX2F,GAAUpqE,KAAKyqE,KAGZL,GAmK6BX,EAAYruD,EAEpC,OAAO8sD,GAAOzI,KAAK,SAAAmI,GAAA,OAAUA,EAAM+C,qBAC7Bx1B,QAAQ0K,OACN,GAAI+qB,GAAAnlE,EACAolE,EAAA1iC,sBACN+/B,wCA4JC4C,EAAW73C,GAC1BsyC,EAAA9/D,EAAS6/B,YAAYwlC,EAAW73C,0CAQd63C,EAAW73C,GAC7BsyC,EAAA9/D,EAAS4tB,eAAey3C,EAAW73C,wCAOnC,MAAOsyC,GAAA9/D,EAASslE,4CAOM,GAAd3vD,GAAclT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,KAGtB,OAFA/K,MAAKie,QAAUA,EAERmqD,EAAA9/D,EAASmZ,KAAKzhB,KAAKie,yDAO1B,MAAOmqD,GAAA9/D,EAASulE,iEAoNI9D,GACpB,GAAMC,GACAD,EAAQ3B,EAAA9/D,EAASwlE,iBAAmB1F,EAAA9/D,EAAS0hE,aAEnD,OAAKA,GAIEzmD,KAAKgK,MAAMhK,KAAKkK,UAAUu8C,iDAQZ+D,EAAYp4C,GACjC,MAAOyyC,GAAA9/D,EAAS0lE,kBAAkBD,EAAYp4C,uCAO/BA,GACf,MAAOyyC,GAAA9/D,EAAS2lE,YAAYt4C,sCAOd80C,GACd,MAAOrC,GAAA9/D,EAAS4lE,WAAWzD,mDAQ3B,MAAOrC,GAAA9/D,EAAS6lE,wEAUWC,GAC3B,MAAOhG,GAAA9/D,EAAS+/D,wBAAwB+F,kDASxC,MAAOhG,GAAA9/D,EAASmgE,mFAShB,MAAOL,GAAA9/D,EAAS+lE,wFAOeC,GAC/B,MAAOlG,GAAA9/D,EAASimE,4BAA4BD,gDAUpB/F,GACxB,MAAOH,GAAA9/D,EAASkmE,qBAAqBjG,wCAerB5yC,GAChB,MAAO4xC,GAAIkH,iBAAiBrG,EAAA9/D,EAAS2lE,YAAYt4C,6CAe7B+4C,GACpB,MAAOA,IAAyB,iBAAbA,GACC,YAAbA,2CAQajiE,GACpB27D,EAAA9/D,EAASqmE,iBAAiBliE,2CAQPmiE,GACnBxG,EAAA9/D,EAASumE,gBAAgBD,qDAQzB,MAAOxG,GAAA9/D,EAASwmE,mHChlBxB,QAASC,GAAeC,EAAI/wD,GACxB,GAAMoe,IAAgB4yC,SAClBllC,UASEmlC,EACA/C,EAAA7jE,EAAenC,aACdgmE,EAAA7jE,EAAelC,UACf+lE,EAAA7jE,EAAerB,iBACfklE,EAAA7jE,EAAepB,qBAEtB,IAAI8nE,EAAGjqE,QAAQ,UAAY,EAAG,CAK1B,GAHAs3B,EAAY0N,OAAUG,aAClBilC,aAEAlxD,EAAQovD,eACJ6B,IAEA7yC,EAAY0N,MAAMw+B,SAAWtqD,EAAQovD,gBAIzChxC,EAAY0N,MAAMolC,SAAStsE,MACvB2pE,SAAUvuD,EAAQovD,qBAEnB,CAMH,GAAMR,GAAa5uD,EAAQ4uD,YAAcuC,EAAA9mE,EAAiB+mE,IAEtDH,KACA7yC,EAAY0N,MAAM8iC,WAAaA,GAEnCxwC,EAAY0N,MAAMolC,SAAStsE,MACvBgqE,gBAIJ5uD,EAAQqxD,QAAUrxD,EAAQsxD,QAAUtxD,EAAQuxD,QAGxCvxD,EAAQqxD,QAAUrxD,EAAQuxD,OAE1BvxD,EAAQqxD,OAASrxD,EAAQqxD,QAAUrxD,EAAQuxD,IAC3CnzC,EAAY0N,MAAMG,UAAUulC,aAAexxD,EAAQqxD,QAEnDrxD,EAAQsxD,SACRlzC,EAAY0N,MAAMG,UAAUwlC,aAAezxD,EAAQsxD,SAlG3DlzC,EAuGIA,EAtGJ6yC,EAsGiBA,EArGjBS,EAqGiD1xD,EAAQ0xD,WApGzDC,EAAAtnE,EAAYqnE,KACRT,IACA7yC,EAAY0N,MAAM8lC,OACdC,MAAOF,EAAAtnE,EAAYqnE,GAAYE,OAEnCxzC,EAAY0N,MAAMgmC,QACdD,MAAOF,EAAAtnE,EAAYqnE,GAAYI,SAIvC1zC,EAAY0N,MAAMG,UAAUC,SAAWylC,EAAAtnE,EAAYqnE,GAAYE,MAC/DxzC,EAAY0N,MAAMG,UAAUE,UAAYwlC,EAAAtnE,EAAYqnE,GAAYI,QAGhE1zC,EAAY0N,MAAMG,UAAUC,WAC5B9N,EAAY0N,MAAMG,UAAU8lC,SACtB3zC,EAAY0N,MAAMG,UAAUC,UAGlC9N,EAAY0N,MAAMG,UAAUE,YAC5B/N,EAAY0N,MAAMG,UAAU+lC,UACtB5zC,EAAY0N,MAAMG,UAAUE,WAzB1C,GACQ/N,GACA6yC,EACAS,CAoJJ,IA7CIX,EAAGjqE,QAAQ,UAAY,IACnBonE,EAAA7jE,EAAerB,gBAGfo1B,EAAY4yC,SACL9C,EAAA7jE,EAAenC,YAClB8X,EAAQkvD,YACR9wC,EAAY4yC,OACR/kC,aACAq+B,SAAUtqD,EAAQkvD,YAClBgC,WACI3C,SAAUvuD,EAAQkvD,eAG1B9wC,EAAY4yC,UAIhB5yC,EAAY4yC,OAAU/kC,aAClBilC,aACAlxD,EAAQkvD,cACJ+B,IAEA7yC,EAAY4yC,MAAM1G,SAAWtqD,EAAQkvD,aAIzC9wC,EAAY4yC,MAAME,SAAStsE,MACvB2pE,SAAUvuD,EAAQkvD,eAK1B9wC,EAAY4yC,MAAME,SAAStsE,MACrBqtE,kBAAmBC,IAAeC,IAClCC,sBAAuBF,IAAeC,IACtCE,qBAAsBC,IAAeH,IACrCI,sBAAuBC,IAAcL,IACrCM,oBAAqBC,IAAeP,IACpCQ,uBAAwBH,IAAcL,IACtCS,uBAAwBV,IAAeC,IACvCU,sBAAuBP,IAAeH,MAIhDpB,EAAGjqE,QAAQ,WAAa,EACxB,GAAIonE,EAAA7jE,EAAe7B,WACf41B,EAAY0N,OACRG,WACI6mC,kBAAmB,SACnBf,SAAUnrE,OAAOmsE,OAAOnB,MACxBI,UAAWprE,OAAOmsE,OAAOjB,OACzBL,aAAc,GAElBP,iBAED,IAAIhD,EAAA7jE,EAAepB,sBACtBm1B,EAAY0N,OACRolC,WAEQ3C,SAAUyE,EAAUC,aAAahlE,OAAOilE,wBAIjD,IAAIhF,EAAA7jE,EAAenC,YACtBk2B,EAAY0N,OACRqnC,eAAgB,SAChBC,YAAa,cAGd,CACH,GAAMC,GACA,kFAGNC,GAAAjpE,EAAqB+pB,iBAAiB,GAAI3mB,OAAM4lE,IAChD1uE,EAAO0Z,MAAMg1D,GAoCrB,MAjCItC,GAAGjqE,QAAQ,YAAc,IACzBs3B,EAAY0N,OACRG,WACI6mC,kBAAmB,UACnBS,oBAAqBvzD,EAAQwzD,cAC7BzB,SAAUnrE,OAAOmsE,OAAOnB,MACxBI,UAAWprE,OAAOmsE,OAAOjB,OACzBL,aAAc,GAElBP,cAIJlxD,EAAQyzD,YACHr1C,EAAY0N,QAEb1N,EAAY0N,OAAUG,aAClBilC,cAER9yC,EAAY0N,MAAMolC,SAAStsE,MAAO6uE,UAAWzzD,EAAQyzD,aAOrDvF,EAAA7jE,EAAenC,aAAe8X,EAAQ0zD,sBAItCt1C,EAAYu1C,SAGTv1C,EAmHX,QAASw1C,GAAoB7C,EAAIr5C,GAC7B,GAAMm8C,GAAsBn8C,GAAUA,EAAOo8C,iBAAiB/uE,OAAS,EACjEgvE,EAAsBr8C,GAAUA,EAAOs8C,iBAAiBjvE,OAAS,GAE1C,IAAzBgsE,EAAGjqE,QAAQ,WACXykC,EAAQO,MAAQioC,IAES,IAAzBhD,EAAGjqE,QAAQ,WACXykC,EAAQylC,MAAQ6C,GAGpBl+C,EAAa+C,KAAK2xC,EAAAhgE,EAAUk2B,0BAA2BgL,GA0C3D,QAAS0oC,KAKDC,IACAA,GAAgC,SAAAC,YAGjBC,GACPA,GAAiCD,EAAG9nE,MAAM,GA5C1D,SAAsCgoE,GAkBlC,QAASC,GAAsBruE,GAC3B,MAAOqf,MAAKkK,WACRs/C,KAAM7oE,EAAK6oE,KACXxE,SAAUrkE,EAAKqkE,SACfiK,QAAStuE,EAAKsuE,QACdC,MAAOvuE,EAAKuuE,MACZC,OAAQxuE,EAAKwuE,SAvBrB,MAAIJ,GAAWtvE,SAAWqvE,GAA+BrvE,QAOrDsvE,EAAWvoE,IAAIwoE,GAAuB74D,OAAOjP,KAAK,MAC1C4nE,GACCtoE,IAAIwoE,GAAuB74D,OAAOjP,KAAK,KAmCJ2nE,IACpCO,EAA0BP,GAG9BvtE,OAAOmI,WAAWklE,EACdU,KAYhB,QAASC,GAA0BC,GAC/B,GAAMC,GACAD,EAAW/oE,IACT,SAAA+rC,GAEI,OACIyyB,SAHgCzyB,EAArCyyB,SAIKiK,QAJgC18B,EAA3B08B,QAKLzF,KALgCj3B,EAAlBi3B,KAMd0F,MANgC38B,EAAZ28B,QAUpCO,GAAA1qE,EAAW0sB,UAAUmF,UAAU84C,EAAA5yE,GAAempC,QAASupC,IAS3D,QAASJ,GAA0BO,GAC/Bb,GAAiCa,EAAgB5oE,MAAM,GACvD1H,EAAOsB,KACH,qCACAmuE,IAEJQ,EAA0BR,GAE1B,IAAMc,GACAd,GAA+BjjC,OAAO,SAAAzuC,GAAA,MAAgB,eAAXA,EAAEosE,OAC7CqG,EACAf,GAA+BjjC,OAAO,SAAAzuC,GAAA,MAAgB,eAAXA,EAAEosE,OAC7CsG,EACAF,EAAkB/jC,OAAO,SAAAzuC,GAAA,MAAiB,KAAZA,EAAE8xE,QAChCa,EACAF,EAAkBhkC,OAAO,SAAAzuC,GAAA,MAAiB,KAAZA,EAAE8xE,OAElCU,GAAkBnwE,QACXmwE,EAAkBnwE,SACbqwE,EAAiCrwE,SAC7CwmC,EAAQO,UAGRqpC,EAAkBpwE,QACXowE,EAAkBpwE,SACbswE,EAAiCtwE,SAC7CwmC,EAAQylC,UAGZr7C,EAAa+C,KAAK2xC,EAAAhgE,EAAUs/B,oBAAqBsrC,GASrD,QAASK,GAAWj6B,EAAIzuC,GACpByuC,GAAMA,sIAAMzuC,IAShB,QAAS2oE,GAAiBC,GA2BtB,MA3ByD1oE,WAAA/H,OAAA,YAAA+H,UAAA,IAAAA,UAAA,GAI/C,SAASsxB,EAAaq3C,EAAiBC,GACzC,MAAOF,GAAap3C,GACf0zB,KAAK,SAAAp6B,GAGF,MAFA49C,GAAWG,GAAmB/9C,IAEvBA,IAEVygC,MAAM,SAAA95C,GAGH,KAFAi3D,GAAWI,GAAiBr3D,IAEtBA,KAIZ,SAAS+f,EAAaq3C,EAAiBC,GACzCF,EAAap3C,EAAa,SAAA1G,GACtB49C,EAAWG,GAAmB/9C,KAC/B,SAAArZ,GACCi3D,EAAWI,GAAiBr3D,OAa5C,QAASs3D,GAAwCnnE,GAC7ConE,iBAAiBC,WACb,SAAAC,GAAA,MAAWtnE,GAASsnE,EAAQhqE,IAAIiqE,MAOxC,QAASA,GAA8BC,GACnC,GAAMlH,IAAQkH,EAAOlH,MAAQ,IAAIhyD,aAEjC,QACI23D,OAAQuB,EAAOvB,QAAU,KACzBD,MAAOwB,EAAOxB,MAKd1F,KAAMA,EACS,gBAATA,EAAyBA,EAAUA,EAAnC,QACA,KACNxE,SAAU0L,EAAOxxE,GACjB+vE,QAASyB,EAAOzB,SAAW,MA+GnC,QAAS0B,GAAmBlvD,EAAS2Q,GAEjC,GAAIw+C,GAAwB,WAQ5B,IANMA,IAAyBnvD,KAC3BmvD,EAAwB,iBACOnvD,KAC3BmvD,EAAwB,MAG5BA,EACAnvD,EAAQmvD,GAAyBx+C,MADrC,CAOA,GAAIupC,SAEAvpC,MACAupC,EAAMvpC,EAAOy+C,kBAKTz+C,EAAOy+C,eACDlV,GACKmV,KAAOC,WAAWC,gBAAgB5+C,KAGrD3Q,EAAQk6C,IAAMA,GAAO,IA6gCzB,QAASsV,GAAQv2D,EAASw2D,GACtBC,MACA9gD,EAAa+C,KAAK2xC,EAAAhgE,EAAUy+B,cAC5B4tC,EAAArsE,EAAemZ,KAAKxD,EAASw2D,GAEzBG,GAASzG,yBAA2BgE,IACpCA,GAAgC,SAAAC,GAC5BC,GAAiCD,EAAG5nE,OAAO,GAE3C5H,EAAOsB,KAAK,sBAAuBmuE,IACnCQ,EAA0BR,IAE1Bz+C,EAAa+C,KAAK2xC,EAAAhgE,EAAUu/B,sBACxBwqC,IAEAwC,GACAzxE,UAAUimC,aAAanB,iBACnB,eACA,iBAAM0sC,IAASjG,iBAAiBgE,KAEpCT,MAYhB,QAAS4C,GAAsBC,GAC3B,MAAO,UAAS/vD,EAAS2Q,GAErB,GAAMq/C,GAAMD,EAAsB9pE,MAAM2pE,GAAU7pE,UA4BlD,OA1BI4qB,IACOi/C,GAASvM,wBAAwB,WACjC1yC,EAAOo8C,gBACPp8C,EAAOo8C,iBAAiB/uE,QAGxBiyE,GACPjwD,EAAQkwD,UAAUN,GAASnM,wBACtBrS,MAAM,SAAS+e,GACZ,GAAM3uD,GACA,GAAIinD,GAAAnlE,EAAgB6sE,EAAI,MAAQ,eAEtC5D,GAAAjpE,EAAqBiqB,+BACjB6lB,QAASp4C,KACT8lB,OAAQU,IAGZ5jB,EAAOwF,KACH,sGAGA4c,EACAwB,KAITwuD,GD7nCSlG,ulBCpuBlBlsE,EAAS7B,OAAAq0E,EAAA5yE,WAAUyD,GAInBgrE,EACA9E,EAAA7jE,EAAepB,sBACXhH,EAAQ,UAMdisE,GAAA7jE,EAAelB,kBACflH,EAAQ,IAGZ,IAAM0zB,GAAe,GAAIyhD,GAAA/sE,EAEnBsqE,EAAuC,IAIvCppC,GACFylC,SACAllC,UAKAurC,EAAsB,UAEtBL,KAGA7E,KAGAD,KAGAM,KAGAF,KAGAI,KAEE4E,EAA0BhiE,SAAS4F,cAAc,SACjDq8D,WACOD,EAAwBL,UAEjC7C,UAOAF,UAqCE0C,MAEFH,MA0OEe,IACF1rC,OACI2rC,YAAa,GAAK,EAClB3F,QACID,MAAO,KACPl7B,IAAK,KACLnlB,IAAK,OA46CXmlD,GAAW,aAAA30E,GA/9Bb,QAAA01E,KAAc,gBAAA11E,EAAA4B,GAAA,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,sCAAAzO,KAAA21E,qKAAA31E,MAAA21E,EAAA3/B,WAAAj1C,OAAAk1C,eAAA0/B,IAAAn1E,KAAAR,KACJ4zB,UA89BG,UAAA3zB,EAAA4B,GAAA,qBAAAA,IAAA,OAAAA,EAAA,SAAA4M,WAAA,iEAAA5M,GAAA5B,GAAAwB,UAAAV,OAAAkqC,OAAAppC,KAAAJ,WAAAypC,aAAA9/B,MAAAnL,EAAAiB,YAAA,EAAA8mC,UAAA,EAAA/mC,cAAA,KAAAY,IAAAd,OAAA60E,eAAA70E,OAAA60E,eAAA31E,EAAA4B,GAAA5B,EAAA+1C,UAAAn0C,MAn+BMg0E,EAAA,GAKTjiD,kCAYS,GAAAg1C,GAAA5oE,KAAdie,EAAclT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,KAyBf,OAxBkC,iBAAvBkT,GAAQkyD,aACfA,EAAalyD,EAAQkyD,WACrBvtE,EAAOsB,KAAP,gBAA4BisE,IAEC,iBAAtBlyD,GAAQwyD,YACfA,EAAYxyD,EAAQwyD,UACpB7tE,EAAOsB,KAAP,eAA2BusE,IAEE,iBAAtBxyD,GAAQmyD,YACfA,EAAYnyD,EAAQmyD,UACpBxtE,EAAOsB,KAAP,eAA2BksE,IAEG,iBAAvBnyD,GAAQsyD,aACfA,EAAatyD,EAAQsyD,WACrB3tE,EAAOsB,KAAP,gBAA4BqsE,IAEE,iBAAvBtyD,GAAQ0yD,aACfA,EAAa1yD,EAAQ0yD,WACrB/tE,EAAOsB,KAAP,gBAA4BysE,IA9vBpCwB,GACM/uE,UAAUimC,cAAgBjmC,UAAUimC,aAAaslC,iBAC7C,SAASliE,GACPrJ,UAAUimC,aAAaslC,mBAAmB5e,KACtCtjD,EACA,iBAAMA,UAOZonE,kBAAoBA,iBAAiBC,WACjC,SAASrnE,GACPonE,iBAAiBC,WACb,SAAAC,GAAA,MACItnE,GACIsnE,EAAQhqE,IAAIiqE,cAmvB7B,GAAIh8B,SAAQ,SAAC4E,EAAS8F,GACzB,GAAIypB,EAAA7jE,EAAelB,iBACfwhE,EAAKkN,sBAAwBjxE,OAAOkxE,kBAEpCnN,EAAK6K,aACC,SAACp3C,EAAaq3C,EAAiBC,GAA/B,MACE9uE,QAAOzB,UAAUimC,aACZoqC,aAAap3C,GACb0zB,KAAK,SAAAp6B,GAGF,MAFA+9C,IAAmBA,EAAgB/9C,GAE5BA,IAEVygC,MAAM,SAAA5vC,GAGH,MAFAmtD,IAAiBA,EAAcntD,GAExBwxB,QAAQ0K,OAAOl8B,MAGtCoiD,EAAK+F,iBAAmB,SAAAliE,GAAA,MACpB5H,QAAOzB,UAAUimC,aAAaslC,mBACzB5e,KAAK,SAAAimB,GAGF,MAFAvpE,GAASupE,GAEFA,IAEV5f,MAAM,SAAA5vC,GAKH,MAJA5jB,GAAO0Z,MAAP,8BAA2CkK,GAE3C/Z,YAKZm8D,EAAKoF,kBACC8G,EAAsB,SAAC9vD,EAAS2Q,GAK9B,MAJI3Q,KACAA,EAAQixD,UAAYtgD,GAGjB3Q,IAGf4jD,EAAKqF,YAAc,SAAAt4C,GAAA,MAAUA,GAAOlzB,IACpCmmE,EAAKsF,WAAa,SAAAzD,GAAA,MAASA,GAAMhoE,QAC9B,IAAI0pE,EAAA7jE,EAAe7B,YACf0lE,EAAA7jE,EAAe5B,WACfylE,EAAA7jE,EAAexB,UACfqlE,EAAA7jE,EAAevB,cACfolE,EAAA7jE,EAAerB,gBAAiB,CAEvC2hE,EAAKkN,sBAAwB1sC,uBAC7B,IAAMqqC,GACArwE,UAAUC,mBAAmBgK,KAAKjK,UAExCwlE,GAAK6K,aAAeD,EAAiBC,GACrC7K,EAAK+F,iBAAmBwD,GAExBvJ,EAAKoF,kBACC8G,EAAsB,SAAC9vD,EAAS2Q,GAG9B,MAFAu+C,GAAmBlvD,EAAS2Q,GAErB3Q,IAEf4jD,EAAKqF,YAAc,SAASt4C,GAOxB,GAAMlzB,GAAKkzB,EAAOlzB,EAKlB,OACkB,gBAAPA,GACDA,EACAyzE,EAAA5tE,EAAQgjC,mBAAmB7oC,IAEzCmmE,EAAKsF,WAAa,SAASzD,GACvB,MAAOA,GAAMhoE,IAGZ0zE,kBAAkB10E,UAAUwwE,iBAC7BkE,kBAAkB10E,UAAUwwE,eAAiB,WACzC,MAAOjyE,MAAKo2E,cAGfD,kBAAkB10E,UAAUswE,iBAC7BoE,kBAAkB10E,UAAUswE,eAAiB,WACzC,MAAO/xE,MAAKq2E,kBAGjB,IAAIlK,EAAA7jE,EAAelC,SACtBwiE,EAAKkN,sBAAwBQ,EAAAhuE,EAC7BsgE,EAAK6K,aACCD,EACEpwE,UAAUimC,aAAaoqC,aAAapmE,KAChCjK,UAAUimC,kBAEtBu/B,EAAK+F,iBAAmBwD,GACxBvJ,EAAKoF,kBACC8G,EAAsB,SAAC9vD,EAAS2Q,GAG9B,MAFAu+C,GAAmBlvD,EAAS2Q,GAErB3Q,IAQf4jD,EAAKqF,YAAc,SAASt4C,GACxB,GAAMlzB,GAAKkzB,EAAO4gD,eAAiB5gD,EAAOlzB,EAE1C,OAAOyzE,GAAA5tE,EAAQgjC,mBAAmB7oC,IAOtCmmE,EAAKsF,WAAa,SAASzD,GACvB,MAAOA,GAAM8L,eAAiB9L,EAAMhoE,QAErC,KAAI0pE,EAAA7jE,EAAepB,sBA0EtB,WA6tBhB,UAAsCsvE,EAAc9zB,GAChD,GAAMpmC,GAAQ,GAAI5Q,OAAM8qE,EAWxBl6D,GAAM1b,KAAO,uBAEbgC,EAAO0Z,MAAMk6D,GACb9zB,EAAOpmC,IA/uBS,+CACAomC,EAtEJ,IA2CM+zB,GACA,GAAIz+B,SAAQ,SAAAzvC,GAAA,MAAK0oE,GAAUyF,YAAYnuE,IAI7C0oE,GAAUC,aAAayF,kBACnB1F,EAAUC,aAAa0F,WAAWhrE,OAClCqlE,EAAUC,aAAa0F,WAAWC,SAClC5F,EAAUC,aAAa0F,WAAW54D,KAClB,WACZy4D,EAAmB1mB,KAAK,WApD5B6Y,EAAKkN,sBAAwBC,kBAC7BnN,EAAK6K,aAAe5uE,OAAO4uE,aAC3B7K,EAAK+F,iBACCiF,EACNhL,EAAKoF,kBACC8G,EAAsB,SAAC9vD,EAAS2Q,GAC9B,GAAIA,EAAQ,CACR,GAAkB,eAAdA,EAAOlzB,IACc,eAAdkzB,EAAOlzB,GACd,MAMJ,IAAMq0E,GAAeC,EAAE/xD,EASvB,IAPImnD,EAAA7jE,EAAepB,wBACP4vE,EAAahgB,GAAG,aACxBggB,EAAaE,OAGXrhD,EAAOs8C,iBAAiBjvE,OAAS,IAEzB+zE,EAAE/xD,GAAS8xC,GAAG,YACxB,KAAM,IAAIprD,OACN,wDAKZ,MAAOsiE,mBAAkBhpD,EAAS2Q,KAE1CizC,EAAKqF,YACC,SAAAt4C,GAAA,MAAUugD,GAAA5tE,EAAQgjC,mBAAmB3V,EAAO88C,QAClD7J,EAAKsF,WACC,SAAAzD,GAAA,MAASA,GAAMhoE,IAErB+xE,EACIv2D,EACA2qD,EAAKqO,4BAA4B5pE,KAAjCu7D,IAcIhsB,OAGY,WAChB,GAAMtgC,GACA,GAAI5Q,OAAM,kCAEhB4Q,GAAM1b,KAAO,mBACb0b,EAAMm6D,mBAAqBA,EAE3B/zB,EAAOpmC,KAUnBssD,EAAKsO,mBAAmBj5D,GAGnBkuD,EAAA7jE,EAAepB,wBAChBstE,EAAQv2D,EAAS2qD,EAAKqO,4BAA4B5pE,KAAjCu7D,IACjBhsB,kDAoBO3+B,GACXkuD,EAAA7jE,EAAenC,YACfnG,KAAKgqE,kBACEmC,EAAA7jE,EAAe7B,YACnB0lE,EAAA7jE,EAAe5B,WACfylE,EAAA7jE,EAAexB,UACfqlE,EAAA7jE,EAAevB,cACfolE,EAAA7jE,EAAerB,mBAClBjH,KAAKgqE,eAAkBmF,WACjBgI,qBAAsB,IACtBC,wBACAC,yBAA0B,MAC1BC,6BACAC,+BACAC,yBAA0B,KAC1BC,wBAAyB,MAG3Bx5D,EAAQy5D,SAER13E,KAAKgqE,cAAcmF,SAAStsE,MAAO80E,cAGvC33E,KAAK8tE,iBACCvqD,KAAKgK,MAAMhK,KAAKkK,UAAUztB,KAAKgqE,gBAIhC/rD,EAAQ25D,qBACT53E,KAAKgqE,cAAcmF,SAAStsE,MACtBg1E,gCAIV73E,KAAK8tE,iBAAiBqB,SAAStsE,MAC3Bg1E,iCAIR73E,KAAK8tE,iBAAmB9tE,KAAK8tE,kBAAoB9tE,KAAKgqE,kEAkBlDgF,EACA0E,EACAoE,GACc,GAAd75D,GAAclT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MACZsxB,EAAc0yC,EAAeC,EAAI/wD,EAEvCrb,GAAOsB,KAAK,wBAAyBm4B,EAErC,KACIr8B,KAAKyzE,aACDp3C,EACA,SAAA1G,GACI/yB,EAAOkB,IAAI,sBACX+tE,EAAoB7C,EAAIr5C,GACxB+9C,EAAgB/9C,IAEpB,SAAArZ,GACIu1D,EAAoB7C,UACpBpsE,EAAOwF,KAAK,8CACRkU,EAAO+f,GAEPy7C,GACAA,EACI,GAAIrK,GAAAnlE,EAAgBgU,EAAO+f,EAAa2yC,MAG1D,MAAO/uE,GACL2C,EAAO0Z,MAAM,eAAgBrc,GAEzB63E,GACAA,EAAgB,GAAIrK,GAAAnlE,EAAgBrI,EAAGo8B,EAAa2yC,6DAahC+I,GAA6B,GAAA5O,GAAAnpE,KAAlBq8B,EAAkBtxB,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,KACzD,OAAO,IAAIitC,SAAQ,SAAC4E,EAAS8F,GACzB,IACIymB,EAAKsK,aAAap3C,GACb0zB,KAAK,SAAAp6B,GACF/yB,EAAOkB,IAAI,sBAKX+tE,EAAoBkG,EAAWpiD,GAE/BinB,EAAQjnB,KAEXygC,MAAM,SAAA95C,GACH1Z,EAAOwF,KAAK,yCACFkU,EADE,IACO+f,EADP,KAMZw1C,EAAoBkG,UACpBr1B,EAAO,GAAI+qB,GAAAnlE,EACPgU,EAAO+f,EAAa07C,MAElC,MAAOz7D,GACL1Z,EAAO0Z,MAAP,eAA4BA,GAC5BomC,EAAO,GAAI+qB,GAAAnlE,EAAgBgU,EAAO+f,EAAa07C,mDAiBnDC,EACAC,GACJ,IAAKtD,EAAArsE,EAAe4vE,gBAAkB/L,EAAA7jE,EAAeJ,gBACjD,MAAO8vC,SAAQ0K,OACX,GAAIh3C,OAAM,qCAGlB,IAAMysE,QACCH,GACHC,yBAGJ,OAAO,IAAIjgC,SAAQ,SAAC4E,EAAS8F,GACzBiyB,EAAArsE,EAAe8vE,aACXD,EACA,SAAAxiD,GACIinB,EAAQjnB,IAEZ,SAAArZ,GACIomC,EAAOpmC,gEAoBsB,GAAA+7D,GAAAr4E,KAAdie,EAAclT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MACnChL,EAAOC,KAEPs4E,OACCr6D,EAAQ+5D,6CACXC,sBAAuBh6D,EAAQg6D,uBAGnC,OAAO,IAAIjgC,SAAQ,SAAC4E,EAAS8F,GACzB,GAAMgxB,GAAkB,SAAS/9C,GAC7BinB,EA1lBhB,SAA2B27B,EAAS5I,GAChC,GAAI6I,UAAa/G,SAAegH,SAC1BzD,IAQN,IAAIuD,EAAS,CAIT,GAAMG,GAAaH,EAAQG,UAE3B,IAAIA,EAAY,CACZ,GAAMC,GACC9zE,OAAOsxE,mBAAqBtxE,OAAO+zE,YACpCvC,EAAcqC,EAAW3G,gBAE/B,IAAIsE,EAAYrzE,OAAQ,CAEpBw1E,EAAc,GAAIG,EAClB,KAAK,GAAIt4E,GAAI,EAAGA,EAAIg2E,EAAYrzE,OAAQ3C,IACpCm4E,EAAYK,SAASxC,EAAYh2E,IAIzC,GAAM+1E,GAAcsC,EAAWzG,gBAE/B,IAAImE,EAAYpzE,OAAQ,CAEpBy1E,EAAc,GAAIE,EAClB,KAAK,GAAI/uE,GAAI,EAAGA,EAAIwsE,EAAYpzE,OAAQ4G,IACpC6uE,EAAYI,SAASzC,EAAYxsE,SAOzC4uE,GAAcD,EAAQtJ,MACtBwJ,EAAcF,EAAQxuC,KAG1B0nC,GAAgB8G,EAAQO,QAG5B,GAAIrH,EAAe,IAAAsH,GAC0BtH,EAAjC97C,EADOojD,EACPpjD,OAAQ62C,EADDuM,EACCvM,SAAUC,EADXsM,EACWtM,UAE1BuI,GAAInyE,MACA8yB,SACA62C,WACAC,aACAhC,MAAO90C,EAAOs8C,iBAAiB,GAC/BnH,UAAWkO,EAAA5oE,EACXs8D,UAAWuM,EAAA3wE,EAAU8iC,UAqB7B,MAlBIotC,IACAxD,EAAInyE,MACA8yB,OAAQ6iD,EACR/N,MAAO+N,EAAYzG,iBAAiB,GACpCjH,UAAWkO,EAAA1wE,EACXokE,UAAW,OAGf+L,GACAzD,EAAInyE,MACA8yB,OAAQ8iD,EACRhO,MAAOgO,EAAYxG,iBAAiB,GACpCnH,UAAWkO,EAAA5oE,EACXs8D,UAAWuM,EAAA3wE,EAAU6iC,OACrBwkC,eAIDqF,GA2gB+Br/C,EAAQ1X,EAAQ0xD,aAU9C,IAPA1xD,EAAQurB,QAAUvrB,EAAQurB,UAAa,QAAS,SAChDvrB,EAAQ0xD,WAAa1xD,EAAQ0xD,YAAc,MAEtCgF,EAAArsE,EAAe4vE,gBAC2B,IAAxCj6D,EAAQurB,QAAQzkC,QAAQ,YAC3B29C,EAAO,GAAIh3C,OAAM,sCAEjBygE,EAAA7jE,EAAenC,aAQRgmE,EAAA7jE,EAAerB,iBACfklE,EAAA7jE,EAAepB,sBAAuB,CAC7C,GAAMutE,GAAM,SAASnG,EAAQ1sE,EAAG3B,GAC5BD,KAAKi3E,4BAA4B3I,EAAQ1sE,EAAG3B,EAAGge,IAG7Ci7D,GACFjK,MAASwF,EAAIpnE,KAAKtN,GAAQ,UAC1BgqC,MAAS0qC,EAAIpnE,KAAKtN,GAAQ,UAG1B40E,GAAArsE,EAAe4vE,gBACfgB,EAAUJ,QAAUnE,EAAArsE,EAAe8vE,aAAa/qE,KAC5CsnE,EAAArsE,EACAgwE,IAwfxB,QAASa,GAAcl7D,GACnB,IAAKA,EAAQurB,SAAsC,IAA3BvrB,EAAQurB,QAAQxmC,OACpC,MAAOib,GAAQy1D,gBAAgBz1D,EAAQs6D,YAG3C,IAAMjK,GAASrwD,EAAQurB,QAAQh/B,OAAO,EAAG,EAEzCyT,GAAQi7D,UAAU5K,GACd,SAAA34C,GACI1X,EAAQs6D,QAAUt6D,EAAQs6D,YAC1Bt6D,EAAQs6D,QAAQjK,GAAU34C,EAC1BwjD,EAAcl7D,IAElB,SAAA3B,GACIvb,OAAOg3B,KAAK9Z,EAAQs6D,SAASlqE,QACzB,SAAA1N,GAAA,MAAKi0E,IAAS/F,gBAAgB5wD,EAAQs6D,QAAQ53E,MAClDiC,EAAO0Z,MAAP,oBACwBgyD,EADxB,iBACgDhyD,GAEhD2B,EAAQ01D,cAAcr3D,OA/fdktB,QAASvrB,EAAQurB,QACjB+uC,WACA7E,kBACAC,cAAejxB,EACfw2B,kBAED,CACH,GAAME,GAAan7D,EAAQurB,QAAQzkC,QAAQ,YAAc,CAErDq0E,IACAn7D,EAAQurB,QAAQh/B,OACZyT,EAAQurB,QAAQzkC,QAAQ,WACxB,GAGJkZ,EAAQurB,QAAQxmC,OAChBq1E,EAAKpB,4BACDh5D,EAAQurB,QACR,SAAA7T,GACI,GAAM0jD,IACsC,IAAtCp7D,EAAQurB,QAAQzkC,QAAQ,SACxBu0E,GACsC,IAAtCr7D,EAAQurB,QAAQzkC,QAAQ,SACxB+sE,EACAn8C,EAAOo8C,iBAAiB/uE,OAAS,EACjCgvE,EACAr8C,EAAOs8C,iBAAiBjvE,OAAS,CAEvC,IAAKq2E,IAAyBvH,GAClBwH,IACItH,EAAsB,CAClCjyE,EAAK8uE,gBAAgBl5C,EAQrB,IAAM6T,KA0CN,OAxCI6vC,KACQvH,GACRtoC,EAAQ3mC,KAAK,SAGby2E,IACQtH,GACRxoC,EAAQ3mC,KAAK,aAWjB9C,GAAKk3E,4BACDztC,EACA,WAMIkZ,EAAO,GAAI+qB,GAAAnlE,GACL1H,KAAM,gBACRmuE,EACI9wD,EAAQurB,QACRvrB,GACJurB,KAGR,SAAAltB,GAGIomC,EAAOpmC,IACR2B,GAIPm7D,EACAzE,EAAArsE,EAAe8vE,aACXE,EACA,SAAAQ,GACIpF,GAAkBgF,WAAY/iD,EAC1BmjD,aACL,SAAAx8D,GACCvc,EAAK8uE,gBAAgBl5C,GAErB+sB,EAAOpmC,KAGfo3D,GAAkBgF,WAAY/iD,KAGtC,SAAArZ,GAAA,MAASomC,GAAOpmC,IAChB2B,GACGm7D,GACPzE,EAAArsE,EAAe8vE,aACXE,EACA,SAAAQ,GAAA,MAAWpF,IAAkBoF,aAC7B,SAAAx8D,GAAA,MAASomC,GAAOpmC,kEAmBF2B,GAC9Brb,EAAOsB,KAAK,yBAEZ,IAAMq1E,MAYAC,EAA4B,WAI9B,OAFkE,KADhDv7D,EAAQurB,aACgBzkC,QAAQ,WAG5C/E,KAAKy5E,oBACHx7D,EAAQ+5D,4CACR/5D,EAAQg6D,uBACVjgC,QAAQ4E,WAChBvvC,KAAKrN,MAkCD05E,EAA6B,WAC/B,GACMC,IADY17D,EAAQurB,UAAa,QAAS,UACN4F,OAAO,SAAAk/B,GAAA,MAClC,UAAXA,GACe,UAAXA,GAAsBnC,EAAA7jE,EAAeJ,iBAE7C,KAAKyxE,EAAwB32E,OACzB,MAAOg1C,SAAQ4E,SAGnB,IAAMvgB,GA7mClB,WAAkD,GAAvB2yC,GAAuBjkE,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MAAdkT,EAAclT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MAGxCsxB,EAAc9Y,KAAKgK,MAAMhK,KAAKkK,UAChCxP,EAAQoe,aAAeo5C,IAE3B,IAAIzG,EAAGjqE,QAAQ,UAAY,EAKvB,GAJKs3B,EAAY0N,QACb1N,EAAY0N,UAGZ9rB,EAAQovD,eACRhxC,EAAY0N,MAAMw+B,SAAWtqD,EAAQovD,mBAClC,CACH,GAAMR,GAAa5uD,EAAQ4uD,YAAcuC,EAAA9mE,EAAiB+mE,IAE1DhzC,GAAY0N,MAAM8iC,WAAaA,MAGnCxwC,GAAY0N,QAiDhB,OA9CIilC,GAAGjqE,QAAQ,UAAY,GAClBs3B,EAAY4yC,OAAsC,iBAAtB5yC,GAAY4yC,QACzC5yC,EAAY4yC,UASX5yC,EAAY4yC,MAAME,WACnB9yC,EAAY4yC,MAAME,aAGtB9yC,EAAY4yC,MAAME,SAAStsE,MACrB2pE,SAAUvuD,EAAQkvD,cAClB+C,kBAAmBC,IAAeC,IAClCC,sBAAuBF,IAAeC,IACtCE,qBAAsBC,IAAeH,IACrCI,sBAAuBC,IAAcL,IACrCM,oBAAqBC,IAAeP,IACpCQ,uBAAwBH,IAAcL,IACtCS,uBAAwBV,IAAeC,IACvCU,sBAAuBP,IAAeH,KAG5C/zC,EAAY4yC,SAGZD,EAAGjqE,QAAQ,YAAc,IACpBs3B,EAAY0N,OAAsC,iBAAtB1N,GAAY0N,QACzC1N,EAAY0N,UAGhB1N,EAAY0N,OACRG,WACI6mC,kBAAmB,UACnBS,oBAAqBvzD,EAAQwzD,cAC7BzB,SAAUnrE,OAAOmsE,OAAOnB,MACxBI,UAAWprE,OAAOmsE,OAAOjB,OACzBL,aAAc,KAKnBrzC,GA0iCKs9C,EAAyB17D,EAI7B,OAFArb,GAAOsB,KAAK,0BAA2Bm4B,GAEhCr8B,KAAK45E,gCACRD,EAAyBt9C,IAC/BhvB,KAAKrN,KAwCP,OAAOw5E,KACFzpB,KAjFiC,SAAS0hB,GAC3C,GAAKA,EAAL,CAD0D,GAKlD97C,GAAiC87C,EAAjC97C,OAAQ62C,EAAyBiF,EAAzBjF,SAAUC,EAAegF,EAAfhF,UAE1B8M,GAAqB12E,MACjB8yB,SACA62C,WACAC,aACAhC,MAAO90C,EAAOs8C,iBAAiB,GAC/BvF,UAAWuM,EAAA3wE,EAAU8iC,aAsExB2kB,KAAK2pB,GACL3pB,KAhC6B,SAAS8pB,GACvC,GAAKA,EAAL,CAIA,GAAMxD,GAAcwD,EAAS9H,gBAE7B,IAAIsE,EAAYrzE,OAAQ,CACpB,GAAMw1E,GAAc,GAAII,aAAYvC,EAEpCkD,GAAqB12E,MACjB8yB,OAAQ6iD,EACR/N,MAAO+N,EAAYzG,iBAAiB,KAI5C,GAAMqE,GAAcyD,EAAS5H,gBAE7B,IAAImE,EAAYpzE,OAAQ,CACpB,GAAMy1E,GAAc,GAAIG,aAAYxC,EAEpCmD,GAAqB12E,MACjB8yB,OAAQ8iD,EACRhO,MAAOgO,EAAYxG,iBAAiB,GACpCvF,UAAWuM,EAAA3wE,EAAU6iC,aAS5B4kB,KAAK,iBAAMwpB,qDAOhB,MAAO/vC,wCAOP,MAAOkrC,qDAOP,IAAKA,GACD,KAAM,IAAIhpE,OAAM,uBAGpB,OAAOouE,SACF12E,UAAUimC,cACJjmC,UAAUimC,aAAaslC,kBACE,mBAArBkF,mBACJA,iBAAiBC,iDAY5B,MAAIY,IACO18B,QAAQ4E,UAGZ,GAAI5E,SAAQ,SAAA4E,GAMfhpB,EAAauU,YAAYmgC,EAAAhgE,EAAUy+B,UALlB,QAAXjR,KACFlC,EAAasC,eAAeoyC,EAAAhgE,EAAUy+B,UAAWjR,GACjD8mB,wDAmBR,MAAO58C,MAAK+5E,aAAahqB,KAAK/vD,KAAKg6E,uBAAuB3sE,KAAKrN,uDAU3CouE,GACpB,MAAsB,WAAfA,GAA0C,gBAAfA,EAC5BoH,EACArJ,EAAA7jE,EAAe7B,YACV0lE,EAAA7jE,EAAenC,aACfgmE,EAAA7jE,EAAe5B,WACfylE,EAAA7jE,EAAepB,uBACfilE,EAAA7jE,EAAexB,UACfqlE,EAAA7jE,EAAevB,cACfolE,EAAA7jE,EAAelC,iDAQdwoE,GACZA,EAAYqL,YAAY5rE,QAAQ,SAAAo8D,IAEvB0B,EAAA7jE,EAAepB,uBAAyBujE,EAAMpyC,MAC/CoyC,EAAMpyC,SAKVu2C,EAAYv2C,MACZu2C,EAAYv2C,OAMZu2C,EAAYsL,SACZtL,EAAYsL,SAIhB,IAAMC,GAAMvL,EAAYwF,cAEpB+F,WACOvL,GAAYwF,gBAClBC,KAAOC,WAAW8F,gBAAgBD,sDASvC,MAAOxF,GAAArsE,EAAe4vE,2DAWL3P,GAMjB,MALKvoE,MAAKqoE,wBAAwB,WAC9BrwB,QAAQ0K,OACJ,GAAIh3C,OAAM,gDAGX6pE,EAAwBL,UAAU3M,GACpCxY,KAAK,WACFulB,EAAsB/M,EACtB0M,KAEAryE,EAAOkB,IAAP,8BAAyCykE,GAEzC30C,EAAa+C,KAAK2xC,EAAAhgE,EAAUq/B,4BACxB4gC,oDAUZ,MAAO+M,+DASP,MAAOjD,wDAOiB/D,GACxB,GAAMwE,MACAuH,GACF9R,SAAY+F,EAAO/F,SACnBwE,KAAQuB,EAAOvB,KACf0F,MAASnE,EAAOmE,MAChBD,QAAWlE,EAAOkE,QAKtB,OAFAM,GAAWjwE,KAAKw3E,IAEPvH,sDAWGz2C,EAAai+C,GACpBj+C,EAAY8yC,WACb9yC,EAAY8yC,aAKhB9yC,EAAY8yC,SACN9yC,EAAY8yC,SAAS//B,OACnB,SAAA1uC,GAAA,OAAMA,EAAEgB,eAAe,gCAE3B44E,GACAj+C,EAAY8yC,SAAStsE,MAAOg1E,2BAA4B,aAAAh2E,KAsIpEwG,GAAAC,EAAAiyE,KAAA/5E,KAAAqB,EAAA,qCAAA5B,EAAA4B,EAAAT,GAAA,qBAAAN,GAAAb,EAAA4B,GAAA,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,qCC13DO,QAAS+rE,GAAiB7qC,GAC7B,MAAO9rC,UAAS8rC,EAAMT,MAAM1oC,MAAM,KAAK,GAAI,IAQxC,QAASi0E,GAAmB9qC,GAC/B,MAAO9rC,UAAS8rC,EAAMT,MAAM1oC,MAAM,KAAK,GAAI,IAQ/C,QAASk0E,GAAcxqC,GACnB,MAAKA,GAAMhB,MAIJgB,EAAMhB,MACRnlC,IAAI,SAAAolC,GAAA,MAAYA,GAAS1sC,KACzB2sC,OAAO,SAAC5U,EAAM3uB,EAAOwjC,GAAd,MAAwBA,GAAMtqC,QAAQy1B,KAAU3uB,IACvD7I,OANM,EDs2DfnB,EAAAuO,EAAA9H,EAAAzG,EAAAnB,EAAAkB,EAAAR,EAAAT,EAAAkB,EAAA,qBAAAvB,IAAA,IAAAiI,GAAAnH,EAAA,IAAAf,GAAAe,IAAAmH,GAAA,mBAAAtI,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,OCz1DM84E,aAOF,QAAAA,GAAYzqC,GACR,GADeyF,EAAA31C,KAAA26E,IACVzqC,EACD,KAAM,IAAIxkC,OAAM,qBAGpB1L,MAAKkwC,MAAQA,qDAyEA0qC,EAAYC,GACzB,GAAMvkE,GAAYtW,KAAKkvC,MAAMQ,KACzB,SAAAorC,GAAA,MAAWA,GAAQr4E,KAAOm4E,GACvBE,EAAQxkE,YAAcukE,GAG7B,OAAOvkE,IAAaA,EAAUlL,yCAQvB2vE,GACF/6E,KAAKkwC,MAAMhB,OAAUlvC,KAAKkwC,MAAMhB,MAAMlsC,SAI3ChD,KAAKkwC,MAAMhB,MACLlvC,KAAKkwC,MAAMhB,MAAME,OAAO,SAAA0rC,GAAA,MAAWA,GAAQr4E,KAAOs4E,8CAQ3CD,GACb96E,KAAKkvC,MAAMrsC,KAAKi4E,qCAWVlrC,EAAWV,GACjB,MAAOlvC,MAAKuvC,WAAWG,KACnB,SAAAC,GAAA,MACIA,GAAMC,YAAcA,KACXV,GAASA,IAAUS,EAAMT,4CASnCU,GACP,MAAO5vC,MAAKuvC,WAAWH,OACnB,SAAAO,GAAA,MAASA,GAAMC,YAAcA,mDASdA,EAAWorC,GAC9B,MAAOh7E,MAAKuvC,WAAWG,KACnB,SAAAC,GAAA,MAASA,GAAMC,YAAcA,GACtB4qC,EAAiB7qC,KAAWqrC,2CAS5BC,GACX,MAAOj7E,MAAKkvC,MAAMQ,KACd,SAAAorC,GAAA,MAAiC,SAAtBA,EAAQxkE,YACF,OAAT2kE,GAAiBH,EAAQ1vE,QAAU6vE,4CAQ/C,MAAOP,GAAc16E,KAAKkwC,uDAS1B,gBAAOlwC,KAAKkwC,MAAMX,yDASlB,GAAMu7B,GAAY9qE,KAAKkwC,MAAMlyB,IAE7B,IAAkB,UAAd8sD,EACA,KAAM,IAAIp/D,OAAJ,qCACmCo/D,EADnC,IAMV,IAAiB,IAFA4P,EAAc16E,KAAKkwC,OAIhC,MAAOlwC,MAAKkwC,MAAMhB,MAAM,GAAGzsC,EAI/B,IAAIzC,KAAKkwC,MAAMX,WAAY,CACvB,GAAMM,GAAW7vC,KAAKk7E,UAAU,MAEhC,IAAIrrC,EACA,MAAO2qC,GAAiB3qC,EAE5B,IAAMJ,GAAWzvC,KAAKk7E,UAAU,MAEhC,IAAIzrC,EACA,MAAO+qC,GAAiB/qC,EAE5B,IAAM0rC,GAAWn7E,KAAKk7E,UAAU,SAEhC,IAAIC,EACA,MAAOX,GAAiBW,uCAczB3rC,GACP,GAAMC,GAAWzvC,KAAKo7E,uBAAuB,MAAO5rC,EAGpD,OAAOC,IAAYgrC,EAAmBhrC,sCAQtC,MAAOzvC,MAAKkvC,MACPnlC,IAAI,SAAAolC,GAAA,MAAYA,GAAS1sC,KACzB2sC,OAAO,SAAC5U,EAAM3uB,EAAOwjC,GAAd,MAAwBA,GAAMtqC,QAAQy1B,KAAU3uB,mDAS5D,GAAMi/D,GAAY9qE,KAAKkwC,MAAMlyB,IAE7B,IAAkB,UAAd8sD,EACA,KAAM,IAAIp/D,OAAJ,0CACwCo/D,EAGlD,IAAMuQ,GAAar7E,KAAKs7E,WARL1kD,KAAAC,KAAAC,QAAA,KAUnB,OAAAC,GAAAC,EAA4Bh3B,KAAKuvC,WAAjCrY,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAA6C,IAAlC2kD,GAAkCxkD,EAAA3rB,KAIzC,IAAgC,QAA5BmwE,EAAc3rC,WACqB,WAA5B2rC,EAAc3rC,UAAwB,CAE7C,GAAM4rC,GAAgBf,EAAmBc,EAEzCF,GAAW7wE,OACP6wE,EAAWt2E,QAAQy2E,GAAgB,KApB5B,MAAAh1D,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAwBnB,MAAOukD,4CAOP,MAAO93D,MAAKkK,UAAUztB,KAAKkwC,MAAMX,yDAQhB/U,GACZx6B,KAAKkwC,MAAMX,aAIhBvvC,KAAKkwC,MAAMX,WAAavvC,KAAKkwC,MAAMX,WAC9BH,OAAO,SAAAqsC,GAAA,OAAqD,IAAxCA,EAAUvsC,MAAMnqC,QAAhB,GAA2By1B,sDAOhCoV,GACf5vC,KAAKkwC,MAAMX,aAIhBvvC,KAAKkwC,MAAMX,WACLvvC,KAAKkwC,MAAMX,WACRH,OAAO,SAAAqsC,GAAA,MAAaA,GAAU7rC,YAAcA,yCAQ7C8rC,EAASC,GACb37E,KAAKkwC,MAAMhB,OACXlvC,KAAKkwC,MAAMhB,MAAM7gC,QAAQ,SAAA8gC,GACjBA,EAAS1sC,KAAOi5E,IAChBvsC,EAAS1sC,GAAKk5E,0CAWjBhsC,GACT3vC,KAAKuvC,WAAW1sC,KAAK8sC,iCAvTrB,MAJK3vC,MAAKkwC,MAAMhB,QACZlvC,KAAKkwC,MAAMhB,UAGRlvC,KAAKkwC,MAAMhB,oBASZA,GACNlvC,KAAKkwC,MAAMhB,MAAQA,oCAQnB,MAAOlvC,MAAKkwC,MAAM5B,wBAORA,GACVtuC,KAAKkwC,MAAM5B,UAAYA,qCAYvB,MAJKtuC,MAAKkwC,MAAMX,aACZvvC,KAAKkwC,MAAMX,eAGRvvC,KAAKkwC,MAAMX,yBAQPA,GACXvvC,KAAKkwC,MAAMX,WAAaA,WA4RnBqsC,EAAb,WAOI,QAAAA,GAAYC,GAAQlmC,EAAA31C,KAAA47E,GAChB57E,KAAK87E,UAAYC,EAAAxuD,MAAgBsuD,GARzC,MAAA3lC,GAAA0lC,IAAAnrE,IAAA,cAAArF,MAAA,SAoBgB0/D,GACR,GAAMkR,GACAh8E,KAAK87E,UAAU1vC,MAAMsD,KAAK,SAAAQ,GAAA,MAASA,GAAMlyB,OAAS8sD,GAExD,OAAOkR,GAAgB,GAAIrB,GAAUqB,GAAiB,QAxB9DvrE,IAAA,WAAArF,MAAA,WAiCQ,MAAO2wE,GAAA9pC,MAAgBjyC,KAAK87E,eAjCpCF,MAAA,SAAA37E,EAAA4B,EAAAT,GAAA,YAAAL,QAAAC,eAAAa,EAAA,cAAAuJ,OAAA,IAAAhK,EAAAT,EAAAkB,EAAA,oCAAA0G,KAAAnH,EAAAT,EAAAkB,EAAA,oCAAAxB,KAAAe,EAAAT,EAAAkB,EAAA,+BAAAf,KAAAM,EAAAT,EAAAkB,EAAA,4BAAAyG,KAAAlH,EAAAT,EAAAkB,EAAA,6BAAAD,KAAAR,EAAAT,EAAAkB,EAAA,iCAAAnB,KAAAU,EAAAT,EAAAkB,EAAA,kCAAA6yB,KAAAtzB,EAAAT,EAAAkB,EAAA,gCAAAvB,KAAAc,EAAAT,EAAAkB,EAAA,uCAAAlB,KC9YAT,EAAAS,EAAA0H,EAAA,wCAAA4zE,IAIO,IAAMC,GAAmB,YAMnBC,EAAmB,YAOnBC,EAAc,OAMdC,EAAW,KAMXC,EAAY,MAMZC,EAAgB,UAOhBC,EAAiB,WAMjBC,EAAe,SAOfC,EAAsB,sBAOtBT,EAAuB,yCAAAh8E,EAAA4B,EAAAT,GAAA,YAAAL,QAAAC,eAAAa,EAAA,cAAAuJ,OAAA,IAAAhK,EAAAT,EAAAkB,EAAA,uCAAA0G,KC9DpCrI,EAAAS,EAAA0H,EAAA,wCAAAs0E,IAGO,IAAMC,GAAsB,yBAMtBD,EAAuB,oCAAA18E,EAAA4B,EAAAT,GAAA,YAAAL,QAAAC,eAAAa,EAAA,cAAAuJ,OAAA,IAAAhK,EAAAT,EAAAkB,EAAA,2CAAA0G,KAAAnH,EAAAT,EAAAkB,EAAA,8BAAAxB,KAAAe,EAAAT,EAAAkB,EAAA,wCAAAf,KAAAM,EAAAT,EAAAkB,EAAA,wCAAAyG,KAAAlH,EAAAT,EAAAkB,EAAA,oCAAAD,KAAAR,EAAAT,EAAAkB,EAAA,qCAAAnB,KAAAU,EAAAT,EAAAkB,EAAA,sCAAA6yB,KAAAtzB,EAAAT,EAAAkB,EAAA,8BAAAvB,KAAAc,EAAAT,EAAAkB,EAAA,qCAAAlB,KAAAS,EAAAT,EAAAkB,EAAA,gDAAAF,KAAAP,EAAAT,EAAAkB,EAAA,sCAAA6b,KAAAtc,EAAAT,EAAAkB,EAAA,0CAAAwK,KAAAjL,EAAAT,EAAAkB,EAAA,qCAAA8yB,KAAAvzB,EAAAT,EAAAkB,EAAA,qCAAApB,KAAAW,EAAAT,EAAAkB,EAAA,gCAAAm/B,KCTpC9gC,EAAAS,EAAA0H,EAAA,6CAAAw0E,IAOO,IAAM74C,GAA0B,oCAK1B84C,EAAa,uBAKbC,EAAuB,uBAKvBC,EAAuB,uBAKvBC,EAAmB,6BAMnBC,EAAoB,wCAKpBt4C,EAAqB,+BAKrB/B,EAAa,uBAKbgC,EAAoB,8BAMpBs4C,EACP,0CAKOn4C,EAAqB,8BAKrBo4C,EAAyB,kCAKzBx3C,EAAoB,8BAKpBM,EAAoB,8BAKpBm3C,EAAe,0BAKfR,EAA4B,+CAAA58E,EAAA4B,GCpFzC,QAAAy7E,KAAoBt9E,KAAAu9E,YAAAv9E,KAAAw9E,mBAAAx9E,KAAAy9E,OAAA,KAA0DH,EAAA77E,WAAoBypC,YAAAoyC,EAAA9oD,IAAA,SAAAlsB,GAAqCxC,QAAAhC,IAAA,0CAAAwE,IAAyDo1E,OAAA,SAAAp1E,GAAoBxC,QAAAhC,IAAA,yCAAAwE,IAAwDya,OAAA,SAAAza,EAAA8H,GAAsBpQ,KAAAu9E,SAAA16E,MAAoBg+C,GAAAv4C,EAAAoW,cAAAtO,EAAA,KAAAA,KAAyCutE,OAAA,SAAAr1E,GAAoB,OAAA8H,GAAA,EAAYA,EAAApQ,KAAAu9E,SAAAv6E,SAAuBoN,EAAA,CAAK,GAAA1P,GAAAV,KAAAu9E,SAAAntE,EAAuB1P,GAAAmgD,GAAAngD,EAAAmgD,GAAArgD,KAAAE,EAAAge,KAAApW,GAAA5H,EAAAmgD,GAAAv4C,KAAkCs1E,UAAA,SAAAt1E,GAAuBtI,KAAAy9E,OAAAn1E,GAAcyB,IAAA,aAAiB8zE,QAAA,SAAAv1E,EAAA8H,GAAuB,OAAApQ,KAAAy9E,QAAAz9E,KAAAy9E,OAAAn1E,EAAA8H,IAAqC0tE,kBAAA,SAAAx1E,EAAA8H,EAAA1P,GAAmCV,KAAAw9E,gBAAA36E,MAA2Bk7E,WAAAz1E,EAAAu4C,GAAAzwC,EAAAsO,cAAAhe,EAAA,KAAAA,KAAsDs9E,UAAA,SAAA11E,EAAA8H,GAAyB,OAAA1P,GAAA,EAAYA,EAAAV,KAAAw9E,gBAAAx6E,SAA8BtC,EAAA,CAAK,GAAAC,GAAAX,KAAAw9E,gBAAA98E,EAA8BC,GAAAo9E,aAAAz1E,GAAA,OAAA3H,EAAAkgD,aAAAlgD,EAAAkgD,KAAAlgD,EAAA+d,KAAA/d,EAAAkgD,GAAArgD,KAAAG,EAAA+d,KAAAtO,GAAAzP,EAAAkgD,GAAAzwC,OAAqFzQ,EAAAD,QAAA49E,iBCUr3B,QAAAW,KACA,SAAAvyE,OAAA,mCAEA,QAAAwyE,KACA,SAAAxyE,OAAA,qCAsBA,QAAAyyE,GAAAC,GACA,GAAAC,IAAArxE,WAEA,MAAAA,YAAAoxE,EAAA,EAGA,KAAAC,IAAAJ,IAAAI,IAAArxE,WAEA,MADAqxE,GAAArxE,WACAA,WAAAoxE,EAAA,EAEA,KAEA,MAAAC,GAAAD,EAAA,GACK,MAAAn+E,GACL,IAEA,MAAAo+E,GAAA79E,KAAA,KAAA49E,EAAA,GACS,MAAAn+E,GAET,MAAAo+E,GAAA79E,KAAAR,KAAAo+E,EAAA,KAsCA,QAAAE,KACAC,GAAAC,IAGAD,KACAC,EAAAx7E,OACA+3C,EAAAyjC,EAAAj0E,OAAAwwC,GAEA0jC,GAAA,EAEA1jC,EAAA/3C,QACA07E,KAIA,QAAAA,KACA,IAAAH,EAAA,CAGA,GAAAh6D,GAAA45D,EAAAG,EACAC,KAGA,KADA,GAAAxwE,GAAAgtC,EAAA/3C,OACA+K,GAAA,CAGA,IAFAywE,EAAAzjC,EACAA,OACA0jC,EAAA1wE,GACAywE,GACAA,EAAAC,GAAA5/D,KAGA4/D,IAAA,EACA1wE,EAAAgtC,EAAA/3C,OAEAw7E,EAAA,KACAD,KAnEA,SAAAI,GACA,GAAAC,IAAAx6D,aAEA,MAAAA,cAAAu6D,EAGA,KAAAC,IAAAV,IAAAU,IAAAx6D,aAEA,MADAw6D,GAAAx6D,aACAA,aAAAu6D,EAEA,KAEAC,EAAAD,GACK,MAAA1+E,GACL,IAEA,MAAA2+E,GAAAp+E,KAAA,KAAAm+E,GACS,MAAA1+E,GAGT,MAAA2+E,GAAAp+E,KAAAR,KAAA2+E,MAgDAp6D,IAiBA,QAAAs6D,GAAAT,EAAA/uC,GACArvC,KAAAo+E,MACAp+E,KAAAqvC,QAYA,QAAAyvC,MAhKA,GAOAT,GACAO,EARAjnC,EAAAh4C,EAAAD,YAgBA,WACA,IAEA2+E,EADA,kBAAArxE,YACAA,WAEAixE,EAEK,MAAAh+E,GACLo+E,EAAAJ,EAEA,IAEAW,EADA,kBAAAx6D,cACAA,aAEA85D,EAEK,MAAAj+E,GACL2+E,EAAAV,KAuDA,IAEAM,GAFAzjC,KACAwjC,KAEAE,GAAA,CAyCA9mC,GAAAspB,SAAA,SAAAmd,GACA,GAAAvzE,GAAA,GAAA2C,OAAAzC,UAAA/H,OAAA,EACA,IAAA+H,UAAA/H,OAAA,EACA,OAAA3C,GAAA,EAAuBA,EAAA0K,UAAA/H,OAAsB3C,IAC7CwK,EAAAxK,EAAA,GAAA0K,UAAA1K,EAGA06C,GAAAl4C,KAAA,GAAAg8E,GAAAT,EAAAvzE,IACA,IAAAkwC,EAAA/3C,QAAAu7E,GACAJ,EAAAO,IASAG,EAAAp9E,UAAAod,IAAA,WACA7e,KAAAo+E,IAAAnzE,MAAA,KAAAjL,KAAAqvC,QAEAsI,EAAAiN,MAAA,UACAjN,EAAAxO,WACAwO,EAAAwO,OACAxO,EAAAonC,QACApnC,EAAA1zC,QAAA,GACA0zC,EAAAuvB,YAIAvvB,EAAA5hB,GAAA+oD,EACAnnC,EAAAxP,YAAA22C,EACAnnC,EAAArE,KAAAwrC,EACAnnC,EAAAtP,IAAAy2C,EACAnnC,EAAAzhB,eAAA4oD,EACAnnC,EAAAzf,mBAAA4mD,EACAnnC,EAAAhhB,KAAAmoD,EACAnnC,EAAAqnC,gBAAAF,EACAnnC,EAAAsnC,oBAAAH,EAEAnnC,EAAA1E,UAAA,SAAAryC,GAAqC,UAErC+2C,EAAAunC,QAAA,SAAAt+E,GACA,SAAA8K,OAAA,qCAGAisC,EAAAwnC,IAAA,WAA2B,WAC3BxnC,EAAAynC,MAAA,SAAAC,GACA,SAAA3zE,OAAA,mCAEAisC,EAAA2nC,MAAA,WAA4B,oBAAAr/E,EAAA4B,GC9H5BlC,EAAOD,SAxDH6/E,MACI1P,MAAO,KACPE,OAAQ,KACRyP,MAAO,GAEXC,QACI5P,MAAO,KACPE,OAAQ,KACRyP,MAAO,GAEXE,KACI7P,MAAO,KACPE,OAAQ,IACRyP,MAAO,GAEXG,IACI9P,MAAO,KACPE,OAAQ,IACRyP,MAAO,GAEXI,KACI/P,MAAO,IACPE,OAAQ,IACRyP,MAAO,GAIXK,KACIhQ,MAAO,IACPE,OAAQ,IACRyP,MAAO,GAEXM,KACIjQ,MAAO,IACPE,OAAQ,IACRyP,MAAO,GAEXO,KACIlQ,MAAO,IACPE,OAAQ,IACRyP,MAAO,GAIXQ,KACInQ,MAAO,IACPE,OAAQ,IACRyP,MAAO,GAEXS,KACIpQ,MAAO,IACPE,OAAQ,IACRyP,MAAO,cAAAv/E,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAAmB,EAAAT,EAAAkB,EAAA,qBAAA8yB,IAAA,IAAApsB,GAAAnH,EAAA,GAAAf,GAAAe,IAAAmH,GAAAnH,EAAA,IAAAN,EAAAM,EAAA,IAAAkH,EAAAlH,EAAA,GAAAQ,EAAAR,EAAA,GAAAV,EAAAU,EAAA,GAAAszB,EAAAtzB,IAAAV,GAAAJ,EAAAc,EAAA,GAAAT,EAAA,mBAAAV,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MC5CTe,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAQnBi6E,EAAgC,IAQhCC,EAA2B,IAsBpBC,GAITC,OAAQ,SAQRC,SAAU,WAKVC,YAAa,cAKbC,UAAW,aAOMC,aAmGjB,QAAAA,GAAYC,EAAKlZ,EAAYvpD,iGAASje,KAAAygF,GAClCzgF,KAAK0gF,IAAMA,EACX1gF,KAAKwnE,WAAaA,EAQlBxnE,KAAK2gF,eAQL3gF,KAAK4gF,qBAaL5gF,KAAK6gF,kBACsC,gBAA9B5iE,GAAQ4iE,kBACX5iE,EAAQ4iE,kBAAoBX,EAUtClgF,KAAK8gF,eACmC,gBAA3B7iE,GAAQ6iE,eACX7iE,EAAQ6iE,eAAiBX,EAuBnCngF,KAAK+gF,qBACLn+E,EAAOsB,KAAP,0BAAsClE,KAAK8gF,gBAY3C9gF,KAAKghF,sBAAwB,GAAIrtD,KASjC3zB,KAAKihF,gBAAkB,GAAIttD,WA7Ld8sD,wDAyBTS,EACA1X,EACA2X,EACAC,EACAC,GACJ,MAAKH,GAKME,EAIAhB,EAA4BC,OAInCiB,EAAAh5E,EAAehB,wCACV+5E,EAGM7X,EACA2X,EACDf,EAA4BG,YAC5BH,EAA4BI,UAG/BJ,EAA4BE,SAPxBF,EAA4BC,OAYpC7W,EACD4W,EAA4BC,OAC5BD,EAA4BE,SA1BvBF,EAA4BG,2DAyCba,EAAcC,GACxC,MAAKC,GAAAh5E,EAAehB,wCAMb85E,IAAiBC,EAClBjB,EAA4BC,OAC5BD,EAA4BG,YALvBH,EAA4BC,WA8GZ1sD,kDAURlxB,GACnB,MAAOzC,MAAK0gF,IAAIlX,UAAU/mE,GACpBzC,KAAK8gF,eAAiB9gF,KAAK6gF,iDASjC7gF,KAAKuhF,6BACCvhF,KAAKwhF,4BAA4Bn0E,KAAKrN,MAE5CA,KAAK0gF,IAAIv4C,YACLs5C,EAAAn5E,EAAU0+B,6BACVhnC,KAAKuhF,8BAGTvhF,KAAK0hF,aAAe1hF,KAAK2hF,8BAA8Bt0E,KAAKrN,MAC5DA,KAAKwnE,WAAWzxC,GAAG6rD,EAAA9hD,WAAkC9/B,KAAK0hF,cAKtDJ,EAAAh5E,EAAehB,0CAEftH,KAAK6hF,iBAAmB7hF,KAAK8hF,gBAAgBz0E,KAAKrN,MAClDA,KAAK0gF,IAAIv4C,YACLs5C,EAAAn5E,EAAUg/B,kBAAmBtnC,KAAK6hF,kBAEtC7hF,KAAK+hF,mBAAqB/hF,KAAKgiF,kBAAkB30E,KAAKrN,MACtDA,KAAK0gF,IAAIv4C,YACLs5C,EAAAn5E,EAAUk/B,oBAAqBxnC,KAAK+hF,oBAIxC/hF,KAAKiiF,oBAAsBjiF,KAAKkiF,mBAAmB70E,KAAKrN,MACxDA,KAAKwnE,WAAWzxC,GACZ6rD,EAAAphD,YACAxgC,KAAKiiF,qBAETjiF,KAAKmiF,sBAAwBniF,KAAKoiF,qBAAqB/0E,KAAKrN,MAC5DA,KAAKwnE,WAAWzxC,GACZ6rD,EAAAjhD,cACA3gC,KAAKmiF,uBAITniF,KAAKqiF,yBACCriF,KAAKsiF,wBAAwBj1E,KAAKrN,OAG5CA,KAAKmoE,gBAAkBnoE,KAAKmoE,gBAAgB96D,KAAKrN,MACjDA,KAAKwnE,WAAWzxC,GACZ6rD,EAAApiD,yBACAx/B,KAAKmoE,iBAETnoE,KAAKuiF,qBACCviF,KAAK2hF,8BAA8Bt0E,KAAKrN,MAC9CA,KAAK0gF,IAAI3qD,GACL0rD,EAAAn5E,EAAU4+B,oBAAqBlnC,KAAKuiF,wDASxCviF,KAAK0gF,IAAIxqD,eACLurD,EAAAn5E,EAAU0+B,6BACVhnC,KAAKuhF,8BAELD,EAAAh5E,EAAehB,0CACftH,KAAK0gF,IAAIxqD,eACLurD,EAAAn5E,EAAUg/B,kBACVtnC,KAAK6hF,kBACT7hF,KAAK0gF,IAAIxqD,eACLurD,EAAAn5E,EAAUk/B,oBACVxnC,KAAK+hF,oBAET/hF,KAAKwnE,WAAWn/B,IACZu5C,EAAAphD,YACAxgC,KAAKiiF,qBACTjiF,KAAKwnE,WAAWn/B,IACZu5C,EAAAjhD,cACA3gC,KAAKmiF,wBAGbniF,KAAKwnE,WAAWn/B,IACZu5C,EAAApiD,yBACAx/B,KAAKmoE,iBAETnoE,KAAK0gF,IAAIxqD,eACLurD,EAAAn5E,EAAU4+B,oBAAqBlnC,KAAKuiF,sBAExCviF,KAAKwnE,WAAWn/B,IACZu5C,EAAA9hD,WAAkC9/B,KAAK0hF,aAE3C,IAAMc,GAAiBzhF,OAAOg3B,KAAK/3B,KAAK2gF,aAhClC/pD,KAAAC,KAAAC,QAAA,KAkCN,OAAAC,GAAAC,EAA4BwrD,EAA5BtrD,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAA4C,IAAjC6rD,GAAiC1rD,EAAA3rB,KACxCpL,MAAKokB,aAAaq+D,GAClBziF,KAAK0iF,uBAAuBD,IApC1B,MAAAj8D,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAwCN92B,KAAK4gF,yEAUmB+B,EAAYC,GAEpChgF,EAAOyZ,MAAP,mDACuD4C,KAAK4K,MAD5D,MAEQ84D,EAFR,KAEuBC,GAGnBD,IAAe3iF,KAAKwnE,WAAWqb,aAE/B7iF,KAAK4gF,kBAAkB+B,GAAcC,EACrC5iF,KAAK8iF,0BAA0BH,oDASfI,EAAaC,GACjC,GAAID,EAAYE,wBAA0BD,EAAW,CAEjD,GAAML,GAAaI,EAAYG,OAE/BH,GAAYI,qBAAqBH,GAEjCpgF,EAAOyZ,MAAP,6BACiC4C,KAAK4K,MADtC,KACgD84D,EADhD,KAEQK,GAGRI,EAAA96E,EAAW00B,QACPzZ,KAAKkK,WACDhrB,GAAI,mBACJsgF,YAAaJ,EACbt8D,OAAQ28D,KAGhBhjF,KAAKwnE,WAAW5zC,aAAa+C,KACzBirD,EAAAjiD,gCACAgjD,EAAYK,yCAWXP,GACLziF,KAAK2gF,YAAY8B,KACjB59E,OAAOuf,aAAapkB,KAAK2gF,YAAY8B,IACrCziF,KAAK2gF,YAAY8B,GAAiB,SAAAhyE,IAAA,yBAAArF,MAAA,SAUnBq3E,GACnBziF,KAAK+gF,kBAAkB0B,GAAiB,QAAAhyE,IAAA,qBAAArF,MAAA,SAUzBi4E,GACVA,EAAYxnD,WACNwnD,EAAYrY,YAAcsY,EAAAlzE,IAEjCxN,EAAOyZ,MAAP,uCAEQgnE,EAAYE,oBAEpBF,EAAYttD,GACRytD,EAAA9iD,mBACA1gC,KAAKqiF,wEAWIgB,GACjB,IAAKA,EAAYxnD,WACNwnD,EAAYrY,YAAcsY,EAAAlzE,EAAiB,CAElD,GAAMuyE,GAAaU,EAAYE,kBAE/B3gF,GAAOyZ,MAAP,qCAAkDsmE,GAElDU,EAAYh7C,IACRm7C,EAAA9iD,mBACA1gC,KAAKqiF,0BAETriF,KAAKokB,aAAau+D,GAClB3iF,KAAK0iF,uBAAuBC,GAE5B3iF,KAAK8iF,0BAA0BH,+CAiBpBI,GACf,IAAKzB,EAAAh5E,EAAehB,wCAChB,QAGJ,IAAM7E,GAAKsgF,EAAYG,QACjBO,EAAsBV,EAAYW,8BAClC3C,EAAoB/gF,KAAK+gF,kBAAkBt+E,GAC3C8hB,EAAUvkB,KAAK2jF,uBAAuBlhF,EAE5C,OAAOghF,IAC6B,gBAAtB1C,IACN9hE,KAAK4K,MAAQk3D,GAAsBx8D,0DAS3C,GAAMq/D,GAAe5jF,KAAKwnE,WAAWqc,kBADTnsD,KAAAC,KAAAC,QAAA,KAG5B,OAAAC,GAAAC,EAA0B8rD,EAA1B1sD,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAwC,IAA7BqrD,GAA6BlrD,EAAAzsB,KACpCpL,MAAK8iF,0BAA0BC,EAAYG,UAJnB,MAAA18D,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,uDAeNn1B,GACtB,GAAMsgF,GAAc/iF,KAAKwnE,WAAWsc,mBAAmBrhF,EAEvD,IAAKsgF,EAAL,CAYA,GAAMgB,GAAY/jF,KAAKwnE,WAAWwc,cAC5BC,EAAsBjkF,KAAKkkF,qBAAqBzhF,GAChD0hF,EAAwC,IAAxBnkF,KAAK0gF,IAAI0D,WAIzBhD,EAAe2B,EAAY3B,gBAAkB+C,EAC7C9C,EAAqBrhF,KAAKqhF,mBAAmB0B,GAC7CvZ,EAAYxpE,KAAK0gF,IAAIlX,UAAU/mE,GACjC4hF,EAAoBrkF,KAAK4gF,kBAAkBn+E,EAEd,kBAAtB4hF,KAGPzhF,EAAOyZ,MAAM,uDACbgoE,KAGJ,IAAMC,GACAP,EACItD,EAAmC8D,uBACjCnD,EACAC,GACFZ,EAAmC+D,uBACjCH,EACA7a,EACAya,EACA7C,EACAC,EAIRiD,KAAalE,EAA4BI,WACzCxgF,KAAKykF,qBAAqBhiF,GAG9BG,EAAOyZ,MAAP,8BACkC5Z,EADlC,qBAEQ2+E,EAFR,oBAGQiD,EAHR,wBAIQhD,EAJR,cAKQ0C,EALR,kBAMQva,EANR,gCAOQuZ,EAAYE,sBAPpB,OAOgDqB,GAEhDtkF,KAAK0kF,wBAAwB3B,EAAauB,OAlDtC1hF,GAAOwF,KAAP,gDAA4D3F,6CA6Db,GAAvCkiF,GAAuC55E,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MAApB65E,EAAoB75E,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MAC7C8e,EAAM5K,KAAK4K,KAEjBjnB,GAAOyZ,MACH,yBAA0BsoE,EAAcC,EAAe/6D,EAJR,IAAAiP,MAAAC,KAAAC,QAAA,KAMnD,OAAAC,GAAAC,EAAiByrD,EAAjBztD,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,KAA+B,IAApBr2B,GAAoBw2B,EAAA7tB,KAC3BpL,MAAKghF,sBAAsB7oD,OAAO11B,GAClCzC,KAAKykF,qBAAqBhiF,GAC1BzC,KAAK8iF,0BAA0BrgF,IATgB,MAAA+jB,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,IAAA,GAAAI,MAAAC,KAAAC,QAAA,KAWnD,OAAAC,GAAAC,EAAiBorD,EAAjB1tD,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,KAAgC,IAArB32B,GAAqB82B,EAAAnuB,KAE5BpL,MAAKghF,sBAAsBxrD,IAAI/yB,EAAIonB,GACnC7pB,KAAK8iF,0BAA0BrgF,IAdgB,MAAA+jB,GAAA6S,KAAAC,EAAA9S,EAAA,aAAA4S,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,WAAA4B,EAAA,KAAAC,kDA0BlCmpD,GACjB,GAAMoC,GAAS7kF,KAAKihF,gBAAgB9/E,IAAIshF,EAEpCoC,KACAzgE,aAAaygE,GACb7kF,KAAKihF,gBAAgB9oD,OAAOsqD,iDAkBfA,GAAe,GAAA1sC,GAAA/1C,KAC1BghF,EACAhhF,KAAKghF,sBAAsB7/E,IAAIshF,EAErC,UAAIzB,GACI/hE,KAAK4K,MAAQm3D,GAtoBK,OA8oBXhhF,KAAKihF,gBAAgB9/E,IAAIshF,IAGpCziF,KAAKihF,gBAAgBzrD,IAAIitD,EAAez1E,WACpC,iBAAM+oC,GAAK+sC,0BAA0BL,IAlpBnB,aAspBnBhyE,IAAA,kBAAArF,MAAA,SASKq/D,GAAO,GAAA7B,GAAA5oE,KACbyiF,EAAgBhY,EAAM8Y,mBACtBR,EAAc/iF,KAAKwnE,WAAWsc,mBAAmBrB,EAGvD,IADA7/E,EAAOyZ,MAAP,6BAA0ComE,EAAiBxjE,KAAK4K,OAC3Dk5D,GAML,GADA/iF,KAAK+gF,kBAAkB0B,GAAiBxjE,KAAK4K,OACxCk5D,EAAY3B,eAAgB,CAI7BphF,KAAKokB,aAAaq+D,EAGlB,IAAMl+D,GAAUvkB,KAAK2jF,uBAAuBlB,EAE5CziF,MAAK2gF,YAAY8B,GAAiB59E,OAAOmI,WAAW,WAChDpK,EAAOyZ,MAAP,6BACiComE,EADjC,2BAEUl+D,EAFV,OAGAqkD,EAAKxkD,aAAaq+D,GAClB7Z,EAAKka,0BAA0BL,IAChCl+D,QApBH3hB,GAAO0Z,MAAP,0BAAuCmmE,6CA8B7BhY,GACd,GAAMgY,GAAgBhY,EAAM8Y,kBAE5B3gF,GAAOyZ,MAAP,+BACmComE,EAAiBxjE,KAAK4K,OAEzD7pB,KAAKokB,aAAaq+D,GAClBziF,KAAK0iF,uBAAuBD,GAE5BziF,KAAK8iF,0BAA0BL,mDASXhY,GACpB,GAAMgY,GAAgBhY,EAAM8Y,kBAE5B3gF,GAAOyZ,MAAP,8CACkDomE,EAC9ChY,EAAMqa,WAEV9kF,KAAK8iF,0BAA0BL,mHC/vBvC75E,GACA9C,EAAA5F,EAAA,GAAAsC,UAAAyD,GAEAgrE,OAIAtxE,GAAAD,QAAAuxE,EAGAA,EAAAhzD,QAAAgzD,EAAAhzD,YASAgzD,EAAA/8D,QAAA,SAYA+8D,EAAA8T,cAAA9T,EAAA8T,eAAA,SAAAC,KAMA/T,EAAAgU,oBAKAhU,EAAAyF,YAAA,SAAAjqE,GACA,qBAAAA,GACA,SAAAf,OAAA,4CAGAulE,EAAAiU,kBAEAz4E,EAAA,OAAAwkE,EAAAC,aAAAhlE,QAGA+kE,EAAAgU,iBAAApiF,KAAA4J,IAKAwkE,EAAAC,aAAAD,EAAAC,iBAIAD,EAAAC,aAAA0F,WAAA3F,EAAAC,aAAA0F,aACAhrE,OAAA,MACAirE,SAAA,kBACAsO,SAAA,UACAnnE,KAAA,gCACAonE,OAAA,oBACAC,WAAA,4BACAC,aAAA,KACAC,YAAA,UACAC,eACAhuC,IAAA,gCACAiuC,IAAA,2CAGAxU,EAAAC,aAAA0F,WAAA4O,eAAA,OAAAvU,EAAAC,aAAA0F,WAAA4O,gBACApiF,UAAAsiF,SAAA/hF,MAAA,SACAstE,EAAAC,aAAA0F,WAAA0O,aAAArU,EAAAC,aAAA0F,WAAA4O,cAAAhuC,IAEAp0C,UAAAsiF,SAAA/hF,MAAA,WACAstE,EAAAC,aAAA0F,WAAA0O,aAAArU,EAAAC,aAAA0F,WAAA4O,cAAAC,MAMAxU,EAAAC,aAAAyU,MACAC,KAAA,OACAnzD,MAAA,QACAD,MAAA,SAIAy+C,EAAAC,aAAA2U,OAAA33E,KAAA+T,SAAApU,SAAA,IAAAvD,MAAA,GAGA2mE,EAAAC,aAAAhlE,OAAA,KAKA+kE,EAAAC,aAAAhuE,YAAA,KAIA+tE,EAAAC,aAAA4U,sBAAA,KAKA7U,EAAAC,aAAAyF,kBAAA,KAGA1F,EAAAC,aAAA6U,wBAAA,KAGA9U,EAAAC,aAAA8U,aAAA,KAIA/U,EAAAC,aAAA+U,eACAL,KAAA,EACAM,aAAA,EACAC,UAAA,EACAC,SAAA,EACAC,MAAA,GAKApV,EAAAC,aAAAoV,YAAArV,EAAAC,aAAA+U,cAAAL,KAIA3U,EAAAiU,qBAWAjU,EAAAC,aAAAqV,mBACAX,KAAA,OACAlvE,MAAA,QACA8vE,QAAA,UACAjvE,KAAA,OACAkvE,QAAA,UACAC,UAAA,aAIAzV,EAAAC,aAAAyV,mBAAA,KAGA1V,EAAAC,aAAA0V,oBAAA,KAYAC,kBAAA,WACA,gBAAAtzE,SAAA6a,WACA6iD,EAAAC,aAAAoV,YAAArV,EAAAC,aAAA+U,cAAAI,MACApV,EAAA6V,8BAEA,IAAAC,GAAAC,YAAA,WACA,aAAAzzE,SAAA6a,aAEA64D,cAAAF,GACA9V,EAAAC,aAAAoV,YAAArV,EAAAC,aAAA+U,cAAAI,MACApV,EAAA6V,4BAEK,MAIL7V,EAAA6V,wBAAA,WACA7V,EAAAiU,oBACAjU,EAAAiU,qBAGAjU,EAAAgU,iBAAAjiF,OACAiuE,EAAAgU,iBAAA52E,QAAA,SAAA5B,GACA,kBAAAxM,IACAwM,EAAA,OAAAwkE,EAAAC,aAAAhlE,UAIK,kBAAA+kE,GAAA8T,eACL9T,EAAA8T,cAAA,OAAA9T,EAAAC,aAAAhlE,UAMA+kE,EAAAr5D,MACAsvE,QACAC,qBAAA,yFAEAC,cAAA,wCACAC,OAAA,eAEAC,SACAC,gBAAA,sBACAF,OAAA,iBAaApW,EAAAuW,sBACAC,SAAA,WACAC,SAAA,WACAhnE,UAAA,YACAu/C,UAAA,YACA5oC,KAAA,YACAswD,aAAA,eACAC,OAAA,SACAC,OAAA,UAIA5W,EAAA6W,6BAIA7W,EAAA8W,UAAA,KAWA9W,EAAA+W,2BAAA,WACA,GAAAC,GAAA,IAGA,IAAApjF,OAAAqjF,SAAAC,QAAAtjF,OAAAqyC,OAAA9zC,UAAAM,UAAAqB,QAAA,YACAkjF,EAAA7kF,UAAAM,UAAAC,MAAA,mBAEAykF,sBAAA,QACAC,sBAAAxkF,SAAAokF,EAAA,YACAK,qBAAA,GACAC,mBAAA,SACAC,wBAAA,WAGG,IAAAplF,UAAAM,UAAAC,MAAA,qBACHskF,EAAA7kF,UAAAM,UAAAC,MAAA,uBAEA,IAAA8kF,GAAA5kF,UAAAT,UAAAM,UAAAC,MAAA,6CAEAykF,uBAAA,SACAC,sBAAApxC,YAAAgxC,EAAA,WAAAzhF,MAAA,YACA8hF,qBAAA,EACAC,mBAAA,SACAC,wBAAAC,EAAA,oBAIG,IAAArlF,UAAAM,UAAAqB,QAAA,WACHkjF,EAAA7kF,UAAAM,UAAAC,MAAA,qBAGAykF,sBAAA,QACAC,sBAAAxkF,SAAAokF,EAAA,YACAK,qBAAA,EACAC,mBAAA,KACAC,wBAAA,SAGG,IAAAplF,UAAAM,UAAAqB,QAAA,WACHkjF,EAAA7kF,UAAAM,UAAAC,MAAA,yBAEAykF,sBAAA,SACAC,sBAAAxkF,SAAAokF,EAAA,YACAK,qBAAA,EACAC,mBAAA,KACAC,wBAAA,SAGG,IAAAplF,UAAAM,UAAAqB,QAAA,WACHkjF,EAAA7kF,UAAAM,UAAAC,MAAA,yBAGAykF,sBAAA,UACAC,sBAAAxkF,SAAAokF,EAAA,YACAK,qBAAA,EACAC,mBAAA,KACAC,wBAAA,SAGG,IAAAj1E,SAAAyF,aACHivE,EAAA,kBAAA5wC,KAAAj0C,UAAAM,eAEA0kF,sBAAA,KACAC,sBAAAxkF,SAAAokF,EAAA,OACAK,qBAAA,EACAC,mBAAA,SACAC,wBAAA,OAEAH,wBACAJ,EAAA,oBAAA5wC,KAAAj0C,UAAAM,eAEA2kF,sBAAAxkF,SAAAokF,EAAA,iBAIG,IAAApjF,OAAA6jF,YAAAtlF,UAAAM,UAAAC,MAAA,sBACHskF,EAAA7kF,UAAAM,UAAAC,MAAA,0BAKAykF,sBAAA,OACAC,sBAAApxC,YAAAgxC,EAAA,WAAAzhF,MAAA,YACA8hF,qBAAA,SACAC,mBAAA,KACAC,wBAAA,SAIG,uBAAAG,iBAAAvlF,UAAAM,UAAAqB,QAAA,YACHkjF,EAAA7kF,UAAAM,UAAAC,MAAA,2BAEAykF,sBAAA,UACAC,sBAAAxkF,SAAAokF,EAAA,YACAK,qBAAA,GACAC,mBAAA,MACAC,wBAAA,WAIG,IAAA3jF,OAAA2xC,QAAA3xC,OAAA2xC,OAAAoyC,UAAAxlF,UAAAM,UAAAqB,QAAA,WACHkjF,EAAA7kF,UAAAM,UAAAC,MAAA,iCAEAykF,sBAAA,SACAC,sBAAAxkF,SAAAokF,EAAA,YACAK,qBAAA,GACAC,mBAAA,SACAC,wBAAAH,sBAAA,oBAGG,qCAAA9jF,KAAAnB,UAAAM,WAAA,CACHukF,EAAA7kF,UAAAM,UAAAC,MAAA,sBAEA,IAAAklF,GAAAzlF,UAAAM,UAAAC,MAAA,sBAEAykF,uBAAA,SACAC,sBAAAxkF,SAAAokF,EAAA,YACAK,qBAAA,EACAC,mBAAA,IAAAM,EAAA7lF,OAAA,cACAwlF,wBAAA,IAAAK,EAAA7lF,OAAA,gBAGG,+CAAAuB,KAAAnB,UAAAM,aACHukF,EAAA7kF,UAAAM,UAAAC,MAAA,+BAEAykF,sBAAA,SACAC,sBAAAxkF,SAAAokF,EAAA,YACAK,qBAAA,EACAC,mBAAA,KACAC,wBAAA,KAIA3jF,QAAAujF,4CACAvjF,OAAAwjF,4CACAxjF,OAAAyjF,0CACAzjF,OAAA0jF,sCACA1jF,OAAA2jF,iDAGAvX,EAAA6X,SAAA,SAAA3wE,EAAA4wE,EAAAz7E,GACA6K,EAAA+vB,iBACA/vB,EAAA+vB,iBAAA6gD,EAAAz7E,MACG6K,EAAA6wE,YACH7wE,EAAA6wE,YAAA,KAAAD,EAAAz7E,GAEA6K,EAAA4wE,GAAAz7E,GAIA2jE,EAAAgY,sBAAA,SAAAnvE,EAAAovE,EAAAC,EAAAC,EAAAC,GAEA,gBAAA91E,SAAA6a,WAAA,CAIA,GAAAje,GAAAtL,OACAxE,EAAAkT,SAAA4F,cAAA,SACA9Y,GAAAO,KAAA,kBACAP,EAAAmW,MAAAi9B,SAAA,QACApzC,EAAAmW,MAAA8yE,IAAA,QACAjpF,EAAAmW,MAAA+yE,KAAA,EACAlpF,EAAAmW,MAAAgzE,MAAA,EACAnpF,EAAAmW,MAAAq5D,MAAA,OACAxvE,EAAAmW,MAAAu5D,OAAA,OACA1vE,EAAAmW,MAAAizE,gBAAA,UACAppF,EAAAmW,MAAAkzE,OAAA,OACArpF,EAAAmW,MAAAmzE,aAAA,oBACAtpF,EAAAmW,MAAAozE,OAAA,UACA,gBAAAvpF,GAAAmW,MAAAqzE,iBACAxpF,EAAAmW,MAAAqzE,iBAAA,mBACG,gBAAAxpF,GAAAmW,MAAAszE,aACHzpF,EAAAmW,MAAAszE,WAAA,oBAEAv2E,SAAA0C,KAAAiD,YAAA7Y,EACA,IAAAK,GAAAL,EAAA0pF,cAAA1pF,EAAA0pF,cACA1pF,EAAA2pF,gBAAAz2E,SAAAlT,EAAA2pF,gBAAAz2E,SAAAlT,EAAA2pF,eACAtpF,GAAA6S,SAAAwb,OACAruB,EAAA6S,SAAA0+B,MAAA,2JAE6Bn4B,EAAA,WAC7BovE,GAAAC,GACAzoF,EAAA6S,SAAA0+B,MAAA,qBAAAi3C,EAAA,gDACAxoF,EAAA6S,SAAA+d,QAGA2/C,EAAA6X,SAAApoF,EAAA6S,SAAA02E,eAAA,yBAAAhqF,GACAopF,GACApY,EAAAgY,sBAAAhY,EAAAr5D,KAAAsyE,UACAjZ,EAAAr5D,KAAAsyE,UAAA3C,gBAAAtW,EAAAr5D,KAAA0vE,QAAAC,gBACAtW,EAAAr5D,KAAA0vE,QAAAD,OAAA,gCAEAxiF,OAAAkqB,KAAAo6D,EAAAC,EAAA,iBAEAnpF,EAAAkqF,gBACA,KACAlqF,EAAAmqF,gBACO,MAAA9tE,IAEP,GAAA+tE,GAAArD,YAAA,WACAsD,MACAlnF,UAAAmnF,QAAAC,YAEAvZ,EAAAC,aAAAyF,kBACA1F,EAAAC,aAAA0F,WAAAhrE,OACAqlE,EAAAC,aAAA0F,WAAAC,SACA5F,EAAAC,aAAA0F,WAAA54D,KACA,WACAipE,cAAAoD,GACApZ,EAAAC,aAAA4U,yBAEA,eAGO,OAIP7U,EAAA6X,SAAApoF,EAAA6S,SAAA02E,eAAA,2BAAAhqF,GACAkQ,EAAAoD,SAAA0C,KAAAw0E,YAAApqF,MAGAK,EAAA6S,SAAA+d,QAEAtkB,WAAA,WACA,gBAAA3M,GAAAmW,MAAAk0E,gBACArqF,EAAAmW,MAAAk0E,gBAAA,mBACK,gBAAArqF,GAAAmW,MAAAm0E,UACLtqF,EAAAmW,MAAAm0E,UAAA,mBAEAtqF,EAAAmW,MAAA8yE,IAAA,OAEG,OAQHf,mBAAA,KAMAqC,8BACA,SAAAC,EAAAC,EAAAr+E,EAAA4vB,GACA,qBAAA5vB,GAAA,CAGA,GAAAs+E,MACAC,EAAA,YAAA5C,sBAEA6C,EAAA,QAAA1C,oBAAAF,sBAAA,GACA6C,EAAA,YAAAL,CAMA,IAAAG,GAAAE,GAAAtpF,EACA,UACAy6B,GAAA6N,UAAAihD,wBACK,MAAA7uE,GACLxW,EAAAwW,MAAA,2CACAxW,EAAAwW,aAEG0uE,KAAAE,IACH7uD,EAAA6N,UAAAihD,2BAEA,KAAAH,EAEA,OAAAhiF,KAAAqzB,GAAA6N,UACA7N,EAAA6N,UAAAxoC,eAAAsH,KACA,IAAAA,EAAAjE,QAAA,cACAs3B,GAAA6N,UAAAlhC,IAOAgiF,GAAAE,GAAAD,IACAF,MAEAt+E,EAAAs+E,EAAA1uD,KASA+uD,wBAAA,SAAAC,EAAAC,EAAA7+E,GACA,kBAAAA,IAIA4+E,EAAAprF,GAAA,OAEAgxE,EAAA6W,0BAAAuD,IACAC,IAAAra,EAAAuW,qBAAAG,cACA2D,IAAAra,EAAAuW,qBAAAI,QACA0D,IAAAra,EAAAuW,qBAAAK,SACA5W,EAAA6W,0BAAAuD,OAEAC,EAAAra,EAAAuW,qBAAA8D,GACAra,EAAA6W,0BAAAuD,GAAAtmF,QAAAumF,GAAA,IACAra,EAAA6W,0BAAAuD,GAAAxoF,KAAAyoF,GACAA,IAAAra,EAAAuW,qBAAA9mE,WACA1T,WAAA,WACAikE,EAAA6W,0BAAAuD,GACAxoF,KAAAouE,EAAAuW,qBAAAnwD,MACA5qB,EAAAwkE,EAAAuW,qBAAAnwD,OACO,KAEP5qB,EAAA6+E,KArBAxlF,EAAAsC,KAAA,+DA2CAmjF,gBAAA,KAcAC,iBAAA,KAIAzV,kBAAA,KAGA0V,sBAAA,kBAAAA,uBACAA,sBAAA,KAGAC,gBAAA,kBAAAA,iBACAA,gBAAA,KAIAjY,aAAA,KAGAzF,kBAAA,KAGA2d,oBAAA,KASAvD,sBAAA,KAGAC,sBAAA,KAGAC,qBAAA,OAGAllF,UAAAgB,iBACAhB,UAAAC,oBACAD,UAAAimC,cACAjmC,UAAAM,UAAAC,MAAA,wBACA,KAAAP,UAAAM,UAAAC,MAAA,kBAAAX,QACA,KAAAI,UAAAM,UAAAC,MAAA,iBAAAX,QAAAI,UAAAM,UAAAqB,QAAA,cA8yFA,gBAAAe,IAAA,kBAAAA,GAAAhC,OAEAgC,MAAgBA,GAGhBhC,IAAA,SAAA8J,KACA9H,EAAA5B,KAAA,SAAA0J,KACA9H,EAAAwW,MAAA,SAAA1O,KACA9H,EAAAu5E,IAAA,SAAAzxE,KACA9H,EAAA8lF,UAAA,SAAAh+E,KACA9H,EAAAutC,MAAA,SAAAzlC,KACA9H,EAAAsC,KAAA,SAAAwF,KACA9H,EAAA88D,MAAA,SAAAh1D,KACA9H,EAAAuW,MAAA,SAAAzO,KACA9H,EAAA88D,MAAA,SAAAh1D,KACA9H,EAAA+lF,KAAA,SAAAj+E,KACA9H,EAAAgmF,QAAA,SAAAl+E,KACA9H,EAAA6pC,MAAA,SAAA/hC,KACA9H,EAAAimF,eAAA,SAAAn+E,KACA9H,EAAAkmF,SAAA,SAAAp+E,MAGAqjE,EAAA+W,6BACAsC,KAAA,OAAAlC,sBAGAnX,EAAAC,aAAAyV,mBAAA,WACA,KAAA1V,EAAAC,aAAAoV,cAAArV,EAAAC,aAAA+U,cAAAI,UAMApV,EAAAC,aAAA0V,oBAAA,SAAAn6E,GACA,GAAAwkE,EAAAC,aAAAoV,cAAArV,EAAAC,aAAA+U,cAAAI,MAGA55E,QAGA,IAAAw/E,GAAAjF,YAAA,WACA/V,EAAAC,aAAAoV,cAAArV,EAAAC,aAAA+U,cAAAI,QACAY,cAAAgF,GACAx/E,MAEO,MAIPwkE,EAAAC,aAAAhuE,YAAA,SAAAgpF,GACAjb,EAAAC,aAAA0V,oBAAA,WACA3V,EAAAC,aAAAhlE,OAAAhJ,YAAAgpF,MAIAjb,EAAAC,aAAA8U,aAAA,WAEA,gBAAAzyE,SAAA6a,YAKA6iD,EAAAC,aAAAoV,cAAArV,EAAAC,aAAA+U,cAAAC,aAAA,CAMA,GAFAjV,EAAAC,aAAAoV,YAAArV,EAAAC,aAAA+U,cAAAE,UAEA,OAAAiC,uBAAAC,uBAAA,IACA,GAAAr8C,GAAAz4B,SAAA2H,wBAeA,KAdA+1D,EAAAC,aAAAhlE,OAAAqH,SAAA4F,cAAA,OACA83D,EAAAC,aAAAhlE,OAAA0R,UAAA,eACAqzD,EAAAC,aAAA0F,WAAAuO,SAAA,WACAlU,EAAAC,aAAA0F,WAAA54D,KAAA,wDAEAizD,EAAAC,aAAA0F,WAAAuO,SAAA,8EAEAlU,EAAAC,aAAA2U,OAAA,oCACA5U,EAAAC,aAAA0F,WAAAwO,OAAA,gCACAnU,EAAAC,aAAAyU,KAAAC,KAAA,QAEA3U,EAAAhzD,QAAAkuE,WAAA,oDAEA,YACAlb,EAAAC,aAAAhlE,OAAAylB,YACAqa,EAAA9yB,YAAA+3D,EAAAC,aAAAhlE,OAAAylB,WAEApe,UAAA0C,KAAAiD,YAAA8yB,GAGAilC,EAAAC,aAAAhlE,OACAqH,SAAA02E,eAAAhZ,EAAAC,aAAA0F,WAAAuO,cAGAlU,GAAAC,aAAAhlE,OAAAqH,SAAA4F,cAAA,UACA83D,EAAAC,aAAAhlE,OAAAzJ,GACAwuE,EAAAC,aAAA0F,WAAAuO,SAEAmF,MACArZ,EAAAC,aAAAhlE,OAAA2jE,MAAA,MACAoB,EAAAC,aAAAhlE,OAAA6jE,OAAA,QAGAkB,EAAAC,aAAAhlE,OAAA2jE,MAAA,MACAoB,EAAAC,aAAAhlE,OAAA6jE,OAAA,OAEAkB,EAAAC,aAAAhlE,OAAA8R,KAAAizD,EAAAC,aAAA0F,WAAA54D,KACAizD,EAAAC,aAAAhlE,OAAA0R,UAAA,+BACAqzD,EAAAC,aAAA0F,WAAAwO,OAAA,mCAEAnU,EAAAC,aAAA0F,WAAAuO,SAAA,gDAEAlU,EAAAhzD,QAAAkuE,WAAA,oDACA,+BAAAlb,EAAAC,aAAA2U,OAAA,8BACA5U,EAAAC,aAAAyU,KAAAC,KAAA,OACAryE,SAAA0C,KAAAiD,YAAA+3D,EAAAC,aAAAhlE,OAIA+kE,GAAAC,aAAAoV,YAAArV,EAAAC,aAAA+U,cAAAG,WAGAnV,EAAAC,aAAAyF,kBACA,SAAAyV,EAAAvV,EAAAwV,EAAAC,EAAAC,GACA,GAAAjC,KASK,CACL,IACA,GAAAhxE,eAAA8yE,EAAA,IAAAvV,GACO,MAAA52E,GAEP,WADAssF,KAGAD,QAhBA,CAEA,OADAE,GAAAppF,UAAAqpF,UACApsF,EAAA,EAAqBA,EAAAmsF,EAAAxpF,OAAwB3C,IAC7C,GAAAmsF,EAAAnsF,GAAA2d,KAAAjZ,QAAAsnF,IAAA,EAEA,WADAC,IAIAC,OAYAtb,EAAAC,aAAA4U,sBAAA,WACA,GAAA7U,EAAAC,aAAAoV,cACArV,EAAAC,aAAA+U,cAAAI,MADA,CAMApV,EAAAC,aAAAoV,YAAArV,EAAAC,aAAA+U,cAAAC,aAEAjV,EAAA8W,UAAA,SAAA2E,GACA,cAAAA,eAGAnB,gBAAA,SAAApR,EAAA7lC,EAAAq4C,GACA,GAAAC,GAAA,KACAC,EAAA1S,EAAA3zE,MAAA,IAcA,OAbA,KAAAqmF,EAAA,GAAA9nF,QAAA,QACA6nF,GACAzS,MACA2S,mBAEO,IAAAD,EAAA,GAAA9nF,QAAA,UACP6nF,GACAzS,MACA2S,kBACAC,WAAAJ,EACAr4C,aAGAs4C,GAGApB,iBAAA,SAAAwB,EAAA14C,EAAAq4C,GAEA,OADAM,MACA5sF,EAAA,EAAqBA,EAAA2sF,EAAAhqF,SAAiB3C,EACtC4sF,EAAApqF,KAAA0oF,gBAAAyB,EAAA3sF,GAAAi0C,EAAAq4C,GAEA,OAAAM,IAGAxB,sBAAA,SAAAvnF,GAEA,MADA+sE,GAAAC,aAAAyV,qBACA1V,EAAAC,aAAAhlE,OACAghF,4BAAAhpF,EAAA8Z,KAAA9Z,EAAAusC,MAGAslC,kBAAA,SAAAoX,EAAA9wD,GAEA,YAAA8wD,GACA,OAAAA,IACA3/E,MAAAG,QAAAw/E,EAAAF,YACA,SAAAvhF,OAAA,sEAIA,aAAA2wB,GAAA,OAAAA,EAAA,CACA,GAAA+wD,KAUA,IATAA,GAAA,gBAAA/wD,GACA+wD,GAAA/wD,EAAA36B,eAAA,uBACA26B,EAAA6N,WACA,OAAA7N,EAAA6N,WACA7N,EAAA6N,UAAAgB,cAAAnqC,OACAqsF,GAAA/wD,EAAA36B,eAAA,sBACA26B,EAAA8yC,UACA,OAAA9yC,EAAA8yC,WACA3hE,MAAAG,QAAA0uB,EAAA8yC,UAEA,SAAAzjE,OAAA,yEAKAulE,EAAAC,aAAAyV,oBAGA,IAAAsG,GAAA,IACA,IAAAE,GAAA3/E,MAAAG,QAAAw/E,EAAAF,YAAA,CACAA,EAAAE,EAAAF,UACA,QAAA5sF,GAAA,EAAuBA,EAAA4sF,EAAAjqF,OAAuB3C,IAE9C4sF,EAAA5sF,GAAA2sF,OAAAC,EAAA5sF,GAAA85E,MACA8S,EAAA5sF,GAAA85E,IAAA8S,EAAA5sF,GAAA2sF,MAEAC,EAAA5sF,GAAAysF,eAAA7b,EACA8W,UAAAkF,EAAA5sF,GAAAi0C,WACA28B,EAAA8W,UAAAkF,EAAA5sF,GAAA0sF,YAIA,GAAA9b,EAAAC,aAAAhlE,OAAAmhF,yBACApc,EAAAC,aAAAhlE,OAAAmhF,wBAAA,EAKA,MAHAJ,KACAE,EAAAF,cAEAhc,EAAAC,aAAAhlE,OAAAohF,eAAAH,EAEA,IAAAjjD,GAAA7N,KAAA6N,UACA7N,EAAA6N,UAAA,KACAilC,EAAA9yC,KAAA8yC,SACA9yC,EAAA8yC,SAAA,IACA,OAAA8B,GAAAC,aAAAhlE,OACAohF,eAAArc,EAAAC,aAAA2U,OACAoH,EAAA/iD,EAAAilC,IAIA0E,iBAAA,aACAA,iBAAAC,WAAA,SAAArnE,GACAwkE,EAAAC,aAAA0V,oBAAA,WACA3V,EAAAC,aAAAhlE,OAAAqhF,WAAA9gF,KAMA,IAAA+gF,GAAA,SAAA9sF,GACA,mBAAAA,MAAAwpC,WAAAxpC,EAAAyuE,SACA,MAAAzuE,EAEA,IAAA+sF,KA4CA,OA3CA1sF,QAAAg3B,KAAAr3B,GAAA2N,QAAA,SAAAoC,GACA,eAAAA,GAAA,aAAAA,GAAA,gBAAAA,EAAA,CAGA,GAAAlI,GAAA,gBAAA7H,GAAA+P,GAAA/P,EAAA+P,IAAyDq/D,MAAApvE,EAAA+P,aACzDlI,EAAAmlF,OAAA,gBAAAnlF,GAAAmlF,QACAnlF,EAAAknB,IAAAlnB,EAAAqsC,IAAArsC,EAAAmlF,MAEA,IAAAC,GAAA,SAAA/hF,EAAAhL,GACA,MAAAgL,GACAA,EAAAhL,EAAAyJ,OAAA,GAAAujF,cAAAhtF,EAAA0J,MAAA,GAEA,aAAA1J,EAAA,WAAAA,EAEA,aAAA2H,EAAAunE,MAAA,CACA2d,EAAAte,SAAAse,EAAAte,YACA,IAAA0e,KACA,iBAAAtlF,GAAAunE,OACA+d,EAAAF,EAAA,MAAAl9E,IAAAlI,EAAAunE,MACA2d,EAAAte,SAAAtsE,KAAAgrF,IACAA,MACAF,EAAA,MAAAl9E,IAAAlI,EAAAunE,MACA2d,EAAAte,SAAAtsE,KAAAgrF,KAEAA,EAAAF,EAAA,GAAAl9E,IAAAlI,EAAAunE,MACA2d,EAAAte,SAAAtsE,KAAAgrF,aAGAtlF,EAAAmlF,OAAA,gBAAAnlF,GAAAmlF,OACAD,EAAAvjD,UAAAujD,EAAAvjD,cACAujD,EAAAvjD,UAAAyjD,EAAA,GAAAl9E,IAAAlI,EAAAmlF,QAEA,aAAAr/E,QAAA,SAAAy/E,YACAvlF,EAAAulF,KACAL,EAAAvjD,UAAAujD,EAAAvjD,cACAujD,EAAAvjD,UAAAyjD,EAAAG,EAAAr9E,IAAAlI,EAAAulF,SAKAptF,EAAAqtF,WACAN,EAAAte,UAAAse,EAAAte,cAAA5kE,OAAA7J,EAAAqtF,WAEAN,EAGAha,cAAA,SAAAp3C,EAAAq3C,EAAAoE,GACA,GAAA2V,KACAA,GAAAxe,QAAA5yC,EAAA4yC,OACAue,EAAAnxD,EAAA4yC,OACAwe,EAAA1jD,QAAA1N,EAAA0N,OACAyjD,EAAAnxD,EAAA0N,OAEAknC,EAAAC,aAAA0V,oBAAA,WACA3V,EAAAC,aAAAhlE,OACAunE,aAAAga,EAAA/Z,EAAAoE,MAGAjzE,OAAAzB,UAAAqwE,0BAGArwE,UAAAimC,cACA,mBAAA2O,WACAg2C,iBAAA,SAAA3xD,GACA,UAAA2b,SAAA,SAAA4E,EAAA8F,GACA+wB,aAAAp3C,EAAAugB,EAAA8F,MAGAt/C,UAAAimC,cAAgCoqC,aAAAua,iBAChCrf,iBAAA,WACA,UAAA32B,SAAA,SAAA4E,GACA,GAAAqxC,IAAuBhf,MAAA,aAAAllC,MAAA,aACvB,OAAA8pC,kBAAAC,WAAA,SAAAtqC,GACAoT,EAAApT,EAAAz/B,IAAA,SAAAukE,GACA,OAAsBmE,MAAAnE,EAAAmE,MACtB1F,KAAAkhB,EAAA3f,EAAAvB,MACAtqE,GAAA6rE,EAAA7rE,GACA8lE,SAAA+F,EAAA7rE,GACA+vE,QAAA,cAOAxE,kBAAA,SAAAhpD,EAAA2Q,GACA,GAAA3Q,KAAA9H,WAAA,CAIA,GAAAwxD,EACA,QAAA/4C,EACA+4C,EAAA,aAEA/4C,EAAAu4D,mBACAv4D,EAAAu4D,sBAEAxf,EAAA/4C,EAAAlzB,GAGA,IAAA0rF,GAAA,IAAAnpE,EAAAviB,GAAAO,OAAAkL,KAAA+T,SAAApU,SAAA,IAAAvD,MAAA,GAAA0a,EAAAviB,GACAiY,EAAAsK,EAAAtK,SAAAK,aACA,eAAAL,EAAA,CACA,GAAAtE,EACA,QAAAsE,GACA,YACAtE,EAAA66D,EAAAC,aAAAyU,KAAAlzD,KACA,MACA,aACArc,EAAA66D,EAAAC,aAAAyU,KAAAnzD,KACA,MACA,SACApc,EAAA66D,EAAAC,aAAAyU,KAAAC,KAGA,GAAA55C,GAAAz4B,SAAA2H,yBACAkzE,EAAA76E,SAAA4F,cAAA,OACAk1E,EAAA,EAeA,KAdArpE,EAAAspE,UACAD,EAAA,UAAArpE,EAAAspE,UAAA,KACStpE,EAAA1P,YAAA0P,EAAA1P,WAAAi5E,QACTF,EAAA,UAAArpE,EAAA1P,WAAAi5E,MAAAnjF,MAAA,MAGAgjF,EAAAxwE,UAAA,eAAAuwE,EAAA,KAAAE,EACA,SAAApd,EAAAC,aAAA0F,WAAA54D,KAAA,mCACAmwE,EAAA,oCACAld,EAAAC,aAAA2U,OAAA,+EAEAnX,EAAA,iCACAt4D,EAAA,iBAEAg4E,EAAAz8D,YACAqa,EAAA9yB,YAAAk1E,EAAAz8D,WAGA,IAAAo+C,GAAA,GACAF,EAAA,EACA7qD,GAAAwpE,aAAAxpE,EAAAypE,cACA5e,EAAA7qD,EAAAwpE,YACAze,EAAA/qD,EAAAypE,eAEAzpE,EAAA6qD,OAAA7qD,EAAA+qD,UACAF,EAAA7qD,EAAA6qD,MACAE,EAAA/qD,EAAA+qD,QAGA/qD,EAAA9H,WAAAwxE,aAAA1iD,EAAAhnB,IACAgnB,EAAAz4B,SAAA02E,eAAAkE,IACAte,QACA7jC,EAAA+jC,SACA/qD,EAAA9H,WAAAutE,YAAAzlE,OACO,CAEP,OADA2pE,GAAA3pE,EAAA2pE,SACAtuF,EAAA,EAAuBA,IAAAsuF,EAAA3rF,SAAuB3C,EAC9C,gBAAAsuF,EAAAtuF,GAAAO,KAAA,CACA+tF,EAAAtuF,GAAA+K,MAAAsjE,CACA,OAGA1pD,EAAA4pE,YAAAlgB,GAEA,GAAAmgB,GAAAt7E,SAAA02E,eAAAkE,EAGA,OAFAld,GAAA6d,qBAAAD,EAAA7pE,EAAAjkB,OAAAk1C,eAAAjxB,IAEA6pE,IAGAlD,oBAAA,SAAA9iE,EAAA7a,GAGA,OAFA2nB,GAAA,KACAg5D,EAAA3gF,EAAA2gF,SACAtuF,EAAA,EAAqBA,IAAAsuF,EAAA3rF,SAAuB3C,EAC5C,gBAAAsuF,EAAAtuF,GAAAO,KAAA,CACAqwE,EAAAC,aAAAyV,qBACAhxD,EAAAs7C,EAAAC,aAAAhlE,OACA6iF,gBAAA9d,EAAAC,aAAA2U,OAAA8I,EAAAtuF,GAAA+K,MACA,OAGA,UAAAuqB,EACA,MAAAq4C,mBAAAnlD,EAAA8M,EAEA7vB,GAAAhC,IAAA,2DAKAe,OAAAmpE,oCACAnpE,OAAA8mF,wCACA9mF,OAAA4uE,0BACAxC,EAAAjD,oCACAiD,EAAA0a,wCACA1a,EAAAwC,0BAEAxC,EAAA6d,qBAAA,SAAAE,EAAAC,EAAAxtF,GACAytF,WAAAnuF,OAAAstD,oBAAA5sD,EACA,QAAAuH,KAAAkmF,YACAlmF,IACAmmF,SAAAD,WAAAlmF,GAEA,kBAAAmmF,UAAA7kF,OACA,OAAA6kF,SAAA7kF,MAAA,MACA,kBAAA2kF,GAAAE,WACAle,EAAA6X,SAAAkG,EAAAG,SAAA7kF,MAAA,GAAA2kF,EAAAE,WAIA,IAAAC,GAAAruF,OAAAk1C,eAAAx0C,EACA2tF,IACAne,EAAA6d,qBAAAE,EAAAC,EAAAG,IAIA1D,gBAAA,SAAAt+C,GAMA,MALAA,GAAAiiD,SACAjiD,EAAAiiD,OAAA,IAGApe,EAAAC,aAAAyV,qBACA1V,EAAAC,aAAAhlE,OAAAojF,sBACAliD,EAAAiiD,OAAAjiD,EAAAmiD,cAAAniD,cAKA6jC,EAAA6X,SAAAv1E,SAAA,mBAAA09D,EAAAC,aAAA8U,cACA/U,EAAAC,aAAA8U,mBAxVAlgF,GAAAwW,MAAA,0DA6VA20D,EAAAC,aAAAse,8BAAAve,EAAAC,aAAAse,+BACA,WACAve,EAAA6X,SAAAv1E,SACA,mBACA09D,EAAAC,aAAAue,mCACAxe,EAAAC,aAAAue,qCAGAxe,EAAAC,aAAAue,kCAAA,WACA,IAAAxe,EAAAhzD,QAAAyxE,wBAAA,CAIA,GAAApK,GAAArU,EAAAC,aAAA0F,WAAA0O,YACA,IAAAA,EAAA,CACA,GAAAqK,EAEAA,GADA1e,EAAAC,aAAA0F,WAAAyO,WACA,sDACApU,EAAAC,aAAA0F,WAAAyO,WACA,qBAAApU,EAAAC,aAAA0F,WAAA2O,YACA,8CAGAtU,EAAAr5D,KAAAsvE,OAAAC,qBAGAlW,EAAAgY,sBAAA0G,EAAA1e,EAAAr5D,KAAAsvE,OAAAG,OAAA/B,OAEArU,GAAAgY,sBAAAhY,EAAAr5D,KAAAsvE,OAAAE,iBAMAnW,EAAAC,aAAAyF,kBACA1F,EAAAC,aAAA0F,WAAAhrE,OACAqlE,EAAAC,aAAA0F,WAAAC,SACA5F,EAAAC,aAAA0F,WAAA54D,KACAizD,EAAAC,aAAA4U,sBACA7U,EAAAC,aAAAse,iCA/zGAnjF,EAAmU,WAAuC,eAAApM,GAAA4B,EAAAT,EAAAmH,GAA0B,QAAA3G,GAAAd,EAAA4zB,GAAgB,IAAAtzB,EAAAN,GAAA,CAAU,IAAAe,EAAAf,GAAA,CAAoD,IAAA4zB,GAA1C,kBAAA9rB,MAA0C,MAAAA,GAAA9H,KAAwB,IAAAT,EAAA,MAAAA,GAAAS,KAAoB,IAAAuL,GAAA,GAAAX,OAAA,uBAAA5K,EAAA,IAA8C,MAAAuL,GAAAmlB,KAAA,mBAAAnlB,EAAkC,GAAA/L,GAAAc,EAAAN,IAAYpB,WAAYmC,GAAAf,GAAA,GAAAN,KAAAF,EAAAZ,QAAA,SAAAO,GAAoD,MAAA2B,GAAjBC,EAAAf,GAAA,GAAAb,IAAiBA,IAAgBK,IAAAZ,QAAAO,EAAA4B,EAAAT,EAAAmH,GAAsB,MAAAnH,GAAAN,GAAApB,QAA8D,OAA1CW,GAAA,kBAAAuI,MAA0C9H,EAAA,EAAYA,EAAAyH,EAAAvF,OAAWlC,IAAAc,EAAA2G,EAAAzH,GAAY,OAAAc,KAAYm2C,GAAA,SAAAnvC,EAAAjJ,EAAAD,GAE7yB,YAGA,IAAAkwF,KAIAA,GAAAC,mBAAA,WACA,MAAA3hF,MAAA+T,SAAApU,SAAA,IAAAkd,OAAA,OAIA6kE,EAAAE,WAAAF,EAAAC,qBAGAD,EAAAG,WAAA,SAAAC,GACA,MAAAA,GAAAC,OAAAzpF,MAAA,MAAAuD,IAAA,SAAAiS,GACA,MAAAA,GAAAi0E,UAIAL,EAAAM,cAAA,SAAAF,GAEA,MADAA,GAAAxpF,MAAA,QACAuD,IAAA,SAAAF,EAAAgC,GACA,OAAAA,EAAA,OAAAhC,KAAAomF,OAAA,UAKAL,EAAAO,YAAA,SAAAH,EAAApkF,GACA,MAAAgkF,GAAAG,WAAAC,GAAA5gD,OAAA,SAAApzB,GACA,WAAAA,EAAAjX,QAAA6G,MAOAgkF,EAAAQ,eAAA,SAAAp0E,GAoBA,OAnBA7P,GAQAihC,GACAE,YANAnhC,EADA,IAAA6P,EAAAjX,QAAA,gBACAiX,EAAAhX,UAAA,IAAAwB,MAAA,KAEAwV,EAAAhX,UAAA,IAAAwB,MAAA,MAIA,GACA+mC,UAAAphC,EAAA,GACAoT,SAAApT,EAAA,GAAA4O,cACA+M,SAAAjkB,SAAAsI,EAAA,OACAqhC,GAAArhC,EAAA,GACAmgC,KAAAzoC,SAAAsI,EAAA,OAEA6R,KAAA7R,EAAA,IAGA9L,EAAA,EAAmBA,EAAA8L,EAAAnJ,OAAkB3C,GAAA,EACrC,OAAA8L,EAAA9L,IACA,YACA+sC,EAAAijD,eAAAlkF,EAAA9L,EAAA,EACA,MACA,aACA+sC,EAAAkjD,YAAAzsF,SAAAsI,EAAA9L,EAAA,MACA,MACA,eACA+sC,EAAAmjD,QAAApkF,EAAA9L,EAAA,GAMA,MAAA+sC,IAIAwiD,EAAAY,eAAA,SAAApjD,GACA,GAAAqD,KACAA,GAAA5tC,KAAAuqC,EAAAE,YACAmD,EAAA5tC,KAAAuqC,EAAAG,WACAkD,EAAA5tC,KAAAuqC,EAAA7tB,SAAAquE,eACAn9C,EAAA5tC,KAAAuqC,EAAAtlB,UACA2oB,EAAA5tC,KAAAuqC,EAAAI,IACAiD,EAAA5tC,KAAAuqC,EAAAd,KAEA,IAAAtuB,GAAAovB,EAAApvB,IAcA,OAbAyyB,GAAA5tC,KAAA,OACA4tC,EAAA5tC,KAAAmb,GACA,SAAAA,GAAAovB,EAAAijD,gBACAjjD,EAAAkjD,cACA7/C,EAAA5tC,KAAA,SACA4tC,EAAA5tC,KAAAuqC,EAAAijD,gBACA5/C,EAAA5tC,KAAA,SACA4tC,EAAA5tC,KAAAuqC,EAAAkjD,cAEAljD,EAAAmjD,SAAA,QAAAnjD,EAAA7tB,SAAAxE,gBACA01B,EAAA5tC,KAAA,WACA4tC,EAAA5tC,KAAAuqC,EAAAmjD,UAEA,aAAA9/C,EAAAhmC,KAAA,MAKAmlF,EAAAa,YAAA,SAAAz0E,GACA,GAAA7P,GAAA6P,EAAA+O,OAAA,GAAAvkB,MAAA,KACAq9C,GACA9S,YAAAltC,SAAAsI,EAAAkgC,QAAA,IASA,OANAlgC,KAAA,GAAA3F,MAAA,KAEAq9C,EAAAjjD,KAAAuL,EAAA,GACA03C,EAAA6sC,UAAA7sF,SAAAsI,EAAA,OAEA03C,EAAA8sC,YAAA,IAAAxkF,EAAAnJ,OAAAa,SAAAsI,EAAA,SACA03C,GAKA+rC,EAAAgB,YAAA,SAAA3/C,GACA,GAAA9C,GAAA8C,EAAAF,WAIA,iBAHAE,EAAA4/C,uBACA1iD,EAAA8C,EAAA4/C,sBAEA,YAAA1iD,EAAA,IAAA8C,EAAArwC,KAAA,IAAAqwC,EAAAy/C,WACA,IAAAz/C,EAAA0/C,YAAA,IAAA1/C,EAAA0/C,YAAA,YAKAf,EAAAvhD,YAAA,SAAAryB,GACA,GAAA7P,GAAA6P,EAAA+O,OAAA,GAAAvkB,MAAA,IACA,QACA/D,GAAAoB,SAAAsI,EAAA,OACAI,IAAAJ,EAAA,KAMAyjF,EAAAkB,YAAA,SAAAC,GACA,mBAAAA,EAAAtuF,IAAAsuF,EAAAC,aACA,IAAAD,EAAAxkF,IAAA,QAMAqjF,EAAA1iD,UAAA,SAAAlxB,GAIA,OAFAi1E,GADAptC,KAEA13C,EAAA6P,EAAA+O,OAAA/O,EAAAjX,QAAA,QAAAyB,MAAA,KACAoD,EAAA,EAAmBA,EAAAuC,EAAAnJ,OAAkB4G,IAErCi6C,GADAotC,EAAA9kF,EAAAvC,GAAAqmF,OAAAzpF,MAAA,MACA,GAAAypF,QAAAgB,EAAA,EAEA,OAAAptC,IAIA+rC,EAAAsB,UAAA,SAAAjgD,GACA,GAAAj1B,GAAA,GACAmyB,EAAA8C,EAAAF,WAIA,aAHAE,EAAA4/C,uBACA1iD,EAAA8C,EAAA4/C,sBAEA5/C,EAAAkgD,YAAApwF,OAAAg3B,KAAAkZ,EAAAkgD,YAAAnuF,OAAA,CACA,GAAAorC,KACArtC,QAAAg3B,KAAAkZ,EAAAkgD,YAAA9iF,QAAA,SAAA+iF,GACAhjD,EAAAvrC,KAAAuuF,EAAA,IAAAngD,EAAAkgD,WAAAC,MAEAp1E,GAAA,UAAAmyB,EAAA,IAAAC,EAAA3jC,KAAA,KAAmD,OAEnD,MAAAuR,IAKA4zE,EAAAyB,YAAA,SAAAr1E,GACA,GAAA7P,GAAA6P,EAAA+O,OAAA/O,EAAAjX,QAAA,QAAAyB,MAAA,IACA,QACAwX,KAAA7R,EAAAkgC,QACAilD,UAAAnlF,EAAA1B,KAAA,OAIAmlF,EAAA2B,YAAA,SAAAtgD,GACA,GAAAhD,GAAA,GACAE,EAAA8C,EAAAF,WAYA,iBAXAE,EAAA4/C,uBACA1iD,EAAA8C,EAAA4/C,sBAEA5/C,EAAAugD,cAAAvgD,EAAAugD,aAAAxuF,QAEAiuC,EAAAugD,aAAAnjF,QAAA,SAAAojF,GACAxjD,GAAA,aAAAE,EAAA,IAAAsjD,EAAAzzE,MACAyzE,EAAAH,WAAAG,EAAAH,UAAAtuF,OAAA,IAAAyuF,EAAAH,UAAA,IACA,SAGArjD,GAKA2hD,EAAA8B,eAAA,SAAA11E,GACA,GAAA21E,GAAA31E,EAAAjX,QAAA,KACAoH,GACAquB,KAAA32B,SAAAmY,EAAA+O,OAAA,EAAA4mE,EAAA,QAEAC,EAAA51E,EAAAjX,QAAA,IAAA4sF,EAOA,OANAC,IAAA,GACAzlF,EAAAmK,UAAA0F,EAAA+O,OAAA4mE,EAAA,EAAAC,EAAAD,EAAA,GACAxlF,EAAAf,MAAA4Q,EAAA+O,OAAA6mE,EAAA,IAEAzlF,EAAAmK,UAAA0F,EAAA+O,OAAA4mE,EAAA,GAEAxlF,GAMAyjF,EAAAiC,kBAAA,SAAAC,EAAArjD,GACA,GAAAR,GAAA2hD,EAAAG,WAAA+B,GAGAC,GADA9jD,IAAA1jC,OAAAqlF,EAAAG,WAAAthD,KACAW,OAAA,SAAApzB,GACA,WAAAA,EAAAjX,QAAA,oBACK,GAAAgmB,OAAA,GASL,QANAinE,KAAA,OACAC,eACAC,UAAAH,EAAAvrF,MAAA,QACA4E,MAAA2mF,EAAAvrF,MAAA,YAOAopF,EAAAuC,oBAAA,SAAA/jD,EAAAgkD,GACA,GAAA3hD,GAAA,WAAA2hD,EAAA,MAIA,OAHAhkD,GAAA6jD,aAAA5jF,QAAA,SAAAgkF,GACA5hD,GAAA,iBAAA4hD,EAAAH,UAAA,IAAAG,EAAAjnF,MAAA,SAEAqlC,GAKAm/C,EAAA0C,iBAAA,SAAAR,EAAArjD,GACA,GAAAR,GAAA2hD,EAAAG,WAAA+B,EAWA,QAPAS,kBAFAtkD,IAAA1jC,OAAAqlF,EAAAG,WAAAthD,KAEAW,OAAA,SAAApzB,GACA,WAAAA,EAAAjX,QAAA,kBACO,GAAAgmB,OAAA,IACP4hE,SAAA1+C,EAAAmB,OAAA,SAAApzB,GACA,WAAAA,EAAAjX,QAAA,gBACO,GAAAgmB,OAAA,MAMP6kE,EAAA4C,mBAAA,SAAApkD,GACA,qBAAAA,EAAAmkD,iBAAA,iBACAnkD,EAAAu+C,SAAA,QAIAiD,EAAA6C,mBAAA,SAAAX,GASA,OARAY,IACAC,UACAC,oBACAC,iBACAC,SAGArmD,EADAmjD,EAAAG,WAAA+B,GACA,GAAAtrF,MAAA,KACAnG,EAAA,EAAmBA,EAAAosC,EAAAzpC,OAAkB3C,IAAA,CACrC,GAAA8tC,GAAA1B,EAAApsC,GACA0yF,EAAAnD,EAAAO,YACA2B,EAAA,YAAA3jD,EAAA,OACA,IAAA4kD,EAAA,CACA,GAAA9hD,GAAA2+C,EAAAa,YAAAsC,GACAC,EAAApD,EAAAO,YACA2B,EAAA,UAAA3jD,EAAA,IAQA,QANA8C,EAAAkgD,WAAA6B,EAAAhwF,OAAA4sF,EAAA1iD,UAAA8lD,EAAA,OACA/hD,EAAAugD,aAAA5B,EAAAO,YACA2B,EAAA,aAAA3jD,EAAA,KACApkC,IAAA6lF,EAAAyB,aACAqB,EAAAC,OAAA9vF,KAAAouC,GAEAA,EAAArwC,KAAAgtF,eACA,UACA,aACA8E,EAAAG,cAAAhwF,KAAAouC,EAAArwC,KAAAgtF,iBAWA,MAJAgC,GAAAO,YAAA2B,EAAA,aAAAzjF,QAAA,SAAA2N,GACA02E,EAAAE,iBAAA/vF,KAAA+sF,EAAAvhD,YAAAryB,MAGA02E,GAKA9C,EAAAqD,oBAAA,SAAAlmB,EAAAmmB,GACA,GAAAziD,GAAA,EAwBA,OArBAA,IAAA,KAAAs8B,EAAA,IACAt8B,GAAAyiD,EAAAP,OAAA3vF,OAAA,UACAytC,GAAA,sBACAA,GAAAyiD,EAAAP,OAAA5oF,IAAA,SAAAknC,GACA,gBAAAA,EAAA4/C,qBACA5/C,EAAA4/C,qBAEA5/C,EAAAF,cACKtmC,KAAA,YAELgmC,GAAA,uBACAA,GAAA,8BAGAyiD,EAAAP,OAAAtkF,QAAA,SAAA4iC,GACAR,GAAAm/C,EAAAgB,YAAA3/C,GACAR,GAAAm/C,EAAAsB,UAAAjgD,GACAR,GAAAm/C,EAAA2B,YAAAtgD,KAGAR,GAAA,kBAMAm/C,EAAAuD,2BAAA,SAAArB,GACA,GAcAtW,GAdA4X,KACAV,EAAA9C,EAAA6C,mBAAAX,GACAuB,GAAA,IAAAX,EAAAG,cAAA9tF,QAAA,OACAuuF,GAAA,IAAAZ,EAAAG,cAAA9tF,QAAA,UAGAmqC,EAAA0gD,EAAAO,YAAA2B,EAAA,WACA/nF,IAAA,SAAAiS,GACA,MAAA4zE,GAAA8B,eAAA11E,KAEAozB,OAAA,SAAAjjC,GACA,gBAAAA,EAAAmK,YAEAk5B,EAAAN,EAAAlsC,OAAA,GAAAksC,EAAA,GAAA1U,KAGA+4D,EAAA3D,EAAAO,YAAA2B,EAAA,oBACA/nF,IAAA,SAAAiS,GACA,GAAA7P,GAAA6P,EAAAxV,MAAA,IAEA,OADA2F,GAAAkgC,QACAlgC,EAAApC,IAAA,SAAAF,GACA,MAAAhG,UAAAgG,EAAA,OAGA0pF,GAAAvwF,OAAA,GAAAuwF,EAAA,GAAAvwF,OAAA,GAAAuwF,EAAA,QAAA/jD,IACAgsC,EAAA+X,EAAA,OAGAb,EAAAC,OAAAtkF,QAAA,SAAA4iC,GACA,WAAAA,EAAArwC,KAAAgtF,eAAA38C,EAAAkgD,WAAAqC,IAAA,CACA,GAAAC,IACAj5D,KAAAgV,EACAkkD,iBAAA7vF,SAAAotC,EAAAkgD,WAAAqC,IAAA,IACAG,KACA5iD,YAAAE,EAAAF,YACAvW,KAAAghD,GAGA4X,GAAAvwF,KAAA4wF,GACAJ,KACAI,EAAAlwE,KAAAgK,MAAAhK,KAAAkK,UAAAgmE,KACAG,KACAp5D,KAAAghD,EACA51D,UAAA0tE,EAAA,oBAEAF,EAAAvwF,KAAA4wF,OAIA,IAAAL,EAAApwF,QAAAwsC,GACA4jD,EAAAvwF,MACA23B,KAAAgV,GAKA,IAAAkiC,GAAAke,EAAAO,YAAA2B,EAAA,KAWA,OAVApgB,GAAA1uE,SACA,IAAA0uE,EAAA,GAAA3sE,QAAA,WACA2sE,EAAA7tE,SAAA6tE,EAAA,GAAA3mD,OAAA,OACO,IAAA2mD,EAAA,GAAA3sE,QAAA,WACP2sE,EAAA7tE,SAAA6tE,EAAA,GAAA3mD,OAAA,QAEAqoE,EAAA/kF,QAAA,SAAA+/B,GACAA,EAAAylD,WAAAniB,KAGA0hB,GAGAxD,EAAAkE,wBAAA,WAEA,+FAMAlE,EAAAmE,kBAAA,SAAAC,EAAAd,EAAAl1E,EAAA2X,GACA,GAAA8a,GAAAm/C,EAAAqD,oBAAAe,EAAAjnB,KAAAmmB,EAwBA,IArBAziD,GAAAm/C,EAAA4C,mBACAwB,EAAAC,YAAAC,sBAGAzjD,GAAAm/C,EAAAuC,oBACA6B,EAAAG,cAAAD,qBACA,UAAAl2E,EAAA,oBAEAyyB,GAAA,SAAAujD,EAAAI,IAAA,OAEAJ,EAAAK,WAAAL,EAAAM,YACA7jD,GAAA,iBACKujD,EAAAK,UACL5jD,GAAA,iBACKujD,EAAAM,YACL7jD,GAAA,iBAEAA,GAAA,iBAIAujD,EAAAK,UAAA,CACA,GAAApZ,GAAA,QAAAtlD,EAAAlzB,GAAA,IACAuxF,EAAAK,UAAA5pB,MAAAhoE,GAAA,MACAguC,IAAA,KAAAwqC,EACAxqC,GAAA,UAAAujD,EAAAO,uBAAA,GAAA/5D,KACA,IAAAygD,EAKA,MAFAxqC,IAAA,UAAAujD,EAAAO,uBAAA,GAAA/5D,KACA,UAAAo1D,EAAAE,WAAA,QAKAF,EAAA4E,aAAA,SAAA1C,EAAArjD,GAGA,OADAR,GAAA2hD,EAAAG,WAAA+B,GACAzxF,EAAA,EAAmBA,EAAA4tC,EAAAjrC,OAAkB3C,IACrC,OAAA4tC,EAAA5tC,IACA,iBACA,iBACA,iBACA,iBACA,MAAA4tC,GAAA5tC,GAAA0qB,OAAA,GAKA,MAAA0jB,GACAmhD,EAAA4E,aAAA/lD,GAEA,YAIA9uC,EAAAD,QAAAkwF,OAEMp3C,GAAA,SAAA5vC,EAAAjJ,EAAAD,GAUN,cAGA,WAEA,GAAA+0F,GAAA7rF,EAAA,WAAA9E,IACA4wF,EAAA9rF,EAAA,WAAA8rF,cAEA/0F,GAAAD,QAAAg1F,iBACA/0F,EAAAD,QAAAopC,eAAAlgC,EAAA,WAAAkgC,eACAnpC,EAAAD,QAAA8oC,WAAA5/B,EAAA,WAAA4/B,UASA,IAAAmsD,GAAA/rF,EAAA,8BACAgsF,EAAAhsF,EAAA,0BACAisF,EAAAjsF,EAAA,gCACAksF,EAAAlsF,EAAA,6BAGA,QAAA8rF,EAAAvrD,SACA,YACA,aACA,IAAAwrD,MAAAI,mBAEA,WADAN,GAAA,uDAGAA,GAAA,+BAEA90F,EAAAD,QAAAs1F,YAAAL,EAEAA,EAAAM,mBACAN,EAAAO,kBACAP,EAAAQ,mBACAR,EAAAI,qBACAJ,EAAAS,aACA,MACA,eACA,IAAAP,MAAAE,mBAEA,WADAN,GAAA,wDAGAA,GAAA,gCAEA90F,EAAAD,QAAAs1F,YAAAH,EAEAA,EAAAI,mBACAJ,EAAAM,mBACAN,EAAAE,qBACAF,EAAAO,aACA,MACA,YACA,IAAAR,MAAAG,mBAEA,WADAN,GAAA,wDAGAA,GAAA,6BAEA90F,EAAAD,QAAAs1F,YAAAJ,EAEAA,EAAAK,mBACAL,EAAAG,oBACA,MACA,cACA,IAAAD,EAEA,WADAL,GAAA,uDAGAA,GAAA,+BAEA90F,EAAAD,QAAAs1F,YAAAF,EAEAA,EAAAG,kBACA,MACA,SACAR,EAAA,8BAIKY,uBAAA,EAAAC,mBAAA,EAAAC,yBAAA,EAAAC,uBAAA,EAAAC,UAAA,KAA+Gt6C,GAAA,SAAAvyC,EAAAjJ,EAAAD,GAUpH,YACA,IAAA+0F,GAAA7rF,EAAA,eAAA9E,IACA4wF,EAAA9rF,EAAA,eAAA8rF,eAEAC,GACAO,gBAAA,WACArwF,OAAA+zE,YAAA/zE,OAAA+zE,aAAA/zE,OAAAsxE,mBAGAif,YAAA,WACA,gBAAAvwF,iBAAAkxE,mBAAA,WACAlxE,QAAAkxE,kBAAAt0E,WACAV,OAAAC,eAAA6D,OAAAkxE,kBAAAt0E,UAAA,WACAN,IAAA,WACA,MAAAnB,MAAA01F,UAEAlgE,IAAA,SAAAnpB,GACA,GAAAtM,GAAAC,IACAA,MAAA01F,WACA11F,KAAAooC,oBAAA,QAAApoC,KAAA01F,UACA11F,KAAAooC,oBAAA,YAAApoC,KAAA21F,eAEA31F,KAAAkoC,iBAAA,QAAAloC,KAAA01F,SAAArpF,GACArM,KAAAkoC,iBAAA,YAAAloC,KAAA21F,aAAA,SAAA11F,GAGAA,EAAA01B,OAAAuS,iBAAA,oBAAA0tD,GACA,GAAAzjE,GAAA,GAAA61B,OAAA,QACA71B,GAAAs4C,MAAAmrB,EAAAnrB,MACAt4C,EAAAonB,UAAkCkxB,MAAAmrB,EAAAnrB,OAClCt4C,EAAAomD,SAAAt4E,EAAA01B,QACA51B,EAAA6nD,cAAAz1B,KAEAlyB,EAAA01B,OAAAskD,YAAA5rE,QAAA,SAAAo8D,GACA,GAAAt4C,GAAA,GAAA61B,OAAA,QACA71B,GAAAs4C,QACAt4C,EAAAonB,UAAkCkxB,SAClCt4C,EAAAomD,SAAAt4E,EAAA01B,QACA31B,KAAA4nD,cAAAz1B,IACe9kB,KAAArN,QACFqN,KAAArN,WAMbm1F,iBAAA,WACA,gBAAAtwF,WACAA,OAAAgxF,kBACA,aAAAhxF,QAAAgxF,iBAAAp0F,WAEAV,OAAAC,eAAA6D,OAAAgxF,iBAAAp0F,UAAA,aACAN,IAAA,WACA,MAAAnB,MAAA81F,YAEAtgE,IAAA,SAAAG,GACA,GAAA51B,GAAAC,IAEAA,MAAA81F,WAAAngE,EACA31B,KAAAk/D,KACAmV,IAAA+F,gBAAAp6E,KAAAk/D,KAGAvpC,GAIA31B,KAAAk/D,IAAAmV,IAAAE,gBAAA5+C,GAGAA,EAAAuS,iBAAA,sBACAnoC,EAAAm/D,KACAmV,IAAA+F,gBAAAr6E,EAAAm/D,KAEAn/D,EAAAm/D,IAAAmV,IAAAE,gBAAA5+C,KAEAA,EAAAuS,iBAAA,yBACAnoC,EAAAm/D,KACAmV,IAAA+F,gBAAAr6E,EAAAm/D,KAEAn/D,EAAAm/D,IAAAmV,IAAAE,gBAAA5+C,MAhBA31B,KAAAk/D,IAAA,QAwBA61B,mBAAA,WAEAlwF,OAAAkxE,kBAAA,SAAAggB,EAAA/rB,GAGAyqB,EAAA,kBACAsB,KAAAC,qBACAD,EAAAE,cAAAF,EAAAC,mBAGA,IAAAE,GAAA,GAAA9sD,yBAAA2sD,EAAA/rB,GACAmsB,EAAAD,EAAAE,SAAA/oF,KAAA6oF,EAoEA,OAnEAA,GAAAE,SAAA,SAAAC,EAAA3iB,EAAAC,GACA,GAAA5zE,GAAAC,KACA6K,EAAAE,SAIA,IAAAA,UAAA/H,OAAA,qBAAAqzF,GACA,MAAAF,GAAAE,EAAA3iB,EAGA,IAAA4iB,GAAA,SAAA7tE,GACA,GAAA8tE,KAcA,OAbA9tE,GAAAjM,SACAnO,QAAA,SAAAmoF,GACA,GAAAC,IACAh0F,GAAA+zF,EAAA/zF,GACAi0F,UAAAF,EAAAE,UACA14E,KAAAw4E,EAAAx4E,KAEAw4E,GAAApoC,QAAA//C,QAAA,SAAAzN,GACA61F,EAAA71F,GAAA41F,EAAAG,KAAA/1F,KAEA21F,EAAAE,EAAAh0F,IAAAg0F,IAGAF,GAIAK,EAAA,SAAAr5D,EAAAs5D,GACA,GAAA9sF,GAAA,GAAA4pB,KAAA5yB,OAAAg3B,KAAAwF,GAAAxzB,IAAA,SAAA0G,GACA,OAAAA,EAAA8sB,EAAA9sB,MAMA,OAJAomF,MAAAt5D,EACAx8B,OAAAg3B,KAAA8+D,GAAAxoF,QAAA,SAAAoC,GACA1G,EAAA0G,GAAAomF,EAAApmF,KAEA1G,EAGA,IAAAgB,UAAA/H,QAAA,GACA,GAAA8zF,GAAA,SAAAruE,GACA5d,EAAA,GAAA+rF,EAAAN,EAAA7tE,KAGA,OAAA0tE,GAAAlrF,MAAAjL,MAAA82F,EACA/rF,UAAA,KAIA,UAAAitC,SAAA,SAAA4E,EAAA8F,GACA,IAAA73C,EAAA7H,QAAA,gBAAAqzF,GACAF,EAAAlrF,MAAAlL,GACA,SAAA0oB,GACAm0B,EAAAg6C,EAAAN,EAAA7tE,MACiBi6B,IAGjByzC,EAAAlrF,MAAAlL,GACA,SAAA0oB,GACAm0B,EAAAg6C,EAAAN,EAAA7tE,GACAA,EAAAjM,YACiBkmC,MAENqN,KAAA2jB,EAAAC,IAGXuiB,GAEArxF,OAAAkxE,kBAAAt0E,UAAA2nC,wBAAA3nC,UAGA2nC,wBAAA2tD,qBACAh2F,OAAAC,eAAA6D,OAAAkxE,kBAAA,uBACA50E,IAAA,WACA,MAAAioC,yBAAA2tD,wBAKA,8BAAA1oF,QAAA,SAAA+5C,GACA,GAAA4uC,GAAA5tD,wBAAA3nC,UAAA2mD,EACAhf,yBAAA3nC,UAAA2mD,GAAA,WACA,GAAAroD,GAAAC,IACA,IAAA+K,UAAA/H,OAAA,OAAA+H,UAAA/H,QACA,gBAAA+H,WAAA,IACA,GAAAi+C,GAAA,IAAAj+C,UAAA/H,OAAA+H,UAAA,SACA,WAAAitC,SAAA,SAAA4E,EAAA8F,GACAs0C,EAAA/rF,MAAAlL,GAAA68C,EAAA8F,EAAAsG,MAGA,MAAAguC,GAAA/rF,MAAAjL,KAAA+K,cAKA2pF,EAAAzwF,QAAA,KACA,gEACAoK,QAAA,SAAA+5C,GACA,GAAA4uC,GAAA5tD,wBAAA3nC,UAAA2mD,EACAhf,yBAAA3nC,UAAA2mD,GAAA,WACA,GAAAv9C,GAAAE,UACAhL,EAAAC,KACAo4C,EAAA,GAAAJ,SAAA,SAAA4E,EAAA8F,GACAs0C,EAAA/rF,MAAAlL,GAAA8K,EAAA,GAAA+xC,EAAA8F,KAEA,OAAA73C,GAAA7H,OAAA,EACAo1C,EAEAA,EAAA2X,KAAA,WACAllD,EAAA,GAAAI,MAAA,UAEA,SAAAub,GACA3b,EAAA7H,QAAA,GACA6H,EAAA,GAAAI,MAAA,MAAAub,UAQA,gEACAnY,QAAA,SAAA+5C,GACA,GAAA4uC,GAAA5tD,wBAAA3nC,UAAA2mD,EACAhf,yBAAA3nC,UAAA2mD,GAAA,WAGA,MAFAr9C,WAAA,2BAAAq9C,EACAsjC,gBAAAD,uBAAA1gF,UAAA,IACAisF,EAAA/rF,MAAAjL,KAAA+K,aAKA,IAAAksF,GACAlhB,kBAAAt0E,UAAAy1F,eACAnhB,mBAAAt0E,UAAAy1F,gBAAA,WACA,cAAAnsF,UAAA,GAAAitC,QAAA4E,UACAq6C,EAAAhsF,MAAAjL,KAAA+K,aAOApL,GAAAD,SACAw1F,gBAAAP,EAAAO,gBACAE,YAAAT,EAAAS,YACAD,iBAAAR,EAAAQ,iBACAJ,mBAAAJ,EAAAI,mBACAE,iBAAArsF,EAAA,qBAGKuuF,cAAA,GAAAC,iBAAA,IAAoCv6C,GAAA,SAAAj0C,EAAAjJ,EAAAD,GASzC,YACA,IAAA+0F,GAAA7rF,EAAA,eAAA9E,GAGAnE,GAAAD,QAAA,WACA,GAAA23F,GAAA,SAAA32F,GACA,mBAAAA,MAAAwpC,WAAAxpC,EAAAyuE,SACA,MAAAzuE,EAEA,IAAA+sF,KA4CA,OA3CA1sF,QAAAg3B,KAAAr3B,GAAA2N,QAAA,SAAAoC,GACA,eAAAA,GAAA,aAAAA,GAAA,gBAAAA,EAAA,CAGA,GAAAlI,GAAA,gBAAA7H,GAAA+P,GAAA/P,EAAA+P,IAAyDq/D,MAAApvE,EAAA+P,aACzDlI,EAAAmlF,OAAA,gBAAAnlF,GAAAmlF,QACAnlF,EAAAknB,IAAAlnB,EAAAqsC,IAAArsC,EAAAmlF,MAEA,IAAA4J,GAAA,SAAA1rF,EAAAhL,GACA,MAAAgL,GACAA,EAAAhL,EAAAyJ,OAAA,GAAAujF,cAAAhtF,EAAA0J,MAAA,GAEA,aAAA1J,EAAA,WAAAA,EAEA,aAAA2H,EAAAunE,MAAA,CACA2d,EAAAte,SAAAse,EAAAte,YACA,IAAA0e,KACA,iBAAAtlF,GAAAunE,OACA+d,EAAAyJ,EAAA,MAAA7mF,IAAAlI,EAAAunE,MACA2d,EAAAte,SAAAtsE,KAAAgrF,IACAA,MACAyJ,EAAA,MAAA7mF,IAAAlI,EAAAunE,MACA2d,EAAAte,SAAAtsE,KAAAgrF,KAEAA,EAAAyJ,EAAA,GAAA7mF,IAAAlI,EAAAunE,MACA2d,EAAAte,SAAAtsE,KAAAgrF,aAGAtlF,EAAAmlF,OAAA,gBAAAnlF,GAAAmlF,OACAD,EAAAvjD,UAAAujD,EAAAvjD,cACAujD,EAAAvjD,UAAAotD,EAAA,GAAA7mF,IAAAlI,EAAAmlF,QAEA,aAAAr/E,QAAA,SAAAy/E,YACAvlF,EAAAulF,KACAL,EAAAvjD,UAAAujD,EAAAvjD,cACAujD,EAAAvjD,UAAAotD,EAAAxJ,EAAAr9E,IAAAlI,EAAAulF,SAKAptF,EAAAqtF,WACAN,EAAAte,UAAAse,EAAAte,cAAA5kE,OAAA7J,EAAAqtF,WAEAN,GAGA8J,EAAA,SAAAl7D,EAAA/uB,GAKA,IAJA+uB,EAAA9Y,KAAAgK,MAAAhK,KAAAkK,UAAA4O,MACAA,EAAA4yC,QACA5yC,EAAA4yC,MAAAooB,EAAAh7D,EAAA4yC,QAEA5yC,GAAA,gBAAAA,GAAA0N,MAAA,CAEA,GAAAytD,GAAAn7D,EAAA0N,MAAA8iC,UAGA,KAFA2qB,MAAA,gBAAAA,MAA6D1nB,MAAA0nB,OAE7D,SAAAA,EAAA9J,OAAA,gBAAA8J,EAAA9J,OACA,SAAA8J,EAAA1nB,OAAA,gBAAA0nB,EAAA1nB,UACA1sE,UAAAimC,aAAAouD,0BACAr0F,UAAAimC,aAAAouD,0BAAA5qB,oBACAxwC,GAAA0N,MAAA8iC,WACA,gBAAA2qB,EAAA9J,OAAA,gBAAA8J,EAAA1nB,OAEA,MAAA1sE,WAAAimC,aAAAslC,mBACA5e,KAAA,SAAAvmB,GAIA,GAAAkuD,IAHAluD,IAAA4F,OAAA,SAAAzuC,GACA,qBAAAA,EAAAosE,QAEAr9B,KAAA,SAAA/uC,GACA,WAAAA,EAAA8xE,MAAA13D,cAAAhW,QAAA,WACeykC,EAAAxmC,QAAAwmC,IAAAxmC,OAAA,EAOf,OANA00F,KACAr7D,EAAA0N,MAAAw+B,SAAAivB,EAAA9J,OAA2DA,MAAAgK,EAAAnvB,WACAuH,MAAA4nB,EAAAnvB,WAE3DlsC,EAAA0N,MAAAstD,EAAAh7D,EAAA0N,OACA0qD,EAAA,WAAAlxE,KAAAkK,UAAA4O,IACA/uB,EAAA+uB,IAIAA,GAAA0N,MAAAstD,EAAAh7D,EAAA0N,OAGA,MADA0qD,GAAA,WAAAlxE,KAAAkK,UAAA4O,IACA/uB,EAAA+uB,IAGAs7D,EAAA,SAAA13F,GACA,OACAW,MACAg3F,sBAAA,kBACAC,4BAAA,wBACS53F,EAAAW,OAAAX,EAAAW,KACTqb,QAAAhc,EAAAgc,QACA6tB,WAAA7pC,EAAAm8B,eACAvuB,SAAA,WACA,MAAA7N,MAAAY,MAAAZ,KAAAic,SAAA,MAAAjc,KAAAic,UAaA7Y,WAAAqwE,aARA,SAAAp3C,EAAAjT,EAAA0uE,GACAP,EAAAl7D,EAAA,SAAA37B,GACA0C,UAAAC,mBAAA3C,EAAA0oB,EAAA,SAAAnpB,GACA63F,EAAAH,EAAA13F,QAQA,IAAA83F,GAAA,SAAA17D,GACA,UAAA2b,SAAA,SAAA4E,EAAA8F,GACAt/C,UAAAqwE,aAAAp3C,EAAAugB,EAAA8F,KAyBA,IArBAt/C,UAAAimC,eACAjmC,UAAAimC,cACAoqC,aAAAskB,EACAppB,iBAAA,WACA,UAAA32B,SAAA,SAAA4E,GACA,GAAAqxC,IAAyBhf,MAAA,aAAAllC,MAAA,aACzB,OAAA8pC,kBAAAC,WAAA,SAAAtqC,GACAoT,EAAApT,EAAAz/B,IAAA,SAAAukE,GACA,OAAwBmE,MAAAnE,EAAAmE,MACxB1F,KAAAkhB,EAAA3f,EAAAvB,MACAxE,SAAA+F,EAAA7rE,GACA+vE,QAAA,cAUApvE,UAAAimC,aAAAoqC,aAIK,CAIL,GAAAukB,GAAA50F,UAAAimC,aAAAoqC,aACApmE,KAAAjK,UAAAimC,aACAjmC,WAAAimC,aAAAoqC,aAAA,SAAAh6C,GACA,MAAA89D,GAAA99D,EAAA,SAAA/4B,GACA,MAAAs3F,GAAAt3F,GAAA01D,MAAA,SAAAn2D,GACA,MAAA+3C,SAAA0K,OAAAi1C,EAAA13F,aAZAmD,WAAAimC,aAAAoqC,aAAA,SAAAp3C,GACA,MAAA07D,GAAA17D,aAmBAj5B,UAAAimC,aAAAnB,mBACA9kC,UAAAimC,aAAAnB,iBAAA,WACAusD,EAAA,0DAGArxF,UAAAimC,aAAAjB,sBACAhlC,UAAAimC,aAAAjB,oBAAA,WACAqsD,EAAA,uDAKK0C,cAAA,KAAiBj6C,GAAA,SAAAt0C,EAAAjJ,EAAAD,GAStB,YAEA,IAAAkwF,GAAAhnF,EAAA,OACA8rF,EAAA9rF,EAAA,YAAA8rF,eAEAE,GACAG,mBAAA,WACAlwF,OAAAozF,iBAGApzF,OAAA6mF,kBACA7mF,OAAA6mF,gBAAA,SAAA7gF,GACA,MAAAA,KAMAhG,OAAA4mF,wBACA5mF,OAAA4mF,sBAAA,SAAA5gF,GACA,MAAAA,MAKAhG,OAAAkxE,kBAAA,SAAA/rE,GACA,GAAAjK,GAAAC,KAEAk4F,EAAA3kF,SAAA2H,wBAwCA,KAvCA,0DACA7M,QAAA,SAAA+5C,GACAroD,EAAAqoD,GAAA8vC,EAAA9vC,GAAA/6C,KAAA6qF,KAGAl4F,KAAAm4F,eAAA,KACAn4F,KAAAo4F,YAAA,KACAp4F,KAAAq4F,QAAA,KACAr4F,KAAAs4F,eAAA,KACAt4F,KAAAu4F,uBAAA,KACAv4F,KAAAw4F,2BAAA,KACAx4F,KAAAy4F,oBAAA,KACAz4F,KAAA04F,cAAA,KAEA14F,KAAA24F,gBACA34F,KAAA44F,iBACA54F,KAAA64F,gBAAA,WACA,MAAA94F,GAAA44F,cAEA34F,KAAA84F,iBAAA,WACA,MAAA/4F,GAAA64F,eAGA54F,KAAA+4F,iBAAA,GAAAtN,wBACAztE,KAAA,GACAyyB,IAAA,KAEAzwC,KAAAg5F,kBAAA,GAAAvN,wBACAztE,KAAA,GACAyyB,IAAA,KAEAzwC,KAAAi5F,eAAA,SACAj5F,KAAAsrF,mBAAA,MACAtrF,KAAAk5F,kBAAA,MAEAl5F,KAAAm5F,YACAC,aAAA,MACAnM,eAEAjjF,KAAAgsF,mBACA,OAAAhsF,EAAAgsF,oBACA,UACA,YACAh2F,KAAAm5F,WAAAC,aAAApvF,EAAAgsF,kBACA,MACA,YAEA,SAAAvnF,WAAA,2CAQA,GAFAzO,KAAAq5F,YAAArvF,GAAA,eAAAA,EAAAsvF,aAEAtvF,KAAAijF,WAAA,CAKA,GAAAA,GAAA1pE,KAAAgK,MAAAhK,KAAAkK,UAAAzjB,EAAAijF,YACAjtF,MAAAm5F,WAAAlM,aAAA79C,OAAA,SAAAmqD,GACA,GAAAA,KAAAvM,KAAA,CACA,GAAAA,GAAAuM,EAAAvM,IAWA,OAVA,gBAAAA,KACAA,UAEAA,IAAA59C,OAAA,SAAA+qC,GACA,WAAAA,EAAAp1E,QAAA,WACA,IAAAo1E,EAAAp1E,QAAA,mBACA,IAAAo1E,EAAAp1E,QAAA,WACA,IAAAo1E,EAAAp1E,QAAA,UACA2vF,EAAAzwF,SAAA,QACe,IAGf,WAMAjE,KAAAw5F,gBAKAx5F,KAAAy5F,8BAGA50F,OAAAkxE,kBAAAt0E,UAAAi4F,wBAAA,WACA,GAAA35F,GAAAC,KACA25F,EAAA/J,EAAAM,cAAAnwF,EAAAg5F,iBAAAtoD,IAGAzwC,MAAAy5F,0BAAAprF,QAAA,SAAA8jB,GAEA,GADAA,EAAAib,WAAA,IAAArsC,OAAAg3B,KAAA5F,EAAAib,WAAApqC,QAQA,IADWmvB,EAAAib,oBAAAroC,QAAA,yBAEX40F,EAAAxnE,EAAAib,UAAAmiD,cAAA,IACA,KAAAp9D,EAAAib,oBAAA,YARA,QAAAxjC,GAAA,EAA2BA,EAAA+vF,EAAA32F,OAAqB4G,KAChD,IAAA+vF,EAAA/vF,GAAA7E,QAAA,iCACA40F,EAAA/vF,IAAA,0BAQA7J,GAAAg5F,iBAAAtoD,IAAAkpD,EAAAlvF,KAAA,IACA1K,EAAA6nD,cAAAz1B,GACA,OAAApyB,EAAAo4F,gBACAp4F,EAAAo4F,eAAAhmE,GAEAA,EAAAib,WAAA,aAAArtC,EAAAm5F,mBACAn5F,EAAAy5F,aAAAI,MAAA,SAAA5F,GACA,MAAAA,GAAAC,aACA,cAAAD,EAAAC,YAAA4F,UAGA95F,EAAAm5F,kBAAA,cAIAl5F,KAAAy5F,8BAGA50F,OAAAkxE,kBAAAt0E,UAAAq4F,UAAA,SAAAnkE,GAGA31B,KAAA24F,aAAA91F,KAAA8yB,EAAAokE,SACA/5F,KAAAg6F,+BAGAn1F,OAAAkxE,kBAAAt0E,UAAAw4F,aAAA,SAAAtkE,GACA,GAAAukE,GAAAl6F,KAAA24F,aAAA5zF,QAAA4wB,EACAukE,IAAA,IACAl6F,KAAA24F,aAAAnuF,OAAA0vF,EAAA,GACAl6F,KAAAg6F,gCAIAn1F,OAAAkxE,kBAAAt0E,UAAA04F,WAAA,WACA,MAAAn6F,MAAAw5F,aAAApqD,OAAA,SAAA4kD,GACA,QAAAA,EAAAK,YAEAtqF,IAAA,SAAAiqF,GACA,MAAAA,GAAAK,aAIAxvF,OAAAkxE,kBAAAt0E,UAAA24F,aAAA,WACA,MAAAp6F,MAAAw5F,aAAApqD,OAAA,SAAA4kD,GACA,QAAAA,EAAAM,cAEAvqF,IAAA,SAAAiqF,GACA,MAAAA,GAAAM,eAKAzvF,OAAAkxE,kBAAAt0E,UAAA44F,uBACA,SAAAC,EAAAC,GACA,GAAAC,IACA7H,UACAC,oBACAC,iBAyCA,OAvCAyH,GAAA3H,OAAAtkF,QAAA,SAAAosF,GACA,OAAAp6F,GAAA,EAA6BA,EAAAk6F,EAAA5H,OAAA3vF,OAAsC3C,IAAA,CACnE,GAAAq6F,GAAAH,EAAA5H,OAAAtyF,EACA,IAAAo6F,EAAA75F,KAAAma,gBAAA2/E,EAAA95F,KAAAma,eACA0/E,EAAA/J,YAAAgK,EAAAhK,WACA+J,EAAA9J,cAAA+J,EAAA/J,YAAA,CAEA6J,EAAA7H,OAAA9vF,KAAA63F,GAGAA,EAAAlJ,aAAAkJ,EAAAlJ,aAAApiD,OAAA,SAAAqiD,GACA,OAAA7nF,GAAA,EAAmCA,EAAA6wF,EAAAjJ,aAAAxuF,OAAgC4G,IACnE,GAAA6wF,EAAAjJ,aAAA5nF,GAAAoU,OAAAyzE,EAAAzzE,MACAy8E,EAAAjJ,aAAA5nF,GAAA0nF,YAAAG,EAAAH,UACA,QAGA,WAIA,WAKAgJ,EAAA1H,iBACAvkF,QAAA,SAAAssF,GACA,OAAAt6F,GAAA,EAAiCA,EAAAk6F,EAAA3H,iBAAA5vF,OACjC3C,IAAA,CACA,GAAAu6F,GAAAL,EAAA3H,iBAAAvyF,EACA,IAAAs6F,EAAApuF,MAAAquF,EAAAruF,IAAA,CACAiuF,EAAA5H,iBAAA/vF,KAAA+3F,EACA,WAMAJ,GAIA31F,OAAAkxE,kBAAAt0E,UAAAo5F,4BACA,SAAAzG,EAAA7E,GACA,GAAAxvF,GAAAC,KACAi0F,EAAA,GAAAgE,gBAAAl4F,EAAAo5F,YACA2B,EAAA,GAAAC,iBAAA9G,EACAA,GAAA+G,iBAAA,SAAAC,GACA,GAAA9oE,GAAA,GAAA61B,OAAA,eACA71B,GAAAib,WAAiCiiD,OAAA+E,EAAA7E,gBAEjC,IAAA1hD,GAAAotD,EAAA7tD,UACA8tD,GAAArtD,GAAA,IAAA9sC,OAAAg3B,KAAA8V,GAAA7qC,MAEAk4F,aAGAjH,EAAA4F,QACA5F,EAAA4F,MAAA,aAQA1nE,EAAAib,oBACA,sDAGAS,EAAAN,UAAA,SAAAutD,EAAAvtD,UAAA,IACApb,EAAAib,oBAAAwiD,EAAAY,eAAA3iD,GAIA,IAAA8rD,GAAA/J,EAAAM,cAAAnwF,EAAAg5F,iBAAAtoD,MAEA,IADAte,EAAAib,oBAAAroC,QAAA,uBAEA40F,EAAAxnE,EAAAib,UAAAmiD,cAAA,IACA,KAAAp9D,EAAAib,oBAAA,OAEAusD,EAAAxnE,EAAAib,UAAAmiD,cAAA,IACA,0BAEAxvF,EAAAg5F,iBAAAtoD,IAAAkpD,EAAAlvF,KAAA,GAEA,IAAA0wF,GAAAp7F,EAAAy5F,aAAAI,MAAA,SAAA5F,GACA,MAAAA,GAAAC,aACA,cAAAD,EAAAC,YAAA4F,OAKA,QAAA95F,EAAAm5F,mBACA,UACAn5F,EAAA05F,0BAAA52F,KAAAsvB,GACA+oE,GAAAC,GACAp7F,EAAA05F,0BAAA52F,KACA,GAAAmlD,OAAA,gBAEA,MACA,iBACAjoD,EAAA25F,0BACA35F,EAAA6nD,cAAAz1B,GACA,OAAApyB,EAAAo4F,gBACAp4F,EAAAo4F,eAAAhmE,GAEAgpE,IACAp7F,EAAA6nD,cAAA,GAAAI,OAAA,iBACA,OAAAjoD,EAAAo4F,gBACAp4F,EAAAo4F,eAAA,GAAAnwC,OAAA,iBAEAjoD,EAAAm5F,kBAAA,cAUA4B,EAAAM,iBAAA,WACAr7F,EAAAs7F,yBAGA,IAAAlH,GAAA,GAAAmH,kBAAAR,EAUA,OATA3G,GAAAoH,kBAAA,WACAx7F,EAAAs7F,0BAEAlH,EAAA1jE,QAAA,WAEA0jE,EAAA0F,MAAA,SACA95F,EAAAs7F,2BAIApH,cACA6G,eACA3G,kBAKAtvF,OAAAkxE,kBAAAt0E,UAAA+5F,YAAA,SAAAxH,EACAhwE,EAAAy3E,GACA,GAAArtD,GAAApuC,KAAAq6F,uBAAArG,EAAAsG,kBACAtG,EAAAuG,mBACAv2E,IAAAgwE,EAAAK,YACAjmD,EAAAstD,UAAA1H,EAAAO,uBACAnmD,EAAA0kD,MACA6I,MAAA/L,EAAAE,YAEAkE,EAAA4H,uBAAA54F,SACAorC,EAAA0kD,KAAAt4D,KAAAw5D,EAAA4H,uBAAA,GAAAphE,MAEAw5D,EAAAK,UAAArwE,KAAAoqB,IAEAqtD,GAAAzH,EAAAM,cACAlmD,EAAAstD,UAAA1H,EAAA4H,uBACAxtD,EAAA0kD,MACA6I,MAAA3H,EAAA2H,OAEA3H,EAAAO,uBAAAvxF,SACAorC,EAAA0kD,KAAAt4D,KAAAw5D,EAAAO,uBAAA,GAAA/5D,MAEAw5D,EAAAM,YAAAuH,QAAAztD,KAIAvpC,OAAAkxE,kBAAAt0E,UAAAq6F,oBACA,SAAApJ,GACA,GACAiH,GACAlrD,EAFA1uC,EAAAC,IAGA,cAAA0yF,EAAA10E,KAIAhe,KAAA+7F,gBAGApC,EAAA/J,EAAAM,cAAAwC,EAAAjiD,KACAhC,EAAAkrD,EAAAttD,QACAstD,EAAAtrF,QAAA,SAAAyjF,EAAAvC,GACA,GAAA2D,GAAAtD,EAAA6C,mBAAAX,EACA/xF,GAAAg8F,cAAAxM,GAAA+K,kBAAApH,IAEAlzF,KAAAw5F,aAAAx5F,KAAA+7F,oBACA/7F,MAAA+7F,mBAEa,eAAArJ,EAAA10E,KAAA,CACb27E,EAAA/J,EAAAM,cAAAnwF,EAAAi5F,kBAAAvoD,KACAhC,EAAAkrD,EAAAttD,OACA,IAAA2vD,GAAApM,EAAAO,YAAA1hD,EACA,cAAAzrC,OAAA,CACA22F,GAAAtrF,QAAA,SAAAyjF,EAAAvC,GACA,GAAAyE,GAAAj0F,EAAAy5F,aAAAjK,GACA0E,EAAAD,EAAAC,YACA6G,EAAA9G,EAAA8G,aACA3G,EAAAH,EAAAG,cACAmG,EAAAtG,EAAAsG,kBACAC,EAAAvG,EAAAuG,kBAKA,IAFA,MADAzI,EAAAtrF,MAAA,WACAA,MAAA,YAEAwtF,EAAAiI,cAAA,CACA,GAAAC,GAAAtM,EAAA0C,iBACAR,EAAArjD,EACA,IAAAutD,EAAA,CACA,GAAAG,GAAAvM,EAAAO,YAAA2B,EAAA,gBACA/nF,IAAA,SAAA8jC,GACA,MAAA+hD,GAAAQ,eAAAviD,KAEAuB,OAAA,SAAAvB,GACA,YAAAA,EAAAN,WAKA4uD,GAAAn5F,QACA83F,EAAAsB,oBAAAD,GAGA,GAAAE,GAAAzM,EAAAiC,kBACAC,EAAArjD,EACAutD,KACAK,EAAArK,KAAA,UAGAjyF,EAAAs5F,aAAA,IAAA9J,IACAuL,EAAAlpE,MAAAqiE,EAAAiI,EACAF,EAAA,4BACA7H,EAAAviE,MAAAyqE,GAIA,IAAAjuD,GAAAruC,EAAAs6F,uBAAAC,EACAC,EAIAx6F,GAAAy7F,YAAAxH,EACA5lD,EAAAukD,OAAA3vF,OAAA,SAUA,OAJAhD,KAAA+4F,kBACA/6E,KAAA00E,EAAA10E,KACAyyB,IAAAiiD,EAAAjiD,KAEAiiD,EAAA10E,MACA,YACAhe,KAAAs8F,sBAAA,mBACA,MACA,cACAt8F,KAAAs8F,sBAAA,SACA,MACA,SACA,SAAA7tF,WAAA,qBAAAikF,EAAA10E,KACA,KAMA,GAAAu+E,GAAAxxF,UAAA/H,OAAA,GACA,kBAAA+H,WAAA,EACA,IAAAwxF,EAAA,CACA,GAAA17C,GAAA91C,UAAA,EACAlG,QAAAmI,WAAA,WACA6zC,IACA,QAAA9gD,EAAAm5F,oBACAn5F,EAAAm5F,kBAAA,aAEAn5F,EAAA25F,2BACe,GAEf,GAAA/3F,GAAAq2C,QAAA4E,SAUA,OATAj7C,GAAAouD,KAAA,WACAwsC,IACA,QAAAx8F,EAAAm5F,oBACAn5F,EAAAm5F,kBAAA,aAGAr0F,OAAAmI,WAAAjN,EAAA25F,wBAAArsF,KAAAtN,GAAA,QAGA4B,GAGAkD,OAAAkxE,kBAAAt0E,UAAA+6F,qBACA,SAAA9J,GACA,GAAA3yF,GAAAC,KACA21B,EAAA,GAAAijD,aACA6jB,KACA9C,EAAA/J,EAAAM,cAAAwC,EAAAjiD,KACAhC,EAAAkrD,EAAAttD,QACA2vD,EAAApM,EAAAO,YAAA1hD,EACA,cAAAzrC,OAAA,CAiLA,QAhLAhD,KAAAq5F,YAAAzJ,EAAAO,YAAA1hD,EACA,mBAAAzrC,OAAA,EACA22F,EAAAtrF,QAAA,SAAAyjF,EAAAvC,GACA,GACA9iD,GADAmjD,EAAAG,WAAA+B,GACA,GAAA/mE,OAAA,GAAAvkB,MAAA,KACAumE,EAAAtgC,EAAA,GACA6qB,EAAA,MAAA7qB,EAAA,GACA6B,EAAAshD,EAAA4E,aAAA1C,EAAArjD,GAEA2lD,EAAAxE,EAAAO,YAAA2B,EAAA,SAQA,IANAsC,EADAA,EAAApxF,OACAoxF,EAAA,GAAArpE,OAAA,GAEA6kE,EAAAC,qBAIA,gBAAA9iB,GAAA,cAAAtgC,EAAA,IAQA,GAAAunD,GACAC,EACA6G,EACA3G,EACAE,EACAC,EACAC,EACAqH,EACAtB,EAEA7vB,EAGAyxB,EACAG,EAFA9B,EAAA3K,EAAA6C,mBAAAX,EAGAx6B,KACA4kC,EAAAtM,EAAA0C,iBAAAR,EACArjD,IACA4tD,EAAAzM,EAAAiC,kBAAAC,EACArjD,IACAujD,KAAA,UAEA4J,EACAhM,EAAAuD,2BAAArB,EAEA,IAAA6J,GAGAe,EAAA9M,EAAAO,YAAA2B,EAAA,WACA/nF,IAAA,SAAAiS,GACA,MAAA4zE,GAAA8B,eAAA11E,KAEAozB,OAAA,SAAArmC,GACA,gBAAAA,EAAAuN,YACmB,EACnBomF,KACAf,EAAAe,EAAAtxF,MAGA,IAAAuxF,GAAA/M,EAAAO,YAAA2B,EACA,sBAAArjD,GAAAzrC,OAAA,EACAm5F,EAAAvM,EAAAO,YAAA2B,EAAA,gBACA/nF,IAAA,SAAA8jC,GACA,MAAA+hD,GAAAQ,eAAAviD,KAEAuB,OAAA,SAAAvB,GACA,YAAAA,EAAAN,WAEA,cAAAmlD,EAAA10E,MAAAs5C,EA0De,WAAAo7B,EAAA10E,MAAAs5C,IAEf28B,GADAD,EAAAj0F,EAAAy5F,aAAAjK,IACA0E,YACA6G,EAAA9G,EAAA8G,aACA3G,EAAAH,EAAAG,cACAE,EAAAL,EAAAK,UACAC,EAAAN,EAAAM,YACAC,EAAAP,EAAAO,uBACA+F,EAAAtG,EAAAsG,kBAEAv6F,EAAAy5F,aAAAjK,GAAAqM,uBACAA,EACA77F,EAAAy5F,aAAAjK,GAAAgL,mBACAA,EACAx6F,EAAAy5F,aAAAjK,GAAAoM,SAEAK,GAAAW,IAAAR,EAAAn5F,QACA83F,EAAAsB,oBAAAD,GAEAp8F,EAAAs5F,aAAA,IAAA9J,IACAuL,EAAAlpE,MAAAqiE,EAAAiI,EACA,eACA/H,EAAAviE,MAAAyqE,IAGAt8F,EAAAy7F,YAAAxH,EACA,aAAA1lD,GAAA,aAAAA,EACA,aAAAA,GAAA,aAAAA,IAEAgmD,GACA,aAAAhmD,GAAA,aAAAA,QAMA0lD,GAAAM,aALA7pB,EAAA6pB,EAAA7pB,MACAgyB,EAAA55F,MAAA4nE,EAAA6pB,IACA3+D,EAAAkjD,SAAApO,SA3FA,CACA,GAAA/nE,GAAA3C,EAAAs5F,aAAA9J,EAAA,GACA0E,YAAAl0F,EAAAy5F,aAAA,GAAAvF,YACA6G,aAAA/6F,EAAAy5F,aAAA,GAAAsB,aACA3G,cAAAp0F,EAAAy5F,aAAA,GAAArF,eACiBp0F,EAAA86F,4BAAAzG,EAAA7E,EAoBjB,IAlBAoN,GACAj6F,EAAAo4F,aAAAsB,oBAAAD,GAGA7B,EAAAsC,eAAAC,gBAAA9vB,GACAwnB,IACA/5D,KAAA,QAAA+0D,EAAA,KAKA9kB,GAFA6pB,EAAA,GAAAsI,gBAAAl6F,EAAAyxF,cAAApnB,IAEAtC,MACAgyB,EAAA55F,MAAA4nE,EAAA6pB,IAGA3+D,EAAAkjD,SAAApO,GAGA1qE,EAAA44F,aAAA31F,OAAA,GACAjD,EAAA44F,aAAA,GAAA1e,YAAAj3E,QAAAusF,EAAA,CACA,GAAAjiB,EACA,WAAAP,EACAO,EAAAvtE,EAAA44F,aAAA,GAAA5mB,iBAAA,GACmB,UAAAhF,IACnBO,EAAAvtE,EAAA44F,aAAA,GAAA1mB,iBAAA,IAEA3E,IACA+mB,EAAA,GAAAyI,cAAAxvB,EACA5qE,EAAAyxF,gBAIAp0F,EAAAy5F,aAAAjK,IACA0E,YAAAvxF,EAAAuxF,YACA6G,aAAAp4F,EAAAo4F,aACA3G,cAAAzxF,EAAAyxF,cACAmG,oBACAC,qBACAlG,YACAC,cACAvnB,OACAqnB,MACAuH,QACApH,yBACAqH,0BAIA77F,EAAAy7F,YAAAz7F,EAAAy5F,aAAAjK,MAEA,aAAAjhD,GAAA,aAAAA,QAhHAvuC,GAAAy5F,aAAAjK,IACA6E,MACA6H,oBAwJAj8F,KAAAg5F,mBACAh7E,KAAA00E,EAAA10E,KACAyyB,IAAAiiD,EAAAjiD,KAEAiiD,EAAA10E,MACA,YACAhe,KAAAs8F,sBAAA,oBACA,MACA,cACAt8F,KAAAs8F,sBAAA,SACA,MACA,SACA,SAAA7tF,WAAA,qBAAAikF,EAAA10E,KACA,KAiCA,MA/BA2X,GAAAskD,YAAAj3E,SACAjD,EAAA64F,cAAA/1F,KAAA8yB,GACA9wB,OAAAmI,WAAA,WACA,GAAAmlB,GAAA,GAAA61B,OAAA,YACA71B,GAAAwD,SACA51B,EAAA6nD,cAAAz1B,GACA,OAAApyB,EAAAq4F,aACAvzF,OAAAmI,WAAA,WACAjN,EAAAq4F,YAAAjmE,IACmB,GAGnBsqE,EAAApuF,QAAA,SAAAqjC,GACA,GAAA+4B,GAAA/4B,EAAA,GACA6H,EAAA7H,EAAA,GACAqrD,EAAA,GAAA/0C,OAAA,QACA+0C,GAAAtyB,QACAsyB,EAAAxjD,WACAwjD,EAAAxkB,SAAA5iD,GACA51B,EAAA6nD,cAAAz1B,GACA,OAAApyB,EAAAs4F,SACAxzF,OAAAmI,WAAA,WACAjN,EAAAs4F,QAAA0E,IACqB,MAGN,IAEfhyF,UAAA/H,OAAA,qBAAA+H,WAAA,IACAlG,OAAAmI,WAAAjC,UAAA,MAEAitC,QAAA4E,WAGA/3C,OAAAkxE,kBAAAt0E,UAAA6vB,MAAA,WACAtxB,KAAAw5F,aAAAnrF,QAAA,SAAA2lF,GAMAA,EAAA8G,cACA9G,EAAA8G,aAAAziE,OAEA27D,EAAAG,eACAH,EAAAG,cAAA97D,OAEA27D,EAAAK,WACAL,EAAAK,UAAAh8D,OAEA27D,EAAAM,aACAN,EAAAM,YAAAj8D,SAIAr4B,KAAAs8F,sBAAA,WAIAz3F,OAAAkxE,kBAAAt0E,UAAA66F,sBACA,SAAAhY,GACAtkF,KAAAi5F,eAAA3U,CACA,IAAAnyD,GAAA,GAAA61B,OAAA,uBACAhoD,MAAA4nD,cAAAz1B,GACA,OAAAnyB,KAAAu4F,wBACAv4F,KAAAu4F,uBAAApmE,IAKAttB,OAAAkxE,kBAAAt0E,UAAAu4F,4BACA,WAEA,GAAA7nE,GAAA,GAAA61B,OAAA,oBACAhoD,MAAA4nD,cAAAz1B,GACA,OAAAnyB,KAAAy4F,qBACAz4F,KAAAy4F,oBAAAtmE,IAKAttB,OAAAkxE,kBAAAt0E,UAAA45F,uBAAA,WACA,GACA/W,GACA0Y,GACAC,IAAA,EACApV,OAAA,EACAqV,WAAA,EACAxV,SAAA,EACAhnE,UAAA,EACAu/C,UAAA,EACA2nB,OAAA,EAsBA,IApBA5nF,KAAAw5F,aAAAnrF,QAAA,SAAA2lF,GACAgJ,EAAAhJ,EAAA8G,aAAAjB,SACAmD,EAAAhJ,EAAAG,cAAA0F,WAGAmD,EAAAt8E,WAAAs8E,EAAA/8B,UAEAqkB,EAAA,MACA0Y,EAAApV,OAAA,EACAtD,EAAA,SACS0Y,EAAAE,WAAA,GAAAF,EAAAtV,SAAA,EACTpD,EAAA,aACS0Y,EAAArV,aAAA,EACTrD,EAAA,eACS0Y,EAAAC,IAAA,EACT3Y,EAAA,OACS0Y,EAAAt8E,UAAA,GAAAs8E,EAAA/8B,UAAA,KACTqkB,EAAA,aAGAA,IA/BAtkF,KA+BAsrF,mBAAA,CA/BAtrF,KAgCAsrF,mBAAAhH,CACA,IAAAnyD,GAAA,GAAA61B,OAAA,2BACAhoD,MAAA4nD,cAAAz1B,GACA,OAAAnyB,KAAAw4F,4BACAx4F,KAAAw4F,2BAAArmE,KAKAttB,OAAAkxE,kBAAAt0E,UAAA07F,YAAA,WACA,GAAAp9F,GAAAC,IACA,IAAAA,KAAA+7F,cACA,SAAArwF,OAAA,qDAEA,IAAA0xF,EACA,KAAAryF,UAAA/H,QAAA,kBAAA+H,WAAA,GACAqyF,EAAAryF,UAAA,GACS,IAAAA,UAAA/H,SACTo6F,EAAAryF,UAAA,GAGA,IAAAggE,MACAsyB,EAAA,EACAC,EAAA,CAOA,IALAt9F,KAAA24F,aAAA31F,SACAq6F,EAAAr9F,KAAA24F,aAAA,GAAA5mB,iBAAA/uE,OACAs6F,EAAAt9F,KAAA24F,aAAA,GAAA1mB,iBAAAjvE,QAGAo6F,EAAA,CAEA,GAAAA,EAAAlzD,WAAAkzD,EAAAjuB,SACA,SAAA1gE,WACA,iEAEA2uF,EAAAG,sBACAF,EAAAD,EAAAG,8BAEAH,EAAAI,sBACAF,EAAAF,EAAAI,qBAoBA,IAjBAx9F,KAAA24F,aAAA31F,QAEAhD,KAAA24F,aAAA,GAAA1e,YAAA5rE,QAAA,SAAAo8D,GACAM,EAAAloE,MACAkqE,KAAAtC,EAAAsC,KACAtC,QACAgzB,YAAA,UAAAhzB,EAAAsC,KACAswB,EAAA,EAAAC,EAAA,IAEA,UAAA7yB,EAAAsC,KACAswB,IACa,UAAA5yB,EAAAsC,MACbuwB,MAKAD,EAAA,GAAAC,EAAA,GACAD,EAAA,IACAtyB,EAAAloE,MACAkqE,KAAA,QACA0wB,iBAEAJ,KAEAC,EAAA,IACAvyB,EAAAloE,MACAkqE,KAAA,QACA0wB,iBAEAH,IAIA,IAAA7sD,GAAAm/C,EAAAkE,0BACA0F,IACAzuB,GAAA18D,QAAA,SAAAo+B,EAAA8iD,GAGA,GAWA8E,GACAC,EAZA7pB,EAAAh+B,EAAAg+B,MACAsC,EAAAtgC,EAAAsgC,KACAqnB,EAAAxE,EAAAC,qBAEAntF,EAAA3C,EAAAs5F,aAAA9J,EAAA,GACA0E,YAAAuF,EAAA,GAAAvF,YACA6G,aAAAtB,EAAA,GAAAsB,aACA3G,cAAAqF,EAAA,GAAArF,eACWp0F,EAAA86F,4BAAAzG,EAAA7E,GAEX+K,EAAAwC,aAAAD,gBAAA9vB,GAKAwnB,IACA/5D,KAAA,QAAA+0D,EAAA,IAEA9kB,KACA4pB,EAAA,GAAAyI,cAAAryB,EAAA/nE,EAAAyxF,gBAGA1nD,EAAAgxD,cACAnJ,EAAA,GAAAsI,gBAAAl6F,EAAAyxF,cAAApnB,IAGAysB,EAAAjK,IACA0E,YAAAvxF,EAAAuxF,YACA6G,aAAAp4F,EAAAo4F,aACA3G,cAAAzxF,EAAAyxF,cACAmG,oBACAC,mBAAA,KACAlG,YACAC,cACAvnB,OACAqnB,MACAG,yBACAqH,uBAAA,QAGA57F,KAAAq5F,cACA5oD,GAAA,kBAAA+oD,EAAAzvF,IAAA,SAAAlI,GACA,MAAAA,GAAAuyF,MACW3pF,KAAA,aAEXsgE,EAAA18D,QAAA,SAAAo+B,EAAA8iD,GACA,GAAAyE,GAAAwF,EAAAjK,EACA9+C,IAAAm/C,EAAAmE,kBAAAC,EACAA,EAAAsG,kBAAA,QAAAv6F,EAAA44F,aAAA,MAGA34F,KAAA+7F,cAAAvC,CACA,IAAAxrD,GAAA,GAAAy9C,wBACAztE,KAAA,QACAyyB,OAKA,OAHA1lC,WAAA/H,QAAA,kBAAA+H,WAAA,IACAlG,OAAAmI,WAAAjC,UAAA,KAAAijC,GAEAgK,QAAA4E,QAAA5O,IAGAnpC,OAAAkxE,kBAAAt0E,UAAAi8F,aAAA,WACA,GAAA39F,GAAAC,KAEAywC,EAAAm/C,EAAAkE,yBACA9zF,MAAAq5F,cACA5oD,GAAA,kBAAAzwC,KAAAw5F,aAAAzvF,IAAA,SAAAlI,GACA,MAAAA,GAAAuyF,MACW3pF,KAAA,aAEXzK,KAAAw5F,aAAAnrF,QAAA,SAAA2lF,GACA,GAAAA,EAAAiI,cACAxrD,GAAA,+DAEAujD,EAAAI,IAAA,WAHA,CAOA,GAAAoG,GAAAz6F,EAAAs6F,uBACArG,EAAAsG,kBACAtG,EAAAuG,mBAEA9pD,IAAAm/C,EAAAmE,kBAAAC,EAAAwG,EACA,SAAAz6F,EAAA44F,aAAA,MAGA,IAAA3qD,GAAA,GAAAy9C,wBACAztE,KAAA,SACAyyB,OAKA,OAHA1lC,WAAA/H,QAAA,kBAAA+H,WAAA,IACAlG,OAAAmI,WAAAjC,UAAA,KAAAijC,GAEAgK,QAAA4E,QAAA5O,IAGAnpC,OAAAkxE,kBAAAt0E,UAAAy1F,gBAAA,SAAA9pD,GACA,UAAAA,EACAptC,KAAAw5F,aAAAnrF,QAAA,SAAA2lF,GACAA,EAAA8G,aAAA6C,6BAES,CACT,GAAAC,GAAAxwD,EAAAmiD,aACA,IAAAniD,EAAAiiD,OACA,OAAAhvF,GAAA,EAA2BA,EAAAL,KAAAw5F,aAAAx2F,OAA8B3C,IACzD,GAAAL,KAAAw5F,aAAAn5F,GAAA+zF,MAAAhnD,EAAAiiD,OAAA,CACAuO,EAAAv9F,CACA,OAIA,GAAA2zF,GAAAh0F,KAAAw5F,aAAAoE,EACA,IAAA5J,EAAA,CACA,GAAAnmD,GAAA9sC,OAAAg3B,KAAAqV,aAAApqC,OAAA,EACA4sF,EAAAQ,eAAAhjD,eAEA,YAAAS,EAAAtuB,WAAA,IAAAsuB,EAAAvB,MAAA,IAAAuB,EAAAvB,MACA,MAGA,UAAAuB,EAAAN,UACA,MAGA,qBAAAM,EAAA7vB,OACA6vB,MAEAmmD,EAAA8G,aAAA6C,mBAAA9vD,EAGA,IAAA8rD,GAAA/J,EAAAM,cAAAlwF,KAAAg5F,kBAAAvoD,IACAkpD,GAAAiE,EAAA,KAAA/vD,EAAA7vB,KAAAovB,YAAA6iD,OACA,8BACAjwF,KAAAg5F,kBAAAvoD,IAAAkpD,EAAAlvF,KAAA,KAMA,MAHAM,WAAA/H,OAAA,qBAAA+H,WAAA,IACAlG,OAAAmI,WAAAjC,UAAA,MAEAitC,QAAA4E,WAGA/3C,OAAAkxE,kBAAAt0E,UAAA20F,SAAA,WACA,GAAAl+C,KACAl4C,MAAAw5F,aAAAnrF,QAAA,SAAA2lF,IACA,uDACA,iBAAA3lF,QAAA,SAAA+5C,GACA4rC,EAAA5rC,IACAlQ,EAAAr1C,KAAAmxF,EAAA5rC,GAAAguC,eAIA,IAAAv1C,GAAA91C,UAAA/H,OAAA,qBAAA+H,WAAA,IACAA,UAAA,EACA,WAAAitC,SAAA,SAAA4E,GAEA,GAAAihD,GAAA,GAAAlqE,IACAqkB,SAAAuU,IAAArU,GAAA6X,KAAA,SAAAilB,GACAA,EAAA3mE,QAAA,SAAAmO,GACAzb,OAAAg3B,KAAAvb,GAAAnO,QAAA,SAAA5L,GACAo7F,EAAAroE,IAAA/yB,EAAA+Z,EAAA/Z,IACAo7F,EAAAp7F,GAAA+Z,EAAA/Z,OAGAo+C,GACAh8C,OAAAmI,WAAA6zC,EAAA,EAAAg9C,GAEAjhD,EAAAihD,SAQAl+F,GAAAD,SACAq1F,mBAAAH,EAAAG,mBACAE,iBAAArsF,EAAA,qBAGKk1F,WAAA,GAAA1G,iBAAA,EAAA3mD,IAAA,IAAyCyN,GAAA,SAAAt1C,EAAAjJ,EAAAD,GAS9C,YAGAC,GAAAD,QAAA,WACA,GAYAs4F,GAAA50F,UAAAimC,aAAAoqC,aACApmE,KAAAjK,UAAAimC,aACAjmC,WAAAimC,aAAAoqC,aAAA,SAAA/yE,GACA,MAAAs3F,GAAAt3F,GAAA01D,MAAA,SAAAn2D,GACA,MAAA+3C,SAAA0K,QAdA9hD,MAAeg3F,sBAAA,oBAFf33F,EAgBAA,GAdwDW,OAAAX,EAAAW,KACxDqb,QAAAhc,EAAAgc,QACA6tB,WAAA7pC,EAAA6pC,WACAj8B,SAAA,WACA,MAAA7N,MAAAY,OANA,IAAAX,YAqBMygD,GAAA,SAAA93C,EAAAjJ,EAAAD,GASN,YAEA,IAAAg1F,GAAA9rF,EAAA,YAAA8rF,eAEAG,GACAO,YAAA,WACA,gBAAAvwF,iBAAAkxE,mBAAA,WACAlxE,QAAAkxE,kBAAAt0E,WACAV,OAAAC,eAAA6D,OAAAkxE,kBAAAt0E,UAAA,WACAN,IAAA,WACA,MAAAnB,MAAA01F,UAEAlgE,IAAA,SAAAnpB,GACArM,KAAA01F,WACA11F,KAAAooC,oBAAA,QAAApoC,KAAA01F,UACA11F,KAAAooC,oBAAA,YAAApoC,KAAA21F,eAEA31F,KAAAkoC,iBAAA,QAAAloC,KAAA01F,SAAArpF,GACArM,KAAAkoC,iBAAA,YAAAloC,KAAA21F,aAAA,SAAA11F,GACAA,EAAA01B,OAAAskD,YAAA5rE,QAAA,SAAAo8D,GACA,GAAAt4C,GAAA,GAAA61B,OAAA,QACA71B,GAAAs4C,QACAt4C,EAAAonB,UAAkCkxB,SAClCt4C,EAAAomD,SAAAt4E,EAAA01B,QACA31B,KAAA4nD,cAAAz1B,IACe9kB,KAAArN,QACFqN,KAAArN,WAMbm1F,iBAAA,WAEA,gBAAAtwF,WACAA,OAAAgxF,kBACA,aAAAhxF,QAAAgxF,iBAAAp0F,WAEAV,OAAAC,eAAA6D,OAAAgxF,iBAAAp0F,UAAA,aACAN,IAAA,WACA,MAAAnB,MAAA+9F,cAEAvoE,IAAA,SAAAG,GACA31B,KAAA+9F,aAAApoE,OAOAo/D,mBAAA,WACA,mBAAAlwF,iBAAAkxE,mBACAlxE,OAAAm5F,sBADA,CAKAn5F,OAAAkxE,oBACAlxE,OAAAkxE,kBAAA,SAAAggB,EAAA/rB,GACA,GAAA0qB,EAAAzwF,QAAA,IAGA8xF,KAAA9I,WAAA,CAEA,OADAgR,MACA59F,EAAA,EAA6BA,EAAA01F,EAAA9I,WAAAjqF,OAAgC3C,IAAA,CAC7D,GAAAk5F,GAAAxD,EAAA9I,WAAA5sF,EACA,IAAAk5F,EAAA73F,eAAA,QACA,OAAAkI,GAAA,EAAiCA,EAAA2vF,EAAAvM,KAAAhqF,OAAwB4G,IAAA,CACzD,GAAAs0F,IACA/jB,IAAAof,EAAAvM,KAAApjF,GAEA,KAAA2vF,EAAAvM,KAAApjF,GAAA7E,QAAA,UACAm5F,EAAA5pD,SAAAilD,EAAAjlD,SACA4pD,EAAAnR,WAAAwM,EAAAxM,YAEAkR,EAAAp7F,KAAAq7F,OAGAD,GAAAp7F,KAAAkzF,EAAA9I,WAAA5sF,IAGA01F,EAAA9I,WAAAgR,EAGA,UAAAD,sBAAAjI,EAAA/rB,IAEAnlE,OAAAkxE,kBAAAt0E,UAAAu8F,qBAAAv8F,UAGAu8F,qBAAAjH,qBACAh2F,OAAAC,eAAA6D,OAAAkxE,kBAAA,uBACA50E,IAAA,WACA,MAAA68F,sBAAAjH,uBAKAlyF,OAAA4mF,sBAAA0S,yBACAt5F,OAAA6mF,gBAAA0S,qBAIA,gEACA/vF,QAAA,SAAA+5C,GACA,GAAA4uC,GAAAjhB,kBAAAt0E,UAAA2mD,EACA2tB,mBAAAt0E,UAAA2mD,GAAA,WAGA,MAFAr9C,WAAA,2BAAAq9C,EACAsjC,gBAAAD,uBAAA1gF,UAAA,IACAisF,EAAA/rF,MAAAjL,KAAA+K,aAKA,IAAAksF,GACAlhB,kBAAAt0E,UAAAy1F,eACAnhB,mBAAAt0E,UAAAy1F,gBAAA,WACA,cAAAnsF,UAAA,GAAAitC,QAAA4E,UACAq6C,EAAAhsF,MAAAjL,KAAA+K,WAIA,IASAszF,GAAAtoB,kBAAAt0E,UAAA20F,QACArgB,mBAAAt0E,UAAA20F,SAAA,SAAAC,EAAAiI,EAAAC,GACA,MAAAF,GAAApzF,MAAAjL,MAAAq2F,GAAA,OACAtmC,KAAA,SAAAxyB,GACA,MAbA,UAAAA,GACA,GAAAxzB,GAAA,GAAA4pB,IAKA,OAJA5yB,QAAAg3B,KAAAwF,GAAAlvB,QAAA,SAAAoC,GACA1G,EAAAyrB,IAAA/kB,EAAA8sB,EAAA9sB,IACA1G,EAAA0G,GAAA8sB,EAAA9sB,KAEA1G,GAOAwzB,KAEAwyB,KAAAuuC,EAAAC,MAMA5+F,GAAAD,SACA01F,YAAAP,EAAAO,YACAD,iBAAAN,EAAAM,iBACAJ,mBAAAF,EAAAE,mBACAE,iBAAArsF,EAAA,qBAGKk1F,WAAA,GAAA1G,iBAAA,IAAiCl2C,GAAA,SAAAt4C,EAAAjJ,EAAAD,GAStC,YAEA,IAAA+0F,GAAA7rF,EAAA,YAAA9E,IACA4wF,EAAA9rF,EAAA,YAAA8rF,cAGA/0F,GAAAD,QAAA,WACA,GAAAi4F,GAAA,SAAA13F,GACA,OACAW,MACA49F,cAAA,kBACA5G,sBAAA,mBACS33F,EAAAW,OAAAX,EAAAW,KACTqb,SACAwiF,6BAAA,wFAESx+F,EAAAgc,UAAAhc,EAAAgc,QACT6tB,WAAA7pC,EAAA6pC,WACAj8B,SAAA,WACA,MAAA7N,MAAAY,MAAAZ,KAAAic,SAAA,MAAAjc,KAAAic,WAMAyiF,EAAA,SAAAriE,EAAAjT,EAAA0uE,GACA,GAAA6G,GAAA,SAAAj+F,GACA,mBAAAA,MAAAkI,QACA,MAAAlI,EAEA,IAAAkI,KAqCA,OApCA7H,QAAAg3B,KAAAr3B,GAAA2N,QAAA,SAAAoC,GACA,eAAAA,GAAA,aAAAA,GAAA,gBAAAA,EAAA,CAGA,GAAAlI,GAAA7H,EAAA+P,GAAA,gBAAA/P,GAAA+P,GACA/P,EAAA+P,IAAwBq/D,MAAApvE,EAAA+P,GAaxB,aAZAlI,EAAAknB,cACAlnB,EAAAqsC,cAAArsC,EAAAmlF,OACA9kF,EAAA/F,KAAA4N,YAEAlI,EAAAmlF,QACA,gBAAAnlF,GAAAmlF,MACAnlF,EAAAknB,IAAAlnB,EAAAqsC,IAAArsC,EAAAmlF,MAEAhtF,EAAA+P,GAAAlI,EAAAmlF,YAEAnlF,GAAAmlF,gBAEAnlF,EAAAunE,MAAA,CACApvE,EAAAqtF,SAAArtF,EAAAqtF,YACA,IAAAF,KACA,iBAAAtlF,GAAAunE,MACA+d,EAAAp9E,IAAyBgf,IAAAlnB,EAAAunE,MAAAl7B,IAAArsC,EAAAunE,OAEzB+d,EAAAp9E,GAAAlI,EAAAunE,MAEApvE,EAAAqtF,SAAAlrF,KAAAgrF,SACAtlF,GAAAunE,MACA/uE,OAAAg3B,KAAAxvB,GAAAvF,cACAtC,GAAA+P,OAIA7H,EAAA5F,SACAtC,EAAAkI,WAEAlI,EAaA,OAXA27B,GAAA9Y,KAAAgK,MAAAhK,KAAAkK,UAAA4O,IACAq4D,EAAAzwF,QAAA,KACAwwF,EAAA,SAAAlxE,KAAAkK,UAAA4O,IACAA,EAAA4yC,QACA5yC,EAAA4yC,MAAA0vB,EAAAtiE,EAAA4yC,QAEA5yC,EAAA0N,QACA1N,EAAA0N,MAAA40D,EAAAtiE,EAAA0N,QAEA0qD,EAAA,SAAAlxE,KAAAkK,UAAA4O,KAEAj5B,UAAAgB,gBAAAi4B,EAAAjT,EAAA,SAAAnpB,GACA63F,EAAAH,EAAA13F,OAKA83F,EAAA,SAAA17D,GACA,UAAA2b,SAAA,SAAA4E,EAAA8F,GACAg8C,EAAAriE,EAAAugB,EAAA8F,KAsBA,IAjBAt/C,UAAAimC,eACAjmC,UAAAimC,cAAgCoqC,aAAAskB,EAChC7vD,iBAAA,aACAE,oBAAA,eAGAhlC,UAAAimC,aAAAslC,iBACAvrE,UAAAimC,aAAAslC,kBAAA,WACA,UAAA32B,SAAA,SAAA4E,GAKAA,IAHemwB,KAAA,aAAAxE,SAAA,UAAAkK,MAAA,GAAAD,QAAA,KACAzF,KAAA,aAAAxE,SAAA,UAAAkK,MAAA,GAAAD,QAAA,SAMfkiB,EAAAzwF,QAAA,IAEA,GAAA26F,GACAx7F,UAAAimC,aAAAslC,iBAAAthE,KAAAjK,UAAAimC,aACAjmC,WAAAimC,aAAAslC,iBAAA,WACA,MAAAiwB,KAAA7uC,YAAA,SAAA9vD,GACA,qBAAAA,EAAAW,KACA,QAEA,MAAAX,MAIA,GAAAy0F,EAAAzwF,QAAA,IACA,GAAA+zF,GAAA50F,UAAAimC,aAAAoqC,aACApmE,KAAAjK,UAAAimC,aACAjmC,WAAAimC,aAAAoqC,aAAA,SAAA/yE,GACA,MAAAs3F,GAAAt3F,GAAA01D,MAAA,SAAAn2D,GACA,MAAA+3C,SAAA0K,OAAAi1C,EAAA13F,OAIAmD,UAAAqwE,aAAA,SAAAp3C,EAAAjT,EAAA0uE,GACA,GAAApD,EAAAzwF,QAAA,GACA,MAAAy6F,GAAAriE,EAAAjT,EAAA0uE,EAGAhyF,GAAAsC,KAAA,mFAEAhF,UAAAimC,aAAAoqC,aAAAp3C,GAAA0zB,KAAA3mC,EAAA0uE,OAIKgG,WAAA,KAAcz7C,GAAA,SAAAz5C,EAAAjJ,EAAAD,GAQnB,YACA,IAAAo1F,IAQAG,iBAAA,WACA7xF,UAAAqwE,aAAArwE,UAAAC,oBAKA1D,GAAAD,SACAu1F,iBAAAH,EAAAG,uBAMM1pC,IAAA,SAAA3iD,EAAAjJ,EAAAD,GASN,YAEA,IAAA4oC,MAGAv0B,GACAy0B,WAAA,SAAAC,GACA,uBAAAA,GACA,GAAA/8B,OAAA,wBAAA+8B,GACA,4BAEAH,EAAAG,EACAxoC,EAAA,8BACA,+BAGA6D,IAAA,WACA,mBAAAe,QAAA,CACA,GAAAyjC,EACA,gBAEAxiC,GAAA,kBAAAA,GAAAhC,KACAgC,EAAAhC,IAAAmH,MAAAnF,EAAAiF,aAaA+9B,eAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAtlC,GAAAolC,EAAAplC,MAAAqlC,EACA,OAAArlC,MAAAX,QAAAimC,GAAAplC,SAAAF,EAAAslC,GAAA,KASAC,cAAA,WAEA,GAAA1sB,KAKA,IAJAA,EAAA2sB,QAAA,KACA3sB,EAAAvY,QAAA,KAGA,mBAAAY,iBAAAzB,UAEA,MADAoZ,GAAA2sB,QAAA,iBACA3sB,CAIA,IAAApZ,UAAAgB,gBACAoY,EAAA2sB,QAAA,UACA3sB,EAAAvY,QAAAjE,KAAA8oC,eAAA1lC,UAAAM,UACA,6BAGO,IAAAN,UAAAC,mBAEP,GAAAwB,OAAAukC,wBACA5sB,EAAA2sB,QAAA,SACA3sB,EAAAvY,QAAAjE,KAAA8oC,eAAA1lC,UAAAM,UACA,kCAIS,CAYT,IAAAN,UAAAM,UAAAC,MAAA,wBASA,MAFA6Y,GAAA2sB,QAAA,2EAEA3sB,CARAA,GAAA2sB,QAAA,SACA3sB,EAAAvY,QAAAjE,KAAA8oC,eAAA1lC,UAAAM,UACA,iCAWO,KAAAN,UAAAimC,eACPjmC,UAAAM,UAAAC,MAAA,sBAQA,MADA6Y,GAAA2sB,QAAA,2BACA3sB,CAPAA,GAAA2sB,QAAA,OACA3sB,EAAAvY,QAAAjE,KAAA8oC,eAAA1lC,UAAAM,UACA,wBAQA,MAAA8Y,IAKA7c,GAAAD,SACAoE,IAAAiQ,EAAAjQ,IACA0kC,WAAAz0B,EAAAy0B,WACAksD,eAAA3gF,EAAAm1B,gBACAJ,eAAA/0B,EAAA+0B,0BAGW,QA3jF+DnpC,EAAAD,QAAA2M,IAkkF1E4kE,EAAA+W,6BAgBA5kF,UAAAgB,iBAEAyvE,iBAAAC,WAAA,SAAA+qB,GACA7xF,WAAA,WAKA6xF,IAHW9xB,KAAA,QAAAtqE,GAAA,UAAAgwE,MAAA,GAAAC,OAAA,KACA3F,KAAA,QAAAtqE,GAAA,UAAAgwE,MAAA,GAAAC,OAAA,OAGJ,IAIP1E,kBAAA,SAAAhpD,EAAA2Q,GAEA,MADA3Q,GAAAixD,UAAAtgD,EACA3Q,GAGA2mE,oBAAA,SAAA9iE,EAAA7a,GAEA,MADA6a,GAAAotD,UAAAjoE,EAAAioE,UACAptD,GAGA0iE,gBAAA,SAAApR,EAAA7lC,EAAAq4C,GACA7mF,EAAAsC,KAAA,iGAGA,IAAAwkF,GAAA,KACAC,EAAA1S,EAAA3zE,MAAA,IACA,QAAAqmF,EAAA,GAAA9nF,QAAA,QACA6nF,GAAqBI,MAAA7S,QACd,QAAA0S,EAAA,GAAA9nF,QAAA,QACP,GAAAsjF,sBAAA,IACA,GAAAyW,GAAA3kB,EAAA3zE,MAAA,IACA,KAAAs4F,EAAA97F,QACA,IAAA87F,EAAA,GAAA/5F,QAAA,mBACA6nF,GACAI,MAAA8R,EAAA,IACA/R,WAAAJ,EACAr4C,iBAIAs4C,IACAI,MAAA7S,GACA4S,WAAAJ,EACAr4C,WAIA,OAAAs4C,IAGApB,iBAAA,SAAAwB,EAAA14C,EAAAq4C,GACA7mF,EAAAsC,KAAA,kGAEA,IAAA6kF,KACA,KAAA5sF,EAAA,EAAiBA,EAAA2sF,EAAAhqF,OAAiB3C,IAAA,CAClC,GAAAusF,GAAArB,gBAAAyB,EAAA3sF,GAAAi0C,EAAAq4C,EACA,QAAAC,GACAK,EAAApqF,KAAA+pF,GAGA,MAAAK,KAEG7pF,UAAAC,oBAEH2qE,kBAAA,SAAAhpD,EAAA2Q,GASA,MARA0yD,wBAAA,GACArjE,EAAAixD,UAAAtgD,WACO3Q,EAAAk6C,IACPl6C,EAAAk6C,IAAAmV,IAAAE,gBAAA5+C,GAEA7vB,EAAAwW,MAAA,sCAGA0I,GAGA2mE,oBAAA,SAAA9iE,EAAA7a,GAMA,MALAq6E,wBAAA,GACAx/D,EAAAotD,UAAAjoE,EAAAioE,UAEAptD,EAAAq2C,IAAAlxD,EAAAkxD,IAEAr2C,GAGA0iE,gBAAA,SAAApR,EAAA7lC,EAAAq4C,GACA7mF,EAAAsC,KAAA,iGAEA,IAAAwkF,GAAA,KACAC,EAAA1S,EAAA3zE,MAAA,IAUA,OATA,KAAAqmF,EAAA,GAAA9nF,QAAA,QACA6nF,GAAqBzS,OACd,IAAA0S,EAAA,GAAA9nF,QAAA,UACP6nF,GACAzS,MACA4S,WAAAJ,EACAr4C,aAGAs4C,GAGApB,iBAAA,SAAAwB,EAAA14C,EAAAq4C,GACA7mF,EAAAsC,KAAA,kGAEA,IAAA6kF,KACA,IAAA5E,uBAAA,GACA4E,GACAD,OACAD,WAAAJ,EACAr4C,gBAGA,KAAAj0C,EAAA,EAAmBA,EAAA2sF,EAAAhqF,OAAiB3C,IAAA,CACpC,GAAAusF,GAAArB,gBAAAyB,EAAA3sF,GAAAi0C,EAAAq4C,EACA,QAAAC,GACAK,EAAApqF,KAAA+pF,GAIA,MAAAK,KAEG7pF,UAAAimC,cAAAjmC,UAAAM,UAAAC,MAAA,wBAEHqqE,kBAAA,SAAAhpD,EAAA2Q,GAEA,MADA3Q,GAAAixD,UAAAtgD,EACA3Q,GAGA2mE,oBAAA,SAAA9iE,EAAA7a,GAEA,MADA6a,GAAAotD,UAAAjoE,EAAAioE,UACAptD,IAMAk2E,uBAAA/wB,kBAEA,UAAAoa,wBACA2W,uBAAA,SAAA/5E,EAAA2Q,GACA0yD,sBAAA,GACArjE,EAAAixD,UAAAtgD,WACO3Q,EAAAk6C,MACPl6C,EAAAk6C,IAAAmV,IAAAE,gBAAA5+C,MAMAq4C,kBAAA,SAAAhpD,EAAA2Q,GASA,MARA,WAAAyyD,uBACA,UAAAA,uBACAzyD,EAIAopE,uBAAA/5E,EAAA2Q,GAFA3Q,EAAAk6C,IAAA,GAIAl6C,GAEAg6E,yBAAArT,oBACAA,oBAAA,SAAA9iE,EAAA7a,GAEA,MADAgxF,0BAAAn2E,EAAA7a,GACA6a,GAIAhkB,OAAAmpE,oCACAnpE,OAAA8mF,wCACA9mF,OAAA4uE,aAAA,SAAAp3C,EAAAjT,EAAAQ,GACAxmB,UAAAqwE,aAAAp3C,EAAAjT,EAAAQ,IAEAqnD,EAAAjD,oCACAiD,EAAA0a,wCACA1a,EAAAwC,0BAGA,mBAAAz7B,WACAg2C,iBAAA,MAGA/c,EAAA6V,0BA3wFA,IAAAz6E,IAq0GA,WAEA,YAEA,IAAA4yF,GAAA,IAEAhuB,GAAAr5D,KAAAsyE,WACAgV,wBAAA,uFACAC,4BAAA,yFACA5X,gBAAA,wFACA6X,UAAA,cACAC,cAAA,yBAGA,IAAAtF,GAAA,SAAAhxF,GACA,UAAAA,GAAA,gBAAAA,GACA,MAAAA,EAEA,IAAAu2F,GAAAv2F,EAAAmiC,aACA,QAAAvxB,KAAA5Q,GACAA,EAAArH,eAAAiY,KACA2lF,EAAA3lF,GAAA5Q,EAAA4Q,GAGA,OAAA2lF,GAwLA,IArLAz6F,OAAAzB,UAAAgB,iBACA66F,EAAAp6F,OAAAzB,UAAAqwE,aAEArwE,UAAAqwE,aAAA,SAAAp3C,EAAAwiE,EAAAU,GAEA,GAAAljE,KAAA0N,OAAA1N,EAAA0N,MAAAsnC,YAAA,CAIA,cAAAh1C,EAAA0N,MAAAsnC,aAAA,WAAAh1C,EAAA0N,MAAAsnC,YAEA,WADAkuB,GAAA,GAAA7zF,OAAA,qFAIA,IAAA8zF,GAAAzF,EAAA19D,EAGAmjE,GAAAz1D,MAAAqnC,eAAAouB,EAAAz1D,MAAAsnC,WAIA,IAAAouB,GAAAzY,YAAA,WACA,aAAAzzE,SAAA6a,aACA64D,cAAAwY,GAEAR,EAAAO,EAAAX,EAAA,SAAAviF,IACA,yCAAAvX,QAAAuX,EAAA1b,OAAA,cAAAiE,OAAAo6C,OAAApvB,SAAAtQ,SACA0xD,EAAAgY,sBAAAhY,EAAAr5D,KAAAsyE,UAAAgV,wBACAjuB,EAAAr5D,KAAAsyE,UAAAkV,UACA,8EAEAG,EAAAjjF,OAIS,OAGT2iF,GAAA5iE,EAAAwiE,EAAAU,IAIAtuB,EAAAwC,aAAA5uE,OAAA4uE,aAAArwE,UAAAqwE,cAQG5uE,OAAAzB,UAAAC,oBAAA,WAAAwB,OAAAujF,uBACH6W,EAAAp6F,OAAAzB,UAAAqwE,aAEArwE,UAAAqwE,aAAA,SAAAp3C,EAAAwiE,EAAAU,GACA,GAAAljE,KAAA0N,OAAA1N,EAAA0N,MAAAsnC,YAAA,CACA,cAAAxsE,OAAAujF,sBAGA,WADAmX,GAAA,GAAA7zF,OAAA,kDAKA,IAAA8zF,GAAAzF,EAAA19D,GAEAqjE,EAAA,SAAApjF,EAAAkwD,GACAlwD,EAgBAijF,EADA,sBAAAjjF,EACA,GAAA5Q,OAAA,0CAIA,GAAAA,OAAA,uCAnBA8zF,EAAAz1D,MAAAG,UAAAs1D,EAAAz1D,MAAAG,cACAs1D,EAAAz1D,MAAAG,UAAA6mC,kBAAA,UACAyuB,EAAAz1D,MAAAG,UAAA8lC,SAAAnrE,OAAAmsE,OAAAnB,MAAA,KAAAhrE,OAAAmsE,OAAAnB,MAAA,KACA2vB,EAAAz1D,MAAAG,UAAA+lC,UAAAprE,OAAAmsE,OAAAjB,OAAA,KAAAlrE,OAAAmsE,OAAAjB,OAAA,KAEAvD,IACAgzB,EAAAz1D,MAAAG,UAAAsnC,oBAAAhF,SAGAgzB,GAAAz1D,MAAAsnC,YAEA4tB,EAAAO,EAAAX,EAAAU,KAaAI,EAAA,SAAAxtE,GACAA,EAAAzhB,OAIAyhB,EAAAzhB,KAAA8gE,sBACA,0BAAAr/C,EAAAzhB,KAAA8gE,oBACAkuB,EAAA,qBAEAA,EAAA,KAAAvtE,EAAAzhB,KAAA8gE,sBAIAr/C,EAAAzhB,KAAAkvF,wBACA,kBAAAztE,EAAAzhB,KAAAkvF,sBACA3uB,EAAAgY,sBAAAhY,EAAAr5D,KAAAsyE,UAAAiV,4BACAluB,EAAAr5D,KAAAsyE,UAAAmV,cACAltE,EAAAzhB,cAAA,GAEAgvF,EAAAvtE,EAAAzhB,KAAAkvF,sBAAA,OAKA/6F,OAAAujC,oBAAA,UAAAu3D,IAGA96F,QAAAqjC,iBAAA,UAAAy3D,GAEAE,GACAC,yBAIAb,GAAA5iE,EAAAwiE,EAAAU,IAIAtuB,EAAAwC,aAAA5uE,OAAA4uE,aAAArwE,UAAAqwE,aACArwE,UAAAimC,aAAAoqC,aAAA,SAAAp3C,GACA,UAAA2b,SAAA,SAAA4E,EAAA8F,GACA79C,OAAA4uE,aAAAp3C,EAAAugB,EAAA8F,OAIGt/C,UAAAimC,cAAAjmC,UAAAM,UAAAC,MAAA,sBAEHmC,EAAAsC,KAAA,gEAGA62F,EAAAp6F,OAAAzB,UAAAqwE,aAEArwE,UAAAqwE,aAAA,SAAAp3C,EAAAwiE,EAAAU,GACA,GAAAljE,KAAA0N,OAAA1N,EAAA0N,MAAAsnC,YAAA,CAEA,GAAAmuB,GAAAzF,EAAA19D,EAGA40C,GAAAC,aAAA0V,oBAAA,WAEA3V,EAAAC,aAAAhlE,OAAA6zF,yBACA9uB,EAAAC,aAAAhlE,OAAA8zF,0BAEAR,EAAAz1D,MAAAolC,SAAAqwB,EAAAz1D,MAAAolC,aACAqwB,EAAAz1D,MAAAolC,SAAAtsE,MACA2pE,SAAAyE,EAAAC,aAAAhlE,OAAAilE,kBAAA,wBAGAquB,GAAAz1D,MAAAsnC,YAKA4tB,EAAAO,EAAAX,EAAAU,IAHAA,EAAA,GAAA7zF,OAAA,2EAMAuzF,GAAA5iE,EAAAwiE,EAAAU,IAIAtuB,EAAAwC,0BACA5uE,OAAA4uE,aAAArwE,UAAAqwE,aACArwE,UAAAimC,cACA,mBAAA2O,WACA50C,UAAAimC,aAAAoqC,aAAA,mBAAAua,4CAOA,WAAAnpF,OAAAujF,sBAAA,CACA,GAAA6X,GAAA1sF,SAAA4F,cAAA,SAEA8mF,GAAA7a,OAAA,WACA6a,EAAAC,aAGAD,EAAA/gC,IAAA,+DACA+gC,EAAAzpF,MAAA2pF,QAAA,QAEA5sF,SAAA0C,MAAA1C,SAAA+Y,iBAAApT,YAAA+mF,EAEA,IAAAJ,GAAA,SAAAt+F,GACAA,QAEA0+F,EAAAC,SAOAD,EAAAlW,cAAAqW,YAAA7+F,EAAA,KANAyL,WAAA,WACAizF,EAAAlW,cAAAqW,YAAA7+F,EAAA,MACS,UAMN,UAAAsD,OAAAujF,uBACHtiF,EAAAsC,KAAA,qEAzOA5H,KAAAqB,EAAA,gDAAA5B,EAAA4B,GC12HA,QAAAiC,KACA,GAAAlB,GAAAmI,UAAA,GAAAhI,EAAAgI,UAAA,GACAF,EAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACA,MAAA5I,EAAAY,GAAAH,EAAAG,OAMA,OAFAs9F,GAjDA,WACA,GAAAA,IACA9iD,WAAA,GACA+iD,aAAA,GACAtkF,KAAA,KACAukF,OAAA,MAGAjkF,EAAA,GAAA5Q,OACAkQ,EAAAU,EAAAV,MAAAU,EAAAV,MAAApV,MAAA,QACA,KAAAoV,KAAA5Y,OAAA,EACA,MAAAq9F,EAEA,IAAA5/F,GAAA,IAIA,OAHAmb,GAAA,KACAnb,EAAAmb,EAAA,GAAAjY,MAAA,iDAEAlD,KAAAuC,QAAA,GAEA,IAAA4Y,EAAA,GAAA7W,QAAA,QAEAs7F,EAAA9iD,WAAA3hC,EAAA,GAAAmP,OAAA,EAAAnP,EAAA,GAAA7W,QAAA,MAGAs7F,EAAA9iD,WAAA3hC,EAAA,GAAAmP,OAAA,EAAAnP,EAAA,GAAA7W,QAAA,MAEAs7F,IAGAA,EAAA9iD,WAAA98C,EAAA,GACA4/F,EAAAC,aAAA7/F,EAAA,GACA4/F,EAAArkF,KAAAvb,EAAA,GACA4/F,EAAAE,OAAA9/F,EAAA,GACA4/F,MAiBA39F,EAAA89F,EAAAj2F,OAAA3H,EAAAF,YACArC,EAAA,EAAkBA,EAAAqC,EAAAM,OAAuB3C,IAAA,CACzC,GAAAwB,GAAAa,EAAArC,GACAC,EAAAuB,EAAAkB,EACAzC,IAAA,kBAAAo0B,IACAp0B,EAAA+M,KAAAxL,EAAAe,EAAAH,GAAA,IAAAG,EAAAH,GAAA,WAAA49F,EAAA9iD,WAAA,OACAtyC,MAAApJ,EAAAgJ,IAcA,QAAA/I,GAAAiB,EAAAN,EAAAC,EAAAC,GACA3C,KAAAyC,KACAzC,KAAA2C,SACA3C,KAAA0C,aACA1C,KAAA0C,aACA1C,KAAA0C,eAEA1C,KAAA+C,MAAAZ,EAAAY,EAEA,QADA4qD,GAAA5sD,OAAAg3B,KAAA51B,GACA9B,EAAA,EAAkBA,EAAAstD,EAAA3qD,OAAoB3C,IACtCL,KAAA2tD,EAAAttD,IACAyD,EAAAuJ,KAAA,KAAArN,KAAA2tD,EAAAttD,IAnIA,GAAA8B,IACAkxC,MAAA,EACAh3B,MAAA,EACAnY,KAAA,EACAJ,IAAA,EACAsE,KAAA,EACAkU,MAAA,EAOAxa,GAAA2+F,iBAAA36F,OAMA,IAAA06F,IAAA1+F,EAAA2+F,iBAOA3+F,GAAAO,mBAAA,SAAAC,IACA,IAAAk+F,EAAAz7F,QAAAzC,IACAk+F,EAAA39F,KAAAP,IASAR,EAAAS,sBAAA,SAAAD,GACA,GAAAo+F,GAAAF,EAAAz7F,QAAAzC,IACA,IAAAo+F,GACAF,EAAAh2F,OAAAk2F,EAAA,IAmGA5+F,EAAAL,UAAAwB,SAAA,SAAAF,GACA/C,KAAA+C,MAAAZ,EAAAY,IAEApD,EAAAD,QAAAoC,EAKAA,EAAAK,QACAC,MAAA,QACAkV,MAAA,QACAC,KAAA,OACAopF,IAAA,MACAnpF,KAAA,OACAd,MAAA,mBAAAzW,EAAA4B,EAAAT,GC1JA,QAAAw/F,GAAAn+F,EAAAo+F,GACA7gG,KAAA8gG,IAAAr+F,EACAzC,KAAA+gG,SAAAF,EAnBA,GAAA51F,GAAAmC,SAAA3L,UAAAwJ,KAIAvL,GAAAsN,WAAA,WACA,UAAA4zF,GAAA31F,EAAAzK,KAAAwM,WAAAnI,OAAAkG,WAAAqZ,eAEA1kB,EAAAsnF,YAAA,WACA,UAAA4Z,GAAA31F,EAAAzK,KAAAwmF,YAAAniF,OAAAkG,WAAAk8E,gBAEAvnF,EAAA0kB,aACA1kB,EAAAunF,cAAA,SAAA1iE,GACAA,GACAA,EAAA+M,SAQAsvE,EAAAn/F,UAAAu/F,MAAAJ,EAAAn/F,UAAAw/F,IAAA,aACAL,EAAAn/F,UAAA6vB,MAAA,WACAtxB,KAAA+gG,SAAAvgG,KAAAqE,OAAA7E,KAAA8gG,MAIAphG,EAAAwhG,OAAA,SAAAxvD,EAAAyvD,GACA/8E,aAAAstB,EAAA0vD,gBACA1vD,EAAAnxB,aAAA4gF,GAGAzhG,EAAA2hG,SAAA,SAAA3vD,GACAttB,aAAAstB,EAAA0vD,gBACA1vD,EAAAnxB,cAAA,GAGA7gB,EAAA4hG,aAAA5hG,EAAA6hG,OAAA,SAAA7vD,GACAttB,aAAAstB,EAAA0vD,eAEA,IAAAD,GAAAzvD,EAAAnxB,YACA4gF,IAAA,IACAzvD,EAAA0vD,eAAAp0F,WAAA,WACA0kC,EAAA8vD,YACA9vD,EAAA8vD,cACKL,KAKLjhG,EAAA,IACAR,EAAAm4C,0BACAn4C,EAAA+hG,2DClDyH1gG,QAAAC,eAAAtB,EAAA,cAA4C0L,UAAW,IAAA8qC,GAAA,WAA4B,QAAAj2C,KAAA4B,GAAgB,OAAAT,GAAA,EAAYA,EAAAS,EAAAmB,OAAW5B,IAAA,CAAK,GAAAf,GAAAwB,EAAAT,EAAWf,GAAAa,WAAAb,EAAAa,eAAAb,EAAAY,gBAAA,SAAAZ,OAAA2nC,aAAAjnC,OAAAC,eAAAf,EAAAI,EAAAoQ,IAAApQ,IAA+G,gBAAAwB,EAAAT,EAAAf,GAAuB,MAAAe,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAf,GAAAJ,EAAA4B,EAAAxB,GAAAwB,MAAwCm2C,EAAA93C,EAAA,IAAAwhG,EAAA,WAAmD,QAAAzhG,GAAA4B,aAAvd5B,EAAA4B,GAA8B,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,uCAAuczO,KAAAC,GAAAD,KAAA+pB,WAAAloB,EAAA7B,KAAAuhG,UAAAvhG,KAAA69F,WAAyE,MAAA3nD,GAAAj2C,IAAwBwQ,IAAA,aAAArF,MAAA,WAAkC,MAAApL,MAAA69F,WAAuBptF,IAAA,QAAArF,MAAA,WAA6B,GAAAnL,GAAAD,KAAA6B,EAAA,GAAAm2C,GAAA,SAAAn2C,EAAAT,GAAuCnB,EAAA0hG,UAAA9/F,EAAA5B,EAAA2hG,SAAAxgG,GAA6B,OAAApB,MAAA+pB,WAAA83E,mBAAA7hG,KAAA8hG,cAAAz0F,KAAArN,YAAA+pB,WAAAg4E,iBAAA/hG,KAAAgiG,YAAA30F,KAAArN,YAAAuhG,UAAAvhG,KAAAiiG,gBAAAjiG,KAAAkiG,WAAArgG,KAAgM4O,IAAA,OAAArF,MAAA,WAA4BpL,KAAAuhG,aAAkB9wF,IAAA,YAAArF,MAAA,WAAiCpL,KAAAiiG,gBAAAjiG,KAAAq4B,OAAAr4B,KAAAmiG,cAAoD1xF,IAAA,WAAArF,MAAA,WAAgC,MAAApL,MAAAuhG,UAAsB9wF,IAAA,WAAArF,MAAA,eAAoCqF,IAAA,gBAAArF,MAAA,SAAAnL,OAA0CwQ,IAAA,cAAArF,MAAA,SAAAnL,OAAwCwQ,IAAA,OAAArF,MAAA,SAAAnL,GAA6BD,KAAA+pB,WAAA/F,KAAA/jB,MAA2BwQ,IAAA,WAAArF,MAAA,WAAgCpL,KAAAuhG,UAAAvhG,KAAA2hG,eAAmClxF,IAAA,SAAArF,MAAA,SAAAnL,GAA+BD,KAAAuhG,UAAAvhG,KAAA4hG,SAAA3hG,OAAiCA,IAAQP,GAAAgiG,wCCAvnC,SAAAU,GAAAniG,GAA8B,OAAA4B,GAAA,GAAA0G,EAAA,EAAiBA,EAAAtI,EAAIsI,IAAA1G,GAAA6N,OAAAC,aAAA,MAAAzB,KAAA+T,SAAgD,OAAApgB,GAASd,OAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAA0iG,kBAAA1iG,EAAA2iG,mBAAwD,IAAAnsD,GAAA,WAA4B,QAAAj2C,KAAA4B,GAAgB,OAAA0G,GAAA,EAAYA,EAAA1G,EAAAmB,OAAWuF,IAAA,CAAK,GAAA3G,GAAAC,EAAA0G,EAAW3G,GAAAV,WAAAU,EAAAV,eAAAU,EAAAX,gBAAA,SAAAW,OAAAomC,aAAAjnC,OAAAC,eAAAf,EAAA2B,EAAA6O,IAAA7O,IAA+G,gBAAAC,EAAA0G,EAAA3G,GAAuB,MAAA2G,IAAAtI,EAAA4B,EAAAJ,UAAA8G,GAAA3G,GAAA3B,EAAA4B,EAAAD,GAAAC,MAAwCygG,EAArvB,SAAAriG,GAAoC,GAAAA,KAAAoB,WAAA,MAAApB,EAA4B,IAAA4B,KAAS,UAAA5B,EAAA,OAAAsI,KAAAtI,GAAAc,OAAAU,UAAAC,eAAAlB,KAAAP,EAAAsI,KAAA1G,EAAA0G,GAAAtI,EAAAsI,GAAiF,OAAA1G,GAAAP,QAAArB,EAAA4B,GAA2lB3B,EAAA,KAAAmiG,EAAA,WAAwH,QAAApiG,KAAa,GAAA4B,GAAAkJ,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,kBAA3sB9K,EAAA4B,GAA8B,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,uCAA+uBzO,KAAAC,GAAAD,KAAAic,SAAsCy6E,UAAA,GAAA6L,UAAA,IAAAC,QAAA,GAAuC,IAAAj6F,GAAA65F,EAAAvgG,EAAAygG,EAAAltD,aAAAvnC,WAAA7K,OAAAugB,KAAAkK,UAAAztB,KAAAic,SAAAjZ,OAAyGhD,MAAAic,QAAAumF,QAAAj6F,EAAuB,MAAA2tC,GAAAj2C,IAAwBwQ,IAAA,OAAArF,MAAA,SAAAnL,GAA6B,MAAAD,MAAAic,QAAAy6E,UAAA4L,EAAAltD,aAAAp1C,KAAAic,QAAAsmF,UAAAtiG,EAAAsjB,KAAAkK,UAAAztB,KAAAic,aAA6Ghc,IAAQP,GAAA2iG,eAAA3iG,EAAA0iG,iDCoFjzC,SAASK,GAAoB9sE,EAAQ+sE,EAAUj2F,GAC1DzM,KAAK21B,OAASA,EACd31B,KAAK2iG,WAAa,KAClB3iG,KAAK4iG,cAAgBF,EACrB1iG,KAAK4rE,WAAa,EAClB5rE,KAAKyM,SAAWA,EDzF4yC21F,KCFh0C,IAAAS,GAAA3iG,EAAA,EAkBA2E,QAAOi+F,aAAej+F,OAAOi+F,cAAgBj+F,OAAOk+F,kBAEpD,IAAI7vD,GAAU,IAEVruC,QAAOi+F,eACP5vD,EAAU,GAAI4vD,eAUNE,SAAW9vD,EAAQ8vD,UAgE/BP,EAAoBhhG,UAAUmwB,MAAQ,WAClC,GAAK6wE,EAAoBQ,wBAAzB,CAGA/vD,EAAQrxB,QACR,IAAMqhF,GAAWhwD,EAAQiwD,gBAEzBD,GAASE,sBAxF2B,GAyFpCF,EAASG,QA/FsB,KAiGhBnwD,EAAQowD,wBAAwBtjG,KAAK21B,QAE7CvT,QAAQ8gF,EAGf,IAAMnjG,GAAOC,IAEbA,MAAK2iG,WAAa3b,YACd,WACI,GAAM33C,GAAQ,GAAIk0D,YAAWL,EAASM,kBAEtCN,GAASO,sBAAsBp0D,EAC/B,IAAMu8B,GA9ElB,SAAoC83B,GAMhC,IAAK,GAJDC,GAAY,EAEV3gG,EAAS0gG,EAAQ1gG,OAEd3C,EAAI,EAAGA,EAAI2C,EAAQ3C,IACpBsjG,EAAYD,EAAQrjG,KACpBsjG,EAAYD,EAAQrjG,GAI5B,OAAO42C,cAAa0sD,EAAY,KAAO,KAAKC,QAAQ,KAkEEv0D,EAE1Cu8B,KAAe7rE,EAAK6rE,aACpB7rE,EAAK6rE,WA5DrB,SAAsBi4B,EAAUC,GAC5B,GAAI14F,GAAQ,EACN24F,EAAOD,EAAYD,CAUzB,OAPIz4F,GADA24F,EAAO,GACCD,EAAY,GACbC,GAAQ,GACPD,EAAY,GAEZD,EAGL5sD,WAAW7rC,EAAMw4F,QAAQ,KAgDWh4B,EAAY7rE,EAAK6rE,YAChD7rE,EAAK0M,SAAS1M,EAAK6rE,cAG3B5rE,KAAK4iG,iBAObH,EAAoBhhG,UAAU42B,KAAO,WAC7Br4B,KAAK2iG,aACL1b,cAAcjnF,KAAK2iG,YACnB3iG,KAAK2iG,WAAa,OAU1BF,EAAoBQ,sBAAwB,WACxC,MAAOnpB,SAAQ5mC,IAAY2vD,EAAAv6F,EAAepB,sJCnJ9ChH,EAAAS,EAAA0H,EAAA,qBAAA27F,IAUO,IAAMC,GAAc,wBAOdC,EAAkB,6BAKlBC,EAAkB,6BASlBH,EAAmB,uCAAA/jG,EAAA4B,EAAAT,GC/BhC,GAAMgjG,GAAyBlkG,EAAQ,IAQjCmkG,GAgBFlwE,WAhBe,SAiBP+qC,EACA7kD,EACAiqF,EACAC,EACAC,EACA7wB,GACJ,GAAMhzE,GAAI4S,SAEJkxF,EAAS9jG,EAAEwY,cADD,UAEVurF,EAAgB/jG,EAAEsmB,qBAFR,UAEsC,EAItD,IAFAw9E,EAAOpqF,MAAQA,EAEXkqF,EAAa,CAGb,GAAMI,GAAWP,GAEjB,IAAIO,EAAU,CACV,GAAMC,GAAYD,EAASzlC,IACrB2lC,EACAD,EAAU5/F,UAAU,EAAG4/F,EAAUE,YAAY,KAAO,EAEtDF,IAAaC,IAEb3lC,EAAM2lC,EAAgB3lC,IAK9BslC,IACAC,EAAOrf,OAASof,GAEhB7wB,IACA8wB,EAAOh0E,QAAUkjD,GAGrB8wB,EAAOvlC,IAAMA,EACTolC,EACAI,EAAcxnF,WAAWwxE,aAAa+V,EAAQC,GAE9CA,EAAcxnF,WAAWhE,YAAYurF,IAOjD9kG,GAAOD,QAAU2kG,qcCtDXzhG,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAyBJ8+F,cAQjB,QAAAA,GAAY9mF,EAAS+mF,iGAAOhlG,KAAA+kG,EAAA,IAAAhvD,qKAAA/1C,MAAA+kG,EAAA/uD,WAAAj1C,OAAAk1C,eAAA8uD,IAAAvkG,KAAAR,MAAA,OAExB+1C,GAAKhsB,WAAa,KAClBgsB,EAAKkvD,wBACLlvD,EAAKmvD,mBACLnvD,EAAK93B,QAAUA,EACf83B,EAAKivD,MAAQA,EACbjvD,EAAKovD,qBACLpvD,EAAKqvD,oBAALrvD,GAEAA,EAAKhsB,WApCb,SAA0Bi7E,GAA4B,GAArBK,GAAqBt6F,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,GAAd,YAEhCi6F,KAEAK,KAAkC,IAAvBA,EAAKtgG,QAAQ,KAAc,IAAM,KAA5C,SAAwDigG,EAG5D,IAAMM,GAAO,GAAIC,GAAA7xF,QAAQ0L,WAAWimF,EAKpC,OAFAC,GAAKlkF,WAAa,EAEXkkF,GAwBgCN,EAAO/mF,EAAQonF,MAElDtvD,EAAKm9C,KAAO,GAAIsS,GAAAl9F,EAAKytC,EAAKhsB,WAAYgsB,EAAK93B,QAAQwnF,YAGnD1vD,EAAK2vD,mBAOL3uB,EAAElyE,QAAQkxB,GAAG,sBAAuBggB,EAAKlwB,WAAWxY,KAAhB0oC,IAtBZA,QARXgvD,6TAAaY,EAAA,GAQF5vD,8CAgCxB/1C,KAAKkzF,KAAK0S,WAAW,qBACrB5lG,KAAKkzF,KAAK0S,WAAW,8BACrB5lG,KAAKkzF,KAAK0S,WAAW,wCACrB5lG,KAAKkzF,KAAK0S,WAAW,+BACrB5lG,KAAKkzF,KAAK0S,WAAW,0CACrB5lG,KAAKkzF,KAAK0S,WAAW,kCACrB5lG,KAAKkzF,KAAK0S,WAAW,mCAEhB5lG,KAAKie,QAAQ4nF,YAAc7xE,EAAA1rB,EAAeN,eAC3ChI,KAAKkzF,KAAK0S,WAAW,qBASzB5lG,KAAKkzF,KAAK0S,WAAW,qBACrB5lG,KAAKkzF,KAAK0S,WAAW,qBAKjB5xE,EAAA1rB,EAAe7B,iBAAczG,KAAKie,QAAQ6nF,gBAC1CljG,EAAOsB,KAAK,sBACZlE,KAAKkzF,KAAK0S,WAAW,kCAGrB5lG,KAAK+pB,WAAWg8E,MAChB/lG,KAAKkzF,KAAK0S,WAAW,6BAAAn1F,IAAA,gBAAArF,MAAA,WAQzB,MAAOpL,MAAK+pB,uDAciC,GAA/Bi8E,GAA+Bj7F,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MAAA69D,EAAA5oE,KAAbqmB,EAAatb,UAAA,GAALqR,EAAKrR,UAAA,GACvC8e,EAAMhlB,OAAOwwC,YAAYxrB,MACzBo8E,EAAYV,EAAA7xF,QAAQwyF,gBAAgB7/E,GAAQtL,aAMlD,IAJA/a,KAAKklG,gBAAgBe,GAAap8E,EAClCjnB,EAAOkB,IAAP,kBACsBmiG,GAAY7pF,MAAUA,EAAV,IAAmB,IADrD,MAEIyN,GACAxD,IAAWk/E,EAAA7xF,QAAQ+C,OAAOM,WACvBsP,IAAWk/E,EAAA7xF,QAAQ+C,OAAOS,SAAU,EACnClX,KAAKie,QAAQkoF,aACTnmG,KAAKie,QAAQmoF,KAAOpmG,KAAKie,QAAQmoF,IAAID,cACzCnmG,KAAK+pB,WAAWs8E,OAAOC,4BAG3B1jG,EAAOsB,KAAP,iBAA6BlE,KAAK+pB,WAAWzO,IAG7C,IAAMirF,GAAUvmG,KAAK+pB,WAAW5W,MAEhCnT,MAAK+pB,WAAWy8E,KAAKC,eACjBF,EACA,SAAAG,GACQA,EACA99B,EAAK7+C,WAAWy8E,KAAKG,cAAcJ,GAEnC3jG,EAAOwF,KAAP,yBAAqCm+F,KAI7CP,EAAYrZ,WACZ3sF,KAAKmlG,sBAELnlG,KAAK+pB,YAAc/pB,KAAK+pB,WAAWrJ,WAC5B6kF,EAAA7xF,QAAQgI,mBAAmB1b,KAAK+pB,WAAWzO,MAGlDtb,KAAK4zB,aAAa+C,KACdiwE,EAAAtiE,uBACAihE,EAAA7xF,QAAQgI,mBAAmB1b,KAAK+pB,WAAWzO,UAEhD,IAAI+K,IAAWk/E,EAAA7xF,QAAQ+C,OAAOG,SACrB,+BAARwF,EACApc,KAAK6mG,6BAEL7mG,KAAK8mG,oBAET9mG,KAAK+mG,aAAe3qF,EACR,cAARA,GACApc,KAAK4zB,aAAa+C,KACdiwE,EAAAriE,kBACAyiE,EAAAC,YAAmC7qF,OAExC,IAAIiK,IAAWk/E,EAAA7xF,QAAQ+C,OAAOO,aAAc,CAE/ChX,KAAK+pB,WAAWy8E,KAAKU,cACrB,IAAMC,GAA2BnnG,KAAKilG,qBAChCmC,EAAShrF,GAAOpc,KAAK+mG,YAG3B,IADA/mG,KAAKilG,wBACDjlG,KAAK6mG,0BAEL7mG,KAAK4zB,aAAa+C,KACdiwE,EAAAriE,kBACAyiE,EAAAphE,uBACD,IAAI5lC,KAAK8mG,iBACZ9mG,KAAK4zB,aAAa+C,KACdiwE,EAAAriE,kBACAyiE,EAAAC,YAAmCG,OACpC,IAAID,EACPnnG,KAAK4zB,aAAa+C,KACdiwE,EAAAx/B,wBAA+CggC,OAChD,CAMHxkG,EAAO0Z,MAAM,2BAIb,IAAM+qF,GAAkB9B,EAAA7xF,QAAQ4zF,oBAE5BD,IAAmB,KAAOA,EAAkB,IAC5CrnG,KAAK4zB,aAAa+C,KACdiwE,EAAAriE,kBACAyiE,EAAAO,aACAH,GAAU,gBAEdpnG,KAAK4zB,aAAa+C,KACdiwE,EAAAriE,kBACAyiE,EAAAQ,yBACAJ,GAAU,iCAGf/gF,KAAWk/E,EAAA7xF,QAAQ+C,OAAOK,UAEjC9W,KAAK4zB,aAAa+C,KACdiwE,EAAAriE,kBACAyiE,EAAAphE,kBACAxpB,EACA4pF,oCASH1qF,EAAKqxE,GA4BV3sF,KAAK6mG,6BACL7mG,KAAK8mG,oBACL9mG,KAAK+mG,oBACL/mG,KAAK+pB,WAAW3H,QACZ9G,EACAqxE,EACA3sF,KAAKynG,kBAAkBp6F,KAAKrN,MACxBsb,MACAqxE,6CAWL1uE,GACH,GAAM4L,GAAM7pB,KAAKklG,gBAAgBwC,UAAY7iG,OAAOwwC,YAAYxrB,KAEhEjnB,GAAOkB,IAAP,8BAAyC+lB,GACzC7pB,KAAK+pB,WAAWhH,OAAO9E,EAAQ3C,IAAK2C,EAAQ+E,IACxCnf,SAASoa,EAAQgF,IAAK,IAAM,EAC5BjjB,KAAKynG,kBAAkBp6F,KAAKrN,MACxBsb,IAAK2C,EAAQ3C,IACbqxE,SAAU1uE,EAAQ0uE,4CAStBrxE,EAAKqxE,GACT,IAAKrxE,EAAK,IAAAqsF,GAC8B3nG,KAAKie,QAAQ2pF,MAAzCC,EADFF,EACEE,gBAAiB10F,EADnBw0F,EACmBx0F,OACrB20F,EAAeD,GAAmB10F,EAS9B0c,EAAahrB,OAAbgrB,QAER,IAAIg4E,EAAiB,CACjB,GAAMn2E,GAAS7B,GAAYA,EAAS6B,QAE/BA,IAA4C,IAAlCA,EAAO3sB,QAAQ,eACnB/E,KAAKglG,SACZ8C,EAAe30F,GAKvBmI,EAAMwsF,GAAiBj4E,GAAYA,EAASk4E,SAGhD,MAAO/nG,MAAK8iB,SAASxH,EAAKqxE,sCAQnBjzD,EAAUzb,GAEjB,GAAI+pF,GAAczC,EAAA7xF,QAAQ2H,eAAerb,KAAK+pB,WAAWzO,KACrD2sF,EAAavuE,EAAb,IAAyB15B,KAAKie,QAAQ2pF,MAAMM,IAA5C,IACEC,EACAlqF,EAAQmqF,UAAYnqF,EAAQoqF,KAAOpqF,EAAQoqF,KAAO,IAkBxD,OAhBIF,GAEAH,EAAc/pF,EAAQoqF,KACdroG,KAAKmlG,oBAEb6C,EAAcA,EAAYj9E,OAAO,EAAG,KAKpC/qB,KAAKmlG,mBAAqC,OAAhBgD,KAC1BH,OAAmBM,EAAAhgG,EAAW2sC,gBAAgB,IAGlDgzD,GAAWD,EAEJhoG,KAAK+pB,WAAWw+E,KAAKC,WAAWP,EAAS,KAAMhqF,0CAQtD,GAAMooF,GAASrmG,KAAK+pB,WAAWs8E,MAG/B,OAAOA,GAASA,EAAOoC,iDAOvB,OAAQzoG,KAAK+pB,WAAWnnB,YAAckB,KAAO,QAAA2M,IAAA,OAAArF,MAAA,WAMnC,GAAAs9F,IACVA,EAAA1oG,KAAK+pB,WAAWg8E,MAAK4C,KAArB19F,MAAAy9F,EAAA39F,2CAQIuQ,EAAKgwD,GACTtrE,KAAK+pB,WAAW6+E,SAASC,QAAQvtF,EAAKgwD,iCAOpChwD,GACFtb,KAAK+pB,WAAW6+E,SAASE,MAAMxtF,yCAO/B,MAAOtb,MAAK+pB,WAAWs8E,OAAO0C,4CASvBC,GACP,IAAIhpG,KAAKilG,sBACGjlG,KAAK+pB,YACL/pB,KAAK+pB,WAAWrJ,UAF5B,CAwBA,GAhBA1gB,KAAKilG,wBAcLjlG,KAAK+pB,WAAW5F,QAEL,OAAP6kF,YAAsBA,EAAoB,CAC1C,GAAMC,GAASD,EAAGhrF,IAEH,kBAAXirF,GAAwC,WAAXA,IAM7BjpG,KAAK+pB,WAAW9L,QAAQ+Q,SAIhChvB,KAAK+pB,WAAWlE,kBAEZ7lB,KAAK+pB,WAAW9L,QAAQ+Q,MACxBhvB,KAAK+pB,WAAW5F,YArChBnkB,MAAK4zB,aAAa+C,KAAKiwE,EAAAz/B,gBAAA12D,IAAA,sBAAArF,MAAA,WA6C3B,GAAM0+D,IACFo/B,KAAOjc,eACPmZ,KAAOnZ,gBAULkc,EAAkBnpG,KAAKie,QAAQmoF,KAC9BpmG,KAAKie,QAAQmoF,IAAIgD,eANlBpc,KAAM,iCACNA,KAAM,kCACNA,KAAM,iCAMRx/E,OAAMG,QAAQw7F,KACdvmG,EAAOsB,KAAK,qBAAsBilG,GAClCr/B,EAAUs8B,IAAInZ,WAAakc,GAG3BnpG,KAAKie,QAAQmoF,KAAOpmG,KAAKie,QAAQmoF,IAAIpQ,qBACrCpzF,EAAOsB,KAAK,6BACRlE,KAAKie,QAAQmoF,IAAIpQ,oBAErBlsB,EAAUs8B,IAAIpQ,mBACRh2F,KAAKie,QAAQmoF,IAAIpQ,oBAG3Bj1F,OAAAsoG,EAAA/gG,GAAStI,MACTe,OAAAuoG,EAAAhhG,GAAWtI,KAAMA,KAAK4zB,aAAck2C,GACpC/oE,OAAAwoG,EAAAjhG,KACAvH,OAAAyoG,EAAAlhG,GAAStI,MACTe,OAAA0oG,EAAAnhG,KACAvH,OAAA2oG,EAAAphG,SAAAvH,4QC7fRb,EAAAS,EAAA0H,EAAA,gCAAAk/F,IAeO,IAAMC,GAA2B,0BAK3BP,EAAc,wBAKdrhE,EAAoB,8BAMpB2hE,EAAe,mCAAAtnG,EAAA4B,EAAAT,GAAA,YAAAL,QAAAC,eAAAa,EAAA,cAAAuJ,OAAA,IAAAhK,EAAAT,EAAAkB,EAAA,sBAAA0G,KC/B5BrI,EAAAS,EAAA0H,EAAA,uBAAAshG,IAKO,IAAMC,GAAK,KAOLD,EAAM,gBAAA1pG,EAAA4B,GCAnBlC,EAAOD,SAHHmqG,iBAAkB,6CAAA5pG,EAAA4B,EAAAT,GAAA,uBAAAnB,GCatB,QAAS6pG,GAAqBC,GAC1B,GAAyC,kBAA9BA,GAAYC,cAA8B,CACjD,GAAM1tF,GAAQytF,EAAYC,cAAc,SAClCC,EAAY3tF,GAASA,EAAM0tF,cAAc,OAE/C,OAAO1tF,KACHkV,KAAMlV,EAAMhH,WAAWkc,MAAQlV,EAAMhH,WAAWkc,KAAKpmB,MACrD4S,KAAM1B,EAAMhH,WAAW0I,MAAQ1B,EAAMhH,WAAW0I,KAAK5S,MACrD6Q,QAASguF,GAAaA,EAAU/5E,aAIxC,GAAI5T,GAAQ,KAZ2Bsa,KAAAC,KAAAC,QAAA,KAcvC,OAAAC,GAAAC,EAAoB+yE,EAAYpb,SAAhCz3D,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAA0C,IAA/Bla,GAA+Bqa,EAAA3rB,KACtC,IAAsB,UAAlBsR,EAAMhE,QAAqB,CAC3B4D,EAAQI,CACR,SAjB+B,MAAA8J,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAqBvC,IAAKxa,EACD,MAAO,KAGX,IAAI2tF,GAAY,KAzBuBvyE,KAAAC,KAAAC,QAAA,KA2BvC,OAAAC,GAAAC,EAAyBxb,EAAMqyE,SAA/Bz3D,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAyC,IAA9BwyE,GAA8BryE,EAAAzsB,KACrC,IAA2B,SAAvB8+F,EAAWxxF,QAAoB,CAC/BuxF,EAAYC,EAAW9+F,KACvB,SA9B+B,MAAAob,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAkCvC,OACIpG,KAAMlV,EAAMhH,WAAWkc,KACvBxT,KAAM1B,EAAMhH,WAAW0I,KACvB/B,QAASguF,GAeF,QAASE,GAChBnsF,EACA4V,EACA7J,EACAqgF,EACAC,EACApC,GACJjoG,KAAK4zB,aAAeA,EACpB5zB,KAAK+pB,WAAaA,EAClB/pB,KAAK65F,MAAQ,KACb75F,KAAKoqG,YAAcA,EACnBpqG,KAAKqqG,QAAUA,EACfrqG,KAAKm6E,IAAM,KACXn6E,KAAKge,KAAOA,EACZhe,KAAKsqG,eAEItsF,IAASmsF,EAAUI,MAAMC,UAAYxqG,KAAKqqG,SACnCrsF,IAASmsF,EAAUI,MAAME,OACtBzsF,IAASmsF,EAAUI,MAAMG,YACzB1sF,IAASmsF,EAAUI,MAAMI,SAO5C3qG,KAAK4qG,WAAa,KAClB5qG,KAAKioG,QAAUA,ED5FGpmG,EAAAyG,EAAAhI,CAAA,IAAAiI,GAAAnH,EAAA,GCTtBmkG,UAAArlG,EAAA,IAKM2qG,GALN3qG,EAAAkB,EAAAmkG,GAKmBrlG,EAAQ,IACrB4qG,EAAsB5qG,EAAQ,IAC9BkyB,EAAuBlyB,EAAQ,GAE/B0C,EAAS7B,OAAAiF,EAAAxD,WAAUyD,EAiGzBkkG,GAAUI,OACNI,QAAS,UACTH,QAAS,UACTC,MAAO,QACPC,WAAY,cAGhBP,EAAU9jF,QACNujF,GAAI,KACJD,IAAK,MACLoB,UAAW,YACXC,YAAa,cACbC,QAAS,UACTC,SAAU,WACVx0F,MAAO,QACPy0F,KAAM,OACNC,OAAQ,UAGZjB,EAAUkB,QACNC,MAAO,QACPC,KAAM,QAGVpB,EAAU1oG,UAAU+pG,oBAAsB,SAASC,GAC/C,GAAMn2F,GAAam2F,EAAMn2F,UAEzB,IAAKA,EAAL,CAIA,GAAMgvE,GAAWhvE,EAAW+Q,OACtBqlF,EAAe5B,EAAqB2B,EAE1C7oG,GAAOkB,IAAP,2BAAsCwgF,EAAYonB,GAE9CpnB,IAAatkF,KAAK65F,QAIL,cAAbvV,EACAtkF,KAAK65F,MAAQsQ,EAAU9jF,OAAO2kF,YACvB1mB,IAAa6lB,EAAU9jF,OAAOsjF,IAChC3pG,KAAK65F,OACY,cAAf75F,KAAK65F,OACL75F,KAAK65F,QAAUsQ,EAAU9jF,OAAO2kF,YAGnChrG,KAAK65F,MAAQsQ,EAAU9jF,OAAOsjF,IAF9B3pG,KAAK65F,MAAQsQ,EAAU9jF,OAAO0kF,UAKlC/qG,KAAK65F,MAAQvV,EAGjBtkF,KAAK4zB,aAAa+C,KAAKk0E,EAAW7qE,uBAAwBhgC,KAAK65F,UAKnEsQ,EAAU1oG,UAAUkqG,kBAAoB,SAChC9R,EACAptF,EACAm/F,GACc,GAAd3tF,GAAclT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,KACd8uF,KAAU75F,KAAK65F,OACf+R,EAAYd,EAAoBe,cAIpC,IAAM9iF,GACAhoB,OAAAwkG,EAAA3xF,MACEiV,GAAI7oB,KAAKoqG,YACTpsF,KAAM,QAELtd,EAAE,SACCqc,MAAS,kCACTsuF,OACIxR,IAAUsQ,EAAU9jF,OAAOujF,GACrBO,EAAUkB,OAAOC,MACjBnB,EAAUkB,OAAOE,KAC3BO,eACI9rG,KAAKge,OAASmsF,EAAUI,MAAMG,WACxB,OACA,SACVqB,SACI/rG,KAAKge,OAASmsF,EAAUI,MAAME,MACxBxsF,EAAQywD,kBAGrBzxD,IAETra,GAAOkB,IAAP,wBAAmC+1F,EAAS9wE,EAAG/L,UAC/Cpa,EAAOkB,IAAIilB,EAAG/L,UACdhd,KAAK+pB,WAAWjF,OACZiE,EACA,SAAAvM,GACI5Z,EAAOkB,IAAI,SAAU0Y,EAErB,IAAMivF,GAAQ10B,EAAEv6D,GAAQkzB,KAAK,QAE7BjjC,GAASg/F,EAAM9xF,KAAK,SAAU8xF,EAAM9xF,KAAK,SAE7C,SAAA2C,GACI1Z,EAAOkB,IACH,qCACAgmG,EAAqBxtF,IACzBsvF,EAAYtvF,MAMxB6tF,EAAU1oG,UAAUuqG,oBACd,SAASnS,EAAOptF,EAAUm/F,GACpB/R,IAAU75F,KAAK65F,OACf+R,EAAY,GAAIlgG,OAAM,kBAG1B,IAAMqd,GACAhoB,OAAAwkG,EAAA3xF,MACEiV,GAAI7oB,KAAKqqG,QACTrsF,KAAM,QAELtd,EAAE,aAAeqc,MAAO,oCACrBsuF,OAAQxR,IAAUsQ,EAAU9jF,OAAOujF,GAC7BO,EAAUkB,OAAOC,MACjBnB,EAAUkB,OAAOE,KACvBU,OAAQjsG,KAAKioG,SAErBpO,KAAUsQ,EAAU9jF,OAAOsjF,KAC3B5gF,EAAG/U,OAAQiP,IAAKjjB,KAAK4qG,aAGzBhoG,EAAOkB,IAAI,kBACX,IAAM/D,GAAOC,IAEbA,MAAK+pB,WAAWjF,OACZiE,EACA,SAAAvM,GAIIzc,EAAK6qG,WAAa7zB,EAAEv6D,GAAQkzB,KAAK,aAAa/1B,KAAK,MAEnD,IAAMuyF,GACArS,IAAUsQ,EAAU9jF,OAAOujF,GAAK,UAAY,SAElDhnG,GAAOkB,IAAP,aAAwBooG,EAAxB,YAA4C1vF,GAE5Czc,EAAK85F,MAAQA,EACTA,IAAUsQ,EAAU9jF,OAAOsjF,MAC3B5pG,EAAK6qG,WAAa,MAGtBn+F,EAASotF,IAEb,SAAAv9E,GACI1Z,EAAOkB,IAAI,qCAAsCwY,GACjDsvF,EAAYtvF,MAS5B6tF,EAAU1oG,UAAU0qG,oBAAsB,SAClCtS,EACAptF,EACAm/F,EACA3tF,GACJ,GAAM9F,GAAOpX,OAAAwkG,EAAA3xF,MACTiV,GAAI7oB,KAAKoqG,YACTpsF,KAAM,OAGV7F,GAAKzX,EAAE,cACHqc,MAAO,sCAEX5E,EAAKzX,EAAE,aACHm5F,QACAmL,MAAO/mF,EAAQ+mF,OAGnB,IAAMjlG,GAAOC,IAEbA,MAAK+pB,WAAWjF,OACZ3M,EACA,SAAAqE,GACI5Z,EAAOkB,IAAI,kBAAmB+1F,EAAO,aAAcr9E,EACnD,IACM8nE,GADgBvN,EAAEv6D,GAAQkzB,KAAK,yBACN/1B,KAAK,QAEpC5Z,GAAK85F,MAAQvV,EACb73E,EAAS63E,GAEQ,YAAbA,GACAvkF,EAAKgqB,WAAWtF,WAAW,SAAAsE,GAEvB,GAAMnnB,GAAIm1E,EAAEhuD,GAAI2mB,KAAK,aAAa/1B,KAAK,QAEnC/X,KACA7B,EAAK85F,MAAQvV,EACb73E,EAAS7K,KAEd,oCAAqC,KAAM,KAAM,KAAM,OAGlE,SAAA0a,GACI1Z,EAAOwF,KAAKkU,GACZsvF,EAAYtvF,MAOxB6tF,EAAU1oG,UAAU2qG,aAAe,WAC/B,OAAQpsG,KAAKge,MACb,IAAKmsF,GAAUI,MAAMC,QACjBxqG,KAAKgsG,oBAAL/gG,MAAAjL,KAAA+K,UACA,MACJ,KAAKo/F,GAAUI,MAAMI,QACjB3qG,KAAKmsG,oBAALlhG,MAAAjL,KAAA+K,UACA,MACJ,KAAKo/F,GAAUI,MAAME,MACrB,IAAKN,GAAUI,MAAMG,WACjB1qG,KAAK2rG,kBAAL1gG,MAAAjL,KAAA+K,UACA,MACJ,SACI,GAAMumE,GAAS,yBAEfl/C,GAAqBC,iBAAiB,GAAI3mB,OAAM4lE,IAChD1uE,EAAO0Z,MAAMg1D,KAcrB64B,EAAU1oG,UAAU4qG,gBAAkB,WAET,GADrBpuF,GACqBlT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MAArBuhG,EAAqBvhG,UAAA,GACnBwhG,EAAWvsG,KAAK65F,KAiBtB,IAdI0S,IAAapC,EAAU9jF,OAAO2kF,aAC3BuB,IAAapC,EAAU9jF,OAAO+kF,OACjCkB,EACInC,EAAU9jF,OAAO+kF,OACjBN,EAAoB0B,sBACjBD,IAAapC,EAAU9jF,OAAO8kF,MACrCmB,EACInC,EAAU9jF,OAAO8kF,KACjBL,EAAoB2B,gBAMvBF,IAAapC,EAAU9jF,OAAOsjF,KACpB4C,IAAapC,EAAU9jF,OAAO0kF,cAC/B9sF,EAAQ+mF,OAAShlG,KAAKge,OAASmsF,EAAUI,MAAMI,UAC5C1sF,EAAQywD,UACN1uE,KAAKge,OAASmsF,EAAUI,MAAME,OAM7C,MALA6B,GACInC,EAAU9jF,OAAO+kF,OACjBN,EAAoB4B,cACxB9pG,GAAO0Z,MAAM,mBAKjB,IAAMgoE,GACAioB,IAAapC,EAAU9jF,OAAO0kF,WACrBwB,IAAapC,EAAU9jF,OAAOsjF,IACnCQ,EAAU9jF,OAAOujF,GACjBO,EAAU9jF,OAAOsjF,IAErB5pG,EAAOC,IAEb4C,GAAOkB,IAAI,4CAA6CyoG,EAAUjoB,GAClEtkF,KAAKosG,aACD9nB,EACA,SAACuV,EAAO1f,GAGA0f,GAASA,IAAU0S,IACnBxsG,EAAK85F,MAAQA,EACb95F,EAAKo6E,IAAMA,EACXmyB,EAAoBzS,KAG5B,SAAAv9E,GAAA,MAASgwF,GAAoBnC,EAAU9jF,OAAO+kF,OAAQ9uF,IACtD2B,IAMRksF,EAAU1oG,UAAUy2E,YAAc,WAC9B,MAAOl4E,MAAKsqG,cAOhBH,EAAU1oG,UAAUkrG,SAAW,WAC3B,MAAO3sG,MAAK65F,OAMhBsQ,EAAU1oG,UAAUmrG,OAAS,WACzB,MAAO5sG,MAAKm6E,0DC/YhBx6E,EAAOD,SAvBH8sG,qBAAsB,uBAKtBC,cAAe,gBAKfC,SAAU,mBAKVG,oBAAqB,6BAKrBhB,cAAe,mCAAA5rG,EAAA4B,EAAAT,GAAA,YAAAA,GAAAT,EAAAkB,EAAA,qBAAA0G,KAAAnH,EAAAT,EAAAkB,EAAA,qBAAAxB,KC5BnBH,EAAAS,EAAA0H,EAAA,qBAAAykG,IAMO,IAAM7B,GAAU,UAQV5qB,EAAS,SAOTysB,EAAQ,kBAAA7sG,EAAA4B,EAAAT,GAAA,YCbN,SAAS2rG,GAAIt8D,GAGxB,IAAK,GAFCrE,GAAQqE,EAAIjqC,MAAM,UAEfnG,EAAI,EAAG2C,EAASopC,EAAMppC,OAAQ3C,EAAI2C,EAAQ3C,IAAK,CACpD,GAAI2sG,QAAc5gE,EAAM/rC,EAEpBA,KAAM2C,EAAS,IACfgqG,GAAU,QAEd5gE,EAAM/rC,GAAK2sG,EAEf,GAAM1/E,GAAa8e,EAAMC,QAAnB,MAENrsC,MAAKosC,MAAQA,EACbpsC,KAAK0mB,IAAM4G,EAAU8e,EAAM3hC,KAAK,IAChCzK,KAAKstB,QAAUA,EDFEzrB,EAAAyG,EAAAxH,CAAA,IAAAyH,GAAAnH,EAAA,IAAAf,EAAA,2BAAAJ,EAAA4B,GAAA,GAAA2L,MAAAG,QAAA1N,GAAA,MAAAA,EAAA,IAAAi3B,OAAAC,WAAAp2B,QAAAd,GAAA,gBAAAA,EAAA4B,GAAA,GAAAT,MAAAmH,GAAA,EAAAlI,GAAA,EAAAS,MAAA,cAAAwH,GAAA1G,EAAA3B,EAAAi3B,OAAAC,cAAA5uB,GAAAD,EAAA1G,EAAAw1B,QAAAC,QAAAj2B,EAAAyB,KAAAyF,EAAA8C,QAAAvJ,GAAAT,EAAA4B,SAAAnB,GAAA0G,GAAA,UAAAtI,GAAAI,GAAA,EAAAS,EAAAb,EAAA,aAAAsI,GAAA3G,EAAA61B,QAAA71B,EAAA61B,SAAA,WAAAp3B,EAAA,KAAAS,IAAA,MAAAM,IAAAnB,EAAA4B,EAAA,UAAA4M,WAAA,2DCWrBs+F,GAAItrG,UAAUwrG,WAMdF,EAAItrG,UAAUyrG,uBAMdH,EAAItrG,UAAU0rG,uBAKdJ,EAAItrG,UAAU2rG,gBAAkB,WAK5B,IAAK,GAJCrtG,GAAOC,KACPqtG,KACFC,SAEKC,EAAa,EAAGA,EAAaxtG,EAAKqsC,MAAMppC,OAAQuqG,KALlB,SAK9BA,GACLD,EAAME,EAAAllG,EAAQomC,UAAU3uC,EAAKqsC,MAAMmhE,GAAa,UAChD,IAGMnhE,IACFmhE,aACAnZ,IAJEoZ,EAAAllG,EAAQ4jC,SACNshE,EAAAllG,EAAQsjC,SAAS7rC,EAAKqsC,MAAMmhE,GAAa,WAI7Cr+D,SACAK,cAGJ89D,GAAWE,GAAcnhE,EACzBkhE,EAAIj/F,QAAQ,SAAA2N,GACR,GAAMyxF,GAAWzxF,EAAKhX,UAAU,GAAGwB,MAAM,KAAK,EAIzC4lC,GAAM8C,MAAMu+D,KACbrhE,EAAM8C,MAAMu+D,IACRjzE,KAAMizE,EACNx/D,WAGR7B,EAAM8C,MAAMu+D,GAAUx/D,MAAMprC,KAAKmZ,MAErCsxF,EAAME,EAAAllG,EAAQomC,UAAU3uC,EAAKqsC,MAAMmhE,GAAa,kBAC5Cl/F,QAAQ,SAAA2N,GACR,GAAMk+E,GAAMl+E,EAAKjX,QAAQ,KACnB6qC,EAAY5zB,EAAK+O,OAAO,EAAGmvE,GAAKnvE,OAAO,IACvCmkB,EAAQlzB,EAAK+O,OAAO,GAAK6kB,EAAU5sC,QAAQwD,MAAM,IAEnD0oC,GAAMlsC,QACNopC,EAAMmD,WAAW1sC,MACb+sC,YACAV,aAnCPq+D,EAyCT,OAAOF,IAQXN,EAAItrG,UAAUisG,aAAe,SAASlzE,GAElC,GAAMmzE,GAAS3tG,KAAKotG,kBAChB5wF,IAWJ,OATAzb,QAAOg3B,KAAK41E,GAAQt/F,QAAQ,SAAAk/F,GACpB/wF,GAGAmxF,EAAOJ,GAAYr+D,MAAM1U,KACzBhe,QAIDA,GAIXuwF,EAAItrG,UAAUmsG,OAAS,WACnB,GAAIvtG,UAAGuJ,SAAGqkC,SAAOxB,SAAOohE,SAASC,QAEjC,KAAKztG,EAAI,EAAGA,EAAIL,KAAKosC,MAAMppC,OAAQ3C,IAI/B,IAHA4tC,EAAQjuC,KAAKosC,MAAM/rC,GAAGmG,MAAM,SACtBqgB,MAEc,WADpB4lB,EAAQ+gE,EAAAllG,EAAQ6jC,WAAW8B,EAAM5B,UACvBD,MAAV,CAKA,IAFAyhE,EAAU,GACVphE,EAAMF,IAAIvpC,OAAS,EACd4G,EAAI,EAAGA,EAAIqkC,EAAMjrC,OAAQ4G,IAAK,CAC/B,GAA8B,cAA1BqkC,EAAMrkC,GAAGmhB,OAAO,EAAG,GAAoB,CAEvC,GAAoB,QADpB+iF,EAASN,EAAAllG,EAAQokC,YAAYuB,EAAMrkC,KACxBhJ,MAAiC,SAAhBktG,EAAOltG,KAC/B,QAEJ6rC,GAAMF,IAAI1pC,KAAKirG,EAAOrrG,IAE1BorG,GAAc5/D,EAAMrkC,GAApB,OAEJ5J,KAAKosC,MAAM/rC,GAAQmtG,EAAAllG,EAAQkkC,WAAWC,GAAtC,OAAmDohE,EAEvD7tG,KAAK0mB,IAAM1mB,KAAKstB,QAAUttB,KAAKosC,MAAM3hC,KAAK,KAI9CsiG,EAAItrG,UAAUssG,mBAAqB,SAASniG,GACxC,GAAM7L,GAAOC,KACPiuC,EAAQu/D,EAAAllG,EAAQomC,UAAU1uC,KAAKstB,QAAS1hB,EAO9C,OALAqiC,GAAM5/B,QAAQ,SAAA2N,GACVjc,EAAKutB,QAAUvtB,EAAKutB,QAAQljB,QAAW4R,EAAxB,OAAoC,MAEvDhc,KAAK0mB,IAAM1mB,KAAKstB,QAAUttB,KAAKosC,MAAM3hC,KAAK,IAEnCwjC,GAKX8+D,EAAItrG,UAAUusG,iBAAmB,SAAST,EAAY3hG,GAClD,GAAM7L,GAAOC,KACPiuC,EAAQu/D,EAAAllG,EAAQomC,UAAU1uC,KAAKosC,MAAMmhE,GAAa3hG,EAQxD,OANAqiC,GAAM5/B,QAAQ,SAAA2N,GACVjc,EAAKqsC,MAAMmhE,GACLxtG,EAAKqsC,MAAMmhE,GAAYnjG,QAAW4R,EAAlC,OAA8C,MAExDhc,KAAK0mB,IAAM1mB,KAAKstB,QAAUttB,KAAKosC,MAAM3hC,KAAK,IAEnCwjC,GAIX8+D,EAAItrG,UAAUwsG,SAAW,SAAS91F,EAAM+1F,GACpC,GAAI7tG,UAAGuJ,SAAG4E,SAAGy/B,SAAOxB,SAAOqhE,SAAQtzE,SAAM8yE,QAKzC,KADAr/D,EAAQu/D,EAAAllG,EAAQomC,UAAU1uC,KAAKstB,QAAS,aAC9BtqB,OACN,IAAK3C,EAAI,EAAGA,EAAI4tC,EAAMjrC,OAAQ3C,IAAK,CAE/B,GAAMuvC,IADN09D,EAAMr/D,EAAM5tC,GAAGmG,MAAM,MACC6lC,QAAQthB,OAAO,EAIrC,KAFA5S,EAAKzX,EAAE,SAAWqc,MAAO,kCACrB6yB,cACChmC,EAAI,EAAGA,EAAI0jG,EAAItqG,OAAQ4G,IACxBuO,EAAKzX,EAAE,WAAaE,KAAM0sG,EAAI1jG,KAAMqT,IAExC9E,GAAK8E,KAGb,IAAK5c,EAAI,EAAGA,EAAIL,KAAKosC,MAAMppC,OAAQ3C,IAE/B,GAAsB,WADtBosC,EAAQ+gE,EAAAllG,EAAQ6jC,WAAWnsC,KAAKosC,MAAM/rC,GAAGmG,MAAM,QAAQ,KAC3C4lC,OACa,UAAhBK,EAAML,OACU,gBAAhBK,EAAML,MAFf,CAKA,GAAM+hE,GAAYX,EAAAllG,EAAQsjC,SAAS5rC,KAAKosC,MAAM/rC,GAAI,UAG9Cm6B,KADA2zE,GACOA,EAAUnpG,UAAU,GAAGwB,MAAM,KAAK,GAK7C2R,EAAKzX,EAAE,WAAa0tG,QAASF,EACzBttG,KAAM6rC,EAAML,OAChB,IAAMiiE,GAAWb,EAAAllG,EAAQsjC,SAAS5rC,KAAKosC,MAAM/rC,GAAI,SAEjD,IAAIguG,EAAU,CAEV,GAAMja,GAAMoZ,EAAAllG,EAAQ4jC,SAASmiE,EAE7Bl2F,GAAKnE,OAAQpT,KAAMwzF,IAGvB,GAAIoZ,EAAAllG,EAAQsjC,SAAS5rC,KAAKosC,MAAM/rC,GAAI,aAAa2C,OAAQ,CAOrD,IANAmV,EAAKzX,EAAE,eACDqc,MAAO,6BACLqvB,MAAOK,EAAML,QACjB5R,GACAriB,EAAKnE,OAAQwmB,SAEZ5wB,EAAI,EAAGA,EAAI6iC,EAAMF,IAAIvpC,OAAQ4G,IAAK,CACnCkkG,EACMN,EAAAllG,EAAQsjC,SACN5rC,KAAKosC,MAAM/rC,GADb,YAEcosC,EAAMF,IAAI3iC,IAC9BuO,EAAKzX,EAAE,eAAgB8sG,EAAAllG,EAAQokC,YAAYohE,GAI3C,IAAMQ,GACAd,EAAAllG,EAAQsjC,SACN5rC,KAAKosC,MAAM/rC,GADb,UAEYosC,EAAMF,IAAI3iC,GAE5B,IAAI0kG,EAIA,IAHAhB,EAAME,EAAAllG,EAAQ4kC,UAAUohE,GAGnB9/F,EAAI,EAAGA,EAAI8+F,EAAItqG,OAAQwL,IACxB2J,EAAKzX,EAAE,YAAa4sG,EAAI9+F,IAAIyO,IAKpCjd,MAAKuuG,eAAeluG,EAAG8X,EAAMs0B,EAAMF,IAAI3iC,IAEvCuO,EAAK8E,KAET,GAAMuxF,GACAhB,EAAAllG,EAAQomC,UAAU1uC,KAAKosC,MAAM/rC,GAAI,YAAaL,KAAKstB,QASzD,IAPIkhF,EAAOxrG,SACPmV,EAAKzX,EAAE,cAAgB+tG,SAAU,IACjCD,EAAOngG,QACH,SAAA2N,GAAA,MAAQ7D,GAAKzX,EAAE,SAAU8sG,EAAAllG,EAAQykC,YAAY/wB,IAAOiB,OACxD9E,EAAK8E,MAGLud,EAAM,CACN,GAAMk0E,GAAUlB,EAAAllG,EAAQylC,UAAU/tC,KAAKosC,MAAM/rC,IADvCu2B,KAAAC,KAAAC,QAAA,KAGN,OAAAC,GAAAC,EAAgD03E,EAAhDx3E,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAyD,IAAAkf,GAAA/e,EAAA3rB,MAAAujG,EAAAC,EAAA94D,EAAA,GAA5C+4D,EAA4CF,EAAA,GAA7BG,EAA6BH,EAAA,EACrDx2F,GAAKzX,EAAE,UACH85B,KAAMq0E,EACN9xF,MAAO,oCAGX+xF,EAAezgG,QAAQ,SAAA0gG,GAEnB,GAAM7U,GAAM6U,EAAYhqG,QAAQ,KAC1BksF,EAAK8d,EAAYhkF,OAAOmvE,EAAM,EAGpC,IADA/hF,EAAKzX,EAAE,cACkB,IAArBuwF,EAAGlsF,QAAQ,KACXoT,EAAKnE,OAAQpT,KAAMqwF,QAChB,CACH,GAAMrwF,GAAOqwF,EAAGzqF,MAAM,IAAK,GAAG,EAE9B2R,GAAKnE,OAAQpT,QAEb,IAAI+zB,GAAIs8D,EAAGzqF,MAAM,IAAK,GAAG,EAEzBmuB,GAAI64E,EAAAllG,EAAQgjC,mBAAmB3W,GAC/Bxc,EAAKnE,OAAQ5I,MAAOupB,IAExBxc,EAAK8E,OAGT9E,EAAK8E,MA9BH,MAAAuJ,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAmCA02E,EAAAllG,EAAQomC,UAAU1uC,KAAKosC,MAAM/rC,GAAI,iBAExBgO,QAAQ,SAAA2N,GACnB,GAAMk+E,GAAMl+E,EAAKjX,QAAQ,KACnB6qC,EAAY5zB,EAAK+O,OAAO,EAAGmvE,GAAKnvE,OAAO,IACvCmkB,EAAQlzB,EAAK+O,OAAO,GAAK6kB,EAAU5sC,QAAQwD,MAAM,IAEnD0oC,GAAMlsC,SACNmV,EAAKzX,EAAE,cAAgBkvC,YACnB7yB,MAAO,oCACXmyB,EAAM7gC,QAAQ,SAAAzM,GAAA,MAAKuW,GAAKzX,EAAE,UAAY85B,KAAM54B,IAAKqb,OACjD9E,EAAK8E,QAKjB,GAAM+xF,GAAWxB,EAAAllG,EAAQomC,UAAU1uC,KAAKosC,MAAM/rC,GAAI,QAElD,IAAI2uG,EAAShsG,OAAQ,CAGjB,GAAMisG,GAAOD,EACRjlG,IAAI,SAAAmlG,GAAA,MAAWA,GAAQ1oG,MAAM,KAAK,KAClCuD,IAAI,SAAAolG,GAAA,MAAWA,GAAQ3oG,MAAM,KAAK,IAEvCyoG,GAAK5gG,QAAQ,SAAA4U,GACT9K,EAAKzX,EAAE,UACHuiB,MACAlG,MAAO,oCAEX5E,EAAK8E,OAGHuwF,EAAAllG,EAAQsjC,SAAS5rC,KAAKosC,MAAM/rC,GAAI,iBAGlC8X,EAAKzX,EAAE,aACHkvC,UAAW,MACX7yB,MAAO,oCAEXkyF,EAAK5gG,QAAQ,SAAA4U,GACT9K,EAAKzX,EAAE,UAAYuiB,QAAOhG,OAE9B9E,EAAK8E,MAab,GATIuwF,EAAAllG,EAAQsjC,SAAS5rC,KAAKosC,MAAM/rC,GAAI,eAChC8X,EAAKzX,EAAE,YAAYuc,KAIvBjd,KAAKuuG,eAAeluG,EAAG8X,EAAM,MAG7B81B,EAAQu/D,EAAAllG,EAAQomC,UAAU1uC,KAAKosC,MAAM/rC,GAAI,cAC/B2C,OACN,IAAK4G,EAAI,EAAGA,EAAIqkC,EAAMjrC,OAAQ4G,IAAK,CAS/B,GARA0jG,EAAME,EAAAllG,EAAQ+lC,YAAYJ,EAAMrkC,IAChCuO,EAAKzX,EAAE,cACHqc,MAAO,wCACPxQ,IAAK+gG,EAAI/gG,IACT9J,GAAI6qG,EAAIliG,QAIRkiG,EAAI5rG,eAAe,aAGnB,OAAQ4rG,EAAIh/D,WACZ,IAAK,WACDn2B,EAAKnE,OAAQo7F,QAAS,aACtB,MACJ,KAAK,WACDj3F,EAAKnE,OAAQo7F,QAAS,aACtB,MACJ,KAAK,WACDj3F,EAAKnE,OAAQo7F,QAAS,QACtB,MACJ,KAAK,WACDj3F,EAAKnE,OAAQo7F,QAAS,SAM9Bj3F,EAAK8E,KAGb9E,EAAK8E,KAITjd,KAAKqvG,kBAAkBhvG,EAAG8X,EAE1B,IAAM1X,GAAIT,KAAKosC,MAAM/rC,EAEjBmtG,GAAAllG,EAAQsjC,SAASnrC,EAAG,aAAcT,KAAKstB,SACvCnV,EAAKnE,OAAQo7F,QAAS,SACf5B,EAAAllG,EAAQsjC,SAASnrC,EAAG,aAAcT,KAAKstB,SAC9CnV,EAAKnE,OAAQo7F,QAAS,cACf5B,EAAAllG,EAAQsjC,SAASnrC,EAAG,aAAcT,KAAKstB,SAC9CnV,EAAKnE,OAAQo7F,QAAS,cACf5B,EAAAllG,EAAQsjC,SAASnrC,EAAG,aAAcT,KAAKstB,UAC9CnV,EAAKnE,OAAQo7F,QAAS,SAEP,MAAf3iE,EAAMH,MAENn0B,EAAKnE,OAAQo7F,QAAS,aAE1Bj3F,EAAK8E,KAIT,MAFA9E,GAAK8E,KAEE9E,GAGX40F,EAAItrG,UAAU4tG,kBAAoB,SAAS9B,EAAYp1F,GACnD,GAAIm1F,UACEvtG,EAAOC,IAEbmY,GAAKzX,EAAE,YAGP,IAAM4uG,GACA9B,EAAAllG,EAAQsjC,SAAS5rC,KAAKosC,MAAMmhE,GAAa,aAAcxtG,EAAKutB,QAElE,IAAIgiF,EAAS,CACT,GAAMC,GAAY/B,EAAAllG,EAAQukC,aAAayiE,EAEvCn3F,GAAKzX,EAAE,WACHqc,MAAO,yCACPyyF,OAAQD,EAAU,GAClBhwF,SAAUgwF,EAAU,KAIpBA,EAAUvsG,OAAS,GACnBmV,EAAKnE,OAAQukE,QAASg3B,EAAU,KAEpCp3F,EAAK8E,KA6BT,GAxBMuwF,EAAAllG,EAAQomC,UACN1uC,KAAKosC,MAAMmhE,GACX,iBACAvtG,KAAKstB,SAEAjf,QAAQ,SAAA2N,IACjBsxF,EAAME,EAAAllG,EAAQ0kC,iBAAiBhxB,IAC3Be,MAAQ,8BACZ5E,EAAKzX,EAAE,eAAemB,EAAEyrG,EAAIrgE,mBACrBqgE,GAAIrgE,aAGXjxB,EACMwxF,EAAAllG,EAAQsjC,SACN7rC,EAAKqsC,MAAMmhE,GACX,WACAxtG,EAAKutB,YAETggF,EAAImC,MAAQzzF,EAAK+O,OAAO,IAE5B5S,EAAKnE,MAAMs5F,GACXn1F,EAAK8E,OAETqwF,EAAME,EAAAllG,EAAQijC,UAAUvrC,KAAKosC,MAAMmhE,GAAavtG,KAAKstB,SAC5C,CACLggF,EAAIvwF,MAAQ,uCACZ5E,EAAKnE,MAAMs5F,EAGX,IAAMr/D,GACAu/D,EAAAllG,EAAQomC,UACN1uC,KAAKosC,MAAMmhE,GACX,eACAvtG,KAAKstB,QAET2gB,GAAMjrC,QACNirC,EAAM5/B,QAAQ,SAAA2N,GACV,GAAMoxB,GAAYogE,EAAAllG,EAAQsmC,kBAAkB5yB,EAExCjc,GAAKktG,UACL7/D,EAAUI,GAAK,UAEnB,IAAMjuB,GACA6tB,GAA2C,gBAAvBA,GAAU7tB,SAC1B6tB,EAAU7tB,SAASxE,cACnB,EAELhb,GAAKmtG,sBACe,QAAb3tF,GAAmC,WAAbA,IAC1Bxf,EAAKotG,qBAAoC,QAAb5tF,GAGpCpH,EAAKzX,EAAE,YAAa0sC,GAAWnwB,OAI3C9E,EAAK8E,MAIT8vF,EAAItrG,UAAU8sG,eAAiB,SAAShB,EAAYp1F,EAAMu3F,GAEhDlC,EAAAllG,EAAQomC,UACN1uC,KAAKosC,MAAMmhE,GADb,aAEemC,GAEfrhG,QAAQ,SAAA2N,GACV,GAAMsxF,GAAME,EAAAllG,EAAQ4lC,YAAYlyB,EAEf,aAAbsxF,EAAItvF,MACJ7F,EAAKzX,EAAE,mBACHqc,MAAO,qCACP3R,MAAOkiG,EAAIl/D,OAAO,KAEtBj2B,EAAK8E,OAEL9E,EAAKzX,EAAE,WACHqc,MAAO,qCACPiB,KAAMsvF,EAAItvF,OAEVsvF,EAAIl/D,OAAOprC,OAAS,GACpBmV,EAAKnE,OAAQ27F,QAAWrC,EAAIl/D,OAAO,KAEvCj2B,EAAK8E,SAKjB8vF,EAAItrG,UAAUmuG,iBAAmB,SAASz3F,EAAMu3F,GAC5C,GAAItjE,GAAQ,GACRkhE,EACEn1F,EAAKu3B,KACH,+DAuBR,OArBI49D,GAAItqG,SACJopC,GAAS,uBACLkhE,EAAI3zF,KAAK,SACTyyB,GAASkhE,EAAI3zF,KAAK,SAElByyB,GAAS,IAEbA,GAAS,SAEbkhE,EAAMn1F,EAAKu3B,KAAK,yDACZ8c,KAAK,WAELpgB,gBAAsBsjE,EAAtB,IAAqC34B,EAAE/2E,MAAM2Z,KAAK,QAC9Co9D,EAAE/2E,MAAM2Z,KAAK,aACbyyB,OAAa2qC,EAAE/2E,MAAM2Z,KAAK,YAE9ByyB,GAAS,SAKNA,GAIX2gE,EAAItrG,UAAUouG,WAAa,SAASxJ,GAChC,GAAMtmG,GAAOC,IAEbA,MAAK0mB,IAAM,4DAOX,IAAMopF,GACA/4B,EAAEsvB,GAAQ32D,KAAK,kDAEjBogE,GAAO9sG,QACP8sG,EAAOtjD,KAAK,SAAC0tC,EAAKvqD,GACd,GAAMogE,GACAh5B,EAAEpnC,GACCD,KAAK,YACL3lC,IAAI,SAAC0qB,EAAGxH,GAAJ,MAAgBA,GAAQjS,aAAa,UACzC7Z,KAEL4uG,GAAS/sG,OAAS,IAClBjD,EAAK2mB,KAAL,YAEQipB,EAAM30B,aAAa,cACZ20B,EAAM30B,aAAa,SAHlC,IAIQ+0F,EAAStlG,KAAK,KAJtB,UASZzK,KAAKstB,QAAUttB,KAAK0mB,IACpB2/E,EAAO32D,KAAK,YAAY8c,KAAK,WAEzB,GAAM/rD,GAAIV,EAAKiwG,aAAaj5B,EAAE/2E,MAE9BD,GAAKqsC,MAAMvpC,KAAKpC,KAWpBT,KAAK0mB,IAAM1mB,KAAKstB,QAAUttB,KAAKosC,MAAM3hC,KAAK,KAI9CsiG,EAAItrG,UAAUuuG,aAAe,SAAS/iF,GAClC,GAAM+gB,GAAO/gB,EAAQyiB,KAAK,eACtBtD,EAAQ,GACNrsC,EAAOC,KACPiwG,EAAOhjF,EAAQyiB,KACjB,sEAEA49D,GAAQlhE,MAAO4B,EAAKr0B,KAAK,SAa7B,IAXA2zF,EAAIhhE,KAAO,IACqB,aAA5Brf,EAAQtT,KAAK,aAEb2zF,EAAIhhE,KAAO,KAEXrf,EAAQyiB,KAAK,0BAA0B1sC,QAChCgrC,EAAK0B,KAAK,cAAc1sC,OAC/BsqG,EAAIhuF,MAAQ2wF,EAAKjtG,OAAS,YAAc,YAExCsqG,EAAIhuF,MAAQ,WAEZ2wF,EAAKjtG,OAAQ,CACbopC,gCAAsC6jE,EAAKt2F,KAAK,UAAhD,OACAyyB,gBAAsB6jE,EAAKt2F,KAAK,UAAhC,IAA6Cs2F,EAAKt2F,KAAK,WAEvD,IAAMu2F,GAAcD,EAAKt2F,KAAK,UAG1ByyB,IADA8jE,EACA9jE,IAAa8jE,EAAb,OAES,WAGb5C,GAAI/gE,IACEyB,EACG0B,KAAK,gBACL3lC,IAAI,WAED,MAAO/J,MAAKgb,aAAa,QAE5B7Z,MACTirC,GAAYohE,EAAAllG,EAAQkkC,WAAW8gE,GAA/B,MA8BJ,QA3BAlhE,GAAS,uBACJ6jE,EAAKjtG,SACNopC,GAAS,gCAEbkhE,EACMrgF,EAAQyiB,KACN,6DACA1sC,SACAsqG,EAAI3zF,KAAK,WACTyyB,GAAYohE,EAAAllG,EAAQyjC,cAAcuhE,EAAI3zF,KAAK,UAA3C,QAEA2zF,EAAI3zF,KAAK,SACTyyB,GAAYohE,EAAAllG,EAAQ2jC,YAAYqhE,EAAI3zF,KAAK,QAAzC,QAEJ2zF,EAAI59D,KAAK,gBAAgB8c,KAAK,WAG1BpgB,oBAA0BpsC,KAAKgb,aAAa,QAC5CoxB,OAAa2qC,EAAE/2E,MAAM8Z,OACrBsyB,GAAS,OACLpsC,KAAKgb,aAAa,WAClBoxB,cAAoBpsC,KAAKgb,aAAa,SAAtC,WAMJiS,EAAQtT,KAAK,YACrB,IAAK,YACDyyB,GAAS,gBACT,MACJ,KAAK,YACDA,GAAS,gBACT,MACJ,KAAK,OACDA,GAAS,gBACT,MACJ,KAAK,OACDA,GAAS,iBAyIb,MAtIAA,aAAkBnf,EAAQtT,KAAK,QAA/B,OAMIq0B,EAAK0B,KAAK,YAAY1sC,SACtBopC,GAAS,kBAGT4B,EAAK0B,KAAK,cAAc1sC,QACxBgrC,EAAK0B,KAAK,qBAAqB8c,KAAK,WAEhCpgB,eAAqBpsC,KAAKgb,aAAa,OACvCoxB,OAAapsC,KAAKgb,aAAa,gBAC/BoxB,OAAapsC,KAAKgb,aAAa,cAC3Bhb,KAAKgb,aAAa,oBAClBoxB,OAAapsC,KAAKgb,aAAa,mBAEnCoxB,GAAS,SAKjB4B,EAAK0B,KAAK,gBAAgB8c,KAAK,WAE3BpgB,GAAYohE,EAAAllG,EAAQwkC,YAAY9sC,MAAhC,OACI+2E,EAAE/2E,MAAM0vC,KAAK,cAAc1sC,SAC3BopC,aAAmBpsC,KAAKgb,aAAa,MAArC,IACAoxB,GACO2qC,EAAE/2E,MACA0vC,KAAK,aACL3lC,IAAI,WACD,GAAMnJ,GAAOZ,KAAKgb,aAAa,OAE/B,QACKpa,EAAUA,EAAV,IAAoB,IACfZ,KAAKgb,aAAa,WAE/B7Z,MACAsJ,KAAK,MACd2hC,GAAS,QAIbA,GAASrsC,EAAK6vG,iBAAiB74B,EAAE/2E,MAAOA,KAAKgb,aAAa,SAM9DoxB,GAASrsC,EAAK6vG,iBAAiB5hE,EAAM,MAGrCs/D,EACMt/D,EAAK0B,KACH,+DACJ8c,KAAK,WAELpgB,eACmBpsC,KAAKgb,aAAa,MADrC,IAEQhb,KAAKgb,aAAa,OAF1B,SAOJiS,EACKyiB,KACG,sEAEH8c,KAAK,WAEF,GAAIjtC,GAAWvf,KAAKgb,aAAa,WAEjCuE,GAC0B,gBAAbA,GAAwBA,EAASxE,cAAgB,GAEzDhb,EAAKmtG,sBACe,QAAb3tF,GAAmC,WAAbA,IAC1Bxf,EAAKotG,qBAAoC,QAAb5tF,IAEzBxf,EAAKktG,SACZjtG,KAAK4Z,aAAa,KAAM,WAG5BwyB,GAASohE,EAAAllG,EAAQumC,oBAAoB7uC,SAM7CitB,EACKyiB,KAAK,mEACL8c,KAAK,WAEF,GAAM5c,GAAY5vC,KAAKgb,aAAa,aAC9Bk0B,EACA6nC,EAAE/2E,MACC0vC,KAAK,WACL3lC,IAAI,WACD,MAAO/J,MAAKgb,aAAa,UAE5B7Z,KAEL+tC,GAAMlsC,SACNopC,mBAAyBwD,EAAzB,IAAsCV,EAAMzkC,KAAK,KAAjD,WAMZ6iG,EACMrgF,EAAQyiB,KACN,gEACJ8c,KAAK,WAEL,GAAMhyB,GAAOx6B,KAAKgb,aAAa,OAG/B+7D,GAAE/2E,MAAM0vC,KAAK,cAAc8c,KAAK,WAC5B,GAAM5rD,GAAOZ,KAAKgb,aAAa,QAC3B5P,EAAQpL,KAAKgb,aAAa,QAE9B5P,GAAQoiG,EAAAllG,EAAQgjC,mBAAmBlgC,GACnCghC,aAAmB5R,EAAnB,IAA2B55B,EACvBwK,GAASA,EAAMpI,SACfopC,OAAahhC,GAEjBghC,GAAS,WAMVA,iECn0BXlsC,EAAAS,EAAA0H,EAAA,qBAAA8nG,IAMO,IAAMC,GAAqB,sBAOrBD,EAA0B,oCAAAlwG,EAAA4B,EAAAT,GAAA,uBAAAnB,GCUvC,QAASowG,GAA8BzhC,EAAa7yD,YAErC6yD,EAAY2yB,OACnB3yB,EAAY0hC,QAAUv0F,EAEtB6yD,EAAY2hC,WAAax0F,EDfM,GAAAxT,GAAAnH,EAAA,IAAAf,EAAAe,IAAAmH,GAAAzH,EAAAM,EAAA,GAAAkH,GAAAlH,IAAAN,GAAAM,EAAA,KAAAQ,EAAAR,EAAA,GAAAV,EAAAU,EAAA,IAAAszB,EAAA,mBAAAz0B,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MCNjCe,EAAS7B,OAAAyvG,EAAAhuG,WAAUyD,GAKnBwqG,GACFC,WAAc,SACdC,aAAgB,WAChBC,YAAe,WAoBEC,cAcjB,QAAAA,GACQrpC,EACA7xC,EACA80C,EACAqmC,EACAC,EACArkC,iGAAW1sE,KAAA6wG,EAAA,IAAA96D,qKAAA/1C,MAAA6wG,EAAA76D,WAAAj1C,OAAAk1C,eAAA46D,IAAArwG,KAAAR,MAAA,OAIf+1C,GAAK7N,iBAAmB6N,EAAK5N,YAC7B4N,EAAK3N,oBAAsB2N,EAAK1N,IAAM0N,EAAK7f,eAM3C6f,EAAKi7D,cACLj7D,EAAKyxB,WAAaA,EAClBzxB,EAAK61B,YAAc,EACnB71B,EAAK/3B,KAAO+yF,EACZh7D,EAAK00B,MAAQA,EACb10B,EAAK22B,UAAYA,EACjB32B,EAAK/pC,SAAW,GAAI2nB,KASpBoiB,EAAKk7D,YASLl7D,EAAKm7D,uBAAyBJ,EAE9B/6D,EAAKo7D,WAAWx7E,GArCDogB,QApBF86D,6TAAmBh9E,EAAAvrB,GAoBjBytC,uCAgDP/3B,EAAMjC,GACd,GAAK00F,EAAkB/uG,eAAesc,IAWtC,GANIjC,EACA/b,KAAKgM,SAASwpB,IAAIxX,EAAMjC,GAExB/b,KAAKgM,SAASmsB,OAAOna,GAGrBhe,KAAK21B,OAAQ,IAAAiB,MAAAC,KAAAC,QAAA,KAEb,OAAAC,GAAAC,EAAoBh3B,KAAK21B,OAAOs8C,iBAAhC/6C,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAkDG,EAAA3rB,MACxCqlG,EAAkBzyF,IAASjC,EAHxB,MAAAyK,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,UAVbl0B,GAAO0Z,MAAP,wBAAqC0B,iDAuBzC,GAAKhe,KAAK21B,OAAV,CADkB,GAAA+B,MAAAC,KAAAC,QAAA,KAQlB,OAAAC,GAAAC,EAAmB93B,KAAKgM,SAAS+rB,OAAjCb,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAyC,IAA9B1Z,GAA8B6Z,EAAAzsB,MAAA0tB,KAAAC,KAAAC,QAAA,KAErC,OAAAC,GAAAC,EAAyBl5B,KAAK21B,OAAOs8C,iBAArC/6C,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,KAAuDG,EAAA7tB,MACxCqlG,EAAkBzyF,WAHI,MAAAwI,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,MARvB,MAAAxS,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAcd53B,KAAKkxG,wBACLb,EAA8BrwG,KAAK21B,mBAbnC/yB,GAAOwF,KACApI,KADP,yDAAAyQ,IAAA,aAAArF,MAAA,SAwBGuqB,GACP,GAAI31B,KAAK21B,SAAWA,IAIpB31B,KAAK21B,OAASA,EAMV31B,KAAK21B,QAAQ,IAAAyD,MAAAC,KAAAC,QAAA,KACb,OAAAC,GAAAC,EAAmBx5B,KAAKgM,SAAS+rB,OAAjCb,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,KAAyC,IAA9Bpb,GAA8Bub,EAAAnuB,KACrCpL,MAAKoxG,YAAYpzF,EAAMhe,KAAKgM,SAAS7K,IAAI6c,KAFhC,MAAAwI,GAAA6S,KAAAC,EAAA9S,EAAA,aAAA4S,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,WAAA4B,EAAA,KAAAC,IAITt5B,KAAKkxG,wBACLb,EACIrwG,KAAK21B,OAAQ31B,KAAKkxG,2DAS9B,MAAOlxG,MAAKge,4CAOZ,MAAOhe,MAAKgrE,YAAcsY,EAAAh7E,KAAAmI,IAAA,qBAAArF,MAAA,WAU1B,MAAOpL,MAAKyqE,OAASzqE,KAAKyqE,MAAMnwC,6CAOhC,MAAOt6B,MAAKgrE,YAAcsY,EAAAlzE,KAAAK,IAAA,UAAArF,MAAA,WAS1B,KAAM,IAAIM,OAAM,kCAAA+E,IAAA,oBAAArF,MAAA,WAOhB,MAAOpL,MAAK21B,6CAQZ,MAAO31B,MAAK21B,OAAS31B,KAAK21B,OAAOlzB,GAAK,QAAAgO,IAAA,WAAArF,MAAA,WAQtC,MAAOpL,MAAKyqE,2CAQZ,MAAOzqE,MAAKyqE,MAAQzqE,KAAKyqE,MAAMhoE,GAAK,QAAAgO,IAAA,gBAAArF,MAAA,WASpC,MAAIpL,MAAK8rE,eACE,MAGJ9rE,KAAK0sE,UAAY1sE,KAAK0sE,UAAY,aAAAj8D,IAAA,0BAAArF,MAAA,SASrBimG,GAChBrxG,KAAKwnE,YAAc6pC,GACnBrxG,KAAKwnE,WAAW8pC,eAAetxG,KAAMqxG,kCAqBtCA,GACH,GAAI3wG,GAAI2wG,CASR,OAPIrxG,MAAK21B,SACLj1B,EAAI6wG,EAAAjpG,EAAS0lE,kBAAkBqjC,EAAWrxG,KAAK21B,SAEnD31B,KAAKgxG,WAAWnuG,KAAKnC,GACrBV,KAAKwxG,wBAAwB9wG,GAC7BV,KAAKyxG,mBAAmB/wG,GAEjBA,iCAWJ2wG,GACH,IAAK,GAAI53E,GAAKz5B,KAAKgxG,WAAY3wG,EAAIo5B,EAAGz2B,OAAS,EAAG3C,GAAK,IAAKA,EAAG,CAC3D,GAAMK,GAAI+4B,EAAGp5B,EAERgxG,IACDE,EAAAjpG,EAAS0lE,kBAAkBttE,EAAG,MAE7B2wG,GAAa3wG,IAAM2wG,GACpB53E,EAAGjvB,OAAOnK,EAAG,GAIjBgxG,GACAE,EAAAjpG,EAAS0lE,kBAAkBqjC,EAAW,SAAA5gG,IAAA,qBAAArF,MAAA,SAc3BimG,sCAcf,MAJArxG,MAAKk4B,qBAELl4B,KAAKixG,YAEEj5D,QAAQ4E,qFAgBf,MAAI58C,MAAK21B,OACE47E,EAAAjpG,EAAS2lE,YAAYjuE,KAAK21B,QAG9B,QAAAllB,IAAA,WAAArF,MAAA,WAUP,gBAAWpL,KAAK21B,OAAO4rE,QACZvhG,KAAK21B,OAAO4rE,6CAcb31B,EAAYp0C,GAClBx3B,KAAK4rE,aAAeA,IACpB5rE,KAAK4rE,WAAaA,EAClB5rE,KAAK22B,KACD6sD,EAAA/iD,0BACAmrC,EACAp0C,sCASR,GAAMk3C,GAAW1uE,KAAK0xG,cAChBC,EAAU3xG,KAAK4xG,YAErB,OAAOljC,IAAYijC,EAAajjC,EAAzB,IAAqCijC,EAAY,QAAAlhG,IAAA,iBAAArF,MAAA,SAW7CkqE,GAAqB,GAAA1M,GAAA5oE,IAChC,OAAKuxG,GAAAjpG,EAAS+/D,wBAAwB,UAOlCroE,KAAK6xG,eACE75D,QAAQ4E,UAIf5E,QAAQuU,IACJvsD,KAAKgxG,WAAWjnG,IACZ,SAAAib,GAAA,MACIA,GAAQkwD,UAAUI,GACblf,MAAM,SAAA95C,GAOH,KANA1Z,GAAOwF,KACH,+GAGA4c,EACA1I,GACEA,OAGrByzC,KAAK,WACF6Y,EAAKjyC,KACD6sD,EAAA1vC,2BACAwhC,KA5BLt9B,QAAQ0K,OACX,GAAIh3C,OAAM,oDAAA7J,OAAAyG,EAAAoV,IAAAld,KAAAqB,EAAA,uCAAA5B,EAAA4B,GCtZ1BlC,EAAOD,SARHoyG,YAAa,cAKbziC,KAAM,kBAAApvE,EAAA4B,GClBV,GAAAkwG,GAAApyG,EAAAD,SACAi1B,IACA/zB,KAAA,UACAoxG,IAAA,YAEAlxG,IAEAF,KAAA,SACAoxG,IAAA,wCACA5jD,OAAA,qEACAzrD,OAAA,wBAGAf,IAAOhB,KAAA,SACPP,IAAOO,KAAA,gBACP8zB,IAAO9zB,KAAA,QACPX,IAAOW,KAAA,UACPe,IAAOf,KAAA,UACPqxG,IAAOrxG,KAAA,cACP2H,IAAO3H,KAAA,YAEPiB,IACAjB,KAAA,SACAoxG,IAAA,eACA5jD,OAAA,gBACAzrD,OAAA,UAEAjC,IACAE,KAAA,aACAoxG,IAAA,mBACA5jD,OAAA,gBACAzrD,OAAA,eAEAyN,IACAvN,KAAA,YACAmvG,IAAA,4BACA5jD,OAAA,gBACAzrD,OAAA,UAEAlC,IAGAuxG,IAAA,mCACA5jD,OAAA,qCACAzrD,OAAA,gBAEA2F,IAEAzF,KAAA,MACAmvG,IAAA,0DACA5jD,OAAA,qCACAzrD,OAAA,SAAA7B,GACA,MAAAA,GAAAoxG,SACA,qBACApxG,EAAAqxG,KACA,kBACA,kBAKAtvG,KAAA,OACAmvG,IAAA,wBACA5jD,OAAA,oBACAzrD,OAAA,eAGA/B,KAAA,UACAoxG,IAAA,gBACArvG,OAAA,eAGA/B,KAAA,OACAoxG,IAAA,sCACA5jD,OAAA,oCACAzrD,OAAA,SAAA7B,GACA,aAAAA,EAAAsxG,QACA,qBACA,aAIAvvG,KAAA,eACAmvG,IAAA,kCACA5jD,OAAA,mBACAzrD,OAAA,0BAGAE,KAAA,SACAmvG,IAAA,6CACA5jD,OAAA,4BACAzrD,OAAA,SAAA7B,GACA,aAAAA,EAAA6uG,QACA,mBACA,mBAKA9sG,KAAA,MACAmvG,IAAA,6CACA5jD,OAAA,oCACAzrD,OAAA,SAAA7B,GACA,mBAAAA,EAAAwtC,UAAA,mBAAAxtC,EAAAkJ,OAAA,aAIAnH,KAAA,SACAmvG,IAAA,0CACA5jD,OAAA,uCACAzrD,OAAA,SAAA7B,GACA,aAAAA,EAAAuxG,cACA,qBACA,qBAIAzxG,KAAA,QACAoxG,IAAA,eACArvG,OAAA,aAGA/B,KAAA,MACAoxG,IAAA,gBACArvG,OAAA,WAGA/B,KAAA,OACAoxG,IAAA,aACArvG,OAAA,YAGA/B,KAAA,QACAoxG,IAAA,eACArvG,OAAA,aAGA/B,KAAA,WACAoxG,IAAA,kBACArvG,OAAA,gBAGA/B,KAAA,YACAoxG,IAAA,2CAGApxG,KAAA,UACAoxG,IAAA,gBAGApxG,KAAA,WACAoxG,IAAA,mBACArvG,OAAA,iBAGA/B,KAAA,SACAoxG,IAAA,iBACArvG,OAAA,eAGA/B,KAAA,cACAoxG,IAAA,2BACA5jD,OAAA,eACAzrD,OAAA,sBAOAE,KAAA,aACAmvG,IAAA,+KACA5jD,OAAA,uIACAzrD,OAAA,SAAA7B,GACA,GAAAsQ,GAAA,oCAaA,OAXAA,IAAA,MAAAtQ,EAAAwxG,MAAA,4BAGAlhG,GAAA,MAAAtQ,EAAA4sC,QAAA,mBAEA,MAAA5sC,EAAA2sC,aACAr8B,GAAA,kBAGAA,GAAA,MAAAtQ,EAAA,oCACAsQ,GAAA,MAAAtQ,EAAA,2CAKAF,KAAA,kBACAoxG,IAAA,yBAGApxG,KAAA,mBACAoxG,IAAA,0BACArvG,OAAA,yBAGA/B,KAAA,aACAoxG,IAAA,qBACArvG,OAAA,mBAGAE,KAAA,QACAmvG,IAAA,iCACA5jD,OAAA,0BACAzrD,OAAA,SAAA7B,GACA,GAAAsQ,GAAA,SAOA,OANA,OAAAtQ,EAAAwV,YACAlF,GAAA,MACA,MAAAtQ,EAAAsK,QACAgG,GAAA,QAGAA,KAKAvO,KAAA,aAEAmvG,IAAA,mEACA5jD,OAAA,qBACAzrD,OAAA,qBAGA/B,KAAA,eACAoxG,IAAA,gCACA5jD,OAAA,oBACAzrD,OAAA,yBAGAE,KAAA,SACAmvG,IAAA,oBACA5jD,OAAA,eACAzrD,OAAA,gBAGA/B,KAAA,UACAoxG,IAAA,gBAGApxG,KAAA,YACAoxG,IAAA,kBAGApxG,KAAA,UACAoxG,IAAA,uCACA5jD,OAAA,wCACAzrD,OAAA,SAAA7B,GACA,aAAAA,EAAAyxG,eACA,mBACA,mBAIA3xG,KAAA,cACAoxG,IAAA,0BACArvG,OAAA,qBAGAE,KAAA,OACAmvG,IAAA,sCACA5jD,OAAA,2BACAzrD,OAAA,SAAA7B,GACA,MAAAA,GAAAstC,OAAA,8BAMAvrC,KAAA,aACAmvG,IAAA,GAAAh1C,QAEA,wKAMA5O,OAAA,sCACAzrD,OAAA,SAAA7B,GACA,4BAAAA,EAAA0xG,KAAA,gBAKA5xG,KAAA,YACAoxG,IAAA,GAAAh1C,QAEA,2FAQA5O,OAAA,+BACAzrD,OAAA,SAAA7B,GACA,yBAAAA,EAAA0xG,KAAA,gBAOA5xG,KAAA,eACAoxG,IAAA,kCACA5jD,OAAA,SACAzrD,OAAA,kBAKA/B,KAAA,YACAoxG,IAAA,8BACArvG,OAAA,iBAGAE,KAAA,UACAurD,OAAA,WAMArtD,QAAAg3B,KAAAg6E,GAAA1jG,QAAA,SAAAoC,GACAshG,EAAAthG,GACApC,QAAA,SAAAtF,GACAA,EAAAipG,MACAjpG,EAAAipG,IAAA,QAEAjpG,EAAApG,SACAoG,EAAApG,OAAA,oBAAA1C,EAAA4B,EAAAT,GAAA,YC5UA,IAAAwuF,KAIAA,GAAAC,mBAAA,WACA,MAAA3hF,MAAA+T,SAAApU,SAAA,IAAAkd,OAAA,OAIA6kE,EAAAE,WAAAF,EAAAC,qBAGAD,EAAAG,WAAA,SAAAC,GACA,MAAAA,GAAAC,OAAAzpF,MAAA,MAAAuD,IAAA,SAAAiS,GACA,MAAAA,GAAAi0E,UAIAL,EAAAM,cAAA,SAAAF,GAEA,MADAA,GAAAxpF,MAAA,QACAuD,IAAA,SAAAF,EAAAgC,GACA,OAAAA,EAAA,OAAAhC,KAAAomF,OAAA,UAKAL,EAAAO,YAAA,SAAAH,EAAApkF,GACA,MAAAgkF,GAAAG,WAAAC,GAAA5gD,OAAA,SAAApzB,GACA,WAAAA,EAAAjX,QAAA6G,MAOAgkF,EAAAQ,eAAA,SAAAp0E,GAoBA,OAnBA7P,GAQAihC,GACAE,YANAnhC,EADA,IAAA6P,EAAAjX,QAAA,gBACAiX,EAAAhX,UAAA,IAAAwB,MAAA,KAEAwV,EAAAhX,UAAA,IAAAwB,MAAA,MAIA,GACA+mC,UAAA1pC,SAAAsI,EAAA,OACAoT,SAAApT,EAAA,GAAA4O,cACA+M,SAAAjkB,SAAAsI,EAAA,OACAqhC,GAAArhC,EAAA,GACAmgC,KAAAzoC,SAAAsI,EAAA,OAEA6R,KAAA7R,EAAA,IAGA9L,EAAA,EAAiBA,EAAA8L,EAAAnJ,OAAkB3C,GAAA,EACnC,OAAA8L,EAAA9L,IACA,YACA+sC,EAAAijD,eAAAlkF,EAAA9L,EAAA,EACA,MACA,aACA+sC,EAAAkjD,YAAAzsF,SAAAsI,EAAA9L,EAAA,MACA,MACA,eACA+sC,EAAAmjD,QAAApkF,EAAA9L,EAAA,EACA,MACA,aACA+sC,EAAAzB,MAAAx/B,EAAA9L,EAAA,GACA+sC,EAAAmlD,iBAAApmF,EAAA9L,EAAA,EACA,MACA,SACA+sC,EAAAjhC,EAAA9L,IAAA8L,EAAA9L,EAAA,GAIA,MAAA+sC,IAIAwiD,EAAAY,eAAA,SAAApjD,GACA,GAAAqD,KACAA,GAAA5tC,KAAAuqC,EAAAE,YACAmD,EAAA5tC,KAAAuqC,EAAAG,WACAkD,EAAA5tC,KAAAuqC,EAAA7tB,SAAAquE,eACAn9C,EAAA5tC,KAAAuqC,EAAAtlB,UACA2oB,EAAA5tC,KAAAuqC,EAAAI,IACAiD,EAAA5tC,KAAAuqC,EAAAd,KAEA,IAAAtuB,GAAAovB,EAAApvB,IAkBA,OAjBAyyB,GAAA5tC,KAAA,OACA4tC,EAAA5tC,KAAAmb,GACA,SAAAA,GAAAovB,EAAAijD,gBACAjjD,EAAAkjD,cACA7/C,EAAA5tC,KAAA,SACA4tC,EAAA5tC,KAAAuqC,EAAAijD,gBACA5/C,EAAA5tC,KAAA,SACA4tC,EAAA5tC,KAAAuqC,EAAAkjD,cAEAljD,EAAAmjD,SAAA,QAAAnjD,EAAA7tB,SAAAxE,gBACA01B,EAAA5tC,KAAA,WACA4tC,EAAA5tC,KAAAuqC,EAAAmjD,UAEAnjD,EAAAzB,QACA8E,EAAA5tC,KAAA,SACA4tC,EAAA5tC,KAAAuqC,EAAAzB,QAEA,aAAA8E,EAAAhmC,KAAA,MAKAmlF,EAAA6iB,gBAAA,SAAAz2F,GACA,MAAAA,GAAA+O,OAAA,IAAAvkB,MAAA,MAKAopF,EAAAa,YAAA,SAAAz0E,GACA,GAAA7P,GAAA6P,EAAA+O,OAAA,GAAAvkB,MAAA,KACAq9C,GACA9S,YAAAltC,SAAAsI,EAAAkgC,QAAA,IASA,OANAlgC,KAAA,GAAA3F,MAAA,KAEAq9C,EAAAjjD,KAAAuL,EAAA,GACA03C,EAAA6sC,UAAA7sF,SAAAsI,EAAA,OAEA03C,EAAA8sC,YAAA,IAAAxkF,EAAAnJ,OAAAa,SAAAsI,EAAA,SACA03C,GAKA+rC,EAAAgB,YAAA,SAAA3/C,GACA,GAAA9C,GAAA8C,EAAAF,WAIA,iBAHAE,EAAA4/C,uBACA1iD,EAAA8C,EAAA4/C,sBAEA,YAAA1iD,EAAA,IAAA8C,EAAArwC,KAAA,IAAAqwC,EAAAy/C,WACA,IAAAz/C,EAAA0/C,YAAA,IAAA1/C,EAAA0/C,YAAA,YAMAf,EAAAvhD,YAAA,SAAAryB,GACA,GAAA7P,GAAA6P,EAAA+O,OAAA,GAAAvkB,MAAA,IACA,QACA/D,GAAAoB,SAAAsI,EAAA,OACAmiC,UAAAniC,EAAA,GAAApH,QAAA,OAAAoH,EAAA,GAAA3F,MAAA,mBACA+F,IAAAJ,EAAA,KAMAyjF,EAAAkB,YAAA,SAAAC,GACA,mBAAAA,EAAAtuF,IAAAsuF,EAAAC,cACAD,EAAAziD,WAAA,aAAAyiD,EAAAziD,UACA,IAAAyiD,EAAAziD,UACA,IACA,IAAAyiD,EAAAxkF,IAAA,QAMAqjF,EAAA1iD,UAAA,SAAAlxB,GAIA,OAFAi1E,GADAptC,KAEA13C,EAAA6P,EAAA+O,OAAA/O,EAAAjX,QAAA,QAAAyB,MAAA,KACAoD,EAAA,EAAiBA,EAAAuC,EAAAnJ,OAAkB4G,IAEnCi6C,GADAotC,EAAA9kF,EAAAvC,GAAAqmF,OAAAzpF,MAAA,MACA,GAAAypF,QAAAgB,EAAA,EAEA,OAAAptC,IAIA+rC,EAAAsB,UAAA,SAAAjgD,GACA,GAAAj1B,GAAA,GACAmyB,EAAA8C,EAAAF,WAIA,aAHAE,EAAA4/C,uBACA1iD,EAAA8C,EAAA4/C,sBAEA5/C,EAAAkgD,YAAApwF,OAAAg3B,KAAAkZ,EAAAkgD,YAAAnuF,OAAA,CACA,GAAAorC,KACArtC,QAAAg3B,KAAAkZ,EAAAkgD,YAAA9iF,QAAA,SAAA+iF,GACAhjD,EAAAvrC,KAAAuuF,EAAA,IAAAngD,EAAAkgD,WAAAC,MAEAp1E,GAAA,UAAAmyB,EAAA,IAAAC,EAAA3jC,KAAA,KAAiD,OAEjD,MAAAuR,IAKA4zE,EAAAyB,YAAA,SAAAr1E,GACA,GAAA7P,GAAA6P,EAAA+O,OAAA/O,EAAAjX,QAAA,QAAAyB,MAAA,IACA,QACAwX,KAAA7R,EAAAkgC,QACAilD,UAAAnlF,EAAA1B,KAAA,OAIAmlF,EAAA2B,YAAA,SAAAtgD,GACA,GAAAhD,GAAA,GACAE,EAAA8C,EAAAF,WAYA,iBAXAE,EAAA4/C,uBACA1iD,EAAA8C,EAAA4/C,sBAEA5/C,EAAAugD,cAAAvgD,EAAAugD,aAAAxuF,QAEAiuC,EAAAugD,aAAAnjF,QAAA,SAAAojF,GACAxjD,GAAA,aAAAE,EAAA,IAAAsjD,EAAAzzE,MACAyzE,EAAAH,WAAAG,EAAAH,UAAAtuF,OAAA,IAAAyuF,EAAAH,UAAA,IACA,SAGArjD,GAKA2hD,EAAA8B,eAAA,SAAA11E,GACA,GAAA21E,GAAA31E,EAAAjX,QAAA,KACAoH,GACAquB,KAAA32B,SAAAmY,EAAA+O,OAAA,EAAA4mE,EAAA,QAEAC,EAAA51E,EAAAjX,QAAA,IAAA4sF,EAOA,OANAC,IAAA,GACAzlF,EAAAmK,UAAA0F,EAAA+O,OAAA4mE,EAAA,EAAAC,EAAAD,EAAA,GACAxlF,EAAAf,MAAA4Q,EAAA+O,OAAA6mE,EAAA,IAEAzlF,EAAAmK,UAAA0F,EAAA+O,OAAA4mE,EAAA,GAEAxlF,GAKAyjF,EAAA8iB,OAAA,SAAA5gB,GACA,GAAAsC,GAAAxE,EAAAO,YAAA2B,EAAA,YACA,IAAAsC,EACA,MAAAA,GAAArpE,OAAA,IAIA6kE,EAAA5iD,iBAAA,SAAAhxB,GACA,GAAA7P,GAAA6P,EAAA+O,OAAA,IAAAvkB,MAAA,IACA,QACA0rF,UAAA/lF,EAAA,GAAA4O,cACA3P,MAAAe,EAAA,KAOAyjF,EAAAiC,kBAAA,SAAAC,EAAArjD,GAKA,OACAujD,KAAA,OACAC,aANArC,EAAAO,YAAA2B,EAAArjD,EACA,kBAKA1kC,IAAA6lF,EAAA5iD,oBAKA4iD,EAAAuC,oBAAA,SAAA/jD,EAAAgkD,GACA,GAAA3hD,GAAA,WAAA2hD,EAAA,MAIA,OAHAhkD,GAAA6jD,aAAA5jF,QAAA,SAAAgkF,GACA5hD,GAAA,iBAAA4hD,EAAAH,UAAA,IAAAG,EAAAjnF,MAAA,SAEAqlC,GAKAm/C,EAAA0C,iBAAA,SAAAR,EAAArjD,GACA,GAAAR,GAAA2hD,EAAAG,WAAA+B,EAWA,QAPAS,kBAFAtkD,IAAA1jC,OAAAqlF,EAAAG,WAAAthD,KAEAW,OAAA,SAAApzB,GACA,WAAAA,EAAAjX,QAAA,kBACK,GAAAgmB,OAAA,IACL4hE,SAAA1+C,EAAAmB,OAAA,SAAApzB,GACA,WAAAA,EAAAjX,QAAA,gBACK,GAAAgmB,OAAA,MAML6kE,EAAA4C,mBAAA,SAAApkD,GACA,qBAAAA,EAAAmkD,iBAAA,iBACAnkD,EAAAu+C,SAAA,QAIAiD,EAAA6C,mBAAA,SAAAX,GASA,OARAY,IACAC,UACAC,oBACAC,iBACAC,SAGArmD,EADAmjD,EAAAG,WAAA+B,GACA,GAAAtrF,MAAA,KACAnG,EAAA,EAAiBA,EAAAosC,EAAAzpC,OAAkB3C,IAAA,CACnC,GAAA8tC,GAAA1B,EAAApsC,GACA0yF,EAAAnD,EAAAO,YACA2B,EAAA,YAAA3jD,EAAA,OACA,IAAA4kD,EAAA,CACA,GAAA9hD,GAAA2+C,EAAAa,YAAAsC,GACAC,EAAApD,EAAAO,YACA2B,EAAA,UAAA3jD,EAAA,IAQA,QANA8C,EAAAkgD,WAAA6B,EAAAhwF,OAAA4sF,EAAA1iD,UAAA8lD,EAAA,OACA/hD,EAAAugD,aAAA5B,EAAAO,YACA2B,EAAA,aAAA3jD,EAAA,KACApkC,IAAA6lF,EAAAyB,aACAqB,EAAAC,OAAA9vF,KAAAouC,GAEAA,EAAArwC,KAAAgtF,eACA,UACA,aACA8E,EAAAG,cAAAhwF,KAAAouC,EAAArwC,KAAAgtF,iBAWA,MAJAgC,GAAAO,YAAA2B,EAAA,aAAAzjF,QAAA,SAAA2N,GACA02E,EAAAE,iBAAA/vF,KAAA+sF,EAAAvhD,YAAAryB,MAGA02E,GAKA9C,EAAAqD,oBAAA,SAAAlmB,EAAAmmB,GACA,GAAAziD,GAAA,EAGAA,IAAA,KAAAs8B,EAAA,IACAt8B,GAAAyiD,EAAAP,OAAA3vF,OAAA,UACAytC,GAAA,sBACAA,GAAAyiD,EAAAP,OAAA5oF,IAAA,SAAAknC,GACA,gBAAAA,EAAA4/C,qBACA5/C,EAAA4/C,qBAEA5/C,EAAAF,cACGtmC,KAAA,YAEHgmC,GAAA,uBACAA,GAAA,8BAGAyiD,EAAAP,OAAAtkF,QAAA,SAAA4iC,GACAR,GAAAm/C,EAAAgB,YAAA3/C,GACAR,GAAAm/C,EAAAsB,UAAAjgD,GACAR,GAAAm/C,EAAA2B,YAAAtgD,IAEA,IAAA0hE,GAAA,CAeA,OAdAzf,GAAAP,OAAAtkF,QAAA,SAAA4iC,GACAA,EAAA0hE,aACAA,EAAA1hE,EAAA0hE,YAGAA,EAAA,IACAliE,GAAA,cAAAkiE,EAAA,QAEAliE,GAAA,iBAEAyiD,EAAAN,iBAAAvkF,QAAA,SAAAukG,GACAniE,GAAAm/C,EAAAkB,YAAA8hB,KAGAniE,GAKAm/C,EAAAuD,2BAAA,SAAArB,GACA,GAcAtW,GAdA4X,KACAV,EAAA9C,EAAA6C,mBAAAX,GACAuB,GAAA,IAAAX,EAAAG,cAAA9tF,QAAA,OACAuuF,GAAA,IAAAZ,EAAAG,cAAA9tF,QAAA,UAGAmqC,EAAA0gD,EAAAO,YAAA2B,EAAA,WACA/nF,IAAA,SAAAiS,GACA,MAAA4zE,GAAA8B,eAAA11E,KAEAozB,OAAA,SAAAjjC,GACA,gBAAAA,EAAAmK,YAEAk5B,EAAAN,EAAAlsC,OAAA,GAAAksC,EAAA,GAAA1U,KAGA+4D,EAAA3D,EAAAO,YAAA2B,EAAA,oBACA/nF,IAAA,SAAAiS,GACA,GAAA7P,GAAA6P,EAAAxV,MAAA,IAEA,OADA2F,GAAAkgC,QACAlgC,EAAApC,IAAA,SAAAF,GACA,MAAAhG,UAAAgG,EAAA,OAGA0pF,GAAAvwF,OAAA,GAAAuwF,EAAA,GAAAvwF,OAAA,GAAAuwF,EAAA,QAAA/jD,IACAgsC,EAAA+X,EAAA,OAGAb,EAAAC,OAAAtkF,QAAA,SAAA4iC,GACA,WAAAA,EAAArwC,KAAAgtF,eAAA38C,EAAAkgD,WAAAqC,IAAA,CACA,GAAAC,IACAj5D,KAAAgV,EACAkkD,iBAAA7vF,SAAAotC,EAAAkgD,WAAAqC,IAAA,IACAG,KACAn5D,KAAAghD,GAGA4X,GAAAvwF,KAAA4wF,GACAJ,KACAI,EAAAlwE,KAAAgK,MAAAhK,KAAAkK,UAAAgmE,KACAG,KACAp5D,KAAAghD,EACA51D,UAAA0tE,EAAA,oBAEAF,EAAAvwF,KAAA4wF,OAIA,IAAAL,EAAApwF,QAAAwsC,GACA4jD,EAAAvwF,MACA23B,KAAAgV,GAKA,IAAAkiC,GAAAke,EAAAO,YAAA2B,EAAA,KAeA,OAdApgB,GAAA1uE,SAEA0uE,EADA,IAAAA,EAAA,GAAA3sE,QAAA,WACAlB,SAAA6tE,EAAA,GAAA3mD,OAAA,OACK,IAAA2mD,EAAA,GAAA3sE,QAAA,SAEL,IAAAlB,SAAA6tE,EAAA,GAAA3mD,OAAA,WACA,YAIAqoE,EAAA/kF,QAAA,SAAA+/B,GACAA,EAAAylD,WAAAniB,KAGA0hB,GAIAxD,EAAAijB,oBAAA,SAAA/gB,GACA,GAAAghB,MAKApW,EAAA9M,EAAAO,YAAA2B,EAAA,WACA/nF,IAAA,SAAAiS,GACA,MAAA4zE,GAAA8B,eAAA11E,KAEAozB,OAAA,SAAArmC,GACA,gBAAAA,EAAAuN,YACO,EACPomF,KACAoW,EAAAnX,MAAAe,EAAAtxF,MACA0nG,EAAAt4E,KAAAkiE,EAAAliE,KAKA,IAAAu4E,GAAAnjB,EAAAO,YAAA2B,EAAA,eACAghB,GAAAE,YAAAD,EAAA/vG,OAAA,EACA8vG,EAAAG,SAAA,IAAAF,EAAA/vG,MAIA,IAAAkwG,GAAAtjB,EAAAO,YAAA2B,EAAA,aAGA,OAFAghB,GAAAI,MAAAlwG,OAAA,EAEA8vG,GAKAljB,EAAAujB,UAAA,SAAArhB,GACA,GAAA3lF,GACAinG,EAAAxjB,EAAAO,YAAA2B,EAAA,UACA,QAAAshB,EAAApwG,OAEA,OAAY2yB,QADZxpB,EAAAinG,EAAA,GAAAroF,OAAA,GAAAvkB,MAAA,MACY,GAAAikE,MAAAt+D,EAAA,GAEZ,IAAAknG,GAAAzjB,EAAAO,YAAA2B,EAAA,WACA/nF,IAAA,SAAAiS,GACA,MAAA4zE,GAAA8B,eAAA11E,KAEAozB,OAAA,SAAAjjC,GACA,eAAAA,EAAAmK,WAEA,OAAA+8F,GAAArwG,OAAA,GAEY2yB,QADZxpB,EAAAknG,EAAA,GAAAjoG,MAAA5E,MAAA,MACY,GAAAikE,MAAAt+D,EAAA,YAQZyjF,EAAA0jB,kBAAA,WACA,MAAAplG,MAAA+T,SAAApU,WAAAkd,OAAA,OAOA6kE,EAAAkE,wBAAA,SAAAyf,EAAAC,GACA,GACAvvG,YAAAuvG,IAAA,CAOA,sCANAD,GAGA3jB,EAAA0jB,qBAIA,IAAArvG,EAAA,yCAKA2rF,EAAAmE,kBAAA,SAAAC,EAAAd,EAAAl1E,EAAA2X,GACA,GAAA8a,GAAAm/C,EAAAqD,oBAAAe,EAAAjnB,KAAAmmB,EAyBA,IAtBAziD,GAAAm/C,EAAA4C,mBACAwB,EAAAC,YAAAC,sBAGAzjD,GAAAm/C,EAAAuC,oBACA6B,EAAAG,cAAAD,qBACA,UAAAl2E,EAAA,oBAEAyyB,GAAA,SAAAujD,EAAAI,IAAA,OAEAJ,EAAA1lD,UACAmC,GAAA,KAAAujD,EAAA1lD,UAAA,OACG0lD,EAAAK,WAAAL,EAAAM,YACH7jD,GAAA,iBACGujD,EAAAK,UACH5jD,GAAA,iBACGujD,EAAAM,YACH7jD,GAAA,iBAEAA,GAAA,iBAGAujD,EAAAK,UAAA,CAEA,GAAApZ,GAAA,QAAAtlD,EAAAlzB,GAAA,IACAuxF,EAAAK,UAAA5pB,MAAAhoE,GAAA,MACAguC,IAAA,KAAAwqC,EAGAxqC,GAAA,UAAAujD,EAAAO,uBAAA,GAAA/5D,KACA,IAAAygD,EACA+Y,EAAAO,uBAAA,GAAAZ,MACAljD,GAAA,UAAAujD,EAAAO,uBAAA,GAAAZ,IAAAn5D,KACA,IAAAygD,EACAxqC,GAAA,oBACAujD,EAAAO,uBAAA,GAAA/5D,KAAA,IACAw5D,EAAAO,uBAAA,GAAAZ,IAAAn5D,KACA,QAUA,MANAiW,IAAA,UAAAujD,EAAAO,uBAAA,GAAA/5D,KACA,UAAAo1D,EAAAE,WAAA,OACAkE,EAAAK,WAAAL,EAAAO,uBAAA,GAAAZ,MACAljD,GAAA,UAAAujD,EAAAO,uBAAA,GAAAZ,IAAAn5D,KACA,UAAAo1D,EAAAE,WAAA,QAEAr/C,GAIAm/C,EAAA4E,aAAA,SAAA1C,EAAArjD,GAGA,OADAR,GAAA2hD,EAAAG,WAAA+B,GACAzxF,EAAA,EAAiBA,EAAA4tC,EAAAjrC,OAAkB3C,IACnC,OAAA4tC,EAAA5tC,IACA,iBACA,iBACA,iBACA,iBACA,MAAA4tC,GAAA5tC,GAAA0qB,OAAA,GAKA,MAAA0jB,GACAmhD,EAAA4E,aAAA/lD,GAEA,YAGAmhD,EAAA6jB,QAAA,SAAA3hB,GAGA,MAFAlC,GAAAG,WAAA+B,GACA,GAAAtrF,MAAA,KACA,GAAAukB,OAAA,IAGA6kE,EAAAjgC,WAAA,SAAAmiC,GACA,YAAAA,EAAAtrF,MAAA,WAGAopF,EAAAzjD,WAAA,SAAA2lD,GACA,GACArlD,GADAmjD,EAAAG,WAAA+B,GACA,GAAAtrF,MAAA,IACA,QACAumE,KAAAtgC,EAAA,GAAA1hB,OAAA,GACAuhB,KAAAzoC,SAAA4oC,EAAA,OACAltB,SAAAktB,EAAA,GACAF,IAAAE,EAAAniC,MAAA,GAAAG,KAAA,OAMA9K,EAAAD,QAAAkwF,mBCjmBA,QAAS8jB,GAAcC,GACnB,YAAIA,EAAcC,SACd,KAAM,IAAIloG,OAAM,wEAGpBioG,GAAcC,SAAShiF,QACvB+hF,EAAcE,UAAY,GAAI50F,MAQlC,QAAS60F,GAAaH,GAClB,YAAIA,EAAcC,SACd,KAAM,IAAIloG,OAAM,uEAGpBioG,GAAcC,SAASv7E,OAO3B,QAAS07E,KACL,GAAIC,cAAcC,gBAAgBC,GAC9B,MAAOA,EACJ,IAAIF,cAAcC,gBAAgBE,GACrC,MAAOA,EAEX,MAAM,IAAIzoG,OACN,6DASR,QAAS0oG,GAAcC,GAGnBr0G,KAAKs0G,aAGLt0G,KAAKu0G,SAAWR,IAGhB/zG,KAAKw0G,eAGLx0G,KAAKq0G,gBAAkBA,EA3F3B,GAAMI,GAAkBv0G,EAAQ,KAK1Bg0G,EAAa,aACbC,EAAY,WA2FlBC,GAAcL,yBAA2BA,EAOzCK,EAAc3yG,UAAUo3E,SAAW,SAASpO,GACxC,GAAIA,EAAMqB,eAAgB,CAEtB,GAAM6nC,GAAgB3zG,KAAK00G,yBAAyBjqC,EAIpDzqE,MAAKs0G,UAAUzxG,KAAK8wG,GAGpB3zG,KAAK20G,cAID30G,KAAKw0G,aACLd,EAAcC,KAU1BS,EAAc3yG,UAAUizG,yBAA2B,SAASjqC,GACxD,GAAMkpC,GAAgB,GArHJ,UAASlpC,GAE3BzqE,KAAKyqE,MAAQA,EAGbzqE,KAAK4zG,SAAW,KAIhB5zG,KAAK0Q,KAAO,KAIZ1Q,KAAKY,KAAO,KAGZZ,KAAK6zG,UAAY,MAqGuBppC,GAGlCmqC,EAAiBjB,EAAclpC,MAAMoqC,oBACrCl/E,EA2KV,WAEI,GAA2B,mBAAhBijD,aACP,MAAO,IAAIA,YACR,IAAiC,mBAAtBzC,mBACd,MAAO,IAAIA,kBAEf,MAAM,IAAIzqE,OAAM,uCA/JhB,OAjBAkpG,GAAe7iC,iBAAiB1jE,QAAQ,SAAAxM,GAAA,MAAK8zB,GAAOkjD,SAASh3E,KAG7D8xG,EAAcC,SAAW,GAAII,eAAcr+E,GACrCm/E,SAAU90G,KAAKu0G,WAIrBZ,EAAcjjG,QAGdijG,EAAcC,SAASmB,gBAAkB,SAASC,GAC1CA,EAAUtkG,KAAKgmB,KAAO,GACtBi9E,EAAcjjG,KAAK7N,KAAKmyG,EAAUtkG,OAInCijG,GAaXS,EAAc3yG,UAAUwzG,YAAc,SAASxqC,GAC3C,IAAIA,EAAMonC,eAAV,CAIA,GAAMxiE,GAAQrvC,KAAKs0G,UACfj0G,QAEJ,KAAKA,EAAI,EAAGA,EAAIgvC,EAAMrsC,OAAQ3C,IAC1B,GAAIgvC,EAAMhvC,GAAGoqE,MAAM8Y,qBAAuB9Y,EAAM8Y,mBAAoB,CAChE,GAAM2xB,GAAmB7lE,EAAMhvC,EAE3BL,MAAKw0G,YACLV,EAAaoB,GAGb7lE,EAAM7kC,OAAOnK,EAAG,GAM5BL,KAAK20G,gBAQTP,EAAc3yG,UAAUkzG,YAAc,WAClC,GAAMntC,GAAaxnE,KAAKq0G,eAExBr0G,MAAKs0G,UAAUjmG,QAAQ,SAAAslG,GACnB,GAAIA,EAAclpC,MAAM5uC,UACpB83E,EAAc/yG,KAAO,sBAClB,CACH,GAAM6B,GAAKkxG,EAAclpC,MAAM8Y,mBAEzB4xB,EADc3tC,EAAWsc,mBAAmBrhF,GACtB2yG,gBAEZ,eAAZD,IACAxB,EAAc/yG,KAAOu0G,OASrCf,EAAc3yG,UAAUmwB,MAAQ,WAC5B,GAAI5xB,KAAKw0G,YACL,KAAM,IAAI9oG,OAAM,qCAKpB1L,MAAKw0G,eAGLx0G,KAAKs0G,UAAUjmG,QAAQ,SAAAslG,GAAA,MAAiBD,GAAcC,KAGtD7tG,QAAQhC,IAAR,2DAEQ9D,KAAKs0G,UAAUtxG,OAFvB,uBAQJoxG,EAAc3yG,UAAU42B,KAAO,WAE3Br4B,KAAKw0G,eAGLx0G,KAAKs0G,UAAUjmG,QAAQ,SAAAslG,GAAA,MAAiBG,GAAaH,KACrD7tG,QAAQhC,IAAI,sBAMhBswG,EAAc3yG,UAAU4zG,SAAW,WAAW,GAAAt/D,GAAA/1C,IAC1CA,MAAKs0G,UAAUjmG,QAAQ,SAAAslG,GACnB,GAAM3jB,GAAO,GAAIslB,MAAK3B,EAAcjjG,MAAQsN,KAAM+3B,EAAKw+D,WACjDp6B,EAAM9F,IAAIE,gBAAgByb,GAC1B1nF,EAAIiL,SAAS4F,cAAc,IAEjC5F,UAAS0C,KAAKiD,YAAY5Q,GAC1BA,EAAEkO,MAAQ,gBACVlO,EAAEitG,KAAOp7B,EACT7xE,EAAE+sG,SAAF,QAAqBt/D,EAAKw+D,SAAS/tG,MAAM,KAAK,GAC9C8B,EAAEktG,QACF3wG,OAAOwvE,IAAI+F,gBAAgBD,MASnCi6B,EAAc3yG,UAAUg0G,oBAAsB,WAAW,GAAA7sC,GAAA5oE,IACrD,IAAIA,KAAKw0G,YACL,KAAM,IAAI9oG,OACN,iEAIR1L,MAAK20G,aAEL,IAAMtlE,KAUN,OARArvC,MAAKs0G,UAAUjmG,QACX,SAAAulG,GAAA,MACIvkE,GAAMxsC,KACF,GAAI4xG,GACA,GAAIa,MAAK1B,EAASljG,MAAQsN,KAAM4qD,EAAK2rC,WACrCX,EAAShzG,KACTgzG,EAASC,cAElBxkE,GAOX+kE,EAAc3yG,UAAUi0G,YAAc,WAClC,MAAO11G,MAAKu0G,UAqBhB50G,EAAOD,QAAU00G,mIChUjBl0G,EAAAS,EAAA0H,EAAA,8CAAAstG,IAYO,IAAM/tE,GAAsB,4BAWtB+tE,EACP,iDAAA11G,EAAA4B,EAAAT,GCtBNzB,EAAOD,QAAUQ,EAAQ,IAAiBoB,mGC4E1C,QAASs0G,GAA8Bh1G,EAAMqd,GACzC,GAAItR,GAAM/L,CAaV,QAX0C,IAAtCqd,EAAQurB,QAAQzkC,QAAQ,WACxB4H,GAAO,WAEiC,IAAxCsR,EAAQurB,QAAQzkC,QAAQ,aACxB4H,GAAO,aAE+B,IAAtCsR,EAAQurB,QAAQzkC,QAAQ,WAExB4H,aAAiBsR,EAAQ0xD,YAGtBhjE,ED1F+BrL,qRCF1Cu0G,EAAA31G,EAAA,IAwCM0C,EAASkzG,EAAAxtG,EAAO9F,UAAUyD,EA0DhCoC,GAAA/G,SAEI2C,QAAS,cAET8xG,gBAAAC,EAAA1tG,EACA2tG,WACIC,4BAA6BC,EAAA7tG,EAC7B8tG,gBAAiBC,EAAA/tG,EAAU+d,OAC3BiwF,eAAgBD,EAAA/tG,EAAUiiG,MAC1BgM,WAAYV,EACZW,oBAAqBC,GAEzBC,QACIlvC,WAAYmvC,EACZ5sF,WAAY6sF,EACZnsC,MAAOosC,EACPxtE,aAAcytE,EACdC,kBAAmBC,GAEvBrqF,QACI66C,WAAYyvC,EACZltF,WAAYmtF,EACZtD,SAAUuD,EAAA7uG,EACVmiE,MAAO2sC,GAEXvpD,YACItkB,gBAAA8tE,EAAA/uG,GAEJgvG,UAAWxB,EAAAxtG,EAAOnG,OAClBknC,aAAckuE,EAAAjvG,EACd0sB,UAAWwiF,EAAAlvG,EAAW0sB,UACtBvT,KA/BW,SA+BNxD,GACDu5F,EAAAlvG,EAAWmZ,KAAKxD,GAIXpZ,OAAOqgG,kBACRrgG,OAAOqgG,yBAGPjnF,EAAQw5F,wBACRz3G,KAAKg1B,UAAUyB,UAGfxY,EAAQy5F,4BACRC,EAAArvG,EAAqBmc,WACjBzkB,KAAK43G,wBAAwBvqG,KAAKrN,MAK1C,IAAM63G,GAAS55F,EAAQ65F,cAEvB,IAAID,GAAU92G,OAAOg3B,KAAK8/E,GAAQ70G,OAAS,EAAG,CAC1C,GAAM+0G,KAEN,KAAK,GAAMp+F,KAAQk+F,GACXA,EAAOn2G,eAAeiY,KACtBo+F,EAAUp+F,GAAQk+F,EAAOl+F,GAIjCo+F,GAAUt1G,GAAK,kBACf+0G,EAAAlvG,EAAW00B,QAAQzZ,KAAKkK,UAAUsqF,IAGtC,GAAI/3G,KAAKiE,QAAS,CACd,GAAM8zG,IACFt1G,GAAI,oBACJ8qC,UAAW,iBACXtpC,QAASjE,KAAKiE,QAGlBuzG,GAAAlvG,EAAW00B,QAAQzZ,KAAKkK,UAAUsqF,IAGtC,MAAOC,GAAA1vG,EAAImZ,KAAKxD,QAOpB6wD,wBAnFW,WAoFP,MAAOkpC,GAAA1vG,EAAIwmE,2BAEf5rE,YAtFW,SAsFCH,GACR+yG,EAAAxtG,EAAOpF,YAAYH,IAUvBD,gBAjGW,SAiGKC,EAAON,GACnBqzG,EAAAxtG,EAAOxF,gBAAgBC,EAAON,IAQlCw1G,sBA1GW,SA0GWC,GAClBpC,EAAAxtG,EAAOjG,mBAAmB61G,IAQ9BC,yBAnHW,SAmHcD,GACrBpC,EAAAxtG,EAAO/F,sBAAsB21G,IA4CjCE,kBAhKW,WAgKuD,GAAAriE,GAAA/1C,KAAhDie,EAAgDlT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MAC1Dw9C,IAkBJ,YAnB8Dx9C,UAAA,IAI1DlG,OAAOmI,WAAW,WACTu7C,GACDgvD,EAAAjvG,EAAkB+vG,UACdvB,EAAAnB,2BACA2C,EAAAhwG,EAAe/B,mBA9NM,KAmOhC1B,OAAOqgG,kBACRrgG,OAAOqgG,oBAEXrgG,OAAOqgG,gBAAgB,2BACjBrgG,OAAOwwC,YAAYxrB,MAElBmuF,EAAA1vG,EAAI+jE,+BAA+BpuD,GACrC8xC,KAAK,SAAAgb,GAWF,GAVAxiB,KAEA1jD,OAAOqgG,gBAAgB,yBACjBrgG,OAAOwwC,YAAYxrB,MAEzB2tF,EAAAlvG,EAAW0sB,UAAUmF,UACjBy7E,EACI3iC,EAAAnyE,EAAyBmd,IAC3B7S,MAAO6S,KAER+5F,EAAA1vG,EAAI2V,QAAQ6W,mBACb,IAAK,GAAIz0B,GAAI,EAAGA,EAAI0qE,EAAO/nE,OAAQ3C,KADF,SACxBA,GACL,GAAMoqE,GAAQM,EAAO1qE,GACfk4G,EAAU9tC,EAAMoqC,mBAElBpqC,GAAMO,YAAcwtC,EAAAlwG,IACpBkvG,EAAAlvG,EAAWotB,gBAAgB6iF,EACvB9tC,EAAMsB,cAAc1+D,KAAKo9D,IAC7BA,EAAMviC,iBACF2uE,EAAAhjE,oBACA,WACI2jE,EAAAlvG,EAAW8vB,eAAemgF,OAVjCl4G,EAiBb,IAAMgyE,GACA2lC,EAAA1vG,EAAI+lE,mCAEV,IAAIgE,EACA,IAAShyE,EAAI,EAAGA,EAAI0qE,EAAO/nE,OAAQ3C,IACjB0qE,EAAO1qE,GAEfo4G,+BACFpmC,EAIZ,OAAOtH,KAEV3U,MAAM,SAAA95C,GAGH,GAFAisC,KAEIjsC,EAAM1b,OAASw2G,EAAAptE,yBACXsuE,EAAAhwG,EAAelB,iBAAkB,CACrC,GAAMsxG,GAAgBz6F,EAAQ0xD,YAAc,MACtCgpC,EArR1B,SAA4BhpC,GACxB,IAAKipC,EAAAtwG,EAAYqnE,GACb,MAAO,KAEX,IAAM6P,GAAQo5B,EAAAtwG,EAAYqnE,GAAY6P,MAClCxK,EAAM,KACN6jC,EAAU,IAWd,OATA93G,QAAOg3B,KAAK6gF,EAAAtwG,GAAa+F,QAAQ,SAAA9F,GAC7B,GAAM6C,GAAQwtG,EAAAtwG,EAAYC,KAErBysE,GAAQA,EAAIwK,MAAQp0E,EAAMo0E,OAASp0E,EAAMo0E,MAAQA,KAClDq5B,EAAUtwG,EACVysE,EAAM5pE,KAIPytG,GAoQkDH,EAEzC,IAAsB,OAAlBC,EAWA,MAVA16F,GAAQ0xD,WAAagpC,EAErB/1G,EAAOyZ,MACH,0CACAs8F,GAEJnB,EAAAlvG,EAAW0sB,UAAUmF,UACd84C,EAAA7xE,EADP,eAEQs3G,GAED3iE,EAAKqiE,kBAAkBn6F,GAItC,GAAIm5F,EAAA1sE,iCACQpuB,EAAM1b,KAAM,CAIpB,GAAMm3G,IACFt1G,GAAI,iCACJwZ,QAASK,EAAML,QAGnBu7F,GAAAlvG,EAAW00B,QAAQzZ,KAAKkK,UAAUsqF,IAClCP,EAAAlvG,EAAW0sB,UAAUmF,UACd84C,EAAAtxE,EADP,yBAEG,IAAIy1G,EAAAvtE,YAA+BvtB,EAAM1b,KAAM,CAElD,GAAMm3G,IACFt1G,GAAI,2BACJ4jB,OAAQ/J,EAAM6f,IAAIqN,QAGtBguE,GAAAlvG,EAAW00B,QAAQzZ,KAAKkK,UAAUsqF,IAClCP,EAAAlvG,EAAW0sB,UAAUmF,UACd84C,EAAA3yE,EADP,IAEQgc,EAAM6f,IAAIqN,QAAQ/+B,KAAK,UAC5B,CAEH+sG,EAAAlvG,EAAW2zB,uBAAuB3f,EAClC,IAAM+hB,GACAu3E,EACE3iC,EAAAxyE,EAAwBwd,EAEhCu5F,GAAAlvG,EAAW0sB,UAAUmF,UACdkE,EADP,IACoB/hB,EAAM1b,MACpBwK,MAAO6S,IAMjB,MAHApZ,QAAOqgG,gBAAgB,yBACjBrgG,OAAOwwC,YAAYxrB,MAElBmuB,QAAQ0K,OAAOpmC,MAWlC6xD,sBAxSW,WA4SP,MAHAvrE,GAAOwF,KAAK,yFAGLpI,KAAKqpC,aAAa8kC,yBAW7B9F,wBAvTW,SAuTa+F,GAIpB,MAHAxrE,GAAOwF,KAAK,2FAGLpI,KAAKqpC,aAAag/B,wBAAwB+F,IAUrD0qC,8BArUW,WAsUP,MAAO94G,MAAKqpC,aAAayvE,iCAQ7BC,uBA9UW,WA+UP,MAAOvB,GAAAlvG,EAAWusB,oBACXmkF,EAAA1wG,EAAoB26F,yBAQ/Bt0B,iBAxVW,SAwVMliE,GACb7J,EAAOwF,KAAK,oFAEZpI,KAAKqpC,aAAaslC,iBAAiBliE,IAWvCmrG,wBAtWW,SAsWa37F,EAASg4D,EAAQglC,EAAQC,EAAO58F,GACpD1Z,EAAO0Z,MAAP,mBACuBL,EADvB,WAEeg4D,EAFf,SAGaglC,EAHb,WAIeC,EACX,eAAgB58F,GACpBk7F,EAAAlvG,EAAW61B,kBAAkB7hB,IASjC68F,aAtXW,WAuXP,MAAOC,GAAA9wG,EAASmsC,WAOpBoF,MACIw/D,SAAAC,EAAAhxG,EACAixG,YAAAC,EAAAlxG,EACA+7F,WAAAoV,EAAAnxG,6CCjcR3I,EAAOD,SAZHg6G,gBAtBa,SAsBGC,EAAYjgF,EAAUkgF,GAGlC,MAAmB,gBAFPD,GAGD,KAHCA,EAMDvvG,QAAQ,SAAUsvB,GACxBtvB,QAAQ,qBAAiBwvG,kCCXvB,SAAS7D,GAAgB8D,EAAO7U,EAAO/mF,GAClDje,KAAK65G,MAAQA,EACb75G,KAAKglG,MAAQA,EACbhlG,KAAKie,QAAUA,EACfje,KAAKyzB,KAAO,GAAIqmF,GAAAxxG,EAAK2V,EAAS+mF,GAE9BhlG,KAAKkoC,iBAAiB6xE,EAAAx1E,kBAClB,SAACy1E,EAAS59F,GACN69F,EAAA3xG,EAAW81B,eACJ60C,EAAAhzE,EADP,IAC6B+5G,GACvBvnC,MAAOr2D,MAGrBpc,KAAKkoC,iBAAiB6xE,EAAA3yC,wBAClB,SAAAhrD,GAIQA,GACA69F,EAAA3xG,EAAW0sB,UAAUmF,UACd84C,EAAAtyE,EADP,IACmCyb,GAEvC69F,EAAA3xG,EAAW00B,QACPzZ,KAAKkK,WAAYhrB,GAAI,0BACjB2Z,WDbkBw9F,+CCsBtC7D,GAAgBt0G,UAAU2gB,QAAU,WAAuB,GAAdnE,GAAclT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,KACvD/K,MAAKyzB,KAAKrR,QAAQnE,EAAQxb,GAAIwb,EAAQ0uE,WAU1CopB,EAAgBt0G,UAAUshB,OAAS,SAAS9E,GACxCje,KAAKyzB,KAAK1Q,OAAO9E,IAMrB83F,EAAgBt0G,UAAUokB,WAAa,WAAkB,GAAAq0F,IAKrDA,EAAAl6G,KAAKyzB,MAAK5N,WAAV5a,MAAAivG,EAAAnvG,YAOJgrG,EAAgBt0G,UAAU04G,SAAW,SAASnV,GAC1ChlG,KAAKglG,MAAQA,GAWjB+Q,EAAgBt0G,UAAU24G,oBAAsB,SAASx5G,EAAMqd,GAC3D,MAAO,IAAIo8F,GAAA/xG,GACP1H,OACAoJ,OAAQiU,EACR8L,WAAY/pB,QASpB+1G,EAAgBt0G,UAAUymC,iBAAmB,SAAS/V,EAAO2D,GACzD91B,KAAKyzB,KAAK0U,YAAYhW,EAAO2D,IAQjCigF,EAAgBt0G,UAAU2mC,oBAAsB,SAASjW,EAAO2D,GAC5D91B,KAAKyzB,KAAKyC,eAAe/D,EAAO2D,IAMpCigF,EAAgBt0G,UAAU64G,mBAAqB,WAC3C,MAAOt6G,MAAKyzB,KAAKyxE,iBAUrB6Q,EAAgBt0G,UAAUmkG,WAAa,SAAS2U,GAAyB,GAAhBC,GAAgBzvG,UAAA/H,OAAA,YAAA+H,UAAA,IAAAA,UAAA,EACrE,OAAO/K,MAAKyzB,KAAKy/D,KAAK0S,WAAW2U,EAASC,IAU9CzE,EAAgBt0G,UAAUg5G,cAAgB,SAASF,GAAyB,GAAhBC,GAAgBzvG,UAAA/H,OAAA,YAAA+H,UAAA,IAAAA,UAAA,EACxE,OAAO/K,MAAKyzB,KAAKy/D,KAAKunB,cAAcF,EAASC,+CC3DlC,QAASE,GAAgBz8F,GACpC,IAAKA,EAAQrd,MAAQqd,EAAQrd,KAAKma,gBAAkBkD,EAAQrd,KAAM,CAC9D,GAAM0wE,GACA,6GAIN,MADA1uE,GAAO0Z,MAAMg1D,GACP,GAAI5lE,OAAM4lE,GAEpBtxE,KAAK4zB,aAAe,GAAI+mF,GAAAryG,EACxBtI,KAAKie,QAAUA,EACfje,KAAK46G,aAAe,GAAIC,GAAAvyG,EAA4BtI,MACpDA,KAAK4jF,gBACL5jF,KAAKyzD,MAAMx1C,GACXje,KAAK86G,mBAAqB,GAAIC,GAAAzyG,EAAmBtI,MAMjDA,KAAKg7G,iBAAmB,KACxBh7G,KAAKi7G,oBAAsB,KAC3Bj7G,KAAKk7G,YAAc,KACnBl7G,KAAKm7G,wBACLn7G,KAAKo7G,eACLp7G,KAAKq7G,mBACLr7G,KAAKs7G,mBACLt7G,KAAKu7G,kBACDtsC,SACAllC,UAEJ/pC,KAAKw7G,kBACDvsC,aACAllC,cAEJ/pC,KAAKy7G,kBAMLz7G,KAAK07G,cAOL17G,KAAK+2G,kBACC,GAAI4E,GAAArzG,EAAkBtI,KAAMA,KAAK4zB,aAAc3V,GAMrDje,KAAK47G,oBACC,GAAIC,GAAAvzG,EAAoBtI,KAAMie,EAAQjU,OAAO8xG,cAAgB,IAKnE97G,KAAK+7G,8BAKL/7G,KAAKg8G,sBAAwB,GAAIC,GAAA3zG,EAAsBtI,MAUvDA,KAAKk8G,qBAAuB,IAE5B,IAAMv4C,GACA9/D,SAASoa,EAAQjU,OAAOo8F,KAAOnoF,EAAQjU,OAAOo8F,IAAI+V,eAAgB,GAOxEn8G,MAAKm8G,eAAiB3sG,MAAMm0D,GAAS,EAAIA,EACzC/gE,EAAOsB,KAAP,mBAA+BlE,KAAKm8G,gBAQpCn8G,KAAKo8G,8BAQLp8G,KAAKomG,OAMLpmG,KAAKq8G,iBAAmB,KAExBr8G,KAAKs8G,kBAAoB,GAAIC,GAAAj0G,EAAWtI,KAAKw8G,MDpDAhC,wUClJjDyB,UAAA/7G,EAAA,MA6CM0C,EAAS7B,OAAA07G,EAAAj6G,WAAUyD,EA6JzBy0G,GAAgBj5G,UAAUypC,YAAcwvE,EAOxCA,EAAgBj5G,UAAUgyD,MAAQ,WAAuB,GAAA1d,GAAA/1C,KAAdie,EAAclT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,KAGjDkT,GAAQ8L,aACR/pB,KAAK+pB,WAAa9L,EAAQ8L,WAC1B/pB,KAAKyzB,KAAOzzB,KAAK+pB,WAAW0J,KAG5BzzB,KAAK46G,aAAa8B,qBAR+B,IAW7C1yG,GAAWhK,KAAKie,QAAhBjU,MAwCR,IAtCAhK,KAAKw8G,KAAOx8G,KAAKyzB,KAAK+0E,WAAWxoG,KAAKie,QAAQrd,KAAMoJ,GAGpDhK,KAAK28G,4BACC38G,KAAK28G,4BAA4BtvG,KAAKrN,MAC5CA,KAAKw8G,KAAKr0E,YACNy0E,EAAA79E,uBAAmC/+B,KAAK28G,6BAE5C38G,KAAK68G,yBAA2B78G,KAAK68G,yBAAyBxvG,KAAKrN,MACnEA,KAAKw8G,KAAKr0E,YACNy0E,EAAA59E,oBAAgCh/B,KAAK68G,0BAEzC78G,KAAK88G,4BACC98G,KAAK88G,4BAA4BzvG,KAAKrN,MAC5CA,KAAKw8G,KAAKr0E,YACNy0E,EAAAt4E,uBAAmCtkC,KAAK88G,6BAE5C98G,KAAKw8G,KAAKO,yBAAyBC,EAAA10G,EAAIulE,yBAElC7tE,KAAK0gF,MACN1gF,KAAK0gF,IAAM,GAAIs8B,GAAA10G,EAAItI,KAAMie,GACzBje,KAAK46G,aAAaqC,qBAGtBj9G,KAAKk2G,4BACC,GAAIgH,GAAA9sG,EACFpQ,KAAK0gF,IACL1gF,MAMI8gF,eAAgB92E,EAAOmzG,8BACvBt8B,kBAAmB72E,EAAOozG,mCAEtCp9G,KAAKk2G,4BAA4Bz0F,QAE5BzhB,KAAKm5B,WAAY,CAOlB,GAAMkkF,GAAiBx4G,OAAOgrB,SAE1BuD,EAAqBpzB,KAAK6iF,UAE1B74E,GAAOszG,0BAA4BtzG,EAAOuzG,cAC1CnqF,EAAqBppB,EAAOuzG,aAGhCv9G,KAAKm5B,WAAa,GAAIqkF,GAAAl1G,EAAWtI,KAAKyzB,MAClCL,qBACAiB,yBACIrqB,EAAOqqB,0BACCgpF,GAAkBA,EAAetV,UACjC/9F,EAAO49F,OAAS59F,EAAO49F,MAAMz0F,OACzCsqG,yBAA0BzzG,EAAOyzG,yBACjCxqF,YAAajpB,EAAOipB,YACpBC,gBAAiBlpB,EAAOkpB,gBACxBwG,SAAU15B,KAAKie,QAAQrd,KACvBuyB,qBAAsBnpB,EAAO0zG,cAC7BpqF,gBAAiBtpB,EAAOspB,gBACxBC,mBAAoBvpB,EAAOupB,qBAInCvzB,KAAK46G,aAAa+C,yBAIlB39G,KAAK46G,aAAagD,2BAEd5zG,EAAO6zG,sBAEP,GAAIC,GAAAx1G,EACAtI,KACA,iBACI+1C,GAAKniB,aAAa+C,KAAKonF,EAAAx9E,oBAG/B,gBAAkBv2B,IAClBhK,KAAKg+G,SAASh0G,EAAOi0G,cAOzBj+G,KAAKk+G,aAAe,GAAIC,GAAA71G,EAAqBtI,MAG7CA,KAAKo+G,4BAA8B,GAAIC,GAAA/1G,EAA4BtI,OAOvE06G,EAAgBj5G,UAAUgJ,KAAO,SAASkiF,GAClC3sF,KAAKw8G,MACLx8G,KAAKw8G,KAAK/xG,KAAKkiF,IAYvB+tB,EAAgBj5G,UAAU68G,2BAA6B,WAAkB,OAAArsF,GAAAlnB,UAAA/H,OAAN6H,EAAM2C,MAAAykB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANrnB,EAAMqnB,GAAAnnB,UAAAmnB,EACrE,OAAOqsF,GAAAj2G,EAA2B2C,MAAMjL,KAAM6K,IAMlD6vG,EAAgBj5G,UAAU+8G,SAAW,WACjC,MAAOx+G,MAAKw8G,MAAQx8G,KAAKw8G,KAAKiC,QAOlC/D,EAAgBj5G,UAAUi9G,aAAe,WACrC,MAAO5kC,SAAQ95E,KAAKie,QAAQjU,OAAOo8F,KAAOpmG,KAAKie,QAAQjU,OAAOo8F,IAAIuY,mBAGpD3+G,KAAKie,QAAQjU,OAAOo8F,KAQtCsU,EAAgBj5G,UAAUm9G,qBAAuB,WAC7C,MAAO9kC,SAAQ95E,KAAKie,QAAQjU,OAAO60G,SAC5B7+G,KAAKie,QAAQjU,OAAO60G,QAAQC,cAOvCpE,EAAgBj5G,UAAUs9G,MAAQ,WAAW,GAAAn2C,GAAA5oE,IA4BzC,IA3BIA,KAAKk2G,8BACLl2G,KAAKk2G,4BAA4Bz/E,UACjCz2B,KAAKk2G,4BAA8B,MAEnCl2G,KAAK47G,sBACL57G,KAAK47G,oBAAoBnlF,UACzBz2B,KAAK47G,oBAAsB,MAG/B57G,KAAK2qE,iBAAiBt8D,QAAQ,SAAAo8D,GAAA,MAAS7B,GAAKo2C,oBAAoBv0C,KAEhEzqE,KAAK0gF,IAAIu+B,qBACLj/G,KAAKm5B,YACLn5B,KAAKm5B,WAAW1C,UAIhBz2B,KAAKg7G,mBACLh7G,KAAKg7G,iBAAiB1pF,QACtBtxB,KAAKg7G,iBAAmB,MAExBh7G,KAAKq8G,mBACLr8G,KAAKq8G,iBAAiB/qF,QACtBtxB,KAAKq8G,iBAAmB,MAIxBr8G,KAAKw8G,KAAM,CACX,GAAMA,GAAOx8G,KAAKw8G,IAelB,OAZAA,GAAKtmF,eACD0mF,EAAA79E,uBACA/+B,KAAK28G,6BACTH,EAAKtmF,eACD0mF,EAAA59E,oBACAh/B,KAAK68G,0BACTL,EAAKtmF,eACD0mF,EAAAt4E,uBACAtkC,KAAK88G,6BAET98G,KAAKw8G,KAAO,KAELA,EAAKuC,QAAQ3oD,MAAM,WAItBwS,EAAKib,kBAAkBx1E,QACnB,SAAA00E,GAAA,MAAena,GAAKs2C,aAAan8B,EAAYo8B,cAKzD,MAAOnnE,SAAQ0K,OACX,GAAIh3C,OAAM,6CAMlBgvG,EAAgBj5G,UAAU29G,QAAU,WAChC,MAAOp/G,MAAKie,QAAQrd,MAMxB85G,EAAgBj5G,UAAU49G,cAAgB,WACtC,MAAOr/G,MAAKo7G,aAMhBV,EAAgBj5G,UAAU69G,WAAa,WACnC,MAAOxlC,SAAQ95E,KAAKu/G,eAMxB7E,EAAgBj5G,UAAU+9G,aAAe,WACrC,MAAOx/G,MAAKu/G,cAMhB7E,EAAgBj5G,UAAUg+G,sBAAwB,WAC9C,MAAOz/G,MAAKw8G,MAAQx8G,KAAKw8G,KAAKkD,UAAUD,yBAS5C/E,EAAgBj5G,UAAUk+G,mBAAqB,SAASC,GAAa,GAAAz2C,GAAAnpE,IACjE,OAAO,IAAIg4C,SAAQ,SAAC4E,EAAS8F,GACpBymB,EAAKs2C,wBAKNG,EACAz2C,EAAKqzC,KAAKkD,UAAUG,iBAAiBjjE,EAAS8F,GAE9CymB,EAAKqzC,KAAKkD,UAAUI,YAAYljE,EAAS8F,GAPzCA,OAiBZg4D,EAAgBj5G,UAAUkpE,eAAiB,SAASG,GAChD,GAAIC,KAMJ,OAJI/qE,MAAK0gF,MACL3V,EAAS/qE,KAAK0gF,IAAI/V,eAAeG,IAG9BC,GAOX2vC,EAAgBj5G,UAAUs+G,mBAAqB,WAC3C,MAAO//G,MAAK0gF,IAAM1gF,KAAK0gF,IAAIq/B,qBAAuB,MAOtDrF,EAAgBj5G,UAAUu+G,mBAAqB,WAC3C,MAAOhgH,MAAK0gF,IAAM1gF,KAAK0gF,IAAIs/B,qBAAuB,MAYtDtF,EAAgBj5G,UAAUs0B,GAAK,SAASkqF,EAASlkG,GACzC/b,KAAK4zB,cACL5zB,KAAK4zB,aAAamC,GAAGkqF,EAASlkG,IAYtC2+F,EAAgBj5G,UAAU4mC,IAAM,SAAS43E,EAASlkG,GAC1C/b,KAAK4zB,cACL5zB,KAAK4zB,aAAasC,eAAe+pF,EAASlkG,IAKlD2+F,EAAgBj5G,UAAUymC,iBAAmBwyE,EAAgBj5G,UAAUs0B,GACvE2kF,EAAgBj5G,UAAU2mC,oBAAsBsyE,EAAgBj5G,UAAU4mC,IAQ1EqyE,EAAgBj5G,UAAUy+G,mBAAqB,SAASC,EAASpkG,GACzD/b,KAAKw8G,MACLx8G,KAAKw8G,KAAK4D,oBAAoBD,EAASpkG,IAQ/C2+F,EAAgBj5G,UAAU4+G,sBAAwB,SAASF,GACnDngH,KAAKw8G,MACLx8G,KAAKw8G,KAAK8D,uBAAuBH,IAQzCzF,EAAgBj5G,UAAU8+G,gBAAkB,SAAStkG,GAC7Cjc,KAAKw8G,MACLx8G,KAAKw8G,KAAKxwC,YAAY/vD,IAS9By+F,EAAgBj5G,UAAU++G,YAAc,SAAS5/G,EAAMq2B,GAC/Cj3B,KAAKw8G,OACLx8G,KAAKw8G,KAAKiE,cAAc7/G,EAAMq2B,GAC9Bj3B,KAAKw8G,KAAKn4F,iBASlBq2F,EAAgBj5G,UAAUi/G,gBAAkB,SAAS9/G,EAAMq2B,GACvDj3B,KAAKwgH,YAAY5/G,EAAMq2B,GACvBj3B,KAAK2gH,cAAc//G,IAOvB85G,EAAgBj5G,UAAUk/G,cAAgB,SAAS//G,GAC3CZ,KAAKw8G,MACLx8G,KAAKw8G,KAAKoE,mBAAmBhgH,IAQrC85G,EAAgBj5G,UAAUo/G,eAAiB,SAASjgH,GAC5CZ,KAAKw8G,OAELx8G,KAAKw8G,KAAKoE,mBAAmB,QAE7B5gH,KAAKw8G,KAAKiE,cAAc,QACpBnrG,YAAcyH,MAAO,mCACrB3R,MAAOxK,IAEXZ,KAAKw8G,KAAKn4F,iBAQlBq2F,EAAgBj5G,UAAUq/G,WAAa,SAASC,GACxC/gH,KAAKw8G,MAAQx8G,KAAKghH,eAClBhhH,KAAKw8G,KAAKsE,WAAWC,IAQ7BrG,EAAgBj5G,UAAUw/G,eAAiB,WACvC,YAAIjhH,KAAKkhH,YAA2B,CAChClhH,KAAKkhH,YAAc,GAAIC,GAAA74G,CAGvB,IAAM84G,GAAmBphH,KAAK2qE,eAAe02C,EAAA/4G,GAJbsuB,KAAAC,KAAAC,QAAA,KAMhC,OAAAC,GAAAC,EAAyBoqF,EAAzBlqF,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAA2C,IAAhCi0C,GAAgC9zC,EAAA3rB,KACvCpL,MAAKkhH,YAAYroC,SAAShO,IAPE,MAAArkD,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAWhC,GAAMm1C,GAAoBjsE,KAAK0gF,IAAIvV,gBAAgBk2C,EAAA/4G,GAXnBovB,KAAAC,KAAAC,QAAA,KAahC,OAAAC,GAAAC,EAA0Bm0C,EAA1B/0C,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAA6C,IAAlC2rD,GAAkCxrD,EAAAzsB,KACzCpL,MAAKkhH,YAAYroC,SAASwK,IAdE,MAAA78D,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,KAkBpC,MAAO53B,MAAKkhH,aAQhBxG,EAAgBj5G,UAAU6/G,uBAAyB,WAC/C,MAAOthH,MAAKw8G,KAAKhG,qBAUrBkE,EAAgBj5G,UAAUo3E,SAAW,SAASpO,GAC1C,GAAIA,EAAMonC,eAAgB,CAEtB,GAAM0P,GAAkBvhH,KAAK0gF,IAAIs/B,oBAEjC,IAAIuB,EAGA,MAAI92C,KAAU82C,EACHvpE,QAAQ4E,QAAQ6tB,GAGpBzyB,QAAQ0K,OAAO,GAAIh3C,OACtB,oDAKZ,MAAO1L,MAAKwhH,aAAa,KAAM/2C,IAQnCiwC,EAAgBj5G,UAAUggH,2BAA6B,SAC/C71C,EACAp0C,GACJ,GAAMkqF,GAAY1hH,KAAK2hH,yBAOlBnqF,IAAOkqF,IAAclqF,GACtBx3B,KAAK4zB,aAAa+C,KACdonF,EAAAt9E,0BACAzgC,KAAK6iF,WAAYjX,IAQ7B8uC,EAAgBj5G,UAAUmgH,qBAAuB,SAASn3C,GAElDzqE,KAAKy7G,gBAAkBhxC,EAAMqB,iBAAmBrB,EAAMqa,YACtD9kF,KAAKy7G,kBAGLz7G,KAAKw8G,KAAKqF,gBAAgB7hH,KAAKw8G,KAAKsF,eAExC9hH,KAAK4zB,aAAa+C,KAAKonF,EAAAr9E,mBAA0C+pC,IAOrEiwC,EAAgBj5G,UAAUu9G,oBAAsB,SAASv0C,GACrDA,EAAMs3C,eAAe,MACrB/hH,KAAK0gF,IAAIshC,iBAAiBv3C,GAC1BA,EAAMriC,oBAAoB65E,EAAAvhF,mBACtB+pC,EAAMy3C,aACVz3C,EAAMriC,oBAAoB65E,EAAAxhF,0BACtBgqC,EAAM03C,mBAKN13C,EAAMonC,gBAAkBpnC,EAAMiC,YAAc01C,EAAA95G,EAAU8iC,SACtDprC,KAAKm5B,WAAWoB,2BAGpBv6B,KAAK4zB,aAAa+C,KAAKonF,EAAAp9E,cAAqC8pC,IAShEiwC,EAAgBj5G,UAAUwzG,YAAc,SAASxqC,GAC7C,MAAOzqE,MAAKwhH,aAAa/2C,EAAO,OAYpCiwC,EAAgBj5G,UAAU+/G,aAAe,SAASa,EAAUC,GAAU,GAAAjqC,GAAAr4E,IAElE,OAAIqiH,IACIA,EAASpR,SACFj5D,QAAQ0K,OACX,GAAI6/D,GAAAj6G,EAAgBk6G,EAAA13E,oBAG5Bw3E,GACIA,EAASrR,SACFj5D,QAAQ0K,OACX,GAAI6/D,GAAAj6G,EAAgBk6G,EAAA13E,oBAKzB9qC,KAAKyiH,gBAAgBJ,EAAUC,GACjCvyD,KAAK,WAUF,MATIsyD,IACAhqC,EAAK2mC,oBAAoBqD,GAEzBC,GAGAjqC,EAAKqqC,eAAeJ,GAGjBtqE,QAAQ4E,WAChB,SAAAtgC,GAAA,MAAS07B,SAAQ0K,OAAO,GAAIh3C,OAAM4Q,OAe7Co+F,EAAgBj5G,UAAUghH,gBAAkB,SAASJ,EAAUC,GAC3D,GAAMK,KAgBN,OAdI3iH,MAAKg7G,iBACL2H,EAAqB9/G,KACjB7C,KAAKg7G,iBAAiBwG,aAAaa,EAAUC,IAEjD1/G,EAAOsB,KAAK,0CAGZlE,KAAKq8G,iBACLsG,EAAqB9/G,KACjB7C,KAAKq8G,iBAAiBmF,aAAaa,EAAUC,IAEjD1/G,EAAOsB,KAAK,0CAGT8zC,QAAQuU,IAAIo2D,IAOvBjI,EAAgBj5G,UAAUihH,eAAiB,SAASJ,GAChD,GAAIA,EAASx2C,gBAAmBw2C,EAASzQ,gBAC9ByQ,EAAS51C,YAAc01C,EAAA95G,EAAU8iC,QAAU,CAElD,GACMkjC,GADU0uC,EAAA10G,EAAI+lE,oCAEN3+B,KACN,SAAA/uC,GAAA,MACIA,GAAEosE,OAAYu1C,EAASM,WAAW71C,KAAlC,SACOpsE,EAAE8xE,QAAU6vC,EAASM,WAAWnwC,OAE/CnE,IACAkvC,EAAAl1G,EAAW8yB,0BACP4hF,EAAA10G,EAAIimE,4BAA4BD,IAGxCg0C,EAASzQ,iBACT7xG,KAAK2gH,cAAc,aACnB3gH,KAAKwgH,YAAY,aACbp1G,MAAOk3G,EAAS51C,UAChBp3D,YACIyH,MAAO,qCAInB/c,KAAK0gF,IAAImiC,cAAcP,GAGnBA,EAASx2C,eACT9rE,KAAKw8G,KAAKsG,aAAaR,EAASx9B,WAEhC9kF,KAAKw8G,KAAKuG,aAAaT,EAASx9B,WAGpCw9B,EAASJ,YAAcliH,KAAK4hH,qBAAqBv0G,KAAKrN,KAAMsiH,GAC5DA,EAASH,kBAAoBniH,KAAKyhH,2BAA2Bp0G,KAAKrN,MAClEsiH,EAASp6E,iBACL+5E,EAAAvhF,mBACA4hF,EAASJ,aACbI,EAASp6E,iBACL+5E,EAAAxhF,0BACA6hF,EAASH,mBAEbG,EAASP,eAAe/hH,MAExBA,KAAK4zB,aAAa+C,KAAKonF,EAAAv9E,YAAmC8hF,IAY9D5H,EAAgBj5G,UAAUuhH,uBAAyB,SAASv4C,GACxD,GAAMw4C,KAkBN,OAhBIjjH,MAAKg7G,iBACLiI,EAAoBpgH,KAAK7C,KAAKg7G,iBAAiBkI,iBAAiBz4C,IAEhE7nE,EAAOsB,KACH,uEAIJlE,KAAKq8G,iBACL4G,EAAoBpgH,KAAK7C,KAAKq8G,iBAAiB6G,iBAAiBz4C,IAEhE7nE,EAAOsB,KACH,uEAID8zC,QAAQuU,IAAI02D,IAUvBvI,EAAgBj5G,UAAU0hH,wBAA0B,SAAS14C,GACzD,GAAM24C,KAiBN,OAfIpjH,MAAKg7G,iBACLoI,EAAqBvgH,KACjB7C,KAAKg7G,iBAAiBqI,kBAAkB54C,IAE5C7nE,EAAOsB,KACH,+DAEJlE,KAAKq8G,iBACL+G,EAAqBvgH,KACjB7C,KAAKq8G,iBAAiBgH,kBAAkB54C,IAE5C7nE,EAAOsB,KACH,+DAGD8zC,QAAQuU,IAAI62D,IAOvB1I,EAAgBj5G,UAAU6hH,QAAU,WAChC,MAAOtjH,MAAKw8G,KAAKxqB,MAQrB0oB,EAAgBj5G,UAAUu/G,YAAc,WACpC,MAAOhhH,MAAKw8G,KAAOx8G,KAAKw8G,KAAKwE,cAAgB,MAQjDtG,EAAgBj5G,UAAU8hH,KAAO,SAAS52B,GAAU,GAAA62B,GAAAxjH,IAChD,OAAKA,MAAKghH,cAIH,GAAIhpE,SAAQ,SAAC4E,EAAS8F,GACzB8gE,EAAKhH,KAAKiH,SACN92B,GAAY,GACZ,iBAAM/vC,MACN,SAAAp2B,GAAA,MAAOk8B,GAAOl8B,IACd,iBAAMk8B,GAAOghE,EAAAtmC,4BARVplC,QAAQ0K,UAgBvBg4D,EAAgBj5G,UAAUkiH,OAAS,WAC/B,MAAO3jH,MAAKujH,QAUhB7I,EAAgBj5G,UAAUmiH,kBAAoB,SAASnhC,GACnDziF,KAAK0gF,IAAImjC,eAAephC,IAU5Bi4B,EAAgBj5G,UAAUqiH,eAAiB,SAASrhC,GAChDziF,KAAK0gF,IAAIqjC,YAAYthC,IAOzBi4B,EAAgBj5G,UAAU2iF,SAAW,WACjC,MAAOpkF,MAAK0gF,IAAI0D,YAWpBs2B,EAAgBj5G,UAAUu8G,SAAW,SAASgG,GAC1C,IAAK/1G,OAAOg2G,UAAUD,KAAW/1G,OAAOpK,SAASmgH,EAAO,IACpD,KAAM,IAAIt4G,OAAJ,4BAAsCs4G,EAEhD,IAAM5iH,GAAI6M,OAAO+1G,EAEjB,IAAI5iH,GAAK,EACL,KAAM,IAAIssD,YAAW,kCAMzB,IAJA1tD,KAAK0gF,IAAIs9B,SAAS58G,GAIdpB,KAAKq8G,iBAAkB,CACvB,GAAM6H,GAAsB,IAAN9iH,CAEtBpB,MAAKq8G,iBACA8H,0BAA6BD,GAC7B9tD,MAAM,SAAA95C,GACH1Z,EAAO0Z,MAAP,2CAC+C4nG,EAD/C,IAEI5nG,OAepBo+F,EAAgBj5G,UAAU+nE,UAAY,SAASiZ,GAC3C,MAAOziF,MAAK0gF,IAAIlX,UAAUiZ,IAO9Bi4B,EAAgBj5G,UAAUoiF,gBAAkB,WACxC,MAAO9iF,QAAOg3B,KAAK/3B,KAAK4jF,cAAc75E,IAAI,SAAS0G,GAC/C,MAAOzQ,MAAK4jF,aAAanzE,IAC1BzQ,OASP06G,EAAgBj5G,UAAU2iH,oBACpB,WAA8B,GAArBC,GAAqBt5G,UAAA/H,OAAA,YAAA+H,UAAA,IAAAA,UAAA,GAExB64E,EAAe5jF,KAAK6jF,iBAOxB,OALKwgC,KACDzgC,EAAeA,EAAax0C,OAAO,SAAAztC,GAAA,OAAMA,EAAE2iH,cAIxC1gC,EAAa5gF,OAAS,GAQrC03G,EAAgBj5G,UAAUqiF,mBAAqB,SAASrhF,GACpD,MAAOzC,MAAK4jF,aAAanhF,IAO7Bi4G,EAAgBj5G,UAAU8iH,gBAAkB,SAAS9hH,GACjD,GAAMsgF,GAAc/iF,KAAK8jF,mBAAmBrhF,EAEvCsgF,IAGL/iF,KAAKw8G,KAAKgI,KAAKzhC,EAAYo8B,WAO/BzE,EAAgBj5G,UAAUogH,gBAAkB,SAASp/G,GACjD,GAAMsgF,GAAc/iF,KAAK8jF,mBAAmBrhF,EAEvCsgF,IAGL/iF,KAAKw8G,KAAKqF,gBAAgB9+B,EAAYo8B,cAkB1CzE,EAAgBj5G,UAAUgjH,eAAiB,SACnCnpG,EAAK+sF,EAAMrW,EAAMsyB,EAAUI,EAASr+F,GAAQ,GAAAs+F,GAAA3kH,KAC1CyC,EAAKmiH,EAAAlxG,QAAQgI,mBAAmBJ,EAEtC,IAAW,UAAP7Y,GAAkBzC,KAAK6iF,aAAepgF,EAA1C,CAGA,GAAMsgF,GACA,GAAI8hC,GAAAv8G,EAAiBgT,EAAKtb,KAAMqoG,EAAMic,EAAUI,EAASr+F,EAE/D08D,GAAY+hC,MAAQ9yB,EACpBhyF,KAAK4jF,aAAanhF,GAAMsgF,EACxB/iF,KAAK4zB,aAAa+C,KACdonF,EAAAl9E,YACAp+B,EACAsgF,GACJ/iF,KAAKyzB,KAAKy/D,KAAK6xB,YAAYzpG,GACtBy0C,KAAK,SAAApwC,GACFojE,EAAYiiC,cAAgBrlG,EAAS6Y,IAAI,0BACzCmsF,EAAKM,qBAET,SAAA3oG,GAAA,MAAS1Z,GAAO0Z,MAAP,kCAA+ChB,EAAOgB,KAEnEtc,KAAKklH,yBAKTxK,EAAgBj5G,UAAUy9G,aAAe,SAAS5jG,GAAK,GAAA6pG,GAAAnlH,KAC7CyC,EAAKmiH,EAAAlxG,QAAQgI,mBAAmBJ,EAEtC,IAAW,UAAP7Y,GAAkBzC,KAAK6iF,aAAepgF,EAA1C,CAGA,GAAMsgF,GAAc/iF,KAAK4jF,aAAanhF,SAE/BzC,MAAK4jF,aAAanhF,GAEHzC,KAAK0gF,IAAI/U,mBAAmBlpE,GAEpC4L,QACV,SAAAo8D,GAAA,MACI06C,GAAKvxF,aAAa+C,KAAKonF,EAAAp9E,cAAqC8pC,KAGhEsY,GACA/iF,KAAK4zB,aAAa+C,KACdonF,EAAAj9E,UAAiCr+B,EAAIsgF,GAG7C/iF,KAAKklH,2BAOTxK,EAAgBj5G,UAAU2jH,mBAAqB,SAASpzB,GAEpDhyF,KAAK4zB,aAAa+C,KACdonF,EAAAh9E,kBAAyC/gC,KAAK6iF,WAAYmP,GAG9DhyF,KAAKklH,wBAGTxK,EAAgBj5G,UAAU4jH,kBAAoB,SAAS/pG,EAAK02E,GACxD,GAAMvvF,GAAKmiH,EAAAlxG,QAAQgI,mBAAmBJ,GAChCynE,EAAc/iF,KAAK8jF,mBAAmBrhF,EAEvCsgF,KAGLA,EAAY+hC,MAAQ9yB,EACpBhyF,KAAK4zB,aAAa+C,KAAKonF,EAAAh9E,kBAAyCt+B,EAAIuvF,KAGxE0oB,EAAgBj5G,UAAU6jH,qBAAuB,SAAShqG,EAAKiiG,GAC3D,GAAM96G,GAAKmiH,EAAAlxG,QAAQgI,mBAAmBJ,GAChCynE,EAAc/iF,KAAK8jF,mBAAmBrhF,EAEvCsgF,IAIDA,EAAYwiC,eAAiBhI,IAIjCx6B,EAAYwiC,aAAehI,EAC3Bv9G,KAAK4zB,aAAa+C,KACdonF,EAAA7+E,qBACAz8B,EACA86G,KAUR7C,EAAgBj5G,UAAUygF,mBAAqB,SAASzX,GAAO,GAAA+6C,GAAAxlH,IAC3D,KAAIyqE,EAAMV,OAAU/pE,KAAKgkF,cAKlB,GAAKvZ,EAAMV,QAAS/pE,KAAKgkF,cAAzB,CAOP,GAAMvhF,GAAKgoE,EAAM8Y,mBACXR,EAAc/iF,KAAK8jF,mBAAmBrhF,EAE5C,IAAKsgF,EAAL,CAOAA,EAAY0iC,QAAQ5iH,KAAK4nE,GAErBzqE,KAAKkhH,aACLlhH,KAAKkhH,YAAYroC,SAASpO,EAG9B,IAAM72B,GAAU5zC,KAAK4zB,YAErB62C,GAAMviC,iBACF+5E,EAAAvhF,mBACA,iBAAMkT,GAAQjd,KAAKonF,EAAAr9E,mBAA0C+pC,KACjEA,EAAMviC,iBACF+5E,EAAAxhF,0BACA,SAACmrC,EAAYp0C,GACSguF,EAAK7D,4BAELnqF,GACdoc,EAAQjd,KACJonF,EAAAt9E,0BACAh+B,EACAmpE,KAKhBh4B,EAAQjd,KAAKonF,EAAAv9E,YAAmCiqC,OA/B5C7nE,GAAO0Z,MAAP,gCAA6C7Z,OAV7CG,GAAOsB,KACH,6DANJtB,GAAOsB,KACH,8DAuDZw2G,EAAgBj5G,UAAUikH,eAAiB,SAASp4F,EAASq4F,GACrD3lH,KAAKq8G,mBAAqB/uF,IAC1B1qB,EAAOsB,KAAK,iBACZlE,KAAKq8G,iBAAiBuJ,UAAUD,KAYxCjL,EAAgBj5G,UAAUokH,gBAAkB,SAASv4F,EAASw4F,GACtD9lH,KAAKq8G,mBAAqB/uF,IAC1B1qB,EAAOsB,KAAK,wBACZlE,KAAKq8G,iBAAiB0J,iBAAiBD,KAU/CpL,EAAgBj5G,UAAU2gF,qBAAuB,SAAS4jC,GAAc,GAAAC,GAAAjmH,IACpEA,MAAK6jF,kBAAkBx1E,QAAQ,SAAA00E,GAG3B,IAAK,GAFChY,GAASgY,EAAY9I,YAElB55E,EAAI,EAAGA,EAAI0qE,EAAO/nE,OAAQ3C,IAC/B,GAAI0qE,EAAO1qE,KAAO2lH,EAAc,CAG5BjjC,EAAY0iC,QAAQj7G,OAAOnK,EAAG,GAE9B4lH,EAAKryF,aAAa+C,KACdonF,EAAAp9E,cAAqCqlF,GAErCC,EAAK/E,aACL+E,EAAK/E,YAAYjM,YAAY+Q,EAGjC,SAGThmH,OAMP06G,EAAgBj5G,UAAUykH,mBAAqB,SACvCC,EACAC,GAEJ,GAAIC,SAGS,eAFArmH,KAAKw8G,KAAK8J,cAAcH,EAAcI,WAG/CF,GACIvgG,OAAQ,iBACR0gG,kBAAmB,oCACnBC,SAAU,oEAC2BN,EAAcI,WAE/CG,EAAAp+G,EAAetB,iBAMfhH,KAAK0+G,gBAAmB1+G,KAAK4+G,uBAM9B5+G,KAAKq8G,mBAEZgK,GACIvgG,OAAQ,OACR0gG,kBAAmB,0BACnBC,SAAU,sCAVdJ,GACIvgG,OAAQ,UACR0gG,kBAAmB,eACnBC,SAAU,0CATdJ,GACIvgG,OAAQ,2BACR0gG,kBAAmB,oBACnBC,SAAU,gDAiBdJ,EACArmH,KAAK2mH,oBAAoBR,EAAeE,GAExCrmH,KAAK4mH,uBAAuBT,EAAeC,IAOnD1L,EAAgBj5G,UAAUolH,eAAiB,SACnCV,EACAC,EACAv8F,GAEJ,GAAIs8F,EAAcp8C,MACd/pE,KAAKkmH,mBAAmBC,EAAeC,OACpC,CACH,IAAKpmH,KAAKw8G,KAAKsK,QAAQX,EAAcI,WAAY,CAC7C,GAAM7zB,GAAc,4CASpB,YAPA1yF,MAAK2mH,oBACDR,GACIrgG,OAAQ,iBACR0gG,kBAAmB9zB,EACnB+zB,SAAU/zB,IAKtB1yF,KAAK+mH,uBAAuBZ,EAAeC,EAAav8F,KAOhE6wF,EAAgBj5G,UAAUslH,uBAAyB,SAC3CZ,EACAC,EACAv8F,GAAK,GAAAm9F,GAAAhnH,IAGTA,MAAKg7G,iBAAmBmL,EACxBnmH,KAAKw8G,KAAKtX,gBAAgB,oBAAsBr7E,EAG5C7pB,KAAK07G,YACL8B,EAAAl1G,EAAW81B,eAAehE,EAAAppB,GAG9BwsG,EAAAl1G,EAAW0sB,UAAUmF,UACjBC,EAAAjqB,GAEI/E,MAAOye,EAAM7pB,KAAKw8G,KAAKtX,gBAAgB,eAE/C,KACIihB,EAAcc,cAAkCjnH,KAAKw8G,KAAMx8G,KAAK0gF,KAClE,MAAOpkE,GACL4qG,EAAA5+G,EAAqB+pB,iBAAiB/V,GAI1Ctc,KAAKmnH,kBAAkBf,EAAaD,EAAc/wF,eAGlD,KACI+wF,EAAciB,YACVhB,EACA,WAIQY,EAAKhjC,eAAiBgjC,EAAKhM,kBAC3BgM,EAAKK,yCAGb,SAAA/qG,GACI4qG,EAAA5+G,EAAqB+pB,iBAAiB/V,GACtC1Z,EAAO0Z,MACH,2CAA4CA,IAEpDtc,KAAK2qE,kBAOT/nE,EAAOsB,KAAK,4CACZlE,KAAKm5B,WAAWb,eACZt4B,KAAKg7G,iBAAiB5lF,eACtB,SACJp1B,KAAKm5B,WAAWhE,iBAAiBn1B,KAAKg7G,iBAAiB5lF,gBACzD,MAAOn1B,GACLinH,EAAA5+G,EAAqB+pB,iBAAiBpyB,GACtC2C,EAAO0Z,MAAMrc,KAarBy6G,EAAgBj5G,UAAU0lH,kBAAoB,SAASG,EAASpxB,GAC5D,GAAIvtB,GAAQ,KACN4+C,EACAxwC,EAAEuwC,GACC53E,KAAK,iCACL83E,OAEgB,KAArBD,EAAUvkH,SACV2lE,EAAQ4+C,EAAU,GAAGvsG,aAAa,OAGtC,IAAIysG,SAEJ,QAAQznH,KAAKie,QAAQjU,OAAO09G,mBAC5B,IAAK,cACL,OACA,YACID,EAAoB,aACpB,MACJ,KAAK,YACDA,EAAoB,YAIE,gBAAtBA,GACIf,EAAAp+G,EAAeT,yBACnB4/G,EAAoB,aAGE,gBAAtBA,EACAznH,KAAK0gF,IAAIinC,wBAAwBzxB,EAAI,MACR,cAAtBuxB,GAAqC9+C,GAC5C3oE,KAAK0gF,IAAIinC,wBAAwB,KAAMh/C,IAgB/C+xC,EAAgBj5G,UAAUklH,oBAAsB,SACxCR,EACAloG,GACAA,GAAWA,EAAQwoG,UACnBS,EAAA5+G,EAAqB+pB,iBAAiB,GAAI3mB,OAAMuS,EAAQwoG,WAI5DN,EAAcyB,UACV,KACA,SAAAtrG,GACI1Z,EAAOwF,KACH,qEACiCkU,KAErCwJ,OAAQ7H,GAAWA,EAAQ6H,OAC3B0gG,kBAAmBvoG,GAAWA,EAAQuoG,kBACtCqB,2BAYZnN,EAAgBj5G,UAAUqmH,YAAc,SAChC3B,EACA4B,EACAC,GACJplH,EAAOsB,KAAP,eACmB6jH,EADnB,MACwCC,EADxC,SAEQ7B,EAAcp8C,OAClBo8C,IAAkBnmH,KAAKg7G,kBACvBh7G,KAAK07G,cAEL8B,EAAAl1G,EAAW81B,eAAehE,EAAA63E,GAGtBjyG,KAAKm5B,aACLn5B,KAAKm5B,WAAW9D,gBACZr1B,KAAKg7G,iBAAiB5lF,gBAC1BxyB,EAAOsB,KAAK,0BACZlE,KAAKm5B,WAAW5B,cACZv3B,KAAKg7G,iBAAiB5lF,iBAI9Bp1B,KAAKg7G,iBAAmB,KAGxBh7G,KAAK0gF,IAAIonC,eACF3B,IAAkBnmH,KAAKq8G,kBAGN,YAApB0L,GAAgD,iBAAfC,GACjCplH,EAAOsB,KAAK,6BACZs5G,EAAAl1G,EAAW0sB,UAAUq1C,wBAAyB49C,kBACnB,uBAApBF,GACW,eAAfC,GAIHxK,EAAAl1G,EAAW0sB,UAAUq1C,wBAAyB69C,eAElDloH,KAAKmoH,mBAELvlH,EAAO0Z,MACH,2CACA6pG,EAAcnjG,IACdmjG,EAAcI,UACdwB,EACAC,IAQZtN,EAAgBj5G,UAAU2mH,kBAAoB,SAASjC,GAC9CA,EAAcp8C,QACf/pE,KAAK++G,QACL/+G,KAAK4zB,aAAa+C,KAAKonF,EAAAz9E,oBAI/Bo6E,EAAgBj5G,UAAUwjH,kBAAoB,WAK1C,IAAK,GAJD9J,MACEv3B,EAAe5jF,KAAK6jF,kBAGjBxjF,EAAI,EAAGA,EAAIujF,EAAa5gF,OAAQ3C,GAAK,EAC1C,GAAIujF,EAAavjF,GAAGgoH,eAAgB,CAChClN,IACA,OAGJA,IAAyBn7G,KAAKm7G,uBAC9Bn7G,KAAKm7G,qBAAuBA,EAC5Bn7G,KAAK4zB,aAAa+C,KACdonF,EAAA3+E,qBACA+7E,KASZT,EAAgBj5G,UAAU6mH,gBAAkB,WACxC,MAAOtoH,MAAKm7G,sBAOhBT,EAAgBj5G,UAAUohF,SAAW,WACjC,MACI7iF,MAAKw8G,MAAQx8G,KAAKw8G,KAAKsF,UACjB8C,EAAAlxG,QAAQgI,mBAAmB1b,KAAKw8G,KAAKsF,WACrC,MAGdpH,EAAgBj5G,UAAU8mH,UAAY,SAASC,EAAOC,EAAU7mG,GAC5D,IAAK5hB,KAAKk7G,YAAa,CACnB,GAAMwN,GAAiB1oH,KAAK2hH,yBAE5B,KAAK+G,EAGD,WAFA9lH,GAAOwF,KAAK,uCAKhB,IAAMyiE,GAAa7qE,KAAK+/G,oBAExB,KAAKl1C,EAGD,WAFAjoE,GAAOwF,KAAK,0CAIhBpI,MAAKk7G,YAAc,GAAIyN,GAAArgH,EAAiBuiE,EAAY69C,GAGxD1oH,KAAKk7G,YAAYqN,UAAUC,EAAOC,EAAU7mG,IAMhD84F,EAAgBj5G,UAAUmnH,qBAAuB,WAC7C,QAAI5oH,KAAKw8G,MACEx8G,KAAKw8G,KAAKoM,wBAUzBlO,EAAgBj5G,UAAUonH,kBAAoB,WAC1C,MAAO7oH,MAAKw8G,KAAOx8G,KAAKw8G,KAAKqM,4BAMjCnO,EAAgBj5G,UAAUqnH,gBAAkB,WACxC,MAAO9oH,MAAKw8G,KAAOx8G,KAAKw8G,KAAKsM,kBAAoB,MAMrDpO,EAAgBj5G,UAAU4qG,gBAAkB,SAASpuF,GAAS,GAAA8qG,GAAA/oH,IAC1D,IAAIA,KAAKw8G,KACL,MAAOx8G,MAAKw8G,KAAKnQ,gBAAgBpuF,EAAS,SAACoI,EAAQ/J,GAC/CysG,EAAKn1F,aAAa+C,KACdonF,EAAA/9E,uBAA8C3Z,EAAQ/J,IAGlEtc,MAAK4zB,aAAa+C,KACdonF,EAAA/9E,uBAA8C,QAC9C,GAAIt0B,OAAM,wCAMlBgvG,EAAgBj5G,UAAUunH,sBAAwB,WAC9C,QAAIhpH,KAAKw8G,MACEx8G,KAAKw8G,KAAKwM,yBAUzBtO,EAAgBj5G,UAAUknG,KAAO,SAAS6G,GACtC,MAAIxvG,MAAKw8G,KACEx8G,KAAKw8G,KAAK7T,KAAK6G,GAGnB,GAAIx3D,SAAQ,SAAC4E,EAAS8F,GACzBA,EAAO,GAAIh3C,OAAM,0CAOzBgvG,EAAgBj5G,UAAUwnH,OAAS,WAC/B,MAAIjpH,MAAKw8G,KACEx8G,KAAKw8G,KAAKyM,SAGd,GAAIjxE,SAAQ,SAAC4E,EAAS8F,GACzBA,EAAO,GAAIh3C,OAAM,0CAOzBgvG,EAAgBj5G,UAAUynH,iBAAmB,WACzC,MAAOlpH,MAAK2oG,KAAK,0BAOrB+R,EAAgBj5G,UAAU0nH,gBAAkBzO,EAAgBj5G,UAAUwnH,OAKtEvO,EAAgBj5G,UAAU2nH,eAAiB,WACvC,MAAIppH,MAAKw8G,KACEx8G,KAAKw8G,KAAK4M,iBAGd,MAMX1O,EAAgBj5G,UAAU4nH,YAAc,WACpC,MAAIrpH,MAAKw8G,KACEx8G,KAAKw8G,KAAK6M,cAGd,MAWX3O,EAAgBj5G,UAAUkgH,wBAA0B,WAChD,MAAI3hH,MAAKgkF,cACEhkF,KAAKq8G,iBAAiBjnF,eAG1Bp1B,KAAKg7G,iBAAmBh7G,KAAKg7G,iBAAiB5lF,eAAiB,MAW1EslF,EAAgBj5G,UAAU6nH,mBAAqB,WAC3C,GAAMZ,GAAiB1oH,KAAK2hH,yBAE5B,OAAO+G,GAAiBA,EAAeY,qBAAuB,MASlE5O,EAAgBj5G,UAAU8nH,oBAAsB,SAASC,GAChDxpH,KAAKghH,gBAGVhhH,KAAKu7G,iBAAmBiO,EACxBxpH,KAAKw8G,KAAKoE,mBAAmB,cAC7B5gH,KAAKw8G,KAAKiE,cAAc,cACpBnrG,YACI25D,MAAOu6C,EAAOv6C,MACdllC,MAAOy/E,EAAOz/E,MACdhtB,MAAO,0CAGf/c,KAAKw8G,KAAKn4F,iBAOdq2F,EAAgBj5G,UAAUgoH,oBAAsB,WAC5C,MAAOzpH,MAAKu7G,kBAMhBb,EAAgBj5G,UAAUioH,kBAAoB,WAC1C,MAAO1pH,MAAKq7G,iBAMhBX,EAAgBj5G,UAAUkoH,kBAAoB,WAC1C,MAAO3pH,MAAKs7G,iBAMhBZ,EAAgBj5G,UAAUmoH,QAAU,WAChC,GAAMl5G,GAAO1Q,KAAKyzB,KAAKo2F,eAEjBC,IAENA,GAASj+B,KAAO,GAAI5sE,MACpB6qG,EAAS3vC,IAAMt1E,OAAOgrB,SAAS0lF,KAC/BuU,EAASllH,GAAKxB,UAAUM,SAExB,IAAMI,GAAM9D,KAAKyzB,KAAKs2F,YAQtB,OANIjmH,KACAgmH,EAASr2F,KAAO3vB,GAGpB4M,EAAKo5G,SAAWA,EAETp5G,GAMXgqG,EAAgBj5G,UAAU64G,mBAAqB,WAC3C,MAAOt6G,MAAKw8G,KAAKtX,iBAMrBwV,EAAgBj5G,UAAUuoH,4BAA8B,SAASppH,EAAMwK,GACnEpL,KAAKwgH,YAAL,qBAAsC5/G,GAAUwK,WAUpDsvG,EAAgBj5G,UAAUs8B,aAAe,SACjCksF,EACAC,GACJlqH,KAAKm5B,WAAW4E,aAAaksF,EAAiBC,IAUlDxP,EAAgBj5G,UAAUo4B,mBAAqB,WAC3C,MAAO75B,MAAKm5B,WAAWU,sBAU3B6gF,EAAgBj5G,UAAU6vG,eAAiB,SAAS7mC,EAAO4mC,GACvD,GAAMx1E,GAAU4uC,EAAM5uC,UAClBrB,EAAO,KACLuvC,EAAQU,EAAMV,MACdogD,EAAepgD,EAAQU,EAAM8Y,mBAAqB,QAClDmlC,EACA3+C,EACI/pE,KAAKq8G,kBAAoBr8G,KAAKq8G,iBAAiBjnF,eAC/Cp1B,KAAKg7G,kBAAoBh7G,KAAKg7G,iBAAiB5lF,cAErDyG,GAEI6sF,IACAluF,EAAOkuF,EAAe0B,aAAa3/C,IAGvCjwC,EAAOiwC,EAAM4/C,UAEZhZ,EAAU5uG,IAAO+3B,GAASkuF,GAI/B1oH,KAAKm5B,WAAWyC,4BACZ8sF,EACAluF,EACAqB,EACAsuF,EACA1/C,EAAM6/C,gBACNjZ,EAAU5uG,KAUlBi4G,EAAgBj5G,UAAUq8B,mBAAqB,SAAS7hB,GACpDuhG,EAAAl1G,EAAW00B,QAAQ/gB,IAWvBy+F,EAAgBj5G,UAAU8oH,SAAW,SAASC,GAC1C,MAAOxqH,MAAKw8G,KAAOx8G,KAAKw8G,KAAKsK,QAAQ0D,GAAU,MAMnD9P,EAAgBj5G,UAAUgpH,+BAAiC,WACvDzqH,KAAK4zB,aAAa+C,KAAKonF,EAAAn/E,kBACnB8kF,EAAAvmC,+BAURu9B,EAAgBj5G,UAAUipH,oBAAsB,SAAS7hG,EAAIqoB,GACzDlxC,KAAK0gF,IAAIiqC,mBAAmB9hG,EAAIqoB,IAQpCwpE,EAAgBj5G,UAAUmpH,yBAA2B,SAAS15E,GAC1DlxC,KAAK0qH,oBAAoB,GAAIx5E,IAGjCwpE,EAAgBj5G,UAAUopH,wBAA0B,WAChD,MAAO7qH,MAAKgkF,cACNhkF,KAAKo8G,2BAA6Bp8G,KAAK+7G,4BAQjDrB,EAAgBj5G,UAAUk7G,4BAA8B,SAASrvF,GACzDA,EAAQy8C,MACR/pE,KAAKo8G,8BAELp8G,KAAK+7G,8BAELzuF,EAAQy8C,QAAU/pE,KAAKgkF,eACvBhkF,KAAK4zB,aAAa+C,KAAKonF,EAAAh/E,yBAS/B27E,EAAgBj5G,UAAUqpH,uBAAyB,SAASx9F,GAGpDA,EAAQy8C,QAGRyzC,EAAAl1G,EAAW0sB,UAAUq1C,wBAAyB69C,eAG1CloH,KAAKq8G,kBAAoBr8G,KAAKq8G,iBAAiB0O,aAC/CvN,EAAAl1G,EAAW81B,eAAehE,EAAAv4B,GAE9B7B,KAAKmoH,gBAAgB,qBAAsB,gBASnDzN,EAAgBj5G,UAAUo7G,yBAA2B,SAASvvF,GACtDA,EAAQy8C,MACR/pE,KAAKo8G,8BAELp8G,KAAK+7G,8BAGLzuF,EAAQy8C,QAAU/pE,KAAKgkF,eACvBhkF,KAAK4zB,aAAa+C,KAAKonF,EAAA/+E,sBAU/B07E,EAAgBj5G,UAAUmlH,uBAAyB,SAC3CT,EACAC,GACJpmH,KAAKo8G,8BAGLp8G,KAAKq8G,iBAAmB8J,EAExBnmH,KAAKq8G,iBAAiB4K,cACKjnH,KAAKw8G,KAAMx8G,KAAK0gF,KAE3C99E,EAAOsB,KAAK,2CAEZ,IAAI8mH,GAAWpG,EAAAlxG,QAAQgI,mBAAmB1b,KAAKq8G,iBAAiBkK,UAEhE,IAAIvmH,KAAKie,QAAQjU,OAAO0zG,cAAe,CACnC,GAAM36B,GAAc/iF,KAAK4jF,aAAaonC,EAElCjoC,KACAioC,EAAWjoC,EAAYkoC,cAAgBD,GAI/ChrH,KAAKm5B,WAAWb,eACZt4B,KAAKq8G,iBAAiBjnF,eACtB41F,EAEJ,IAAMrjD,GAAc3nE,KAAK2qE,gBAEzB3qE,MAAKq8G,iBAAiB+K,YAClBhB,EACA,WACIxjH,EAAOyZ,MAAM,wCAEjB,SAAAC,GACI1Z,EAAO0Z,MACH,+CAAgDA,IAExDqrD,IAOR+yC,EAAgBj5G,UAAUypH,oBAAsB,WAC5ClrH,KAAKmrH,iBACD,MAAOnrH,KAAKg7G,iBAAiB5lF,eAAe+1C,oBAOpDuvC,EAAgBj5G,UAAU2pH,oBAAsB,WAC5CprH,KAAKmrH,iBACD,MAAOnrH,KAAKq8G,iBAAiBjnF,eAAe+1C,oBAUpDuvC,EAAgBj5G,UAAU0pH,iBAAmB,SAASE,EAASpgD,GAAc,GAAAnyC,MAAAC,KAAAC,QAAA,KACzE,OAAAC,GAAAC,EAAoB+xC,EAApB/zC,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,KAAkC,IAAvB2xC,GAAuBxxC,EAAA7tB,KAC9BxI,GAAOsB,KAAP,iBAA6BmnH,EAA7B,WAA+C5gD,GAC/CzqE,KAAK0gF,IAAI9sD,aAAa+C,KAAK20F,EAAAjkF,mBAA8BojC,IAHY,MAAAjkD,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,MAc7E0hF,EAAgBj5G,UAAUq7G,4BAA8B,SAChDqJ,GAC0B,OAA1BnmH,KAAKq8G,mBAILr8G,KAAKurH,yBACCvrH,KAAKq8G,iBAAiBmP,uBAGF,OAA1BxrH,KAAKg7G,mBACLh7G,KAAKyrH,yBACCzrH,KAAKg7G,iBAAiBwQ,sBAGhC,IAAIn0F,MACEq0F,EAAmB1rH,KAAKie,QAAQjU,OAAO0hH,gBAmB7C,IAhBKvF,EAAcp8C,MAER/pE,KAAKq8G,mBAAqB8J,GACjCvjH,EAAO0Z,MAAM,0DAEb+a,OACQ8uF,EAAc4E,aACS,gBAArBW,IACPx9G,KAAK+T,SAAWypG,IACnB9oH,EAAOsB,KAAP,+BAA2CwnH,EAA3C,QACAlO,EAAAl1G,EAAW0sB,UAAUq1C,wBAAyB49C,iBAC9CjoH,KAAKmoH,gBAAgB,UAAW,gBAEhC9wF,MAZAA,MAeC7nB,MAAMxP,KAAKurH,4BACR/7G,MAAMxP,KAAKyrH,0BAA2B,CAC1C,GAAME,GACA3rH,KAAKurH,yBAA2BvrH,KAAKyrH,wBAE3CjO,GAAAl1G,EAAW0sB,UAAUmF,UACjBC,EAAAnoB,GACE7G,MAASugH,IAGft0F,IAMJr3B,KAAK4rH,kBAGD5rH,KAAKg7G,iBACLh7G,KAAK6rH,yBAELjpH,EAAOsB,KAAK,mDAIhBlE,KAAKorH,sBAGDprH,KAAKg7G,kBACLh7G,KAAKqnH,wCAITzkH,EAAOsB,KAAK,6CACZlE,KAAKm5B,WAAWhE,iBAAiBn1B,KAAKq8G,iBAAiBjnF,gBAGnDp1B,KAAKq8G,iBAAiB0O,aACtBvN,EAAAl1G,EAAW81B,eAAehE,EAAAx4B,KAQlC84G,EAAgBj5G,UAAUqqH,4BAA8B,WAChD9rH,KAAKk8G,uBACLt5G,EAAOsB,KAAK,mCACZkgB,aAAapkB,KAAKk8G,sBAClBl8G,KAAKk8G,qBAAuB,OASpCxB,EAAgBj5G,UAAUoqH,uBAAyB,WAC/C7rH,KAAK+rH,oBACD,MAAO/rH,KAAKg7G,iBAAiB5lF,eAAe+1C,oBAQpDuvC,EAAgBj5G,UAAUuqH,uBAAyB,WAC/ChsH,KAAK+rH,oBACD,MAAO/rH,KAAKq8G,iBAAiBjnF,eAAe+1C,oBAUpDuvC,EAAgBj5G,UAAUsqH,oBAAsB,SACxCE,EACAhhD,GAAc,GAAA7xC,MAAAC,KAAAC,QAAA,KAClB,OAAAC,GAAAC,EAAoByxC,EAApB/zC,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,KAAkC,IAAvBqxC,GAAuBlxC,EAAAnuB,KAC9BxI,GAAOsB,KAAP,mBAA+B+nH,EAA/B,WAAyDxhD,GACzDzqE,KAAK0gF,IAAI9sD,aAAa+C,KAAK20F,EAAA/jF,qBAAgCkjC,IAH7C,MAAAjkD,GAAA6S,KAAAC,EAAA9S,EAAA,aAAA4S,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,WAAA4B,EAAA,KAAAC,MAWtBohF,EAAgBj5G,UAAUyqH,qCAAuC,WAC7DtpH,EAAOsB,KAAK,sDACZlE,KAAKg7G,iBAAiBmJ,2BAAuB,GAAYp0D,KACrD,WACIntD,EAAOsB,KAAK,oDAEhB,SAAAoY,GACI1Z,EAAO0Z,MACH,2DACAA,MAWhBo+F,EAAgBj5G,UAAUmqH,cAAgB,SAAS5oC,GAC/C,GAAIhjF,KAAKomG,MAAQpjB,EAAjB,CAMA,GADAhjF,KAAKomG,IAAMpjB,EACPA,EAAW,CACXpgF,EAAOsB,KAAK,wCAIZs5G,EAAAl1G,EAAW0sB,UAAUq1C,wBACjB69C,aACAD,gBAKJ,IAAM/D,GAAwC,IAAxBlkH,KAAK0gF,IAAI0D,UAE/BpkF,MAAKq8G,iBACA8H,0BAA6BD,GAC7B9tD,MAAM,SAAA95C,GACH1Z,EAAO0Z,MACH,+CACU4nG,EADV,IAC4B5nG,SAGxC1Z,GAAOsB,KAAK,kCAIZlE,MAAKg7G,kBACLh7G,KAAKm5B,WAAWW,gCACZ95B,KAAKg7G,iBAAiB5lF,gBAAiB4tD,GAI/ChjF,KAAKk7G,YAAc,KAGnBl7G,KAAK4zB,aAAa+C,KACdonF,EAAAj+E,WACA9/B,KACAA,KAAKomG,KAGTpmG,KAAK4zB,aAAa+C,KACd32B,KAAK6qH,0BACC9M,EAAAh/E,uBACAg/E,EAAA/+E,yBAjDNp8B,GAAOyZ,MAAP,8CAA2D2mE,IAyDnE03B,EAAgBj5G,UAAU0qH,iBAAmB,SAAS5F,GAElD,GADAvmH,KAAK8rH,8BACD9rH,KAAKq8G,iBACLz5G,EAAO0Z,MAAM,oCADjB,CAMAtc,KAAKo8G,8BACLp8G,KAAKq8G,iBACCr8G,KAAKyzB,KAAK1J,WAAWs8E,OAAO+lB,oBAC1BpsH,KAAKw8G,KAAKsF,UACVyE,GACR3jH,EAAOsB,KACH,gCAAiClE,KAAKw8G,KAAKsF,UAAWyE,GAE1DvmH,KAAKq8G,iBAAiB4K,cAAiCjnH,KAAKw8G,KAAMx8G,KAAK0gF,KAEvE99E,EAAOsB,KAAK,2CAEZ,IAAI8mH,GAAWpG,EAAAlxG,QAAQgI,mBAAmB1b,KAAKq8G,iBAAiBkK,UAEhE,IAAIvmH,KAAKie,QAAQjU,OAAO0zG,cAAe,CACnC,GAAM36B,GAAc/iF,KAAK4jF,aAAaonC,EAElCjoC,KACAioC,EAAWjoC,EAAYkoC,cAAgBD,GAI/ChrH,KAAKm5B,WAAWb,eACZt4B,KAAKq8G,iBAAiBjnF,eACtB41F,EAKJ,IAAMrjD,GAAc3nE,KAAK2qE,gBAEzB3qE,MAAKq8G,iBAAiBgQ,OAAO1kD,KAOjC+yC,EAAgBj5G,UAAU4lH,sCAAwC,WAC9DzkH,EAAOsB,KAAK,wDACZlE,KAAKg7G,iBAAiBmJ,2BAAuB,GAAcp0D,KACvD,WACIntD,EAAOsB,KAAK,uDAEhB,SAAAoY,GACI1Z,EAAO0Z,MACH,4DACAA,MAWhBo+F,EAAgBj5G,UAAUyjH,qBAAuB,SAASoH,GACtD,GAAK5F,EAAAp+G,EAAetB,kBACZhH,KAAK0+G,iBACN1+G,KAAK4+G,uBAFZ,CAOA,GAAM2N,GAAQvsH,KAAK6jF,kBACb2oC,EAAYD,EAAMvpH,OAClBg+G,EAAchhH,KAAKghH,cAGnByL,EAA8B,IAAdD,CAYtB,IAVA5pH,EAAOyZ,MAAP,qBACyB2kG,EADzB,gBACoDwL,EADpD,OAEQC,IAGHA,GAAiBzsH,KAAKk8G,sBACvBl8G,KAAK8rH,8BAIL9K,IAAgBhhH,KAAKq8G,kBAAoBoQ,EAAe,CACxD,GAAMC,GAAOF,GAAaD,EAAM,EAGhC,IAAIvL,GAAkC,cAAnB0L,EAAKpJ,UAA2B,CAC/C,GAAMqJ,GAAO3sH,KAAK6iF,WACZ+pC,EAAUF,EAAKxpC,OAErB,IAAIypC,EAAOC,EAKP,WAJAhqH,GAAOyZ,MACH,2DACqCswG,EAAMC,EAG5C,IAAID,IAASC,EAGhB,WAFAhqH,GAAO0Z,MAAM,kBAAmBqwG,EAAMC,GAK9C,GAAMtxG,GAAMoxG,EAAKvN,QAEjB,IAAImN,EAAe,CACf,GAAItsH,KAAKk8G,qBAGL,WAFAt5G,GAAO0Z,MAAM,8CAIjB1Z,GAAOsB,KAAP,wBAC4BoX,EAD5B,UAEQtb,KAAKm8G,eAFb,eAGAn8G,KAAKk8G,qBAAuBlvG,WACxBhN,KAAKmsH,iBAAiB9+G,KAAKrN,KAAMsb,GACX,IAAtBtb,KAAKm8G,oBAETv5G,GAAOsB,KAAP,wBAAoCoX,GACpCtb,KAAKmsH,iBAAiB7wG,OAEnBtb,MAAKq8G,mBAAqBoQ,IACjC7pH,EAAOsB,KAAP,uBAAmClE,KAAKq8G,iBAAiBkK,WAGrDvmH,KAAKq8G,iBAAiB0O,aAAeyB,EAAY,GACjDhP,EAAAl1G,EAAW81B,eAAehE,EAAA1F,GAE9B10B,KAAKmoH,uBAlELvlH,GAAOsB,KAAK,sBA8EpBw2G,EAAgBj5G,UAAU0mH,gBAAkB,SACpCriG,EACA0gG,GACJ,GAAKxmH,KAAKq8G,iBAAV,CAMA,GAAMwQ,GAAoB7sH,KAAKgkF,aAG3B6oC,KACI7sH,KAAKg7G,kBACLh7G,KAAKksH,uCAITlsH,KAAKgsH,0BAITppH,EAAOsB,KAAK,4CACZlE,KAAKm5B,WAAW9D,gBAAgBr1B,KAAKq8G,iBAAiBjnF,gBACtDxyB,EAAOsB,KAAK,yCACZlE,KAAKm5B,WAAW5B,cAAcv3B,KAAKq8G,iBAAiBjnF,gBAEpDp1B,KAAKq8G,iBAAiBuL,UAClB,WACIhlH,EAAOsB,KAAK,iCAEhB,SAAAoY,GAcQwJ,GACAljB,EAAO0Z,MACH,iEAC6BA,KAGrCwJ,OAAQA,GAAkB,UAC1B0gG,kBAAmBA,GACO,yBAC1BqB,qBAAsB7nH,KAAKw8G,MACpBx8G,KAAK8jF,mBACJ8gC,EAAAlxG,QAAQgI,mBAAmB1b,KAAKq8G,iBAAiBkK,cAGjEvmH,KAAKq8G,iBAAmB,KAGxBr8G,KAAK4rH,kBAEDiB,IAEI7sH,KAAKg7G,iBACLh7G,KAAKkrH,sBAELtoH,EAAOsB,KAAK,sDAjEhBtB,GAAO0Z,MAAM,kCA4ErBo+F,EAAgBj5G,UAAUuiF,YAAc,WACpC,MAAOhkF,MAAKomG,KAShBsU,EAAgBj5G,UAAUqrH,sBAAwB,WAC9C,MAAI9sH,MAAKgkF,cACEhkF,KAAKq8G,iBAAiBjnF,eAAek0F,qBAGzC,MAOX5O,EAAgBj5G,UAAUsrH,gBAAkB,WACxC,GAAMR,GAAQvsH,KAAK6jF,iBAGnB,IAAqB,IAAjB0oC,EAAMvpH,OAKN,KAAM,IAAI0I,OACN,iEALJ,IAAMshH,GAAUT,EAAM,GAAGpN,QAEzBn/G,MAAKmsH,iBAAiBa,IAU9BtS,EAAgBj5G,UAAUwrH,eAAiB,WACvCjtH,KAAKmoH,mBAOTzN,EAAgBj5G,UAAUyrH,gBAAkB,WACxC,MAAOltH,MAAKg8G,sBAAsB5lB,YAWtCskB,EAAgBj5G,UAAU0rH,2BAA6B,SAC/CxjD,GACJ3pE,KAAK0gF,IAAIysC,2BAA2BxjD,IAgBxC+wC,EAAgBj5G,UAAU2rH,wBACpB,SAASC,EAAY9P,GACnB,MAAKv9G,MAAKw8G,KAIHx8G,KAAKs8G,kBACP8Q,wBAAwBC,EAAY9P,GAJ9B,GAAI7xG,OAAM4hH,EAAA5wC,wBAAAl8E,KAAAqB,EAAA,gCAAA5B,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAA,QAAA0B,GAAA1B,EAAA4B,GAAA,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,wCAAAlG,GAAAnH,EAAA,GAAAf,EAAAe,EAAA,GAAAN,GAAAM,IAAAf,GAAAe,EAAA,KAAAkH,EAAAlH,EAAA,GAAAQ,EAAAR,EAAA,GAAAV,EAAAU,EAAA,GAAAszB,EAAAtzB,EAAA,GAAAd,EAAAc,EAAA,IAAAT,GAAAS,IAAAd,GAAA,mBAAAL,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,OCjpFvBe,EAAS7B,OAAAyvG,EAAAhuG,WAAUyD,GAMnBsnH,aAMF,QAAAA,GAAY3sH,GAAM+0C,EAAA31C,KAAAutH,GACdvtH,KAAKY,KAAOA,EACZZ,KAAK4iE,MAAQ,EACb5iE,KAAKwtH,IAAM,EACXxtH,KAAK0jG,qDAQD+pB,GACqB,gBAAdA,GACP7qH,EAAO0Z,MACAtc,KAAKY,KADZ,6BAC6CZ,KAAK4iE,MAC9C6qD,GACIj+G,MAAMi+G,KACdztH,KAAKwtH,KAAOC,EACZztH,KAAK0jG,QAAQ7gG,KAAK4qH,GAClBztH,KAAK4iE,OAAS,MAAAnyD,IAAA,YAAArF,MAAA,WAUlB,MAAOpL,MAAKwtH,IAAMxtH,KAAK4iE,2CAQd4zB,GACTA,EAAOx2F,KAAKY,OACRwK,MAAOpL,KAAK0tH,YACZhqB,QAAS1jG,KAAK0jG,yCASlB1jG,KAAK0jG,WACL1jG,KAAKwtH,IAAM,EACXxtH,KAAK4iE,MAAQ,MAAA3iE,KASf0tH,aAQF,QAAAA,GAAY/R,EAAqB7xC,EAAO3oE,GAAG,GAAA20C,GAAA/1C,IAAA21C,GAAA31C,KAAA2tH,GAKvC3tH,KAAK+pE,MAAQA,EAOb/pE,KAAK4tH,GAAKxsH,EAQVpB,KAAK6tH,WAAa,EAMlB7tH,KAAK8tH,QAAU,GAAIP,GAAkB,gBAYrCvtH,KAAK+tH,iBAAmB,GAAIp6F,KAO5B3zB,KAAKguH,qBAAuBpS,EAU5B57G,KAAKiuH,sBAELjuH,KAAKkuH,mBAAqB,SAAC12F,EAAK+F,GACxBwY,EAAKg0B,QAAUvyC,EAAIuyC,OACnBh0B,EAAKo4E,mBAAmB5wF,GAIhC,IAAMiqC,GAAao0C,EAAoBwS,WAEvC5mD,GAAWruC,WAAW9C,2BAClBr2B,KAAKkuH,oBAEJluH,KAAK+pE,QACN/pE,KAAKquH,YAAc,SAAA5rH,GAAA,MAAMszC,GAAKg4E,iBAAiB51F,OAAO11B,IACtD+kE,EAAWzxC,GAAG0zC,EAAA3oC,UAA4B9gC,KAAKquH,aAE/CruH,KAAKsuH,sBACC,SAAC7rH,EAAIiO,GAAL,MAAcqlC,GAAKw4E,oBAAoB9rH,EAAIiO,IACjD82D,EAAWzxC,GACPihF,EAAAr6B,qBACA38E,KAAKsuH,6EASE59G,GACf,GAAKA,GAcL,GARI89G,EAAAlmH,EAAeR,yBACX4I,EAAKpO,WAAaoO,EAAKpO,UAAUU,QACjChD,KAAK8tH,QAAQW,QAAQ/9G,EAAKpO,UAAU,GAAGosH,KAI/C1uH,KAAK6tH,YAAc,EAEf7tH,KAAK6tH,YAAc7tH,KAAK4tH,GAAI,CAC5B,GAAIY,EAAAlmH,EAAeR,wBAAyB,CACxC,GAAM0/D,GAAaxnE,KAAKguH,qBAAqBI,YAEvCO,GACFvoB,IAAKpmG,KAAK+pE,MACVrzC,KAAM8wC,EAAW48C,sBAerB,IAZI1zG,EAAKpO,WAAaoO,EAAKpO,UAAUU,QACjCjC,OAAOsmE,OAAOsnD,GACVC,mBACIl+G,EAAKpO,UAAU,GAAGssH,mBACtBC,oBACIn+G,EAAKpO,UAAU,GAAGusH,oBACtBC,cAAep+G,EAAKpO,UAAU,GAAG0b,OAIzChe,KAAK8tH,QAAQiB,aAAaJ,GAEtB3uH,KAAK+pE,MAAO,CAEZ,GAAMilD,GAAgBhvH,KACjBguH,qBAAqBiB,gBAAgBhB,cAE1C,KAAKz+G,MAAMw/G,GAAgB,CACvB,GAAME,GACAlvH,KAAK8tH,QAAQJ,YAAcsB,CAGjCL,GAAAQ,mBACI/jH,MAAO8jH,QAGZ,CAEH,GAAME,GAAepvH,KAAKqvH,yBACpBC,EAActvH,KAAK8tH,QAAQJ,WAEjC1tH,MAAKiuH,eAAiBqB,EAAcF,EAE/B5/G,MAAM8/G,IAAiB9/G,MAAM4/G,KAE9BT,EAAAY,qBACInkH,MAAOpL,KAAKiuH,iBAKxBuB,EAAAlnH,EAAW0sB,UAAUmF,UAAU84C,EAAA3qE,EAAeqmH,GAGlD3uH,KAAKyvH,sBAlEL7sH,GAAO0Z,MAAM,eAAA7L,IAAA,yBAAArF,MAAA,WA6EjB,GAAIw3D,GAAQ,EAAG4qD,EAAM,EADA52F,KAAAC,KAAAC,QAAA,KAKrB,OAAAC,GAAAC,EAAwBh3B,KAAK+tH,iBAAiB92F,SAA9CC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAwD,IAA7C84F,GAA6C34F,EAAA3rB,MAC9CukH,EAAMD,EAAUhC,WAEjBl+G,OAAMmgH,KACPnC,GAAOmC,EACP/sD,GAAS,EACT8sD,EAAUvwG,UAXG,MAAAqH,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAerB,MAAO02F,GAAM5qD,8CAUGngE,EAAIiO,GACpB,GAAMk/G,GAAmC,gBAAhBl/G,GAAKm/G,OAC1BC,EAAS9vH,KAAK+tH,iBAAiB5sH,IAAIsB,IAElCqtH,GAAUF,IACXE,EAAS,GAAIvC,GAAqB9qH,EAAzB,aACTzC,KAAK+tH,iBAAiBv4F,IAAI/yB,EAAIqtH,IAG9BF,EACAE,EAAOrB,QAAQ/9G,EAAKm/G,QACbC,GACP9vH,KAAK+tH,iBAAiB51F,OAAO11B,4CASjCzC,KAAK8tH,QAAQ3uG,QACTnf,KAAK+tH,kBACL/tH,KAAK+tH,iBAAiBgC,QAE1B/vH,KAAK6tH,WAAa,KAAAp9G,IAAA,UAAArF,MAAA,WAQlB,GAAMo8D,GAAaxnE,KAAKguH,qBAAqBI,WAE7C5mD,GAAWruC,WAAW7C,8BAClBt2B,KAAKkuH,oBACJluH,KAAK+pE,QACNvC,EAAWn/B,IACP2uE,EAAAr6B,qBACA38E,KAAKsuH,uBACT9mD,EAAWn/B,IACPohC,EAAA3oC,UACA9gC,KAAKquH,uBAaA2B,aAOjB,QAAAA,GAAYxoD,EAAYpmE,GAAG,GAAAwnE,GAAA5oE,IAAA21C,GAAA31C,KAAAgwH,GAOvBhwH,KAAK4tH,GAAKxsH,EAENA,EAAI,GACJwB,EAAOsB,KAAP,0CAAsD9C,EAAtD,YAcJpB,KAAK6tH,WAAa,EAOlB7tH,KAAKouH,YAAc5mD,EAOnBxnE,KAAKiwH,mBACC,GAAI1C,GAAkB,iCAO5BvtH,KAAKkwH,qBACC,GAAI3C,GAAkB,mCAO5BvtH,KAAKmwH,mBACC,GAAI5C,GAAkB,iCAO5BvtH,KAAKowH,qBACC,GAAI7C,GAAkB,mCAO5BvtH,KAAKqwH,gBACC,GAAI9C,GAAkB,6BAO5BvtH,KAAKswH,kBACC,GAAI/C,GAAkB,+BAO5BvtH,KAAKuwH,oBACC,GAAIhD,GAAkB,6BAO5BvtH,KAAKwwH,iBACC,GAAIjD,GAAkB,8BAO5BvtH,KAAKywH,mBACC,GAAIlD,GAAkB,gCAO5BvtH,KAAK0wH,cAAgB,GAAInD,GAAkB,6BAQ3CvtH,KAAK2wH,oBACC,GAAIpD,GAAkB,oCAO5BvtH,KAAK4wH,aAAe,GAAIrD,GAAkB,4BAQ1CvtH,KAAK6wH,mBACC,GAAItD,GAAkB,mCAQ5BvtH,KAAK8wH,uBACC,GAAIvD,GAAkB,0BAQ5BvtH,KAAK+wH,uBACC,GAAIxD,GAAkB,iCAO5BvtH,KAAKgxH,sBACC,GAAIzD,GAAkB,yBAQ5BvtH,KAAKixH,sBACC,GAAI1D,GAAkB,gCAQ5BvtH,KAAKkxH,OAAS,GAAI3D,GAAkB,eAEpCvtH,KAAKmxH,qBAAuB,SAAAzgH,GAAA,MAAQk4D,GAAKulD,mBAAmBz9G,IAC5D82D,EAAWzxC,GACPihF,EAAAp6B,oBACA58E,KAAKmxH,sBAETnxH,KAAKoxH,oBAAsB,WACvBxuH,EAAOyZ,MAAM,uCACbusD,EAAK6mD,iBACL7mD,EAAKqmD,gBAAgBQ,iBACrB7mD,EAAKyoD,gBAAgB5B,kBAEzBjoD,EAAWzxC,GACP0zC,EAAA3pC,WACA9/B,KAAKoxH,qBAETpxH,KAAKsxH,uBAAyB,SAACC,EAAWvuC,QAIlCA,IACApgF,EAAOsB,KAAK,+BACZ0kE,EAAK4oD,sBAGbhqD,EAAWzxC,GACP0zC,EAAAnqC,cACAt/B,KAAKsxH,wBAETtxH,KAAKivH,gBACC,GAAItB,GAAmB3tH,QAAuBoB,GAEpDpB,KAAKqxH,gBACC,GAAI1D,GAAmB3tH,QAAsBoB,IAxM/CwB,EAAOsB,KAAK,6CAAAvD,GAAAV,IAAAwQ,IAAA,qBAAArF,MAAA,SAiNDsF,GAEf,GAAKA,EAAL,CAMA,GAAMq5D,GAAQ/pE,KAAKouH,YAAYpqC,cACzBytC,EAAWzxH,KAAKouH,YAAYhK,qBAElC,IAAKr6C,KAAS0nD,EAAW,GAAzB,CAeA,GAAMC,GAAUhhH,EAAKghH,QACfhgD,EAAYhhE,EAAKghE,UACjBigD,EAAajhH,EAAKihH,WAClBC,EAAYlhH,EAAKmhH,UACjBliD,EAAaj/D,EAAKi/D,UAExB,IAAK+hD,EAIE,GAAKhgD,EAIL,GAAKigD,EAIL,GAAKC,EAIL,GAAKjiD,GA2DZ,GArDA3vE,KAAKiwH,mBAAmBxB,QAAQiD,EAAQziD,MAAM6iD,QAC9C9xH,KAAKkwH,qBAAqBzB,QAAQiD,EAAQziD,MAAMomC,UAEhDr1G,KAAKmwH,mBAAmB1B,QAAQiD,EAAQ3nF,MAAM+nF,QAC9C9xH,KAAKowH,qBAAqB3B,QAAQiD,EAAQ3nF,MAAMsrE,UAE5CmZ,EAAAlmH,EAAeV,gCACf5H,KAAKqwH,gBAAgB5B,QAAQ/8C,EAAUogD,QACvC9xH,KAAKswH,kBAAkB7B,QAAQ/8C,EAAU2jC,WAG7Cr1G,KAAKwwH,iBAAiB/B,QAAQkD,EAAWG,QACzC9xH,KAAKywH,mBAAmBhC,QAAQkD,EAAWtc,UAC3Cr1G,KAAKuwH,oBAAoB9B,QAAQkD,EAAWI,OAE5C/xH,KAAKkxH,OAAOzC,QAAQ/9G,EAAKqmG,mBAErB6a,IACA5xH,KAAK0wH,cAAcjC,QACfzuH,KAAKgyH,sBACDJ,KAA+BK,EAAA9mF,SACvCnrC,KAAK2wH,oBAAoBlC,QACrBzuH,KAAKgyH,sBACDJ,KAA+BK,EAAA7mF,UAEvCprC,KAAK4wH,aAAanC,QACdzuH,KAAKgyH,sBACDJ,KAA6BK,EAAA9mF,SACrCnrC,KAAK6wH,mBAAmBpC,QACpBzuH,KAAKgyH,sBACDJ,KAA6BK,EAAA7mF,WAGrCukC,IACA3vE,KAAK8wH,uBAAuBrC,QACxBzuH,KAAKkyH,yBACDviD,KAAgCsiD,EAAA9mF,SAExCnrC,KAAK+wH,uBAAuBtC,QACxBzuH,KAAKkyH,yBACDviD,KAAgCsiD,EAAA7mF,UAExCprC,KAAKgxH,sBAAsBvC,QACvBzuH,KAAKkyH,yBACDviD,KAA8BsiD,EAAA9mF,SAEtCnrC,KAAKixH,sBAAsBxC,QACvBzuH,KAAKkyH,yBACDviD,KAA8BsiD,EAAA7mF,WAG1CprC,KAAK6tH,YAAc,EAEf7tH,KAAK6tH,YAAc7tH,KAAK4tH,GAAI,CAE5B,GAAMe,IACFvoB,IAAKr8B,EACLrzC,KAAM+6F,EAGN/gH,GAAKpO,WAAaoO,EAAKpO,UAAUU,QACjCjC,OAAOsmE,OAAOsnD,GACVC,mBAAoBl+G,EAAKpO,UAAU,GAAGssH,mBACtCC,oBAAqBn+G,EAAKpO,UAAU,GAAGusH,oBACvCC,cAAep+G,EAAKpO,UAAU,GAAG0b,OAIzChe,KAAKiwH,mBAAmBlB,aAAaJ,GACrC3uH,KAAKkwH,qBAAqBnB,aAAaJ,GAEvC3uH,KAAKmwH,mBAAmBpB,aAAaJ,GACrC3uH,KAAKowH,qBAAqBrB,aAAaJ,GAEnCH,EAAAlmH,EAAeV,gCACf5H,KAAKqwH,gBAAgBtB,aAAaJ,GAClC3uH,KAAKswH,kBAAkBvB,aAAaJ,IAExC3uH,KAAKwwH,iBAAiBzB,aAAaJ,GACnC3uH,KAAKywH,mBAAmB1B,aAAaJ,GACrC3uH,KAAKuwH,oBAAoBxB,aAAaJ,GAEtC3uH,KAAK0wH,cAAc3B,aAAaJ,GAC3Bn/G,MAAMxP,KAAK2wH,oBAAoBjD,cAChC1tH,KAAK2wH,oBAAoB5B,aAAaJ,GAE1C3uH,KAAK4wH,aAAa7B,aAAaJ,GAC1Bn/G,MAAMxP,KAAK6wH,mBAAmBnD,cAC/B1tH,KAAK6wH,mBAAmB9B,aAAaJ,GAGzC3uH,KAAK8wH,uBAAuB/B,aAAaJ,GACpCn/G,MAAMxP,KAAK+wH,uBAAuBrD,cACnC1tH,KAAK+wH,uBAAuBhC,aAAaJ,GAE7C3uH,KAAKgxH,sBAAsBjC,aAAaJ,GACnCn/G,MAAMxP,KAAKixH,sBAAsBvD,cAClC1tH,KAAKixH,sBAAsBlC,aAAaJ,GAG5C3uH,KAAKkxH,OAAOnC,aAAaJ,GAEzBa,EAAAlnH,EAAW0sB,UAAUmF,UAAU84C,EAAA3qE,EAAeqmH,GAE9C3uH,KAAKyvH,sBA7GL7sH,GAAO0Z,MAAM,qBAJb1Z,GAAO0Z,MAAM,sBAJb1Z,GAAO0Z,MAAM,uBAJb1Z,GAAO0Z,MAAM,sBAJb1Z,GAAO0Z,MAAM,qBA9Bb1Z,GAAO0Z,MAAM,eAAA7L,IAAA,2BAAArF,MAAA,SA0KI+mH,EAAiBt2F,EAAS6wC,GAC/C,GAAI0lD,GAAgB,EAChB5F,EAAY,EACV6F,EAAOryH,KAAKouH,YAAYvrC,WAH4BnrD,KAAAC,KAAAC,QAAA,KAK1D,OAAAC,GAAAC,EAAqB/2B,OAAOg3B,KAAKo6F,GAAjCj7F,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAmD,IAAxC46F,GAAwCz6F,EAAAzsB,KAC/C,IAAIywB,EAAUy2F,IAAWD,EAAOC,IAAWD,EAAM,CAC7C,GAAMtvC,GACAlnD,EACI,KACA77B,KAAKouH,YAAYtqC,mBAAmBwuC,GACxCC,EAAmBJ,EAAgBG,EAGzC,KAAKz2F,GAAWknD,IAAgBwvC,EAAkB,CAC9C,GAAMC,GAAgBxyH,KAAKyyH,6BACvBF,EAAkBxvC,EAAarW,EAE9Bl9D,OAAMgjH,KACPJ,GAAiBI,EACjBhG,GAAa,MApB6B,MAAAhmG,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IA0B1D,MAAOw6F,GAAgB5F,uDAcEkG,EAAQ3vC,EAAarW,GAC9C,GAAIx9B,GAAQnuC,OAAOg3B,KAAK26F,GAAQ3oH,IAAI,SAAAywB,GAAA,MAAQvsB,QAAOusB,KAC/C47C,EAAc,KAIZ5+C,EAAMx3B,KAAKouH,YAAYzM,yBAEzB5+B,IACA3M,EAAc2M,EAAY4vC,qBAAqBC,EAAAxiH,MAE3C8+B,EACMA,EAAME,OACJ,SAAA5U,GAAA,MAAQ47C,GAAY1mC,KAChB,SAAA+6B,GAAA,OACKA,EAAMqa,WACAra,EAAM4/C,YAAc7vF,GACpBiwC,EAAMiC,YAAcA,QAG/C0J,EAAcp2E,KAAKouH,YAAYzjD,eAAeioD,EAAAxiH,GAC9C8+B,EACMA,EAAME,OACJ,SAAA5U,GAAA,MAAQ47C,GAAY1mC,KAChB,SAAA+6B,GAAA,OACKA,EAAMqa,WACAttD,EAAI4yF,aAAa3/C,KAAWjwC,GAC5BiwC,EAAMiC,YAAcA,MAG/C,IAAI0lD,GAAgB,EAChBS,EAAgB,EA/BqC/5F,KAAAC,KAAAC,QAAA,KAiCzD,OAAAC,GAAAC,EAAmBgW,EAAnBhY,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,KAA0B,IAAf0B,GAAevB,EAAA7tB,MAChB0nH,EACA7kH,OAAOykH,EAAOl4F,GAAMu1C,QAAU9hE,OAAOykH,EAAOl4F,GAAMq1C,QAGnDrgE,MAAMsjH,IAAmBA,EAAiB,IAC3CV,GAAiBU,EACjBD,GAAiB,IAxCgC,MAAArsG,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,IA4CzD,MAAOo5F,GAAgBS,gDAaLjB,EAAW/1F,EAAS6wC,GACtC,GAAIqmD,GAAa,EACbvG,EAAY,EACV6F,EAAOryH,KAAKouH,YAAYvrC,WAHmBzpD,KAAAC,KAAAC,QAAA,KAKjD,OAAAC,GAAAC,EAAqBz4B,OAAOg3B,KAAK65F,GAAjC16F,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,KAA6C,IAAlCk5F,GAAkC/4F,EAAAnuB,KACzC,IAAIywB,EAAUy2F,IAAWD,EAAOC,IAAWD,EAAM,CAC7C,GAAMtvC,GACAlnD,EACI,KAAO77B,KAAKouH,YAAYtqC,mBAAmBwuC,GAC/CU,EAAYpB,EAAUU,EAG5B,KAAKz2F,GAAWknD,IAAgBiwC,EAAW,CACvC,GAAMC,GACAjzH,KAAKkzH,0BACHF,EAAWjwC,EAAarW,EAE3Bl9D,OAAMyjH,KACPF,GAAcE,EACdzG,GAAa,MApBoB,MAAAhmG,GAAA6S,KAAAC,EAAA9S,EAAA,aAAA4S,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,WAAA4B,EAAA,KAAAC,IA0BjD,MAAOy5F,GAAavG,oDAcEkG,EAAQ3vC,EAAarW,GAC3C,GAAIx9B,GAAQnuC,OAAOg3B,KAAK26F,GAAQ3oH,IAAI,SAAAywB,GAAA,MAAQvsB,QAAOusB,KAC/C47C,EAAc,KAIZ5+C,EAAMx3B,KAAKouH,YAAYzM,yBAEzB5+B,IACA3M,EAAc2M,EAAY4vC,qBAAqBC,EAAAxiH,MAE3C8+B,EACMA,EAAME,OACJ,SAAA5U,GAAA,MAAQ47C,GAAY1mC,KAChB,SAAA+6B,GAAA,OAAUA,EAAMqa,WACTra,EAAM4/C,YAAc7vF,GACpBiwC,EAAMiC,YAAcA,QAG3C0J,EAAcp2E,KAAKouH,YAAYzjD,eAAeioD,EAAAxiH,GAC9C8+B,EACMA,EAAME,OACJ,SAAA5U,GAAA,MAAQ47C,GAAY1mC,KAChB,SAAA+6B,GAAA,OAAUA,EAAMqa,WACTttD,EAAI4yF,aAAa3/C,KAAWjwC,GAC5BiwC,EAAMiC,YAAcA,MAG3C,IAAIqmD,GAAa,EACbF,EAAgB,EA7BkCp4F,KAAAC,KAAAC,QAAA,KA+BtD,OAAAC,GAAAC,EAAmBqU,EAAnBhY,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,KAA0B,IAAfD,GAAeI,EAAAxvB,MAChB+nH,EAAcllH,OAAOykH,EAAOl4F,KAG7BhrB,MAAM2jH,IAAgBA,EAAc,IACrCJ,GAAcI,EACdN,GAAiB,IArC6B,MAAArsG,GAAAkU,KAAAC,EAAAnU,EAAA,aAAAiU,GAAAI,EAAApD,QAAAoD,EAAApD,SAAA,WAAAiD,EAAA,KAAAC,IAyCtD,MAAOo4F,GAAaF,8CAWpB7yH,KAAKyvH,iBACLzvH,KAAKivH,gBAAgBQ,0DAQrBzvH,KAAKiwH,mBAAmB9wG,QACxBnf,KAAKkwH,qBAAqB/wG,QAE1Bnf,KAAKmwH,mBAAmBhxG,QACxBnf,KAAKowH,qBAAqBjxG,QAE1Bnf,KAAKqwH,gBAAgBlxG,QACrBnf,KAAKswH,kBAAkBnxG,QAEvBnf,KAAKwwH,iBAAiBrxG,QACtBnf,KAAKywH,mBAAmBtxG,QACxBnf,KAAKuwH,oBAAoBpxG,QAEzBnf,KAAK0wH,cAAcvxG,QACnBnf,KAAK2wH,oBAAoBxxG,QACzBnf,KAAK4wH,aAAazxG,QAClBnf,KAAK6wH,mBAAmB1xG,QAExBnf,KAAK8wH,uBAAuB3xG,QAC5Bnf,KAAK+wH,uBAAuB5xG,QAC5Bnf,KAAKgxH,sBAAsB7xG,QAC3Bnf,KAAKixH,sBAAsB9xG,QAE3Bnf,KAAKkxH,OAAO/xG,QAEZnf,KAAK6tH,WAAa,KAAAp9G,IAAA,UAAArF,MAAA,WAOlBpL,KAAKouH,YAAY/lF,IACbohC,EAAA3pC,WACA9/B,KAAKoxH,qBACTpxH,KAAKouH,YAAY/lF,IACb2uE,EAAAp6B,oBACA58E,KAAKmxH,sBACTnxH,KAAKouH,YAAY/lF,IACbohC,EAAAnqC,cACAt/B,KAAKsxH,wBACTtxH,KAAKivH,gBAAgBx4F,UACrBz2B,KAAKqxH,gBAAgB56F,gGCp5B7B,QAAA10B,GAAAqxH,EAAAn1G,GACAje,KAAAozH,aACApzH,KAAAqzH,oBACAp1G,MAAAo1G,mBACAp1G,EAAAo1G,iBACArzH,KAAAszH,cACAr1G,KAAAq1G,cACAr1G,EAAAq1G,cAAA,IACAtzH,KAAAuzH,eACAt1G,KAAAs1G,eACAt1G,EAAAs1G,eAAA,IAGAxyH,OAAAg3B,KAAAj2B,EAAAK,QAAAkM,QACA,SAAA69E,GAEAlsF,KADA8B,EAAAK,OAAA+pF,IACA,SAAAA,GACAlsF,KAAAwzH,KAAAvoH,MAAAjL,KAAA+K,YACSsC,KAAArN,KAAAksF,IACJ7+E,KAAArN,OAMLA,KAAAyzH,oBAAA,KAMAzzH,KAAA+6C,SAKA/6C,KAAA0zH,SAAA,EAMA1zH,KAAA2zH,eA1FA,GAAA7xH,GAAA5B,EAAA,GA2GA6B,GAAAN,UAAAgsB,UAAA,SAAAmmG,GACA,IACA,MAAArwG,MAAAkK,UAAAmmG,GACK,MAAAt3G,GACL,uCAkBAva,EAAAN,UAAAoyH,iBACA,SAAA3nC,GAEA,OADA9vE,GAAA,GACA/b,EAAA,EAAA0N,EAAAhD,UAAA/H,OAA2C3C,EAAA0N,EAAS1N,IAAA,CACpD,GAAAuN,GAAA7C,UAAA1K,IAEAL,KAAAqzH,kBAAAnnC,IAAApqF,EAAAK,OAAAuU,OACA,gBAAA9I,KACAA,EAAA5N,KAAAytB,UAAA7f,IAEAwO,GAAAxO,EACAvN,GAAA0N,EAAA,IACAqO,GAAA,KAGA,MAAAA,GAAApZ,OAAAoZ,EAAA,MASAra,EAAAN,UAAA+xH,KAAA,WAGA,GAAAp3G,GAAApc,KAAA6zH,iBAAA5oH,MAAAjL,KAAA+K,UACA,IAAAqR,EAAA,CAEA,GAAA03G,GACA9zH,KAAA+6C,MAAA/3C,OAAAhD,KAAA+6C,MAAA/6C,KAAA+6C,MAAA/3C,OAAA,WAGA,gBAAA8wH,KAAAh6G,KAAAg6G,IAEA13G,EACA,gBAAA03G,GACAA,EAAAlxD,OAAA,EAEA5iE,KAAA+6C,MAAA/6C,KAAA+6C,MAAA/3C,OAAA,IACA8W,KAAAsC,EACAwmD,MAAA,IAIA5iE,KAAA+6C,MAAAl4C,KAAAuZ,GACApc,KAAA0zH,UAAAt3G,EAAApZ,QAIAhD,KAAA0zH,UAAA1zH,KAAAuzH,gBACAvzH,KAAA+zH,WAAA,IAQAhyH,EAAAN,UAAAmwB,MAAA,WACA5xB,KAAAg0H,8BAQAjyH,EAAAN,UAAAuyH,2BAAA,WACAh0H,KAAAyzH,sBACA5uH,OAAAuf,aAAApkB,KAAAyzH,qBACAzzH,KAAAyzH,oBAAA,MAGAzzH,KAAAyzH,oBACA5uH,OAAAmI,WACAhN,KAAA+zH,OAAA1mH,KACArN,SAAA,GACAA,KAAAszH,gBAOAvxH,EAAAN,UAAA0iB,MAAA,WACAnkB,KAAA+zH,WACA,IAeAhyH,EAAAN,UAAAsyH,OAAA,SAAAE,EAAAC,GAEAl0H,KAAA0zH,SAAA,IAAA1zH,KAAAozH,WAAAe,WAAAF,KAGAj0H,KAAAozH,WAAAe,WAEAn0H,KAAA2zH,YAAA3wH,SACAhD,KAAA2zH,YAAAtlH,QACA,SAAA+lH,GACAp0H,KAAAozH,WAAAiB,UAAAD,IACqB/mH,KAAArN,OAGrBA,KAAA2zH,gBAGA3zH,KAAAozH,WAAAiB,UAAAr0H,KAAA+6C,QAEA/6C,KAAA2zH,YAAA9wH,KAAA7C,KAAA+6C,OAGA/6C,KAAA+6C,SACA/6C,KAAA0zH,SAAA,GAGAQ,GACAl0H,KAAAg0H,8BAQAjyH,EAAAN,UAAA42B,KAAA,WAEAr4B,KAAA+zH,WAAA,IAGAp0H,EAAAD,QAAAqC,sYCxRMuyH,4FAiDAC,EAAiB,aAAAt0H,GAlCnB,QAAAu0H,KAAc7+E,EAAA31C,KAAAw0H,EAAA,IAAAz+E,qKAAA/1C,MAAAw0H,EAAAx+E,WAAAj1C,OAAAk1C,eAAAu+E,IAAAh0H,KAAAR,MAAA,OAKV+1C,GAAK0+E,cALK1+E,QAkCK,UAAA91C,EAAA4B,GAAA,qBAAAA,IAAA,OAAAA,EAAA,SAAA4M,WAAA,iEAAA5M,GAAA5B,GAAAwB,UAAAV,OAAAkqC,OAAAppC,KAAAJ,WAAAypC,aAAA9/B,MAAAnL,EAAAiB,YAAA,EAAA8mC,UAAA,EAAA/mC,cAAA,KAAAY,IAAAd,OAAA60E,eAAA70E,OAAA60E,eAAA31E,EAAA4B,GAAA5B,EAAA+1C,UAAAn0C,MAtCMyyH,GAIXv+E,qCAaJ1X,GAAsB,GAAX3tB,GAAW3F,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,KAC5B/K,MAAKy0H,WAAW5xH,MACZw7B,YACA3tB,qDASJ,GAAMgkH,GAAiB10H,KAAKy0H,WAAWnqH,OAIvC,OAFAtK,MAAKy0H,cAEEC,YAUTC,aAIF,QAAAA,KAAch/E,EAAA31C,KAAA20H,GACV30H,KAAKixG,YACLjxG,KAAK40H,kBAAoB,GAAI1/F,KAK7Bl1B,KAAK60H,qBACDC,cAAeC,EAAAzsH,EAASyqB,kBACxBrvB,UAAWN,UAAUM,UACrB6yC,YAAassD,EAAAv6F,EAAe/B,kBAGhCvG,KAAK40H,kBAAkBpgG,IAAI+/F,+CAQrBl2F,GAAsB,GAAX3tB,GAAW3F,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MACtBiqH,EAAej0H,OAAOsmE,UAAWrnE,KAAK60H,oBAAqBnkH,EAEjE1Q,MAAK40H,kBAAkBvmH,QACnB,SAAA2mB,GAAA,MACIA,GAAUmF,UACNkE,EACArJ,IAAcu/F,EAAiB7jH,EAAOskH,uCASlDT,EAAeU,oBACfj1H,KAAK40H,kBAAkB7E,QACvB/vH,KAAKixG,eAAWxgG,IAAA,uBAAArF,MAAA,SAQCY,GAAU,GAAA48D,GAAA5oE,IACvBA,MAAKixG,WAGTjxG,KAAK40H,kBAAoB,GAAI1/F,KAAIlpB,GACjCuoH,EAAeU,oBAAoB5mH,QAC/B,SAAA26F,GAAA,MAAMpgC,GAAKzuC,UAAU6uE,EAAG3qE,UAAW2qE,EAAGt4F,wDAOvBw+E,GACnBnuF,OAAOsmE,OAAOrnE,KAAK60H,oBAAqB3lC,WAIhD7mF,GAAAC,EAAA,GAAmBqsH,oBCjInB,GAAM5/E,GAAa70C,EAAQ,IASrBkuD,GACF,UAAW,QAAS,UAAW,QAAS,QAAS,WAAY,OAC7D,SAAU,QAAS,WAAY,MAAO,OAAQ,WAAY,UAC1D,UAAW,WAAY,QAAS,UAAW,MAAO,OAAQ,YAC1D,UAAW,OAAQ,OAAQ,QAAS,UAAW,QAAS,WAAY,QACpE,SAAU,UAAW,QAAS,SAAU,SAAU,SAAU,QAC5D,SAAU,SAAU,WAAY,SAAU,SAAU,SAAU,UAC9D,WAAY,SAAU,SAAU,WAAY,QAAS,QAAS,QAC9D,UAAW,WAAY,QAAS,QAAS,OAAQ,QAAS,QAAS,SACnE,QAAS,SAAU,QAAS,KAAM,SAAU,OAAQ,QAAS,SAC7D,SAAU,SAAU,OAAQ,SAAU,UAAW,WAAY,UAC7D,QAAS,SAAU,OAAQ,QAAS,OAAQ,QAAS,YACrD,aAAc,OAAQ,QAAS,QAAS,aAAc,aACtD,UAAW,SAAU,OAAQ,QAAS,YAAa,YAAa,YAChE,aAAc,aAAc,cAAe,YAAa,UACxD,WAAY,SAAU,SAAU,SAAU,aAAc,MAAO,UAC/D,UAAW,SAAU,SAAU,UAAW,UAAW,MAAO,OAAQ,QACpE,SAAU,QAAS,SAAU,SAAU,SAAU,QAAS,SAAU,QACpE,QAAS,QAAS,QAAS,SAAU,QAAS,UAAW,OAAQ,WACjE,OAAQ,SAAU,OAAQ,QAAS,SAAU,SAAU,UAAW,SAClE,QAAS,QAAS,SAAU,QAAS,SAAU,SAAU,UACzD,SAAU,SAAU,QAAS,QAAS,QAAS,QAAS,QAAS,UACjE,SAAU,SAAU,QAAS,UAAW,UAAW,OAAQ,QAAS,OACpE,QAAS,QAAS,OAAQ,SAAU,MAAO,OAAQ,MAAO,SAC1D,WAAY,QAAS,QAAS,YAAa,YAAa,WAAY,QACpE,WAAY,YAAa,SAAU,SAAU,OAAQ,QAAS,SAC9D,WAAY,WAAY,WAAY,WAAY,SAAU,QAAS,QACnE,SAAU,QAAS,SAAU,QAAS,QAAS,SAAU,SAAU,OACnE,UAAW,WAAY,YAAa,WAAY,UAAW,YAC3D,OAAQ,UAAW,UAAW,QAAS,QAAS,SAAU,UAC1D,aAAc,SAAU,YAAa,YAAa,UAAW,aAC7D,WAAY,UAAW,SAAU,SAAU,OAAQ,QAAS,MAC5D,UAAW,UAAW,OAAQ,YAAa,UAAW,QAAS,SAC/D,QAAS,MAAO,SAAU,UAAW,OAAQ,QAAS,UAAW,QACjE,SAAU,QAAS,OAAQ,SAAU,UAAW,SAAU,UAAW,OACrE,OAAQ,SAAU,UAAW,UAAW,OAAQ,MAAO,SAAU,SACjE,QAAS,QAAS,UAAW,UAAW,MAAO,OAAQ,SAAU,WACjE,SAAU,QAAS,UAAW,SAAU,SAAU,OAAQ,UAC1D,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,YAC1D,SAAU,SAAU,UAAW,YAAa,WAAY,UACxD,UAAW,UAAW,SAAU,SAAU,SAAU,SAAU,SAC9D,MAAO,QAAS,OAAQ,OAAQ,QAAS,QAAS,OAAQ,QAAS,OACnE,SAAU,SAAU,UAAW,SAAU,QAAS,UAAW,QAC7D,OAAQ,aAAc,SAAU,SAAU,WAAY,OAAQ,UAC9D,OAAQ,QAAS,QAAS,MAAO,WAAY,WAAY,UACzD,SAAU,QAAS,SAAU,WAAY,aAAc,YACvD,UAAW,WAAY,WAAY,WAAY,UAAW,SAC1D,WAAY,UAAW,QAAS,OAAQ,QAAS,SAAU,UAC3D,WAAY,QAAS,SAAU,OAAQ,UAAW,SAAU,QAC5D,QAAS,SAAU,QAAS,SAAU,SAAU,UAAW,SAAU,OACrE,SAAU,QAAS,SAAU,QAAS,SAAU,QAAS,SACzD,UAAW,QAAS,KAAM,SAAU,QAAS,SAAU,SAAU,QACjE,OAAQ,OAAQ,SAAU,WAAY,UAAW,SAAU,QAC3D,UAAW,QAAS,SAAU,SAAU,UAAW,SAAU,SAC7D,UAAW,UAAW,UAAW,QAAS,UAAW,UAAW,SAChE,SAAU,UAAW,UAAW,SAAU,UAAW,UAAW,UAChE,SAAU,UAAW,UAAW,QAAS,OAAQ,QAAS,OAAQ,QAClE,SAAU,UAAW,QAAS,UAAW,YAAa,SAAU,UAChE,WAAY,UAAW,QAAS,UAAW,WAAY,QAAS,YAChE,QAAS,QAAS,SAAU,WAAY,SAAU,QAAS,QAC3D,SAAU,QAAS,SAAU,QAAS,OAAQ,MAAO,QAAS,SAC9D,QAAS,WAAY,SAAU,UAAW,SAAU,OAAQ,QAC5D,SAAU,UAAW,OAAQ,QAAS,UAAW,OAAQ,UACzD,SAAU,SAAU,UAAW,SAAU,UAAW,UAAW,SAC/D,SAAU,SAAU,UAAW,UAAW,aAAc,UACxD,UAAW,UAAW,OAAQ,QAAS,UAAW,SAAU,WAC5D,SAAU,QAAS,SAAU,QAAS,SAAU,WAAY,SAC5D,UAAW,WAAY,UAAW,SAAU,UAAW,QAAS,YAChE,SAAU,WAAY,WAAY,UAAW,WAAY,SACzD,UAAW,SAAU,SAAU,OAAQ,WAAY,QAAS,UAC5D,UAAW,SAAU,YAAa,YAAa,UAAW,SAC1D,WAAY,WAAY,YAAa,YAAa,WAAY,UAC9D,QAAS,QAAS,SAAU,UAAW,QAAS,SAAU,UAC1D,UAAW,YAAa,YAAa,QAAS,SAAU,QAAS,OACjE,QAAS,WAAY,QAAS,SAAU,WAAY,SAAU,WAC9D,UAAW,WAAY,UAAW,UAAW,UAAW,YACxD,QAAS,UAAW,WAAY,QAAS,OAAQ,UAAW,UAC5D,UAAW,UAAW,UAAW,OAAQ,WAAY,WAAY,QACjE,QAAS,SAAU,UAAW,aAAc,YAAa,aACzD,YAAa,YAAa,WAAY,aAAc,cACpD,UAAW,QAAS,QAAS,SAAU,QAAS,SAAU,QAC1D,WAAY,QAAS,SAAU,QAAS,aAAc,QAAS,WAC/D,QAAS,QAAS,SAAU,UAAW,UAAW,WAAY,OAC9D,UAAW,UAAW,aAAc,aAAc,UAAW,OAC7D,SAAU,QAAS,SAAU,QAAS,YAAa,WAAY,UAC/D,QAAS,UAAW,WAAY,SAAU,QAAS,QAAS,OAAQ,OACpE,QAAS,OAAQ,UAAW,QAAS,UAAW,SAAU,OAAQ,SAClE,SAAU,WAAY,aAAc,SAAU,SAAU,SAAU,QAClE,SAAU,YAAa,aAAc,WAAY,SAAU,OAC3D,UAAW,SAAU,WAAY,UAAW,SAAU,SAAU,SAChE,SAAU,YAAa,UAAW,UAAW,SAAU,UAAW,OAClE,OAAQ,WAAY,MAAO,QAAS,WAAY,SAAU,UAC1D,WAAY,WAAY,YAAa,aAAc,OAAQ,UAC3D,UAAW,SAAU,OAAQ,SAAU,SAAU,UAAW,QAC5D,QAAS,SAAU,SAAU,QAAS,SAAU,QAAS,SAAU,OACnE,SAAU,SAAU,SAAU,UAAW,SAAU,SAAU,SAC7D,SAAU,QAAS,MAAO,OAAQ,SAAU,OAAQ,WAAa,UACjE,SAAU,UAAW,WAAY,WAAY,SAAU,SAAU,QACjE,QAAS,SAAU,SAAU,UAAW,UAAW,QAAS,QAC5D,SAAU,UAAW,SAAU,QAAS,SAAU,SAAU,UAC5D,QAAS,SAAU,UAAW,SAAU,UAAW,SAAU,UAC7D,SAAU,SAAU,SAAU,QAAS,UAAW,QAAS,OAAQ,QACnE,QAAS,SAAU,QAAS,UAAW,OAAQ,SAAU,MAAO,SAChE,QAAS,QAAS,SAAU,OAAQ,WAAY,SAAU,UAC1D,SAAU,SAAU,UAAW,MAAO,QAAS,OAAQ,QAAS,QAChE,SAAU,UAAW,UAAW,UAAW,QAAS,UAAW,OAC/D,QAAS,SAAU,UAAW,SAAU,UAAW,WAAY,QAC/D,UAAW,WAAY,UAAW,WAAY,YAAa,SAAU,OACrE,QAAS,SAAU,OAAQ,UAAW,UAAW,SAAU,SAC3D,QAAS,SAAU,QAAS,UAAW,UAAW,UAAW,UAC7D,UAAW,SAAU,UAAW,SAAU,WAAY,WAAY,UAClE,UAAW,QAAS,UAAW,QAAS,QAAS,QAAS,UAC1D,QAAS,UAAW,SAAU,SAAU,UAAW,QAAS,SAC5D,QAAS,SAAU,SAAU,UAAW,OAAQ,OAAQ,OAAQ,QAChE,OAAQ,QAAS,UAAW,UAAW,WAAY,WAAY,WAC/D,UAAW,UAAW,YAAa,MAAO,SAAU,SAAU,UAC9D,QAAS,UAAW,SAAU,QAAS,OAAQ,SAAU,SAAU,QACnE,WAAY,UAAW,SAAU,SAAU,SAAU,OAAQ,UAC7D,QAAS,QAAS,QAAS,OAAQ,QAAS,SAAU,QAAS,SAC/D,UAAW,SAAU,QAAS,SAAU,QAAS,OAAQ,UACzD,UAAW,UAAW,aAAc,SAAU,SAAU,OAAQ,QAChE,KAAM,MAAO,MAAO,QAAS,OAAQ,QAAS,UAAW,SAAU,SACnE,SAAU,OAAQ,UAAW,SAAU,UAAW,QAAS,SAC3D,QAAS,SAAU,QAAS,SAAU,QAAS,SAAU,QAAS,OAClE,SAAU,SAAU,SAAU,OAAQ,QAAS,SAAU,SACzD,WAAY,WAAY,WAAY,UAAW,SAAU,QAAS,SAClE,UAAW,WAAY,WAAY,MAAO,QAAS,SAAU,QAC7D,UAAW,SAAU,SAAU,UAAW,QAAS,YAAa,QAChE,SAAU,SAAU,SAAU,QAAS,YAAa,OAAQ,QAC5D,QAAS,SAAU,UAAW,QAAS,YAAa,QAAS,SAC7D,OAAQ,SAAU,OAAQ,SAAU,QAAS,SAAU,SAAU,UACjE,OAAQ,QAAS,OAAQ,OAAQ,QAAS,OAAQ,QAAS,OAAQ,SACnE,QAAS,QAAS,QAAS,QAAS,QAAS,SAAU,OAAQ,UAC/D,SAAU,SAAU,QAAS,UAAW,UAAW,QAAS,OAAQ,OACpE,QAAS,SAAU,WAAY,SAAU,SAAU,QAAS,OAC5D,UAAW,WAAY,aAAc,QAAS,SAAU,QAAS,SACjE,OAAQ,QAAS,MAAO,OAAQ,QAAS,QAAS,OAAQ,SAC1D,UAAW,UAAW,MAAO,WAAY,OAAQ,QAAS,QAAS,QACnE,SAAU,OAAQ,QAAS,OAAQ,SAAU,OAAQ,SAAU,YAC/D,YAAa,UAAW,QAAS,QAAS,QAAS,OAAQ,YAC3D,YAAa,OAAQ,UAAW,YAAa,QAAS,SAAU,UAChE,UAAW,UAAW,SAAU,WAAY,OAAQ,QAAS,QAC7D,UAAW,QAAS,QAAS,SAAU,SAAU,UAAW,OAAQ,QACpE,UAAW,OAAQ,SAAU,UAAW,MAAO,SAAU,OACzD,aAAc,QAAS,MAAO,UAAW,SAAU,WAAY,UAC/D,WAAY,QAAS,OAAQ,QAAS,QAAS,UAAW,WAC1D,OAAQ,SAAU,UAAW,MAAO,SAAU,QAAS,SAAU,WACjE,SAAU,SAAU,MAAO,OAAQ,WAAY,UAAW,WAC1D,WAAY,SAAU,SAAU,QAAS,SAAU,SAAU,OAC7D,WAAY,QAAS,QAAS,YAAa,WAAY,OAAQ,QAC/D,SAAU,SAAU,QAAS,WAAY,MAAO,WAAY,YAC5D,UAAW,UAAW,UAAW,UAAW,OAAQ,QAAS,OAC7D,SAAU,UAAW,SAAU,UAAW,YAAa,YACvD,UAAW,YAAa,YAAa,SAAU,QAAS,UAAW,QACnE,OAAQ,QAAS,UAAW,SAAU,WAAY,YAAa,WAC/D,aAAc,WAAY,QAAS,SAAU,UAAW,SAAU,QAClE,SAAU,YAAa,QAAS,SAAU,OAAQ,UAAW,YAC7D,YAAa,UAAW,OAAQ,OAAQ,UAAW,SAAU,WAC7D,UAAW,SAAU,UAAW,SAAU,UAAW,UAAW,WAChE,QAAS,QAAS,SAAU,QAAS,MAAO,QAAS,UAAW,OAChE,UAAW,UAAW,YAAa,UAAW,WAAY,MAAO,WACjE,SAAU,YAAa,YAAa,aAAc,WAAY,WAC9D,UAAW,SAAU,YAAa,SAAU,UAAW,QAAS,UAChE,WAAY,SAAU,QAAS,SAAU,WAAY,MAAO,SAC5D,SAAU,UAAW,WAAY,QAAS,QAAS,UAAW,OAC9D,OAAQ,UAAW,WAAY,WAAY,WAAY,WACvD,WAAY,UAAW,SAAU,OAAQ,SAAU,SAAU,UAC7D,SAAU,UAAW,QAAS,SAAU,UAAW,SAAU,QAC7D,SAAU,WAAY,QAAS,SAAU,QAAS,YAAa,SAC/D,UAAW,QAAS,OAAQ,QAAS,WAAY,WAAY,UAC7D,QAAS,WAAY,UAAW,UAAW,SAAU,YAAa,SAClE,QAAS,YAAa,WAAY,SAAU,SAAU,MAAO,SAC7D,OAAQ,UAAW,MAAO,OAAQ,YAAa,SAAU,SAAU,SACnE,SAAU,MAAO,UAAW,QAAS,QAAS,QAAS,SAAU,OACjE,QAAS,SAAU,OAAQ,QAAS,SAAU,SAAU,UAAW,SACnE,WAAY,QAAS,SAAU,UAAW,SAAU,SAAU,SAC9D,QAAS,SAAU,SAAU,SAAU,SAAU,QAAS,QAAS,QACnE,UAAW,SAAU,QAAS,SAAU,QAAS,QAAS,SAC1D,SAAU,QAAS,SAAU,SAAU,UAAW,YAAa,QAC/D,YAAa,QAAS,UAAW,SAAU,UAAW,UAAW,WACjE,WAAY,UAAW,QAAS,SAAU,SAAU,SAAU,UAC9D,UAAW,QAAS,YAAa,UAAW,UAAW,QAAS,SAChE,WAAY,QAAS,SAAU,SAAU,SAAU,SAAU,QAC7D,OAAQ,SAAU,UAAW,WAAY,QAAS,UAAW,SAC7D,SAAU,OAAQ,SAAU,SAAU,OAAQ,QAAS,WAAY,SACnE,QAAS,MAAO,UAAW,OAAQ,MAAO,QAAS,SAAU,UAC7D,WAAY,MAAO,MAAO,QAAS,SAAU,MAAO,QAAS,SAC7D,WAAY,UAAW,OAAQ,OAAQ,SAAU,QAAS,QAAS,SACnE,UAAW,WAAY,WAAY,OAAQ,UAAW,OAAQ,SAC9D,SAAU,SAAU,SAAU,SAAU,OAAQ,SAAU,QAAS,QACnE,MAAO,OAAQ,QAAS,MAAO,WAAY,SAAU,SAAU,OAC/D,QAAS,WAAY,UAAW,OAAQ,YAAa,SAAU,UAC/D,UAAW,QAAS,SAAU,YAAa,UAAW,WAAY,OAClE,OAAQ,QAAS,QAAS,QAAS,SAAU,QAAS,SAAU,SAChE,QAAS,QAAS,UAAW,OAAQ,QAAS,SAAU,QAAS,QACjE,QAAS,SAAU,QAAS,QAAS,WAAY,QAAS,UAC1D,QAAS,QAAS,QAAS,QAAS,UAAW,SAAU,MAAO,OAChE,QAAS,OAAQ,UAAW,UAAW,QAAS,SAAU,SAAU,QACpE,QAAS,SAAU,SAAU,OAAQ,SAAU,WAAY,YAC3D,QAAS,QAAS,QAAS,QAAS,SAAU,UAAW,SACzD,UAAW,SAAU,SAAU,QAAS,SAAU,QAAS,SAC3D,UAAW,SAAU,QAAS,UAAW,MAAO,QAAS,SAAU,QACnE,QAAS,SAAU,SAAU,SAAU,SAAU,SAAU,SAC3D,QAAS,QAAS,SAAU,SAAU,SAAU,SAAU,UAAW,OACrE,WAAY,SAAU,SAAU,MAAO,WAAY,WAAY,OAC/D,WAAY,UAAW,UAAW,SAAU,OAAQ,UAAW,SAC/D,WAAY,WAAY,WAAY,SAAU,QAAS,SAAU,UACjE,SAAU,QAAS,UAAW,SAAU,UAAW,WAAY,SAC/D,QAAS,SAAU,SAAU,UAAW,SAAU,UAAW,QAC7D,OAAQ,QAAS,UAAW,SAAU,UAAW,QAAS,UAC1D,QAAS,OAAQ,SAAU,QAAS,QAAS,SAAU,UAAW,SAClE,QAAS,KAAM,OAAQ,QAAS,SAAU,SAAU,UAAW,SAC/D,QAAS,UAAW,UAAW,QAAS,OAAQ,MAAO,OAAQ,SAC/D,SAAU,OAAQ,QAAS,SAAU,UAAW,WAAY,OAC5D,YAAa,YAAa,UAAW,SAAU,WAAY,UAC3D,QAAS,MAAO,QAAS,UAAW,WAAY,WAAY,SAC5D,UAAW,QAAS,SAAU,QAAS,SAAU,QAAS,OAAQ,SAClE,WAAY,SAAU,YAAa,OAAQ,SAAU,UAAW,SAChE,UAAW,WAAY,QAAS,QAAS,QAAS,SAAU,UAC5D,SAAU,MAAO,QAAS,QAAS,UAAW,QAAS,OAAQ,OAC/D,QAAS,SAAU,OAAQ,QAAS,QAAS,SAAU,UACvD,WAAY,QAAS,SAAU,SAAU,QAAS,SAAU,OAC5D,SAAU,SAAU,SAAU,UAAW,UAAW,UAAW,SAC/D,SAAU,SAAU,UAAW,QAAS,QAAS,OAAQ,QAAS,OAClE,QAAS,QAAS,QAAS,SAAU,OAAQ,SAAU,SAAU,SACjE,UAAW,UAAW,OAAQ,QAAS,UAAW,QAAS,OAAQ,SACnE,UAAW,UAAW,SAAU,SAAU,SAAU,OAAQ,OAC5D,SAAU,UAAW,QAAS,OAAQ,UAAW,WAAY,SAC7D,SAAU,OAAQ,SAAU,SAAU,QAAS,SAAU,WACzD,SAAU,WAAY,QAAS,YAAa,WAAY,UACxD,UAAW,WAAY,YAAa,YAAa,WAAY,WAC7D,UAAW,UAAW,WAAY,SAAU,UAAW,UAAW,UAClE,SAAU,QAAS,MAAO,OAAQ,SAAU,SAAU,QAAS,SAC/D,SAAU,WAAY,SAAU,QAAS,SAAU,SAAU,SAC7D,QAAS,QAAS,SAAU,SAAU,SAAU,QAAS,SAAU,QACnE,QAAS,SAAU,SAAU,QAAS,SAAU,QAAS,QAAS,SAClE,SAAU,SAAU,MAAO,UAAW,SAAU,WAAY,QAC5D,UAAW,UAAW,UAAW,UAAW,QAAS,SAAU,QAC/D,WAAY,SAAU,OAAQ,UAAW,UAAW,QAAS,QAC7D,QAAS,QAAS,WAAY,SAAU,SAAU,OAAQ,QAAS,SACnE,QAAS,SAAU,OAAQ,QAAS,SAAU,QAAS,MAAO,WAC9D,OAAQ,MAAO,OAAQ,OAAQ,UAAW,UAAW,QAAS,OAC9D,OAAQ,OAAQ,QAAS,OAAQ,SAAU,QAAS,OAAQ,QAAS,OACrE,SAAU,WAAY,UAAW,WAAY,YAAa,aAC1D,aAAc,SAAU,UAAW,UAAW,WAAY,OAAQ,SAClE,OAAQ,OAAQ,QAAS,UAAW,QAAS,QAAS,OAAQ,QAC9D,OAAQ,WAAY,YAAa,QAAS,SAAU,QAAS,UAC7D,SAAU,QAAS,SAAU,OAAQ,QAAS,UAAW,QAAS,QAClE,QAAS,QAAS,SAAU,SAAU,WAAY,WAAY,WAC9D,YAAa,SAAU,UAAW,QAAS,SAAU,SAAU,SAC/D,UAAW,UAAW,SAAU,UAAW,QAAS,UAAW,WAC/D,SAAU,QAAS,QAAS,SAAU,MAAO,QAAS,SAAU,SAChE,SAAU,OAAQ,MAAO,OAAQ,QAAS,UAAW,OAAQ,QAC7D,SAAU,QAAS,QAAS,SAAU,QAAS,SAAU,QAAS,SAClE,SAAU,MAAO,QAAS,OAAQ,UAAW,WAAY,QAAS,SAClE,SAAU,SAAU,UAAW,UAAW,WAAY,QAAS,OAC/D,SAAU,SAAU,QAAS,SAAU,SAAU,OAAQ,QAAS,UAClE,OAAQ,MAAO,QAAS,OAAQ,QAAS,QAAS,MAAO,OAAQ,QACjE,SAAU,QAAS,OAAQ,SAAU,UAAW,UAAW,QAC3D,UAAW,WAAY,SAAU,QAAS,OAAQ,SAAU,OAC5D,UAAW,QAAS,UAAW,UAAW,SAAU,SAAU,UAC9D,SAAU,OAAQ,WAAY,UAAW,QAAS,OAAQ,SAC1D,SAAU,YAAa,QAAS,QAAS,OAAQ,OAAQ,SAAU,OACnE,MAAO,SAAU,QAAS,SAAU,QAAS,QAAS,OAAQ,UAC9D,QAAS,SAAU,SAAU,UAAW,UAAW,OAAQ,SAC3D,QAAS,SAAU,MAAO,QAAS,SAAU,UAAW,WACxD,SAAU,MAAO,QAAS,QAAS,QAAS,UAAW,QAAS,WAChE,SAAU,UAAW,QAAS,UAAW,SAAU,OAAQ,QAC3D,SAAU,MAAO,SAAU,QAAS,OAAQ,QAAS,QAAS,OAC9D,OAAQ,OAAQ,OAAQ,OAAQ,UAAW,SAAU,MAAO,OAAQ,QACpE,OAAQ,OAAQ,QAAS,UAAW,QAAS,UAAW,QAAS,MACjE,QAAS,OAAQ,QAAS,OAAQ,YAAa,OAAQ,WACvD,UAAW,WAAY,WAAY,UAAW,WAAY,QAAS,QACnE,UAAW,UAAW,UAAW,UAAW,UAAW,UAAW,MAClE,SAAU,QAAS,UAAW,SAAU,WAAY,YAAa,SACjE,WAAY,SAAU,OAAQ,QAAS,QAAS,QAAS,UACzD,UAAW,WAAY,UAAW,UAAW,SAAU,UAAW,SAClE,UAAW,UAAW,QAAS,SAAU,SAAU,UAAW,OAC9D,OAAQ,SAAU,YAAa,YAAa,WAAY,WACxD,YAAa,UAAW,SAAU,QAAS,SAAU,SAAU,WAC/D,YAAa,YAAa,aAAc,aAAc,YAAa,QACnE,SAAU,SAAU,UAAW,aAAc,QAAS,SAAU,SAChE,SAAU,UAAW,UAAW,WAAY,WAAY,UACxD,UAAW,QAAS,UAAW,WAAY,WAAY,UAAW,UAClE,WAAY,SAAU,QAAS,SAAU,SAAU,UAAW,UAC9D,aAAc,WAAY,UAAW,OAAQ,SAAU,SAAU,SACjE,UAAW,SAAU,SAAU,SAAU,UAAW,UAAW,WAC/D,WAAY,QAAS,SAAU,UAAW,UAAW,QAAS,SAC9D,OAAQ,SAAU,WAAY,SAAU,QAAS,QAAS,SAC1D,UAAW,WAAY,UAAW,UAAW,OAAQ,SAAU,SAC/D,OAAQ,QAAS,SAAU,UAAW,UAAW,WAAY,UAC7D,WAAY,QAAS,MAAO,QAAS,SAAU,aAAc,aAC7D,cAAe,SAAU,UAAW,SAAU,UAAW,MAAO,OAChE,UAAW,WAAY,OAAQ,SAAU,UAAW,QAAS,QAC7D,UAAW,UAAW,WAAY,SAAU,UAAW,OAAQ,SAC/D,SAAU,SAAU,QAAS,SAAU,QAAS,SAAU,UAC1D,SAAU,SAAU,SAAU,UAAW,SAAU,UAAW,WAC9D,WAAY,OAAQ,QAAS,SAAU,UAAW,SAAU,SAC5D,OAAQ,MAAO,UAAW,QAAS,UAAW,WAAY,UAC1D,UAAW,SAAU,UAAW,WAAY,SAAU,UAAW,OACjE,QAAS,QAAS,QAAS,UAAW,SAAU,SAAU,OAAQ,SAClE,OAAQ,UAAW,SAAU,UAAW,WAAY,SAAU,SAC9D,WAAY,QAAS,UAAW,WAAY,SAAU,UAAW,UACjE,UAAW,WAAY,WAAY,SAAU,SAAU,QAAS,OAChE,SAAU,UAAW,SAAU,YAAa,aAAc,UAC1D,QAAS,QAAS,SAAU,SAAU,SAAU,WAAY,SAC5D,OAAQ,QAAS,QAAS,SAAU,SAAU,UAAW,WACzD,SAAU,OAAQ,SAAU,SAAU,UAAW,MAAO,OAAQ,SAChE,QAAS,OAAQ,SAAU,OAAQ,QAAS,QAAS,UAAW,SAChE,SAAU,SAAU,QAAS,QAAS,OAAQ,SAAU,QAAS,SACjE,WAAY,UAAW,OAAQ,QAAS,MAAO,UAAW,UAC1D,UAAW,SAAU,YAAa,YAAa,YAAa,SAC5D,SAAU,OAAQ,MAAO,QAAS,OAAQ,OAAQ,QAAS,QAAS,QACpE,SAAU,OAAQ,SAAU,QAAS,SAAU,SAAU,OAAQ,SACjE,SAAU,MAAO,WAAY,YAAa,UAAW,OAAQ,WAC7D,WAAY,OAAQ,SAAU,UAAW,SAAU,YAAa,QAChE,SAAU,QAAS,QAAS,OAAQ,UAAW,OAAQ,OAAQ,OAC/D,QAAS,MAAO,OAAQ,SAAU,QAAS,SAAU,QAAS,OAC9D,QAAS,OAAQ,OAAQ,UAAW,WAAY,SAAU,QAAS,SACnE,SAAU,UAAW,OAAQ,UAAW,MAAO,OAAQ,SAAU,OACjE,SAAU,OAAQ,UAAW,MAAO,QAAS,SAAU,OAAQ,SAC/D,OAAQ,MAAO,OAAQ,MAAO,OAAQ,QAAS,OAAQ,OAAQ,SAC/D,QAAS,MAAO,QAAS,OAAQ,MAAO,OAAQ,OAAQ,UAAW,MACnE,OAAQ,OAAQ,OAAQ,OAAQ,OAAQ,QAAS,SAAU,UAC3D,OAAQ,QAAS,QAAS,QAAS,UAAW,UAAW,UAAW,QACpE,UAAW,SAAU,UAAW,OAAQ,OAAQ,SAAU,OAAQ,UAClE,QAAS,OAAQ,MAAO,OAAQ,SAAU,QAAS,QAAS,QAC5D,SAAU,QAAS,QAAS,QAAS,SAAU,UAAW,WAAY,MACtE,WAAY,WAAY,UAAW,QAAS,SAAU,OAAQ,QAC9D,UAAW,SAAU,SAAU,QAAS,UAAW,WAAY,QAC/D,SAAU,WAAY,WAAY,QAAS,QAAS,OAAQ,QAC5D,QAAS,SAAU,SAAU,SAAU,UAAW,SAAU,SAC5D,SAAU,OAAQ,SAAU,QAAS,QAAS,SAAU,WACxD,UAAW,UAAW,QAAS,SAAU,WAAY,YACrD,aAAc,WAAY,QAAS,UAAW,UAAW,SAAU,QACnE,UAAW,UAAW,UAAW,SAAU,WAAY,MAAO,SAC9D,SAAU,UAAW,SAAU,UAAW,QAAS,QAAS,UAC5D,QAAS,SAAU,QAAS,SAAU,SAAU,UAAW,QAAS,QACpE,SAAU,QAAS,UAAW,YAAa,SAAU,SAAU,UAC/D,UAAW,OAAQ,QAAS,MAAO,UAAW,WAAY,SAC1D,SAAU,OAAQ,SAAU,UAAW,SAAU,UAAW,QAAS,OACrE,QAAS,QAAS,SAAU,WAAY,OAAQ,SAAU,QAC1D,WAAY,YAAa,OAAQ,QAAS,SAAU,OAAQ,QAC5D,QAAS,SAAU,OAAQ,MAAO,MAAO,QAAS,WAAY,QAC9D,UAAW,OAAQ,QAAS,UAAW,WAAY,QAAS,UAC5D,UAAW,SAAU,WAAY,OAAQ,SAAU,SAAU,QAC7D,OAAQ,YAAa,QAAS,OAAQ,QAAS,OAAQ,SAAU,SACjE,UAAW,UAAW,QAAS,QAAS,QAAS,QAAS,MAAO,WACjE,SAAU,UAAW,UAAW,UAAW,OAAQ,UAAW,QAC9D,SAAU,UAAW,SAAU,OAAQ,UAAW,QAAS,MAAO,UAClE,QAAS,YAAa,OAAQ,OAAQ,UAAW,UAAW,WAC5D,YAAa,UAAW,WAAY,UAAW,UAAW,SAAU,OACpE,UAAW,UAAW,YAAa,WAAY,UAAW,UAC1D,QAAS,SAAU,SAAU,OAAQ,SAAU,QAAS,SAAU,UAClE,SAAU,UAAW,MAAO,QAAS,QAAS,UAAW,QAAS,QAClE,OAAQ,QAAS,UAAW,OAAQ,SAAU,OAAQ,SAAU,UAChE,QAAS,OAAQ,QAAS,SAAU,OAAQ,QAAS,QAAS,QAC9D,QAAS,UAAW,QAAS,SAAU,UAAW,UAAW,QAC7D,QAAS,OAAQ,QAAS,SAAU,QAAS,QAAS,WACtD,YAAa,MAAO,UAAW,WAAY,SAAU,QAAS,SAC9D,QAAS,SAAU,SAAU,WAAY,QAAS,UAAW,QAC7D,WAAY,UAAW,UAAW,SAAU,QAAS,QAAS,SAC9D,QAAS,OAAQ,UAAW,UAAW,WAAY,SAAU,WAC7D,WAAY,OAAQ,UAAW,SAAU,SAAU,OAAQ,YAC3D,UAAW,SAAU,SAAU,SAAU,SAAU,WAAY,OAC/D,OAAQ,SAAU,UAAW,QAAS,QAAS,SAAU,WACzD,SAAU,SAAU,UAAW,SAAU,UAAW,SAAU,SAC9D,QAAS,SAAU,QAAS,QAAS,SAAU,UAAW,SAC1D,SAAU,OAAQ,SAAU,UAAW,SAAU,WAAY,UAC7D,WAAY,UAAW,SAAU,UAAW,QAAS,MAAO,SAC5D,SAAU,SAAU,UAAW,SAAU,SAAU,QAAS,MAAO,SACnE,SAAU,UAAW,SAAU,OAAQ,QAAS,SAAU,QAC1D,UAAW,QAAS,QAAS,QAAS,QAAS,SAAU,SACzD,UAAW,SAAU,QAAS,OAAQ,WAAY,UAAW,UAC7D,SAAU,WAAY,SAAU,UAAW,YAAa,YACxD,WAAY,UAAW,UAAW,WAAY,QAAS,SAAU,UACjE,QAAS,SAAU,SAAU,QAAS,QAAS,SAAU,UAAW,QACpE,UAAW,OAAQ,QAAS,SAAU,SAAU,QAAS,SAAU,SACnE,YAAa,SAAU,UAAW,MAAO,QAAS,QAAS,SAC3D,QAAS,QAAS,SAAU,QAAS,OAAQ,QAAS,OAAQ,QAC9D,UAAW,UAAW,UAAW,OAAQ,SAAU,SAAU,MAAO,QACpE,UAAW,SAAU,WAAY,UAAW,WAAY,UAAW,QACnE,OAAQ,SAAU,QAAS,OAAQ,WAAY,SAAU,OAAQ,SACjE,OAAQ,WAAY,WAAY,UAAW,UAAW,WAAY,SAClE,SAAU,QAAS,UAAW,MAAO,QAAS,SAAU,QAAS,SACjE,UAAW,UAAW,WAAY,QAAS,UAAW,OAAQ,OAC9D,QAAS,QAAS,OAAQ,MAAO,MAAO,QAAS,SAAU,SAC3D,QAAS,OAAQ,OAAQ,QAAS,WAAY,SAAU,MAAO,QAC/D,SAAU,QAAS,SAAU,SAAU,MAAO,WAAY,WAC1D,QAAS,UAAW,SAAU,UAAW,QAAS,SAAU,UAC5D,SAAU,OAAQ,UAAW,SAAU,WAAY,UAAW,UAC9D,OAAQ,SAAU,SAAU,UAAW,SAAU,QAAS,QAAS,OACnE,QAAS,SAAU,QAAS,SAAU,SAAU,UAAW,UAC3D,QAAS,SAAU,SAAU,SAAU,MAAO,SAAU,QAAS,QACjE,QAAS,SAAU,OAAQ,WAAY,YAAa,YAAa,UACjE,SAAU,MAAO,QAAS,UAAW,SAAU,OAAQ,QAAS,QAChE,QAAS,QAAS,OAAQ,QAAS,SAAU,SAAU,QAAS,SAChE,OAAQ,QAAS,SAAU,UAAW,SAAU,SAAU,SAC1D,WAAY,QAAS,UAAW,UAAW,SAAU,QAAS,SAC9D,WAAY,OAAQ,QAAS,QAAS,QAAS,UAAW,WAC1D,WAAY,SAAU,QAAS,SAAU,WAAY,SAAU,SAC/D,WAAY,WAAY,OAAQ,OAAQ,OAAQ,SAAU,UAC1D,WAAY,SAAU,WAAY,WAAY,OAAQ,QAAS,QAC/D,SAAU,UAAW,SAAU,SAAU,QAAS,OAAQ,SAC1D,SAAU,OAAQ,SAAU,QAAS,UAAW,SAAU,aAC1D,UAAW,QAAS,SAAU,UAAW,SAAU,UAAW,SAC9D,UAAW,UAAW,QAAS,UAAW,UAAW,WAAY,UACjE,UAAW,aAAc,OAAQ,QAAS,UAAW,UAAW,SAChE,SAAU,SAAU,QAAS,QAAS,SAAU,SAAU,SAC1D,WAAY,WAAY,YAAa,SAAU,UAAW,UAC1D,QAAS,QAAS,SAAU,SAAU,UAAW,SAAU,UAC3D,SAAU,UAAW,SAAU,UAAW,WAAY,UAAW,UACjE,SAAU,SAAU,YAAa,UAAW,UAAW,OAAQ,UAC/D,UAAW,SAAU,SAAU,OAAQ,QAAS,YAAa,QAC7D,QAAS,QAAS,OAAQ,QAAS,OAAQ,OAAQ,MAAO,OAAQ,OAClE,QAAS,OAAQ,OAAQ,OAc7BzuD,GAAOD,SACH80C,iBARJ,WAII,MAHaO,GAAWF,cAAcuZ,GAGtC,IAFerZ,EAAWG,kBAAkB,eAAAj1C,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAA,GAAAsI,GAAAnH,EAAA,GAAAf,EAAAe,EAAA,GAAAN,EAAAM,IAAAf,GAAAiI,EAAA,mBAAArI,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MC5a1Ce,EAAS1C,EAAQ,GAAqBsC,UAAUyD,GAQhDivH,EASc,iBA6BdC,EAAsB,QAMtBC,EACK,QADLA,EAEK,QAFLA,EAGe,gBAOjBC,SAciBC,aA2bjB,QAAAA,GAAY99F,EAAKvZ,iGAASje,KAAAs1H,GACtBt1H,KAAK04B,OAASza,EAAQya,OACtB14B,KAAKw3B,IAAMA,EACXx3B,KAAKo1B,eAAiBoC,EAAIpC,eAC1Bp1B,KAAKu4B,aAAeta,EAAQsa,cAAgB48F,EAC5Cn1H,KAAKu1H,aAELD,EAAUE,QAAQhhG,IAAIx0B,MAElBs1H,EAAUG,qBACVz1H,KAAK01H,gBAK0B,IAA3BJ,EAAUE,QAAQ9+F,MAClB4+F,EAAUK,kBAAkB31H,aA3cvBs1H,uDAOYh5G,EAAOF,GAC5Bk5G,EAAUM,SAAqB,YAAVt5G,GACrB1Z,EAAO0Z,MAAP,sBAAmCA,EAAnC,SAAiDF,yCAUpCE,EAAOF,GAIxB,GAHAxZ,EAAOkB,IAAP,yBAAoCwY,EAApC,QAAiDF,GAGnC,YAAVE,EAAJ,CAIAg5G,EAAUG,qBAGV,IAAII,MACAC,EAAkB,KAZOl/F,KAAAC,KAAAC,QAAA,KAc7B,OAAAC,GAAAC,EAAgCs+F,EAAUE,QAAQv+F,SAAlDC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAA4D,IAAjD+C,GAAiD5C,EAAA3rB,KACnDuuB,GAAkB47F,YACnB3yH,EAAOyZ,MAAM,+BACTsd,EAAkB+7F,kBAClBG,KACKC,IACDA,EAAkBn8F,MApBL,MAAAnT,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IA0BxB++F,GAILP,EAAUK,kBAAkBG,8CASPC,GAIrB,GAAMC,GAAgBD,EAAWr9F,OAC3Bu9F,EAAYF,EAAW3gG,eALIsC,KAAAC,KAAAC,QAAA,KAQjC,OAAAC,GAAAC,EAAqBw9F,EAAUY,aAA/Bh/F,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAA6C,IAAlC8+D,GAAkC3+D,EAAAzsB,KACzC,IAAIorF,EAAOx4E,OAASo3G,EAAkB,CAClC,GAAMe,GAAY3/B,EAAO9lF,IAEzB4kH,GAAUc,aACNL,EACAI,EAAUn4G,KACVm4G,EAAU75G,MACV65G,EAAUjgC,IAAM+/B,OACjB,IAAIz/B,EAAOx4E,OAASo3G,EAAkB,CAIzC,GAAMiB,GAAY7/B,EAAO9lF,IAEzB4kH,GAAUM,QAAQU,gBACd9/B,EAAON,IAAM+/B,EACbI,EAAUlkG,MACV6jG,EACAK,EAAUA,eACX,IAAI7/B,EAAOx4E,OAASo3G,EAA4B,CACnD,GAAM1kH,GAAO8lF,EAAO9lF,IAEpB4kH,GAAUM,QAAQW,uBACd//B,EAAON,IAAM+/B,EACbvlH,EAAK8lH,YACLR,EACAtlH,EAAK8pB,KACL9pB,EAAKqrB,WACLrrB,EAAKsrB,eArCgB,MAAAxV,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAyCjC09F,EAAUY,aAAalzH,OAAS,KAAAyN,IAAA,eAAArF,MAAA,SAahBquB,EAAIzb,EAAM1B,EAAO45E,GACjC,GAAIugC,GAASn6G,CAERm6G,KACD7zH,EAAOwF,KAAK,uBACZquH,EAAS,GAAI/qH,OAAM,kBAEnB4pH,EAAUG,oBAAsBh8F,EAChC67F,EAAUM,QAAQc,YAAYxgC,EAAIz8D,EAAGf,OAAQ1a,EAAMy4G,GAEnDnB,EAAUY,aAAarzH,MACnBmb,KAAMo3G,EACN1kH,MACI4L,MAAOm6G,EACPvgC,KACAl4E,+CAkBIyb,EAAItH,EAAOkkG,GAC3B,GAAMngC,GAAKz8D,GAAMA,EAAGrE,eACdsD,EAASe,GAAMA,EAAGf,MAEpB48F,GAAUG,oBAAsBh8F,EAChC67F,EAAUM,QAAQU,gBAAgBpgC,EAAI/jE,EAAOuG,EAAQ29F,GAErDf,EAAUY,aAAarzH,MACnB61B,SACAw9D,KACAl4E,KAAMo3G,EACN1kH,MAAQyhB,QACJkkG,kEAakBM,GAC9B,GAAMC,IACF,yBACA,kBACA,oBAJsC99F,KAAAC,KAAAC,QAAA,KAS1C,OAAAC,GAAAC,EAAyB09F,EAAzB1/F,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,MAT0C,SAS/BykB,GACP,GAAMs5E,GAAiBF,EAAWp5E,EAElCo5E,GAAWp5E,GAAc,WACrB,IAAI,OAAAu5E,GAAA/rH,UAAA/H,OAD6B+zH,EAC7BvpH,MAAAspH,GAAAE,EAAA,EAAAA,EAAAF,EAAAE,IAD6BD,EAC7BC,GAAAjsH,UAAAisH,EACA,OAAOH,GAAe5rH,MAAM0rH,EAAYI,GAC1C,MAAO92H,GACLg3H,EAAA3uH,EAAqB+pB,iBAAiBpyB,MAPRg5B,EAAA7tB,OATA,MAAAob,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,IAoB1C,GAAMk+F,IACF,yBACA,kBACA,oBAvBsC99F,KAAAC,KAAAC,QAAA,KA4B1C,OAAAC,GAAAC,EAAyB09F,EAAzBhgG,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,MA5B0C,SA4B/BmkB,GACP,GAAMs5E,GAAiBF,EAAWp5E,EAElCo5E,GAAWp5E,GAAc,WAA0B,OAAA45E,GAAApsH,UAAA/H,OAAd+zH,EAAcvpH,MAAA2pH,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAAdL,EAAcK,GAAArsH,UAAAqsH,EAC/Cx0H,GAAOyZ,MAAMkhC,EAAYw5E,GACzBF,EAAe5rH,MAAM0rH,EAAYI,KALFx9F,EAAAnuB,OA5BG,MAAAob,GAAA6S,KAAAC,EAAA9S,EAAA,aAAA4S,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,WAAA4B,EAAA,KAAAC,IAoC1C,GAAM+9F,GAAsBV,EAAWD,WAGvCC,GAAWD,YAAc,SAASxgC,EAAIz8D,EAAIzb,GAAe,OAAAiU,GAAAlnB,UAAA/H,OAAN6H,EAAM2C,MAAAykB,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANrnB,EAAMqnB,EAAA,GAAAnnB,UAAAmnB,EAIjDlU,KAASk3G,EAQJryB,EAAAv6F,EAAerB,iBAChBnB,SAAWA,QAAQuW,MAAM,cAAe65E,EAAIz8D,EAAIzb,GAGpDpb,EAAOyZ,MAAPpR,MAAArI,GAAa,cAAeszF,EAAIz8D,EAAIzb,GAApCzT,OAA6CM,GAEjD,KACIwsH,EAAoB72H,KAApByK,MAAAosH,GAAyBV,EAAYzgC,EAAIz8D,EAAIzb,GAA7CzT,OAAsDM,IACxD,MAAO+gF,GACD5tE,IAASk3G,EACTpvH,SAAWA,QAAQwW,MAAM,cAAesvE,GAExCqrC,EAAA3uH,EAAqB+pB,iBAAiBu5D,yCAiCnC3tE,GACf,GAAIq3G,EAAUM,QACV,KAAM,IAAIlqH,OAAM,kDAEpB,KAII,GAAM4rH,GACAz0B,EAAAv6F,EAAerB,gBACX/G,EAAQ,IACRq3H,SAEVjC,GAAUM,QAAU,GAAI0B,GAExBhC,EAAUkC,2BAA2BlC,EAAUM,SAE/CN,EAAUmC,QACNpkG,UAAWpV,EAAQoV,UACnBR,SAAU5U,EAAQ4U,UAEtByiG,EAAUriG,YAAchV,EAAQgV,YAChCqiG,EAAUpiG,gBAAkBjV,EAAQiV,eAEpC,IAAIwkG,SAEAz5G,GAAQqV,kBACRokG,GACIC,mBACO15G,EAAQqV,gBADf,KAEQuvE,EAAAv6F,EAAe/B,iBAFvB,MAOR+uH,EAAUM,QAAQ3O,WACdqO,EAAUriG,YACVqiG,EAAUpiG,gBACVoiG,EAAUmC,OACVnC,EAAUsC,qBAEVF,EAEJ,IAAMnkG,GAAqBtV,EAAQsV,kBAcnC,OAZIA,KACA+hG,EAAUM,QAAQiC,uBAAuBtkG,GAEzCA,IAAqBw8B,KAAK,SAAAvzC,GAClBA,GACA5Z,EAAOsB,KAAK,2BACNqf,KAAKgK,MAAM/Q,GAAQs7G,aAGhC1hE,MAAM,kBAIb,MAAOn2D,GAQL,MAJAg3H,GAAA3uH,EAAqB+pB,iBAAiBpyB,GACtCq1H,EAAUM,QAAU,KACpBhzH,EAAO0Z,MAAMrc,UAENwQ,IAAA,uBAAArF,MAAA,WAYX,MAAO0uE,SAAQw7C,EAAUM,2DASIv6F,EAAa5B,GAC1C67F,EAAUyC,aAAat+F,EAvYT,mBAuY2C4B,8CASnCp7B,EAAGw5B,GACzB,IACI67F,EAAUc,aACN38F,EACAy7F,EACAj1H,EACAw5B,GAAMA,EAAGrE,gBACf,MAAO9Y,GAIDxW,SAAqC,kBAAlBA,SAAQwW,OAE3BxW,QAAQwW,MAAM,4BAA6BA,yCAcnC07G,EAAc/N,EAAiBC,GAC3CoL,EAAUM,QACVN,EAAUM,QAAQqC,iBACdD,GACIP,OAAQnC,EAAUmC,OAClBz5F,QAASisF,EACTiO,QAAShO,IAGjBtnH,EAAO0Z,MAAM,0DAAA7L,IAAA,yBAAArF,MAAA,SAUSnL,EAAGw5B,GAC7B67F,EAAUc,aAAa38F,EAxdb,eAwd6Cx5B,EAAG,SAAAwQ,IAAA,gBAAArF,MAAA,SASzCkgE,EAAMttD,EAAMyb,GAC7B,GAAItH,SAGAA,GADS,UAATnU,EACQstD,EApdJ,aACC,cAqdGA,EAxdL,YACE,cA0dTgqD,EAAUyC,aAAat+F,EAAItH,mCAjL3B,MAJKkjG,KACDA,EAAW,GAAIngG,MAGZmgG,MAgN6Br1H,2CAWpC4C,EAAOsB,KAAK,eAAgBlE,KAAKu4B,aACjC,KACI,GAAM4/F,IACFC,mBACIp4H,KAAKw3B,IAAIuyC,MACHurD,EAAUM,QAAQyC,aAAa3L,KAC/B4I,EAAUM,QAAQyC,aAAa9+B,QAEvC5sF,EACA2oH,EAAUM,QAAQ0C,aAChBt4H,KAAKo1B,eACLp1B,KAAKu4B,aACL+8F,EAAUM,QAAQ2C,YAAYC,UAC9Bx4H,KAAK04B,OACLy/F,EACA7C,EAAUmD,sBAElBz4H,MAAKu1H,YAEL,IAAMzlE,GAAyB,YAAfnjD,EAAI0Z,MAMpB,OAJKypC,IACDltD,EAAO0Z,MAAM,kCAAmC3P,EAAIsP,SAGjD6zC,EAET,MAAOxzC,GAGL,MAFA26G,GAAA3uH,EAAqB+pB,iBAAiB/V,UAE/B7L,IAAA,8BAAArF,MAAA,SAqBPovB,EACAqB,EACA68F,EACA38F,EACAC,GACJ,GAAKs5F,EAAUM,QAAf,CAIA,GAAMY,GAAc36F,EAAUy5F,EAAUmC,OAASiB,CAE7CpD,GAAUG,mBACVH,EAAUM,QAAQW,uBACdv2H,KAAKo1B,eACLohG,EACAx2H,KAAK04B,OACL8B,EACAuB,EACAC,GAEJs5F,EAAUY,aAAarzH,MACnBmb,KAAMo3G,EACNl/B,GAAIl2F,KAAKo1B,eACT1kB,MACI8lH,cACAx6F,cACAxB,OACAuB,oEAaZu5F,EAAUyC,aAAa/3H,KAvlBV,sBAulBgB24H,0CAQzBrD,EAAUG,oBACVH,EAAUM,QAAQU,gBACdt2H,KAAKo1B,eACLkgG,EAAUM,QAAQ+C,YAAYC,iBAC9B54H,KAAK04B,QAEb48F,EAAUE,QAAQr9F,OAAOn4B,6DAOzBs1H,EAAUc,aACNp2H,KApoBc,uBAsoBd,KACAA,KAAKo1B,8DAQSn1B,GAClBq1H,EAAUc,aACNp2H,KAvpBK,cAupB4BC,EAAGD,KAAKo1B,+DAQ1Bn1B,GACnBq1H,EAAUc,aACNp2H,KAhqBM,eAgqB4BC,EAAGD,KAAKo1B,8DAQ5B2E,GAClBu7F,EAAUyC,aACN/3H,KACA+5B,EAzpBM,eADF,iBA0pBkC4+F,4CAUvB/mG,EAAO4I,GAC1B,GAAI67F,SAEA77F,KACA67F,GAAc77F,SAGlB86F,EAAUyC,aACN/3H,KACA4xB,EApqBU,mBACD,kBAoqBTykG,kDAQep2H,GACnBq1H,EAAUc,aACNp2H,KAxsBa,sBAwsB4BC,EAAGD,KAAKo1B,gEAQjCn1B,GACpBq1H,EAAUc,aACNp2H,KAjtBc,uBAitB4BC,EAAGD,KAAKo1B,kEAQhCn1B,GACtBq1H,EAAUc,aACNp2H,KA1tBS,kBA0tB4BC,EAAGD,KAAKo1B,+BAQzDkgG,EAAUM,QAAU,KAKpBN,EAAUY,gBAOVZ,EAAUG,sBAMVH,EAAUriG,YAAc,KAMxBqiG,EAAUpiG,gBAAkB,KAS5BoiG,EAAUmC,OAAS,OAAAj3H,KAAAqB,EAAA,6CAAA5B,EAAA4B,EAAAT,GAAA,uBAAAmH,GCrxBnB,GAAAG,GAAAF,EAAAC,GACa,WAAY,QAAAH,KAAa,QAAAA,KAAa,GAAAA,IAAA4F,KAAA+T,SAAA,GAAApU,SAAA,GAAqC,OAAAvF,GAAAtD,UAAA,EAAAsD,EAAAtF,QAA+B,QAAAoN,KAAa,MAAAvL,QAAAwwC,YAAAxrB,IAAAhlB,OAAAwwC,YAAAxrB,MAAAhlB,OAAAwwC,YAAAC,OAAAC,gBAAAt2B,KAAA4K,MAA4G,QAAAnpB,KAAuB,MAAV0P,KAAUyoH,GAAAC,cAA0B,QAAAn4H,GAAA2H,GAAc,GAAAywH,OAAAC,oBAAAD,GAAAC,mBAAAt9B,UAAA,CAAuU,GAAAtrF,GAAA,SAAA9H,GAAkB,MAAA2wH,IAAA3wH,GAAA2wH,GAAA3wH,IAAA2wH,GAAA3wH,IAA2BypH,MAAA,EAAAmH,MAAA,EAAAC,SAAA,EAAAC,kBAAA,EAAAC,kBAAA,EAAAC,kBAAA,GAAuFL,GAAA3wH,KAAoW3H,EAAA,CAAKo4H,IAAAC,mBAAAt9B,UAAArtF,QAAA,SAAA/F,GAAoDA,IAAA3H,EAAAuN,KAAA0mC,IAAAj0C,EAAA2H,EAAAurF,cAAkC,IAAA5zF,GAAA,CAAQ,IAAAs5H,GAAA,CAAOA,GAAA79B,UAAArtF,QAAA,SAAA/F,GAAiCrI,EAAAiO,KAAA0mC,IAAA30C,EAAAqI,EAAAurF,aAA6B,IAAAxnF,GAAA,EAAA20B,EAAA,EAAAtjB,EAAA,KAAArd,EAAA,IAA0BiI,GAAAiwE,QAAAlqE,QAAA,SAAA/F,GAA8B,GAAAsB,GAAAtB,EAAAoI,KAAAlC,EAAA4B,EAAAxG,EAAA4wB,KAAyB,WAAA5wB,EAAAkhE,WAAAxiE,EAAAkxH,aAAAC,GAAAC,WAAA,EAAAz5H,GAAA,GAAAA,EAAA,IAAA2J,EAAA+vH,eAAAttH,EAAA1L,EAAAV,EAAAI,OAAAgM,EAAA1L,EAAA,IAAAiJ,EAAA+vH,cAAAt5H,MAAAqd,EAAA,EAAArR,EAAA20B,EAAAp3B,EAAA+vH,cAAAnrH,EAAA8qH,kBAAA9qH,EAAA8qH,kBAAA1vH,EAAA+vH,cAArlB,SAAArxH,EAAA5H,EAAAC,EAAAV,EAAAoM,GAAuB,GAAA20B,GAAA5wB,EAAA9H,EAAAkyB,KAAgBlyB,GAAAsxH,+BAAA54F,EAAA+wF,MAAA/wF,EAAAo4F,mBAAA14H,EAAA4H,EAAAuxH,sBAAA74F,EAAAo4F,kBAAAp4F,EAAA+wF,MAAA/wF,EAAAq4F,mBAAA14H,EAAA2H,EAAAwxH,uBAAA94F,EAAAq4F,kBAAAr4F,EAAA+wF,MAAA9xH,IAAA+gC,EAAAk4F,OAAA,GAAA5wH,EAAAyxH,yBAAA/4F,EAAAk4F,MAAAl4F,EAAA+wF,MAAA1lH,IAAA20B,EAAAm4F,UAAA,GAAA7wH,EAAA0xH,kBAAAh5F,EAAAm4F,SAAAn4F,EAAA+wF,OAA8iBnoH,EAAAyC,EAAA20B,EAAAtjB,EAAArd,WAAxiCiI,GAAAiwE,QAAAlqE,QAAA,SAAA/F,GAA2G,GAAA8H,GAAA9H,EAAAoI,IAAa,WAAAN,EAAA06D,WAAAxiE,EAAAkxH,aAAAC,GAAAC,WAAAtpH,EAAAwpH,6BAAA,KAAAxpH,EAAAypH,sBAAA,KAAAzpH,EAAA0pH,uBAAA,KAAA1pH,EAAA2pH,yBAAA,KAAA3pH,EAAA4pH,kBAAA,QAA+oC,QAAA/5H,KAAa,MAAA4E,QAAAwwC,YAAAxrB,IAAAhlB,OAAAwwC,YAAAxrB,MAAA,KAAmvC,QAAA/oB,GAAAwH,EAAA8H,EAAA1P,EAAAC,GAAoB,GAAAV,GAAAoM,EAAAkH,SAAA02E,eAAA75E,EAAmC/D,OAAA4tH,UAAA,WAA2Bh6H,EAAAi6H,GAAA5xH,GAAA6xH,IAAa,IAAA/pH,GAAAgqH,GAAA9xH,EAAA5H,EAAc0P,IAAvV,SAAA9H,EAAA8H,EAAA1P,EAAAC,EAAA0L,GAAsB,GAAA20B,GAAAq5F,GAAA35H,EAAAC,GAAA+c,EAAA,IAAqBsjB,KAAAtjB,EAAAzd,IAAAq6H,GAAAC,GAAAC,wBAAApqH,EAAA1P,EAAA4H,GAA+CkyB,KAAAnuB,EAAAouH,UAAA/8G,GAAmBsjB,EAAA,QAA0O/gC,EAAAmQ,EAAAmoB,aAAAjwB,EAAA5H,EAAAC,IAA6B0L,EAAAquH,UAAA,WAAwBz6H,EAAAi6H,GAAA5xH,GAAA6xH,IAAa,IAAA/pH,GAAAgqH,GAAA9xH,EAAA5H,EAAc0P,IAAhT,SAAA9H,EAAA8H,EAAA1P,EAAAC,EAAA0L,GAAsB,GAAA20B,GAAAq5F,GAAA35H,EAAAC,GAAA+c,EAAA,IAAqBsjB,KAAAtjB,EAAAzd,IAAAq6H,GAAAC,GAAAI,oBAAAvqH,EAAA1P,EAAA4H,GAA2CkyB,KAAAnuB,EAAAouH,UAAA/8G,GAAmBsjB,EAAA,QAAuM/gC,EAAAmQ,EAAAmoB,aAAAjwB,EAAA5H,EAAAC,KAA+B,QAAAgB,GAAA2G,GAAc,GAAA8H,GAAAwqH,EAAAC,SAAAn6H,IAAuB,WAAA4H,EAAA5H,SAAiB,IAAA0P,IAAA0qH,GAAA1jF,QAAA,CAAwB,GAAAz2C,SAAAq9F,sBAAA/9F,QAAA81E,kBAA6D,eAAAp1E,GAAA2H,YAAA01F,sBAAAt9F,KAAA,cAAAT,GAAAqI,YAAAytE,qBAAAr1E,UAAgH,QAAAq6H,IAAAzyH,YAAAyyH,MAAAr6H,MAAA,kBAAA4H,IAAA8H,IAAA0qH,GAAAz1H,OAAA3E,UAAA,WAAA4H,GAAA60F,cAAAz8F,KAAwH,OAAAA,GAAS,QAAAuR,GAAA3J,EAAA8H,GAAgB,GAAA1P,EAAM,OAAA4H,KAAA8H,IAAA0qH,GAAAtkF,OAAAluC,EAAA0yH,kBAAAt6H,EAAA4H,EAAA0yH,iBAAAt6H,EAAA6J,OAAA,IAAAjC,EAAA2yH,oBAAA3yH,EAAA4yH,0BAAAx6H,EAAA4H,EAAA4yH,yBAAA9qH,IAAA0qH,GAAA1jF,UAAA9uC,EAAA6yH,WAAAz6H,EAAA4H,EAAA6yH,UAAAz6H,EAAA6J,OAAA,IAAAjC,EAAA8yH,aAAA9yH,EAAA4yH,0BAAAx6H,EAAA4H,EAAA4yH,2BAAAztC,GAAA/sF,GAA4W,QAAAkB,GAAA0G,EAAA8H,EAAA1P,GAAkB,GAAAC,GAAA,IAAWD,GAAAguG,QAAAhtG,eAAA4G,EAAAoI,KAAA8pB,QAAA95B,EAAAguG,QAAApmG,EAAAoI,KAAA8pB,MAAAswC,UAAAxiE,EAAAoI,KAAAo6D,UAAAxiE,EAAAoI,KAAA2qH,cAAA16H,EAAA2H,EAAAoI,KAAA2qH,cAAA/yH,EAAAoI,KAAAugC,QAAAtwC,EAAA2H,EAAAoI,KAAAugC,OAAAvwC,EAAAguG,QAAApmG,EAAAoI,KAAA8pB,MAAAyW,MAAAtwC,EAAA2H,EAAAoI,KAAA4qH,0BAAA56H,EAAAguG,QAAApmG,EAAAoI,KAAA8pB,MAAA8gG,wBAAAhzH,EAAAoI,KAAA4qH,0BAAm4C,QAAA5mG,GAAApsB,EAAA8H,EAAA1P,EAAAC,GAAoB,GAAAV,KAAS,OAAAS,KAAAo6H,GAAA1jF,QAAAn3C,EAAAmQ,MAAAnQ,EAA3mC,SAAAqI,EAAA8H,EAAA1P,GAAkB,GAAAC,GAAAV,EAAAoM,EAAA20B,EAAAtjB,EAAArd,EAAAuJ,EAAA4E,EAAAlO,IAAyB,aAAAgI,EAAAizH,wBAAAjzH,EAAAizH,cAAApiG,WAAAqiG,UAAA,IAAAnvH,EAAA/D,EAAAizH,cAAApiG,WAAAqiG,UAAAx6F,EAAA14B,EAAAmzH,gBAAA/9G,SAAA/c,EAAA,EAAuJA,EAAAyP,EAAApN,OAAWrC,IAAA,CAAK,IAAA+c,SAAAzd,EAAA,EAAiBA,EAAAoM,EAAArJ,OAAW/C,IAAA,GAAAmQ,EAAAzP,GAAAoQ,OAAA1E,EAAApM,GAAA8Q,KAAA,CAA8B2M,EAAArR,EAAApM,EAAO,gBAAMyd,IAAArd,EAAAwD,SAAA6Z,EAAAg+G,cAAA,IAAA9xH,EAAA/F,SAAA6Z,EAAAi+G,UAAA,IAAAntH,EAAA9N,EAAAsgC,EAAAxyB,EAAA,IAAA4B,EAAAzP,GAAAi7H,mBAAA,GAAA/3H,SAAAuM,EAAAzP,GAAA+6H,cAAA,IAAAr7H,GAAAmO,EAAA4B,EAAAzP,GAAAk7H,eAAA,GAAAh4H,SAAAuM,EAAAzP,GAAAg7H,UAAA,IAAA/xH,GAAA4E,EAAA4B,EAAAzP,GAAAm7H,qBAAAj4H,SAAAuM,EAAAzP,GAAA+6H,cAAA,IAAAr7H,EAAA+P,EAAAzP,GAAAo7H,iBAAAl4H,SAAAuM,EAAAzP,GAAAg7H,UAAA,IAAA/xH,WAAA8T,EAAAs+G,sBAAA5rH,EAAAzP,GAAAq7H,cAAA5rH,EAAAzP,GAAAs7H,oBAAAp4H,SAAAuM,EAAAzP,GAAAq7H,YAAA,IAAAn4H,SAAA6Z,EAAAs+G,YAAA,MAAAxtH,EAAA,KAAA4B,EAAAzP,GAAAu7H,mBAAAr4H,SAAAuM,EAAAzP,GAAAq7H,YAAA,IAAAn4H,SAAA6Z,EAAAs+G,YAAA,cAAAt+G,EAAAy+G,0BAAA/rH,EAAAzP,GAAAw7H,kBAAA/rH,EAAAzP,GAAAy7H,wBAAAv4H,SAAAuM,EAAAzP,GAAAw7H,gBAAA,IAAAt4H,SAAA6Z,EAAAy+G,gBAAA,MAAA3tH,EAAA,KAAA4B,EAAAzP,GAAA07H,uBAAAx4H,SAAAuM,EAAAzP,GAAAw7H,gBAAA,IAAAt4H,SAAA6Z,EAAAy+G,gBAAA,MAAA77H,EAAAuC,KAAAuN,EAAAzP,KAA4yB,MAAAL,IAAsCgI,EAAA8H,EAAAzP,IAAAV,EAAk+E,QAAA+Q,GAAA1I,EAAA8H,GAAgB,OAAA1P,KAAA0P,KAAA1O,eAAAhB,IAAA,OAAAA,GAAA,SAAAA,GAAA,cAAAA,IAAA4H,EAAA5H,GAAA0P,EAAA1P,GAAuF,OAAA4H,GAAS,QAAA2pG,GAAA3pG,EAAArI,EAAAoM,EAAAhM,EAAAuJ,GAAqjI,MAA/hI,UAAA4E,GAAc,GAAAA,EAAA,CAAM,GAAAlO,GAAAI,IAAAD,EAAA2P,aAAgB/P,EAAAi8H,0BAAA,OAAAj8H,EAAAi8H,yBAAAj8H,EAAAi8H,yBAAA77H,EAAAJ,EAAAk8H,kBAAAl8H,EAAAi8H,yBAAA77H,EAAAJ,EAAAm8H,WAAAn8H,EAAAi8H,kCAAAj8H,EAAAo8H,gCAAA,OAAAp8H,EAAAo8H,+BAAAp8H,EAAAo8H,+BAAAC,EAAA,EAAAr8H,EAAAo8H,+BAAAh8H,EAAAJ,EAAAm8H,WAAAn8H,EAAAo8H,+BAAAp8H,EAAAm8H,WAAA/7H,CAAsZ,IAAAW,MAAQN,EAAA85H,EAAAC,SAAAl5H,EAAAtB,EAAA23H,aAAAn2H,EAAAxB,EAAAk4B,YAAiDn3B,GAAA6C,QAAA04H,EAAAv7H,EAAAy4G,MAAA+iB,EAAAx7H,EAAA42H,aAAA6E,mBAAAl7H,GAAAP,EAAA07H,MAAAx8H,EAAAc,EAAA27H,UAAA,EAAA37H,EAAA47H,YAAA38H,EAAA48H,QAAA77H,EAAA87H,KAAA78H,EAAA88H,gBAAA9wH,IAAAjL,EAAA+4H,KAAA9tH,GAAA+wH,GAAAC,YAAAj8H,EAAA4jG,MAAAo4B,GAAAC,WAAAj8H,EAAAk8H,QAAAT,mBAAA58H,GAAAmB,EAAA4pH,SAAAnpH,EAAAg7H,mBAAAh7H,GAAA,KAAAT,EAAAm8H,SAAAC,CAA+Q,IAAAxsH,GAAAihG,EAAA1wE,EAAAL,EAAAu8F,EAAAC,EAAAC,EAAAC,GAAqBrlD,YAAW72C,EAAA,KAAAC,KAAAF,KAAA/yB,KAAsB4yB,IAAM,KAAAI,EAAAm8F,GAAArvH,GAAAwC,EAAA,EAAgBA,EAAA0wB,EAAA1+B,SAAWgO,EAAA,GAAAihG,EAAA9wE,EAAAO,EAAA1wB,IAAAuwB,EAAAu8F,EAAA7rB,IAAAzwF,EAAA+f,GAAA,GAAAA,EAAA7/B,eAAA,aAAAw/B,EAAA,YAAA08F,EAAAl8H,eAAAw/B,KAAA08F,EAAA18F,OAAApgC,IAAAg6H,GAAA1jF,SAAAvzC,SAAA09B,EAAAL,GAAAw6F,cAAA,OAAA73H,SAAA09B,EAAAL,GAAAy6F,UAAA,SAAAiC,EAAA18F,GAAAr+B,KAAA0+B,EAAAL,IAAA,SAAAK,EAAAL,GAAA68F,2BAAAx8F,EAAAL,GAAA68F,uBAAA38H,EAAA48H,sBAAAJ,EAAA18F,GAAAl+B,UAAA46H,EAAA18F,GAAAr+B,KAAA0+B,EAAAL,IAAA,SAAAK,EAAAL,GAAA+8F,eAAA18F,EAAAL,GAAA+8F,WAAA78H,EAAA48H,sBAAAJ,EAAA18F,GAAAl+B,aAA+Z,IAAAu+B,EAAA28F,eAAAxvH,EAAA6yB,EAAA28F,eAAAz7H,IAAA8+B,EAAA28F,mBAAiE,IAAA38F,EAAA48F,gBAAA78F,EAAAC,EAAA48F,gBAAA17H,IAAA8+B,EAAA48F,oBAAoE,IAAA58F,EAAA68F,IAAAR,EAAAQ,IAAA78F,EAAA68F,QAA0B,IAAA78F,EAAA88F,WAAAT,EAAAS,aAAAT,EAAAS,eAAAT,EAAAS,WAAAx7H,KAAA0+B,EAAA88F,gBAAqF,IAAA98F,EAAA0P,MAAA2sF,EAAA3sF,QAAA2sF,EAAA3sF,UAAA2sF,EAAA3sF,MAAApuC,KAAA0+B,EAAA0P,WAA4D,IAAA1P,EAAA+8F,cAAAV,EAAAU,gBAAAV,EAAAU,kBAAAV,EAAAU,cAAAz7H,KAAA0+B,EAAA+8F,mBAAoG,WAAKZ,EAAAa,GAAAl+H,EAAAkhC,EAAA/G,QAAAkjG,EAAAc,iBAAAb,EAAAc,GAAA58H,EAAAF,EAAA0K,EAAAhM,EAAAuJ,EAAA,MAAA+zH,IAAAl8F,MAAAi8F,EAAAa,GAAAl+H,EAAAkhC,EAAA/G,OAAAkjG,IAAAD,EAAAC,EAAAnlG,uBAAAklG,MAAA57H,EAAqI,IAAA68H,IAAOjH,OAAAgG,EAAA/sH,KAAA6wB,EAAA7wB,KAAA0kH,WAAA7zF,EAAA6zF,WAAAoE,WAAAj4F,EAAAi4F,WAAAh/F,KAAA+G,EAAA/G,eAAkFkjG,IAAAgB,EAAA/iC,MAAA+hC,EAAA/hC,MAAA+iC,EAAAzjD,KAAAyiD,EAAAziD,KAAAyjD,EAAAC,mBAAAjB,EAAAiB,mBAAAD,EAAAE,MAAAlB,EAAA3hG,YAAA6hG,EAAArlD,QAAA11E,KAAA67H,GAA6H,GAAAt9H,EAAA+3B,WAAAykG,IAAApC,YAAA75F,EAAyuH,SAAAr5B,EAAA8H,GAAgB,GAAA1P,GAAAC,EAAAV,EAAAoM,EAAA20B,EAAAtjB,EAAArd,EAAAuJ,EAAA4E,EAAAlO,KAAAG,EAAA,OAAAW,KAAAN,EAAA85H,EAAAC,SAAAl5H,EAAA,SAAA2G,GAAqE,GAAAA,EAAAu2H,eAAA,CAAqB,GAAAzuH,GAAA9H,EAAAu2H,gBAAA,EAA2B,eAAAv2H,EAAAiX,UAAAjX,EAAA8pG,UAAA1xG,IAAA0P,GAAA,GAAAA,GAAA,IAAA3P,EAA3P,SAAA6H,GAAc,GAAA8H,GAAA,MAAa,QAAA9H,GAAU,OAAA8H,EAAA,UAAoB,MAAM,QAAAA,EAAA,UAAoB,MAAM,QAAAA,EAAA,WAAoB,MAAAA,IAA8IA,QAAmE,SAAU,KAAA/P,EAAA,EAAQA,EAAAiI,EAAAtF,OAAW3C,IAAA,GAAAuJ,EAAAtB,EAAAjI,GAAAS,IAAAg6H,GAAA1jF,SAAA,kBAAAxtC,EAAAoU,MAAA,SAAApU,EAAAq0H,eAAAr0H,EAAAq0H,SAAA,sBAAAr0H,EAAAoU,MAAA,SAAApU,EAAAm0H,2BAAAn0H,EAAAm0H,qBAAA,cAAAn0H,EAAAoU,OAAA5c,KAAAwI,EAAAsxH,0BAAA1sH,EAAA5E,EAAAsxH,2BAAA95H,KAAAV,EAAAkJ,EAAAoxH,iBAAAr6H,EAAAiJ,EAAAqxH,kBAAAh7H,EAAA2J,EAAAk1H,uBAAAzyH,EAAAzC,EAAAm1H,wBAAA/9F,EAAAp3B,EAAAo1H,oBAAA59H,KAAAV,EAAAkJ,EAAAuxH,UAAAx6H,EAAAiJ,EAAAwxH,WAAAn7H,EAAA2J,EAAAq1H,cAAA5yH,EAAAzC,EAAAs1H,eAAAl+F,EAAAp3B,EAAAklH,eAAA1tH,EAAA,CAA2eV,IAAAgd,EAAA,IAAAhd,EAAAqE,QAAA,MAAAqL,EAAA+uH,cAAA78D,KAAA3gE,EAAkD,OAAM,IAAAP,EAAA,MAAAd,EAAe,IAAA2R,GAAA7B,EAAAgvH,aAAsB,iBAAAntH,KAAAkpH,YAAAz6H,GAAAuR,EAAAmpH,aAAAz6H,GAAAsR,EAAA68G,gBAAA9tF,GAAA/uB,EAAAipH,0BAAA1sH,IAAA4B,EAAAgvH,eAA4HjE,UAAAz6H,EAAA06H,WAAAz6H,EAAAs+H,cAAAh/H,EAAAi/H,eAAA7yH,EAAAyiH,cAAA9tF,EAAAq+F,KAAA3hH,EAAA4hH,UAAA7+H,EAAAy6H,wBAAA1sH,GAAuHlO,SAAzwJs9H,EAAApC,UAAAn7H,IAAAshC,GAAA49F,GAAA31H,EAAA2wH,GAAAiF,sBAAA79H,GAAAi8H,EAAApC,WAAA16H,IAAAg6H,GAAA1jF,UAAAwmF,EAAApC,UAAAoC,EAAAU,cAAAlvF,OAAA,SAAA9mC,GAAqK,SAAAA,EAAA21H,UAAA,SAAA31H,EAAA21H,aAA0CL,EAAApC,UAAA,OAAAp6F,GAAA,EAA2BA,EAAAw8F,EAAApC,UAAAx4H,OAAqBo+B,IAAAw8F,EAAApC,UAAAp6F,GAAArwB,KAAAkB,EAAA2rH,EAAApC,UAAAp6F,GAAAtgC,EAA4CT,GAAA48H,UAAAwC,GAAAC,WAAqtK,SAAAp3H,GAAc,GAAA8H,GAAA1P,EAAA4H,EAAA6wB,WAAAugG,QAA8B,aAAAh5H,EAAA,IAAA0P,IAAA1P,KAAAgB,eAAA0O,KAAA1P,EAAA0P,GAAAM,KAAAivH,OAAAj/H,EAAA0P,GAAAM,KAAAivH,OAAA,EAAAj/H,EAAA0P,GAAAM,KAAAkvH,QAAAl/H,EAAA0P,GAAAM,KAAAkvH,QAAA,EAAAl/H,EAAA0P,GAAAM,KAAAg+G,IAAAhuH,EAAA0P,GAAAM,KAAAg+G,IAAA,EAAAhuH,EAAA0P,GAAAM,KAAAmvH,gBAAAn/H,EAAA0P,GAAAM,KAAAmvH,cAAA,KAAjwKz+H,GAAAw8H,EAAAS,aAAAT,EAAAj+C,GAAAi+C,MAAApC,WAAAoC,EAAAU,gBAAAV,EAAAkC,GAAAlC,IAAAn8F,GAAA64F,GAAAC,GAAA7rB,QAAA7sG,EAAAF,EAAA0K,EAAA0zH,GAAA1/H,KAAA88H,QAAA6C,KAAA1F,GAAA2F,GAAAC,oBAAAr+H,EAAAF,EAAA0K,EAAA0sH,GAAA14H,EAAA88H,QAAA6C,MAA+L,IAAA/+F,MAAQ1yB,GAAIka,SAAA,MAAc03G,GAAI13G,SAAA,MAAc23G,GAAI33G,SAAA,MAAc43G,EAAA,IAAQ,IAAAC,EAAAC,KAAAD,EAAA5pB,OAAA8pB,WAAgCjoD,QAAAqlD,EAAArlD,QAAA1hC,SAAA/1C,IAA6Bw/H,EAAAC,KAAAD,EAAA5pB,OAAA+pB,gCAAAN,GAAA,OAAAA,EAAA13G,UAAA03G,EAAA13G,SAAApa,QAAA,SAAA/F,GAAyG+3H,GAAGv1D,UAAAxiE,EAAAwiE,UAAAtwC,KAAAlyB,EAAAkyB,KAAAkmG,eAAAp4H,EAAA0V,MAAwDs8G,GAAAC,GAAAoG,YAAA9+H,EAAAF,EAAA0K,EAAAg0H,EAAAhgI,EAAA88H,UAAqCmD,EAAAC,KAAAD,EAAA5pB,OAAAkqB,uCAAAR,GAAA,OAAAA,EAAA33G,WAAA43G,EAAAD,EAAA33G,SAAA6xG,GAAA2F,GAAAY,8BAAAh/H,EAAAF,EAAA0K,EAAAg0H,EAAAhgI,EAAA88H,SAAAmD,EAAAC,KAAAD,EAAA5pB,OAAAoqB,eAAAvyH,GAAA,OAAAA,EAAAka,SAAA,CAA6M,GAAAla,EAAAka,SAAA8vD,QAAA,IAAAvnE,EAAA,EAA8BA,EAAAzC,EAAAka,SAAA8vD,QAAAv1E,OAA4BgO,IAAApP,EAAA2M,EAAAka,SAAA8vD,QAAAvnE,GAAAlQ,EAAAT,EAAiC4gC,GAAAs3C,QAAAhqE,EAAAka,SAAA8vD,OAA6B,QAAAwoD,GAAA,EAAAC,GAAAh+H,OAAAi+H,EAAA,EAAAlqD,EAAA,SAAAzuE,GAAwCA,EAAAoI,KAAA8pB,OAAAymG,IAAAF,GAAA,UAAAz4H,EAAAwiE,WAAAxiE,EAAAkxH,aAAAC,GAAAyH,UAAwE,EAAAF,GAAAh+H,QAAYi+H,EAAAD,GAAA30F,QAAApL,EAAAs3C,QAAAlqE,QAAA0oE,EAAmC,IAAAgqD,EAAA,CAAM,GAAAtsG,IAAOq2C,UAAA,QAAAtwC,KAAA,KAAAkmG,eAAAS,GAAAC,yBAAwE9G,IAAAC,GAAAoG,YAAA9+H,EAAAF,EAAA0K,EAAAooB,EAAAp0B,EAAA88H,QAAoC,GAAAl8F,EAAA+7F,YAAA38H,EAAA48H,QAAAh8F,EAAAogG,qBAAt9Oj+H,UAAAk+H,OAAA,mBAAs9O1D,EAAApC,YAAAv6F,EAAAu6F,UAAA9mG,EAAAr0B,EAAAu9H,EAAApC,UAAA16H,EAAAR,IAAAs9H,EAAAQ,MAAAn9F,EAAAm9F,IAAAR,EAAAQ,cAAA/9H,EAAAkhI,2BAAAlhI,EAAAkhI,6BAAAC,EAAAjkG,MAAA,CAAqM,GAAAkkG,IAA/jL,SAAAn5H,GAAc,GAAA8H,MAAQ1P,EAAAghI,GAAAC,kBAAyB,OAAAr5H,GAAA+4H,kBAAAjxH,EAAAixH,gBAAA/4H,EAAA+4H,iBAAA/4H,EAAA00H,cAAA5sH,EAAA4sH,YAAA10H,EAAA00H,aAAAt8H,IAAA0P,EAAAwxH,cAAAlhI,GAAA0P,EAAAmoE,WAAgJ,OAAAjwE,EAAAiwE,QAAAnoE,GAAA9H,EAAAiwE,QAAAlqE,QAAA,SAAA/F,GAAmD,GAAA5H,IAAOi7F,MAAArzF,EAAAqzF,MAAAnhE,KAAAlyB,EAAAkyB,KAAAygD,KAAA3yE,EAAA2yE,KAAA1iD,aAAAjwB,EAAAmvH,OAAA17F,WAAAzzB,EAAAs2H,MAAAD,mBAAAr2H,EAAAq2H,mBAAwHr2H,GAAAoI,KAAAhP,eAAA,eAAAhB,EAAAmhI,aAAAv5H,EAAAoI,KAAAoxH,WAAAx5H,EAAAoI,KAAAhP,eAAA,mBAAAhB,EAAAgxH,QAAAppH,EAAAoI,KAAAqxH,eAAAz5H,EAAAoI,KAAAhP,eAAA,cAAAhB,EAAAshI,QAAA15H,EAAAoI,KAAAuxH,UAAA35H,EAAAoI,KAAAhP,eAAA,mBAAAhB,EAAAoqE,UAAAxiE,EAAAoI,KAAAwxH,eAAA55H,EAAAoI,KAAAhP,eAAA,aAAAhB,EAAAguH,IAAApmH,EAAAoI,KAAAkvH,SAAAt3H,EAAAoI,KAAAhP,eAAA,YAAAhB,EAAAguH,IAAApmH,EAAAoI,KAAAivH,QAAAr3H,EAAAoI,KAAAhP,eAAA,mBAAAhB,EAAAguH,IAAApmH,EAAAoI,KAAAmvH,eAAAv3H,EAAAoI,KAAAhP,eAAA,YAAAhB,EAAAyhI,OAAA75H,EAAAoI,KAAAyxH,QAAA75H,EAAAoI,KAAAhP,eAAA,wBAAAhB,EAAAyhI,OAAA75H,EAAAoI,KAAA0xH,oBAAA95H,EAAAoI,KAAAhP,eAAA,sBAAAhB,EAAA2hI,iBAAA/5H,EAAAoI,KAAA2xH,kBAAA/5H,EAAAoI,KAAAhP,eAAA,qBAAAhB,EAAA4hI,gBAAAh6H,EAAAoI,KAAA4xH,iBAAAh6H,EAAAoI,KAAAhP,eAAA,gBAAAhB,EAAAkrE,WAAAtjE,EAAAoI,KAAAk7D,YAAAtjE,EAAAoI,KAAAhP,eAAA,gBAAAhB,EAAA6hI,WAAAj6H,EAAAoI,KAAA8xH,YAAAl6H,EAAAoI,KAAAhP,eAAA,mBAAAhB,EAAA+hI,cAAAn6H,EAAAoI,KAAAgyH,eAAAp6H,EAAAoI,KAAAhP,eAAA,2BAAAhB,EAAAiiI,qBAAAr6H,EAAAoI,KAAAkyH,uBAAAt6H,EAAA8sH,YAAA,UAAA9sH,EAAA8sH,WAAA9sH,EAAAkxH,aAAA94H,EAAAmiI,UAAAv6H,EAAAkxH,WAAA,QAAAlxH,EAAA8sH,YAAA,WAAA9sH,EAAA8sH,YAAA9sH,EAAAkxH,aAAA94H,EAAAmiI,UAAA,UAAAv6H,EAAAkxH,WAAA,QAAAppH,EAAAmoE,QAAAjwE,EAAAkyB,MAAA95B,IAAkxC0P,IAA47H6wB,EAAYugG,GAAAjkG,MAAAkkG,IAAaxgG,EAAA67F,MAAAx8H,EAAA2gC,EAAA6hG,iBAA4B7hG,EAAA6hG,cAAAC,aAA/rT,WAAa,GAAAC,GAAA,MAAAA,IAAAjgI,SAAkrTk+B,EAAA6hG,cAAAG,kBAA5pT,WAAa,GAAAD,GAAA,MAAAA,IAAAE,YAA+oTjiG,EAAAkiG,UAAAC,EAAAziI,EAAAsgC,EAArrM,SAAA34B,GAAc,GAAA8H,GAAA1P,EAAAC,CAAU,KAAAyP,IAAA9H,GAAAiwE,QAAA,GAAAjwE,EAAAiwE,QAAA72E,eAAA0O,GAAA,CAAmD,GAAA9H,EAAAiwE,QAAAnoE,GAAA8wH,QAAA,IAAAvgI,IAAA2H,GAAAiwE,QAAAnoE,GAAA8wH,QAAA54H,EAAAiwE,QAAAnoE,GAAA8wH,QAAAx/H,eAAAf,KAAAD,EAAA4H,EAAAiwE,QAAAnoE,GAAA8wH,QAAAvgI,GAAA0iI,KAAA3iI,IAAA4iI,GAAAC,IAAAj7H,EAAAiwE,QAAAnoE,GAAA8wH,QAAAvgI,GAAA0iI,KAAA,EAAA3iI,IAAA4iI,GAAAE,KAAAl7H,EAAAiwE,QAAAnoE,GAAA8wH,QAAAvgI,GAAA0iI,KAAA,EAAA/6H,EAAAiwE,QAAAnoE,GAAA8wH,QAAAvgI,GAAA0iI,KAAA,EAAmP,IAAA/6H,EAAAiwE,QAAAnoE,GAAAspH,SAAA,IAAA/4H,IAAA2H,GAAAiwE,QAAAnoE,GAAAspH,SAAApxH,EAAAiwE,QAAAnoE,GAAAspH,SAAAh4H,eAAAf,KAAAD,EAAA4H,EAAAiwE,QAAAnoE,GAAAspH,SAAA/4H,GAAA0iI,KAAA3iI,IAAA4iI,GAAAC,IAAAj7H,EAAAiwE,QAAAnoE,GAAAspH,SAAA/4H,GAAA0iI,KAAA,EAAA3iI,IAAA4iI,GAAAE,KAAAl7H,EAAAiwE,QAAAnoE,GAAAspH,SAAA/4H,GAAA0iI,KAAA,EAAA/6H,EAAAiwE,QAAAnoE,GAAAspH,SAAA/4H,GAAA0iI,KAAA,GAA0P,MAAA/6H,IAA6nL24B,IAAA5gC,EAAAkhI,yBAAA1+H,KAAAo+B,GAAA7/B,EAAAqiI,oBAAApjI,EAAAkhI,yBAAAlhI,EAAAk7H,cAAAn6H,CAAyM,IAAAsiI,IAA64L,QAAAl5G,GAAAliB,GAAc,GAAA8H,EAAM,WAAA9H,GAAA,gBAAAA,GAAA,MAAAA,EAAyC,IAAAA,YAAAkF,OAAA,CAAuB4C,IAAK,QAAA1P,GAAA,EAAAC,EAAA2H,EAAAtF,OAAuBtC,EAAAC,EAAID,IAAA0P,EAAA1P,GAAA8pB,EAAAliB,EAAA5H,GAAiB,OAAA0P,GAAS,GAAA9H,YAAAvH,QAAA,CAAwBqP,IAAK,QAAAnQ,KAAAqI,KAAA5G,eAAAzB,KAAAmQ,EAAAnQ,GAAAuqB,EAAAliB,EAAArI,IAAmD,OAAAmQ,KAA3mMhP,SAAYsiI,IAAAvqG,WAAA94B,EAAAo8H,gCAAAC,IAAAr8H,EAAAkhI,4BAAAoC,GAAAnvG,IAAAkvG,MAAAD,oBAAAzgI,QAAA0gI,GAAAE,QAAAD,GAAAE,UAAjsI,SAAAv7H,EAAA8H,EAAAzP,EAAAV,EAAAoM,EAAA20B,GAAwB,GAAAtjB,GAAAhd,GAAU4H,GAAA5G,eAAA,UAAA4G,EAAA5G,eAAA,UAAAm/C,IAAA5f,EAAAg/F,GAAA6D,eAAAx7H,EAAA04B,GAAA5wB,EAAAqrH,gBAAA/9G,EAAAtN,EAAA2zH,gBAAA3zH,EAAA6sH,UAAA30H,EAAA07H,cAAAnjF,GAAAojF,GAAAC,YAAuKC,QAAAlE,GAAA6D,eAAApzH,KAAApI,MAAw/Ho7H,GAAArjI,EAAAsB,EAAAE,EAAA5B,EAAAqI,GAAAjI,EAAAo8H,+BAAA,MAA0pB,QAAAqB,GAAAx1H,GAAc,GAAA8H,KAAS,mBAAA9H,EAAA0V,MAAA,gBAAA1V,EAAA0V,MAAA,gBAAA1V,EAAA0V,MAAA,iBAAA1V,EAAA0V,KAAA,CAAmG,GAAA5N,EAAAoqB,KAAAlyB,EAAAkyB,KAAApqB,EAAAopH,WAAA,eAAAlxH,EAAA0V,MAAA,gBAAA1V,EAAA0V,KAAA,gCAAA48G,EAAAh6H,OAAA0H,EAAAwiE,UAAA,CAAmIxiE,EAAA7F,GAAA2hI,SAAA,SAAA97H,EAAAwiE,UAAA,QAAAxiE,EAAA7F,GAAA2hI,SAAA,WAAA97H,EAAAwiE,UAAA,QAAyF,IAAApqE,GAAA4H,EAAA7F,GAAA+D,MAAA,IAAsB,IAAA9F,EAAA,OAAY4H,EAAAkyB,KAAA32B,SAAAnD,EAAA,IAAA0P,EAAAoqB,KAAAlyB,EAAAkyB,KAAoC,MAAAlyB,KAAW8H,EAAAM,KAAApI,aAAA+7H,SAAAj0H,EAAAglH,WAAA,SAAA9sH,EAAA+7H,eAAA/7H,EAAA+7H,SAAA,iBAAAj0H,EAAAglH,WAAA,QAAA9sH,EAAAqpG,UAAAvhG,EAAAuhG,QAAArpG,EAAAqpG,SAAArpG,EAAAwiE,YAAA16D,EAAA06D,UAAAxiE,EAAAwiE,eAA6L,kBAAAxiE,EAAA0V,MAAA1V,EAAA21H,SAAA7tH,EAAAorH,UAAAlzH,EAAA,mBAAAA,EAAA0V,MAAA,oBAAA1V,EAAA0V,KAAA5N,EAAA8tH,eAAA51H,EAAA,oBAAAA,EAAA0V,MAAA,qBAAA1V,EAAA0V,KAAA5N,EAAA+tH,gBAAA71H,EAAA,cAAAA,EAAA0V,MAAA,sBAAA1V,EAAA0V,KAAA5N,EAAAorH,UAAAlzH,EAAA,aAAAA,EAAA0V,KAAA5N,EAAAguH,IAAA91H,EAAA,UAAAA,EAAA0V,KAAA5N,EAAAiuH,WAAA/1H,EAAA,mBAAAA,EAAA0V,KAAA5N,EAAAkuH,cAAAh2H,EAAA,UAAAA,EAAA0V,KAAA5N,EAAA6gC,MAAA3oC,EAAA,SAAAA,EAAA0V,OAAA5N,EAAAglH,WAAA,QAAA9sH,EAAAqzH,UAAAvrH,EAAAopH,WAAA,WAAAppH,EAAAopH,WAAA,UAAAppH,EAAAoqB,KAAAlyB,EAAAkyB,KAAApqB,EAAAM,KAAApI,EAA0gB,OAAA8H,GAAwqC,QAAA+wB,GAAA74B,GAAc,GAAA8H,GAAA1P,IAAW4H,GAAAouF,oBAAAz3E,QAAAve,EAAAg2F,UAAApuF,EAAAouF,UAAAx3E,UAAArR,YAAAvF,EAAA0V,OAAAtd,EAAAsd,KAAA1V,EAAA0V,KAAoG,IAAArd,GAAA,CAAQ,IAAA2H,EAAA8lD,MAAA,CAAY,GAAAnuD,GAAAqI,EAAA8lD,OAAgB,KAAAztD,EAAA,EAAQA,EAAAV,EAAA+C,SAAWrC,EAAAD,EAAAT,EAAAU,IAAA2H,EAAAquF,KAAA12F,EAAAU,QAAyB,KAAAyP,IAAA9H,KAAA5G,eAAA0O,KAAA1P,EAAA0P,GAAA9H,EAAA8H,GAAiD,IAAA1P,EAAAu2B,OAAA,CAAa,IAAAt2B,EAAA,EAAQA,EAAAD,EAAAu2B,OAAAj0B,SAAkBrC,EAAA,CAAK2H,EAAA5H,EAAAu2B,OAAAt2B,EAAc,KAAAyP,IAAA9H,KAAA5G,eAAA0O,KAAA1P,EAAA0P,GAAA9H,EAAA8H,UAA4C1P,GAAAu2B,OAAgB,MAAAv2B,GAAS,QAAA8gB,GAAAlZ,GAAc,UAAAA,EAAA,QAAqB,IAAAA,EAAAtF,OAAA,UAAuB,QAAAsF,EAAAtF,OAAA,QAAyB,IAAAoN,EAAM,KAAAA,IAAA9H,GAAA,GAAAA,EAAA5G,eAAA0O,GAAA,QAA2C,UAAse,QAAAutH,GAAAr1H,GAAc,MAAA2+E,eAAA3+E,GAAA,KAAs5B,QAAAo2H,KAAa7F,GAAAyL,cAAAC,GAAA3H,EAAA4H,EAAA,OAAiCpoH,IAAA,oBAAsBy8G,GAAA4L,iBAAAC,KAAA7L,GAAAyL,gBAA8C,QAAAljG,GAAA94B,GAAc,IAAI,GAAAzD,eAAA2e,eAAA,CAAkC,GAAApT,GAAAmT,KAAAgK,MAAA1oB,OAAA2e,eAAAgK,QAAA,kBAAkE,IAAApd,KAAA9H,GAAA,MAAA8H,GAAA9H,GAAA6xH,MAA6B,MAAA7xH,GAAS,YAAY,YAAY,QAAA24B,GAAA34B,EAAA8H,EAAA1P,GAAkB,GAAAC,GAAAyP,EAAAi7F,OAAAprG,EAAAmQ,EAAA46G,SAAA3+G,EAAA+D,EAAA+pH,IAAqC/pH,GAAA+zH,QAAA77H,EAAA80H,GAAAuH,cAAAvH,GAAAC,UAAAT,EAAA4H,IAAAn4H,IAAAw0C,IAAA5gD,IAAA,IAAA2kI,GAAA7/H,QAAApE,KAAAyP,EAAA4nH,eAAA6M,GAAAz0H,EAAA40F,MAAAo4B,GAAAC,UAAAyH,GAAAx8H,EAAA8H,EAAA1P,MAAAC,GAAAD,EAAAqkI,GAAAj1E,QAAAnvD,EAAA,2BAAAyP,EAAA4zH,cAAAnjF,GAAAojF,GAAAC,YAAwNC,QAAA77H,EAAAoI,KAAAN,EAAA3D,SAAA/L,KAA4B08H,GAAA4H,0BAAApI,EAAA4H,EAAA,SAAAxjG,EAAAtjB,GAAoDsjB,IAAA+jG,GAAAj1E,SAAA9uB,IAAAikG,GAAAC,cAAA90H,EAAA4zH,cAAAnjF,GAAAojF,GAAAC,YAAuEC,QAAA77H,EAAAoI,KAAAN,EAAA3D,SAAA/L,KAA4BA,GAAAsgC,IAAAikG,GAAAC,aAAAxkI,EAAAsgC,EAAAtjB,IAAAsjB,IAAA+jG,GAAAj1E,SAAA,mCAAApyC,KAAArR,IAAAw0C,IAAA5gD,IAAA,IAAA2kI,GAAA7/H,QAAApE,KAAAyP,EAAA4nH,eAAA6M,GAAAz0H,EAAA40F,MAAAo4B,GAAAC,UAAAyH,GAAAx8H,EAAA8H,EAAA1P,MAAAC,GAAAD,EAAAqkI,GAAAj1E,QAAAnvD,EAAA,2BAAAyP,EAAA4zH,cAAAnjF,GAAAojF,GAAAC,YAAgQC,QAAA77H,EAAAoI,KAAAN,EAAA3D,SAAA/L,QAA07B,QAAA0/H,KAAa+E,QAAAn+C,YAAA,YAAjoB,WAAa,GAAA1+E,KAASvH,QAAAg3B,KAAAmiG,IAAA7rH,QAAA,SAAA+B,GAAoC,GAAA1P,GAAAw5H,GAAA9pH,EAAY,KAAA1P,EAAA,QAAe,IAAAC,GAAAV,EAAAoM,GAAW8tH,KAAAz5H,EAAAy5H,KAAAiL,eAAA1kI,EAAA0kI,gBAA4CpkG,IAAM,IAAAtgC,EAAAkjF,aAAA,CAAmB,GAAAlmE,GAAArd,EAAAK,EAAAkjF,YAAuB,KAAAjjF,EAAA,EAAQA,EAAAN,EAAA2C,OAAWrC,IAAAV,KAAQyd,EAAArd,EAAAM,GAAAV,GAAWi9H,KAAAx/G,EAAAy/G,OAAAF,QAAAv/G,EAAAu/G,QAAA3xC,mBAAA5tE,EAAA4tE,mBAAA4N,kBAAAx7E,EAAAw7E,kBAAAmsC,oBAAA3nH,EAAAyhH,cAAAn8H,OAAAu1B,aAAA7a,EAAA6a,cAAqLyI,EAAAn+B,KAAA5C,GAAWoM,EAAAu3E,aAAA5iD,EAAA14B,EAAA8H,GAAA/D,GAA0B,IAAA+D,IAAOk1H,aAAAlI,GAAAmI,UAAAC,WAAA3kF,GAAA4kF,aAAAn9H,EAAAo9H,QAAA7gI,OAAAgrB,SAAA0lF,KAAA5nC,UAAA,OAAA1pE,QAAA04H,EAAiHvsH,GAAAu1H,SAAAjE,GAAAkE,uBAAArB,GAAA3H,EAAA4H,EAAA,eAAAp0H,OAAgHqhF,KAAM,QAAA4uC,KAAa1C,EAAAwH,OAAA,KAA6X,GAAAlE,GAAAlqD,EAAA72E,EAAA,IAAAu0B,EAAAv0B,EAAA,IAAAuhI,EAAAvhI,EAAA,IAAAwjI,EAAA,sCAAAmC,EAAA,6BAAAlJ,EAAA,SAAAmJ,EAAA,2DAAAC,EAAA,kEAAAC,EAAA,4CAAAnB,EAAA,mBAAAvE,EAAA,GAAA7rG,GAAAwxG,SAAA7C,EAAA,IAAocv+H,iBAAAqhI,4BAA6C,IAAAC,GAAAvJ,EAAA,KAAA4H,EAAA,KAAA4B,EAAA,KAAA5I,EAAA,KAAA6I,KAAAC,KAAAC,EAAA,GAAAC,EAAA,SAAAl+H,EAAA8H,GAA+F,GAAA1P,GAAA,sBAAA4H,EAAA,MAAA8H,CAAsCtK,SAAAsC,KAAA1H,GAAA6jI,OAAA3H,EAAA4H,EAAA,OAAoCpoH,IAAA1b,IAAM6lI,GAAA,WAAgBE,EAAAvmI,EAAA,IAAAwmI,EAAA,IAAmC,KAAIA,EAAA,GAAAD,GAAAE,YAAsB,MAAAr+H,GAASk+H,EAAA,eAAAl+H,GAAqB,GAAAs+H,GAAAhM,EAAAiM,KAAAC,GAAoB77F,OAAAhsB,KAAA4K,OAAkB23G,GAAKjkG,MAAA,KAAAwpG,cAAA,KAAAC,kBAAA,KAAAC,YAAA,MAAsEvK,EAAA,KAAAwK,KAAAC,KAAAnG,MAA6xEiD,GAAA,GAA7xE,YAA2E,QAAA37H,KAAA8H,GAAgBpD,WAAA,WAAsB,GAAArM,GAAAD,IAAA4H,EAAAoI,KAAAosH,KAA2Bx0H,GAAAoI,KAAAqsH,UAAAp8H,EAAAsgC,EAAA34B,EAAA67H,QAAA77H,EAAAoI,KAAApI,EAAAmE,WAAkD2D,GAAIpQ,KAAAy0H,cAAAz0H,KAAAonI,mBAAA,SAAA9+H,EAAA8H,GAAyD,OAAA1P,GAAAT,EAAA,EAAqBA,EAArBD,KAAqBy0H,WAAAzxH,OAAsB/C,IAAAS,EAA3CV,KAA2Cy0H,WAAAx0H,GAAAS,EAAAgQ,KAAAwsH,OAAA9sH,IAAA1P,EAAAgQ,KAAAs6G,SAAA1iH,IAA2DtI,KAAAqnI,iBAAA,SAAAj3H,EAAAzP,EAAAV,EAAAoM,EAAA20B,EAAAtjB,GAAwD,OAAX1d,KAAWy0H,WAAAzxH,OAAA,CAA4B,IAAAoN,EAAAitH,UAAA,WAAAjtH,GAAA40H,0BAAApI,EAAA4H,EAA+D,KAAA7jI,EAAA,CAAO,GAAAiJ,GAAA4E,EAAAlO,EAAAG,EAAAW,EAAAV,IAAAI,KAAAa,EAAAuM,KAAA0mC,IAAA8nF,EAA7G18H,KAA6Gy0H,WAAAzxH,OAAAskI,GAA6D,KAAA19H,EAAA,EAAQA,EAAlL5J,KAAkLy0H,WAAAzxH,OAAsB4G,IAAA,GAAAtJ,EAAxMN,KAAwMy0H,WAAA7qH,IAAAtJ,EAAAoQ,KAAAs6G,UAAA1qH,EAAAoQ,KAAAwsH,MAAA58H,EAAAoQ,KAAAsnH,eAAA6M,EAAA/jI,EAAA+B,KAAxM7C,KAAwMy0H,WAAA7qH,QAAyG,IAAAtJ,EAAAoQ,KAAA26F,SAAAkvB,GAAAgN,WAAA,CAAuC,GAAAjnI,EAAAoQ,KAAAs0F,MAAA50F,EAAAitH,UAAAp9H,GAAAK,EAAAoQ,KAAAosH,OAAA17H,EAAAiL,IAAA/L,EAAAoQ,KAAAypH,KAAA,GAAA15H,EAAA+mI,mBAAAlnI,EAAAoQ,KAAAsnH,cAAAkC,GAAAz5H,IAAAy5H,GAAAz5H,GAAA05H,KAAA75H,EAAAoQ,KAAAypH,KAAAD,GAAAz5H,GAAA05H,SAAqJ,CAAK,GAAA15H,IAAAugC,EAAA,CAAUlgC,EAAA+B,KAA5f7C,KAA4fy0H,WAAA7qH,GAAwB,UAAStJ,EAAAoQ,KAAAypH,KAAAz8G,EAAc,GAAApd,EAAAoQ,KAAAszH,gBAAA1jI,EAAAoQ,KAAAosH,OAAAjE,GAAAC,eAAAx4H,EAAA6jI,UAAAlE,GAAA6D,gBAAAxjI,EAAAoQ,KAAAszH,eAAA1jI,EAAAoQ,KAAA+yH,qBAAAnjI,EAAAoQ,KAAA+yH,oBAAAzgI,OAAA,MAAAwL,EAAA,EAAuLA,EAAAlO,EAAAoQ,KAAA+yH,oBAAAzgI,OAAoCwL,IAAAlO,EAAAoQ,KAAA+yH,oBAAAj1H,GAAAsuH,OAAAjE,GAAAC,oBAA0Dx4H,GAAAoQ,KAAAszH,cAAA17H,EAAAhI,EAAAqB,GAAAiI,EAAA,QAAyC9I,GAAA+B,KAAz2B7C,KAAy2By0H,WAAA7qH,GAAz2B5J,MAAs4By0H,WAAA3zH,KAAiBd,KAAAynI,2BAAA,SAAAr3H,GAAwD,OAAXpQ,KAAWy0H,WAAAzxH,OAAA,CAA4B,IAAAoN,EAAAitH,UAAA,WAAAjtH,GAAA40H,0BAAApI,EAAA4H,EAA+D,IAAA7jI,GAAAV,EAAAoM,KAAA20B,EAAA9yB,KAAA0mC,IAAA8nF,EAAtG18H,KAAsGy0H,WAAAzxH,OAAAskI,GAAmD,KAAA3mI,EAAA,EAAQA,EAAjKX,KAAiKy0H,WAAAzxH,OAAsBrC,IAAAV,EAAvLD,KAAuLy0H,WAAA9zH,IAAAV,EAAAyQ,KAAAs6G,UAAA/qH,EAAAyQ,KAAAwsH,MAAAj9H,EAAAyQ,KAAAsnH,eAAA6M,EAAAx4H,EAAAxJ,KAAvL7C,KAAuLy0H,WAAA9zH,IAAAV,EAAAyQ,KAAA26F,SAAAkvB,GAAAgN,YAAAtnI,EAAAyQ,KAAA26F,SAAAq8B,GAAAC,mBAAA1nI,EAAAyQ,KAAAs0F,MAAA50F,EAAAitH,UAAAp9H,EAAAyQ,KAAAszH,gBAAA/jI,EAAAyQ,KAAAosH,MAAA78H,EAAAyQ,KAAAosH,MAAAjE,GAAAC,eAAA74H,EAAAyQ,KAAAtF,QAAAnL,EAAAyQ,KAAAtF,MAAAw8H,wBAAAlL,GAAAp0H,EAAArI,EAAA+gC,GAAArgC,EAAA,KAAA0L,EAAAxJ,KAAvL7C,KAAuLy0H,WAAA9zH,GAAvLX,MAA4hBy0H,WAAApoH,IAAgBrM,KAAA6nI,mBAAA,SAAAv/H,GAAqC,OAAA8H,GAAAzP,EAAA,EAAqBA,EAArBX,KAAqBy0H,WAAAzxH,OAAsBrC,IAAAyP,EAA3CpQ,KAA2Cy0H,WAAA9zH,GAAAyP,EAAAM,KAAAsnH,eAAA6M,IAAAz0H,EAAAM,KAAAsnH,aAAA1vH,IAAwEtI,KAAAkkI,WAAA,SAAA57H,GAA6BtI,KAAAy0H,WAAA5xH,KAAAyF,IAAwBtI,KAAA8nI,mBAAA,WAAoC,GAAAx/H,GAAAy/H,GAAA,YAAA33H,EAAAmT,KAAAgK,MAAAw6G,GAAA,kBAAwD,IAAAz/H,GAAA8H,EAAA,CAAS,GAAA1P,GAAA6iB,KAAAgK,MAAAjlB,GAAA3H,EAAAyP,IAAA1P,EAAAskG,KAAkCrkG,IAAA6jI,IAAA9jI,EAAA+2H,SAAA/2H,EAAAskG,MAAA50F,EAAAzP,QAAAsgC,EAAAg/F,GAAA+H,aAAAtnI,GAAAunI,GAAA,eAA66CtE,GAAA,GAAtqC,YAAe3jI,KAAA22F,KAAA,GAA3M,YAAyB32F,KAAAkoI,SAAA,EAAAloI,KAAAmoI,UAAA,EAAAnoI,KAAAooI,YAAA,EAAApoI,KAAAqoI,aAAA,EAAAroI,KAAAsoI,QAAA,EAAAtoI,KAAAuoI,YAAA,EAAAvoI,KAAAwoI,YAAA,EAAAxoI,KAAAyoI,YAAA,EAAAzoI,KAAA0oI,YAAA,GAAkL1oI,KAAA2oI,SAAA,KAAA3oI,KAAA4oI,aAAA,EAAA5oI,KAAAw0B,IAAA,SAAAlsB,EAAA5H,GAA+E,GAAAC,GAAAX,KAAA6oI,aAAAvgI,EAA2B,IAAAtI,KAAA22F,KAAAwxC,UAAA,GAAAnoI,KAAA22F,KAAAwxC,UAAA,GAAAxnI,EAAAX,KAAA22F,KAAAuxC,SAAAvnI,IAAAX,KAAA22F,KAAAuxC,SAAAvnI,GAAAX,KAAA22F,KAAA0xC,aAAA,GAAAroI,KAAA22F,KAAA0xC,aAAA,GAAA3nI,EAAAV,KAAA22F,KAAAyxC,YAAA1nI,IAAAV,KAAA22F,KAAAyxC,YAAA1nI,GAAAV,KAAA22F,KAAA2xC,SAAA,SAAAtoI,KAAA2oI,SAAA,CAAkR,GAAA1oI,GAAAmQ,IAAApQ,KAAA2oI,QAAwB3oI,MAAA2oI,SAAAv4H,KAAA,IAAApQ,KAAA22F,KAAA4xC,aAAAvoI,KAAA22F,KAAA4xC,YAAAtoI,KAAAD,KAAAuoI,YAAAtoI,IAAA,IAAAD,KAAA22F,KAAA6xC,aAAAvoI,EAAAD,KAAA22F,KAAA6xC,eAAAxoI,KAAAwoI,YAAAvoI,GAAAD,KAAA22F,KAAA8xC,aAAAzoI,KAAA22F,KAAA8xC,YAAAzoI,KAAA4oI,aAAA3oI,IAAAD,KAAA4oI,aAAAloI,GAAAV,KAAA4oI,cAAAloI,EAAAV,KAAA22F,KAAA+xC,aAAA,GAAA1oI,KAAA22F,KAAA+xC,YAAAx6H,KAAAyhB,IAAA3vB,KAAA22F,KAAA8xC,YAAAxoI,IAAA,OAA1SD,MAAA2oI,SAAAv4H,KAAqpBpQ,KAAA6jI,QAAA,WAAyB,MAAA7jI,MAAA22F,MAAiB32F,KAAA6oI,aAAA,SAAAvgI,GAAyV,GAAA5H,GAAA,CAAQ,OAAlU,SAAA0P,GAAA9H,GAAc,UAAAA,cAAA,aAAAA,IAAyC,aAAA5H,GAAA,CAAkB,MAAM,cAAAA,GAAA,EAAA4H,EAAAtF,MAA2B,MAAM,eAAAtC,GAAA,CAAmB,MAAM,iBAAAC,GAAAI,OAAAU,UAAAoM,SAAArN,KAAA8H,GAAAgC,MAAA,KAAiE,eAAA3J,GAAA,UAAAA,EAAA,OAAAV,KAAAqI,KAAA5G,eAAAzB,IAAAmQ,EAAA9H,EAAArI,QAAyES,IAAA,EAAA4H,EAAAuF,WAAA7K,OAA8B,MAAAtC,IAAiB4H,KAAawgI,GAAe,YAAihM1L,GAAA,GAAj/L,YAAe,GAAA90H,GAAAtI,KAAAoQ,EAAA,mCAAsDpQ,MAAA+oI,kBAAA/oI,KAAAulI,UAAA,KAAAvlI,KAAAq9H,UAAA,KAAAr9H,KAAAge,KAAA8qH,GAAA9oI,KAAAgpI,eAAA,SAAA1gI,EAAA8H,GAAwHA,EAAA,2BAA8B,IAAAnQ,GAAA,KAAAoM,EAAA,KAAA20B,KAAAtjB,EAAA7Y,OAAA4K,KAAApP,EAAAwE,OAAAgK,KAAAjF,GAAA,sMAAuXtJ,EAAA,SAAAgI,GAAe,MAAAjI,GAAAiI,GAAA8B,QAAA,WAAAA,QAAA,WAAAA,QAAA,YAAqE3J,EAAA,SAAA6H,GAAe,OAA1dA,EAA0dA,EAAhNjI,EAAAw8H,mBAAAv0H,GAAA8B,QAAA,kBAAqD,SAAA9B,EAAA8H,GAAkB,MAAAV,QAAAC,aAAA,KAAAS,OAAyIhG,QAAA,WAAAA,QAAA,WAAAA,QAAA,UAA1d,IAAA9B,IAAqsBxH,IAAMA,GAAAmoI,WAAA,KAAApkI,OAAA2pG,QAAA3pG,OAAA2pG,OAAA06B,QAAApoI,EAAAmoI,WAAA,WAAAnoI,EAAAqoI,aAAAtkI,OAAA2pG,OAAA06B,QAAArkI,OAAA2pG,SAAA3pG,OAAA2pG,OAAA06B,QAAArkI,OAAA2pG,OAAA46B,cAAAtoI,EAAAmoI,WAAA,SAAAnoI,EAAAqoI,aAAAtkI,OAAA2pG,OAAA46B,cAAAvkI,OAAAwkI,UAAAxkI,OAAAwkI,SAAAH,QAAApoI,EAAAmoI,WAAA,KAAAnoI,EAAAqoI,aAAAtkI,OAAAwkI,SAAAH,SAAApoI,EAAAqoI,aAAA,KAAArjI,QAAA5B,KAAA,uDAAApD,EAAAwoI,KAAA,SAAAhhI,EAAA8H,EAAA1P,EAAAC,GAA2c,aAAA2H,EAAAihI,IAAA,MAAA5oI,GAAA,uBAAoD2H,GAAAib,KAAAkK,UAAAnlB,GAAA,gBAAA8H,OAAAmT,KAAAkK,UAAArd,GAA8D,IAAAnQ,GAAAQ,EAAA6H,GAAA,IAAA7H,EAAA2P,EAAoB,IAAAvL,OAAA6xC,gBAAA7xC,OAAA2kI,SAAAvpI,EAAAS,EAAA,SAAA4H,EAAA8H,GAAwE,MAAA9H,IAAAxC,QAAAhC,IAAA,mBAAAwE,GAAA3H,EAAA2H,IAAA3H,EAAA,KAAAyP,SAAxE,CAAsI,OAAA/D,GAAA,GAAAo9H,aAAAxpI,EAAA+C,QAAAg+B,EAAA,GAAAuiE,YAAAl3F,GAAAqR,EAAAzd,EAAA+C,OAAA,EAAqE0a,GAAA,EAAKA,IAAAsjB,EAAAtjB,GAAAzd,EAAAsP,WAAAmO,EAAyB,IAAArd,GAAA,SAAAiI,GAAkB,OAAA8H,GAAA,GAAA1P,EAAA,GAAA6iG,YAAAj7F,GAAA+D,EAAA3L,EAAAgpI,WAAA1oG,EAAA,EAAoDA,EAAA30B,EAAI20B,IAAA5wB,GAAAV,OAAAC,aAAAjP,EAAAsgC,GAAiC,OAAA/gC,IAAA,IAAAK,EAAA8P,GAAAzP,EAAA,KAAAV,IAA6B2J,EAAA,SAAAtB,GAAe,MAAA3H,GAAA2H,IAAYkG,GAAI5N,KAAA,OAAa,QAAAE,EAAAmoI,YAAA,WAAAnoI,EAAAmoI,aAAAz6H,EAAAuC,MAAuDnQ,KAAA,WAAiB,IAAAQ,GAAAN,EAAAqoI,aAAAG,KAAA96H,EAAA9N,EAAAsgC,EAAiC,QAAAlgC,EAAAmoI,YAAA7nI,EAAAqvB,QAAA7mB,EAAAxI,EAAAuoI,WAAA,SAAArhI,GAA0DjI,EAAAiI,EAAA0zC,OAAAx/B,UAAmBpb,EAAA2uD,KAAA1vD,GAAA+1D,MAAAxsD,KAAqB9I,EAAA8oI,OAAA,SAAAthI,GAAsB,IAAI,MAAAib,MAAAgK,MAAA7P,EAAApV,EAAA9B,MAAA,UAAsC,MAAA8B,GAAS,MAAAxC,SAAAwW,MAAA,0BAAAhU,GAAA,OAAwDxH,EAAA+oI,UAAA,SAAAvhI,EAAA8H,EAAA1P,GAA6B,GAAAmE,OAAA6xC,gBAAAtmC,EAAA9H,OAAA,CAA2C,cAAAxH,EAAAmoI,WAAA,KAAgC3gI,EAAAtF,OAAA,IAAYsF,GAAA,IAAS,IAAA3H,IAAOmpI,IAAA,MAAAt7H,EAAAlO,EAAAgI,GAAAihI,IAAA,SAA6BtpI,GAAIW,KAAA,OAAAmQ,MAAkBnQ,KAAA,WAAiB,WAAAE,EAAAmoI,WAAAtoI,EAAAopI,eAAAppI,EAAAqpI,OAAA,WAAAlpI,EAAAmoI,aAAAhpI,EAAA,KAAAU,EAAAspI,IAAA,cAAAnpI,EAAAmoI,YAAA,WAAAnoI,EAAAmoI,WAAA,CAA6I,GAAA58H,GAAAkX,KAAAkK,UAAA9sB,EAAwBA,GAAA,GAAA4iG,YAAAl3F,EAAArJ,OAA2B,QAAAg+B,GAAA,EAAYA,EAAA30B,EAAArJ,OAAWg+B,IAAArgC,EAAAqgC,GAAA30B,EAAAkD,WAAAyxB,GAAyB,GAAAtjB,GAAA5c,EAAAqoI,aAAAU,UAAA,MAAAlpI,EAAAV,MAAA,QAAsD,QAAAa,EAAAmoI,YAAAvrH,EAAA+S,QAAA/vB,EAAAgd,EAAAisH,WAAA,SAAArhI,GAA0D8H,EAAA9H,EAAA0zC,OAAAx/B,UAAmBkB,EAAAqyC,KAAA3/C,GAAAgmD,MAAA11D,KAAqBV,KAAAkqI,YAAA,SAAA5hI,GAA8BtI,KAAAge,KAAA1V,GAAYtI,KAAA2kI,cAAA,SAAAr8H,EAAA8H,EAAAzP,GAAoC,GAAAV,MAAAoM,EAAAuuH,EAAAC,QAAuB,WAAAvyH,EAAA,QAAqB,KAAI,GAAA04B,GAAAlgC,EAAA8oI,OAAAthI,EAAkB,WAAA04B,KAAA64E,QAAAzpG,GAAA4wB,EAAAy2F,SAAAoF,mBAAAl8H,GAAA,CAA4D,GAAA+c,GAAA,IAAW,IAAArR,IAAAyuH,GAAA1jF,QAAA,CAAmB,GAAA/2C,GAAA2gC,EAAAmpG,OAAA3jI,MAAA,KAAAiE,KAAA,IAAoCiT,GAAAuB,KAAAsO,MAAAltB,OAAgBqd,GAAA,GAAAuB,MAAA+hB,EAAAmpG,OAA0B,IAAAlrH,MAAAve,KAAoBgd,IAAAzd,MAAY,MAAAA,GAAS,MAAAqI,IAAU,UAAStI,KAAAoqI,eAAA,SAAA9hI,GAAiC+hI,GAAA,iBAAA9mH,KAAAkK,UAAAnlB,IAAAtI,KAAAq9H,UAAA/0H,EAAAtI,KAAAulI,UAAAzkI,EAAA8oI,OAAAthI,GAAAo0H,EAAA74H,SAAA7D,KAAAulI,UAAA+E,mBAAA,IAAAhK,EAAAiK,sBAAA7N,GAAA4D,EAAAkK,iBAAAxqI,KAAAulI,UAAAkF,kBAAAvD,EAAAlnI,KAAAulI,UAAAmF,YAAoP1qI,KAAAglI,0BAAA,SAAAtkI,EAAA2L,EAAAqR,GAAgD,GAAAhd,GAAA2L,EAAA,CAAS,GAAA/D,EAAAygI,eAAA,aAAp3SzgI,EAAo3SoV,IAAt2SpV,EAAA28H,GAAAC,YAAA,0BAA24S,QAAAjlI,IAAAmkB,aAAAnkB,KAAA,MAAA0B,IAAA2G,EAAAygI,kBAAAzgI,EAAA0gI,eAAAhoG,EAAA,SAAA3gC,EAAAuJ,GAA4F,UAAAvJ,EAAA,MAAAiI,GAAAygI,uBAAArrH,KAAAqnH,GAAA4F,qBAAAtqI,EAAAwN,YAA8K+8H,IAAtF/E,EAAA,gBAA2BgF,UAAAx+H,EAAA,IAAAuwH,EAAAprG,KAAA5nB,EAAAkhI,WAAA,sBAA2D,SAAAzqI,EAAAuJ,GAAqB,GAAA4E,GAAA,IAAWlG,GAAAygI,kBAAAjC,EAAAiE,KAAAnhI,CAA8B,KAAI4E,EAAA+U,KAAAgK,MAAAltB,EAAAooB,UAAyB,MAAAngB,GAASxC,QAAAwW,MAAA,uCAAqD,GAAA9N,EAAsE,SAAAnO,EAAAgmB,OAAA,CAAmB,cAAA7X,EAAAw8H,WAAA,MAAAllI,SAAAwW,MAAA,wFAAArc,EAAA+M,WAAA1E,EAAA08H,0BAAjsP,IAAisPtkI,EAAA2L,EAAAqR,GAA4LpV,GAAA8hI,eAAA57H,EAAAy8H,aAAiC,IAAA3qI,GAAAuD,SAAA,IAAAA,SAAA2K,EAAA08H,YAAjuI,GAA8wI,IAAAj5H,EAAA3R,EAAAI,EAAA2L,EAAAqR,GAAAsjB,KAAAtjB,KAAAqnH,GAAAj1E,QAAA,kCAAAthD,EAAAy+E,aAAAq5C,GAAAI,EAAA,IAA+FH,EAAA/3H,EAAAy+E,WAAA,GAAA34C,SAAA,IAAAoyF,EAAA90G,MAAApjB,EAAAy+E,WAAAk+C,GAAA99H,KAAArN,OAAAukI,GAAA3H,EAAA4H,EAAA,OAAqFpoH,IAAA,uBAAAmqH,IAA8BA,GAAA,YAAkB,MAAAj+H,GAASk+H,EAAA,QAAAl+H,GAAAo+H,EAAA0E,kBAAmC9E,IAAA/B,GAAA3H,EAAA4H,EAAA,OAAqBpoH,IAAA,wBAAAmqH,IAA+BA,GAAA,cAAA8E,KAAA3J,GAAA4J,mBAAArH,GAAAwD,2BAAArK,IAAA1/G,KAAAqnH,GAAAj1E,QAAA,wCAAA4xE,GAAA6J,0BAAA,SAAAjjI,EAAA8H,GAAoLsN,KAAApV,EAAA8H,SAAY,CAAK,GAAA5B,EAAA4B,IAAA5B,EAAA4B,GAAApN,OAAA,QAAAuF,GAAA7H,EAAA2L,EAAAqR,EAAAlP,EAAA4B,GAAA9H,EAAA0V,KAAmDlY,SAAAwW,MAAA,yEAAArc,EAAA+M,WAAA1E,EAAA08H,0BAAvgR,IAAugRtkI,EAAA2L,EAAAqR,OAA/5Bzd,GAAA+M,WAAA1E,EAAA08H,0BAAxmP,IAAwmPtkI,EAAA2L,EAAAqR,OAA5zT,GAAApV,GAA42V,IAAA3G,GAAA,WAAiB,OAAA0K,IAAA+X,aAAA/X,KAAA,OAAmC4F,EAAA,SAAA7B,EAAA1P,EAAAC,EAAAV,GAAqB0B,IAAA0K,EAAAW,WAAA,WAA4B1E,EAAA08H,0BAAAtkI,EAAAC,EAAAV,IAAmCmQ,IAAI7H,EAAA,SAAAD,EAAA8H,EAAA1P,EAAAC,EAAAV,GAAuB,OAAAU,EAAAqC,OAAA,CAAiB,GAAAqJ,GAAA1L,EAAA0rC,OAAgB,IAAAhgC,EAAAg/F,SAAAmgC,GAAAC,MAAA,MAA9sK,QAA8sKxrI,GAAAgS,EAAA5F,EAAA+hC,OAAA7pB,QAAAjc,EAAA8H,EAAA1P,GAAA6H,EAAAD,EAAA8H,EAAA1P,EAAAC,EAA+E,IAAA0L,EAAAg/F,SAAAmgC,GAAAE,cAAA,MAAA1qG,MAAAz4B,EAAAD,EAAA8H,EAAA1P,EAAAC,EAAsD,IAAA0L,EAAAg/F,SAAAmgC,GAAAG,aAAA,CAA+B,GAAAjuH,GAAA,sBAA6B,OAAArR,GAAA+hC,QAAA/hC,EAAA+hC,OAAAw9F,WAAA,IAAAluH,EAAA9T,EAAAyC,EAAA+hC,OAAAw9F,YAAAlrI,KAAAqkI,GAAA8G,UAAAnuH,GAAAnV,EAAAD,EAAA8H,EAAA1P,EAAAC,KAAqGX,MAAA8rI,wBAAA,SAAA17H,GAAyC,GAAA1P,GAAA,KAAAC,EAAA,KAAAV,KAAAoM,EAAA,IAA0L,OAA5J+D,GAAArL,QAAA,UAAAsH,EAAjyJ,SAAA/D,GAAe,OAAA8H,GAAAsN,EAAApV,EAAA8B,QAAA,iBAAA1J,KAAAC,EAAA,EAAgDA,EAAAyP,EAAApN,SAAWrC,EAAA,CAAK,GAAAV,GAAAmQ,EAAAb,WAAA5O,GAAAkN,SAAA,GAAmC,KAAA5N,EAAA+C,SAAA/C,EAAA,IAAAA,GAAAS,EAAAmC,KAAA5C,GAAkC,MAAAS,GAAA+J,KAAA,KAA6oJ2F,EAAA5J,MAAA,SAAA4J,IAAA5J,MAAA,SAA4J1F,EAAA+oI,UAAAz5H,EAAhG,SAAA9H,GAAkB8H,EAAA,KAAA1P,EAAA4H,GAAW,SAAAA,GAAerI,KAAAmQ,EAAA,KAAAtK,QAAAwW,MAAA,sBAAAhU,KAAoD,SAAA8H,EAAA4wB,GAAwC,GAAA/gC,EAAA,MAAA+gC,GAAA,0CAAyD,KAAA5wB,GAAA,OAAAzP,EAAA,MAAAqgC,GAAA,KAAArgC,EAAiC,WAAAD,EAAA,MAAAsM,YAAA,WAAyC1E,EAAA0gI,eAAA54H,EAAA4wB,IAAsB,IAAM,IAAAtjB,IAAO+5G,OAAA+M,EAAA3qB,MAAA+iB,EAAoBvwH,KAAAqR,EAAAquH,MAAA1/H,GAAAvL,EAAAwoI,MAAuBC,IAAA,SAAY7rH,EAAAhd,EAAA,SAAA4H,EAAA8H,GAAmB,MAAA9H,GAAA04B,EAAA14B,IAAA3H,EAAAyP,EAAA4wB,EAAA,KAAA5wB,SAAkC47H,GAAA,GAAAj1D,EAAoB,KAAI6jD,EAAAoR,GAAAC,oBAA0B,MAAA3jI,GAASxC,QAAAhC,IAAA,2BAAAwE,GAA0C,GAAA4jI,GAAOrnI,QAAA6xC,kBAAAw1F,GAAAF,GAAAG,6BAAAvR,GAAAkM,EAAAsF,QAAAF,GAA+E,IAAAlJ,IAAAqJ,IAAWruH,KAAA,UAAApd,KAAAg6H,EAAAh6H,KAAAgD,IAAAg3H,EAAAh3H,IAAAkzC,GAAA8jF,EAAA9jF,GAAAC,UAAA6jF,EAAA7jF,UAAArzC,UAAAk3H,EAAAl3H,WAA8Fs8H,MAAAjH,GAAA,KAAAQ,GAAA,KAAAW,MAA4BrB,IAAKC,cAAA,EAAA2L,iBAAA6H,cAAA,KAAAC,aAAA,EAAAjI,YAAA,KAAAkI,kBAAA,KAA0G3rF,MAAA4rF,GAAA,KAAAtH,GAAA,KAAA1zC,GAAA,IAAA61C,GAAA,IAAAvM,GAAA,IAA6C,aAAAH,EAAAh6H,KAAAm6H,GAAA/8B,qBAAA,WAAA48B,EAAAh6H,MAAA,UAAAg6H,EAAAh6H,KAAAm6H,GAAA3xF,wBAAA,WAAAwxF,EAAAh6H,KAAAkF,QAAAhC,IAAA,gCAAA82H,EAAAh6H,OAAAm6H,GAAAl2H,OAAAkxE,kBAAmN,IAAA2xD,KAAQC,kBAAA,oBAAA+E,WAAA,aAAAC,aAAA,eAAAC,UAAA,YAAAC,YAAA,cAAAC,WAAA,aAAAC,YAAA,cAAAC,iBAAA,mBAAApU,iBAAA,mBAAAqU,iBAAA,mBAAAC,gBAAA,kBAAAC,gBAAA,kBAAAC,mBAAA,qBAAAC,iBAAA,mBAAAC,oBAAA,uBAAke/S,IAAKgT,gBAAA,kBAAAhG,WAAA,aAAAiG,SAAA,WAAAC,gBAAA,YAAA/+B,QAAA,UAAA8rB,wBAAA,0BAAAG,oBAAA,sBAAAgG,YAAA,cAAA+M,kBAAA,oBAAAC,mBAAA,qBAAAC,iBAAA,mBAAApO,sBAAA,wBAAAqO,6BAAA,+BAAAC,2BAAA,6BAAAC,WAAA,aAAAC,cAAA,gBAAAC,UAAA,YAAAC,aAAA,eAAAC,cAAA,gBAAAC,iBAAA,mBAAAC,aAAA,eAAAC,kBAAA,qBAAkvBrO,IAAKsO,cAAA,qBAAAj5G,SAAA,WAAAwuG,eAAA,iBAAA0K,eAAA,iBAAAxG,aAAA,oBAAAxC,UAAA,YAAAyB,YAAA,cAAA/G,oBAAA,sBACht+BW,8BAAA,iCAA8D4N,GAAK,qBAALA,GAAK,uBAA8DC,IAAK5+E,QAAA,UAAA6+E,QAAA,WAAoC5J,IAAK6J,UAAA,YAAA/C,UAAA,YAAAgD,iBAAA,mBAAA/+E,QAAA,UAAAg/E,aAAA,eAAAC,qBAAA,uBAAApE,qBAAA,uBAAAqE,GAAA,MAA8N/J,IAAKC,YAAA,eAA0B+J,IAAKviB,KAAA,OAAAnzB,OAAA,UAA4B21C,IAAKC,SAAA,WAAAC,YAAA,cAAAC,SAAA,WAAAC,SAAA,YAAsFC,IAAKtgE,MAAA,QAAAllC,MAAA,QAAAr5B,KAAA,OAAAsgE,OAAA,SAAAwnD,UAAA,YAAAgX,UAAA,aAAmL/V,IAAKgW,MAAA,QAAAC,OAAA,SAAAxO,QAAA,UAAAxH,SAAA,YAAoEyH,IAAKwO,yBAAA,2BAAAC,0BAAA,4BAAAxO,yBAAA,4BAA8JkC,IAAKuM,UAAA,YAAArM,KAAA,OAAAD,IAAA,OAA4C9D,IAAKqQ,YAAA,cAAAC,aAAA,eAAAnoD,OAAA,SAAA83C,UAAA,YAAAsQ,kBAAA,qBAAkIC,IAAK9yC,YAAA,cAAAO,aAAA,eAAA5B,oBAAA,sBAAAU,qBAAA,uBAAAtF,gBAAA,kBAAAzjB,aAAA,eAAAy8D,qBAAA,uBAAAC,eAAA,iBAAAC,iBAAA,mBAAAC,eAAA,kBAA0VC,IAAKC,iBAAA,mBAAAC,mBAAA,qBAAAC,SAAA,qBAAAC,WAAA,uBAAAC,iBAAA,mBAAAR,eAAA,iBAAAC,iBAAA,mBAAAC,eAAA,kBAAoRO,IAAK7mG,OAAO8mG,WAAA,KAAAC,WAAA,KAA+B7hE,OAAQ4hE,WAAA,GAAAC,WAAA,IAA4BC,IAAKhnG,OAAO8mG,WAAA,GAAAC,WAAA,KAA6BE,IAAKjnG,OAAO8mG,WAAA,IAAAC,WAAA,MAA+BG,IAAKlnG,OAAO8mG,WAAA,GAAAC,WAAA,IAA4B7hE,OAAQ4hE,WAAA,GAAAC,WAAA,KAA6BI,IAAKjiE,OAAO4hE,WAAA,IAAAC,WAAA,MAA+BhW,IAAKtkF,OAAA,SAAAY,QAAA,UAAA/xC,KAAA,QAAiKu/H,IAAArK,GAAAgN,WAAAhN,GAAAkT,gBAAA/F,GAAAC,mBAAA0C,GAAA,SAAA/hI,EAAA8H,GAA6E,IAAIvL,eAAAqvC,cAAArvC,OAAAqvC,aAAAzwB,QAAAnb,EAAA8H,GAA8D,MAAA9H,GAAS,SAAQy/H,GAAA,SAAAz/H,GAAgB,IAAI,GAAAzD,eAAAqvC,aAAA,MAAArvC,QAAAqvC,aAAA1mB,QAAAllB,GAAqE,MAAAA,GAAS,YAAY,aAAY2/H,GAAA,SAAA3/H,GAAgB,IAAIzD,eAAAqvC,cAAArvC,OAAAqvC,aAAAxwB,WAAApb,GAA+D,MAAAA,GAAS,SAA6I6oI,GAAA,SAAA7oI,EAAA5H,EAAAC,EAAAV,EAAAoM,GAAwB,GAAA20B,GAAA,KAAAtjB,EAAA,KAAA9T,EAAA,GAAA2iB,eAA8C,oCAAAquG,EAAAh6H,OAAAgJ,EAAA2a,QAAA5jB,GAAAiJ,EAAA,CAA6DA,EAAAmlB,KAAA,MAAAqiH,UAAA9oI,GAA2B,QAAAkG,KAAA9N,GAAAkJ,EAAAqlB,iBAAAzgB,EAAA9N,EAAA8N,GAA0CwyB,GAAA5wB,IAAAxG,EAAAw7E,OAAA,WAA0B1nE,EAAAtN,IAAAnQ,EAAA2J,EAAA8T,EAAAsjB,IAAmBp3B,EAAAynI,UAAAhlI,EAAAzC,EAAAoa,SAAyBstH,GAAA,SAAAhpI,EAAA8H,EAAA1P,EAAAC,GAAsB,GAAAV,GAAA,GAAAssB,eAAyB,IAAAtsB,EAAA,CAAM,GAAAA,EAAA8uB,KAAA,OAAAqiH,UAAA9oI,IAAArI,EAAAgvB,iBAAA,mCAAAtuB,EAAA,OAAA0L,KAAA1L,GAAAV,EAAAgvB,iBAAA5iB,EAAA1L,EAAA0L,GAAiIpM,GAAAmlF,OAAA,WAAoB1kF,EAAAT,IAAKA,EAAA+jB,KAAA5T,KAAYm0H,GAAA,SAAAj8H,EAAA5H,EAAAC,EAAAV,GAAsB,GAAAqI,EAAA,CAAU,GAAA+D,GAAAq3H,EAAA,WAAA1iG,GAAuB64E,MAAAvxG,EAAAouF,UAAAtmF,IAAAqnH,OAAAoF,mBAAAn8H,GAAAuD,QAAA04H,EAAAhvD,UAAAhtE,EAAA+P,KAAAzQ,GAAiFyd,EAAA6F,KAAAkK,UAAAuT,EAAqB4lG,KAAAlpH,IAAAkpH,EAAAlpH,EAAA4zH,GAAAjlI,EAAAqR,EAAA,SAAApV,GAAiC,MAAAA,EAAA+d,OAAAvgB,QAAAhC,IAAA,2BAAAwE,EAAAmgB,UAAA,MAAAngB,EAAA+d,QAAAvgB,QAAAhC,IAAA,uCAAAwE,IAAA+d,YAAsJxhB,gBAAAqjC,kBAAArjC,OAAAqjC,iBAAA,iBAAA5/B,GAA6E,GAAAA,KAAAipI,UAAAjpI,EAAAipI,SAAAxsI,QAAA,iBAAsD,GAAAqL,GAAA1P,KAAAC,GAAcub,SAAA5T,EAAAipI,SAAAv1H,KAAA1T,EAAA2wG,OAAAu4B,IAAAlpI,EAAA4wG,MAAAu4B,UAAA9U,EAAAhvD,UAAA,QAAA1xD,QAAA3T,EAAA2T,QAAAypH,QAAA7gI,OAAAgrB,SAAA0lF,KAA6H,KAAAnlG,IAAA8pH,OAAAx4H,eAAA0O,KAAAzP,EAAAq3H,aAAA5nH,EAAAm0H,GAAA3H,EAAA4H,EAAA,aAAA7jI,GAAAD,KAAmFA,IAAA6jI,GAAA3H,EAAA4H,EAAA,aAAA7jI,KAA+B,IAAA+wI,KAAQC,0BAAA,gCAAyDnG,IAAKC,MAAA,EAAAC,cAAA,EAAAC,aAAA,GAAuCiG,GAAAtpI,IAAA2wH,GAAAl4H,OAAAkqC,OAAA,MAAA4mG,GAAA,SAAAvpI,EAAA3H,EAAAV,GAAkD,GAAAoM,GAAA2wD,OAAAv7D,UAAA8C,KAAA8I,KAAA,iBAAA2zB,EAAA,4BAAAtjB,EAAA,uBAA0G/c,GAAA6F,MAAA,gBAAA4oC,OAAA/iC,GAAAgC,QAAA,SAAA1N,GAAsD,GAAA0L,GAAA1L,EAAA,GAAAN,EAAAM,EAAA2J,MAAA,EAAwB,UAAA+B,EAAA,CAAY,GAAA20B,EAAAz8B,KAAAlE,GAAA,CAAc,GAAAuJ,GAAAvJ,EAAAsD,MAAAq9B,GAAAxyB,EAAA5E,EAAA,YAAwBtB,EAAAomG,QAAAlgG,KAAAlG,EAAAomG,QAAAlgG,OAAuClG,EAAAomG,QAAAlgG,GAAA5E,EAAA,IAAAA,EAAA,GAAAtB,EAAAomG,QAAAlgG,GAAAgwH,eAAApuH,IAAA9H,EAAAomG,QAAAlgG,GAAAsjI,gBAAApxI,IAAA4H,EAAAomG,QAAAlgG,GAAAgrH,WAAAv5H,EAAqHyd,EAAAnZ,KAAAlE,cAAAiI,EAAAomG,QAAAp+D,YAAAhoC,EAAAomG,QAAAp+D,aAAiEhoC,EAAAomG,QAAAp+D,UAAArwC,OAA0BqI,EAAAomG,QAAAp+D,UAAArwC,GAAA8xI,eAAA1xI,EAAAsD,MAAA,aAA4D46H,GAAA,SAAAj2H,EAAA8H,GAAkB,MAAA9H,GAAAomG,QAAAt+F,IAAoB2vH,GAAA,SAAAz3H,GAAgB,MAAAA,GAAAomG,SAAiB+vB,GAAA,SAAAn2H,EAAA8H,EAAA1P,EAAAC,EAAAV,EAAAoM,GAA0B,IAAApM,EAAA84F,mBAAA94F,EAAA+4F,kBAAA,QAAsD,IAAAh4D,GAAA/gC,EAAA84F,iBAAAtoD,IAAA/yB,EAAAzd,EAAA+4F,kBAAAvoD,GAAuD,KAAAzP,IAAAtjB,GAAAsjB,IAAArgC,EAAAqxI,UAAAt0H,IAAA/c,EAAAsxI,UAAA,QAAoD,IAAAJ,GAAAlxI,EAAAqgC,EAAAy4F,GAAAC,UAAAmY,GAAAlxI,EAAA+c,EAAA+7G,GAAAyH,SAAAgG,EAAA,CAA8C,GAAA7mI,IAAOowC,OAAQpwC,GAAAowC,IAAAuhG,SAAAhxG,IAAArgC,EAAAqxI,SAAAhxG,GAAA,EAAA3gC,EAAAowC,IAAAwhG,UAAAv0H,IAAA/c,EAAAsxI,UAAAv0H,GAAA,EAAAw0H,GAAA5pI,EAAA8H,EAAA1P,EAAAL,EAAAM,EAAAw8H,OAAA9wH,GAA+F,MAAA1L,GAAAqxI,SAAAhxG,EAAArgC,EAAAsxI,UAAAv0H,MAAqC48G,GAAA,SAAAhyH,EAAA8H,EAAAzP,EAAAV,EAAAoM,EAAA20B,EAAAtjB,GAA4B,GAAApV,EAAA,CAAiE,GAAAjI,GAAAK,IAAAkJ,GAAa3F,QAAA04H,EAAAG,MAAAz8H,EAAAgrG,OAAA/iG,EAAAg1H,QAAAT,mBAAA2H,GAAAxZ,SAAA56G,EAAAysH,mBAAAzsH,GAAA,KAAA4nH,aAAA6E,mBAAAl8H,GAAAo8H,UAAA,EAAAljB,MAAA+iB,EAAAzC,KAAAl6H,EAAAi9H,KAAAl8F,EAAAu8F,SAAAC,EAAApyH,MAAAiB,EAA4L,eAAA1L,MAAA4jI,IAAA3H,EAAA4H,EAAA,OAAqCpoH,IAAA,yCAAA9T,QAA+C24B,GAAAg/F,GAAAuO,eAAA5kI,EAAA8T,GAA9V5X,QAAAwW,MAAA,kCAA8X61H,GAAA,SAAA7pI,EAAA8H,EAAAzP,EAAAV,GAAsB,GAAAqI,EAAA,CAAiE,GAAA+D,GAAA3L,IAAAsgC,GAAa/8B,QAAA04H,EAAAwH,QAAAlE,GAAAgH,YAAAvwC,UAAArqF,EAAAywH,MAAAzwH,EAAAg/F,OAAA/iG,EAAAqlE,UAAArlE,EAAAg1H,QAAAT,mBAAA2H,GAAAxZ,SAAA6R,mBAAA2H,GAAAxM,aAAA6E,mBAAAzsH,GAAA2sH,UAAA,EAAAljB,MAAA+iB,EAAAzC,KAAAx5H,EAAA48H,SAAAC,EAAAx4B,MAAAo4B,GAAAC,UAAyO,OAAA/0H,KAAAmmI,KAAAztG,EAAA68D,QAAA59F,EAAA,MAAAmQ,OAAA00H,IAAA7E,GAAAgH,YAAAjmG,IAAA14B,IAAAmmI,KAAAztG,EAAAoxG,IAAAnyI,QAAAU,IAAAkgD,GAAA5f,EAAAg/F,GAAAgH,YAAAjmG,MAAAgjG,cAAAnjF,GAAAojF,GAAAC,YAAuKC,QAAAlE,GAAAgH,YAAAv2H,KAAAswB,EAAAv0B,SAAA,UAA9d3G,QAAAwW,MAAA,kCAA+gB41H,GAAA,SAAA5pI,EAAA8H,EAAAzP,EAAAV,EAAAoM,EAAA20B,GAA0B,GAAAtjB,GAAAhd,IAAAL,GAAa4D,QAAA04H,EAAA9iB,MAAA+iB,EAAA5E,aAAA6E,mBAAAzsH,GAAA+pH,KAAAx5H,EAAAm8H,MAAAp/G,EAAA4/G,QAAAT,mBAAA2H,GAAAxZ,SAAA6R,mBAAAv0H,GAAA40H,KAAA7wH,EAAAkxH,SAAAC,EAAA6U,WAAApyI,EAAAorG,OAAA40B,GAAAsO,cAA6LnR,IAAAC,WAAA18H,IAAAkgD,IAAAxgD,EAAA2kG,MAAAo4B,GAAAC,UAAAp8F,EAAAg/F,GAAAsO,cAAAluI,EAAA2gC,KAAA3gC,EAAA2jI,cAAAnjF,GAAAojF,GAAAC,YAAuGC,QAAAlE,GAAAsO,cAAA79H,KAAArQ,EAAAoM,SAAAu0B,IAA2Co8F,GAAAC,WAAAD,GAAA4H,0BAAApI,EAAA4H,KAAqD8N,GAAA,SAAAhqI,EAAA8H,EAAA1P,EAAAC,EAAAV,EAAAoM,EAAA20B,GAA4BuxG,GAAAjqI,EAAA,SAAAA,GAAiB8H,EAAAoiI,gBAAAlqI,EAAAkqI,gBAAApiI,EAAAqiI,iBAAAnqI,EAAAmqI,iBAAAriI,EAAAsiI,kBAAApqI,EAAAoqI,kBAAAtiI,EAAAuiI,uBAAAC,GAAAxiI,EAAAsiI,mBAAA1xG,EAAA6xG,SAAAziI,EAAAuiI,uBAAArY,GAAAC,GAAAmT,kBAAAztI,EAAAS,EAAAC,EAAAqgC,EAAA30B,MAA4OymI,GAAA,SAAAxqI,EAAA8H,EAAA1P,GAAoB,GAAAC,IAAOytI,iBAAAjI,GAAoBlmI,EAAAi6H,GAAA5xH,GAAA4xH,GAAA5xH,GAAA6xH,KAAA,IAAyBG,IAAAC,GAAA6T,iBAAAh+H,EAAA9H,EAAArI,EAAAU,EAAAD,IAAkCqyI,GAAA,SAAAzqI,GAAgB,GAAA8H,IAAO+pH,KAAAD,GAAA5xH,GAAA6xH,KAAA6Y,SAAA3G,GAAA4G,SAAArB,GAAyCtX,IAAAC,GAAAkT,gBAAA,KAAAnlI,EAAA4xH,GAAA5xH,GAAA6xH,KAAA/pH,EAAA,OAAgD8iI,GAAA,SAAA5qI,EAAA8H,GAAkB,GAAA1P,KAAS,OAAAA,GAAA2lB,OAAA/d,EAAA8H,IAAA1P,EAAAub,QAAA7L,GAAA1P,GAAqC+sF,GAAA,SAAAnlF,EAAA8H,GAAkB,GAAA1P,GAAAC,EAAAV,EAAAoM,EAAA,CAAc,KAAA/D,EAAA,MAAA+D,EAAe,KAAA3L,EAAA,EAAAT,EAAAqI,EAAAtF,OAAmBtC,EAAAT,EAAIS,IAAAC,EAAA2H,EAAAiH,WAAA7O,GAAA2L,MAAA,GAAAA,EAAA1L,EAAA0L,GAAA,CAAwC,OAAA+D,MAAA/D,MAA05D8mI,GAAA,WAAerM,EAAAsM,OAAAtM,EAAAuM,wBAAAvM,EAAA98H,QAAA88H,EAAAwM,cAAAxM,EAAAyM,oBAAAztI,QAAAhC,IAAA,iCAAAygI,GAAA3H,EAAA4H,EAAA,SAAAsC,KAAAsM,UAA+OjI,GAAA,SAAA7iI,GAAgBi8H,GAAA3H,EAAA4H,EAAA,OAAgBpoH,IAAA,wBAAAmqH,IAA+BA,GAAA,aAAA/E,EAAAyF,aAAAzF,EAAAyF,YAAA3+H,EAAqD,KAAIu+H,EAAAhkI,KAAAyF,EAAA7F,GAAc,IAAA2N,GAAA,KAAA1P,EAAA,IAAkB,QAAAC,KAAAu5H,IAAA,GAAAA,GAAAx4H,eAAAf,GAAA,CAAyCyP,EAAAzP,EAAAu5H,GAAAv5H,GAAAw5H,OAAAz5H,EAAAw5H,GAAAv5H,GAAAw5H,KAA+B,OAAMgY,GAAA1D,GAAAr+H,EAAA1P,EAAA4H,GAAqB,MAAAA,GAASk+H,EAAA,eAAAl+H,KAAsB+iI,GAAA,WAAe,GAAA/iI,GAAA09H,EAAApJ,EAAAxsH,GAAeojI,cAAA,UAAApW,GAAAC,WAAqC18H,EAAA,SAAA2H,EAAA8H,GAAsB,MAAA9H,EAAA+d,QAAArZ,WAAA,WAAsCX,KAAI,KAAAy6H,EAAA98H,OAAAoG,EAAA+iI,IAAuB,IAAAzyI,GAAA6iB,KAAAgK,MAAAjlB,EAAAmgB,SAA6B,IAAA3iB,QAAAhC,IAAA,mBAAApD,KAAA4pI,qBAAA5N,EAAA74H,SAAAnD,EAAA4pI,mBAAA,IAAAhK,EAAAiK,sBAAA7N,IAAAh8H,EAAA+yI,eAAAnT,EAAAkK,iBAAA9pI,EAAA+yI,eAAA/yI,EAAAgqI,aAAAxD,EAAAxmI,EAAAgqI,YAAAhqI,EAAAgzI,oBAAA,CAA4O,GAAA/yI,GAAAD,EAAAgzI,mBAA4BjxI,IAAA,kBAAA9B,EAAAuwI,IAAAzuI,GAAA,sBAAA9B,EAAAiwI,IAAAnuI,GAAA,0BAAA9B,EAAAswI,IAAAxuI,GAAA,eAAA9B,EAAAqwI,IAAAvuI,GAAA,iCAAA9B,EAAAowI,MAAgK9wI,EAAA,SAAAqI,GAAe,MAAAA,EAAA+d,QAAArZ,WAAA,WAAsCg0B,KAAI,IAAM,IAAA5wB,GAAAmT,KAAAgK,MAAAjlB,EAAAmgB,UAAA/nB,EAAA,SAAA4H,EAAA8H,GAA6C,GAAA1P,KAAS,OAAA0P,KAAA1P,GAAcgoH,eAAA,KAAAt8E,MAAA,OAA+B9jC,EAAAogH,iBAAAhoH,EAAAgoH,eAAApgH,EAAAogH,gBAAApgH,EAAA8jC,QAAA1rC,EAAA0rC,MAAA9jC,EAAA8jC,OAAA9jC,EAAAk4D,SAAA9/D,EAAA8/D,OAAAl4D,EAAAk4D,QAAAl4D,EAAAqrI,aAAAjzI,EAAAizI,WAAArrI,EAAAqrI,YAAAjzI,EAA8J,IAAA8gI,EAAAuF,eAAA32H,EAAA9O,QAAA,CAAgC,GAAAX,GAAAD,EAAA0P,EAAA9O,WAAsBX,SAAM6gI,EAAAuF,cAAApmI,GAAsB,GAAA6gI,EAAAwF,mBAAA52H,EAAAwjI,YAAA,CAAwC,GAAA3zI,GAAAS,EAAA0P,EAAAwjI,eAA0B3zI,SAAMuhI,EAAAwF,kBAAA/mI,KAA2BoM,EAAA,WAAc8kI,GAAA7oI,EAAA,2BAAA8H,EADioS,IACjoSzP,EAAA0L,IAAyC20B,EAAA,WAAcmwG,GAAA7oI,EAAA,kBAAA8H,EAD0kS,IAC1kSnQ,EAAA+gC,GAAiC30B,KAAA20B,KAAmHo5F,GAAA,SAAA9xH,EAAA8H,GAAkB,GAAAzP,GAAA,IAAkB,OAAAu5H,IAAA5xH,IAAA4xH,GAAA5xH,GAAAs7E,eAAAjjF,EAAAu5H,GAAA5xH,GAAAs7E,aAAAx0C,QAA/I9mC,EAA+I8H,EAA/H,SAAAA,GAAmB,MAAAA,GAAA8lF,KAAA5tF,QAAAurI,aAAAzjI,EAAA+sH,SAAA70H,EAAAurI,yBAA4GlzI,KAAAqC,OAAA,EAAArC,EAAA,OAA/I,IAAA2H,IAAgP+xH,GAAA,SAAA/xH,EAAA8H,GAAkB,GAAA1P,GAAA,KAAAC,EAAA,IAAkB,QAAAD,EAAA05H,GAAA9xH,EAAA8H,MAAAzP,EAAAD,EAAAy8H,QAAAx8H,GAAmCmzI,GAAA,SAAAxrI,GAAgB,GAAA8H,GAAA,KAAA1P,EAAA,KAAAC,EAAA,IAAyB,KAAAyP,IAAA8pH,IAAA,GAAAA,GAAAx4H,eAAA0O,KAAAzP,EAAAy5H,GAAAhqH,EAAA9H,IAAA,CAAkD5H,GAAGqzI,OAAApzI,EAAAq3H,aAAA5nH,EAAyB,OAAM,MAAA1P,IAAsLm9H,GAAA,SAAAv1H,GAAgB,GAAAA,EAAA,CAAM,GAAA8H,MAAA1P,EAAA,CAAa,IAAA4H,KAAAkU,OAAApM,EAAA9H,EAAAkU,aAA4B,IAAAlU,KAAA+F,QAAA/F,EAAA+F,QAAA,SAAA/F,GAA2C8H,EAAAvN,KAAAyF,SAAY,KAAA5H,IAAA4H,KAAA5G,eAAAhB,IAAA0P,EAAAvN,KAAAyF,EAAA5H,GAAkD,OAAA0P,KAAUy9E,GAAA,SAAAvlF,GAAgB,GAAA8H,GAAA1P,EAAA,KAAAC,EAAA,KAAAV,EAAA,KAAAoM,KAAA20B,KAAAtjB,KAAArd,EAAA,CAA8C,MAAAK,EAAAm9H,GAAAv1H,IAAA,OAAqBkqI,gBAAAnmI,EAAAomI,iBAAAzxG,EAAsC,KAAA3gC,EAAA,EAAQA,EAAAK,EAAAsC,SAAW3C,EAAA,GAAAM,EAAAwgC,EAAAzgC,EAAAL,IAAAJ,EAAA69H,EAAAn9H,GAAAV,EAAAi+H,eAAA7xH,EAAAxJ,KAAA5C,EAAAi+H,oBAAkE,IAAAj+H,EAAAk+H,gBAAAn9F,EAAAn+B,KAAA5C,EAAAk+H,qBAAoD,IAAAl+H,EAAAu7H,UAAA,CAAqB,iBAAAv7H,EAAAu7H,UAAAx9G,KAAA,CAAmC5N,EAAAnQ,EAAAu7H,UAAAN,uBAAsC,UAASx9G,EAAA7a,KAAA5C,EAAAu7H,eAAoBv7H,GAAAq+H,eAAA5gH,EAAA7a,KAAA5C,EAAAq+H,cAA8C,IAAAluH,EAAA,IAAA/P,EAAA,EAAaA,EAAAqd,EAAA1a,OAAW3C,IAAAqd,EAAArd,GAAAoC,KAAA2N,IAAAsN,EAAArd,GAAA09H,qBAAA,OAAoD,QAAOyU,gBAAAnmI,EAAAomI,iBAAAzxG,EAAA0xG,kBAAAh1H,IAA0Dw4E,GAAA,SAAA5tF,GAAoD,MAApC,UAAA8H,GAAc,GAAA1P,KAASA,GAAAmtF,GAAAz9E,GAAA9H,EAAA5H,KAAsBszI,GAAA,SAAA1rI,GAAgB,GAAA8H,GAAA,IAAW,OAAA9H,KAAA8H,EAAA9H,EAAA2T,QAAA,MAAA3T,EAAAsT,OAAAxL,GAAwC6jI,GAAA,SAAA3rI,EAAA8H,EAAA1P,EAAAC,EAAAV,EAAAoM,GAA0B,GAAA20B,GAAA45F,EAAAC,SAAAn9G,EAAAk9G,EAAAh6H,IAA4B,IAAAogC,IAAA85F,GAAA1jF,QAAA,GAAA+vF,EAAA,IAA4B7+H,EAAA8tF,WAAArmC,KAAArvD,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,IAAA8tD,MAAA,SAAA14C,GAAkDypH,KAAA5C,GAAA3H,EAAAj8H,EAAA,OAAqByb,IAAA,OAAA4kB,EAAA,2BAAAgzG,GAAAt2H,KAA8CpV,EAAA8tF,SAAA,KAAA11F,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,MAAkC,MAAAoV,GAASypH,KAAA5C,GAAA3H,EAAAj8H,EAAA,OAAqByb,IAAA,OAAA4kB,EAAA,2BAAAgzG,GAAAt2H,KAA8CpV,EAAA8tF,SAAA,KAAA11F,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,QAAgCA,GAAA8tF,SAAA,KAAA11F,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,GAAA,SAAAA,GAA8CxC,QAAAhC,IAAA,kBAAAwE,SAAmC,eAAAoV,EAAApV,EAAA8tF,WAAArmC,KAAArvD,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,IAAA8tD,MAAA,SAAA9tD,GAAuEi8H,GAAA3H,EAAAj8H,EAAA,OAAeyb,IAAA,OAAA4kB,EAAA,2BAAAgzG,GAAA1rI,WAAkD,IAAA04B,IAAA85F,GAAAtkF,OAAA,GAAA3xC,eAAA6xC,gBAAApuC,EAAA8tF,SAAA,KAAA11F,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,GAAA,SAAAA,GAAiGi8H,GAAA3H,EAAAj8H,EAAA,OAAeyb,IAAA,OAAA4kB,EAAA,2BAAAgzG,GAAA1rI,WAAkD,IAAA6+H,EAAA,IAAe7+H,EAAA8tF,WAAArmC,KAAArvD,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,IAAA8tD,MAAA,SAAA14C,GAAkDypH,KAAA5C,GAAA3H,EAAAj8H,EAAA,OAAqByb,IAAA,OAAA4kB,EAAA,2BAAAgzG,GAAAt2H,KAA8CpV,EAAA8tF,SAAA11F,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,MAA6B,MAAAoV,GAASypH,KAAA5C,GAAA3H,EAAAj8H,EAAA,OAAqByb,IAAA,OAAA4kB,EAAA,2BAAAgzG,GAAAt2H,KAA8CpV,EAAA8tF,SAAA11F,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,QAA2BA,GAAA8tF,SAAA11F,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,QAA8B04B,KAAA85F,GAAAz1H,MAAAiD,EAAA8tF,WAAArmC,KAAArvD,EAAA0P,EAAAzP,EAAAV,EAAAoM,EAAA/D,IAAA8tD,MAAA,SAAA9tD,GAAoEi8H,GAAA3H,EAAAj8H,EAAA,OAAeyb,IAAA,OAAA4kB,EAAA,2BAAAgzG,GAAA1rI,QAAkDiqI,GAAA,SAAAjqI,EAAA8H,GAAkB,IAAI6jI,GAAA3rI,EAAA8H,EAAA8lF,IAAW,MAAA5tF,GAASxC,QAAAhC,IAAA,sBAAAwE,KAAsC4rI,GAAA,SAAA5rI,EAAA8H,EAAA1P,EAAAC,GAAsB,GAAAD,MAAAmkI,IAAAv8H,IAAA8H,EAAA,MAAAtK,SAAAwW,MAAA,8CAAA42H,GAAAxE,GAAAC,QAAA,6CAAmJ,KAAA/R,IAAA4H,IAAAtK,GAAAx5H,GAAA,MAAAoF,SAAAwW,MAAA,gEAAA42H,GAAAxE,GAAAC,QAAA,+DAAuL,IAAAv+H,IAAAs3H,GAAAC,kBAAA,MAAA7hI,SAAAwW,MAAA,8DAAA42H,GAAAxE,GAAAC,QAAA,6DAA2L,KAAAhtI,EAAA2G,GAAA,MAAAxC,SAAAwW,MAAA,yDAAA42H,GAAAxE,GAAAC,QAAA,wDAA8J,KAAAjH,GAAAhmI,eAAA0O,KAAAmqH,GAAA74H,eAAA0O,GAAA,MAAAtK,SAAAwW,MAAA,gDAAAlM,GAAA8iI,GAAAxE,GAAAC,QAAA,gDAAAv+H,EAAyL,IAAAnQ,MAAQoM,EAAA,KAAA20B,EAAAk5F,GAAAx5H,GAAAgd,EAAA,IAAuB,aAAAsjB,EAAA,MAAAl7B,SAAAwW,MAAA,6CAAA42H,GAAAxE,GAAAC,QAAA,4CAA2I,YAAAjxH,EAAA08G,GAAA15H,EAAA4H,IAAA,MAAAxC,SAAAwW,MAAA,uCAAA42H,GAAAxE,GAAAC,QAAA,sCAAuI,IAAAtiI,EAAAqR,EAAA6a,aAAAnoB,IAAAs3H,GAAA2F,iBAAA,CAA6C,IAAA1sI,MAAAmyE,WAAA,MAAAhtE,SAAAwW,MAAA,8CAAA42H,GAAAxE,GAAAC,QAAA,6CAAoJ,MAAAhuI,EAAAmyE,qBAAAtlE,QAAA,MAAA1H,SAAAwW,MAAA,uCAAA42H,GAAAxE,GAAAC,QAAA,sCAAqJ1uI,IAAGgzI,SAAArB,GAAAoB,SAAA3G,GAAA8H,iBAAAxzI,EAAAmyE,YAAuD,GAAA1iE,IAAAs3H,GAAAuF,kBAAA78H,IAAAs3H,GAAAwF,kBAAAjtI,GAAwDgzI,SAAArB,GAAAoB,SAAA3G,IAAwB1rI,IAAAV,EAAAu6B,KAAA75B,EAAA65B,OAAA8/F,GAAAlqH,EAAA/D,EAAA3L,EAAAsgC,EAAAm5F,KAAAl6H,EAAAyd,EAAAy/G,OAAAz/G,EAAA02H,YAAAhkI,IAAAs3H,GAAA9O,kBAAuF,GAAAsB,GAAAx5H,GAAAkjF,aAAA,CAAuBlmE,MAAA22H,cAAA1W,EAAAjgH,EAAA22H,eAAn9H,SAAA/rI,EAAA8H,GAAkB,GAAA1P,GAAA,CAAQ,IAAA4H,GAAA4xH,GAAA9pH,GAAAwzE,aAAA,IAAAljF,EAAA,EAAiCA,EAAAw5H,GAAA9pH,GAAAwzE,aAAA5gF,OAA4BtC,IAAA,GAAAw5H,GAAA9pH,GAAAwzE,aAAAljF,GAAAy8H,SAAA70H,EAAA60H,OAAA,CAAgDjD,GAAA9pH,GAAAwzE,aAAAp5E,OAAA9J,EAAA,EAA+B,SAA6yHgd,EAAAhd,GAAgD,IAAAL,GAD06B,SAAAiI,GAAc,GAAA8H,KAAS,KAAA8pH,GAAA5xH,GAAA,OAAiBgsI,mBAAAlkI,EAAA+pH,KAAA,KAAgC,IAAAz5H,GAAAw5H,GAAA5xH,GAAA6xH,IAAiB,YAAAD,GAAA5xH,GAAAs7E,aAAA5gF,SAAA26H,EAAAzD,GAAA5xH,GAAAmlI,iBAAArN,IAAA6D,GAAAoD,iBAAAjK,GAAAv8E,UAAAq5E,IAAA5xH,GAAA8H,OAAmHkkI,mBAAAlkI,EAAA+pH,KAAAz5H,IACtnCA,EAAWL,GAAAi0I,qBADwoChsI,EACxoC5H,EADwoC0P,EACxoC/P,EAAA85H,KADwpCG,GAAAC,GAAAiT,SAAA,KAAAllI,EAAA8H,EAAA,gBAAAgwH,IAAAqM,GAAAmF,MAAA,WACrnCxhI,KAAAs3H,GAAAgF,YAAAhvH,EAAA22H,cAAA1W,EAAAjgH,EAAA22H,eAAA32H,EAAA62H,WAAAnkI,IAAAs3H,GAAAiF,eAAAjvH,EAAA62H,UAAAC,GAAA92H,EAAApV,EAAA5H,EAAA2L,GADqmC,IAAA/D,GAAA8H,CAC9+B,OAAA8iI,IAAAxE,GAAA5+E,UAAsB2kF,GAAA,SAAAnsI,EAAA8H,GAAkB,MAAA9H,IAAA,gBAAAA,MAAAtF,OAAAoN,IAAA9H,IAAAtD,UAAA,EAAAoL,IAAA9H,GAAA,MAAgMosI,GAAA,SAAApsI,EAAA8H,EAAA1P,GAAoB,MAAA0P,KAAA9H,KAAA5H,GAAA4H,EAAA5H,GAAA+vC,KAAA,IAAgxDkkG,GAAA,SAAArsI,GAAgB,OAAA8H,MAAA1P,EAAA,EAAiBA,EAAA4H,EAAAtF,OAAWtC,IAAA,CAAK,GAAAC,GAAA2H,EAAAiH,WAAA7O,EAAsBC,GAAA,IAAAyP,IAAApN,QAAArC,IAAA,KAAAA,EAAA,MAAAyP,IAAApN,QAAArC,GAAA,MAAAyP,IAAApN,QAAA,GAAArC,EAAA,MAAAyP,IAAApN,QAAArC,GAAA,OAAAyP,IAAApN,QAAArC,GAAA,SAAAyP,IAAApN,QAAA,GAAArC,EAAA,KAAmJ,UAAA4iG,YAAAnzF,GAAAwkI,QAAgCC,GAAA,SAAAvsI,GAAgB,OAAA8H,GAAA1P,EAAA,GAAAo0I,UAAAxsI,GAAA3H,EAAA,GAAAV,EAAA,EAAqCA,EAAAS,EAAAgpI,WAAezpI,IAAAmQ,EAAA1P,EAAAq0I,SAAA90I,GAAA4N,SAAA,IAAAuC,EAAApN,OAAA,IAAAoN,EAAA,IAAAA,GAAAzP,GAAAyP,CAA4D,OAAAzP,IAASq0I,GAAA,SAAA1sI,EAAA8H,GAAkB,GAAA1P,IAAOE,KAAA,UAAgB,IAAAiE,OAAA2pG,OAAA,CAAkB,GAAA7tG,GAAAkE,OAAA2pG,OAAA06B,QAAArkI,OAAA2pG,OAAA46B,YAAuD,KAAAzoI,EAAA,WAAA8sF,IAAAnlF,EAAA8H,EAA0BzP,GAAAs0I,OAAAv0I,EAAAi0I,GAAArsI,IAAAynD,KAAA,SAAAznD,GAAmC8H,EAAAykI,GAAAvsI,MAAS8tD,MAAA,WAAmBq3B,GAAAnlF,EAAA8H,SAAU,IAAAvL,OAAAwkI,SAAA,CAAyB,IAAAxkI,OAAAwkI,SAAAH,OAAA,WAAAz7C,IAAAnlF,EAAA8H,EAA+C,IAAAnQ,GAAA4E,OAAAwkI,SAAAH,OAAA+L,OAAAv0I,EAAAi0I,GAAArsI,GAA6CrI,GAAA0pI,WAAA,SAAArhI,GAAyBA,EAAA0zC,QAAA5rC,EAAAykI,GAAAvsI,EAAA0zC,OAAAx/B,UAAiCvc,EAAAwwB,QAAA,WAAsBg9D,GAAAnlF,EAAA8H,QAASq9E,IAAAnlF,EAAA8H,IAA8zF8kI,GAAA,WAAejR,GAAAwD,2BAAArK,IAAA6G,GAAAoD,iBAAAjK,GAAAv8E,KAAsgL+xF,GAAA,SAAAtqI,GAAgB,GAAA8H,GAAA,IAAW,IAAA9H,KAAAtF,OAAA,GAAkB,GAAAtC,GAAA4H,EAAA8mC,OAAA,SAAA9mC,GAA2B,eAAAA,EAAA21H,UAAA,SAAA31H,EAAAy1H,2BAAAz1H,EAAA21H,eAAA31H,EAAAy1H,sBAA2Gr9H,GAAAsC,OAAA,IAAAoN,EAAA1P,EAAA,IAAqB,MAAA0P,IAAw3C+kI,GAAA,SAAA7sI,EAAA5H,GAAkB,GAAA4H,EAAA,CAAM,GAAA3H,GAAAV,EAAA,IAAa,aAAAS,EAAA,CAAe,GAAA2L,GAAA3L,EAAAu4F,cAAuB,KAAAh5F,EAAA6zI,GAAApzI,KAAAT,EAAA8zI,OAAA,CAAwBpzI,EAAAV,EAAA8zI,OAAA96C,eAAAh5F,EAAA8zI,OAAA96C,eAAA5sF,CAAoD,IAAA20B,GAAA/gC,EAAA+3H,aAAAt6G,EAAAzd,EAAA8zI,OAAA1zI,EAAAqd,EAAA6a,aAAA3uB,EAAAswH,GAAAl5F,GAAAm5F,KAAA3rH,GAAiE4mI,aAA9i0B,iBAA8i0BC,UAAA10I,EAAA2jF,SAAAj4E,EAAuDimI,IAAA5xI,EAAAgd,EAAAsjB,EAAAp3B,EAAAvJ,EAAAqd,EAAAy/G,OAAA3uH,GAAA,WAAAnC,GAAA6nI,GAAAxzI,EAAAgnI,GAAA9O,iBAAA34H,EAAA+3H,cAAA,qBAAA3rH,GAAA,wBAAAA,GAAA,WAAAA,GAAApM,EAAAq1I,0BAAAxvI,QAAAhC,IAAAuI,EAAA,+BAAApM,EAAAq1I,yBAAAr1I,EAAAq1I,2BAA9nD,SAAAhtI,GAAgB,GAAA5H,GAAA0P,IAAAzP,EAAA,WAAuBmmI,EAAAwM,cAAA,EAAAxM,EAAAyO,gBAAApC,MAA2ClzI,EAAA,SAAAqI,GAAe,GAAA3H,GAAA4iB,KAAAgK,MAAAjlB,EAAAmgB,SAA6B3iB,SAAAhC,IAAA,0BAAAwE,EAAA+d,OAAA1lB,EAAkD,IAAAV,EAAMU,GAAAizI,aAAAjzI,EAAAizI,YAAApzE,SAAAvgE,EAAAU,EAAAizI,YAAApzE,OAAA16D,QAAAhC,IAAA,0CAAA7D,QAAA84H,GAAA94H,EAAA+/H,OAAA8G,EAAAwM,aAAAljI,IAAA1P,EAAAomI,EAAAyO,eAAAt1I,EAAAkzI,MAAsL9mI,EAAA,SAAA/D,GAAeixH,GAAAjxH,CAAK,IAAA8H,GAAA41H,EAAApJ,EAAA,kBAAAl8H,GAAiC8yI,cAAA,UAAApW,GAAAC,WAAqC18H,GAAI60I,OAAA5Y,EAAA6Y,SAAAjR,EAAAxL,mBAAA1wH,GAA2C+D,EAAAkX,KAAAkK,UAAA9sB,EAAqB2wI,IAAAlhI,EAAA/D,EAAApM,EAAAS,IAAYsgC,EAAA,WAAiD30B,GAA5BqvF,YAAY7H,WAAA,MAAsB,IAAA9yF,OAAAg3B,KAAAmiG,IAAAl3H,OAAA,QAAA8C,SAAAsC,KAAA,oCAAAzH,IAAyF,KAAA2H,EAAA6xF,YAAA,kBAAA7xF,GAAA6xF,WAAA,MAAAr0F,SAAAsC,KAAA,yBAAA44B,IAAoG,IAAAtjB,GAAArd,EAAAiI,EAAA6xF,YAAuB,QAAAvwF,KAAAvJ,GAAA,CAAgB,GAAAmO,GAAAnO,EAAAuJ,EAAW,oBAAA4E,OAAAi8D,OAAA,gBAAAj8D,GAAAi8D,QAAAj8D,EAAAi8D,MAAAsC,KAAA,MAAAjnE,SAAAsC,KAAA,4BAAAzH,IAA8H,cAAA6N,EAAAi8D,MAAAsC,KAAA,CAA2B,GAAArvD,EAAA,MAAA5X,SAAAsC,KAAA,uCAAAzH,IAAqE+c,GAAAlP,GAAK,IAAAkP,EAAA,MAAA5X,SAAAsC,KAAA,6BAAAzH,IAA4D,KAAA+c,EAAAg4H,eAAA,kBAAAh4H,GAAAg4H,cAAA,MAAA5vI,SAAAsC,KAAA,kCAAA44B,IAAmH,IAAA1gC,GAAAod,EAAAg4H,eAAwB,iBAAAp1I,GAAAK,KAAA,aAAAL,OAAAo7F,cAAA,IAAAp7F,EAAAo7F,UAAA14F,QAAA1C,EAAAo7F,UAAA74F,MAA+GgxF,WAAA,IAAaxnF,EAAA/L,KAA4RI,IAAyR,cAAA2L,GAAAq6H,EAAA,IAAwBA,EAAAiP,eAAkB,MAAArtI,GAASk+H,EAAA,eAAAl+H,GAAAo+H,EAAA0E,kBAA0C,yBAAA/+H,GAAA,WAAAA,EAAA,CAA0C,GAAAy6H,EAAAuM,uBAAAjjI,IAAA02H,EAAA77F,OAAAkoG,KAAAzM,EAAA,IAAuDA,EAAAkP,aAAgB,MAAAttI,GAASk+H,EAAA,aAAAl+H,GAAAo+H,EAAA0E,kBAAwC7G,GAAA3H,EAAA4H,EAAA,OAAgBpoH,IAAA,4BAAAmqH,IAAmCA,GAAA,gBAAqBiO,GAAA,SAAAlsI,EAAA5H,EAAAC,GAAoB,IAAA2H,EAAAisI,OAAA,CAAc,GAAAt0I,GAAAS,EAAA2L,EAAA1L,CAAY,QAAA2H,EAAA+rI,gBAAA/rI,EAAAi0H,kBAAAnsH,IAAAylI,GAAA51I,EAAAoM,GAAA/D,EAAA+rI,cAAArtD,YAAA,WAAgG6uD,GAAA51I,EAAAoM,IADjpT,QACgqTypI,GAAA,SAAAxtI,EAAA8H,EAAA1P,EAAAC,EAAAV,EAAAoM,GAA0BA,EAAAmmI,gBAAApiI,EAAAoiI,gBAAAnmI,EAAAomI,iBAAAriI,EAAAqiI,iBAAApmI,EAAAqmI,kBAAAtiI,EAAAsiI,kBAAApY,GAAAC,GAAA0T,UAAAvtI,EAAAC,EAAAV,EAAAoM,EAAA+D,EAAA+sH,OAAA/sH,EAAAgkI,aAClz4B2B,GAAA,SAAAztI,EAAA8H,GAAkB,GAAA9H,YAAA8H,EAAA,CAAkB,GAAA1P,GAAA,MAAWA,EAAAozI,GAAA1jI,KAAA1P,EAAAqzI,QAAArzI,EAAAqzI,OAAAiC,8BAA2DC,GAAA,SAAA3tI,EAAA5H,GAAkB,GAAA4H,YAAA5H,EAAA,CAAkB,GAAAC,GAAA0L,EAAA20B,EAAAtjB,EAAArd,EAAA,KAAAuJ,EAAA,IAA4B,KAAAA,EAAAkqI,GAAApzI,KAAAkJ,EAAAmqI,OAAA,CAAwB1zI,EAAAuJ,EAAAmqI,OAAApzI,EAAAiJ,EAAAouH,aAAA3rH,EAAA+D,IAAA/P,EAAAwzG,UAAA7yE,EAAA3gC,EAAAirF,mBAAA5tE,EAAArd,EAAA64F,iBAA+F,IAAA1qF,GAAAnO,EAAAk4B,aAAAj4B,EAAA45H,GAAAv5H,GAAAw5H,KAAA15H,GAAqC20I,aADgnC,qBAChnCC,UAAAr0G,EAAAsjD,SAAA5jF,EAAA4qF,mBAA8E,IAAAgnD,GAAA5xI,EAAAL,EAAAM,EAAAL,EAAAkO,EAAAnO,EAAA88H,OAAA18H,GAAAid,IAAAhd,EAAAw4F,kBAAA,CAAqD,GAAA93F,IAAOg0I,aADs+B,oBACt+BC,UAAA33H,EAAA4mE,SAAA5jF,EAAAw4F,kBAA4Eo5C,IAAA5xI,EAAAL,EAAAM,EAAAL,EAAAkO,EAAAnO,EAAA88H,OAAA/7H,GAAyB,aAAAV,EAAAw4F,mBAAA,aAAAx4F,EAAA4qF,oBAA74B,SAAAhjF,EAAA5H,EAAAC,EAAAV,GAAsB,GAAAoM,GAAA3L,EAAA4qF,mBAAAtqD,EAAAtgC,EAAA63B,aAAA7a,EAAAw8G,GAAAv5H,GAAAN,EAAA+P,IAAAxG,GAA6DssI,uBAAA7pI,EAAA8pI,uBAAA7tI,EAAAgjF,mBAAsE5qF,GAAA01I,4BAAAn2I,EAAA,iBAAAoM,GAAA3L,EAAAu8H,UAAAwC,GAAAuQ,oBAAApmI,EAAAysI,gBAAAh2I,EAAAK,EAAA41I,YAAAhc,GAAAC,GAAAuT,2BAAA9sG,EAAArgC,EAAA+c,EAAAy8G,KAAAvwH,EAAAlJ,EAAAy8H,OAAAz8H,EAAA0zI,cAAovB1zI,EAAAL,EAAAM,EAAA0L,GAAA,cAAA3L,EAAA4qF,oBAAA,cAAA5qF,EAAA4qF,mBADs34B,SAAAhjF,EAAA5H,EAAAC,EAAAV,GAAsB,GAAAoM,GAAA3L,EAAA4qF,mBAAAtqD,EAAAtgC,EAAA63B,aAAA7a,EAAAw8G,GAAAv5H,GAAAN,EAAA+P,IAAAxG,GAA6DssI,uBAAA7pI,EAAA8pI,uBAAA7tI,EAAAgjF,mBAAAirD,SAAA71I,EAAAiyI,wBAAuGnkI,EAAA9N,EAAAu8H,UAAAwC,GAAAC,UAAAp/H,EAAA,cAAAgI,EAAAgjF,kBAAiE5qF,GAAA81I,2BAAAv2I,EAAAS,EAAAovI,eAAAyC,GAAAjqI,EAAA,SAAAA,GAAiE,GAAA5H,EAAA8xI,gBAAAlqI,EAAAkqI,gBAAA9xI,EAAA+xI,iBAAAnqI,EAAAmqI,iBAAA/xI,EAAAgyI,kBAAApqI,EAAAoqI,kBAAAhyI,EAAAiyI,uBAAAC,GAAAlyI,EAAAgyI,mBAAA9oI,EAAAipI,SAAAnyI,EAAAiyI,uBAAA/oI,EAAAysI,gBAAAh2I,EAAAK,EAAA41I,YAAA9nI,EAAA8rH,GAAAC,GAAAqT,iBAAA5sG,EAAArgC,EAAA+c,EAAAy8G,KAAAvwH,EAAAlJ,EAAAy8H,YAA4R,IAAA78H,EAAA,CAAW,GAAA8P,KAASA,GAAAsiI,kBAAApqI,EAAAoqI,kBAAApY,GAAAC,GAAA8T,aAAArtG,EAAArgC,EAAA+c,EAAAy8G,KAAA/pH,EAAA1P,EAAAy8H,WAAmFsZ,GAAA/1I,EAAAw1F,GAAAqkC,GAAAgT,gBAAA5sI,GAAAD,EAAAu8H,QAAAwC,GAAAqQ,YAAA0E,GAAA9zI,EAAA4H,EAAA3H,EAAAqgC,IACrj6BtgC,EAAAL,EAAAM,EAAA0L,GAAA,WAAA3L,EAAA4qF,mBAD853B,SAAAhjF,EAAA8H,EAAA1P,EAAAC,GAAsB,GAAAV,GAAAmQ,EAAAk7E,mBAAAj/E,EAAA+D,EAAAmoB,aAAAyI,EAAAk5F,GAAAx5H,GAAAgd,GAAuDw4H,uBAAAj2I,EAAAk2I,uBAAA7tI,EAAAgjF,mBAAAunD,SAAAziI,EAAAuiI,uBAAA+D,aAAA/1I,EAAuHyP,GAAA6sH,QAAAwC,GAAA73C,OAAA,aAAA3nF,EAAA61I,GAAAxtI,EAAA8H,EAAA/D,EAAA3L,EAAAsgC,EAAAm5F,KAAAz8G,GAAA,cAAAzd,GAAA,cAAAA,EAAAq6H,GAAAC,GAAA4T,cAAA9hI,EAAA3L,EAAAsgC,EAAAm5F,KAAAz8G,EAAAtN,EAAA+sH,OAAA/sH,EAAAgkI,YAAA,iBAAAn0I,GAAAmQ,EAAA0/H,YAAAxV,GAAAC,GAAA4T,cAAA9hI,EAAA3L,EAAAsgC,EAAAm5F,KAAAz8G,EAAAtN,EAAA+sH,OAAA/sH,EAAAgkI,YAAA,iBAAAn0I,GAAA61I,GAAAxtI,EAAA8H,EAAA/D,EAAA3L,EAAAsgC,EAAAm5F,KAAAz8G,IAClm4Bhd,EAAAL,EAAAM,EAAA0L,GAAA,iBAAA3L,EAAA4qF,mBAD0n6B,SAAAhjF,EAAA5H,EAAAC,GAAoB,GAAAV,GAAAS,EAAA4qF,mBAAAj/E,EAAA3L,EAAA63B,aAAAyI,EAAAk5F,GAAAv5H,GAAA+c,EAAAtN,IAAA/P,GAA6D61I,uBAAAj2I,EAAAk2I,uBAAA7tI,EAAAgjF,mBAAAqrD,yBAAAj2I,EAAAk2I,qBAAA/D,SAAAnyI,EAAAiyI,uBAAwJjyI,GAAAmzG,UAAAn2F,EAAA,cAAAzd,GAAA,cAAAA,GAAAS,EAAAu8H,QAAAwC,GAAAC,UAAAh/H,EAAA41I,YAAA54H,EAAA48G,GAAAC,GAAAoT,mBAAAthI,EAAA1L,EAAAqgC,EAAAm5F,KAAA95H,EAAAK,EAAAy8H,OAAAz8H,EAAA0zI,YAAA1zI,EAAA0zI,YAAA1zI,EAAA0zI,WAAArP,GAAAgK,qBAAA,uCAAA1iI,EAAA,0BAAApM,IAAAS,EAAAu8H,QAAAwC,GAAAuQ,kBAAAtvI,EAAA41I,YAAA54H,EAAA48G,GAAAC,GAAAsT,6BAAAxhI,EAAA1L,EAAAqgC,EAAAm5F,KAAA95H,EAAAK,EAAAy8H,OAAAz8H,EAAA0zI,YAAA1zI,EAAA0zI,YAAA1zI,EAAA0zI,WAAArP,GAAAgK,qBAAA,uCAAA1iI,EAAA,cACn26B3L,EAAAL,EAAAM,GAAA,WAAAD,EAAA4qF,mBADg17B,SAAAhjF,EAAA8H,EAAA1P,EAAAC,GAAsB,GAAAV,GAAAmQ,EAAAk7E,mBAAAj/E,EAAA+D,EAAAmoB,aAAAyI,EAAAk5F,GAAAx5H,GAAAgd,GAAuDw4H,uBAAAj2I,EAAAk2I,uBAAA7tI,EAAAgjF,mBAAsE,SAAArrF,GAAA,aAAAA,GAAAyd,EAAAg5H,aAAA/1I,EAAA25H,GAAAC,GAAAwT,WAAA1hI,EAAA3L,EAAAsgC,EAAAm5F,KAAAz8G,EAAAtN,EAAA+sH,OAAA/sH,EAAAgkI,cAAA12H,EAAAm1H,SAAAziI,EAAAuiI,uBACjr+BrY,GAAAC,GAAAyT,cAAA3hI,EAAA3L,EAAAsgC,EAAAm5F,KAAAz8G,EAAAtN,EAAA+sH,OAAA/sH,EAAAgkI,cAA8sC1zI,EAAAL,EAAAM,EAAA0L,GAAA,QAAA3L,EAAA4qF,oBAArpC,SAAAhjF,EAAA8H,EAAA1P,GAAoB,GAAAC,GAAAyP,EAAAk7E,mBAAArrF,EAAAmQ,EAAAmoB,aAAAlsB,EAAA6tH,GAAAx5H,GAAAsgC,GAAuDk1G,uBAAAv1I,EAAAw1I,4BAA3E,IAA2E7qD,mBAAAirD,SAAAnmI,EAAAuiI,uBAAwG,SAAAhyI,IAAAyP,EAAA0/H,eAAAxV,GAAAC,GAAA2T,aAAAjuI,EAAAS,EAAA2L,EAAA8tH,KAAAn5F,EAAA5wB,EAAA+sH,OAAA/sH,EAAAgkI,gBAAk+B/zI,EAAAirF,mBAAA5qF,EAAA4qF,mBAAAjrF,EAAA64F,kBAAAx4F,EAAAw4F,kBAAA74F,EAAAu2I,qBAAAxmI,OAAqlBymI,GAAA,SAAAvuI,EAAA8H,GAAkB,GAAA1P,GAAAC,EAAAV,CAAU,aAAAmQ,EAAA,CAAe,UAAA9H,EAAA8kC,UAAA,CAAuB,GAA2CpM,GAAA,OAAfrgC,EAA5B2H,EAAA8kC,oBAA4B5mC,MAAA,MAAe,eAA8B,OAAA7F,EAAA,KAAAV,GAAA,IAAAU,EAAA,GAAAoE,QAAA,KAAArE,GAAyC4B,UAAA3B,EAAA,GAAA4e,SAAAyhB,EAAA69F,eAAAl+H,EAAA,GAAAyxG,QAAAnyG,EAAA,IAAAU,EAAA,QAAAA,EAAA,GAAAA,EAAA,OAAAA,EAAA,GAAAqd,KAAArd,EAAA,GAAAyrC,MAAA9jC,EAAA8kC,UAAAiiD,SAA8H,GAAA3xE,GAAA,IAAWA,GAAAo2H,GAAA1jI,GAAAmiI,GAAAniI,EAAA,SAAA9H,GAAyBoV,EAAA80H,gBAAAlqI,EAAAkqI,gBAAA90H,EAAA+0H,iBAAAnqI,EAAAmqI,iBAAA/0H,EAAAg1H,kBAAApqI,EAAAoqI,kBAAAh1H,EAAAi1H,uBAAAC,GAAAl1H,EAAAg1H,qBAAmKh1H,KAAAq2H,kBAAArzI,IAAA,IAAAgd,EAAAq2H,OAAA5U,cAAAp6H,QAAArE,IAAAgd,EAAAq2H,OAAA5U,cAAAt8H,KAAAnC,MAAAgd,EAAAq2H,OAAA+C,iBAAhpB,SAAAxuI,EAAA8H,GAAkB,GAAA1P,GAAAozI,GAAAxrI,EAAY,IAAA5H,KAAAqzI,OAAA,CAAgB,GAAApzI,GAAAD,EAAAqzI,OAAA9zI,EAAAU,EAAA43B,aAAAlsB,EAAA3L,EAAAs3H,aAAAh3F,EAAAk5F,GAAA7tH,GAAA8tH,IAA8DG,IAAAC,GAAA+T,kBAAAruI,EAAAoM,EAAA20B,EAAA5wB,EAAAzP,EAAAw8H,UAAoiB/sH,EAAA1P,MAA0Im1I,GAAA,SAAAvtI,EAAA8H,GAAkB,GAAA8pH,GAAAx4H,eAAA0O,GAAA,CAAmH,cAAA9H,EAAA2wF,eAAA,MAAAi7C,IAAA5rI,EAAAo/H,GAAA9O,iBAAAxoH,KAAqE,IAAA1P,GAAA05H,GAAAhqH,EAAA9H,EAAc,IAAA5H,EAAAu8H,UAAAwC,GAAAqQ,aAAApvI,EAAAqjI,kBAAArjI,EAAAu8H,SAAA,cAAA30H,EAAAgjF,oBAAA,cAAAhjF,EAAAgjF,mBAAA,QAA8I,IAAA3qF,GAAAu5H,GAAA9pH,GAAA+pH,IAAiB,KAAI8Z,GAAA3rI,EAAA5H,EAAA0zI,WAAAniC,EAAAuyB,EAAA7jI,EAAAD,GAA4B,MAAA4H,GAASxC,QAAAhC,IAAA,sBAAAwE,QAA9YxC,SAAAwW,MAAA,6DAAAlM,IAAobqmI,GAAA,SAAAnuI,EAAA5H,EAAAC,GAAoB,GAAA0L,GAAA,KAAA20B,EAAAk5F,GAAAv5H,GAAA+c,EAAA,KAAArd,EAAA+P,GAAkC,aAAA4wB,GAAAl7B,QAAAwW,MAAA,8DAAAoB,EAAA08G,GAAAz5H,EAAA2H,KAAAxC,QAAAwW,MAAA,iDAAAoB,EAAAo5H,gBAAA,CAAyLzqI,EAAAqR,EAAA6a,YAAiC,IAAA3uB,IAAOmtI,WAAxC12I,EAAAqd,EAAAm2F,UAAwCmjC,kBAAAt5H,EAAA04H,4BAAAa,qBAAAv5H,EAAA84H,2BAAApe,mBAAA16G,EAAA06G,mBAAA8e,4BAAAx5H,EAAAw5H,4BAAkNr2F,MAAAj3C,EAAAutI,gBAAAte,GAAAC,eAAAyZ,GAAAjqI,EAAA,SAAAA,GAA0DsB,EAAA4oI,gBAAAlqI,EAAAkqI,gBAAA5oI,EAAA6oI,iBAAAnqI,EAAAmqI,iBAAA7oI,EAAA8oI,kBAAApqI,EAAAoqI,kBAAAh1H,EAAA80H,gBAAAlqI,EAAAkqI,gBAAA90H,EAAA+0H,iBAAAnqI,EAAAmqI,iBAAA/0H,EAAAg1H,kBAAApqI,EAAAoqI,kBAAAh1H,EAAAu/G,QAAAwC,GAAAqQ,YAAApyH,EAAAi1H,uBAAAC,GAAAl1H,EAAAg1H,mBAAAh1H,EAAAo5H,kBAAAxc,GAAA55H,EAAA2L,EAAA1L,EAAAqgC,EAAAm5F,KAAAvwH,EAAA8T,EAAAy/G,OAAAz/G,EAAA02H,YAAA12H,EAAAo5H,wBAAoYvX,GAAA,SAAAj3H,EAAA8H,EAAA1P,GAAoB,GAAAC,MAAQV,EAAA,KAAAoM,EAAA6tH,GAAAx5H,GAAAsgC,EAAA,cAAuB30B,GAAAvG,QAAAwW,MAAA,oEAAA0kB,EAAAo5F,GAAA15H,EAAA4H,KAAAxC,QAAAwW,MAAA,sDAAArc,EAAA+gC,EAAAzI,aAAA53B,EAAA41I,SAAAv1G,EAAA2xG,uBAAAJ,GAAAjqI,EAAA,SAAAA,GAAoP3H,EAAAkyI,SAAAD,GAAAtqI,EAAAoqI,mBAAA1xG,EAAA2xG,uBAAAhyI,EAAAkyI,SAAAlyI,EAAAy2I,YAAA,KAAAz2I,EAAA2+H,UAAAt+F,EAAAo+F,cAAAE,UAAAhF,GAAAlqH,EAAAnQ,EAAAS,EAAA2L,EAAA8tH,KAAAx5H,EAAAqgC,EAAAm8F,OAAAn8F,EAAAozG,eAA2KiD,GAAA,SAAA/uI,EAAA8H,GAAkB,GAAA9H,EAAA+1H,WAAA,CAAiB,GAAA39H,GAAA4H,EAAA+1H,WAAAjvF,OAAA,SAAA9mC,GAAsC,MAAAA,GAAA7F,KAAA2N,GAAkB,IAAA1P,EAAAsC,OAAA,QAAAtC,GAAA,KAA2B42I,GAAA,SAAAhvI,EAAA8H,GAAkB,GAAA9H,EAAA2oC,MAAA,CAAY,GAAAvwC,GAAA4H,EAAA2oC,MAAA7B,OAAA,SAAA9mC,GAAiC,MAAAA,GAAA7F,KAAA2N,GAAkB,IAAA1P,EAAAsC,OAAA,QAAAtC,GAAA,KAA2B62I,GAAA,SAAAjvI,EAAA8H,GAAkB,GAAA9H,EAAAg2H,cAAA,CAAoB,GAAA59H,GAAA4H,EAAAg2H,cAAAlvF,OAAA,SAAA9mC,GAAyC,MAAAA,GAAA7F,KAAA2N,GAAkB,IAAA1P,EAAAsC,OAAA,QAAAtC,GAAA,KAA2Bo/H,GAAA,SAAAx3H,GAAgB,OAAA8H,GAAA1P,EAAAC,EAAA2H,EAAAkzH,UAAAx4H,OAAA/C,EAAA,EAAqCA,EAAAU,EAAIV,IAAAS,EAAA4H,EAAAkzH,UAAAv7H,GAAAS,EAAAw6H,0BAAA9qH,EAAAmnI,GAAAjvI,EAAA5H,EAAAw6H,4BAAA5yH,EAAAkzH,UAAAv7H,GAAA+Q,EAAA1I,EAAAkzH,UAAAv7H,GAAAmQ,GAA4H,OAAA9H,IAASq3E,GAAA,SAAAr3E,GAAgB,OAAA8H,GAAA1P,EAAAC,EAAAV,EAAAqI,EAAAiwE,QAAAv1E,OAAAqJ,EAAA,EAAqCA,EAAApM,EAAIoM,IAAA+D,EAAA9H,EAAAiwE,QAAAlsE,GAAA+D,EAAAM,KAAAihG,UAAAjxG,EAAA22I,GAAA/uI,EAAA8H,EAAAM,KAAAihG,YAAArpG,EAAAiwE,QAAAlsE,GAAAqE,KAAAM,EAAA1I,EAAAiwE,QAAAlsE,GAAAqE,KAAAhQ,IAAA0P,EAAAM,KAAA8mI,UAAA72I,EAAA22I,GAAAhvI,EAAA8H,EAAAM,KAAA8mI,YAAAlvI,EAAAiwE,QAAAlsE,GAAAqE,KAAAM,EAAA1I,EAAAiwE,QAAAlsE,GAAAqE,KAAA/P,GAAiM,OAAA2H,IAAS7F,GAAA,SAAA6F,EAAA8H,EAAA1P,GAAoB0P,EAAA1O,eAAA4G,KAAA8H,EAAA9H,GAAA5G,eAAA,WAAA0O,EAAA9H,GAAAyhC,MAAA0tG,iBAAA/2I,EAAAqpC,MAAA8mG,WAAAzgI,EAAA9H,GAAAyhC,MAAA2tG,eAAAh3I,EAAAqpC,MAAA+mG,WAAA1gI,EAAA9H,GAAAyhC,MAAA4tG,iBAAAj3I,EAAAqpC,MAAA8mG,WAAAzgI,EAAA9H,GAAAyhC,MAAA4tG,eAAAj3I,EAAAqpC,MAAA+mG,WAAA1gI,EAAA9H,GAAAyhC,MAAA2tG,iBAAAtnI,EAAA9H,GAAA5G,eAAA,WAAA0O,EAAA9H,GAAA2mE,MAAAwoE,iBAAA/2I,EAAAuuE,MAAA4hE,WAAAzgI,EAAA9H,GAAA2mE,MAAAyoE,eAAAh3I,EAAAuuE,MAAA6hE,WAAA1gI,EAAA9H,GAAA2mE,MAAA0oE,iBAAAj3I,EAAAuuE,MAAA4hE,WAAAzgI,EAAA9H,GAAA2mE,MAAA0oE,eAAAj3I,EAAAuuE,MAAA6hE,WAAA1gI,EAAA9H,GAAA2mE,MAAAyoE,mBAA6f9M,GAAA,SAAAtiI,EAAA5H,EAAAC,GAAoB,GAAAV,MAAAoM,EAAA,KAAA20B,EAAA,IAAuB,QAAAtjB,KAAAhd,KAAAgB,eAAAgc,IAAAzd,EAAA4C,KAAAg6H,mBAAAn/G,GAAA,IAAAm/G,mBAAAn8H,EAAAgd,IAA+F,IAAArd,GAAAJ,EAAAwK,KAAA,KAAAb,EAAA,GAAA2iB,eAAuC3iB,GAAAmlB,KAAA,OAAAzmB,GAAAsB,EAAAqlB,iBAAA,oDAAA5iB,EAAA+D,IAAAxG,EAAAw7E,OAAA,WAAkHpkD,EAAA5wB,IAAgBzP,EAAAiJ,EAAVo3B,EAAA30B,IAAiBzC,EAAAoa,KAAA3jB,IAAWu3I,GAAA,WAAezG,GAAApL,EAAA,kBAAAz9H,GAA2B,SAAAA,EAAA+d,OAAA,IAAsB,GAAAjW,GAAAmT,KAAAgK,MAAAjlB,EAAAuiB,aAAiCpoB,IAAA,kBAAA2N,EAAA8gI,IAAAzuI,GAAA,sBAAA2N,EAAAwgI,IAAAnuI,GAAA,0BAAA2N,EAAA6gI,IAAAxuI,GAAA,eAAA2N,EAAA4gI,IAAAvuI,GAAA,iCAAA2N,EAAA2gI,IAA+J,MAAAzoI,GAAS,MAAAA,KAAU,WAAYu4C,IAAA+2F,QAAWlT,GAAA,WAAe,GAAAhkI,GAAA,KAAAC,EAAA,IAAmCwwI,IAAnCzN,EAAA,YAAmC,kBAAAp7H,EAAArI,GAA4B,MAAAqI,EAAA+d,QAAA3lB,EAAA6iB,KAAAgK,MAAAjlB,EAAAmgB,UAAA9nB,EAAAyP,IAAAynI,GAAAn3I,EAAAT,EAAAU,IAAAkgD,IAAA7zC,WAAA,WAAoF03H,MAAK,MAAM,WAAY7jF,IAAA6jF,QAAWmT,GAAA,SAAAvvI,EAAA8H,EAAA1P,GAAoB,GAAAmgD,GAAA,CAAO,GAAAlgD,GAAAyP,EAAA,CAAU,IAAAzP,EAAAk4H,GAAA2T,kBAAA3T,GAAA4L,iBAAAF,GAAA3H,EAAA4H,EAAA,OAA8DpoH,IAAA,6BAA6B,CAAK,GAAAnc,GAAAqI,EAAAuhB,IAAAlpB,EAAA0L,EAAApM,EAAAS,CAAoBm4H,IAAA4L,cAAA5hI,KAAAwJ,GAAAk4H,GAAA3H,EAAA4H,EAAA,OAAyCpoH,IAAA,6BAAAnc,EAAA,mBAAAS,EAAA,yBAAA0P,IAAqF,GAAAyoH,GAAA4L,cAAAzhI,QAAA61H,GAAA0T,aAAA,CAA6C,GAAAvrG,GAAA63F,GAAA4L,cAAAn4E,OAAA,SAAAhkD,EAAA8H,GAA4C,MAAA9H,GAAA8H,GAAayoH,IAAAC,cAAA93F,EAAA63F,GAAA4L,cAAAzhI,OAAAuhI,GAAA3H,EAAA4H,EAAA,OAA2DpoH,IAAA,kBAAAy8G,GAAAC,cAAA,UAAAD,GAAA4L,cAAAzhI,SAAyE61H,GAAA4L,iBAAA5jF,MAAAojF,GAAAwD,2BAAArK,IAAA6G,GAAAoD,iBAAAjK,GAAAv8E,QAAyFA,KAAA7zC,WAAA,WAA+B03H,MAAK,OAAouFhD,GAAA,GAA7tF,YAAe,GAAAp5H,GAAAtI,KAAAU,EAAA,KAAAC,KAAAV,KAAAoM,KAAgC20B,EAAI,YAAJA,EAAI,YAAJA,EAAI,QAA6DhhC,MAAA83I,mBAAA92G,CAAiC,IAAAtjB,GAAA,SAAApV,EAAA8H,GAAoB,IAAI,GAAAvL,eAAA2e,eAAA,CAAkC,GAAA9iB,GAAA6iB,KAAAgK,MAAA1oB,OAAA2e,eAAAgK,QAAA,kBAAkE9sB,WAAQA,EAAA4H,KAAA5H,EAAA4H,OAAgB5H,EAAA4H,GAAA6xH,KAAA/pH,EAAAvL,OAAA2e,eAAAC,QAAA,iBAAAF,KAAAkK,UAAA/sB,KAAiF,MAAA4H,GAAS,OAAO+D,EAAA/D,GAF68W,uCAE78Ws0H,EAAA,gBAAAC,mBAAAv0H,GAAA,IAAA8H,EAAA,WAAmEpQ,MAAA2hI,iBAAA,WAAiC,MAAAt1H,IAASrM,KAAAurI,0BAAA,SAAAl/H,GAA4C,MAAA/D,GAAAwvI,qBAAA92G,GAAA14B,EAAAwvI,qBAAA92G,GAAAujG,GAAA3H,EAAA4H,EAAA,OAA+FpoH,IAAA,oEAAsEtW,QAAAhC,IAAA,wEAAAuI,KAAA04H,GAAAj1E,QAAA,0CAAAxnD,EAAAwvI,mBAAA92G,GAAAtgC,EAAA,GAAA4vB,WAAAw1G,EAAA,kBAAAv1G,OAAA,WAAyOzqB,QAAAhC,IAAA,8CAAA7D,EAAAukI,GAAAD,GAAA3H,EAAA4H,EAAA,OAAgFpoH,IAAA,0CAA4C9T,EAAAwvI,mBAAA92G,EAAArgC,EAAAV,KAAAU,KAAAsjI,GAAAwD,2BAAArK,IAAAn9H,IAFkyQ,WAAa,GAAAqI,EAA8D,KAAAA,IAAA4xH,IAAA,GAAAA,GAAAx4H,eAAA4G,GAAA,CAAqC,GAAAA,IAAAu8H,EAAA,MAAiBkO,IAAAzqI,GAAA4xH,GAAA5xH,GAAAmlI,gBAApH,SAAAnlI,GAAoB,MAAA0+E,aAAA,WAA8B+rD,GAAAzqI,IAAq0G,MAAnwGA,GAAiC+3H,OAEp8Q4D,GAAAoD,iBAAAjK,GAAAv8E,KAAA5gD,MAA0HS,EAAAiwB,QAAA,WAAsBroB,EAAAwvI,mBAAA92G,EAAAl7B,QAAAhC,IAAA,yCAAAygI,GAAA3H,EAAA4H,EAAA,OAAmGpoH,IAAA,qCAF41O,WAAa,GAAA9T,EAAM,KAAAA,IAAA4xH,OAAAx4H,eAAA4G,KAAA4xH,GAAA5xH,GAAAmlI,gBAAA9P,EAAAzD,GAAA5xH,GAAAmlI,uBAAAvT,IAAA5xH,GAAAmlI,gBAAgHrN,QAEx7O1/H,MAAA,MAAA2L,KAAA04H,GAAA6J,UAAA,qCAAwEluI,EAAA+vB,QAAA,SAAArgB,GAAuB9H,EAAAwvI,mBAAA92G,EAAAujG,GAAA3H,EAAA4H,EAAA,OAA8CpoH,IAAA,oCAAsCtW,QAAAhC,IAAA,kCAAAsM,GAAA/D,KAAA04H,GAAA8J,iBAAA,kCAAAz+H,SAAiH1P,EAAAmwB,UAAA,SAAAvoB,GAA8B,GAAA5H,GAAAC,EAAA2H,EAAAoI,KAAAzQ,EAAAmQ,IAAA4wB,EAAAzd,KAAAgK,MAAA5sB,EAAqC,cAAAqgC,EAAA3a,OAAA,0BAAA2a,EAAAlb,SAAAs3G,GAAAmI,UAAA,KAAAnI,GAAAC,UAAA,KAAAD,GAAA4H,0BAAApI,EAAA4H,IAAAn4H,KAAA04H,GAAA+J,aAAAnuI,EAAAmlB,YAAmK,eAAAkb,EAAA3a,OAAA,gBAAA2a,EAAA7O,MAAA81G,GAAA,gBAAmE,IAAAjnG,EAAA7O,QAAAooG,GAAAgN,YAAAvmG,EAAA7O,QAAAooG,GAAAkT,gBAAA,CAA+D,GAAAptI,MAAAuJ,EAAA,IAAgBlJ,GAAA8mI,mBAAAxmG,EAAAg3F,cAAiGkC,GAAAx4H,eAAAhB,KAAAw5H,GAAAx5H,GAAAy5H,OAAAn5F,EAAAm5F,OAAA95H,KAAAqd,EAAAhd,EAAAsgC,EAAAm5F,MAAAvwH,EAAAo3B,EAAA+2G,qBAAA/2G,EAAA+2G,qBAAA/2G,EAAAg3G,oBAAAh3G,EAAA7O,QAAAooG,GAAAgN,YAAArN,GAAAx5H,GAAA+sI,kBAAAvT,GAAAx5H,GAAA+sI,iBAA5DnlI,EAA4D5H,EAA1CsmF,YAAA,WAA8B+rD,GAAAzqI,IAF2pV,MAE/oV+3H,KAAAnG,GAAAx5H,GAAAy5H,KAAAn5F,EAAAm5F,MAAA8J,GAAA6D,qBAAA7D,GAAAoD,iBAAAjK,GAAAv8E,GAAAxgD,EAAAuJ,EAAAlJ,EAAAsgC,EAAAm5F,UAAwSn5F,GAAA7O,QAAA8tG,GAAAuF,UAAAqS,GAAA72G,EAAA/gC,GAAA+gC,EAAA7O,QAAAu1G,GAAAC,oBAAAjnI,EAAA8mI,mBAAAxmG,EAAAg3F,cAAAh3F,EAAAm5F,OAAAz8G,EAAAhd,EAAAsgC,EAAAm5F,MAAA8J,GAAA6D,qBAAA7D,GAAAoD,iBAAAjK,GAAAv8E,MAAA,EAAAngD,EAAAsgC,EAAAm5F,OAApW,IAAA7xH,OAAyiBtI,KAAAsrI,gBAAA,WAAiC,SAAA5qI,GAAA,IAAAA,EAAA0tB,aAA8BpuB,KAAA4lI,qBAAA,WAAsC,MAAAllI,KAAA0tB,YAAA,GAAyBpuB,KAAAgkB,KAAA,SAAA1b,GAAuB5H,EAAAsjB,KAAAT,KAAAkK,UAAAnlB,MAA2Bw8H,GAAA,SAAAx8H,EAAA8H,EAAA1P,GAA8B,GAAAghI,GAAA4J,kBAAA,IAA4B5J,GAAA19G,KAAA5T,GAAW,MAAAzP,GAASA,GAAA,sBAAAA,EAAAC,MAAAqjI,GAAAC,YAAgDC,QAAA77H,EAAAoI,KAAAN,EAAA3D,SAAA/L,QAA8BujI,IAAAC,YAAoBC,QAAA77H,EAAAoI,KAAAN,EAAA3D,SAAA/L,IAA4BghI,GAAA6J,4BAAkC,OAF5wQnoI,YAAA,kBAAAA,WAAA60I,YAAA70I,UAAA60I,aAAAloF,KAAA,SAAAznD,GAA4F06H,GAAA16H,IACm1B,WAAe,WAAAk1H,EAAAuK,GAAA,gBAAkC,GAAAz/H,GAAA8H,IAAA1P,EAAAwN,KAAA+T,SAAA3Z,CAA4B0sI,IAAAt0I,EAAAmN,WAAA,SAAAvF,GAA4B+hI,GAAA,aAAA7M,EAAAl1H,SAD0xfkF,MAAA/L,UAAAiuC,MAAA3uC,OAAAC,eAAAwM,MAAA/L,UAAA,QAAoE2J,MAAA,SAAA9C,GAAkB,UAAAtI,KAAA,SAAAyO,WAAA,mDAAuF,sBAAAnG,GAAA,SAAAmG,WAAA,+BAA4E,QAAA2B,GAAA1P,EAAAK,OAAAf,MAAAW,EAAAD,EAAAsC,SAAA,EAAA/C,EAAA8K,UAAA,GAAAsB,EAAA,EAA2DA,EAAA1L,EAAI0L,IAAA,GAAA+D,EAAA1P,EAAA2L,GAAA/D,EAAA9H,KAAAP,EAAAmQ,EAAA/D,EAAA3L,GAAA,MAAA0P,MAE91RvL,gBAAAqzI,YAAAN,KAAAlZ,KAAA75H,eAAAqhI,2BAAAiB,OAA4GljI,QAAA04H,EAAA1V,WAD5+F,SAAA3+G,EAAA5H,EAAAC,EAAAV,EAAAoM,EAAA20B,GAA0B,IAAA14B,IAAA3H,IAAAD,EAAA,MAAAoF,SAAAwW,MAAA,wCAAA42H,GAAAxE,GAAAC,QAAA,uCAAiI,IAAA1uI,GAAA,kBAAAA,GAAA,MAAA6F,SAAAwW,MAAA,wCAAA42H,GAAAxE,GAAAC,QAAA,uCAA8I,IAAAtiI,GAAA,kBAAAA,GAAA,MAAAvG,SAAAwW,MAAA,wCAAA42H,GAAAxE,GAAAC,QAAA,uCAA8I,IAAAvR,GAAA8M,YAD21f,OAC31f,kBAAAxpI,GAAA,CAAgD,GAAA08H,GAAA8M,YAAApB,MAAAjkI,OAAA2pG,SAAA3pG,OAAA2pG,OAAA06B,QAAArkI,OAAA2pG,OAAA46B,eAAAvkI,OAAAwkI,UAAAxkI,OAAAwkI,SAAAH,QAAArkI,OAAA6xC,iBAAA,MAAA5wC,SAAAwW,MAAA,gHAAArc,KAAA8kI,GAAA4F,qBAAA,gHAAAuI,GAAAxE,GAAAC,QAAA,+GAAsjBjuI,GAAA08H,GAAA0O,wBAAAprI,GAAgC,mBAAA4H,OAAAzE,SAAAyE,EAAA,KAAAs0H,EAAAt0H,EAAAkH,MAAAotH,GAAA,MAAAsW,IAAAxE,GAAAC,QAAA,sBAAqG,oBAAAhuI,IAAA6jI,EAAA7jI,EAAA0yB,UAAA+yG,EAAAzlI,GAAA6jI,EAAA7jI,EAAAmmI,EAAAqR,sBAAA/nI,IAAA02H,EAAA77F,OAAAs5F,GAAA3H,EAAA4H,EAAA,OAAwGpoH,IAAA,qCAAuC4kB,WAAAo3G,6BAAA/R,MAAA,OAAArlG,EAAA22F,6BAAA32F,EAAA22F,qBAAA0U,GAAAgM,OAAA5D,GAAAzzG,EAAA22F,mBAAA,UAAA32F,EAAAs3G,qBAAAhS,OAAAlJ,GAAA4L,eAAAtoI,EAAAqnI,GAAA,sBAAsO,GAAArqH,GAAA6F,KAAAgK,MAAAw6G,GAAA,kBAAuC3K,IAAAuH,cAAAjnH,EAAAk/G,EAAA4H,KAAAvkI,KAAA8kI,GAAAj1E,QAAA,kCAAAstE,GAAAgN,eAAA1sH,GAAA2tH,KAAA3J,GAAA4J,mBAAA5J,GAAA6J,0BAAAtrI,IAA+J,MAAAqI,GAASxC,QAAAhC,IAAA,oBAAAwE,GAD38M+9H,GAAAxhI,eAAAqjC,kBAAArjC,OAAAqjC,iBAAA,wBAAA5/B,GAAwF,GAAA8H,EAAM,KAAAA,IAAA8pH,OAAAx4H,eAAA0O,IAAAkqH,GAAAC,GAAAiT,SAAA,KAAAp9H,EAAA8pH,GAAA9pH,GAAA+pH,KAAA,eAAmF,OAAAt5E,MAAAg4E,GAAA4L,iBAAA5L,GAAAyL,YAAA,KAAAzjF,OAAA,6CAC6zMx0C,IAAAm1H,EAAAjkG,MAAAlxB,EAAoB,KAAI+wH,GAAA4H,0BAAApI,EAAA4H,EAAAvkI,GAAsC,MAAAqI,GAASxC,QAAAhC,IAAA,oBAAAwE,GAAmC,MAAA4qI,IAAAxE,GAAA5+E,UACynC/5B,GAD76B,SAAAztB,EAAA8H,GAAkB,kBAAAA,IAAAoxH,EAAA9/H,eAAA4G,KAAAk5H,EAAAl5H,GAAA8H,IAC25BuoH,YAAA+O,GAAApP,aADqtX,SAAA53H,EAAAC,EAAAV,EAAAoM,EAAA20B,EAAAtjB,GAA0B,GAAAlP,GAAAlO,EAAA,KAAAG,EAAAwuI,GAAAviB,KAAAtrH,EAAA8tI,GAAAG,SAAAvuI,GAA0CwkI,aAAAlI,GAAAmI,UAAAC,WAAA3kF,GAAAzkC,IAAA,sBAAAuxD,UAAA,OAAA+3D,QAAA7gI,OAAAgrB,SAAA0lF,KAAAyiB,aAAA3rH,EAAApI,QAAA04H,EAA2I,IAAAyD,IAAAmE,GAAA3H,EAAA4H,EAAA,eAAA1jI,GAAAR,EAAAK,GAAA,gBAAAA,KAAA0yB,UAAA1yB,EAAA0L,MAAAw4H,IAAAnkI,IAAAT,EAAA,MAAA6F,SAAAwW,MAAA,2CAAA42H,GAAAxE,GAAApyH,MAAA,0CAAgN,KAAAsgH,IAAA4H,EAAA,MAAA1+H,SAAAwW,MAAA,sCAAA42H,GAAAxE,GAAApyH,MAAA,oCAAwH,KAAA3a,EAAAjB,GAAA,MAAAoF,SAAAwW,MAAA,sDAAA42H,GAAAxE,GAAApyH,MAAA,qDAAsJ,KAAAizH,GAAA7tI,eAAAzB,gBAAAmN,UAAA,MAAAtH,SAAAwW,MAAA,2CAAA42H,GAAAxE,GAAApyH,MAAA,0CAAuK,IAAA0kB,GAAA,kBAAAA,GAAA,CAA0F,GAAAA,EAAAo3F,mBAAA,CAAyB,IAAA6W,GAAAvtI,eAAAs/B,EAAAo3F,oBAAA,MAAAtyH,SAAAwW,MAAA,kDAAA42H,GAAAxE,GAAApyH,MAAA,iDAAiL7b,GAAAugC,EAAAo3F,mBAAuB,GAAAp3F,EAAAk2G,4BAAA,CAAkC,IAAAhI,GAAAxtI,eAAAs/B,EAAAk2G,6BAAA,MAAApxI,SAAAwW,MAAA,2DAAA42H,GAAAxE,GAAApyH,MAAA,0DAA4Mlb,GAAA4/B,EAAAk2G,6BAAiC,GAAAjlI,GAAA7B,GAAU02H,GAAAyR,wBAAAtmI,EAAA60H,EAAA77F,OAAAkoG,KAAA,OAAAvB,QAAAtpI,IAAgE,IAAA1G,KAAgB,KADrgP,SAAA0G,GAAc,GAAA8H,KAAS,KAAA9H,EAAA,MAAA8H,EAAe,IAAA1P,GAAAw5H,GAAA5xH,EAAY,iBAAA5H,KAAAkjF,cAAAljF,EAAAkjF,aAAA5gF,OAAA,IAAAoN,SACm9O/D,GAAA,CAAU,GAAAxK,IAD9pQyG,EAC8pQspI,IADzoQqB,SAAA3qI,EAAAs/H,wBAAAlL,EAAAsW,SAAA3G,GAAAmM,kBAAApS,GACqpQ9L,IAAAC,GAAAgN,WAAA,KAAAl7H,EAAA,KAAAxK,EAAA,WAAAD,KAAAd,GAAkDwkI,aAAAlI,GAAAmI,UAAAC,WAAA3kF,GAAAzkC,IAAA,kBAAAspH,QAAA7gI,OAAAgrB,SAAA0lF,KAAA5nC,UAAA,OAAAqqD,aAAA3rH,EAAApI,QAAA04H,GAAsI4H,GAAA3H,EAAA4H,EAAA,eAAA1jI,GADl2Q,GAAAwH,EAC83Q,IADjyQ8H,EACuiQ,KADviQ1P,EACiyQkB,WAD/wQs4H,GAAlB5xH,EACiyQ+D,KADnwQ6tH,GAAA5xH,MAAqB4xH,GAAA5xH,GAAAs7E,aAAA,KAAAljF,IAAAw5H,GAAA5xH,GAAA88H,mBAAAh1H,IAAA8pH,GAAA5xH,GAAAmlI,gBAAAr9H,KAC8uQgqH,GAAA/tH,EAAA3L,GAAA,CAAsBA,GAAM,GAAA+gI,GAAA/gI,EAAAm2I,GAAAZ,GAAAd,GAAAY,IAAsBvnI,EAAAlG,GAAM,IAAAosB,IAAOwhE,GAAAx1F,EAAA63B,aAAAj4B,EAAAi4H,YAAAt4H,EAAAgzI,SAAArB,GAAA/9B,UAAA5hG,EAAAmiI,WAAA12H,EAAAu/G,QAAAwC,GAAAsQ,aAAA+G,mBAAA3X,iBAAA7zC,mBAAA5qF,EAAA4qF,mBAAAmwC,gBAAAxpH,EAAAkrH,OAAA3uH,EAAAwjI,UAAA,EAAAC,WAAA,EAAAoC,cAAA,KAAAoE,yBAAArC,4BAAA,EAAAI,2BAAA,EAAAR,0BAAA,EAAA0C,wBAAA,EAAAnE,UAAA7lC,WAAgZspB,aAAA3rH,EAAA+rH,mBAAA33H,EAAAy2I,4BAAA91I,EAAoE4+H,MAAA1F,GAAA2F,GAAAC,oBAAAv/H,EAAA0L,EAAA,KAAA0sH,GAAArkG,EAAAyoG,QAAA6C,OAAA,kBAAAt/H,MAAAmzI,cAAAnzI,EAAAmzI,YAAArlI,GAAA,cAAA9N,EAAA4qF,oBAAA,cAAA5qF,EAAA4qF,qBAAA52D,EAAAuoG,QAAAwC,GAAAqQ,aAD3oQ,SAAAxnI,EAAA8H,GAAgB,GAAA1P,GAAAw5H,GAAA5xH,GAAA3H,IAAiB,aAAAD,EAAAC,EAAAkC,KAAAuN,GAAA8pH,GAAA5xH,MAAgC4xH,GAAA5xH,GAAAs7E,aAAAjjF,MAAsB,CAAK,GAAAV,GAAAS,EAAAkjF,YAAqB,QAAA3jF,GAAAU,EAAAkC,KAAAuN,GAAA1P,EAAAkjF,aAAAjjF,GAAAV,EAAA4C,KAAAuN,KAC0hQ/D,EAAAqoB,KAAAuoG,UAAAwC,GAAAqQ,cAAA2G,GAAA/1I,EAAA65H,GAAAgT,gBAAAlhI,GAAAmoI,GAAA9/G,EAAAh0B,EAAA2L,GAAgS,IAAAsoB,GAAA,SAAArsB,GAAkB,GAAA8H,GAAA,CAAQ,OAAArP,QAAAg3B,KAAAzvB,GAAA+F,QAAA,SAAA/F,GAA0CA,KAAAwiE,YAAA16D,GAAA,UAAA9H,EAAAwiE,UAAA,OAA+C,EAAA16D,GAAmN6hG,EAAA,IAAQ,IAAAhyG,IAAAsvI,GAAA/W,WAAvM9jG,EAAAg6E,SAAA/5E,EAAAD,EAAAg6E,SAAuMuD,GAA4BnnC,UAAA,QAAAtwC,KAAA,KAAAkmG,eAAAS,GAAAwO,0BAAuE1vI,IAAAsvI,GAAAtgE,OAA5Pv6C,EAAAg6E,SAAAttG,IAAA8tI,GAAAC,UAAAx6G,EAAAD,EAAAg6E,SAA4PuD,GAAsBnnC,UAAA,QAAAtwC,KAAA,KAAAkmG,eAAAS,GAAAyO,2BAAwE3vI,IAAAsvI,GAAAtgE,OAAA7tE,IAAA8tI,GAAAE,eAAzR16G,EAAAg6E,SAAA3tG,OAAAg3B,KAAArD,EAAAg6E,SAAArgG,QAAA,SAAA/F,GAAmE04H,GAAAn+H,KAAAyF,KAAsN2pG,EAAA,CAA0C,GAAA1wE,GAAA24F,GAAA7tH,GAAA6tH,GAAA7tH,GAAA8tH,KAAA,IAA4BG,IAAAC,GAAAoG,YAAArgI,EAAA+L,EAAAk1B,EAAA0wE,EAAAv9E,EAAAyoG,SADzqT,GAAA70H,GAAA8H,EAAA1P,CAC8uT,IAAhC8N,IAAqBA,EAAd4rH,GAAA/tH,EAAA3L,GAAcy8H,QADpguB,QAAAvzH,GAAAtB,EAAA8H,EAAA1P,GAAkB0C,qBAAAimC,cAAAjmC,UAAAimC,aAAAslC,kBAAAvrE,UAAAimC,aAAAslC,mBAAA5e,KAAA,SAAApvD,GAAuIwlI,GAA1N/1H,EAA0NzP,EAAAwlI,EAA1MzsH,OAAA7L,aAAAuC,EAAAsJ,OAAA7L,aAA0Ms4H,EAAAxlI,EAAAmyI,GAAAxqI,EAAA8H,EAAA1P,MAAAylI,EAAAxlI,EAAAmyI,GAAAxqI,EAAA8H,EAAA1P,IAAAsM,WAAA,WAAoEpD,EAAAtB,EAAA8H,EAAA1P,IAA2riB,IAAz9iB,IAAA0P,KAA4SgmD,MAAA,WAAmBppD,WAAA,WAAsBpD,EAAAtB,EAAA8H,EAAA1P,IAAooiB,QACunL2L,EAAA/L,EAAAkO,GAAAk4H,EAAA,IAAmB,GAAAxlG,GAAA2lG,CAASA,KAAM,IAAArlG,GAAA,IAAW,KAAAA,EAAAklG,EAAAxjD,UAAAhiD,EAAAr+B,KAAA2+B,GAAAN,EAAAl+B,OAAA,GAAyC,GAAAm+B,GAAA+4F,GAAA7tH,GAAA8tH,IAAiBgY,IAAA1D,GAAApiI,EAAA80B,EAAAD,IAAwB,MAAA54B,GAASk+H,EAAA,iBAAAl+H,GAAuB,MAAA4qI,IAAAxE,GAAA5+E,UACniewmE,gBAAA4d,GAAAjc,iBAD2hQ,SAAA3vH,EAAA8H,EAAA1P,GAAoB,GAAAC,EAAM,KAAAyP,IAAA9H,EAAA,MAAAxC,SAAAwW,MAAA,+CAAA42H,GAAAxE,GAAApyH,MAAA,8CAAyI,oBAAAlM,GAAA,MAAAtK,SAAAwW,MAAA,8CAAA42H,GAAAxE,GAAApyH,MAAA,6CAAmJ,QAAAvb,OAAAg3B,KAAA3nB,GAAApN,OAAA,MAAA8C,SAAAwW,MAAA,6DAAA42H,GAAAxE,GAAApyH,MAAA,4DAAwL,IAAArc,GAAAi6H,GAAA5xH,GAAA+D,EAAA,cAAmBpM,cAAAk6H,OAAA9tH,EAAApM,EAAAk6H,KAAwC,IAAAn5F,GAAA,IAAW,IAAAA,EAAA,OAAA4wG,GAAAnF,GAAAmF,GAAA,OAAAvlI,MAAA+0B,EAAA94B,IAAA,OAAA+D,EAAA,MAAAvG,SAAAwW,MAAA,sCAAA42H,GAAAxE,GAAApyH,MAAA,qCAA8J3b,GAAA,gBAAAyP,GAAAqnH,OAAArnH,EAAAqnH,OAAApkG,UAAAjjB,EAAAqnH,OAAArnH,KAAA4tB,SAAA,IAAA5tB,EAAA4tB,QAAA,KAA0F,IAAAtgB,IAAOs6G,aAAA6E,mBAAAv0H,GAAA2qI,SAAAjyG,EAAA64E,MAAA+iB,EAAA34H,QAAA04H,EAAAxC,KAAA9tH,EAAA2+G,SAAA6R,mBAAAl8H,GAAA82H,OAAAoF,mBAAAl8H,GAAAg4I,SAA8I36G,QAAA5tB,EAAA4tB,SAAoB,OAAA5tB,GAAA25B,QAAArsB,EAAAi7H,QAAA5uG,MAAA35B,EAAA25B,OAAA35B,EAAA6+D,QAAAvxD,EAAAi7H,QAAA1pE,MAAA7+D,EAAA6+D,OAAA7+D,EAAA4gE,SAAAtzD,EAAAi7H,QAAA3nE,OAAA5gE,EAAA4gE,QAAA5gE,EAAA8nH,UAAAx6G,EAAAi7H,QAAAzgB,QAAA9nH,EAAA8nH,SAAAkF,GAAAC,YAAAx8E,IAAAnjC,EAAAsnF,MAAAo4B,GAAAC,UAAAgN,GAAA,WAAA9mH,KAAAkK,UAAA/P,IAAAujB,EAAAg/F,GAAA+H,aAAAtqH,EAAAhd,KAAAgd,EAAAsmH,cAAAnjF,GAAAojF,GAAAC,YAAgSC,QAAAlE,GAAA+H,aAAAt3H,KAAAgN,EAAAjR,SAAA/L,IAA0C08H,GAAA4H,0BAAApI,EAAAj8H,IAAAuyI,GAAAxE,GAAA5+E,UAC1zSymE,uBADwpT,SAAAjuH,EAAA8H,EAAA1P,EAAAC,EAAAV,EAAAoM,GAA0B,GAAA20B,GAAA,IAAW,IAAAA,EAAA,gBAAA5wB,KAAAijB,UAAAjjB,EAAA1P,MAAAmkI,KAAAv8H,GAAA3H,GAAAV,GAAA+gC,GAAA,MAAAl7B,SAAAwW,MAAA,6CAAA42H,GAAAxE,GAAApyH,MAAA,4CAAyL,KAAA3a,EAAA2G,GAAA,MAAAxC,SAAAwW,MAAA,gEAAA42H,GAAAxE,GAAApyH,MAAA,+DAAsL,aAAZ49G,GAAAx5H,GAAY,MAAAoF,SAAAwW,MAAA,sDAAA42H,GAAAxE,GAAApyH,MAAA,qDAA2J,IAAAjc,GAAA,IAAW,YAAAA,EAAA+5H,GAAA15H,EAAA4H,IAAA,MAAAxC,SAAAwW,MAAA,mDAAA42H,GAAAxE,GAAApyH,MAAA,kDAA6J,IAAA1S,GAAA20H,GAAAl+H,EAAAM,EAAc,iBAAAiJ,IAAAvJ,EAAAquG,QAAA/tG,MAAmCiJ,EAAA20H,GAAAl+H,EAAAM,IAAAiJ,EAAA2uB,aAAAyI,EAAAp3B,EAAA4wB,KAAA75B,EAAAiJ,EAAA+0H,mBAAAtyH,EAAAzC,EAAAmyB,WAAA97B,EAAAoM,GAAA20B,IAAAwjG,GAAA1jI,EAAAJ,EAAA2L,EAAA/D,EAAA3H,GAAAuyI,GAAAxE,GAAA5+E,UACh6U+nE,uBAD+2S,SAAAvvH,GAAgB,MAAAA,GAAA,kBAAAA,IAAAxC,QAAAwW,MAAA,6CAAA42H,GAAAxE,GAAApyH,MAAA,+CAAA2kH,EAAA34H,MADtuiB,SAAAkG,KAAayyH,OAAAlxE,KAAA,SAAAznD,GAAwB86H,EAAA7/G,KAAAgK,MAAAjlB,GAAA0E,WAAA,WAAuCwB,KAAwiiB,OAA/hiB4nD,MAAA,WAAmBppD,WAAA,WAAsBwB,KAAs/hB,YACkH1I,QAAAwW,MAAA,6CAAA42H,GAAAxE,GAAApyH,MAAA,+CAC/3Ss8H,QAAA7T,GAAAxM,YAAAgX,GAAAsJ,eAD30ShJ,UAAA,EAAAiJ,KAAA,EAAAtV,KAAA,EAAAuV,KAAA,EAAAxV,IAAA,GAC20SyV,gBAAA/I,GAAAvZ,YADu/K,SAAAh2H,EAAAC,EAAAV,EAAAoM,EAAA20B,EAAAtjB,GAA0B,GAAA/c,MAAAkkI,YAAAnkI,IAAAT,EAAA,MAAA6F,SAAAwW,MAAA,0CAAA42H,GAAAxE,GAAApyH,MAAA,yCAAiJ,KAAAsgH,IAAA4H,EAAA,MAAA1+H,SAAAwW,MAAA,uCAAA42H,GAAAxE,GAAApyH,MAAA,sCAA2H,KAAA2zH,GAAAvuI,eAAAzB,GAAA,MAAA6F,SAAAwW,MAAA,qDAAArc,GAAAizI,GAAAxE,GAAApyH,MAAA,mDAAArc,YAAwKoM,GAAAvG,QAAAsC,KAAA,2CAAqE,IAAA/H,GAAAuJ,EAAA4E,EAAAlO,EAAA,KAAAG,EAAA2P,IAAAhP,EAAA84H,GAAAv5H,GAAAG,EAAA,KAAAmR,EAAAxR,EAAA8H,EAAA,KAAA3G,EAAA,KAAAC,EAAA,KAAA6yB,EAAA,IAAsE,IAAA7yB,EAAAu/B,EAAAzgC,GAAAiJ,EADvvI,SAAAtB,GAAc,GAAA8H,EAAM,OAAA6/H,IAAAvuI,eAAA4G,OAAA2nI,GAAA9yC,aAAA70F,IAAA2nI,GAAAvyC,cAAAp1F,IAAA2nI,GAAAzzC,qBAAApsF,EAAAkgI,GAAAE,mBAAAloI,IAAA2nI,GAAAn0C,oBAAA1rF,EAAAkgI,GAAAG,SAAAnoI,IAAA2nI,GAAA/4C,gBAAA9mF,EAAAkgI,GAAAG,SAAAnoI,IAAA2nI,GAAAx8D,aAAArjE,EAAAkgI,GAAAC,iBAAAjoI,IAAA2nI,GAAAC,qBAAA9/H,EAAAkgI,GAAAI,WAAApoI,IAAA2nI,GAAAE,eAAA//H,EAAAkgI,GAAAH,gBAAA7nI,IAAA2nI,GAAAI,gBAAAJ,GAAAG,oBAAAhgI,EAAAkgI,GAAAD,gBAAAjgI,EAAAshI,GAAAC,0BAAAvhI,GACmuInQ,OAAAgwI,GAAAx8D,eAAA/+C,EAAApsB,KAAA+D,EAAA,GAAAxH,OAAAo0I,cAAA5sI,YAAAxH,QAAAo0I,aAAA5sI,GAA4G4P,QAAA5P,EAAA4P,QAAArb,KAAAyL,EAAAzL,UAA+B,oBAAAyL,GAAA,CAA4B,GAAAsoB,KAAStoB,GAAA4P,UAAA0Y,EAAA1Y,QAAA5P,EAAA4P,SAAA5P,EAAAzL,OAAA+zB,EAAA/zB,KAAAyL,EAAAzL,MAAAyL,EAAA+vB,iBAAAzH,EAAAyH,eAAA/vB,EAAA+vB,gBAAA/vB,EAAAuP,QAAA+Y,EAAA/Y,MAAAvP,EAAAuP,OAAAvP,EAAAsoB,EAA8I,IAAnkCrsB,EAAmkC+D,IAAnjC,gBAAA/D,KAAAmsI,GAAAnsI,EAD6zI,KAC7zIA,GAAA,gBAAAA,MAAA2T,UAAA3T,EAAA2T,QAAAw4H,GAAAnsI,EAAA2T,QAD6zI,MAC1wG5P,EAAnjC/D,EAAmjC3G,EAAAjB,IAA2J,GAA1IU,IAAAS,EAAAT,EAAA+4H,OAAAr5H,EAAAs5H,GAAAz5H,EAAAD,KAAAL,EAAAS,EAAAy3B,aAAAtmB,EAAAnR,EAAA+yG,UAAAtrG,EAAAzH,EAAAm8H,QAAAr7H,EAAAd,EAAAo1F,GAAA5K,mBAAA52D,EAAA5zB,EAAAq8H,OAAA3uH,EAAA1N,EAAAszI,YAAA/zI,EAAAmkI,EAA0IlkI,GAAMo2I,aAAhBj2I,EAAAwR,EAAgB6T,OAAAlc,EAAAsvI,SAAA7sI,EAAA2wH,YAAAz0H,EAAA+iF,mBAAA1pF,EAAAu3I,SAAAl5I,EAAAgzI,SAAArB,GAAAoB,SAAA3G,IAAyGpsI,IAAAgwI,GAAAI,gBAAApwI,IAAAgwI,GAAAG,iBAAA9V,GAAAoN,GAAA4F,oBAAAjtI,EAAAM,EAAAkB,EAAAvB,EAAAo0B,EAAAlmB,IAAA8rH,GAAAoN,GAAAC,kBAAAtnI,EAAAM,EAAAkB,EAAAvB,EAAAo0B,EAAAlmB,GAAAs4H,EAAAyM,iBAAAnjI,IAAA02H,EAAA77F,OAAAkoG,MAAAnyG,GAAAtjB,GAAAhd,KAAAq4F,kBAAAr4F,KAAAs4F,kBAAA,CAA0N,GAAAnpF,IAAO4gC,OAAQ5gC,GAAA4gC,IAAAuhG,SAAA0C,GAAAh0I,EAAAsgC,EAAA,oBAAAnxB,EAAA4gC,IAAAwhG,UAAAyC,GAAAh0I,EAAAgd,EAAA,qBAAAw0H,GAAA7xI,EAAAM,EAAAkB,EAAAgO,EAAA6kB,QAAqG,QAAAk9G,QAAAtpI,KAAAjI,EAAAmkI,EAAAlkI,GAAiCo2I,aAAA,EAAA5wH,OAAAlc,EAAAsvI,SAAA7sI,EAAA8sI,SAAAl5I,EAAAgzI,SAAArB,GAAAoB,SAAA3G,IAAsEpsI,IAAAgwI,GAAAI,gBAAApwI,IAAAgwI,GAAAG,iBAAA9V,GAAAoN,GAAA4F,oBAAAjtI,EAAAM,EAAAkB,EAAAvB,EAAA,WAAAg6H,GAAAoN,GAAAC,kBAAAtnI,EAAAM,EAAAkB,EAAAvB,EAAAo0B,EAAA,KAAlwD,IAAApsB,EAAu4D,OAAA4qI,IAAAxE,GAAA5+E,UACltOspF,mBADyje,SAAA9wI,EAAA8H,EAAA1P,EAAAC,GAAsB,KAAA2H,GAAA5H,GAAAC,GAAAyP,GAAA,MAAAtK,SAAAwW,MAAA,iDAAA42H,GAAAxE,GAAApyH,MAAA,gDAAoJ,KAAAsgH,IAAA4H,EAAA,MAAA1+H,SAAAwW,MAAA,4CAAA42H,GAAAxE,GAAApyH,MAAA,0CAAoI,SAAA5b,GAAA,KAAA0P,EAAA,MAAAtK,SAAAwW,MAAA,6DAAA42H,GAAAxE,GAAApyH,MAAA,4DAA6K,KAAA3a,EAAA2G,GAAA,MAAAxC,SAAAwW,MAAA,4DAAA42H,GAAAxE,GAAApyH,MAAA,2DAAkK,IAAAjQ,GAAA,KAAA20B,EAAAk5F,GAAA9pH,EAAqB,aAAA4wB,EAAA,MAAAl7B,SAAAwW,MAAA,gDAAA42H,GAAAxE,GAAApyH,MAAA,+CAA+I,IAAAoB,GAAA,IAAW,aAAAsjB,EAAAm5F,KAAA,MAAAr0H,SAAAwW,MAAA,mDAAAioH,GAAA3H,EAAA4H,EAAA,OAA2GpoH,IAAA,wDAA0D82H,GAAAxE,GAAApyH,MAAA,kDAAiE,IAAAoB,EAAAsjB,EAAAm5F,KAAA,QAAA9tH,EAAA+tH,GAAAhqH,EAAA9H,IAAA,MAAAxC,SAAAwW,MAAA,2DAAA42H,GAAAxE,GAAApyH,MAAA,0DAAsL,IAAAjc,IAAOoC,GAAA/B,EAAA24I,OAAA14I,EAAe,OAAA25H,IAAAoN,GAAA0F,0BAAAh9H,EAAAsN,EAAArd,EAAA,KAAAgM,EAAA+nI,YAAAlB,GAAAxE,GAAA5+E,UACvxgBwpF,YAD92S7J,MAAA,QAAAC,OAAA,UAC82S6J,eADstW,SAAAjxI,GAAgB,MAAAzD,iBAAAqzI,WAAApyI,QAAAwW,MAAA,mEAAA42H,GAAAxE,GAAApyH,MAAA,oEAAAhU,KAAAkxI,eAAA9V,EAAAp7H,EAAAkxI,cAAAlxI,EAAAmxI,iBAAA5T,EAAAv9H,EAAAmxI,gBAAAnxI,EAAAoxI,qBAAA3T,EAAAz9H,EAAAoxI,oBAAApxI,EAAAqxI,QAAA7T,EAAAx9H,EAAAqxI,OAAA/B,KAAAlZ,IAAA0B,IAAA8S,GAAAxE,GAAA5+E,WAAAhqD,QAAAwW,MAAA,+CAAA42H,GAAAxE,GAAApyH,MAAA,iDACtuWs9H,yBAAAlL,GAAAmL,eADw5V,SAAAvxI,EAAA8H,GAAkB,MAAA9H,MAAA0vH,eAAzZ,SAAA1vH,GAA6B,GAAb4xH,GAAA2K,GAAa,CAAM,GAAAnkI,GAAAw5H,GAAA2K,GAAAjhD,YAA0B,IAAAljF,EAAA,OAAAC,GAAA,EAAiBA,EAAAD,EAAAsC,OAAWrC,IAAAD,EAAAC,GAAAq3H,aAAA1vH,IAAgUA,EAAA0vH,cAAAkC,GAAA5xH,EAAA0vH,cAAAkC,GAAA2K,GAAvSv8H,EAAuSA,EAAA0vH,aAAvRiM,GAAA4D,mBAAAhL,mBAAAv0H,IAAuR4sI,MAAA5sI,EAAAiwB,cAAAnoB,IAA1O,SAAA9H,EAAA8H,GAAkB,GAAA1P,GAAAozI,GAAA1jI,EAAY1P,IAAAujI,GAAAmD,mBAAA9+H,EAAA5H,EAAAqzI,OAAA5W,SAA4M70H,EAAAiwB,aAAAnoB,GAAhK,SAAA9H,EAAA8H,GAAkB,GAAA1P,GAAA,MAAWA,EAAAozI,GAAA1jI,MAAA1P,EAAAqzI,OAAAx7G,aAAAjwB,IAAmIA,EAAAiwB,aAAAnoB,GAAA8kI,MAAAhC,GAAAxE,GAAA5+E,WAAAhqD,QAAAwW,MAAA,6CAAA42H,GAAAxE,GAAApyH,MAAA,8CAAvS,IAAAhU,IACnoVwxI,sBAAA5K,GAAA7W,aAAA4W,IAAoXzmI,eAAAC,EAAA,mBAAAC,EAAAH,GAAAG,EAAAuC,MAAAvL,EAAA8I,GAAAE,KAAA/I,EAAAD,QAAA+I,GAAA9I,EAAAD,QAAA4I,GAAmG,mBAAAzD,8DCF98U,SAAAk1I,MAA2BA,EAAAt4I,UAAA0qI,6BAAA,SAAA7jI,GAAkE,GAAA8H,GAAA,EAAA1P,EAAAuN,OAAA+rI,UAAAr5I,EAAA,EAAAV,EAAA,GAAAoM,EAAA,GAAA20B,EAAAn8B,OAAAwwC,WAA8D,qBAAAxwC,SAAA,UAAAA,QAAAwwC,aAAA,cAAAxwC,QAAAwwC,aAAA,OAAsG4kG,QAAA,OAAAloB,aAA6B,IAAAr0G,GAAAsjB,EAAAsU,OAAA4kG,aAAAl5G,EAAAsU,OAAAC,eAAqD,eAAAjtC,EAAA1H,MAAA,UAAA0H,EAAA1H,KAAA,CAAwC,GAAAP,GAAAuJ,EAAAo3B,EAAAm5G,iBAAA,WAAuC,KAAA95I,EAAA,EAAQA,EAAAuJ,EAAA5G,OAAW3C,IAAAuJ,EAAAvJ,GAAAooH,SAAA9nH,IAAA0L,EAAAzC,EAAAvJ,GAAAO,KAAAmqB,OAAAnhB,EAAAvJ,GAAAO,KAAAkkG,YAAA,QAAAnkG,EAAAiJ,EAAAvJ,GAAAooH,UAAA7+G,EAAAvJ,GAAAooH,SAAA/nH,IAAAT,EAAA2J,EAAAvJ,GAAAO,KAAAmqB,OAAAnhB,EAAAvJ,GAAAO,KAAAkkG,YAAA,QAAApkG,EAAAkJ,EAAAvJ,GAAAooH,UAAA7+G,EAAAvJ,GAAAO,KAAAmE,QAAA,0CAAAqL,EAAAxG,EAAAvJ,GAAAooH,SAAyP,QAAOwxB,QAAA,OAAA1iB,UAAAnnH,EAAAqf,KAAgC7uB,KAAAX,EAAA4rF,KAAAnrF,GAAck0C,KAAMh0C,KAAAyL,EAAAw/E,KAAAlrF,GAAcoxH,MAAAr0G,GAAU,kBAAApV,EAAA1H,MAA0Bq5I,QAAA,UAAAloB,MAAAr0G,WAAkCq8H,EAAAt4I,UAAAwqI,kBAAA,WAAuD,GAAA3jI,GAAA,SAAA8H,EAAA,KAAA1P,EAAA,KAAAC,EAAA,KAAAV,EAAuC,SAAvCA,EAAuC,OAAwDoM,EAAApM,CAAU,KAAA4E,OAAAzB,UAAAM,WAAAmB,OAAA6xC,gBAAA,MAAA5wC,SAAAhC,IAAA,qBAAAe,eAAA8xC,gBAAAvmC,EAAAvL,OAAA8xC,iBAAA9xC,eAAA+xC,eAAAl2C,EAAAmE,OAAA+xC,gBAAA/xC,eAAA6xC,kBAAA/1C,EAAA,iBAAmQC,KAAA0H,EAAAuyH,SAAAxuH,EAAAyqC,GAAA1mC,EAAA2mC,UAAAr2C,EAAAgD,UAAA/C,EAAsE,IAAAqgC,GAAAtjB,GAAtB/c,EAAAyC,UAAAM,WAAsBqX,cAAA1a,EAAA+C,UAAA4zC,WAAAptC,EAAA,GAAAqtC,WAAA7zC,UAAA4zC,aAAqF,KAAAhW,EAAAtjB,EAAA3Y,QAAA,WAAAuD,EAAA,QAAAsB,EAAA8T,EAAA1Y,UAAAg8B,EAAA,SAAAA,EAAAtjB,EAAA3Y,QAAA,cAAA6E,EAAA8T,EAAA1Y,UAAAg8B,EAAA,IAAA30B,EAAApM,IAAA,KAAA+gC,EAAAtjB,EAAA3Y,QAAA,SAAAuD,EAAA,QAAAsB,EAAA8T,EAAA1Y,UAAAg8B,EAAA,SAAAA,EAAAtjB,EAAA3Y,QAAA,cAAA6E,EAAA8T,EAAA1Y,UAAAg8B,EAAA,IAAA30B,EAAApM,IAAA,KAAA+gC,EAAAtjB,EAAA3Y,QAAA,UAAAuD,EAAA,8BAAAsB,EAAA8T,EAAA1Y,UAAAg8B,EAAA,GAAA30B,EAAApM,IAAA,KAAA+gC,EAAAtjB,EAAA3Y,QAAA,UAAAuD,EAAArI,EAAA2J,EAAA8T,EAAA1Y,UAAAg8B,EAAA,GAAA30B,EAAApM,IAAA,KAAA+gC,EAAAtjB,EAAA3Y,QAAA,YAAAuD,EAAArI,EAAA2J,EAAA8T,EAAA1Y,UAAAg8B,EAAA,GAAA30B,EAAApM,IAAA,KAAA+gC,EAAAtjB,EAAA3Y,QAAA,YAAAuD,EAAA,SAAAsB,EAAA8T,EAAA1Y,UAAAg8B,EAAA,SAAAA,EAAAtjB,EAAA3Y,QAAA,cAAA6E,EAAA8T,EAAA1Y,UAAAg8B,EAAA,IAAA30B,EAAApM,IAAA,KAAA+gC,EAAAtjB,EAAA3Y,QAAA,aAAAuD,EAAA,UAAAsB,EAAA8T,EAAA1Y,UAAAg8B,EAAA,GAAA30B,EAAhe,YAAge,KAAA20B,EAAAtjB,EAAA3Y,QAAA,cAAAuD,EAAA,8BAAA04B,EAAAtjB,EAAA3Y,QAAA,MAAA6E,EAAA8T,EAAA1Y,UAAAg8B,EAAA,EAAAA,EAAA,GAAA30B,EAAApM,EAAiwB,IAAAuO,GAAAlO,EAAAG,IAAYmB,EAAA,eAAA2G,EAAA,UAA6B3G,EAAA,aAAA2G,EAAA,kCAAmD3G,EAAA,aAAA2G,EAAA,6BAA8C3G,EAAA,aAAA2G,EAAA,uBAAwC3G,EAAA,aAAA2G,EAAA,eAAgC3G,EAAA,eAAA2G,EAAA,kCAAqD3G,EAAA,aAAA2G,EAAA,gCAAiD3G,EAAA,sBAAA2G,EAAA,mBAA6C3G,EAAA,gBAAA2G,EAAA,mBAAuC3G,EAAA,YAAA2G,EAAA,+BAA+C3G,EAAA,cAAA2G,EAAA,iCAAmD3G,EAAA,YAAA2G,EAAA,+BAA+C3G,EAAA,aAAA2G,EAAA,iCAAkD3G,EAAA,iBAAA2G,EAAA,+CAAoE3G,EAAA,aAAA2G,EAAA,eAAgC3G,EAAA,UAAA2G,EAAA,YAA0B3G,EAAA,WAAA2G,EAAA,YAA2B3G,EAAA,SAAA2G,EAAA,UAAuB3G,EAAA,QAAA2G,EAAA,gBAA4B3G,EAAA,MAAA2G,EAAA,uBAAiC3G,EAAA,WAAA2G,EAAA,aAA4B3G,EAAA,SAAA2G,EAAA,4CAAyD3G,EAAA,MAAA2G,EAAA,QAAkB3G,EAAA,OAAA2G,EAAA,SAAoB3G,EAAA,OAAA2G,EAAA,SAAoB3G,EAAA,OAAA2G,EAAA,UAAqB3G,EAAA,aAAA2G,EAAA,gFAAkG,KAAAiG,IAAA/N,GAAA,GAAAH,EAAAG,EAAA+N,GAAAlO,EAAAiI,EAAAhE,KAAAmZ,GAAA,CAAkCtN,EAAA9P,EAAAsB,CAAM,OAAM,OAAAwO,GAAA,UAAA7L,KAAA6L,KAAA1P,EAAA,eAAA22C,KAAAjnC,GAAA,GAAAA,EAAA,WAAAA,GAA0E,eAAA1P,EAAA,yBAAA22C,KAAA35B,GAAA,EAAqD,MAAM,eAAAhd,EAAA,sBAAA22C,KAAA35B,GAAA,EAAiD,MAAM,WAAAhd,KAAA,yBAAA22C,KAAAh3C,IAAA,OAAAK,EAAA,UAAAA,EAAA,IAA0E,OAAOE,KAAA0H,EAAA1E,IAAAgG,EAAAiE,WAAAipC,GAAA1mC,EAAA2mC,UAAAr2C,EAAAm6H,SAAAxuH,EAAA3I,UAAA/C,IAAiEhB,EAAAD,QAAAq6I,mBCAvkH,QAAAK,KAAsBp6I,KAAAq6I,QAAA,KAAAr6I,KAAAu5C,SAAA,KAAqC,QAAA+gG,KAAoBt6I,KAAAizC,aAAkB,QAAAsnG,GAAAjyI,GAAuBtI,KAAAu9B,MAAA,KAAAv9B,KAAAw6I,kBAAAv7H,OAAAC,UAAAlf,KAAAy6I,WAAAnyI,EAA0E,QAAAoyI,GAAApyI,GAAwBtI,KAAAw6B,KAAA,KAAAx6B,KAAAsuC,iBAAAtuC,KAAA8qE,UAAA,KAAA9qE,KAAA2vE,WAAA,KAAA3vE,KAAA26I,kBAAA,KAAA36I,KAAA46I,WAAA,KAAA56I,KAAA0uH,IAAA,KAAA1uH,KAAA66I,iBAAA,KAAA76I,KAAA86I,YAAA,KAAA96I,KAAAmiI,OAAA,KAAAniI,KAAA07H,eAAA,EAAA17H,KAAAm8H,iBAAA,EAAAn8H,KAAA+6I,kBAAA,EAAA/6I,KAAA27H,WAAA,EAAA37H,KAAAg8H,aAAA,EAAAh8H,KAAA21B,OAAArtB,EAA0U,QAAA0yI,GAAA1yI,EAAA8H,GAA+B,GAAA1P,GAAA,gBAAA4H,KAAAzE,SAAAyE,GAAA3H,EAAA,gBAAAyP,KAAAvM,SAAAuM,EAA0E,OAAA1P,KAAAC,EAAA,EAAAD,EAAAC,GAAA,IAAwB,QAAAs6I,GAAA3yI,EAAA8H,GAAuC,MAAA4qI,GAAA1yI,EAAAomH,IAAAt+G,EAAAs+G,KAAqC,QAAAwsB,GAAA5yI,EAAA8H,GAA+C,MAAA4qI,GAAA1yI,EAAA6yI,YAAA/qI,EAAA+qI,aAAqD,QAAAC,GAAA9yI,EAAA8H,GAA8C,MAAA4qI,GAAA1yI,EAAAsyI,WAAAxqI,EAAAwqI,YAAmD,QAAAS,GAAA/yI,EAAA8H,GAA0C,MAAA4qI,GAAA1yI,EAAA65H,OAAA/xH,EAAA+xH,QAA2C,QAAAmZ,GAAAhzI,EAAA8H,GAAqD,GAAA1P,GAAAmD,SAAAyE,EAAAqyI,mBAAAh6I,EAAAkD,SAAAuM,EAAAuqI,kBAAoE,OAAAj6I,KAAAC,EAAA,EAAAD,EAAAC,GAAA,IAAwB,QAAA46I,GAAAjzI,EAAA8H,GAAgC,MAAA9H,GAAS,QAAAkzI,KAAqBx7I,KAAA62C,SAAA,KAAA72C,KAAA8qE,WAAmC2wE,QAAA,UAAAxsE,MAAA,QAAAllC,MAAA,SAA8C/pC,KAAAy2C,cAAoBD,OAAA,SAAAY,QAAA,UAAA/xC,KAAA,QAA+C,QAAAq2I,GAAApzI,GAA2Bg1E,EAAA98E,KAAAR,WAAA27I,aAAArzI,EAAAtI,KAAA+5C,KAAA,EAAA/5C,KAAA47I,MAAA,EAAA57I,KAAAwnH,MAAA,EAAAxnH,KAAA67I,OAAA,EAAA77I,KAAA89E,kBAAAmoD,EAAA6V,QAAArB,WAAAz6I,KAAAy6I,WAAAz6I,MAAqK,QAAA+7I,GAAAzzI,GAA0Bg1E,EAAA98E,KAAAR,WAAA27I,aAAArzI,EAAAtI,KAAA+5C,KAAA,KAAuD,QAAAiiG,GAAA1zI,EAAA8H,GAA2BpQ,KAAAi8I,oBAAA7rI,EAAApQ,KAAAk8I,aAAA5zI,EAA+C,QAAA6zI,GAAA7zI,EAAA8H,GAAqC,GAAA1P,GAAA4H,EAAA8zI,WAAAz7I,EAAAyP,EAAAgsI,UAAkC,OAAA17I,KAAAC,EAAA,EAAAD,EAAAC,GAAA,IAAwB,QAAA07I,GAAA/zI,EAAA8H,GAA+I,UAAA4rI,IAA9G1zI,EAAAg0I,kBAAAlsI,EAAAksI,mBAAA,GAAAh0I,EAAAi0I,yBAAAnsI,EAAAmsI,0BAAA,GAA2I,QAAAC,KAAmBx8I,KAAAy8I,aAAA,GAAAC,GAAAzW,EAAA0W,YAAA1W,EAAA2W,aAAA58I,KAAA68I,kBAAA,GAAAnB,GAAA,SAAApzI,GAAqI,MAAAA,GAAAwyI,cAAqB96I,KAAAy8I,aAAAK,UAAA98I,KAAA68I,mBAAA78I,KAAA+8I,wBAAA,GAAArB,GAAA,SAAApzI,GAAkH,MAAAA,GAAAyyI,mBAA0B/6I,KAAAy8I,aAAAK,UAAA98I,KAAA+8I,yBAAA/8I,KAAAg9I,kBAAA,GAAAjB,GAAA,SAAAzzI,GAAiH,MAAAA,GAAAqnE,aAAoB3vE,KAAAy8I,aAAAK,UAAA98I,KAAAg9I,mBAAAh9I,KAAAi9I,0BAAA,GAAAC,GAAA7B,EAAA,GAAAE,GAAAv7I,KAAAy8I,aAAAK,UAAA98I,KAAAi9I,2BAAAj9I,KAAAi9I,0BAAAE,UAAA,SAAA70I,GAAgR,gBAAAA,EAAA65H,QAAA,OAAA75H,EAAA65H,SAA0CniI,KAAAo9I,uBAAA,GAAAF,GAAAjC,EAAA,GAAAM,GAAAv7I,KAAAy8I,aAAAK,UAAA98I,KAAAo9I,wBAAAp9I,KAAAo9I,uBAAAD,UAAA,SAAA70I,GAAgN,gBAAAA,EAAAomH,KAAA,OAAApmH,EAAAomH,KAAA,EAAApmH,EAAAomH,MAA6C1uH,KAAAq9I,+BAAA,GAAAH,GAAAhC,EAAA,GAAAK,GAAAv7I,KAAAy8I,aAAAK,UAAA98I,KAAAq9I,gCAAAr9I,KAAAq9I,+BAAAF,UAAA,SAAA70I,GAAgP,gBAAAA,EAAA6yI,aAAA,OAAA7yI,EAAA6yI,aAAA,EAAA7yI,EAAA6yI,cAAqEn7I,KAAAs9I,+BAAA,GAAAJ,GAAAhC,EAAA,GAAAK,GAAAv7I,KAAAy8I,aAAAK,UAAA98I,KAAAs9I,gCAAAt9I,KAAAs9I,+BAAAH,UAAA,SAAA70I,GAAgP,gBAAAA,EAAA6yI,aAAA,OAAA7yI,EAAA6yI,aAAA,EAAA7yI,EAAA6yI,cAAqEn7I,KAAAu9I,6BAAA,GAAAL,GAAA5B,EAAA,GAAAC,GAAAv7I,KAAAy8I,aAAAK,UAAA98I,KAAAu9I,8BAAAv9I,KAAAu9I,6BAAAJ,UAAA,SAAA70I,GAAgP,gBAAAA,EAAAqyI,mBAAA,OAAAryI,EAAAqyI,oBAAgE36I,KAAAw9I,6BAAA,GAAAN,GAAA5B,EAAA,GAAAC,GAAAv7I,KAAAy8I,aAAAK,UAAA98I,KAAAw9I,8BAAAx9I,KAAAw9I,6BAAAL,UAAA,SAAA70I,GAAgP,gBAAAA,EAAAqyI,mBAAA,OAAAryI,EAAAqyI,oBAAgE36I,KAAAy9I,8BAAA,GAAAP,GAAA9B,EAAA,GAAAG,GAAAv7I,KAAAy8I,aAAAK,UAAA98I,KAAAy9I,+BAAAz9I,KAAAy9I,8BAAAN,UAAA,SAAA70I,GAA4O,gBAAAA,EAAAsyI,YAAA,OAAAtyI,EAAAsyI,YAAA,EAAAtyI,EAAAsyI,aAAkE56I,KAAA09I,8BAAA,GAAAR,GAAA9B,EAAA,GAAAG,GAAAv7I,KAAAy8I,aAAAK,UAAA98I,KAAA09I,+BAAA19I,KAAA09I,8BAAAP,UAAA,SAAA70I,GAA4O,gBAAAA,EAAAsyI,YAAA,OAAAtyI,EAAAsyI,YAAA,EAAAtyI,EAAAsyI,aAAkE56I,KAAA29I,gBAAA,GAAAC,GAAA,SAAAt1I,GAA6C,MAAAA,GAAAomH,MAAa1uH,KAAAy8I,aAAAK,UAAA98I,KAAA29I,iBAAA39I,KAAA29I,gBAAAR,UAAA,SAAA70I,GAA+F,gBAAAA,EAAAomH,KAAA,OAAApmH,EAAAomH,KAAA,EAAApmH,EAAAomH,MAA6C1uH,KAAA69I,qBAAA,GAAAD,GAAA,SAAAt1I,GAAkD,MAAAA,GAAAqyI,oBAA2B36I,KAAAy8I,aAAAK,UAAA98I,KAAA69I,sBAAA79I,KAAA69I,qBAAAV,UAAA,SAAA70I,GAAyG,gBAAAA,EAAAqyI,mBAAA,OAAAryI,EAAAqyI,mBAAA,EAAAryI,EAAAqyI,oBAAuF36I,KAAA89I,uBAAA,GAAAF,GAAA,SAAAt1I,GAAoD,MAAAA,GAAA6yI,cAAqBn7I,KAAAy8I,aAAAK,UAAA98I,KAAA89I,wBAAA99I,KAAA89I,uBAAAX,UAAA,SAAA70I,GAA6G,gBAAAA,EAAA6yI,aAAA,OAAA7yI,EAAA6yI,aAAA,EAAA7yI,EAAA6yI,cAAqEn7I,KAAA+9I,sBAAA,GAAAH,GAAA,SAAAt1I,GAAmD,MAAAA,GAAAsyI,aAAoB56I,KAAAy8I,aAAAK,UAAA98I,KAAA+9I,uBAAA/9I,KAAA+9I,sBAAAZ,UAAA,SAAA70I,GAA2G,gBAAAA,EAAA6yI,aAAA,OAAA7yI,EAAAsyI,YAAA,EAAAtyI,EAAAsyI,aAAmE56I,KAAAg+I,iBAAA,GAAAJ,GAAA,SAAAt1I,GAA8C,MAAAA,GAAA65H,SAAgBniI,KAAAy8I,aAAAK,UAAA98I,KAAAg+I,kBAAAh+I,KAAAg+I,iBAAAb,UAAA,SAAA70I,GAAiG,gBAAAA,EAAA65H,QAAA,OAAA75H,EAAA65H,QAAA,EAAA75H,EAAA65H,SAAsDniI,KAAAi+I,sBAAA,GAAAvB,GAAAzW,EAAA0W,YAAA1W,EAAA2W,aAAA58I,KAAAk+I,oBAAA,GAAAhB,GAAAf,EAAA,GAAAE,GAAAr8I,KAAAi+I,sBAAAnB,UAAA98I,KAAAk+I,qBAAAl+I,KAAAm+I,SAAA,EAAAn+I,KAAAo+I,WAAA,EAAAp+I,KAAAq+I,UAAA,EAAAr+I,KAAAs+I,aAAAt+I,KAAA8qE,UAAA,KAAA9qE,KAAAsuC,UAAA,KAAAtuC,KAAAu+I,YAAA,EAAAv+I,KAAAw6B,KAAA,EAAoY,QAAAgkH,KAA0BhC,EAAAh8I,KAAAR,WAAAy+I,qBAAA,GAAA/C,GAAA,SAAApzI,GAA4E,MAAAA,GAAAozH,gBAAuB17H,KAAA0+I,uBAAA,GAAAhD,GAAA,SAAApzI,GAA6D,MAAAA,GAAA6zH,kBAAyBn8H,KAAA88I,UAAA98I,KAAAy+I,sBAAAz+I,KAAA88I,UAAA98I,KAAA0+I,wBAAA1+I,KAAA2+I,mBAAA,EAAA3+I,KAAA4+I,eAAA,EAAwI,QAAAC,KAA2BL,EAAAh+I,KAAAR,WAAAgiI,SAAwC8c,OAAA,EAAAptE,UAAA,GAAqB1xE,KAAAsuC,UAAAosG,EAAAqE,UAAA7d,QAAAlhI,KAAA8qE,UAAA4vE,EAAAsE,WAAA/vE,MAA0F,QAAAgwE,KAA2BT,EAAAh+I,KAAAR,WAAAk/I,yBAAA,GAAAxD,GAAA,SAAApzI,GAAuF,MAAAA,GAAAqyI,oBAA2B36I,KAAAm/I,qBAAA,GAAAjC,GAAA5B,EAAA,GAAAC,GAAAv7I,KAAAm/I,qBAAAhC,UAAA,SAAA70I,GAAiK,gBAAAA,EAAAqyI,mBAAA,OAAAryI,EAAAqyI,oBAAgE36I,KAAAm/I,qBAAAp8H,OAAA/iB,KAAAo/I,uBAAAp/I,WAAAq/I,oBAAA,KAAAr/I,KAAA88I,UAAA98I,KAAAm/I,sBAAAn/I,KAAA88I,UAAA98I,KAAAk/I,0BAAAl/I,KAAAgiI,SAAyM8c,OAAA,EAAAptE,UAAA,EAAAkgD,UAAA,GAAiC5xH,KAAAsuC,UAAAosG,EAAAqE,UAAA7d,QAAAlhI,KAAA8qE,UAAA4vE,EAAAsE,WAAAj1G,MAA0F,QAAAu1G,KAA2B9C,EAAAh8I,KAAAR,WAAAu/I,iBAAA,GAAA7D,GAAA,SAAApzI,GAAwE,MAAAA,GAAAqzH,YAAmB37H,KAAAw/I,mBAAA,GAAA9D,GAAA,SAAApzI,GAAyD,MAAAA,GAAA0zH,cAAqBh8H,KAAA88I,UAAA98I,KAAAu/I,kBAAAv/I,KAAA88I,UAAA98I,KAAAw/I,oBAAAx/I,KAAA2+I,mBAAA,EAAA3+I,KAAA4+I,eAAA,EAAgI,QAAAa,KAA4BH,EAAA9+I,KAAAR,WAAAk/I,yBAAA,GAAAxD,GAAA,SAAApzI,GAAwF,MAAAA,GAAAqyI,oBAA2B36I,KAAAm/I,qBAAA,GAAAjC,GAAA5B,EAAA,GAAAC,GAAAv7I,KAAAm/I,qBAAAhC,UAAA,SAAA70I,GAAiK,gBAAAA,EAAAqyI,mBAAA,OAAAryI,EAAAqyI,oBAAgE36I,KAAAm/I,qBAAAp8H,OAAA/iB,KAAAo/I,uBAAAp/I,WAAAq/I,oBAAA,KAAAr/I,KAAA88I,UAAA98I,KAAAm/I,sBAAAn/I,KAAA88I,UAAA98I,KAAAk/I,0BAAAl/I,KAAAgiI,SAAyM8c,OAAA,EAAAptE,UAAA,EAAAkgD,UAAA,GAAiC5xH,KAAA6gI,+BAAqCrmG,KAAA,EAAAklH,QAAA,EAAA9qG,IAAA,EAAA+qG,MAAA,EAAAC,OAAA,EAAAC,SAAA,EAAAC,SAAAC,eAAAC,mBAA6FhgJ,KAAAsuC,UAAAosG,EAAAqE,UAAArlB,SAAA15H,KAAA8qE,UAAA4vE,EAAAsE,WAAAj1G,MAA2F,QAAAk2G,KAA4BX,EAAA9+I,KAAAR,WAAAgiI,SAAyC8c,OAAA,EAAAptE,UAAA,GAAqB1xE,KAAAsuC,UAAAosG,EAAAqE,UAAArlB,SAAA15H,KAAA8qE,UAAA4vE,EAAAsE,WAAA/vE,MAA2F,QAAAixE,KAAoBlgJ,KAAAmgJ,YAAgBngJ,KAAAogJ,UAAA,GAAA5E,GAAAx7I,KAAAqgJ,YAAArgJ,KAAAsgJ,0BAA8ElN,QAAAsM,QAAA,EAAAa,aAAA,GAAiCvgJ,KAAAwgJ,2BAAiCpN,QAAAsM,QAAA,EAAAa,aAAA,GAAkC,QAAAE,GAAAn4I,GAAqBtI,KAAAmgJ,SAAA,GAAAD,GAAAlgJ,KAAAsP,OAAA,GAAA8qI,GAAAp6I,KAAA0gJ,kBAAAzhI,OAAAC,UAAAlf,KAAA2gJ,aAAA,EAAA3gJ,KAAA4gJ,YAAA,EAAA5gJ,KAAA6gJ,aAAA,EAAAv4I,EAAA6/B,YAAAnoC,KAAAmgJ,SAAA1F,WAAAz6I,KAAAmgJ,UAAA73I,EAAA6/B,YAAAnoC,KAAAy6I,WAAAz6I,MAAmP,QAAAimI,KAAoBjmI,KAAAg9F,QAAa8jD,KAAA,OAAAC,IAAA,OAAsB/gJ,KAAA02G,QAAc8pB,UAAA,YAAAM,eAAA,iBAAAkgB,OAAA,SAAAC,QAAA,UAAAxgB,gCAAA,kCAAAG,uCAAA,0CAA0O5gI,KAAAy6I,WAAA,GAAAH,GAAAt6I,KAAAkhJ,SAAA,GAAAT,GAAAzgJ,KAAAy6I,YAAAz6I,KAAAmhJ,WAAA,GAAA5G,GAAAv6I,KAAAy6I,YAAAz6I,KAAAohJ,qCAAAphJ,KAAAkhJ,SAAA5xI,OAAA8S,QAAApiB,KAAAmhJ,WAAA5nG,SAAAv5C,KAAAmhJ,YAAAnhJ,KAAAqhJ,aAAArhJ,KAAAg9F,OAAA+jD,IAA6Q,GAAArE,GAAAx8I,EAAA,IAAAo9E,EAAAp9E,EAAA,IAAAg9I,EAAAh9I,EAAA,IAAA09I,EAAA19I,EAAA,GAA0J+lI,GAAAqb,eAAArb,EAAAsb,mBAAAtb,EAAAub,mBAAA,GAAAvb,EAAAwb,sBAAkH7sG,IAAA,IAAAnlB,IAAA,IAAAiyH,QAAA,KAA4Bzb,EAAA0b,iBAAA,IAAA1b,EAAA0W,YAAA,IAAA1W,EAAA2W,YAAA,IAAA3W,EAAA6V,SAAmGrB,WAAA,cAAwBL,EAAA34I,WAAuBypC,YAAAkvG,EAAAh4H,QAAA,SAAA9Z,EAAA8H,GAA6CpQ,KAAAq6I,iBAAAjqI,EAAA,KAAAA,EAAApQ,KAAAu5C,SAAAjxC,GAA+C0b,KAAA,SAAA1b,GAAkB,cAAAtI,KAAAu5C,aAAAzzC,SAAAsC,KAAA,uCAAApI,KAAAq6I,YAAAr6I,MAAAu5C,SAAAjxC,OAAAtI,MAAAu5C,SAAA/4C,KAAAR,KAAAq6I,QAAA/xI,KAAiKgyI,EAAA74I,WAAqBypC,YAAAovG,EAAAnyG,YAAA,SAAA7/B,EAAA8H,GAA+CpQ,KAAAizC,UAAApwC,MAAqB4J,SAAAnE,EAAAoW,KAAAtO,KAAoButE,OAAA,WAAmB,OAAAr1E,GAAA,EAAYA,EAAAtI,KAAAizC,UAAAjwC,SAAwBsF,EAAA,CAAK,GAAA8H,GAAApQ,KAAAizC,UAAA3qC,YAAwB8H,EAAA3D,UAAA,OAAA2D,EAAA3D,WAAA,OAAA2D,EAAAsO,KAAAtO,EAAA3D,WAAA2D,EAAA3D,SAAAjM,KAAA4P,EAAAsO,UAA+F67H,EAAA94I,WAAuBypC,YAAAqvG,EAAAhhG,SAAA,SAAAjxC,GAA4CtI,KAAAu9B,MAAAj1B,EAAAtI,KAAAkiG,aAA8B0/C,aAAA,WAAyB,GAAAt5I,GAAA,KAAA8H,MAAA6O,OAAAC,SAAkC,WAAAlf,KAAAu9B,MAAA,WAAiC,IAAAv9B,KAAAkiG,UAAA9xF,EAAA61H,EAAAwb,qBAAAhyH,IAAAzvB,KAAAw6I,cAAA,MAAA10I,SAAAsC,KAAA,sEAAoK,IAAA1H,GAAA0P,EAAApQ,KAAAw6I,aAA2B,OAAA10I,SAAAhC,IAAA,mCAAApD,GAAA4H,GAA4DiwE,QAAAv4E,KAAAu9B,OAAmBv9B,KAAAu9B,MAAA,KAAAv9B,KAAAw6I,cAAApqI,EAAApQ,KAAAy6I,WAAA98D,SAAA39E,KAAAkiG,YAAA55F,IAAmFoyI,EAAAsE,YAAyB/vE,MAAA,QAAAllC,MAAA,SAA4B2wG,EAAAqE,WAAwB7d,QAAA,UAAAxH,SAAA,YAAsCghB,EAAAj5I,WAAwBypC,YAAAwvG,EAAA7sI,SAAA,WAA4C,2BAAoB7N,KAAA6hJ,IAAA,QAAuBrG,EAAA/5I,WAAsBypC,YAAAswG,EAAAsG,GAAA,SAAAx5I,EAAA8H,GAAuC,GAAA1P,GAAA,GAAAg6I,GAAApyI,EAAyB,IAAA5H,EAAA85B,KAAAlyB,EAAAkyB,KAAA95B,EAAAoqE,UAAA9qE,KAAA+hJ,aAAAz5I,GAAA5H,EAAAivE,WAAA3vE,KAAAgiJ,cAAA15I,GAAA5H,EAAAi6I,kBAAA36I,KAAAiiJ,aAAA35I,GAAA5H,EAAAk6I,WAAA56I,KAAAkiJ,cAAA55I,GAAA5H,EAAAy6I,YAAAn7I,KAAAmiJ,eAAA75I,GAAA5H,EAAAguH,IAAA1uH,KAAAoiJ,eAAA95I,GAAA5H,EAAAm6I,iBAAA76I,KAAAqiJ,oBAAA/5I,GAAA5H,EAAAo6I,YAAA96I,KAAAsiJ,eAAAh6I,GAAA5H,EAAAyhI,OAAAniI,KAAAuiJ,UAAAj6I,KAAAkxH,aAAAkhB,EAAAqE,UAAA7d,SAAAxgI,EAAA4tC,UAAAosG,EAAAqE,UAAA7d,QAAAxgI,EAAAg7H,cAAA17H,KAAAwiJ,iBAAAl6I,GAAA5H,EAAAy7H,gBAAAn8H,KAAAyiJ,mBAAAn6I,GAAA5H,EAAAq6I,iBAAA/6I,KAAA0iJ,oBAAAp6I,MAAAkxH,aAAAkhB,EAAAqE,UAAArlB,WAAAh5H,EAAA4tC,UAAAosG,EAAAqE,UAAArlB,SAAAh5H,EAAAi7H,UAAA37H,KAAA2iJ,aAAAr6I,GAAA5H,EAAAs7H,YAAAh8H,KAAA4iJ,eAAAt6I,aAAA8H,UAAA,CAAsuB1P,EAAAmiJ,UAAa,QAAAliJ,KAAA2H,GAAAoI,KAAApI,EAAAoI,KAAAhP,eAAAf,KAAAD,EAAAmiJ,QAAAliJ,GAAA2H,EAAAoI,KAAA/P,IAAuE,MAAAD,IAASoiJ,cAAA,SAAAx6I,GAA2BtI,KAAA62C,SAAAvuC,GAAgBq6I,aAAA,SAAAr6I,GAA0B,YAAAA,EAAAoI,KAAAirH,UAAA,QAAsC,IAAAvrH,GAAApQ,KAAA+iJ,YAAAl/I,SAAAyE,EAAAoI,KAAAirH,UAAA,IAAsD,eAAAvrH,IAAA,GAAoBoyI,iBAAA,SAAAl6I,GAA8B,YAAAA,EAAAoI,KAAAgrH,cAAA,QAA0C,IAAAtrH,GAAApQ,KAAA+iJ,YAAAl/I,SAAAyE,EAAAoI,KAAAgrH,cAAA,IAA0D,eAAAtrH,IAAA,GAAoBqyI,mBAAA,SAAAn6I,GAAgC,YAAAA,EAAAoI,KAAAyrH,gBAAA,QAA4C,IAAA/rH,GAAApQ,KAAAgjJ,sBAAAn/I,SAAAyE,EAAAoI,KAAAyrH,gBAAA,IAAsE,eAAA/rH,IAAA,GAAoBwyI,eAAA,SAAAt6I,GAA4B,YAAAA,EAAAoI,KAAAsrH,YAAA,QAAwC,IAAA5rH,GAAApQ,KAAAgjJ,sBAAAn/I,SAAAyE,EAAAoI,KAAAsrH,YAAA,IAAkE,eAAA5rH,IAAA,GAAoBsyI,oBAAA,SAAAp6I,GAAiC,YAAAA,EAAAoI,KAAAuyI,iBAAA,QAA6C,IAAA7yI,GAAApQ,KAAA+iJ,YAAAl/I,SAAAyE,EAAAoI,KAAAuyI,iBAAA,IAA6D,eAAA7yI,IAAA,GAAoBkyI,eAAA,SAAAh6I,GAA4B,YAAAA,EAAAoI,KAAAwyI,YAAA,QAAwC,IAAA9yI,GAAApQ,KAAAgjJ,sBAAAn/I,SAAAyE,EAAAoI,KAAAwyI,YAAA,IAAkE,eAAA9yI,IAAA,GAAoBiyI,oBAAA,SAAA/5I,GAAiC,YAAAA,EAAAoI,KAAAyyI,cAAA,QAA0C,IAAA/yI,GAAApQ,KAAAgjJ,sBAAAn/I,SAAAyE,EAAAoI,KAAAyyI,cAAA,IAAoE,eAAA/yI,IAAA,GAAoB6xI,aAAA,SAAA35I,GAA0B,GAAA8H,EAAM,iBAAA9H,EAAAoI,KAAA0yI,oBAAAhzI,EAAAvM,SAAAyE,EAAAoI,KAAA0yI,oBAAA,aAAA96I,EAAAoI,KAAA2yI,qBAAAjzI,EAAAvM,SAAAyE,EAAAoI,KAAA2yI,qBAAA,aAAA/6I,EAAAoI,KAAA4yI,sBAAAlzI,EAAAvM,SAAAyE,EAAAoI,KAAA4yI,sBAAA,aAAAh7I,EAAAoI,KAAA6yI,kBAAAnzI,EAAAvM,SAAAyE,EAAAoI,KAAA6yI,kBAAA,aAAAj7I,EAAAoI,KAAA8yI,gBAAApzI,EAAAvM,SAAAyE,EAAAoI,KAAA8yI,cAAA,cAAApzI,MAAAZ,MAAAY,MAAA,OAAAA,MAA6a+xI,eAAA,SAAA75I,GAA4B,GAAA8H,EAAM,iBAAA9H,EAAAoI,KAAA+yI,wBAAArzI,EAAA9H,EAAAoI,KAAA+yI,iCAAAn7I,EAAAoI,KAAAgzI,oBAAAtzI,EAAA9H,EAAAoI,KAAAgzI,6BAAAp7I,EAAAoI,KAAAyqI,cAAA/qI,EAAA9H,EAAAoI,KAAAyqI,aAAA/qI,GAAuMmyI,UAAA,SAAAj6I,GAAuB,YAAAA,EAAA,CAAe,GAAA8H,EAAM,iBAAA9H,EAAAoI,KAAA0xH,oBAAAhyH,EAAApQ,KAAA+iJ,YAAAl/I,SAAAyE,EAAAoI,KAAA0xH,mBAAA,MAAAhyH,EAAA,IAAAA,EAAApQ,KAAA62C,WAAA72C,KAAAy2C,aAAAD,iBAAAluC,EAAAoI,KAAAyxH,QAAA/xH,EAAApQ,KAAA+iJ,YAAAl/I,SAAAyE,EAAAoI,KAAAyxH,OAAA,MAAA/xH,EAAA,IAAAA,EAAApQ,KAAA62C,WAAA72C,KAAAy2C,aAAAW,kBAAA9uC,EAAAoI,KAAAyxH,OAAAniI,KAAA+iJ,YAAAl/I,SAAAyE,EAAAoI,KAAAyxH,OAAA,cAAoW6f,cAAA,SAAA15I,GAA2B,GAAA8H,GAAA1P,EAAAC,EAAAV,EAAA,aAA0B,OAAAmQ,GAAApQ,KAAAiiJ,aAAA35I,GAAA3H,EAAAX,KAAAkiJ,cAAA55I,GAAA5H,EAAAV,KAAAmiJ,eAAA75I,YAAA8H,YAAAzP,YAAAD,GAAAC,EAAA,GAAAD,EAAA,IAAAT,EAAAU,EAAA4J,OAAA,IAAA7J,EAAA,IAAA0P,IAAAnQ,GAAyJiiJ,cAAA,SAAA55I,GAA2B,GAAA8H,EAAM,iBAAA9H,EAAAoI,KAAAizI,uBAAAvzI,EAAA9H,EAAAoI,KAAAizI,gCAAAr7I,EAAAoI,KAAAkzI,mBAAAxzI,EAAA9H,EAAAoI,KAAAkzI,4BAAAt7I,EAAAoI,KAAAkqI,aAAAxqI,EAAA9H,EAAAoI,KAAAkqI,YAAAxqI,GAAiMyzI,YAAA,SAAAv7I,GAA+B,MAAAkH,OAAAlH,MAAA,OAAAA,GAA8B85I,eAAA,SAAA95I,GAA4B,gBAAAA,EAAA,cAAAA,EAAAoI,KAAAkvH,QAAA5/H,KAAA6jJ,YAAAhgJ,SAAAyE,EAAAoI,KAAAkvH,QAAA,cAAAt3H,EAAAoI,KAAAmvH,cAAA7/H,KAAA6jJ,YAAAhgJ,SAAAyE,EAAAoI,KAAAmvH,cAAA,cAAAv3H,EAAAoI,KAAAivH,OAAA3/H,KAAA6jJ,YAAAhgJ,SAAAyE,EAAAoI,KAAAivH,OAAA,WAAwPoiB,aAAA,SAAAz5I,GAA0B,GAAA8H,GAAApQ,KAAA8qE,UAAA2wE,OAA6B,aAAAnzI,EAAA,MAAAA,GAAAoI,eAAApI,EAAAoI,KAAAo6D,UAAAxiE,EAAAoI,KAAAo6D,WAAAxiE,EAAAoI,KAAAo6D,UAAA16D,EAAA9H,EAAAoI,KAAAo6D,mBAAAxiE,EAAAoI,KAAA4yI,gCAAAh7I,EAAAoI,KAAA6yI,kBAAAnzI,EAAApQ,KAAA8qE,UAAA/gC,eAAAzhC,EAAAoI,KAAA4xH,0BAAAh6H,EAAAoI,KAAA2xH,2BAAA/5H,EAAAoI,KAAAk7D,WAAAx7D,EAAApQ,KAAA8qE,UAAAmE,eAAA3mE,EAAAoI,KAAA8yI,gBAAApzI,EAAApQ,KAAA8qE,UAAA/gC,OAAA35B,IAA6X2yI,YAAA,SAAAz6I,GAA+C,MAAtBkH,OAAAlH,GAAA,KAAAA,GAA+B06I,sBAAA,SAAA16I,GAAmC,WAAAA,EAAAtI,KAAA+iJ,YAAAz6I,IAAoD,MAAjBA,GAAA,OAAAA,GAA2BuF,SAAA,WAAqB,4DAA2D6tI,EAAAj6I,UAAAV,OAAAkqC,OAAAqyC,EAAA77E,WAAAi6I,EAAAj6I,UAAAypC,YAAAwwG,IAAAj6I,UAAAg5I,WAAA,WAA+Jz6I,KAAA+5C,KAAA/5C,KAAA67I,QAAsBH,EAAAj6I,UAAAqiJ,UAAA,WAA+C,MAAA9jJ,MAAA67I,QAAmBH,EAAAj6I,UAAAsiJ,SAAA,WAA8C,MAAA/jJ,MAAAwnH,OAAkBk0B,EAAAj6I,UAAAuiJ,SAAA,WAA8C,MAAAhkJ,MAAA47I,MAAA57I,KAAA67I,OAAA77I,KAAA+5C,KAAA/5C,KAAA47I,OAAmDF,EAAAj6I,UAAAwiJ,YAAA,WAAiD,MAAAjkJ,MAAA+5C,MAAiB2hG,EAAAj6I,UAAA+yB,IAAA,SAAAlsB,GAA0C,GAAA8H,GAAApQ,KAAA27I,aAAArzI,EAA2B,aAAA8H,GAAA,OAAAA,EAAA,CAAyB,OAAApQ,KAAAwnH,MAAA,MAAAxnH,MAAAwnH,MAAAp3G,OAAApQ,KAAA67I,OAAAzrI,EAA0DpQ,MAAA67I,OAAAzrI,EAAApQ,KAAA29E,QAA2BjrB,KAAA1yD,KAAA+5C,KAAA6hG,MAAA57I,KAAA47I,UAAmCF,EAAAj6I,UAAAi8E,OAAA,aAA6Cq+D,EAAAt6I,UAAAV,OAAAkqC,OAAAqyC,EAAA77E,WAAAs6I,EAAAt6I,UAAAypC,YAAA6wG,IAAAt6I,UAAA+yB,IAAA,SAAAlsB,YAAqJA,GAAA,OAAAA,IAAAtI,KAAA+5C,KAAA/5C,KAAA27I,aAAArzI,KAAuDyzI,EAAAt6I,UAAAi8E,OAAA,aAA4Cq+D,EAAAt6I,UAAAwiJ,YAAA,WAAgD,MAAAjkJ,MAAA+5C,MAAiBiiG,EAAAv6I,WAAyBypC,YAAA8wG,EAAAM,gBAAA,WAAoD,MAAAt8I,MAAAk8I,cAAyBK,uBAAA,WAAmC,MAAAv8I,MAAAi8I,qBAAgCG,SAAA,WAAqB,gBAAAp8I,KAAAi8I,8BAAAj8I,KAAAk8I,aAAA,YAAAl8I,KAAAi8I,qBAAA,OAAAj8I,KAAAk8I,aAAA,SAAAl8I,KAAAk8I,cAAA,IAAAl8I,KAAAi8I,oBAAA,EAAAj8I,KAAAk8I,cAAAl8I,KAAAi8I,oBAAAj8I,KAAAk8I,gBAA+PM,EAAA0H,2BAAoCC,MAAA,KAAAC,IAAA,KAAmB5H,EAAA6H,2BAAoCF,MAAA,GAAAC,IAAA,GAAe5H,EAAA8H,yBAAkCH,MAAA,GAAAC,IAAA,IAAgB5H,EAAA+H,oBAA6BJ,MAAA,IAAAC,IAAA,KAAkB5H,EAAAgI,6BAAsCL,MAAA,GAAAC,IAAA,IAAgB5H,EAAAiI,4BAAqCN,MAAA,GAAAC,IAAA,IAAgB5H,EAAAkI,sBAA+BP,MAAA,IAAAC,IAAA,KAAkB5H,EAAAmI,iBAA0B9U,UAAA,EAAArM,KAAA,EAAAD,IAAA,GAAyBiZ,EAAAoI,uBAAgC/U,UAAA,YAAArM,KAAA,OAAAD,IAAA,OAA4CiZ,EAAA/6I,WAAoBypC,YAAAsxG,EAAAqI,QAAA,WAAuC,UAASC,aAAA,WAAyB,MAAA9kJ,MAAAo+I,YAAuB2G,WAAA,WAAuB,GAAAz8I,GAAAtI,KAAAglJ,oBAAgC,OAAAhlJ,MAAAsuC,YAAAosG,EAAAqE,UAAA7d,QAAA,EAAA54H,EAAAozH,cAAA17H,KAAAsuC,YAAAosG,EAAAqE,UAAArlB,UAAA,EAAApxH,EAAAqzH,WAAuIspB,iBAAA,WAA6B,WAAAjlJ,KAAAo+I,WAAA,EAAAp+I,KAAAq+I,UAAAr+I,KAAAo+I,YAA4D8G,iBAAA,WAA6B,WAAAllJ,KAAAm+I,SAAAn+I,KAAAq+I,UAAAr+I,KAAAo+I,WAAAp+I,KAAAq+I,UAAAr+I,KAAAm+I,UAAqF6G,mBAAA,WAA+B,MAAAhlJ,MAAAy8I,aAAA0I,WAAmCC,QAAA,SAAA98I,GAAqBtI,KAAAw6B,KAAAlyB,GAAY+hH,QAAA,WAAoB,MAAArqH,MAAAw6B,MAAiBhG,IAAA,SAAAlsB,GAAiB,GAAA8H,OAAA6O,OAAAC,SAA2B,QAAAlf,KAAAo+I,WAAA,CAAwB,IAAAp+I,KAAA6kJ,QAAAv8I,GAAA,MAA2BtI,MAAAo+I,WAAAhuI,EAAkBpQ,KAAAq+I,UAAAjuI,EAAApQ,KAAAy8I,aAAAjoH,IAAAlsB,IAA0C+8I,eAAA,WAA2BrlJ,KAAAs+I,cAAkBgH,cAAA,SAAAh9I,EAAA8H,EAAA1P,GAA+B,GAAAC,GAAAX,KAAAklJ,mBAAAjlJ,EAAAiO,KAAA0mC,IAAAqxF,EAAA0b,iBAAAhhJ,GAAA0L,EAAA,EAAA/D,EAAA07I,WAAA/jJ,EAAA+gC,EAAA5wB,EAAA4zI,YAAA/jJ,EAAA,IAAgHS,GAAAgQ,KAAAqxH,cAAA11H,EAAA3L,EAAAgQ,KAAA60I,UAAAvkH,EAAA,EAAA30B,EAAArM,KAAA2+I,mBAAA,KAAA3+I,KAAA2+I,uBAAA3+I,KAAA2+I,mBAAA3+I,KAAAwlJ,iBAAA,IAAA7kJ,GAAAX,KAAA4+I,eAAA,8EAAA59G,EAAAhhC,KAAA4+I,eAAA,KAAA5+I,KAAA4+I,mBAAA5+I,KAAA4+I,eAAA5+I,KAAAwlJ,iBAAA,IAAA7kJ,GAAAX,KAAA4+I,eAAA,2EAAgc4G,iBAAA,SAAAl9I,EAAA8H,GAAgCpQ,KAAAs+I,UAAAt+I,KAAAs+I,WAAAh2I,GAAiCm9I,UAAA,WAAsB,MAAAzlJ,MAAA29I,gBAAA+H,aAAwC1D,cAAA,WAA0B,MAAAhiJ,MAAAg9I,kBAAAiH,eAA4C0B,2BAAA,SAAAr9I,EAAA8H,EAAA1P,GAA4C,GAAAC,GAAA,KAAAV,EAAAqI,EAAAo9I,WAA2B,eAAAzlJ,EAAAS,EAAA,QAAAC,EAAAyP,EAAAnQ,EAAA47I,SAAAn7I,EAAAC,GAA+CilJ,SAAA,WAAqB,GAAAt9I,GAAAtI,KAAA2lJ,2BAAA3lJ,KAAAo9I,uBAAA,SAAA90I,GAA8E,MAAAA,GAAAomH,KAAa,MAAAt+G,EAAApQ,KAAAglJ,oBAAmC,WAAA50I,GAAA,OAAA9H,EAAA,CAAuB,GAAA5H,GAAAwN,KAAA0mC,IAAA,GAAAtsC,EAAA,GAAwBtI,MAAAwlJ,iBAAAl9I,EAAA5H,EAAA0P,EAAAs+G,IAAA,+BAAApmH,EAAA,MAAA8H,EAAAs+G,KAA8E,MAAApmH,IAASu9I,YAAA,WAAwB,GAAAv9I,GAAAtI,KAAA2lJ,2BAAA3lJ,KAAAi9I,0BAAA,SAAA30I,GAAiF,MAAAA,GAAA65H,QAAgB,MAAA/xH,EAAApQ,KAAAglJ,oBAAmC,WAAA50I,EAAA,CAAa,GAAA1P,GAAAwN,KAAA0mC,IAAA,GAAAtsC,EAAA,GAAwBtI,MAAAwlJ,iBAAAl9I,EAAA5H,EAAA0P,EAAA+xH,OAAA,kCAAA75H,EAAA,MAAA8H,EAAA+xH,QAAuF,MAAAniI,MAAAwc,QAAmBspI,iBAAA,WAA6B,MAAA9lJ,MAAA69I,qBAAA6H,aAA6CK,0BAAA,WAAsC,MAAA/lJ,MAAA2lJ,2BAAA3lJ,KAAAy9I,8BAAA,SAAAn1I,GAAsF,MAAAA,GAAAsyI,YAAoB,OAAOoL,0BAAA,WAAsC,MAAAhmJ,MAAA2lJ,2BAAA3lJ,KAAA09I,8BAAA,SAAAp1I,GAAsF,MAAAA,GAAAsyI,YAAoB,OAAOqL,2BAAA,WAAuC,MAAAjmJ,MAAA2lJ,2BAAA3lJ,KAAAq9I,+BAAA,SAAA/0I,GAAuF,MAAAA,GAAA6yI,aAAqB,OAAO+K,2BAAA,WAAuC,MAAAlmJ,MAAA2lJ,2BAAA3lJ,KAAAs9I,+BAAA,SAAAh1I,GAAuF,MAAAA,GAAA6yI,aAAqB,OAAOgL,yBAAA,WAAqC,MAAAnmJ,MAAA2lJ,2BAAA3lJ,KAAAu9I,6BAAA,SAAAj1I,GAAqF,MAAAA,GAAAqyI,mBAA2B,OAAOyL,yBAAA,WAAqC,MAAApmJ,MAAA2lJ,2BAAA3lJ,KAAAw9I,6BAAA,SAAAl1I,GAAqF,MAAAA,GAAAqyI,mBAA2B,OAAO0L,mBAAA,WAA+B,MAAArmJ,MAAA89I,uBAAA4H,aAA+CY,kBAAA,WAA8B,MAAAtmJ,MAAA+9I,sBAAA2H,aAA8Ca,aAAA,WAAyB,MAAAvmJ,MAAAg+I,iBAAA0H,aAAyCc,qBAAA,SAAAl+I,EAAA8H,GAAoC,YAAA9H,YAAA8H,EAA2B,cAAA9H,GAAA,OAAAA,EAAA,KAAwC8H,EAAA+zI,OAAA77I,EAAAk0I,EAAAmI,gBAAA9U,UAAAz/H,EAAAg0I,IAAA97I,KAAA8H,EAAA+zI,MAAA3H,EAAAmI,gBAAAnhB,KAAAgZ,EAAAmI,gBAAAphB,KAAmIkjB,4BAAA,SAAAn+I,EAAA8H,GAA2C,YAAA9H,YAAA8H,EAA2B,cAAA9H,GAAA,OAAAA,EAAA,KAAwC8H,EAAAg0I,IAAA97I,EAAAk0I,EAAAmI,gBAAAphB,IAAAnzH,EAAA+zI,OAAA77I,MAAA8H,EAAAg0I,IAAA5H,EAAAmI,gBAAAnhB,KAAAgZ,EAAAmI,gBAAA9U,WAAkI6W,QAAA,WAAoB,MAAA1mJ,MAAAy8I,aAAAjyD,UAAA,EAAAxqF,KAAAy8I,aAAAkK,eAAqE7J,UAAA,SAAAx0I,GAAuBtI,KAAAy8I,aAAAK,UAAAx0I,IAA+BmnG,MAAA,SAAAnnG,GAAmBA,EAAAoI,KAAAqxH,cAAA,EAAAz5H,EAAAoI,KAAAipH,cAAA,EAAArxH,EAAAoI,KAAAoxH,iBAAAx5H,EAAAoI,KAAAk2I,UAAA14I,KAAA0mC,IAAAqxF,EAAAwb,qBAAAC,QAAA1hJ,KAAAklJ,oBAAA58I,EAAAoI,KAAA60I,iBAAAj9I,EAAAoI,KAAAm2I,wBAAAv+I,EAAAoI,KAAAo2I,sBAAAx+I,EAAAoI,KAAAgyH,cAAA1iI,KAAAumJ,eAAAj+I,EAAAoI,KAAA8xH,WAAAxiI,KAAAylJ,YAAAn9I,EAAAoI,KAAAq2I,qBAAA/mJ,KAAA6lJ,cAAAv9I,EAAAoI,KAAAs2I,gBAAAhnJ,KAAA4lJ,WAAAt9I,EAAAoI,KAAAu2I,iBAAAjnJ,KAAAilJ,mBAAA38I,EAAAoI,KAAAw2I,QAAA,OAAAlnJ,KAAA4lJ,WAAA5lJ,KAAA4lJ,WAAA,MAAAt9I,EAAAoI,KAAAy2I,QAAAnnJ,KAAAgiJ,gBAAA15I,EAAAoI,KAAA02I,2BAAApnJ,KAAAgmJ,4BAAA19I,EAAAoI,KAAA22I,2BAAArnJ,KAAA+lJ,4BAAAz9I,EAAAoI,KAAA42I,4BAAAtnJ,KAAAkmJ,6BAAA59I,EAAAoI,KAAA62I,4BAAAvnJ,KAAAimJ,6BAAA39I,EAAAoI,KAAA82I,0BAAAxnJ,KAAAomJ,2BAAA99I,EAAAoI,KAAA+2I,0BAAAznJ,KAAAmmJ,2BAAA79I,EAAAoI,KAAAg3I,mBAAA1nJ,KAAAsmJ,oBAAAh+I,EAAAoI,KAAAi3I,oBAAA3nJ,KAAAqmJ,qBAAA/9I,EAAAoI,KAAAk3I,kBAAA5nJ,KAAA8lJ,oBAAglC+B,wBAAA,SAAAv/I,GAAqCtI,KAAAi+I,sBAAAzpH,IAAAlsB,IAAkCw/I,oBAAA,WAAgC,MAAA9nJ,MAAAi+I,sBAAAkH,WAA4C4C,0BAAA,WAAsC,GAAAz/I,GAAA8H,EAAApQ,KAAAk+I,oBAAAwH,WAA6C,WAAAt1I,EAAA,QAAqB9H,GAAA8H,EAAAyrI,OAAAO,UAAsB,IAAA17I,GAAAV,KAAA8nJ,qBAAiC,WAAApnJ,GAAA,OAAA4H,EAAA,CAAuB,GAAA3H,GAAAuN,KAAA0mC,IAAA,IAAAl0C,EAAA07I,WAAiCp8I,MAAAwlJ,iBAAA9kJ,EAAA07I,WAAAz7I,EAAA2H,EAAA,2CAAA5H,EAAA07I,WAAA,IAAA9zI,GAAsG,MAAAA,IAASmyI,WAAA,WAAuB,GAAAnyI,OAAA2W,OAAAC,SAA2Blf,MAAAy8I,aAAAz+D,UAAAioD,EAAA6V,QAAArB,WAAA,MAAAz6I,KAAAm+I,SAAA71I,GAA8E0/I,QAAA,WAAoB,OAAA1/I,GAAA,EAAYA,EAAAyC,UAAA/H,OAAmBsF,IAAA,UAAAyC,UAAAzC,aAAAyC,UAAAzC,GAAA,QAA2D,WAAS2/I,OAAA,WAAmB,QAAAjoJ,KAAA0mJ,UAAA,QAAgC,IAAAp+I,GAAAtI,KAAAs+I,SAAqB,OAAAt+I,MAAAs+I,aAAAh2I,GAA2By5I,aAAA,WAAyB,MAAA/hJ,MAAA8qE,WAAsB0pB,aAAA,WAAyB,MAAAx0F,MAAAsuC,YAAuBkwG,EAAA/8I,UAAAV,OAAAkqC,OAAAuxG,EAAA/6I,WAAA+8I,EAAA/8I,UAAAypC,YAAAszG,IAAA/8I,UAAAymJ,SAAA,SAAA5/I,GAA6Jk0I,EAAA/6I,UAAAymJ,SAAA5/I,IAA8Bk2I,EAAA/8I,UAAAguG,MAAA,SAAAnnG,GAA4Ck0I,EAAA/6I,UAAAguG,MAAAjvG,KAAAR,KAAAsI,EAAqC,IAAA8H,GAAA,GAAA4rI,GAAAh8I,KAAA68I,kBAAAmH,WAAAhkJ,KAAA0+I,uBAAAsF,WAAiGhkJ,MAAA6nJ,wBAAAz3I,GAAA9H,EAAAoI,KAAAy3I,cAAAnoJ,KAAA0+I,uBAAAsF,WAAAhkJ,KAAAslJ,cAAAtlJ,KAAAy+I,qBAAAz+I,KAAA0+I,uBAAAp2I,GAAAtI,KAAAilJ,mBAAA,IAAA38I,EAAAoI,KAAAipH,cAAA,EAAA35H,KAAAy+I,qBAAAqF,YAAA9jJ,KAAAilJ,oBAAA38I,EAAAoI,KAAAoxH,UAAA1xH,EAAAgsI,WAAA9zI,EAAAoI,KAAAm2I,iBAAA7mJ,KAAA+nJ,4BAAAz/I,EAAAoI,KAAAw2I,QAAA,OAAAlnJ,KAAA4lJ,WAAA5lJ,KAAA4lJ,WAAA,MAAAt9I,EAAAoI,KAAAo2I,eAAA9mJ,KAAA68I,kBAAAmH,oBAAA17I,EAAAoI,KAAAipH,eAAA,OAAArxH,EAAAoI,KAAAipH,cAAArxH,EAAAoI,KAAA03I,kBAAApoJ,KAAAy+I,qBAAAuF,WAAAhkJ,KAAA0+I,uBAAAsF,WAAA17I,EAAAoI,KAAA03I,kBAAA,KAAA9/I,EAAAoI,KAAAkyH,sBAAA5iI,KAAA68I,kBAAAmH,WAAAhkJ,KAAA0+I,uBAAAsF,WAAA,KAA6wBnF,EAAAp9I,UAAAV,OAAAkqC,OAAAuzG,EAAA/8I,WAAAo9I,EAAAp9I,UAAAypC,YAAA2zG,IAAAp9I,UAAAguG,MAAA,SAAAnnG,GAAqKk2I,EAAA/8I,UAAAguG,MAAAjvG,KAAAR,KAAAsI,KAAAoI,KAAAwxH,cAAAwY,EAAAsE,WAAA/vE,MAAAjvE,KAAAgiI,QAAA8c,OAAA9+I,KAAAymJ,4BAAAn+I,EAAAoI,KAAAw2I,OAAA1K,EAAAkI,sBAAA1kJ,KAAAgiI,QAAAtwD,UAAA1xE,KAAAwmJ,qBAAAl+I,EAAAoI,KAAAqxH,cAAAya,EAAA6H,2BAAA/7I,EAAAoI,KAAAuxH,SAAAjiI,KAAAqoJ,cAA0UxJ,EAAAp9I,UAAA4mJ,WAAA,WAAiD,GAAA//I,GAAA,EAAA8H,EAAA,GAAApQ,KAAAgiI,QAAAtwD,UAAA,GAAA1xE,KAAAgiI,QAAA8c,MAA2D,QAAA1uI,EAAAlC,KAAAE,MAAAgC,MAAAosI,EAAAmI,gBAAA9U,UAAAvnI,EAAAk0I,EAAAoI,sBAAA/U,UAAAz/H,IAAAosI,EAAAmI,gBAAAnhB,KAAAl7H,EAAAk0I,EAAAoI,sBAAAphB,KAAApzH,IAAAosI,EAAAmI,gBAAAphB,MAAAj7H,EAAAk0I,EAAAoI,sBAAArhB,KAAAj7H,GAAsP22I,EAAAx9I,UAAAV,OAAAkqC,OAAAuzG,EAAA/8I,WAAAw9I,EAAAx9I,UAAAypC,YAAA+zG,IAAAx9I,UAAA6mJ,qBAAA,WAAmL,GAAAhgJ,GAAAtI,KAAAk/I,yBAAA4E,YAAA1zI,EAAApQ,KAAAk/I,yBAAA+E,cAAAvjJ,EAAA,CAAkGV,MAAAgiI,QAAApQ,UAAA,WAAAtpH,YAAA8H,GAAA,OAAA9H,GAAA,OAAA8H,GAAA,IAAAA,IAAA1P,EAAA4H,EAAA8H,EAAApQ,KAAAgiI,QAAApQ,UAAA5xH,KAAAwmJ,qBAAA9lJ,EAAA87I,EAAA8H,2BAAwKrF,EAAAx9I,UAAA29I,uBAAA,SAAA92I,GAA8D,cAAAA,OAAAtI,KAAAq/I,oBAAA,WAAAr/I,KAAAq/I,oBAAA/2I,EAAAuzI,SAA4FoD,EAAAx9I,UAAAguG,MAAA,SAAAnnG,GAA6Ck2I,EAAA/8I,UAAAguG,MAAAjvG,KAAAR,KAAAsI,KAAAoI,KAAAwxH,cAAAwY,EAAAsE,WAAAj1G,MAAA/pC,KAAAsoJ,uBAAAtoJ,KAAAgiI,QAAA8c,OAAA9+I,KAAAymJ,4BAAAn+I,EAAAoI,KAAAw2I,OAAA1K,EAAAkI,sBAAA1kJ,KAAAgiI,QAAAtwD,UAAA1xE,KAAAwmJ,qBAAAl+I,EAAAoI,KAAAqxH,cAAAya,EAAA0H,2BAAA57I,EAAAoI,KAAAuxH,SAAAjiI,KAAAqoJ,cAAsWpJ,EAAAx9I,UAAA4mJ,WAAA,WAAiD,GAAA//I,GAAA,EAAA8H,EAAA,IAAApQ,KAAAgiI,QAAAtwD,UAAA,IAAA1xE,KAAAgiI,QAAA8c,OAAA,IAAA9+I,KAAAgiI,QAAApQ,SAAwF,QAAAxhH,EAAAlC,KAAAE,MAAAgC,MAAAosI,EAAAmI,gBAAA9U,UAAAvnI,EAAAk0I,EAAAoI,sBAAA/U,UAAAz/H,IAAAosI,EAAAmI,gBAAAnhB,KAAAl7H,EAAAk0I,EAAAoI,sBAAAphB,KAAApzH,IAAAosI,EAAAmI,gBAAAphB,MAAAj7H,EAAAk0I,EAAAoI,sBAAArhB,KAAAj7H,GAAsPg3I,EAAA79I,UAAAV,OAAAkqC,OAAAuxG,EAAA/6I,WAAA69I,EAAA79I,UAAAypC,YAAAo0G,IAAA79I,UAAAguG,MAAA,SAAAnnG,GAA8Jk0I,EAAA/6I,UAAAguG,MAAAjvG,KAAAR,KAAAsI,EAAqC,IAAA8H,GAAA,GAAA4rI,GAAAh8I,KAAA68I,kBAAAmH,WAAAhkJ,KAAAw/I,mBAAAwE,WAA6FhkJ,MAAA6nJ,wBAAAz3I,GAAApQ,KAAAslJ,cAAAtlJ,KAAAu/I,iBAAAv/I,KAAAw/I,mBAAAl3I,GAAAtI,KAAAilJ,mBAAA,IAAA38I,EAAAoI,KAAAipH,cAAA,EAAA35H,KAAAu/I,iBAAAuE,YAAA9jJ,KAAAilJ,oBAAA38I,EAAAoI,KAAAoxH,UAAA1xH,EAAAgsI,WAAA9zI,EAAAoI,KAAAy3I,cAAAnoJ,KAAAw/I,mBAAAwE,WAAA17I,EAAAoI,KAAAm2I,iBAAA7mJ,KAAA+nJ,4BAAAz/I,EAAAoI,KAAAw2I,QAAA,OAAAlnJ,KAAA4lJ,WAAA5lJ,KAAA4lJ,WAAA,MAAAt9I,EAAAoI,KAAAo2I,eAAA9mJ,KAAA68I,kBAAAmH,oBAAA17I,EAAAoI,KAAAipH,eAAA,OAAArxH,EAAAoI,KAAAipH,cAAArxH,EAAAoI,KAAA03I,kBAAApoJ,KAAAu/I,iBAAAyE,WAAAhkJ,KAAAw/I,mBAAAwE,WAAA17I,EAAAoI,KAAA03I,kBAAA,KAAA9/I,EAAAoI,KAAAkyH,sBAAA5iI,KAAA68I,kBAAAmH,WAAAhkJ,KAAAw/I,mBAAAwE,WAAA,KAAivBvE,EAAA8I,6BAAA,IAAA9I,EAAA+I,wBAAA,KAAA/I,EAAAgJ,mBAAA,GAAAhJ,EAAAh+I,UAAAV,OAAAkqC,OAAAq0G,EAAA79I,WAAAg+I,EAAAh+I,UAAAypC,YAAAu0G,IAAAh+I,UAAA6mJ,qBAAA,WAA+T,GAAAhgJ,GAAAtI,KAAAk/I,yBAAA4E,YAAA1zI,EAAApQ,KAAAk/I,yBAAA+E,cAAAvjJ,EAAA,CAAkGV,MAAAgiI,QAAApQ,UAAA,WAAAtpH,YAAA8H,GAAA,OAAA9H,GAAA,OAAA8H,GAAA,IAAAA,IAAA1P,EAAA4H,EAAA8H,EAAApQ,KAAAgiI,QAAApQ,UAAA5xH,KAAAwmJ,qBAAA9lJ,EAAA87I,EAAA8H,2BAAwK7E,EAAAh+I,UAAA29I,uBAAA,SAAA92I,GAA+D,cAAAA,OAAAtI,KAAAq/I,oBAAA,WAAAr/I,KAAAq/I,oBAAA/2I,EAAAuzI,SAA4F4D,EAAAh+I,UAAAinJ,+BAAA,WAAsE,GAAApgJ,GAAAtI,KAAA6gI,6BAAyC,OAAAv4H,GAAAw3I,OAAgBtlH,KAAAlyB,EAAAkyB,KAAAmuH,mBAAArgJ,EAAAssC,IAAAg0G,yBAAAtgJ,EAAAq3I,MAAAr3I,EAAAo3I,QAAAmJ,sBAAAvgJ,EAAAs3I,OAAAkJ,4BAAAxgJ,EAAAu3I,SAAAv3I,EAAAo3I,SAAgK,MAAMD,EAAAh+I,UAAAsnJ,iCAAA,SAAAzgJ,GAAyE,GAAA8H,GAAApQ,KAAA6gI,8BAAAngI,MAAAue,OAAAC,SAAgE,SAAA9O,EAAA0vI,MAAA,CAAiB,OAAA1vI,EAAAsvI,QAAA,MAAAtvI,GAAAoqB,KAAAx6B,KAAAqqH,eAAAj6G,EAAAsvI,QAAAh/I,EAAgE,IAAAC,GAAA2H,EAAAoI,KAAAqxH,cAAA9hI,EAAAiO,KAAAuhB,IAAAgwH,EAAAgJ,mBAAA,IAAA9nJ,EAAiFyP,GAAAwkC,IAAAj0C,GAAAyP,EAAAwkC,IAAAj0C,EAAAyP,EAAAuvI,MAAAj/I,GAAA++I,EAAA8I,6BAAA7nJ,EAAA0P,EAAAuvI,QAAAvvI,EAAA2vI,gBAAAr/I,EAAA0P,EAAAsvI,QAAAD,EAAA+I,0BAAA7nJ,EAAAV,EAAAqI,EAAAoI,KAAAipH,eAAArxH,EAAAoI,KAAAipH,cAAAh5H,EAAAV,IAAAmQ,EAAAyvI,SAAAn/I,EAAA0P,EAAAwvI,OAAAj/I,EAAAyP,EAAA4vI,mBAAA5vI,EAAA4vI,gBAAA5vI,EAAA2vI,cAAA3vI,EAAA0vI,aAAiTL,EAAAh+I,UAAAguG,MAAA,SAAAnnG,GAA8Cg3I,EAAA79I,UAAAguG,MAAAjvG,KAAAR,KAAAsI,KAAAoI,KAAAwxH,cAAAwY,EAAAsE,WAAAj1G,MAAA/pC,KAAAsoJ,uBAAAtoJ,KAAAgiI,QAAA8c,OAAA9+I,KAAAymJ,4BAAAn+I,EAAAoI,KAAAw2I,OAAA1K,EAAAkI,sBAAA1kJ,KAAAgiI,QAAAtwD,UAAA1xE,KAAAwmJ,qBAAAl+I,EAAAoI,KAAAqxH,cAAAya,EAAA0H,2BAAA57I,EAAAoI,KAAAuxH,SAAAjiI,KAAAqoJ,aAAAroJ,KAAA+oJ,iCAAAzgJ,IAAgZm3I,EAAAh+I,UAAA4mJ,WAAA,WAAkD,GAAA//I,GAAA,EAAA8H,EAAA,IAAApQ,KAAAgiI,QAAAtwD,UAAA,IAAA1xE,KAAAgiI,QAAA8c,OAAA,IAAA9+I,KAAAgiI,QAAApQ,SAAwF,QAAAxhH,EAAAlC,KAAAE,MAAAgC,MAAAosI,EAAAmI,gBAAA9U,UAAAvnI,EAAAk0I,EAAAoI,sBAAA/U,UAAAz/H,IAAAosI,EAAAmI,gBAAAnhB,KAAAl7H,EAAAk0I,EAAAoI,sBAAAphB,KAAApzH,IAAAosI,EAAAmI,gBAAAphB,MAAAj7H,EAAAk0I,EAAAoI,sBAAArhB,KAAAj7H,GAAsP23I,EAAAx+I,UAAAV,OAAAkqC,OAAAq0G,EAAA79I,WAAAw+I,EAAAx+I,UAAAypC,YAAA+0G,IAAAx+I,UAAAunJ,iBAAA,SAAA1gJ,GAAqLA,EAAAk0I,EAAAkI,qBAAAP,MAAAnkJ,KAAAgiI,QAAA8c,OAAAtC,EAAAmI,gBAAA9U,UAAAvnI,EAAAk0I,EAAAkI,qBAAAP,OAAA77I,EAAAk0I,EAAAkI,qBAAAN,IAAApkJ,KAAAgiI,QAAA8c,OAAAtC,EAAAmI,gBAAAnhB,KAAAl7H,EAAAk0I,EAAAkI,qBAAAN,MAAApkJ,KAAAgiI,QAAA8c,OAAAtC,EAAAmI,gBAAAphB,MAA2S0c,EAAAx+I,UAAAwnJ,qBAAA,SAAA3gJ,GAA6D,OAAAA,kBAAAk0I,EAAA6H,0BAAAF,MAAAnkJ,KAAAgiI,QAAAtwD,UAAA8qE,EAAAmI,gBAAA9U,UAAAvnI,EAAAk0I,EAAA6H,0BAAAD,KAAA97I,EAAAk0I,EAAA6H,0BAAAF,MAAAnkJ,KAAAgiI,QAAAtwD,UAAA8qE,EAAAmI,gBAAAnhB,KAAAl7H,EAAAk0I,EAAA6H,0BAAAD,MAAApkJ,KAAAgiI,QAAAtwD,UAAA8qE,EAAAmI,gBAAAphB,OACvt+B0c,EAAAx+I,UAAAguG,MAAA,SAAAnnG,GAA8Cg3I,EAAA79I,UAAAguG,MAAAjvG,KAAAR,KAAAsI,GAAAtI,KAAAipJ,qBAAA3gJ,EAAAoI,KAAAqxH,eAAA/hI,KAAAgpJ,iBAAA1gJ,EAAAoI,KAAAw2I,QAAA5+I,EAAAoI,KAAAwxH,cAAAwY,EAAAsE,WAAA/vE,MAAA3mE,EAAAoI,KAAAuxH,SAAAjiI,KAAAqoJ,cAAsNpI,EAAAx+I,UAAAwmJ,OAAA,WAA8C,MAAAjoJ,MAAA0mJ,cAA8BzG,EAAAx+I,UAAA4mJ,WAAA,WAAkD,GAAA//I,GAAA,EAAA8H,EAAA,GAAApQ,KAAAgiI,QAAAtwD,UAAA,GAAA1xE,KAAAgiI,QAAA8c,MAA2D,QAAA1uI,EAAAlC,KAAAE,MAAAgC,MAAAosI,EAAAmI,gBAAA9U,UAAAvnI,EAAAk0I,EAAAoI,sBAAA/U,UAAAz/H,IAAAosI,EAAAmI,gBAAAnhB,KAAAl7H,EAAAk0I,EAAAoI,sBAAAphB,KAAApzH,IAAAosI,EAAAmI,gBAAAphB,MAAAj7H,EAAAk0I,EAAAoI,sBAAArhB,KAAAj7H,GAAsP43I,EAAAgJ,6BAAA,IAAAhJ,EAAAiJ,sBAA0El6E,MAAA,QAAAllC,MAAA,QAAAinC,OAAA,UAA4CkvE,EAAAkJ,iBAA2B9I,yBAAA,2BAAAE,0BAAA,6BAA0GN,EAAAz+I,WAAqBypC,YAAAg1G,EAAAmJ,WAAA,SAAA/gJ,GAA4C,GAAA8H,EAAM,IAAApQ,KAAAmgJ,SAAA73I,EAAAgmC,aAAAl+B,EAAApQ,KAAAmgJ,SAAA73I,EAAAgmC,WAAAhmC,EAAAkyB,gBAAApqB,EAAA,MAAApQ,MAAAmgJ,SAAA73I,EAAAgmC,WAAAhmC,EAAAkyB,KAA2H,IAAA95B,GAAA4H,EAAAgmC,YAAAosG,EAAAqE,UAAA7d,QAAAvgI,EAAA2H,EAAAgmC,YAAAosG,EAAAqE,UAAArlB,SAAAz5H,EAAAqI,EAAAwiE,YAAA4vE,EAAAsE,WAAA/vE,MAAA5iE,EAAA/D,EAAAwiE,YAAA4vE,EAAAsE,WAAAj1G,KAA2L,QAAA35B,EAAA1P,GAAAT,EAAA,GAAA4+I,GAAAl+I,GAAAV,EAAA,GAAAggJ,GAAAv/I,GAAA2L,EAAA,GAAA4yI,GAAAt+I,GAAA0L,EAAA,GAAAozI,GAAA,MAAA2F,QAAA98I,EAAAkyB,MAAAx6B,KAAAmgJ,SAAA73I,EAAAgmC,aAAAtuC,KAAAmgJ,SAAA73I,EAAAgmC,eAAgMtuC,KAAAmgJ,SAAA73I,EAAAgmC,WAAAhmC,EAAAkyB,MAAApqB,KAAyC0yI,cAAA,SAAAx6I,GAA2BtI,KAAAogJ,UAAA0C,cAAAx6I,IAAgCghJ,WAAA,WAAuB,GAAAhhJ,GAAAtI,KAAAqgJ,QAAoB,OAAArgJ,MAAAqgJ,YAAA/3I,GAA0BqvC,QAAA,SAAArvC,GAAqB,GAAA8H,GAAApQ,KAAAogJ,UAAA0B,GAAAx5I,GAAA5H,EAAAV,KAAAqpJ,WAAAj5I,EAAgD,eAAA1P,kBAAAoF,SAAAsC,KAAA,YAAAgI,EAAAoqB,KAAA,2BAAA95B,EAAAunJ,OAAA73I,KAAApQ,KAAAqgJ,aAAA3/I,EAAA8zB,IAAApkB,OAAA1P,GAAA+uG,MAAAnnG,KAAsJihJ,iBAAA,WAA6B,GAAAjhJ,GAAA8H,KAAA1P,KAAAC,EAAAX,KAAAmgJ,SAAAzF,EAAAqE,UAAA7d,QAA+DvgI,IAAAI,OAAAg3B,KAAAp3B,GAAA0N,QAAA,SAAA3N,IAAsC4H,EAAA3H,EAAAD,IAAAqhJ,iBAAArH,EAAAsE,WAAA/vE,OAAA7+D,EAAAvN,KAAAyF,MAAkE3H,EAAAX,KAAAmgJ,SAAAzF,EAAAqE,UAAArlB,YAAA34H,OAAAg3B,KAAAp3B,GAAA0N,QAAA,SAAA+B,IAAwF9H,EAAA3H,EAAAyP,IAAA2xI,iBAAArH,EAAAsE,WAAA/vE,OAAAvuE,EAAAmC,KAAAyF,MAAkEtI,KAAAwpJ,4BAAAp5I,EAAA1P,GAAAV,KAAAypJ,6BAAAr5I,EAAA1P,IAAA2N,QAAA,SAAA/F,GAAqGA,GAAA29H,EAAAqb,YAAAz+I,KAAAyF,MAAkCohJ,iCAAA,WAA6C,GAAAphJ,MAAA8H,EAAA,KAAA1P,EAAAV,KAAAmgJ,SAAAzF,EAAAqE,UAAArlB,SAAgE,OAAAh5H,IAAAK,OAAAg3B,KAAAr3B,GAAA2N,QAAA,SAAA1N,IAA6CyP,EAAA1P,EAAAC,IAAAohJ,iBAAArH,EAAAsE,WAAAj1G,OAAAzhC,EAAAzF,KAAAuN,EAAAs4I,oCAAmGpgJ,GAAA,MAAUkhJ,4BAAA,SAAAlhJ,EAAA8H,GAA2C,GAAA1P,GAAAV,KAAAsgJ,yBAAA3/I,MAAAse,OAAAC,SAA2D,IAAAxe,EAAA0yI,KAAA,WAAsB,IAAAnzI,GAAAmQ,EAAAg/B,OAAA,SAAA9mC,GAA2B,WAAAA,EAAAw8I,iBAA4B9hJ,OAAA,EAAAqJ,EAAA+D,EAAAg/B,OAAA,SAAA9mC,GAAkC,OAAAA,EAAAy8I,eAAsB/hJ,OAAA,CAAW,KAAA/C,GAAAoM,EAAA,WAAqB,KAAA/D,EAAAtF,OAAA,WAAyB,IAAAg+B,GAAA14B,EAAA8mC,OAAA,SAAA9mC,GAA2B,OAAAA,EAAAy8I,cAAwB,IAAA/jH,EAAAh+B,OAAA,QAAAtC,GAAAg/I,QAAA,MAAsC,QAAAh/I,EAAAg/I,QAAA,MAAAh/I,GAAAg/I,QAAA/+I,EAAA,IAAyC,IAAAA,EAAAu/I,EAAAgJ,6BAAAxoJ,EAAAg/I,QAAA,WAAiE,IAAAhiI,GAAAsjB,EAAA,GAAAqpF,SAAqB,OAAA3pH,GAAA0yI,SAAkBtoE,UAAAo1E,EAAAiJ,qBAAAl6E,MAAAjxD,KAAAkiI,EAAAkJ,gBAAA9I,yBAAA9lH,KAAA9c,IAA6G+rI,6BAAA,SAAAnhJ,EAAA8H,GAA4C,GAAA1P,GAAAV,KAAAwgJ,0BAAA7/I,MAAAse,OAAAC,SAA4D,IAAAxe,EAAA0yI,KAAA,WAAsB,IAAAnzI,GAAAqI,EAAA8mC,OAAA,SAAA9mC,GAA2B,WAAAA,EAAAw8I,iBAA4B9hJ,OAAA,EAAAqJ,EAAA/D,EAAA8mC,OAAA,SAAA9mC,GAAkC,OAAAA,EAAAy8I,eAAsB/hJ,OAAA,CAAW,KAAA/C,IAAAoM,EAAA,WAAsB,KAAA+D,EAAApN,OAAA,WAAyB,IAAAg+B,GAAA5wB,EAAAg/B,OAAA,SAAA9mC,GAA2B,OAAAA,EAAAy8I,cAAwB,IAAA/jH,EAAAh+B,OAAA,QAAAtC,GAAAg/I,QAAA,MAAsC,QAAAh/I,EAAAg/I,QAAA,MAAAh/I,GAAAg/I,QAAA/+I,EAAA,IAAyC,IAAAA,EAAAu/I,EAAAgJ,6BAAAxoJ,EAAAg/I,QAAA,WAAiE,IAAAhiI,GAAAsjB,EAAA,GAAAqpF,SAAqB,OAAA3pH,GAAA0yI,SAAkBtoE,UAAAo1E,EAAAiJ,qBAAAl6E,MAAAjxD,KAAAkiI,EAAAkJ,gBAAA5I,0BAAAhmH,KAAA9c,IAA8G7P,SAAA,WAAqB,2DAA0D4sI,WAAA,WAAuB,OAAAnyI,KAAAtI,MAAAmgJ,SAAA,GAAAngJ,KAAAmgJ,SAAAz+I,eAAA4G,GAAA,OAAA8H,KAAApQ,MAAAmgJ,SAAA73I,GAAA,GAAAtI,KAAAmgJ,SAAA73I,GAAA5G,eAAA0O,GAAA,CAAmI,GAAA1P,GAAAV,KAAAmgJ,SAAA73I,GAAA8H,EAA0B,QAAA1P,IAAA+5I,aAAA30I,QAAAsC,KAAA,wBAAAgI,EAAA,qCAAmGqwI,EAAAh/I,WAAqBypC,YAAAu1G,EAAAhG,WAAA,aAA2Cz6I,KAAA4gJ,aAAmB8I,iCAAA,WAA6C,GAAAphJ,GAAAtI,KAAAmgJ,SAAAuJ,kCAAuD,OAAAphJ,IAAkBA,EAAA8mC,OAAA,SAAA9mC,GAA2B,cAAAA,IAAgBtF,OAAA,EAAWsF,EAAxE,MAAwFuzF,QAAA,SAAAvzF,GAAqB,GAAA8H,OAAA6O,OAAAC,UAAAxe,EAAA4H,EAAAiwE,QAAA53E,EAAA2H,EAAAuuC,QAAoD72C,MAAAmgJ,SAAA2C,cAAAniJ,EAA+B,QAAAV,GAAA,EAAYA,EAAAS,EAAAsC,SAAW/C,EAAA,CAAK,GAAAoM,GAAA3L,EAAAT,EAAWD,MAAAmgJ,SAAAxoG,QAAAtrC,GAAyBrM,KAAAmgJ,SAAAoJ,kBAAiC,IAAAvoH,KAAS,SAAAilG,EAAAsb,iBAAAvgH,EAAAhhC,KAAA0gJ,cAAAza,EAAAwb,qBAAAC,QAAAtxI,KAAApQ,KAAAsP,OAAA0U,KAAAtjB,GAAAV,KAAA2gJ,aAAAvwI,EAAApQ,KAAA0gJ,cAAA1gJ,KAAA0gJ,cAAAtwI,OAAmL,CAAK,GAAAsN,GAAA1d,KAAAmgJ,SAAAmJ,YAAiC,QAAAtpJ,KAAA4gJ,YAAA5/G,KAAAhhC,KAAA4gJ,YAAA,GAAA5/G,EAAAhhC,KAAA0gJ,cAAAza,EAAAwb,qBAAAC,QAAAtxI,EAAAsN,MAAAsjB,EAAAhhC,KAAA0gJ,cAAAxyI,KAAAuhB,IAAAw2G,EAAAwb,qBAAA7sG,IAAA50C,KAAA6gJ,cAAAzwI,EAAA4wB,GAAAtjB,EAAA,GAAA1d,KAAAsP,OAAA0U,KAAAtjB,GAAAV,KAAA2gJ,aAAAvwI,EAAApQ,KAAA0gJ,cAAA1gJ,KAAA0gJ,cAAAtwI,EAAAsN,EAAA1d,KAAA2gJ,aAAAzyI,KAAA0mC,IAAAqxF,EAAAwb,qBAAAhyH,IAAAzvB,KAAA2gJ,aAAA,OAAqX,IAAA3/G,EAAA,CAAW,GAAA3gC,GAAA6N,KAAA+T,SAAA,CAAsBjiB,MAAA6gJ,aAAA3yI,KAAAuhB,IAAAw2G,EAAAwb,qBAAA7sG,IAAA50C,KAAA2gJ,aAAAtgJ,OAAqF4lI,EAAAxkI,WAAqBypC,YAAA+6F,EAAA1F,KAAA,SAAAj4H,GAAsC,GAAA8H,EAAM,QAAApQ,KAAAqhJ,cAA0B,IAAArhJ,MAAAg9F,OAAA8jD,KAAA,OAAAx4I,GAAgC,IAAAtI,MAAA02G,OAAAuqC,QAAAjhJ,KAAAqhJ,aAAArhJ,KAAAg9F,OAAA+jD,GAA2D,MAAM,SAAAj7I,QAAAsC,KAAA,mBAAAE,EAAA,OAAAtI,KAAAqhJ,aAAA,SAA4E,KAAM,KAAArhJ,MAAAg9F,OAAA+jD,IAAA,OAAAz4I,GAA+B,IAAAtI,MAAA02G,OAAAsqC,OAAAhhJ,KAAAqhJ,aAAArhJ,KAAAg9F,OAAA8jD,IAA2D,MAAM,KAAA9gJ,MAAA02G,OAAA8pB,UAAA,GAAA9/H,GAAAqK,UAAA,EAA8C/K,MAAAkhJ,SAAArlD,QAAAn7F,EAAyB,MAAM,KAAAV,MAAA02G,OAAA+pB,gCAAA,aAAArwH,EAAArF,UAAA,KAA+EjF,QAAAsC,KAAA,kEAAgF,OAAM,EAAA69H,EAAAqb,YAAAt+I,SAAAoN,EAAAqY,SAAAw9G,EAAAqb,YAAArb,EAAAqb,eAAyF,MAAM,KAAAthJ,MAAA02G,OAAAkqB,uCAAA,aAAAxwH,EAAArF,UAAA,KAAsFjF,QAAAsC,KAAA,0FAAwG,YAAMpI,KAAAohJ,oCAAAhxI,EAAAqY,SAAAzoB,KAAAkhJ,SAAAwI,mCAAA1pJ,KAAAohJ,kCAAA,OAAAhxI,EAAAqY,SAAoK,MAAM,KAAAzoB,MAAA02G,OAAAoqB,eAAA,aAAA1wH,EAAArF,UAAA,KAA8DjF,QAAAsC,KAAA,kEAAgF,OAAMgI,EAAAqY,SAAAzoB,KAAAmhJ,WAAAS,cAA0C,MAAM,SAAA97I,QAAAsC,KAAA,mBAAAE,EAAA,OAAAtI,KAAAqhJ,aAAA,SAA4E,KAAM,SAAAv7I,QAAAwW,MAAA,+CAAAtc,KAAAqhJ,gBAAyFxzI,SAAA,WAAqB,wBAAA7N,KAAAqhJ,cAA0C7W,iBAAA,SAAAliI,GAA8B29H,EAAAsb,qBAAAj5I,GAAgCiiI,sBAAA,SAAAjiI,GAAmC29H,EAAAwb,qBAAAC,QAAAp5I,EAAA29H,EAAAsb,iBAAAtb,EAAAwb,qBAAAhyH,IAAA,IAAAw2G,EAAAwb,qBAAA7sG,IAAA,MAAAqxF,EAAAwb,qBAAAhyH,IAAAnnB,EAAA29H,EAAAwb,qBAAA7sG,IAAAtsC,KAA0N3I,EAAAD,QAAAumI,4BCDvnO,QAAAyW,GAAAp0I,EAAA8H,GAA4BpQ,KAAA2pJ,SAAA3pJ,KAAAuqF,WAAAvqF,KAAA48I,YAAAxsI,EAAApQ,KAAA28I,YAAAr0I,EAAAtI,KAAA4pJ,YAAA,EAAA5pJ,KAAA0yD,KAAA,KAAsG,GAAAm3F,GAAA3pJ,EAAA,GAA+Bw8I,GAAAj7I,WAAyBypC,YAAAwxG,EAAA1+D,UAAA,SAAA11E,EAAA8H,GAAkD,OAAA1P,GAAA,EAAYA,EAAAV,KAAAuqF,QAAAvnF,SAAsBtC,EAAA,CAAK,GAAAC,GAAAX,KAAAuqF,QAAA7pF,EAAsB,QAAAC,EAAAq9E,oBAAAr9E,EAAAq9E,UAAAr9E,EAAAq9E,UAAAx9E,KAAAG,EAAA2H,EAAA8H,GAAAtK,QAAAsC,KAAAzH,KAAkFkN,SAAA,WAAqB,WAAU6uI,EAAAj7I,UAAA0jJ,QAAA,WAA4C,MAAAnlJ,MAAA0yD,MAAiBgqF,EAAAj7I,UAAAqoJ,eAAA,SAAAxhJ,GAAoDtI,KAAA28I,YAAAr0I,GAAmBo0I,EAAAj7I,UAAAsoJ,eAAA,SAAAzhJ,GAAoDtI,KAAA48I,YAAAt0I,GAAmBo0I,EAAAj7I,UAAAuoJ,eAAA,SAAA1hJ,GAAoDtI,KAAA4pJ,YAAAthJ,GAAmBo0I,EAAAj7I,UAAA+oF,QAAA,WAA4C,KAAAxqF,KAAA2pJ,MAAA3mJ,QAAAhD,KAAA4pJ,aAAA,CAA2C,KAAK,EAAA5pJ,KAAA28I,aAAA38I,KAAA28I,aAAA38I,KAAA2pJ,MAAA3mJ,QAAwDhD,KAAA09E,QAAe,GAAA19E,KAAA48I,aAAA58I,KAAA48I,YAAA58I,KAAA2pJ,MAAA,GAAAM,eAAAjqJ,KAAA09E,SAAA19E,KAAAwqF,aAAiGkyD,EAAAj7I,UAAAklJ,YAAA,WAAgD,MAAA3mJ,MAAA2pJ,MAAA3mJ,QAAyB05I,EAAAj7I,UAAA+yB,IAAA,SAAAlsB,GAAyCtI,KAAAwqF,UAAAxqF,KAAA2pJ,MAAA9mJ,KAAA,GAAAgnJ,GAAAvhJ,GAA8C,QAAA8H,GAAA,EAAYA,EAAApQ,KAAAuqF,QAAAvnF,OAAsBoN,IAAKpQ,KAAAuqF,QAAAn6E,GAAsBokB,IAAAlsB,EAAStI,MAAA0yD,KAAApqD,GAAYo0I,EAAAj7I,UAAAsI,IAAA,SAAAzB,GAAyC,OAAA8H,GAAA,EAAYA,EAAApQ,KAAAuqF,QAAAvnF,OAAsBoN,IAAKpQ,KAAAuqF,QAAAn6E,GAAsBrG,IAAAzB,IAAUo0I,EAAAj7I,UAAAi8E,OAAA,WAA2C,OAAAp1E,GAAAtI,KAAA2pJ,MAAAt9G,QAAAj8B,EAAA,EAAiCA,EAAApQ,KAAAuqF,QAAAvnF,OAAsBoN,IAAKpQ,KAAAuqF,QAAAn6E,GAAsBstE,OAAAp1E,EAAA8C,QAAmBsxI,EAAAj7I,UAAAyoJ,QAAA,SAAA5hJ,EAAA8H,GAA+C,GAAA1P,GAAAV,KAAA2pJ,eAAiBv5I,IAAA1P,EAAA0P,EAAA1P,GAAqB,QAAAC,GAAA,EAAYA,EAAAD,EAAAsC,OAAWrC,IAAgB2H,EAAX5H,EAAAC,GAAWyK,QAAYsxI,EAAAj7I,UAAAq7I,UAAA,SAAAx0I,GAA+CtI,KAAAuqF,QAAA1nF,KAAAyF,IAAqB3I,EAAAD,QAAAg9I,iBCA9mD,QAAAmN,GAAAvhJ,GAAmBtI,KAAAoL,MAAA9C,EAAAtI,KAAAmqJ,YAAAlrI,OAAAC,UAA+C2qI,EAAApoJ,WAAkBypC,YAAA2+G,EAAAI,WAAA,WAAyC,UAAAhrI,OAAAC,UAAAlf,KAAAmqJ,SAAwCt8I,SAAA,WAAqB,WAAUlO,EAAAD,QAAAmqJ,mBCApM,QAAA3M,GAAA50I,EAAA8H,EAAA1P,GAAoC,GAAA48E,EAAA98E,KAAAR,MAAA,GAAAoQ,KAAA,WAAAs9C,YAAA,gDAAuG1tD,MAAAoqJ,WAAA9hJ,EAAAtI,KAAAqqJ,WAAAj6I,EAAApQ,KAAAsqJ,oBAAA5pJ,EAAA,SAAA4H,EAAA8H,GAAwF,OAAA9H,EAAA8H,GAAA,GAAc1P,EAAAV,KAAAuqJ,MAAAn6I,GAAA,IAAAA,GAAApQ,KAAAwqJ,QAAA,GAAAC,GAAAniJ,GAAAtI,KAAA0qJ,QAAA,GAAAD,GAAAniJ,GAAAtI,KAAAuqJ,MAAA,EAAAvqJ,KAAAyuG,SAAA,EAAAzuG,KAAAuqJ,MAAA,IAAAvqJ,KAAAuqJ,MAAAvqJ,KAAAyuG,SAAAzuG,KAAAuqJ,MAAA,EAAAvqJ,KAAAyuG,SAAA,EAAAzuG,KAAA2qJ,WAAA3qJ,KAAA4qJ,WAAA,EAAA5qJ,KAAAwc,OAAA,KAAAxc,KAAAovC,OAAA,KAA4P,GAAAy7G,GAAA3qJ,EAAA,IAAAuqJ,EAAAvqJ,EAAA,IAAAo9E,EAAAp9E,EAAA,GAAqIg9I,GAAAz7I,UAAAV,OAAAkqC,OAAAqyC,EAAA77E,WAAAy7I,EAAAz7I,UAAAypC,YAAAgyG,IAAAz7I,UAAA07I,UAAA,SAAA70I,EAAA8H,GAAoLpQ,KAAAovC,QAAa3iC,SAAAnE,EAAAoW,KAAAtO,IAAmB8sI,EAAAz7I,UAAAqpJ,SAAA,SAAAxiJ,GAAoD,cAAAtI,KAAAovC,kBAAApvC,KAAAovC,OAAA1wB,MAAA,OAAA1e,KAAAovC,OAAA1wB,KAAA1e,KAAAovC,OAAA3iC,SAAAnE,GAAAtI,KAAAovC,OAAA3iC,SAAAjM,KAAAR,KAAAovC,OAAA1wB,KAAApW,KAAsJ40I,EAAAz7I,UAAAikJ,UAAA,WAAoD,MAAA1lJ,MAAAwc,QAAmB0gI,EAAAz7I,UAAA+yB,IAAA,SAAAlsB,GAA+C,GAAAtI,KAAA8qJ,SAAAxiJ,GAAA,CAAqB,GAAAtI,KAAA2qJ,WAAA,QAAA3qJ,MAAAwqJ,QAAAO,OAAAziJ,SAAAtI,KAAA2qJ,UAAyE3qJ,MAAAoqJ,WAAA9hJ,EAAAtI,KAAAwqJ,QAAAQ,gBAAA,GAAAhrJ,KAAAwqJ,QAAAO,OAAAziJ,KAAAtI,KAAA2qJ,aAAA3qJ,KAAA0qJ,QAAAK,OAAAziJ,KAAAtI,KAAA4qJ,YAAA5qJ,KAAAirJ,YAAAjrJ,KAAA0tH,cAA0KwvB,EAAAz7I,UAAAi8E,OAAA,SAAAp1E,GAAkD,GAAAtI,KAAA8qJ,SAAAxiJ,GAAA,CAAqB,GAAAtI,KAAAwqJ,QAAAryH,OAAA7vB,KAAAtI,KAAA2qJ,eAA4C,CAAK,IAAA3qJ,KAAA0qJ,QAAAvyH,OAAA7vB,GAAA,SAAA4iJ,gBAAA,uBAAA5iJ,EAAA,4BAAuGtI,KAAA4qJ,WAAkB5qJ,KAAAirJ,YAAAjrJ,KAAA0tH,cAAmCwvB,EAAAz7I,UAAAwpJ,UAAA,WAAoD,GAAA3iJ,GAAA,WAAiB,OAAAA,IAAAtI,KAAA2qJ,WAAA,IAAA3qJ,KAAA4qJ,WAAA,IAAmDtiJ,GAAAtI,KAAA2qJ,WAAA,IAAA3qJ,KAAA4qJ,WAAA,IAA2C,GAAA5qJ,KAAAuqJ,MAAAjiJ,GAAAtI,KAAA4qJ,WAAA,QAA0C5qJ,MAAAwqJ,QAAAW,YAAAnrJ,KAAA0qJ,QAAAU,uBAAAprJ,KAAA2qJ,aAAA3qJ,KAAA4qJ,aAAgGx6I,EAAA,WAAc,OAAA9H,IAAAtI,KAAA2qJ,WAAA,IAAA3qJ,KAAA4qJ,WAAA,IAAmDtiJ,GAAAtI,KAAA2qJ,WAAA,IAAA3qJ,KAAA4qJ,WAAA,IAA2C,GAAAtiJ,EAAAtI,KAAAuqJ,OAAAvqJ,KAAA2qJ,WAAA,QAA0C3qJ,MAAA0qJ,QAAAW,eAAArrJ,KAAAwqJ,QAAAc,oBAAAtrJ,KAAA4qJ,aAAA5qJ,KAAA2qJ,YAAiG,MAAA3qJ,KAAA2qJ,WAAA3qJ,KAAA4qJ,WAAA5qJ,KAAAyuG,UAAA,CAAqD,GAAAzuG,KAAA4qJ,WAAA,aAAAx6I,GAAA5P,KAAAR,KAA8C,IAAAA,KAAA2qJ,WAAA,aAAAriJ,GAAA9H,KAAAR,KAA8C,IAAAU,GAAAV,KAAA2qJ,WAAA3qJ,KAAA4qJ,UAAsC5qJ,MAAAuqJ,MAAA7pJ,EAAA0P,EAAA5P,KAAAR,MAAAsI,EAAA9H,KAAAR,QAAwCk9I,EAAAz7I,UAAAisH,UAAA,WAAoD,GAAAplH,GAAA8H,EAAA1P,EAAA,GAAAmqJ,GAAAlqJ,EAAA,KAAAV,EAAAD,KAAA4qJ,WAAA5qJ,KAAA2qJ,UAAgF,MAAA1qJ,EAAA,IAAW,GAAAD,KAAA4qJ,WAAA,GAAAx6I,EAAApQ,KAAAwqJ,QAAAQ,cAAA1iJ,EAAAtI,KAAAwqJ,QAAAe,kBAAAvrJ,KAAA2qJ,WAAA,GAAAv6I,EAAApQ,KAAA0qJ,QAAAM,cAAA1iJ,EAAAtI,KAAA0qJ,QAAAa,mBAAAn7I,EAAApQ,KAAA0qJ,QAAAM,cAAA1iJ,EAAAtI,KAAAwqJ,QAAAe,kBAAA7qJ,EAAA+uB,IAAAnnB,EAAA5H,EAAAk0C,IAAAxkC,EAAA1P,EAAA8qJ,QAAAvrJ,IAAAD,KAAAyuG,UAAAzuG,KAAA4qJ,WAAA,QAAAjqJ,GAAAX,KAAAuqJ,MAAA,EAAAjiJ,EAAA,EAAAtI,KAAAuqJ,MAAAn6I,EAAApQ,KAAAsqJ,WAAAhiJ,EAAA8H,GAAA1P,EAAAm7I,OAAAl7I,EAAAD,EAAA+qJ,aAAAzrJ,KAAAwc,OAAA9b,MAAAV,MAAA29E,OAAA39E,KAAAwc,OAAqa,IAAAnQ,GAAArM,KAAA2qJ,WAAA3qJ,KAAA4qJ,UAAsCjqJ,GAAAX,KAAAuqJ,MAAAl+I,EAAArM,KAAAwqJ,QAAAQ,cAAA3+I,EAAArM,KAAAuqJ,MAAAvqJ,KAAA0qJ,QAAAa,iBAAAvrJ,KAAAsqJ,WAAAtqJ,KAAA0qJ,QAAAa,iBAAAvrJ,KAAAwqJ,QAAAQ,eAAAtqJ,EAAAm7I,OAAAl7I,EAAAX,KAAAwc,OAAA9b,EAAAV,KAAA29E,OAAA39E,KAAAwc,UAAkN0gI,EAAAz7I,UAAAsI,IAAA,SAAAzB,GAA+CtI,KAAA69E,QAAA79E,KAAAwc,OAAAq/H,OAAAvzI,IAAmC3I,EAAAD,QAAAw9I,iBCAnyG,QAAA2N,KAAoC7qJ,KAAAyrJ,aAAAzrJ,KAAAwrJ,QAAA,EAAAxrJ,KAAA40C,IAAA50C,KAAAyvB,IAAAzvB,KAAA67I,OAAA,KAAoEgP,EAAAppJ,WAAoCypC,YAAA2/G,EAAAh9I,SAAA,WAAyD,kBAAA7N,KAAAwrJ,QAAA,eAAAxrJ,KAAAyrJ,UAAA,SAAAzrJ,KAAAyvB,IAAA,SAAAzvB,KAAA40C,IAAA,YAAA50C,KAAA67I,SAA0Hl8I,EAAAD,QAAAmrJ,iBCA/T,QAAAa,GAAApjJ,GAA2BtI,KAAAoL,SAAApL,KAAAoL,MAAAvI,KAAAyF,GAAAtI,KAAAupF,KAAA,KAAAvpF,KAAAwpF,MAAA,KAAgE,QAAAihE,GAAAniJ,GAAuBtI,KAAAR,KAAA,KAAAQ,KAAAspF,IAAA,KAAAtpF,KAAA2rJ,OAAA,KAAA3rJ,KAAAoqJ,WAAA9hJ,EAAAtI,KAAA4rJ,aAAA,EAAA5rJ,KAAA6rJ,kBAAA,EAA6GH,EAAAjqJ,WAA0BypC,YAAAwgH,EAAA79I,SAAA,WAA+C,MAAA7N,MAAAoL,MAAAyC,aAA8B48I,EAAAhpJ,WAAuBypC,YAAAu/G,GAAuBA,EAAAhpJ,UAAAqqJ,OAAA,WAAwC,MAAA9rJ,MAAAspF,KAAgBmhE,EAAAhpJ,UAAAupJ,YAAA,WAA6C,cAAAhrJ,KAAAspF,IAAA,KAAAtpF,KAAAspF,IAAAl+E,MAAA,IAA8Cq/I,EAAAhpJ,UAAA8pJ,eAAA,WAAgD,cAAAvrJ,KAAA2rJ,OAAA,KAAA3rJ,KAAA2rJ,OAAAvgJ,MAAA,IAAoDq/I,EAAAhpJ,UAAAsqJ,UAAA,WAA2C,MAAA/rJ,MAAA2rJ,QAAmBlB,EAAAhpJ,UAAAuqJ,qBAAA,WAAsD,MAAAhsJ,MAAA6rJ,mBAA8BpB,EAAAhpJ,UAAAwqJ,eAAA,WAAgD,MAAAjsJ,MAAA4rJ,cAAyBnB,EAAAhpJ,UAAAyqJ,QAAA,WAAyC,MAAAlsJ,MAAA6rJ,kBAAA7rJ,KAAA4rJ,cAAgDnB,EAAAhpJ,UAAA0qJ,QAAA,WAAkP,cAAAnsJ,KAAAR,SAAAsG,SAAAhC,IAAA,uBAAAgC,QAAAhC,IAAA,qBAAA9D,KAAAksJ,UAAA,UAAAlsJ,KAAAisJ,iBAAA,gBAAAjsJ,KAAAgsJ,uBAAA,SAAAhsJ,KAAA8rJ,SAAAj+I,WAAA,YAAA7N,KAAA+rJ,YAAAl+I,gBAAzM,SAAAvF,GAAA8H,EAAA1P,EAAAC,GAAkB,UAAAyP,EAAA,CAAa,OAAAnQ,GAAA,IAAAoM,EAAA,EAAkBA,EAAA3L,IAAI2L,EAAApM,GAAA,IAAY6F,SAAAhC,IAAA7D,EAAA,MAAAU,EAAA,cAAAyP,EAAAhF,MAAAyC,WAAA,YAAAuC,EAAAm5E,MAAAjhF,EAAA8H,EAAAm5E,KAAA7oF,EAAA,iBAAA0P,EAAAo5E,OAAAlhF,EAAA8H,EAAAo5E,MAAA9oF,EAAA,aAAwIV,KAAAR,KAAA,YAAmSirJ,EAAAhpJ,UAAA0pJ,YAAA,SAAA7iJ,GAA8CtI,KAAAosJ,UAAA9jJ,EAAAtI,KAAAspF,MAA2BmhE,EAAAhpJ,UAAA4pJ,eAAA,SAAA/iJ,GAAiDtI,KAAAosJ,UAAA9jJ,EAAAtI,KAAA2rJ,SAA8BlB,EAAAhpJ,UAAAspJ,OAAA,SAAAziJ,GAAyCtI,KAAAosJ,UAAA9jJ,EAAAtI,KAAAR,OAA4BirJ,EAAAhpJ,UAAA2qJ,UAAA,SAAA9jJ,EAAA8H,GAA8C,GAAA1P,GAAA,WAAiB,GAAA0P,GAAA,GAAAs7I,GAAApjJ,EAA4B,eAAAtI,KAAAspF,KAAAtpF,KAAAoqJ,WAAApqJ,KAAAspF,IAAAl+E,MAAA,GAAAgF,EAAAhF,MAAA,SAAApL,KAAAspF,IAAAl5E,IAAA,OAAApQ,KAAA2rJ,QAAA3rJ,KAAAoqJ,WAAAh6I,EAAAhF,MAAA,GAAApL,KAAA2rJ,OAAAvgJ,MAAA,SAAApL,KAAA2rJ,OAAAv7I,KAAoL,WAAApQ,KAAAR,KAAA,MAAAQ,MAAAR,KAAAkB,EAAAF,KAAAR,gBAAA4rJ,aAAA,EAA4E,QAAAjrJ,GAAA,KAAAV,EAAAmQ,EAAA/D,EAAA,EAAA20B,EAAA,SAAA5wB,GAAqC,MAAAA,KAAA9H,GAAc,OAAArI,GAAS,CAAE,QAAAoM,EAAArM,KAAAoqJ,WAAA9hJ,EAAArI,EAAAmL,MAAA,iBAAAnL,EAAAmL,MAAAskC,KAAA1O,KAAA/gC,EAAAmL,MAAAvI,KAAAyF,KAAAtI,KAAA6rJ,mBAAkHlrJ,GAAAV,IAAAoM,EAAA,EAAApM,EAAAspF,KAAAtpF,EAAAupF,QAAyBxpF,KAAA4rJ,aAAAv/I,EAAA,EAAA1L,EAAA4oF,KAAA7oF,EAAAF,KAAAR,MAAAW,EAAA6oF,MAAA9oF,EAAAF,KAAAR,OAAiEyqJ,EAAAhpJ,UAAAiwB,OAAA,SAAAppB,GAAyC,OAAA8H,GAAA1P,EAAAV,KAAAR,KAAAmB,EAAA,KAAAV,EAAA,SAAAmQ,GAA2C,MAAAA,KAAA9H,GAAc,OAAA5H,GAAS,CAAE,QAAA0P,EAAApQ,KAAAoqJ,WAAA9hJ,EAAA5H,EAAA0K,MAAA,WAAA1K,GAAA0K,MAAAskC,KAAAzvC,IAAAS,EAAAu+C,OAAAt+C,EAAAD,GAAA,IAAoFC,GAAAD,IAAA0P,EAAA,EAAA1P,EAAA6oF,KAAA7oF,EAAA8oF,MAAyB,aAAYihE,EAAAhpJ,UAAA4qJ,YAAA,SAAA/jJ,GAA8C,OAAA8H,GAAA,KAAe,OAAA9H,EAAAkhF,OAAep5E,EAAA9H,MAAAkhF,KAAe,OAAAlhF,GAAA22C,OAAA7uC,EAAA9H,GAAoBmiJ,EAAAhpJ,UAAA6qJ,WAAA,SAAAhkJ,GAA6C,OAAA8H,GAAA,KAAe,OAAA9H,EAAAihF,MAAcn5E,EAAA9H,MAAAihF,IAAc,OAAAjhF,GAAA22C,OAAA7uC,EAAA9H,GAAoBmiJ,EAAAhpJ,UAAA2pJ,kBAAA,WAAmD,KAAK,OAAAprJ,KAAA2rJ,QAAmB,WAAa,IAAArjJ,GAAAtI,KAAA2rJ,OAAAvgJ,MAAA,EAA2B,OAAApL,MAAAm4B,OAAA7vB,MAAwBmiJ,EAAAhpJ,UAAA6pJ,eAAA,WAAgD,KAAK,OAAAtrJ,KAAAspF,KAAgB,WAAa,IAAAhhF,GAAAtI,KAAAspF,IAAAl+E,MAAA,EAAwB,OAAApL,MAAAm4B,OAAA7vB,MAAwBmiJ,EAAAhpJ,UAAA02B,OAAA,SAAA7vB,GAAyC,GAAA8H,GAAA,KAAA1P,EAAA,SAAA4H,EAAA8H,EAAA1P,GAA6B,OAAA0P,IAAAm5E,OAAAjhF,EAAA8H,EAAAm5E,KAAA7oF,EAAA0P,EAAAo5E,MAAA9oF,EAAAV,KAAAR,KAAAkB,EAA4T,YAAA0P,EAAApQ,KAAA0xB,OAAAppB,IAAA,QAAsC,MAAA8H,EAAAhF,MAAApI,OAAA,MAAAoN,GAAAhF,MAAAZ,OAAA4F,EAAAhF,MAAArG,QAAAuD,GAAA,KAAAtI,KAAA6rJ,oBAA4F,MAAA7rJ,KAAA4rJ,aAAA,OAAAx7I,EAAAm5E,MAAA,OAAAn5E,EAAAo5E,MAAA9oF,EAAAF,KAAAR,KAAAoQ,IAAA6uC,OAAA,UAAkF,WAAA7uC,EAAAm5E,KAAA7oF,EAAAF,KAAAR,KAAAoQ,IAAA6uC,OAAA7uC,EAAAo5E,WAAsD,WAAAp5E,EAAAo5E,MAAA9oF,EAAAF,KAAAR,KAAAoQ,IAAA6uC,OAAA7uC,EAAAm5E,UAAsD,CAAK,OAAAtpF,GAAAmQ,EAAAm5E,KAAAl9E,EAAA+D,EAAqB,OAAAnQ,EAAAupF,MAAen9E,EAAApM,MAAAupF,OAAen9E,IAAA+D,EAAA/D,EAAAk9E,KAAAtpF,EAAAspF,KAAAl9E,EAAAm9E,MAAAvpF,EAAAspF,KAAAn5E,EAAAhF,MAAAihC,QAAAj8B,EAAAhF,MAAAgF,EAAAhF,MAAAb,OAAAtK,EAAAmL,OAAmF,MAAptB,UAAA9C,GAAe,cAAAtI,KAAAR,UAAAQ,KAAA2rJ,OAAA3rJ,KAAAspF,IAAA,WAAAtpF,KAAAoqJ,WAAApqJ,KAAAspF,IAAAl+E,MAAA,GAAA9C,EAAA8C,MAAA,MAAApL,KAAAspF,IAAAtpF,KAAAqsJ,YAAArsJ,KAAAR,YAAA,IAAAQ,KAAAoqJ,WAAApqJ,KAAA2rJ,OAAAvgJ,MAAA,GAAA9C,EAAA8C,MAAA,MAAApL,KAAA2rJ,OAAA3rJ,KAAAssJ,WAAAtsJ,KAAAR,UAAqsBgB,KAAAR,KAAAoQ,OAAyBzQ,EAAAD,QAAA+qJ,mBCA1yH,QAAA7M,GAAAt1I,GAAkBg1E,EAAA98E,KAAAR,WAAA2vH,IAAA,EAAA3vH,KAAAwtH,IAAA,EAAAxtH,KAAA4iE,MAAA,EAAA5iE,KAAAovC,OAAA,KAAApvC,KAAAusJ,mBAAAjkJ,EAAA,SAAAA,GAA8G,MAAAA,IAASA,EAAkB,GAAAg1E,GAAAp9E,EAAA,GAAmC09I,GAAAn8I,UAAAV,OAAAkqC,OAAAqyC,EAAA77E,WAAAm8I,EAAAn8I,UAAAypC,YAAA0yG,IAAAn8I,UAAA+yB,IAAA,SAAAlsB,IAAoH,OAAAtI,KAAAovC,iBAAApvC,KAAAovC,QAAApvC,KAAAovC,OAAA9mC,MAAAtI,KAAAwtH,KAAA3pH,SAAA7D,KAAAusJ,UAAAjkJ,MAAAtI,KAAA4iE,MAAA5iE,KAAAwsJ,KAAAxsJ,QAAiI49I,EAAAn8I,UAAA07I,UAAA,SAAA70I,GAAuCtI,KAAAovC,OAAA9mC,GAAcs1I,EAAAn8I,UAAAi8E,OAAA,SAAAp1E,IAAoC,OAAAtI,KAAAovC,iBAAApvC,KAAAovC,QAAApvC,KAAAovC,OAAA9mC,MAAAtI,KAAAwtH,KAAA3pH,SAAA7D,KAAAusJ,UAAAjkJ,MAAAtI,KAAA4iE,MAAA5iE,KAAAwsJ,KAAAxsJ,QAAiI49I,EAAAn8I,UAAA+qJ,KAAA,WAAiCxsJ,KAAA4iE,MAAA,IAAA5iE,KAAA2vH,IAAA3vH,KAAAwtH,IAAAxtH,KAAA4iE,MAAA5iE,KAAA29E,OAAA39E,KAAA2vH,OAAmEiuB,EAAAn8I,UAAAikJ,UAAA,WAAsC,MAAA1lJ,MAAA2vH,KAAgBhwH,EAAAD,QAAAk+I,iBCAvyB,QAAA6O,GAAAnkJ,EAAA8H,EAAA1P,EAAAC,EAAAV,GAAsCD,KAAAk2F,GAAA5tF,EAAAtI,KAAA0sJ,uBAAAt8I,EAAApQ,KAAA2sJ,mCAAAjsJ,EAAAV,KAAA4sJ,iCAAAjsJ,EAAAX,KAAA6sJ,8BAAA5sJ,EAAAqI,EAAA4/B,kBAAAloC,KAAAk2F,GAAAhuD,iBAAA,eAAAloC,KAAA8sJ,qBAAAz/I,KAAArN,eAAAk2F,GAAAhuD,iBAAA,2BAAAloC,KAAA+sJ,iCAAA1/I,KAAArN,eAAAk2F,GAAAhuD,iBAAA,uBAAAloC,KAAAgtJ,+BAAA3/I,KAAArN,eAAAk2F,GAAAhuD,iBAAA,oBAAAloC,KAAAitJ,4BAAA5/I,KAAArN,WAAAsI,EAAA0gF,cAAAhpF,KAAAk2F,GAAAlN,YAAA,iBAAAhpF,KAAA8sJ,qBAAAz/I,KAAArN,YAAAk2F,GAAAlN,YAAA,6BAAAhpF,KAAA+sJ,iCAAA1/I,KAAArN,YAAAk2F,GAAAlN,YAAA,yBAAAhpF,KAAAgtJ,+BAAA3/I,KAAArN,YAAAk2F,GAAAlN,YAAA,sBAAAhpF,KAAAitJ,4BAAA5/I,KAAArN,QAAi6BysJ,EAAAhrJ,UAAAqrJ,qBAAA,SAAAxkJ,GAA6D,IAAItI,KAAA0sJ,uBAAApkJ,EAAAtI,KAAAk2F,IAAuC,MAAA5tF,GAASxC,QAAAhC,IAAA,gCAAAwE,KAAgDmkJ,EAAAhrJ,UAAAsrJ,iCAAA,SAAAzkJ,GAA0E,IAAItI,KAAA2sJ,mCAAArkJ,EAAAtI,KAAAk2F,IAAmD,MAAA5tF,GAASxC,QAAAhC,IAAA,4CAAAwE,KAA4DmkJ,EAAAhrJ,UAAAurJ,+BAAA,SAAA1kJ,GAAwE,IAAItI,KAAA4sJ,iCAAAtkJ,EAAAtI,KAAAk2F,IAAiD,MAAA5tF,GAASxC,QAAAhC,IAAA,0CAAAwE,KAA0DmkJ,EAAAhrJ,UAAAwrJ,4BAAA,SAAA3kJ,GAAqE,IAAItI,KAAA6sJ,8BAAAvkJ,EAAAtI,KAAAk2F,IAA8C,MAAA5tF,GAASxC,QAAAhC,IAAA,uCAAAwE,KAAuD3I,EAAAD,QAAA+sJ,+BCC5iD1rJ,QAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAAinI,kBAA6B,IAAAzwF,GAAA,WAA4B,QAAAr0C,KAAA5B,GAAgB,OAAA2B,GAAA,EAAYA,EAAA3B,EAAA+C,OAAWpB,IAAA,CAAK,GAAAR,GAAAnB,EAAA2B,EAAWR,GAAAF,WAAAE,EAAAF,eAAAE,EAAAH,gBAAA,SAAAG,OAAA4mC,aAAAjnC,OAAAC,eAAAa,EAAAT,EAAAqP,IAAArP,IAA+G,gBAAAnB,EAAA2B,EAAAR,GAAuB,MAAAQ,IAAAC,EAAA5B,EAAAwB,UAAAG,GAAAR,GAAAS,EAAA5B,EAAAmB,GAAAnB,MAAwCitJ,EAAAhtJ,EAAA,IAAAitJ,EAAAjtJ,EAAA,IAAAktJ,EAAAltJ,EAAA,IAAAmtJ,EAAAntJ,EAAA,IAAAotJ,EAAAptJ,EAAA,IAAAqtJ,EAAArtJ,EAAA,IAAA83C,EAAA93C,EAAA,IAAAstJ,GAAuU3L,IAAA,MAAA4L,WAAA,cAAkC9mB,EAAA,WAA2C,QAAA9kI,eAAn1BA,EAAA5B,GAA8B,KAAA4B,YAAA5B,IAAA,SAAAwO,WAAA,uCAAk0BzO,KAAA6B,GAAA7B,KAAA0tJ,eAAAH,EAAAl3G,UAAAr2C,KAAA2tJ,eAAA,GAAAT,GAAAU,eAAA5tJ,KAAA0tJ,aAAA1tJ,KAAA6tJ,YAAA,GAAAP,GAAAQ,YAAA9tJ,KAAA+tJ,gBAAA,EAAA/tJ,KAAAguJ,WAAAR,EAAA3L,IAAA2L,EAAAC,YAAAztJ,KAAAuhG,UAAAvhG,KAAA0uH,IAAA,KAAA1uH,KAAAiuJ,eAAA,KAA+T,MAAA/3G,GAAAr0C,IAAwB4O,IAAA,QAAArF,MAAA,SAAAvJ,EAAA5B,GAAgC,GAAAD,KAAA0tJ,YAAAn3G,cAAAg3G,EAAAj3G,UAAAC,YAAAzxC,QAAAD,gBAAA6xC,mBAAA12C,KAAAitF,WAAAprF,EAAA7B,KAAAyM,SAAAxM,GAAAD,KAAAuhG,UAAAvhG,KAAA+tJ,gBAAA,IAAAlsJ,GAAA,CAAiM7B,KAAAkuJ,gBAAA,EAAAluJ,KAAAiuJ,eAAA,GAAAZ,GAAAc,cAA8E,IAAAvsJ,IAAOoc,KAAA,UAAA84B,GAAA92C,KAAA0tJ,YAAA52G,GAAAC,UAAA/2C,KAAA0tJ,YAAA32G,UAAAq3G,UAAApuJ,KAAA0tJ,YAAAn3G,YAAA83G,aAAAruJ,KAAA0tJ,YAAA3nJ,eAAgK/F,MAAAiuJ,eAAAz5H,IAAA,eAAA5yB,GAAA5B,KAAA6tJ,YAAAj8H,QAAA5xB,KAAAuhG,UAAAvhG,KAAAsuJ,aAAoG79I,IAAA,SAAArF,MAAA,WAA8B,GAAAvJ,GAAA7B,IAAWA,MAAAuhG,QAAAvhG,KAAA2tJ,eAAAvrI,QAAApiB,KAAAitF,YAAAl9B,KAAA,WAA0EluD,EAAA0/F,QAAA1/F,EAAA0sJ,iBAAAx+F,KAAA,WAA6CluD,EAAAw2B,QAAS,SAAAp4B,GAAa4B,EAAAw2B,UAAW,SAAAp4B,GAAa4B,EAAAosJ,eAAAtf,QAAA1uI,GAAA4B,EAAAosJ,eAAAO,oBAAvpC,GAAupC3sJ,EAAAw2B,QAAAx2B,EAAA8rJ,eAAA9nI,aAAA7Y,WAAA,WAA+InL,EAAAysJ,UAAW,SAAU79I,IAAA,OAAArF,MAAA,WAA4B,GAAAvJ,GAAA7B,IAAW,IAAAA,KAAA0tJ,YAAAn3G,cAAAg3G,EAAAj3G,UAAAC,YAAAzxC,MAAA9E,KAAAuhG,OAAA,CAA0FvhG,KAAAuhG,UAAAvhG,KAAAyuJ,gBAAAzuJ,KAAAyuJ,eAAAC,WAAoE,IAAAzuJ,GAAAD,KAAA6tJ,YAAAx1H,MAA8Br4B,MAAAiuJ,eAAAz5H,IAAA,eAAAv0B,GAAAD,KAAA2tJ,eAAAgB,gBAAA5+F,KAAA,SAAA9vD,GAA+F4B,EAAAosJ,eAAAz5H,IAAA,MAAAv0B,GAAA4B,EAAA8rJ,eAAA9nI,aAAAhkB,EAAA+sJ,eAA4E,SAAA3uJ,GAAa4B,EAAAosJ,eAAAtf,QAAA1uI,GAAA4B,EAAA8rJ,eAAA9nI,aAAAhkB,EAAA+sJ,oBAAgFn+I,IAAA,cAAArF,MAAA,WAAmC,GAAAvJ,GAAA7B,KAAAiuJ,eAAAY,YAAuC7uJ,MAAAyM,UAAAzM,KAAAyM,SAAA5K,GAAA7B,KAAAiuJ,eAAA,QAA4Dx9I,IAAA,aAAArF,MAAA,WAAkCpL,KAAA+tJ,iBAAA,EAAA/tJ,KAAAq4B,UAAuC5nB,IAAA,eAAArF,MAAA,WAAoCpL,KAAA+tJ,iBAAA,KAA2Bt9I,IAAA,QAAArF,MAAA,WAA6B,MAAApL,MAAAiuJ,eAAAjuJ,KAAAiuJ,eAAA/qE,QAAA,QAA+DzyE,IAAA,kBAAArF,MAAA,WAAuC,IAAIpL,KAAA2tJ,eAAA9nI,aAAiC,MAAAhkB,QAAc4O,IAAA,iBAAArF,MAAA,WAAsC,GAAAvJ,GAAA7B,IAAW,IAAAA,KAAAkuJ,iBAAAluJ,KAAAguJ,UAAAhrJ,OAAA,UAAAg1C,GAAA,SAAAn2C,EAAA5B,GAAgF4B,KAAM,IAAA5B,GAAAD,KAAAguJ,UAAAhuJ,KAAAkuJ,iBAAAtsJ,EAAA,IAAkD,QAAA3B,GAAU,IAAAutJ,GAAA3L,IAAAjgJ,EAAA,GAAAurJ,GAAA2B,QAAA9uJ,KAAA2tJ,eAAgE,MAAM,KAAAH,GAAAC,WAAA7rJ,EAAA,GAAAwrJ,GAAA2B,eAAA/uJ,KAAA2tJ,eAAA3tJ,KAAA0uH,IAA8F,MAAM,mBAAA12E,GAAA,SAAAn2C,EAAAD,GAAyCA,EAAA,GAAA8J,OAAA,iBAAAzL,MAAmC,MAAAD,MAAAyuJ,eAAA7sJ,EAAA5B,KAAAuhG,OAAA3/F,EAAAgwB,QAAAm+B,KAAA,WAAmE,MAAAluD,GAAAmtJ,kBAAA/uJ,EAAA2B,EAAAitJ,cAAAhtJ,EAAAqsJ,iBAAA,EAAArsJ,EAAA4sJ,eAAA,KAAA5sJ,EAAA0sJ,kBAA2G,SAAAntJ,GAAa,MAAAS,GAAAmtJ,kBAAA/uJ,EAAA2B,EAAAitJ,aAAAztJ,GAAAS,EAAAqsJ,iBAAA,EAAArsJ,EAAA4sJ,eAAA,KAAA5sJ,EAAA0sJ,mBAA6G,GAAAv2G,GAAA,SAAAn2C,EAAA5B,GAA4BA,EAAA,GAAAyL,OAAA,0DAAsE+E,IAAA,oBAAArF,MAAA,SAAAvJ,EAAA5B,GAA4C,OAAA8K,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,UAAAlJ,GAAA2rJ,EAAA3L,MAAA7hJ,KAAA0uH,IAAAzuH,EAAAgvJ,QAAAjvJ,KAAAiuJ,gBAAAjuJ,KAAAiuJ,eAAAz5H,IAAA3yB,EAAA5B,OAA+J4B,IAAQnC,GAAAinI,2CCA57H5lI,QAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAAkuJ,qBAAgC,IAAA13G,GAAA,WAA4B,QAAAj2C,KAAA4B,GAAgB,OAAAT,GAAA,EAAYA,EAAAS,EAAAmB,OAAW5B,IAAA,CAAK,GAAAmH,GAAA1G,EAAAT,EAAWmH,GAAArH,WAAAqH,EAAArH,eAAAqH,EAAAtH,gBAAA,SAAAsH,OAAAy/B,aAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAA+G,gBAAA1G,EAAAT,EAAAmH,GAAuB,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MAAwCqtJ,EAAAhvJ,EAAA,IAAAivJ,EAAAjvJ,EAAA,IAAAqtJ,EAAArtJ,EAAA,IAAA83C,EAAA93C,EAAA,IAAA0tJ,EAAA,WAAyR,QAAA3tJ,GAAA4B,aAA3tB5B,EAAA4B,GAA8B,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,uCAA2sBzO,KAAAC,GAAAD,KAAAmf,QAAAnf,KAAAovJ,aAAA,GAAAD,GAAAE,gBAAAxtJ,GAA+F,MAAAq0C,GAAAj2C,IAAwBwQ,IAAA,QAAArF,MAAA,WAA6BpL,KAAAitF,WAAA,KAAAjtF,KAAAsvJ,OAAA,KAAAtvJ,KAAAuvJ,OAAA,KAAAvvJ,KAAAwvJ,YAAA,KAAAxvJ,KAAAyvJ,gBAAA,KAAAzvJ,KAAA2zE,cAAA,KAAA3zE,KAAA0vJ,uBAA2Jj/I,IAAA,qBAAArF,MAAA,SAAAnL,GAA2CD,KAAAyvJ,gBAAAxvJ,KAA0BwQ,IAAA,mBAAArF,MAAA,SAAAnL,GAAyCD,KAAA2zE,cAAA1zE,KAAwBwQ,IAAA,OAAArF,MAAA,SAAAnL,GAA6B,GAAAD,KAAAwvJ,YAAA,IAAwBxvJ,KAAAwvJ,YAAAxrI,KAAA/jB,GAAyB,MAAAA,GAASD,KAAA2vJ,eAAA1vJ,OAAuBD,MAAA2vJ,eAAA,GAAAjkJ,OAAA,uBAA0D+E,IAAA,iBAAArF,MAAA,SAAAnL,GAAuCD,KAAA2zE,eAAA3zE,KAAA2zE,cAAA1zE,MAA6CwQ,IAAA,cAAArF,MAAA,SAAAnL,EAAA4B,EAAAT,GAAwCnB,EAAAioC,iBAAAjoC,EAAAioC,iBAAArmC,EAAAT,EAAAiM,KAAArN,UAAAC,EAAA+oF,cAAAnnF,EAAA,KAAAA,EAAA5B,EAAA+oF,YAAAnnF,EAAAT,EAAAiM,KAAArN,WAAoHyQ,IAAA,UAAArF,MAAA,SAAAnL,GAAgC,GAAA4B,GAAA7B,IAAWA,MAAAmf,OAAa,IAAA/d,GAAA,GAAA42C,GAAA,SAAA/3C,EAAAmB,GAAgCS,EAAA8/F,UAAA1hG,EAAA4B,EAAA+/F,SAAAxgG,GAA6BpB,MAAAitF,WAAAhtF,CAAkB,IAAAsI,GAAA,IAAW,KAAI,GAAAwtE,kBAAAxtE,EAAAwtE,kBAAA3sC,wBAAA7gC,EAAA6gC,wBAAA40D,qBAAAz1F,EAAAy1F,qBAAAn5F,eAAAkxE,oBAAAxtE,EAAA1D,OAAAkxE,oBAAAxtE,EAAA,MAAAvI,MAAA4hG,SAAA,GAAAl2F,OAAA,gCAAAtK,EAA0Q,MAAAnB,GAAS,MAAAD,MAAA4hG,SAAA3hG,GAAAmB,EAA0B,GAAmCkH,IAAI0tF,mBAAA,MAAA/I,WAAAjtF,KAAAitF,WAAqD,KAAIjtF,KAAAsvJ,OAAA,GAAA/mJ,GAAAD,GAAAtI,KAAAuvJ,OAAA,GAAAhnJ,GAAAD,GAA0C,MAAArI,GAAS,MAAAD,MAAA4vJ,iBAAA3vJ,GAAAmB,EAAkC,MAAApB,MAAA6vJ,gBAAA7iJ,WAAA,iBAAkDnL,GAAAguJ,gBAAAhuJ,EAAA+tJ,iBAAA,GAAAlkJ,OAAA,wBAA9xD,KAA22D1L,KAAAwvJ,YAAAxvJ,KAAAsvJ,OAAAQ,kBAAA,eAA7SC,WAAAC,eAAA,IAA6ShwJ,KAAAwvJ,YAAAS,WAAA,cAAAjwJ,KAAAkwJ,YAAAlwJ,KAAAwvJ,YAAA,iBAAAvvJ,GAAqL4B,EAAA8tJ,eAAA1vJ,GAAA4B,EAAA+tJ,iBAAA3vJ,KAA0CD,KAAAkwJ,YAAAlwJ,KAAAuvJ,OAAA,uBAAAtvJ,GAAyD,GAAAmB,GAAAnB,EAAAkkI,OAAgBtiI,GAAAquJ,YAAA9uJ,EAAA,gBAAAnB,GAAmC4B,EAAA8/F,WAAA9/F,EAAA8/F,cAA2B9/F,EAAAquJ,YAAA9uJ,EAAA,iBAAAnB,GAAsC4B,KAAAgkB,YAAAhkB,EAAAgkB,eAAgChkB,EAAAquJ,YAAA9uJ,EAAA,mBAAAnB,GAAwC4B,EAAA4tJ,iBAAA5tJ,EAAA4tJ,gBAAAxvJ,EAAAyQ,QAA6C7O,EAAAquJ,YAAA9uJ,EAAA,iBAAAnB,GAAsC4B,EAAA8xE,eAAA9xE,EAAA8xE,cAAA1zE,GAAA4B,EAAA+tJ,iBAAA3vJ,OAA4DD,KAAAkwJ,YAAAlwJ,KAAAsvJ,OAAA,wBAAArvJ,GAA0D4B,EAAAsuJ,eAAAtuJ,EAAAytJ,OAAArvJ,KAA6BD,KAAAkwJ,YAAAlwJ,KAAAsvJ,OAAA,oCAAArvJ,GAAsE4B,EAAAuuJ,iBAAAvuJ,EAAAytJ,OAAArvJ,KAA+BD,KAAAkwJ,YAAAlwJ,KAAAuvJ,OAAA,wBAAAtvJ,GAA0D4B,EAAAsuJ,eAAAtuJ,EAAA0tJ,OAAAtvJ,KAA6BD,KAAAkwJ,YAAAlwJ,KAAAuvJ,OAAA,oCAAAtvJ,GAAsE4B,EAAAuuJ,iBAAAvuJ,EAAA0tJ,OAAAtvJ,KAA+BD,KAAAsvJ,OAAAnyD,cAAAptC,KAAA,SAAA9vD,EAAAmB,GAA+CS,EAAAwuJ,qBAAApwJ,IAA0B,SAAAA,GAAa4B,EAAAyuJ,mBAAAzuJ,EAAAytJ,OAAArvJ,KAAiCmB,KAAOqP,IAAA,mBAAArF,MAAA,SAAAnL,GAAyCD,KAAA4hG,WAAA5hG,KAAA4hG,SAAA3hG,GAAAD,KAAA6lB,iBAAuDpV,IAAA,aAAArF,MAAA,WAAkC,GAAAgZ,aAAApkB,KAAA6vJ,iBAAA7vJ,KAAAsvJ,OAAA,IAAsDtvJ,KAAAsvJ,OAAAh+H,QAAoB,MAAArxB,IAAU,GAAAD,KAAAsvJ,OAAA,KAAAtvJ,KAAAuvJ,OAAA,IAAoCvvJ,KAAAuvJ,OAAAj+H,QAAoB,MAAArxB,IAAUD,KAAAuvJ,OAAA,KAAAvvJ,KAAA2hG,UAAA,KAAA3hG,KAAA4hG,SAAA,QAA2DnxF,IAAA,UAAArF,MAAA,SAAAnL,GAAgC,MAAAA,KAAAD,KAAAsvJ,OAAA,qBAA4C7+I,IAAA,aAAArF,MAAA,SAAAnL,GAAmC,MAAAA,KAAAD,KAAAsvJ,OAAAtvJ,KAAAuvJ,OAAAvvJ,KAAAsvJ,UAAkD7+I,IAAA,qBAAArF,MAAA,SAAAnL,EAAA4B,GAA6C7B,KAAA4vJ,iBAAA/tJ,MAA4B4O,IAAA,sBAAArF,MAAA,SAAAnL,EAAA4B,GAA8C7B,KAAA4vJ,iBAAA/tJ,MAA4B4O,IAAA,uBAAArF,MAAA,SAAAnL,GAA6C,GAAA4B,GAAA7B,IAAWA,MAAAsvJ,OAAAxzD,oBAAA77F,GAAA8vD,KAAA,WAAmDluD,EAAA0uJ,kBAAA1uJ,EAAAytJ,SAA8B,SAAArvJ,GAAa4B,EAAA2uJ,6BAAA3uJ,EAAAytJ,OAAArvJ,KAA2CD,KAAAuvJ,OAAA/yD,qBAAAv8F,GAAA8vD,KAAA,WAAsDluD,EAAA4uJ,mBAAA5uJ,EAAA0tJ,SAA+B,SAAAtvJ,GAAa4B,EAAA6uJ,mCAAA7uJ,EAAA0tJ,OAAAtvJ,KAAiDD,KAAAuvJ,OAAA7xD,eAAA3tC,KAAA,SAAA9vD,GAA8C4B,EAAA8uJ,sBAAA1wJ,IAA2B,SAAAA,GAAa4B,EAAA+uJ,oBAAA/uJ,EAAA0tJ,OAAAtvJ,QAAuCwQ,IAAA,oBAAArF,MAAA,SAAAnL,OAA8CwQ,IAAA,qBAAArF,MAAA,SAAAnL,OAA+CwQ,IAAA,+BAAArF,MAAA,SAAAnL,EAAA4B,GAAuD7B,KAAA4vJ,iBAAA/tJ,MAA4B4O,IAAA,qCAAArF,MAAA,SAAAnL,EAAA4B,GAA6D7B,KAAA4vJ,iBAAA/tJ,MAA4B4O,IAAA,wBAAArF,MAAA,SAAAnL,GAA8C,GAAA4B,GAAA7B,IAAWA,MAAAuvJ,OAAAzzD,oBAAA77F,GAAA8vD,KAAA,WAAmDluD,EAAA0uJ,kBAAA1uJ,EAAA0tJ,SAA8B,SAAAtvJ,GAAa4B,EAAA2uJ,6BAAA3uJ,EAAA0tJ,OAAAtvJ,KAA2CD,KAAAsvJ,OAAA9yD,qBAAAv8F,GAAA8vD,KAAA,WAAsDluD,EAAA4uJ,mBAAA5uJ,EAAAytJ,SAA+B,SAAArvJ,GAAa4B,EAAA6uJ,mCAAA7uJ,EAAAytJ,OAAArvJ,QAAsDwQ,IAAA,iBAAArF,MAAA,SAAAnL,EAAA4B,GAAyC,GAAAT,GAAApB,IAAW,IAAA6B,EAAAurC,UAAA,CAAgB,GAAA7kC,GAAA,GAAA2mJ,GAAA2B,mBAAAhvJ,EAAAurC,UAA8DntC,IAAAD,KAAAsvJ,QAAAtvJ,KAAAovJ,aAAAv4G,UAAA02G,EAAAj3G,UAAAG,aAAAD,SAAAjuC,EAAAuoJ,YAAAvoJ,EAAAwoJ,uBAAA/wJ,KAAA0vJ,iBAAAsB,qBAAAzoJ,EAAA0oJ,uBAAAjxJ,KAAA0vJ,iBAAAwB,qBAAA3oJ,EAAA4oJ,uBAAAnxJ,KAAA0vJ,iBAAA0B,sBAAA7oJ,EAAA8oJ,sBAAArxJ,KAAA0vJ,iBAAA4B,mBAAA/oJ,EAAAuoJ,WAAA9wJ,KAAAuxJ,WAAAtxJ,GAAAi3F,gBAAAr1F,EAAAurC,WAAA2iB,KAAA,WAAoc3uD,EAAAowJ,yBAAAvxJ,IAA8B,SAAA4B,GAAaT,EAAAqwJ,uBAAAxxJ,EAAA4B,EAAA0G,EAAAuoJ,iBAAgDrgJ,IAAA,2BAAArF,MAAA,SAAAnL,OAAqDwQ,IAAA,yBAAArF,MAAA,SAAAnL,EAAA4B,EAAAT,GAAmDA,GAAApB,KAAA4vJ,iBAAA/tJ,MAA+B4O,IAAA,mBAAArF,MAAA,SAAAnL,EAAA4B,GAA2C,GAAAT,GAAApB,KAAAuI,EAAA,KAAmBtI,KAAAsI,EAAAtI,EAAAqrF,oBAAA,WAAA/iF,GAAAvI,KAAA4vJ,iBAAA,GAAAlkJ,OAAA,6BAAAnD,GAAAvI,KAAA0xJ,WAAA1xJ,KAAA0xJ,SAAA1kJ,WAAA,iBAA8J5L,GAAAswJ,SAAAtwJ,EAAAwuJ,iBAAA,GAAAlkJ,OAAA,iBAAnoL,MAAksL,cAAAnD,GAAA,cAAAA,SAAAvI,MAAA0xJ,YAAkFjhJ,IAAA,gBAAArF,MAAA,WAAqC,GAAAnL,GAAAD,IAAW,WAAAg4C,GAAA,SAAAn2C,EAAAT,GAAiC,GAAAmH,GAAAtI,EAAAgtF,WAAAvsF,KAAA4H,KAAAjI,QAAsC,KAAI,OAAAuB,GAAAd,EAAAyH,EAAA2uB,OAAAC,cAAiCz2B,GAAAkB,EAAAd,EAAAs2B,QAAAC,MAAuB32B,KAAA,CAAM,GAAAJ,GAAAsB,EAAAwJ,KAAc7C,GAAA7G,eAAApB,aAAAysF,YAA0C,MAAA9sF,GAASqI,KAAAjI,EAAAJ,EAAS,QAAQ,KAAIS,GAAAI,EAAA22B,QAAA32B,EAAA22B,SAAyB,QAAQ,GAAAnvB,EAAA,KAAAjI,IAAc,GAAAM,IAAOgxJ,cAAA,GAAAC,cAAA,GAAAC,cAAA,GAAA5kE,WAAA1kF,EAAAupJ,iBAAAC,iBAAAX,oBAAAF,oBAAAF,oBAAAM,iBAAAU,mBAAAC,mBAAAC,mBAAAC,gBAAyP,QAAAz9H,KAAAz0B,GAAAyvJ,iBAAAzvJ,EAAAyvJ,iBAAAhuJ,eAAAgzB,KAAA/zB,EAAA+zB,GAAAz0B,EAAAyvJ,iBAAAh7H,GAAmGz0B,GAAAqvJ,OAAArvJ,EAAAmvJ,aAAAgD,iBAAAnyJ,EAAAqvJ,QAAAv/F,KAAA,SAAA9vD,GAAoE,GAAAmB,MAAAmH,KAAA7H,QAAuB,KAAI,OAAA4H,GAAAjI,EAAAJ,EAAAyyI,kBAAAx7G,OAAAC,cAAmD/1B,GAAAkH,EAAAjI,EAAA+2B,QAAAC,MAAuBj2B,KAAA,CAAM,GAAAQ,GAAA0G,EAAA8C,KAAc,IAAAxJ,EAAAm8H,sBAAAn8H,EAAAq8H,SAAA,CAAuC,GAAAn9H,MAAAR,KAAAo0B,QAAuB,KAAI,OAAA/yB,GAAA+b,EAAAzd,EAAAuyI,gBAAAt7G,OAAAC,cAAiDr2B,GAAAa,EAAA+b,EAAA0Z,QAAAC,MAAuBv2B,KAAA,CAAM,GAAAuL,GAAA1K,EAAAyJ,MAAA4F,EAAA,IAAqB,IAAAA,EAAA3E,EAAAmhC,GAAAnhC,EAAAmhC,GAAAnhC,EAAAgmJ,UAAAhmJ,EAAA5J,IAAAb,EAAA0wJ,iBAAA,CAAqD3xJ,EAAAgxJ,cAAA3gJ,CAAkB,IAAA2jB,IAAA,IAAA3jB,EAAAjM,QAAA,IAA0BpE,GAAAixJ,cAAAj9H,EAAA,cAAAh0B,EAAAkxJ,cAAAxlJ,EAAAkmJ,kBAAuE,UAAAlmJ,EAAAmmJ,eAAA,YAAAnmJ,EAAAmmJ,gBAAA,QAAAnmJ,EAAAkmJ,oBAAA5xJ,EAAAuxJ,oBAAA,QAAA7lJ,EAAAkmJ,oBAAA5xJ,EAAAsxJ,oBAAA,QAAA5lJ,EAAAkmJ,oBAAA5xJ,EAAAqxJ,sBAAA,IAAAhhJ,EAAAjM,QAAA,KAAApE,EAAAmxJ,iBAAAnxJ,EAAAoxJ,kBAAiR,MAAA9xJ,GAASK,KAAAo0B,EAAAz0B,EAAS,QAAQ,KAAIa,GAAA4c,EAAA+Z,QAAA/Z,EAAA+Z,SAAyB,QAAQ,GAAAn3B,EAAA,KAAAo0B,OAAiB,MAAAz0B,GAASsI,KAAA7H,EAAAT,EAAS,QAAQ,KAAImB,GAAAf,EAAAo3B,QAAAp3B,EAAAo3B,SAAyB,QAAQ,GAAAlvB,EAAA,KAAA7H,IAAc,GAAAwgC,MAAA3yB,KAAA0yB,QAAuB,KAAI,OAAAxgC,GAAA0gC,EAAAlhC,EAAAuyI,gBAAAt7G,OAAAC,cAAiD+J,GAAAzgC,EAAA0gC,EAAA/J,QAAAC,MAAuB6J,KAAA,CAAM,GAAA9wB,GAAA3P,EAAA2K,KAAc,WAAAgF,EAAAoiJ,eAAA,YAAApiJ,EAAAoiJ,gBAAA,QAAApiJ,EAAAmiJ,oBAAA5xJ,EAAAqwJ,qBAAA,QAAA5gJ,EAAAmiJ,oBAAA5xJ,EAAAuwJ,qBAAA,QAAA9gJ,EAAAmiJ,oBAAA5xJ,EAAAywJ,sBAAA,UAAAhhJ,EAAAoiJ,eAAA,oBAAApiJ,EAAAoiJ,gBAAA7xJ,EAAA2wJ,mBAA+S,MAAArxJ,GAASsO,KAAA0yB,EAAAhhC,EAAS,QAAQ,KAAIihC,GAAAC,EAAA1J,QAAA0J,EAAA1J,SAAyB,QAAQ,GAAAlpB,EAAA,KAAA0yB,IAAc,GAAAI,MAAA7yB,KAAA2B,QAAuB,KAAI,OAAA6wB,GAAAI,EAAAnhC,EAAAyyI,kBAAAx7G,OAAAC,cAAmDkK,GAAAL,EAAAI,EAAAhK,QAAAC,MAAuBgK,KAAA,CAAM,GAAAG,GAAAR,EAAA51B,KAAc,kBAAAo2B,EAAAq4D,MAAA,CAA0B,GAAAv4D,MAAAzxB,KAAAjG,QAAuB,KAAI,OAAA8E,GAAA+lB,EAAAx0B,EAAAuyI,gBAAAt7G,OAAAC,cAAiDmK,GAAA5yB,EAAA+lB,EAAA2C,QAAAC,MAAuBiK,KAAA,CAAM,GAAAI,GAAAhzB,EAAAtD,KAAcs2B,GAAAj/B,IAAA++B,EAAA8wH,mBAAA,UAAA5wH,EAAA8wH,eAAA,YAAA9wH,EAAA8wH,gBAAA,QAAA9wH,EAAA6wH,oBAAA5xJ,EAAAuxJ,oBAAA,QAAAxwH,EAAA6wH,oBAAA5xJ,EAAAsxJ,oBAAA,QAAAvwH,EAAA6wH,oBAAA5xJ,EAAAqxJ,qBAAA,UAAAtwH,EAAA8wH,eAAA,oBAAA9wH,EAAA8wH,gBAAA7xJ,EAAAwxJ,mBAAuU,MAAAlyJ,GAAS4P,KAAAjG,EAAA3J,EAAS,QAAQ,KAAIqhC,GAAA7M,EAAAgD,QAAAhD,EAAAgD,SAAyB,QAAQ,GAAA5nB,EAAA,KAAAjG,OAAiB,MAAA3J,GAASuO,KAAA2B,EAAAlQ,EAAS,QAAQ,KAAIohC,GAAAD,EAAA3J,QAAA2J,EAAA3J,SAAyB,QAAQ,GAAAjpB,EAAA,KAAA2B,IAActO,EAAAlB,IAAK,SAAAV,GAAamB,EAAAnB,KAAKmB,EAAA,GAAAsK,OAAA,gCAA6C,SAAAzL,GAAayiD,OAAAziD,SAAaA,IAAQP,GAAAkuJ,8CCA1gS7sJ,QAAAC,eAAAtB,EAAA,cAA4C0L,UAAW,IAAA8qC,GAAA,WAA4B,QAAAj2C,KAAA4B,GAAgB,OAAA0G,GAAA,EAAYA,EAAA1G,EAAAmB,OAAWuF,IAAA,CAAK,GAAAnH,GAAAS,EAAA0G,EAAWnH,GAAAF,WAAAE,EAAAF,eAAAE,EAAAH,gBAAA,SAAAG,OAAA4mC,aAAAjnC,OAAAC,eAAAf,EAAAmB,EAAAqP,IAAArP,IAA+G,gBAAAS,EAAA0G,EAAAnH,GAAuB,MAAAmH,IAAAtI,EAAA4B,EAAAJ,UAAA8G,GAAAnH,GAAAnB,EAAA4B,EAAAT,GAAAS,MAAwCgvJ,EAAA,WAAiC,QAAA5wJ,GAAA4B,aAArc5B,EAAA4B,GAA8B,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,uCAAqbzO,KAAAC,GAAAD,KAAAyyJ,gBAAA5wJ,EAAAurC,UAAAptC,KAAAutB,QAAsE,MAAA2oB,GAAAj2C,IAAwBwQ,IAAA,QAAArF,MAAA,WAA6B,GAAAnL,GAAAD,KAAAyyJ,gBAAAjsJ,MAAA,IAAsCvG,GAAA+C,OAAA,IAAAhD,KAAAuf,SAAA,MAAAtf,EAAA,gBAAAD,KAAAsC,UAAArC,EAAA,GAAAD,KAAA0yJ,cAAA1yJ,KAAA2yJ,qBAAA1yJ,EAAA,IAAAD,KAAAq/H,MAAA,IAAAp/H,EAAA,GAAA8E,QAAA,KAAA/E,KAAAqyJ,UAAApyJ,EAAA,GAAAD,KAAAssC,KAAArsC,EAAA,GAAAD,KAAAge,KAAA/d,EAAA,OAAiNwQ,IAAA,uBAAArF,MAAA,SAAAnL,GAA6C,GAAA4B,GAAA,OAAA0G,EAAAtI,GAAA,EAAqB,YAAAD,KAAAuf,UAAAhX,GAAA,GAAAA,GAAA,SAAAA,GAA+C,OAAA1G,EAAA,KAAe,MAAM,QAAAA,EAAA,KAAe,MAAM,QAAAA,EAAA,MAAe,MAAAA,MAAY4O,IAAA,YAAArF,MAAA,WAAiC,MAAApL,MAAAyyJ,mBAA+BhiJ,IAAA,UAAArF,MAAA,WAA+B,MAAApL,MAAAge,QAAoBvN,IAAA,SAAArF,MAAA,WAA8B,eAAApL,KAAAge,KAAAjD,iBAA0CtK,IAAA,oBAAArF,MAAA,WAAyC,gBAAApL,KAAAge,KAAAjD,iBAA2CtK,IAAA,kBAAArF,MAAA,WAAuC,gBAAApL,KAAAge,KAAAjD,iBAA2CtK,IAAA,UAAArF,MAAA,WAA+B,gBAAApL,KAAAge,KAAAjD,eAAA,YAAA/a,KAAAge,KAAAjD,iBAAgFtK,IAAA,mBAAArF,MAAA,WAAwC,MAAApL,MAAA0yJ,iBAA6BjiJ,IAAA,qBAAArF,MAAA,WAA0C,cAAApL,KAAA0yJ,iBAAoCjiJ,IAAA,qBAAArF,MAAA,WAA0C,cAAApL,KAAA0yJ,iBAAoCjiJ,IAAA,qBAAArF,MAAA,WAA0C,cAAApL,KAAA0yJ,iBAAoCjiJ,IAAA,eAAArF,MAAA,WAAoC,MAAApL,MAAAsC,aAAyBmO,IAAA,QAAArF,MAAA,WAA6B,cAAApL,KAAAsC,UAAAyY,iBAA8CtK,IAAA,QAAArF,MAAA,WAA6B,cAAApL,KAAAsC,UAAAyY,iBAA8CtK,IAAA,cAAArF,MAAA,WAAmC,MAAApL,MAAAuf,YAAwB9O,IAAA,QAAArF,MAAA,WAA6B,cAAApL,KAAAuf,YAA+B9O,IAAA,SAAArF,MAAA,WAA8B,eAAApL,KAAAuf,YAAgC9O,IAAA,SAAArF,MAAA,WAA8B,MAAApL,MAAAq/H,QAAoB5uH,IAAA,eAAArF,MAAA,WAAoC,MAAApL,MAAAqyJ,aAAyB5hJ,IAAA,UAAArF,MAAA,WAA+B,MAAApL,MAAAssC,SAAkBrsC,IAAQP,GAAAmxJ,kDCA9rE9vJ,QAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAA2vJ,sBAAiC,IAAAn5G,GAAA,WAA4B,QAAAr0C,KAAA5B,GAAgB,OAAA2B,GAAA,EAAYA,EAAA3B,EAAA+C,OAAWpB,IAAA,CAAK,GAAA0G,GAAArI,EAAA2B,EAAW0G,GAAApH,WAAAoH,EAAApH,eAAAoH,EAAArH,gBAAA,SAAAqH,OAAA0/B,aAAAjnC,OAAAC,eAAAa,EAAAyG,EAAAmI,IAAAnI,IAA+G,gBAAArI,EAAA2B,EAAA0G,GAAuB,MAAA1G,IAAAC,EAAA5B,EAAAwB,UAAAG,GAAA0G,GAAAzG,EAAA5B,EAAAqI,GAAArI,MAAwCstJ,EAAArtJ,EAAA,IAAA0yJ,EAAA1yJ,EAAA,IAAA83C,EAAA93C,EAAA,IAAAmvJ,EAAA,WAA4I,QAAAxtJ,GAAA5B,aAA/kB4B,EAAA5B,GAA8B,KAAA4B,YAAA5B,IAAA,SAAAwO,WAAA,uCAA+jBzO,KAAA6B,GAAA7B,KAAA62C,SAAA52C,EAAA42C,SAAA72C,KAAAu2C,YAAAt2C,EAAAs2C,YAAAv2C,KAAAm1D,QAAA,GAAAy9F,GAAAC,aAAA7yJ,KAAA62C,SAAA72C,KAAAu2C,aAAAv2C,KAAA8yJ,kBAAmL,MAAA58G,GAAAr0C,IAAwB4O,IAAA,mBAAArF,MAAA,SAAAvJ,GAAyC,GAAA5B,GAAAD,IAAW,WAAAg4C,GAAA,SAAAp2C,EAAA0G,GAAiCrI,EAAA8yJ,aAAA9yJ,EAAA+yJ,qBAAA3lJ,KAAApN,GAAA4B,EAAA,SAAAA,GAA4DD,EAAAC,UAAY4O,IAAA,uBAAArF,MAAA,SAAAvJ,EAAA5B,GAA+CA,EAAAD,KAAAm1D,QAAAi9F,iBAAAvwJ,OAAuC4O,IAAA,eAAArF,MAAA,SAAAvJ,EAAA5B,EAAA2B,GAAyC,GAAA0G,GAAAilJ,EAAAj3G,UAAAG,aAAAW,QAAAh2C,EAAAmsJ,EAAAj3G,UAAAG,aAAAD,OAAAn2C,EAAAktJ,EAAAj3G,UAAAG,aAAApxC,KAAAkD,EAAAglJ,EAAAj3G,UAAAC,YAAAY,MAA8Ll3C,KAAAD,KAAA62C,WAAAvuC,EAAAtI,KAAAizJ,gBAAApxJ,EAAA5B,EAAA2B,GAAA5B,KAAAu2C,cAAAhuC,EAAAvI,KAAAkzJ,eAAArxJ,EAAA5B,EAAA2B,GAAA5B,KAAA62C,WAAAz1C,EAAApB,KAAAmzJ,eAAAtxJ,EAAA5B,EAAA2B,GAAA5B,KAAA62C,WAAAx2C,GAAAL,KAAAozJ,aAAAvxJ,EAAA5B,EAAA2B,OAA+L6O,IAAA,kBAAArF,MAAA,SAAAvJ,EAAA5B,EAAA2B,GAA4C,GAAA0G,GAAAtI,IAAW,IAAAsI,EAAAwqJ,eAAA,IAAwB7yJ,EAAAm2F,WAAArmC,KAAA,SAAA9vD,GAA8B4B,EAAA5B,EAAA2B,KAAOw0D,MAAA,SAAAh1D,GAAoBkH,EAAAwqJ,kBAAA7yJ,EAAAm2F,SAAA,cAAAn2F,GAAgD4B,EAAA5B,EAAA2B,IAAO,gBAAiB,MAAAR,GAASkH,EAAAwqJ,kBAAA7yJ,EAAAm2F,SAAA,cAAAn2F,GAAgD4B,EAAA5B,EAAA2B,IAAO,kBAAe3B,GAAAm2F,SAAA,cAAAn2F,GAAiC4B,EAAA5B,EAAA2B,IAAO,iBAAkB6O,IAAA,iBAAArF,MAAA,SAAAvJ,EAAA5B,EAAA2B,GAA2C,GAAA0G,GAAAtI,IAAW,IAAA6E,eAAA6xC,gBAAAz2C,EAAAm2F,SAAA,cAAAn2F,GAA8D4B,EAAA5B,EAAA2B,IAAO,SAAAC,UAAgB,IAAAyG,EAAAwqJ,eAAA,IAA6B7yJ,EAAAm2F,WAAArmC,KAAA,SAAA9vD,GAA8B4B,EAAA5B,EAAA2B,KAAOw0D,MAAA,SAAAh1D,GAAoBkH,EAAAwqJ,kBAAA7yJ,EAAAm2F,SAAA,SAAAn2F,GAA2C4B,EAAA5B,EAAA2B,OAAW,MAAA0G,GAASwqJ,kBAAA7yJ,EAAAm2F,SAAA,SAAAn2F,GAAyC4B,EAAA5B,EAAA2B,SAAS3B,GAAAm2F,SAAA,SAAAn2F,GAA4B4B,EAAA5B,EAAA2B,QAAY6O,IAAA,eAAArF,MAAA,SAAAvJ,EAAA5B,EAAA2B,GAAyC3B,EAAAm2F,WAAArmC,KAAA,SAAA9vD,GAA8B4B,EAAA5B,EAAA2B,KAAOw0D,MAAA,SAAAv0D,SAA0B4O,IAAA,iBAAArF,MAAA,SAAAvJ,EAAA5B,EAAA2B,GAA2C3B,EAAAm2F,WAAArmC,KAAA,SAAA9vD,GAA8B4B,EAAA5B,EAAA2B,KAAOw0D,MAAA,SAAAv0D,UAAwBA,IAAQnC,GAAA2vJ,+CCAhwEtuJ,QAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAAmzJ,mBAA8B,IAAA38G,GAAA,WAA4B,QAAAr0C,KAAA5B,GAAgB,OAAAqI,GAAA,EAAYA,EAAArI,EAAA+C,OAAWsF,IAAA,CAAK,GAAAC,GAAAtI,EAAAqI,EAAWC,GAAArH,WAAAqH,EAAArH,eAAAqH,EAAAtH,gBAAA,SAAAsH,OAAAy/B,aAAAjnC,OAAAC,eAAAa,EAAA0G,EAAAkI,IAAAlI,IAA+G,gBAAAtI,EAAAqI,EAAAC,GAAuB,MAAAD,IAAAzG,EAAA5B,EAAAwB,UAAA6G,GAAAC,GAAA1G,EAAA5B,EAAAsI,GAAAtI,MAAwCstJ,EAAArtJ,EAAA,IAAA2yJ,EAAA,WAAqE,QAAAhxJ,GAAA5B,EAAAqI,aAArgBzG,EAAA5B,GAA8B,KAAA4B,YAAA5B,IAAA,SAAAwO,WAAA,uCAAufzO,KAAA6B,GAAA7B,KAAA62C,SAAA52C,EAAAD,KAAAmpC,QAAA7gC,EAAuD,MAAA4tC,GAAAr0C,IAAwB4O,IAAA,mBAAArF,MAAA,SAAAvJ,GAAyC,IAAAA,EAAA,WAAkB,IAAA5B,GAAAD,KAAAqzJ,gBAAAxxJ,EAA8B,OAAA7B,MAAAszJ,0BAAArzJ,MAA4CwQ,IAAA,kBAAArF,MAAA,SAAAvJ,GAAwC,GAAA5B,MAAAqI,SAAAC,EAAAglJ,EAAAj3G,UAAAG,aAAAW,QAAAx1C,EAAA2rJ,EAAAj3G,UAAAG,aAAAD,OAAA11C,EAAAysJ,EAAAj3G,UAAAC,YAAAY,MAA+J,IAAAn3C,KAAA62C,WAAAtuC,GAAAvI,KAAAmpC,UAAAroC,EAAAe,EAAAwM,QAAA,SAAAxM,GAA6D5B,EAAA4C,KAAAhB,SAAY,IAAA7B,KAAA62C,WAAAj1C,GAAA5B,KAAAmpC,UAAAroC,EAAAe,KAAA2a,OAAAvc,EAAA4B,EAAA2a,SAAA3a,KAAAwM,UAAApO,KAAA4B,EAAAwM,QAAA,SAAAxM,GAA+G5B,EAAA4C,KAAAhB,UAAa,KAAAyG,IAAAzG,KAAAH,eAAA4G,IAAArI,EAAA4C,KAAAhB,EAAAyG,GAAkD,OAAArI,MAAYwQ,IAAA,4BAAArF,MAAA,SAAAvJ,GAAkD,GAAA5B,MAAAqI,KAAAC,KAAA3G,QAA4B,KAAAC,EAAA,WAAkB,QAAAf,GAAA,EAAYA,EAAAe,EAAAmB,SAAWlC,EAAA,CAAK,GAAAM,GAAApB,KAAAuzJ,eAAA1xJ,EAAAf,IAAAT,EAAAL,KAAAwzJ,gBAAApyJ,EAA0D,IAAAf,EAAAi+H,cAAA/1H,EAAA1F,KAAAxC,EAAAi+H,mBAA2C,IAAAj+H,EAAAozJ,eAAA,CAA0B,iBAAApzJ,EAAAozJ,eAAAz1I,KAAA,CAAwCpc,EAAAvB,EAAAozJ,eAAAv4B,uBAA2C,UAAS3yH,EAAA1F,KAAAxC,EAAAozJ,oBAAyB,IAAApzJ,EAAA69H,eAAA,CAA0B,GAAAx9H,GAAAL,EAAA69H,cAAuB,aAAAx9H,EAAA8xJ,eAAA,WAAA9xJ,EAAA8xJ,cAAA,CAAyD,IAAA9xJ,EAAA6xJ,kBAAA,CAAyB,GAAA5xJ,GAAAD,EAAAonB,UAAA,EAAqBpnB,GAAA6xJ,kBAAAvyJ,KAAA0zJ,gBAAA/yJ,GAA4CD,EAAA6xJ,kBAAA7xJ,EAAA6xJ,kBAAAx3I,cAAsD9a,EAAA4C,KAAAnC,OAAUL,GAAA89H,iBAAA71H,EAAAzF,KAAAxC,EAAA89H,iBAAkD,GAAAv8H,EAAA,OAAAtB,GAAA,EAAiBA,EAAAiI,EAAAvF,SAAW1C,EAAAiI,EAAAjI,GAAAmC,KAAAb,IAAA2G,EAAAjI,GAAAy9H,qBAAA,OAAoD,QAAOyU,gBAAAvyI,EAAAwyI,iBAAAnqI,EAAAoqI,kBAAAnqI,MAA6DkI,IAAA,iBAAArF,MAAA,SAAAvJ,GAAuC,GAAA5B,KAAS,IAAA4B,EAAA60F,oBAAAz3E,QAAAhf,EAAAy2F,UAAA70F,EAAA60F,UAAAx3E,UAAArR,YAAAhM,EAAAmc,OAAA/d,EAAA+d,KAAAnc,EAAAmc,MAAAnc,EAAAusD,MAAA,OAAA9lD,GAAAzG,EAAAusD,QAAA7lD,EAAA,EAAuIA,EAAAD,EAAAtF,SAAWuF,EAAAtI,EAAAqI,EAAAC,IAAA1G,EAAA80F,KAAAruF,EAAAC,QAAyBxH,QAAAsmE,OAAApnE,EAAA4B,EAAwB,IAAA5B,EAAAg3B,OAAA,CAAa,GAAAr1B,MAAAd,KAAAM,QAAuB,KAAI,OAAAf,GAAAK,EAAAT,EAAAg3B,OAAAC,OAAAC,cAAwCv1B,GAAAvB,EAAAK,EAAA02B,QAAAC,MAAuBz1B,KAAA,CAAM,GAAAjB,GAAAN,EAAA+K,KAAcrK,QAAAsmE,OAAApnE,EAAAU,IAAoB,MAAAkB,GAASf,KAAAM,EAAAS,EAAS,QAAQ,KAAID,GAAAlB,EAAA+2B,QAAA/2B,EAAA+2B,SAAyB,QAAQ,GAAA32B,EAAA,KAAAM,UAAcnB,GAAAg3B,OAAgB,MAAAh3B,MAAYwQ,IAAA,kBAAArF,MAAA,SAAAvJ,GAAwC,GAAA5B,MAAQqI,EAAA,WAAc,OAAArI,GAAA8K,UAAA/H,OAAAsF,EAAAkF,MAAAvN,GAAAsI,EAAA,EAA0CA,EAAAtI,EAAIsI,IAAAD,EAAAC,GAAAwC,UAAAxC,EAAsB,IAAA3G,MAAAd,KAAAM,QAAuB,KAAI,OAAAf,GAAAK,EAAA4H,EAAA4uB,OAAAC,cAAiCv1B,GAAAvB,EAAAK,EAAA02B,QAAAC,MAAuBz1B,KAAA,CAAM,GAAAjB,GAAAN,EAAA+K,KAAc,IAAAvJ,EAAAmc,OAAArd,EAAA,UAAwB,MAAAkB,GAASf,KAAAM,EAAAS,EAAS,QAAQ,KAAID,GAAAlB,EAAA+2B,QAAA/2B,EAAA+2B,SAAyB,QAAQ,GAAA32B,EAAA,KAAAM,IAAc,UAASmH,EAAAD,EAAA,4BAAA1G,EAAA,SAAAC,EAAAwiI,eAAAxiI,EAAAwiI,QAAwE,OAAA97H,IAAAD,EAAA,+BAAArI,EAAA8qE,UAAsD9qE,EAAA8qE,OAAAr6D,KAAA7O,EAAA5B,EAAA8qE,OAAAvwC,KAAA34B,EAAA24B,KAAAv6B,EAAA8qE,OAAAyuD,WAAAjxH,EAAA,qBAAAtI,EAAA8qE,OAAAqqD,WAAA,iBAAAvzH,EAAAwiI,WAAApkI,EAAA8qE,OAAAqqD,WAAAxzH,EAAA,mBAAA0G,EAAA,kBAAAzG,EAAAo8H,SAAAh+H,EAAAwzJ,eAAA5xJ,EAAAyG,EAAA,oCAAArI,EAAAi+H,eAAAr8H,EAAAyG,EAAA,sCAAArI,EAAAk+H,gBAAAt8H,EAAAyG,EAAA,iCAAArI,EAAAwzJ,eAAA5xJ,EAAAyG,EAAA,YAAArI,EAAAm+H,IAAAv8H,EAAAyG,EAAA,SAAArI,EAAAo+H,WAAAx8H,EAAAyG,EAAA,kBAAArI,EAAAq+H,cAAAz8H,EAAAyG,EAAA,SAAArI,EAAAgxC,MAAApvC,EAAAyG,EAAA,UAAArI,EAAA8qE,UAA2gB9qE,EAAA8qE,OAAAr6D,KAAA7O,EAAA5B,EAAA8qE,OAAAvwC,KAAA34B,EAAA24B,KAAAv6B,EAAA8qE,OAAAqqD,WAAA,QAAAn1H,EAAA8qE,OAAAyuD,WAAA33H,EAAA85H,UAAA,sBAAA17H,KAA6HwQ,IAAA,kBAAArF,MAAA,SAAAvJ,GAAwC,GAAA5B,GAAA,MAAa,QAAA4B,GAAU,OAAA5B,EAAA,KAAe,MAAM,QAAAA,EAAA,KAAe,MAAM,QAAAA,EAAA,MAAe,MAAAA,OAAU4B,IAAQnC,GAAAmzJ,0CCF5sHj7G,EAAAD,IAAA,SAAAC,EAAAmG,GACA,YA6BA,SAAA0jD,GAAAl+B,SACAowF,GAAApwF,GAyBA,QAAAqwF,GAAArwF,GAGA,GAAAswF,EAGA7mJ,WAAA4mJ,EAAA,EAAArwF,OACS,CACT,GAAAuwF,GAAAH,EAAApwF,EACA,IAAAuwF,EAAA,CACAD,IACA,MAjCA,SAAAC,GACA,GAAArnJ,GAAAqnJ,EAAArnJ,SACA5B,EAAAipJ,EAAAjpJ,IACA,QAAAA,EAAA7H,QACA,OACAyJ,GACA,MACA,QACAA,EAAA5B,EAAA,GACA,MACA,QACA4B,EAAA5B,EAAA,GAAAA,EAAA,GACA,MACA,QACA4B,EAAA5B,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA,MACA,SACA4B,EAAAxB,MAAA8yC,EAAAlzC,KAiBAipJ,GACiB,QACjBryD,EAAAl+B,GACAswF,QApEA,IAAAj8G,EAAAC,aAAA,CAIA,GAIAk8G,GAJAC,EAAA,EACAL,KACAE,KACAh7I,EAAA++B,EAAArkC,SAoJA0gJ,EAAAlzJ,OAAAk1C,gBAAAl1C,OAAAk1C,eAAA2B,EACAq8G,QAAAjnJ,WAAAinJ,EAAAr8G,EAGU,wBAAA/pC,SAAArN,KAAAo3C,EAAAD,SApFVo8G,EAAA,SAAAxwF,GACA5rB,EAAAspB,SAAA,WAA0C2yF,EAAArwF,MAI1C,WAGA,GAAA3rB,EAAAwoD,cAAAxoD,EAAAs8G,cAAA,CACA,GAAAC,MACAC,EAAAx8G,EAAA/mB,SAMA,OALA+mB,GAAA/mB,UAAA,WACAsjI,MAEAv8G,EAAAwoD,YAAA,QACAxoD,EAAA/mB,UAAAujI,EACAD,MAIA,WAKA,GAAAE,GAAA,gBAAAnmJ,KAAA+T,SAAA,IACAqyI,EAAA,SAAAniI,GACAA,EAAA8hD,SAAAr8B,GACA,gBAAAzlB,GAAAzhB,MACA,IAAAyhB,EAAAzhB,KAAA3L,QAAAsvJ,IACAT,GAAAzhI,EAAAzhB,KAAApG,MAAA+pJ,EAAArxJ,SAIA40C,GAAA1P,iBACA0P,EAAA1P,iBAAA,UAAAosH,MAEA18G,EAAAoxC,YAAA,YAAAsrE,GAGAP,EAAA,SAAAxwF,GACA3rB,EAAAwoD,YAAAi0D,EAAA9wF,EAAA,SAmDK3rB,EAAA28G,eA/CL,WACA,GAAApwB,GAAA,GAAAowB,eACApwB,GAAAqwB,MAAA3jI,UAAA,SAAAsB,GAEAyhI,EADAzhI,EAAAzhB,OAIAqjJ,EAAA,SAAAxwF,GACA4gE,EAAAswB,MAAAr0D,YAAA78B,OA2CK1qD,GAAA,sBAAAA,GAAAM,cAAA,UAvCL,WACA,GAAAe,GAAArB,EAAAyT,eACAynI,GAAA,SAAAxwF,GAGA,GAAAkhC,GAAA5rF,EAAAM,cAAA,SACAsrF,GAAAh4E,mBAAA,WACAmnI,EAAArwF,GACAkhC,EAAAh4E,mBAAA,KACAvS,EAAAuwE,YAAAga,GACAA,EAAA,MAEAvqF,EAAAhB,YAAAurF,OAKAsvD,EAAA,SAAAxwF,GACAv2D,WAAA4mJ,EAAA,EAAArwF,IA8BA0wF,EAAAp8G,aA1KA,SAAAprC,GAEA,kBAAAA,KACAA,EAAA,GAAAW,UAAA,GAAAX,GAIA,QADA5B,GAAA,GAAA2C,OAAAzC,UAAA/H,OAAA,GACA3C,EAAA,EAAqBA,EAAAwK,EAAA7H,OAAiB3C,IACtCwK,EAAAxK,GAAA0K,UAAA1K,EAAA,EAGA,IAAAyzJ,IAAkBrnJ,WAAA5B,OAGlB,OAFA8oJ,GAAAK,GAAAF,EACAC,EAAAC,GACAA,KA6JAC,EAAAxyD,mBACC,mBAAA1hG,eAAA63C,EAAA53C,KAAA43C,EAAA73C,yDCvLsyBgB,QAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAAovJ,cAAyB,IAAA54G,GAAA,WAA4B,QAAAr0C,KAAA5B,GAAgB,OAAA2B,GAAA,EAAYA,EAAA3B,EAAA+C,OAAWpB,IAAA,CAAK,GAAAvB,GAAAJ,EAAA2B,EAAWvB,GAAAa,WAAAb,EAAAa,eAAAb,EAAAY,gBAAA,SAAAZ,OAAA2nC,aAAAjnC,OAAAC,eAAAa,EAAAxB,EAAAoQ,IAAApQ,IAA+G,gBAAAJ,EAAA2B,EAAAvB,GAAuB,MAAAuB,IAAAC,EAAA5B,EAAAwB,UAAAG,GAAAvB,GAAAwB,EAAA5B,EAAAI,GAAAJ,MAAqSqiG,EAAt2C,SAAAzgG,GAAoC,GAAAA,KAAAR,WAAA,MAAAQ,EAA4B,IAAA5B,KAAS,UAAA4B,EAAA,OAAAD,KAAAC,GAAAd,OAAAU,UAAAC,eAAAlB,KAAAqB,EAAAD,KAAA3B,EAAA2B,GAAAC,EAAAD,GAAiF,OAAA3B,GAAAqB,QAAAO,EAAA5B,GAA4sCC,EAAA,KAAAw0J,EAAAx0J,EAAA,IAAA4uJ,EAAA,SAAAjtJ,GAA6L,QAAA5B,GAAA4B,IAAp3C,SAAAA,EAAA5B,GAA8B,KAAA4B,YAAA5B,IAAA,SAAAwO,WAAA,sCAAo2CzO,KAAAC,EAAwB,IAAA2B,GAA9yC,SAAAC,EAAA5B,GAAyC,IAAA4B,EAAA,SAAAqpJ,gBAAA,4DAA4F,QAAAjrJ,GAAA,gBAAAA,IAAA,kBAAAA,GAAA4B,EAAA5B,GAAyqCD,MAAAC,EAAA+1C,WAAAj1C,OAAAk1C,eAAAh2C,IAAAO,KAAAR,KAAA6B,GAA4F,OAAAD,GAAA+yJ,UAAA,KAAA/yJ,EAAAgzJ,UAAA,EAAAhzJ,EAAAizJ,QAAAjzJ,EAAkD,MAAhwC,UAAAC,EAAA5B,GAAwB,qBAAAA,IAAA,OAAAA,EAAA,SAAAwO,WAAA,iEAAAxO,GAA2H4B,GAAAJ,UAAAV,OAAAkqC,OAAAhrC,KAAAwB,WAA0CypC,aAAa9/B,MAAAvJ,EAAAX,cAAA8mC,YAAA/mC,mBAAmDhB,IAAAc,OAAA60E,eAAA70E,OAAA60E,eAAA/zE,EAAA5B,GAAA4B,EAAAm0C,UAAA/1C,IAAmgCA,EAAAy0J,EAAAhzD,UAAAxrD,EAAAj2C,IAAwDwQ,IAAA,WAAArF,MAAA,WAAgCpL,KAAA69F,QAAAi3D,eAAAxyD,EAAAltD,aAAAp1C,KAAA+0J,cAAuEtkJ,IAAA,gBAAArF,MAAA,SAAAvJ,GAAsC,GAAA7B,KAAA4iF,WAAA,CAAoB,GAAA3iF,GAAA4D,SAAAhC,EAAA,IAAAD,EAAA5B,KAAAg1J,aAAA/0J,EAA4CD,MAAA60J,KAAAhyJ,KAAAjB,GAAA5B,KAAA40J,UAAtnB,GAAsnB50J,KAAA+0J,WAAA/0J,KAAAi1J,uBAAwFxkJ,IAAA,cAAArF,MAAA,SAAAvJ,GAAoC7B,KAAAk1J,cAAAl1J,KAAA4nF,OAAA/lF,MAAqC4O,IAAA,WAAArF,MAAA,WAAgC,GAAApL,KAAA4iF,WAAA,CAAoB,GAAA/gF,GAAAygG,EAAAltD,YAA8Bp1C,MAAAgkB,KAAAniB,EAAAgM,YAAA7N,KAAA40J,WAAA,EAAA50J,KAAA20J,YAAAvwI,aAAApkB,KAAA20J,WAAA30J,KAAA20J,UAAA,MAAA30J,KAAA40J,UAAz2B,GAAy2B50J,KAAA20J,UAAA3nJ,WAAAhN,KAAA+0J,SAAA1nJ,KAAArN,MAAz2B,KAAy2BA,KAAA20J,UAAA3nJ,WAAAhN,KAAAi1J,iBAAA5nJ,KAAArN,MAAz2B,SAAynCyQ,IAAA,eAAArF,MAAA,SAAAvJ,GAAqC,MAAAygG,GAAAltD,aAAAvzC,KAAoC4O,IAAA,mBAAArF,MAAA,WAAwCpL,KAAA20J,YAAAvwI,aAAApkB,KAAA20J,WAAA30J,KAAA20J,UAAA,MAAA30J,KAAAk1J,cAAAl1J,KAAAmiG,cAAyG1xF,IAAA,cAAArF,MAAA,WAAmCpL,KAAA69F,QAAAs3D,aAAAn1J,KAAA40J,UAAA50J,KAAA69F,QAAAu3D,gBAAAp1J,KAAA40J,UAAA50J,KAAA60J,KAAA7xJ,OAAAhD,KAAA69F,QAAAw3D,YAAt3C,GAAs3Cr1J,KAAA69F,QAAAoE,aAAAjiG,KAAAiiG,aAAAjiG,KAAA69F,QAAAoxD,OAAAjvJ,KAAAivJ,SAAAjvJ,KAAA69F,QAAAy3D,SAAAt1J,KAAAs1J,WAAAt1J,KAAA69F,QAAA03D,aAAAjzD,EAAAltD,gBAAmT3kC,IAAA,SAAArF,MAAA,WAA8B,MAAApL,KAAA60J,KAAA7xJ,OAAA,WAAmChD,MAAA60J,KAAAn7I,MAAiB,IAAA7X,GAAAqM,KAAAE,MAAApO,KAAA60J,KAAA7xJ,OAAA,EAAqC,OAAAhD,MAAA60J,KAAAhzJ,MAAuB4O,IAAA,WAAArF,MAAA,WAAgC,MAAApL,KAAA60J,KAAA7xJ,OAAA,WAAmC,IAAAnB,GAAA,EAAA5B,EAAAD,KAAAivJ,SAAArtJ,KAAAvB,KAAAkI,QAA2C,KAAI,OAAAnH,GAAAszB,EAAA10B,KAAA60J,KAAA39H,OAAAC,cAAyCv1B,GAAAR,EAAAszB,EAAA0C,QAAAC,MAAuBz1B,KAAA,CAAM,GAAAd,GAAAM,EAAAgK,KAAcvJ,IAAAqM,KAAAyhB,IAAA7uB,EAAAb,IAAkB,MAAA4B,GAASxB,KAAAkI,EAAA1G,EAAS,QAAQ,KAAID,GAAA8yB,EAAA+C,QAAA/C,EAAA+C,SAAyB,QAAQ,GAAAp3B,EAAA,KAAAkI,IAAc,MAAA1G,GAAA7B,KAAA60J,KAAA7xJ,UAA8ByN,IAAA,OAAArF,MAAA,WAA4BpL,KAAA4iF,aAAn5E,QAAA/gF,GAAA5B,EAAA2B,EAAAvB,GAA0B,OAAAJ,MAAAmN,SAAA3L,UAAiC,IAAA8G,GAAAxH,OAAAotD,yBAAAluD,EAAA2B,EAA2C,aAAA2G,EAAA,CAAe,GAAAnH,GAAAL,OAAAk1C,eAAAh2C,EAA+B,eAAAmB,SAAAS,EAAAT,EAAAQ,EAAAvB,GAAgC,YAAAkI,GAAA,MAAAA,GAAA6C,KAA8B,IAAAspB,GAAAnsB,EAAApH,GAAY,iBAAAuzB,IAAAl0B,KAAAH,WAAqrEJ,EAAAwB,UAAAu0C,WAAAj1C,OAAAk1C,eAAAh2C,EAAAwB,WAAA,OAAAzB,MAAAQ,KAAAR,WAAAk1J,mBAA8Hj1J,IAAQP,GAAAovJ,uCCAx2F/tJ,QAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAAqvJ,qBAAgC,IAAA74G,GAAA,WAA4B,QAAAj2C,KAAA4B,GAAgB,OAAAD,GAAA,EAAYA,EAAAC,EAAAmB,OAAWpB,IAAA,CAAK,GAAAvB,GAAAwB,EAAAD,EAAWvB,GAAAa,WAAAb,EAAAa,eAAAb,EAAAY,gBAAA,SAAAZ,OAAA2nC,aAAAjnC,OAAAC,eAAAf,EAAAI,EAAAoQ,IAAApQ,IAA+G,gBAAAwB,EAAAD,EAAAvB,GAAuB,MAAAuB,IAAA3B,EAAA4B,EAAAJ,UAAAG,GAAAvB,GAAAJ,EAAA4B,EAAAxB,GAAAwB,MAAqSygG,EAA72C,SAAAriG,GAAoC,GAAAA,KAAAoB,WAAA,MAAApB,EAA4B,IAAA4B,KAAS,UAAA5B,EAAA,OAAA2B,KAAA3B,GAAAc,OAAAU,UAAAC,eAAAlB,KAAAP,EAAA2B,KAAAC,EAAAD,GAAA3B,EAAA2B,GAAiF,OAAAC,GAAAP,QAAArB,EAAA4B,GAAmtC3B,EAAA,KAAAs1J,EAAAt1J,EAAA,IAAAw0J,EAAAx0J,EAAA,IAAA6uJ,EAAA,SAAA9uJ,GAA0M,QAAA4B,GAAA5B,EAAA2B,IAAx4C,SAAA3B,EAAA4B,GAA8B,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,sCAA03CzO,KAAA6B,EAAwB,IAAAxB,GAAp0C,SAAAJ,EAAA4B,GAAyC,IAAA5B,EAAA,SAAAirJ,gBAAA,4DAA4F,QAAArpJ,GAAA,gBAAAA,IAAA,kBAAAA,GAAA5B,EAAA4B,GAA+rC7B,MAAA6B,EAAAm0C,WAAAj1C,OAAAk1C,eAAAp0C,IAAArB,KAAAR,KAAAC,GAA4F,IAAAI,EAAAkiG,UAAA,EAAAliG,EAAAo1J,cAAA,EAAAp1J,EAAAq1J,gBAAA,EAAAr1J,EAAAs1J,gBAAA,KAAAt1J,EAAAu1J,YAAA,EAAAv1J,EAAAw1J,UAAA,KAAAx1J,EAAAy1J,aAAA,GAAAN,GAAAnzD,aAAAhiG,EAAAw1J,WAAAx1J,EAAAooH,SAAA,UAAA7mH,EAAA,CAAkM,GAAA2G,GAAA,GAAA3G,CAAWvB,GAAAooH,SAAAv6G,KAAA0mC,IAAA1mC,KAAAuhB,IAAAlnB,EAAA,UAAyC,MAAAlI,GAAAs0J,UAAA,KAAAt0J,EAAA01J,YAAA,KAAA11J,EAAA21J,aAAA31J,EAAA41J,cAAA,EAAA51J,EAAA61J,eAAA,IAAA71J,EAAA81J,cAAA,EAAA91J,EAAqH,MAA/kD,UAAAJ,EAAA4B,GAAwB,qBAAAA,IAAA,OAAAA,EAAA,SAAA4M,WAAA,iEAAA5M,GAA2H5B,GAAAwB,UAAAV,OAAAkqC,OAAAppC,KAAAJ,WAA0CypC,aAAa9/B,MAAAnL,EAAAiB,cAAA8mC,YAAA/mC,mBAAmDY,IAAAd,OAAA60E,eAAA70E,OAAA60E,eAAA31E,EAAA4B,GAAA5B,EAAA+1C,UAAAn0C,IAAk1CA,EAAA6yJ,EAAAhzD,UAAAxrD,EAAAr0C,IAAwD4O,IAAA,WAAArF,MAAA,WAAgCpL,KAAAo2J,eAAoB3lJ,IAAA,gBAAArF,MAAA,SAAAnL,GAAsC,GAAA4B,GAAA7B,IAAW,IAAAA,KAAA4iF,WAAA,CAAoB5iF,KAAA+1J,YAAA91J,EAAAD,KAAAy1J,eAAAx1J,EAAA+C,MAAgD,IAAApB,GAAA0gG,EAAAltD,YAA8B,IAAAp1C,KAAA20J,YAAA30J,KAAA69F,QAAAi3D,eAAAlzJ,EAAA5B,KAAA20J,UAAA3nJ,WAAA,WAAuFnL,EAAAw2B,OAAAx2B,EAAAsgG,YAAsBniG,KAAAyoH,WAAA,GAAAzoH,KAAAi2J,gBAAAj2J,KAAAi2J,cAAAr0J,GAAA5B,KAAAm2J,eAAAl2J,EAAA+C,OAAApB,EAAA5B,KAAAi2J,eAAAj2J,KAAAk2J,eAAA,CAAuI,GAAA71J,GAAAuB,EAAA5B,KAAAi2J,cAAA1tJ,EAAAvI,KAAAq2J,kBAAAr2J,KAAAm2J,cAAA91J,GAAAe,EAAA,IAAiF,KAAIA,EAAAQ,EAAA2hB,KAAAgK,MAAAvtB,KAAA+1J,aAAAr/D,UAA2C,MAAAz2F,IAAUD,KAAAg2J,UAAAnzJ,MAAqBiyJ,eAAA90J,KAAAi2J,cAAAV,aAAA3zJ,EAAA85H,cAAA17H,KAAAm2J,cAAAG,QAAA/tJ,EAAAmmH,IAAAttH,IAAkGpB,KAAAi2J,cAAAr0J,EAAA5B,KAAAm2J,cAAA,EAA4Cn2J,KAAA69F,QAAAi3D,gBAAAlzJ,EAAA5B,KAAA69F,QAAAi3D,eAAA90J,KAAAyoH,SAAA,IAAAzoH,KAAA21J,kBAAA31J,KAAA21J,gBAAA/zJ,GAAA5B,KAAA01J,iBAAAz1J,EAAA+C,YAAgKyN,IAAA,cAAArF,MAAA,SAAAnL,GAAoCD,KAAAq4B,OAAAr4B,KAAA4nF,OAAA3nF,MAA8BwQ,IAAA,oBAAArF,MAAA,SAAAnL,EAAA4B,GAA4C,MAAA5B,IAAA4B,EAAA,eAA2B4O,IAAA,iBAAArF,MAAA,WAAsCpL,KAAAwvJ,YAAApnH,oBAAA,oBAAApoC,KAAAu2J,eAAAlpJ,KAAArN,YAAAw2J,gBAA8G/lJ,IAAA,aAAArF,MAAA,WAAkC,OAAApL,KAAAwvJ,YAAAiH,iBAAAz2J,KAAA41J,aAAA,GAA8D51J,KAAA4iF,YAAgB,CAAE,GAAA5iF,KAAAwvJ,YAAAiH,eAAAz2J,KAAA02J,oBAAA,YAAA12J,KAAA22J,WAAA3pJ,WAAAhN,KAAAw2J,WAAAnpJ,KAAArN,MAAA,KAAAA,KAAAwvJ,YAAAtnH,iBAAA,oBAAAloC,KAAAu2J,eAAAlpJ,KAAArN,OAA0N,IAAAC,GAAAD,KAAA81J,aAAAc,KAAA52J,KAAAuiG,UAA6CviG,MAAAuiG,WAAAtiG,EAAA+C,OAAAhD,KAAAgkB,KAAA/jB,GAAsCD,KAAAwvJ,YAAApnH,oBAAA,oBAAApoC,KAAAu2J,eAAAlpJ,KAAArN,UAA4FyQ,IAAA,YAAArF,MAAA,WAAiCpL,KAAA4iF,aAAA5iF,KAAA02J,oBAAA,IAAA12J,KAAA61J,UAAA71J,KAAAwvJ,YAAAxvJ,KAAA+pB,WAAAylI,YAAAxvJ,KAAA22J,cAAA,gBAAA32J,MAAAwvJ,YAAAqH,6BAAA72J,KAAA22J,cAAA32J,KAAAwvJ,YAAAqH,2BAAA72J,KAAA02J,oBAAA,IAAA1pJ,WAAAhN,KAAAw2J,WAAAnpJ,KAAArN,MAAA,OAAsUyQ,IAAA,cAAArF,MAAA,WAAmCpL,KAAA69F,QAAA03D,aAAAjzD,EAAAltD,aAAAp1C,KAAA69F,QAAAi5D,YAAA92J,KAAAyoH,SAAAzoH,KAAA69F,QAAAoE,aAAAjiG,KAAAiiG,aAAAjiG,KAAA69F,QAAA+3D,YAAA51J,KAAA41J,YAAA51J,KAAA69F,QAAAm4D,UAAAh2J,KAAAg2J,UAAAh2J,KAAA69F,QAAAk5D,cAAA/2J,KAAAuiG,UAAAviG,KAAA69F,QAAA69B,cAAA17H,KAAAy1J,aAA6S,IAAAx1J,GAAA,EAAA4B,EAAA,CAAY7B,MAAA21J,kBAAA11J,EAAAD,KAAA69F,QAAA03D,aAAAv1J,KAAA21J,gBAAA9zJ,EAAA7B,KAAAq2J,kBAAAr2J,KAAA01J,gBAAAz1J,GAA0H,IAAA2B,GAAA5B,KAAA69F,QAAA03D,aAAAv1J,KAAA69F,QAAAi3D,eAAAz0J,EAAAL,KAAAq2J,kBAAAr2J,KAAAy1J,cAAA7zJ,EAA2GvB,GAAAwB,MAAAxB,GAAAL,KAAA69F,QAAAy4D,QAAAz0J,CAAkC,IAAA0G,GAAA,IAAW,KAAIA,EAAAgb,KAAAgK,MAAAvtB,KAAA+1J,aAA+B,MAAA91J,GAAS,OAAO,GAAAsI,EAAA,CAAM,GAAAnH,GAAAmH,EAAAg6F,UAAAviG,KAAA+1J,YAAA/yJ,MAA0ChD,MAAA69F,QAAA89B,UAAAv6H,EAAApB,KAAA69F,QAAAm5D,kBAAA,EAAAh3J,KAAAy1J,cAAAr0J,MAA+EpB,MAAA69F,QAAA89B,WAAA,EAAA37H,KAAA69F,QAAAm5D,mBAAA,KAAoEvmJ,IAAA,OAAArF,MAAA,WAA4BpL,KAAA4iF,aAAAx+D,aAAApkB,KAAA20J,WAAA30J,KAAA20J,UAAA,KAAr3H,QAAA10J,GAAA4B,EAAAD,EAAAvB,GAA0B,OAAAwB,MAAAuL,SAAA3L,UAAiC,IAAA8G,GAAAxH,OAAAotD,yBAAAtsD,EAAAD,EAA2C,aAAA2G,EAAA,CAAe,GAAAnH,GAAAL,OAAAk1C,eAAAp0C,EAA+B,eAAAT,SAAAnB,EAAAmB,EAAAQ,EAAAvB,GAAgC,YAAAkI,GAAA,MAAAA,GAAA6C,KAA8B,IAAA9C,GAAAC,EAAApH,GAAY,iBAAAmH,IAAA9H,KAAAH,WAAupHwB,EAAAJ,UAAAu0C,WAAAj1C,OAAAk1C,eAAAp0C,EAAAJ,WAAA,OAAAzB,MAAAQ,KAAAR,WAAAk1J,mBAA+KrzJ,IAAQnC,GAAAqvJ,8CCAj4JhuJ,QAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAAyuJ,qBAAgC,IAAA1kH,GAAA,kBAAAvS,SAAA,gBAAAA,QAAAC,SAAA,SAAAl3B,GAAoF,aAAAA,IAAgB,SAAAA,GAAa,MAAAA,IAAA,kBAAAi3B,SAAAj3B,EAAAirC,cAAAhU,QAAAj3B,IAAAi3B,OAAAz1B,UAAA,eAAAxB,IAAoGi2C,EAAA,WAAyB,QAAAj2C,KAAA4B,GAAgB,OAAA0G,GAAA,EAAYA,EAAA1G,EAAAmB,OAAWuF,IAAA,CAAK,GAAA3G,GAAAC,EAAA0G,EAAW3G,GAAAV,WAAAU,EAAAV,eAAAU,EAAAX,gBAAA,SAAAW,OAAAomC,aAAAjnC,OAAAC,eAAAf,EAAA2B,EAAA6O,IAAA7O,IAA+G,gBAAAC,EAAA0G,EAAA3G,GAAuB,MAAA2G,IAAAtI,EAAA4B,EAAAJ,UAAA8G,GAAA3G,GAAA3B,EAAA4B,EAAAD,GAAAC,MAAwCygG,EAAn0B,SAAAriG,GAAoC,GAAAA,KAAAoB,WAAA,MAAApB,EAA4B,IAAA4B,KAAS,UAAA5B,EAAA,OAAAsI,KAAAtI,GAAAc,OAAAU,UAAAC,eAAAlB,KAAAP,EAAAsI,KAAA1G,EAAA0G,GAAAtI,EAAAsI,GAAiF,OAAA1G,GAAAP,QAAArB,EAAA4B,GAAyqB3B,EAAA,KAAAs1J,EAAAt1J,EAAA,IAAAiuJ,EAAA,WAAyJ,QAAAluJ,eAA7yBA,EAAA4B,GAA8B,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,uCAA4xBzO,KAAAC,GAAAD,KAAA4xB,MAAA0wE,EAAAltD,aAAAp1C,KAAAyC,GAAAyL,KAAA+oJ,MAAAj3J,KAAA4xB,OAAA,OAAA4jI,EAAApzD,mBAAA,IAAApiG,KAAAiE,QAAA,QAAAjE,KAAAk3J,YAAAl3J,KAAA69F,WAA2L79F,KAAAiiG,gBAAsB,MAAA/rD,GAAAj2C,IAAwBwQ,IAAA,aAAArF,MAAA,WAAkC,OAAO3I,GAAAzC,KAAAyC,GAAAwB,QAAAjE,KAAAiE,QAAAg+F,aAAAjiG,KAAAiiG,aAAA6yD,eAAA90J,KAAA4xB,MAAA2jI,aAAAjzD,EAAAltD,aAAA8hH,SAAAl3J,KAAAk3J,SAAAC,MAAAn3J,KAAA69F,YAA4KptF,IAAA,mBAAArF,MAAA,WAAwC,MAAApL,MAAAk3J,SAAAl0J,UAA+ByN,IAAA,QAAArF,MAAA,WAA6B,MAAApL,MAAAyC,MAAkBgO,IAAA,MAAArF,MAAA,SAAAnL,EAAA4B,GAA8B7B,KAAA69F,QAAA59F,GAAA4B,IAAAogG,mBAAApgG,EAAAogG,eAAAjiG,KAAAiiG,oBAAiFxxF,IAAA,UAAArF,MAAA,SAAAnL,GAAgC,qBAAAA,EAAA,YAAAwpC,EAAAxpC,UAAA4N,WAAiE,IAAAhM,IAAO60F,UAAA4L,EAAAltD,aAAAtvB,OAAA7lB,EAA4CD,MAAAk3J,SAAAr0J,KAAAhB,OAAuB5B,IAAQP,GAAAyuJ,8CCApiDptJ,QAAAC,eAAAtB,EAAA,cAA4C0L,WAAS1L,EAAAouJ,kBAA6B,IAAA53G,GAAA,WAA4B,QAAAj2C,KAAAmB,GAAgB,OAAAS,GAAA,EAAYA,EAAAT,EAAA4B,OAAWnB,IAAA,CAAK,GAAAxB,GAAAe,EAAAS,EAAWxB,GAAAa,WAAAb,EAAAa,eAAAb,EAAAY,gBAAA,SAAAZ,OAAA2nC,aAAAjnC,OAAAC,eAAAf,EAAAI,EAAAoQ,IAAApQ,IAA+G,gBAAAe,EAAAS,EAAAxB,GAAuB,MAAAwB,IAAA5B,EAAAmB,EAAAK,UAAAI,GAAAxB,GAAAJ,EAAAmB,EAAAf,GAAAe,MAAwCkhG,EAA9mB,SAAAriG,GAAoC,GAAAA,KAAAoB,WAAA,MAAApB,EAA4B,IAAAmB,KAAS,UAAAnB,EAAA,OAAA4B,KAAA5B,GAAAc,OAAAU,UAAAC,eAAAlB,KAAAP,EAAA4B,KAAAT,EAAAS,GAAA5B,EAAA4B,GAAiF,OAAAT,GAAAE,QAAArB,EAAAmB,GAAodlB,EAAA,KAAA4tJ,EAAA,WAA8G,QAAA7tJ,MAA7iB,SAAAA,EAAAmB,GAA8B,KAAAnB,YAAAmB,IAAA,SAAAqN,WAAA,sCAA4hBzO,KAAAC,GAAwB,MAAAi2C,GAAAj2C,IAAwBwQ,IAAA,QAAArF,MAAA,WAA6B,GAAAnL,GAAAD,IAAWA,MAAA6tJ,eAAAhpJ,eAAAqjC,kBAAA,kBAAArjC,QAAAqjC,mBAAArjC,OAAAqjC,iBAAA,qBAA+IjoC,EAAAm3J,aAAavyJ,OAAAqjC,iBAAA,oBAA8CjoC,EAAAm3J,aAAap3J,KAAAo3J,eAAsB3mJ,IAAA,WAAArF,MAAA,WAAgC,GAAAnL,GAAAqiG,EAAAltD,YAA8B,IAAAhyC,qBAAAk+H,OAAA,CAAgC,GAAAlgI,GAAAgC,UAAAk+H,MAAuBthI,MAAA6tJ,YAAAhrJ,MAAuB6zF,UAAAz2F,EAAAo3J,OAAAj2J,QAA2BqP,IAAA,OAAArF,MAAA,WAA4B,GAAAnL,GAAAD,IAAW,OAAA6E,QAAAujC,oBAAA,qBAAuDnoC,EAAAm3J,aAAavyJ,OAAAujC,oBAAA,oBAAiDnoC,EAAAm3J,aAAap3J,KAAA6tJ,gBAAoB5tJ,IAAQP,GAAAouJ,yDC4Fv6C,QAASwJ,GAAoBC,EAAaC,GACtC,OAAKA,GAAgBA,GAAgB,IACzBD,GAAeA,GAAe,EAC/B,EAGJrpJ,KAAKupJ,MAAOF,EAAcC,EAAgB,KAOrD,QAASE,KACL13J,KAAK23J,QACL33J,KAAK0xH,SACDrc,SAAU,EACVyc,OAAQ,GAEZ9xH,KAAK2vE,cACL3vE,KAAK6xH,UAAY,EA2FN,QAAS+lC,GAChBxiI,EACAL,EACAs/G,EACAzgH,GAgBJ5zB,KAAK63J,aAAeh1D,EAAAv6F,EAAehC,gBACnC,IAAMyxB,GAAO+/H,EAAqB93J,KAAK63J,aAEvC,KAAK9/H,EAED,0BAA2B/3B,KAAK63J,aAAhC,oBAWJ73J,MAAK+3J,cAAgB/3J,KAAKg4J,0BAA0BjgI,GAEpD/3B,KAAKo1B,eAAiBA,EACtBp1B,KAAKi4J,0BAA4B,KACjCj4J,KAAKk4J,yBAA2B,KAChCl4J,KAAKm4J,mBAAqB,KAC1Bn4J,KAAKo4J,oBAAsB,KAC3Bp4J,KAAKq4J,sBAAwB,KAC7Br4J,KAAK4zB,aAAeA,EACpB5zB,KAAKs4J,gBAAkB,GAvF3B,YAMIt4J,KAAK0xE,aAML1xE,KAAK0xH,WAML1xH,KAAK2xH,WAAa,KAMlB3xH,KAAKsC,cAkELtC,KAAKu4J,yBAA2BxjI,EAEhC/0B,KAAKw4J,gBAAkB,KACvBx4J,KAAKy4J,mBAAqBpkB,EAM1Br0I,KAAK04J,WAAa,GAAI/kI,KDpQ64Cm6H,4bCCj6C17H,EAAuBlyB,EAAQ,GAC/B0C,EAAS1C,EAAQ,GAAqBsC,UAAUyD,GAGhD0yJ,EAAmB91D,EAAAv6F,EAAe7B,YAC7Bo8F,EAAAv6F,EAAe5B,WAAam8F,EAAAv6F,EAAenC,aAC3C08F,EAAAv6F,EAAexB,UAAY+7F,EAAAv6F,EAAevB,cAC1C87F,EAAAv6F,EAAepB,uBAAyB27F,EAAAv6F,EAAelC,SAM5D0xJ,IAENA,GAAqBj1D,EAAAv6F,EAAejE,sBAChCm2B,KAAQ,OACR2hG,gBAAmB,kBACnB+mB,YAAe,cACflnB,YAAe,cACfN,cAAiB,gBACjBC,UAAa,YACb6nB,cAAiB,iBAErBsU,EAAqBj1D,EAAAv6F,EAAe9E,qBAChCo1J,iBAAoB,gCACpBC,cAAiB,6BACjBC,cAAiB,oBACjBhqC,cAAiB,oBACjBiqC,aAAgB,mBAChBC,iBAAoB,uBACpBx+H,KAAQ,OACR2hG,gBAAmB,kBACnBH,YAAe,cACfknB,YAAe,cACfxnB,cAAiB,gBACjBC,UAAa,YACb8nB,wBAA2B,0BAC3BE,uBAA0B,yBAC1BD,oBAAuB,sBACvBE,mBAAsB,qBACtBN,sBAAyB,wBACzBC,kBAAqB,oBACrBjhB,gBAAmB,kBACnBD,iBAAoB,mBACpB42B,qBAAwB,UACxBpqC,oBAAuB,0BACvBD,mBAAsB,0BAE1BkpC,EAAqBj1D,EAAAv6F,EAAehD,mBAChCuzJ,cAAiB,6BACjBC,cAAiB,gBACjBhqC,cAAiB,WACjBiqC,aAAgB,eAChBC,iBAAoB,mBACpBx+H,KAAQ,OACR2hG,gBAAmB,kBACnBH,YAAe,cACfknB,YAAe,cACfxnB,cAAiB,gBACjBC,UAAa,YACb8nB,wBAA2B,cAC3BE,uBAA0B,aAC1BD,oBAAuB,cACvBE,mBAAsB,aACtBN,sBAAyB,kBACzBC,kBAAqB,kBACrBjhB,gBAAmB,aACnBD,iBAAoB,aACpB42B,qBAAwB,iBAE5BnB,EAAqBj1D,EAAAv6F,EAAetE,mBAC9B8zJ,EAAqBj1D,EAAAv6F,EAAe9E,oBAC1Cs0J,EAAqBj1D,EAAAv6F,EAAe5C,kBAC9BoyJ,EAAqBj1D,EAAAv6F,EAAe9E,oBAC1Cs0J,EAAqBj1D,EAAAv6F,EAAe9C,sBAC9BsyJ,EAAqBj1D,EAAAv6F,EAAe9E,oBAC1Cs0J,EAAqBj1D,EAAAv6F,EAAenD,uBAC9B2yJ,EAAqBj1D,EAAAv6F,EAAe9E,oBAC1Cs0J,EAAqBj1D,EAAAv6F,EAAe9D,oBAC9BszJ,EAAqBj1D,EAAAv6F,EAAe9E,oBAC1Cs0J,EAAqBj1D,EAAAv6F,EAAezC,0BAC9BiyJ,EAAqBj1D,EAAAv6F,EAAe9E,oBAoC1Ck0J,EAAUj2J,UAAUy3J,QAAU,SAASvB,GACnC33J,KAAK23J,KAAOA,OAOhBD,EAAUj2J,UAAU03J,cAAgB,SAASxpF,GACzC3vE,KAAK2vE,WAAaA,OAQtB+nF,EAAUj2J,UAAU23J,WAAa,SAAS1nC,GACtC1xH,KAAK0xH,QAAQrc,UAAYqc,EAAQrc,SACjCr1G,KAAK0xH,QAAQI,QAAUJ,EAAQI,QAOnC4lC,EAAUj2J,UAAU43J,aAAe,WAC/Br5J,KAAK0xH,QAAQrc,SAAW,EACxBr1G,KAAK0xH,QAAQI,OAAS,GAO1B4lC,EAAUj2J,UAAU63J,aAAe,SAASznC,GACxC7xH,KAAK6xH,UAAYA,GAAa,GAiHlC+lC,EAAen2J,UAAU42B,KAAO,WACxBr4B,KAAKq4J,wBACLpxE,cAAcjnF,KAAKq4J,uBACnBr4J,KAAKq4J,sBAAwB,MAG7Br4J,KAAKw4J,kBACLvxE,cAAcjnF,KAAKw4J,iBACnBx4J,KAAKw4J,gBAAkB,OAQ/BZ,EAAen2J,UAAUkyE,cAAgB,SAASr3D,GAC9C8V,EAAqBC,iBAAiB/V,GACtC1Z,EAAO0Z,MAAM,kBAAmBA,GAChCtc,KAAKq4B,QAMTu/H,EAAen2J,UAAUmwB,MAAQ,SAAS2nI,GACtC,GAAMx5J,GAAOC,IAETu5J,KACAv5J,KAAKq4J,sBAAwBrxE,YACzB,WAEIjnF,EAAKq1B,eAAeghE,SAChB,SAAAI,GACI,GAAIqH,GAAU,IAMVA,GAJCrH,GAAWA,EAAOh6E,QACS,kBAAlBg6E,GAAOh6E,OAGPg6E,EAAOh6E,SAFPg6E,EAIdz2F,EAAKm4J,yBAA2Br6D,EAChC99F,EAAKy5J,0BACLz5J,EAAKk4J,0BACCl4J,EAAKm4J,0BAEfn4J,EAAK4zE,gBAGb5zE,EAAKw4J,2BAITI,IACA34J,KAAKw4J,gBAAkBxxE,YACnB,WAEIjnF,EAAKq1B,eAAeghE,SAChB,SAAAI,GACI,GAAIqH,GAAU,IAQVA,GANCrH,GAAWA,EAAOh6E,QACS,kBAAlBg6E,GAAOh6E,OAKPg6E,EAAOh6E,SAHPg6E,EAMdz2F,EAAKo4J,mBAAqBt6D,CAC1B,KACI99F,EAAK05J,qBACP,MAAOx5J,GACLmyB,EAAqBC,iBAAiBpyB,GACtC2C,EAAO0Z,MAAP,mBAAgCrc,EAAKA,GAGzCF,EAAKq4J,oBAAsBr4J,EAAKo4J,oBAEpCp4J,EAAK4zE,gBAGb5zE,EAAK04J,sBAajBb,EAAen2J,UAAUu2J,0BAA4B,SAASjgI,GAI1D,GAcI2hI,SAEJ,QAAQ15J,KAAK63J,cACb,IAAKh1D,GAAAv6F,EAAe9E,mBACpB,IAAKq/F,GAAAv6F,EAAetE,kBACpB,IAAK6+F,GAAAv6F,EAAe5C,iBACpB,IAAKm9F,GAAAv6F,EAAe9C,qBAQhBk0J,EAAgB,SAAChoH,EAAMjhC,GAAP,MAAeihC,GAAKilD,KAAKlmF,GACzC,MACJ,KAAKoyF,GAAAv6F,EAAezC,yBAIhB6zJ,EAAgB,SAAShoH,EAAMjhC,GAC3B,GAAIrF,SAaJ,OAXAsmC,GAAKza,OAAOqrC,KAAK,SAAAq3F,GACb,QAAIA,EAAKj4J,eAAe+O,KACpBrF,EAAQuuJ,EAAKlpJ,SASdrF,EAEX,MACJ,KAAKy3F,GAAAv6F,EAAehD,iBAChBo0J,EAAgB,SAAChoH,EAAMjhC,GAAP,MAAeihC,GAAKjhC,GACpC,MACJ,SACIipJ,EAAgB,SAAChoH,EAAMjhC,GAAP,MAAeihC,GAAKjhC,IAMxC,MAAO,UAACihC,EAAM9wC,GAAP,MAAgB84J,GAAchoH,EA7DjB,SAAS9wC,GACzB,GAAM6P,GAAMsnB,EAAKn3B,EAEjB,IAAI6P,EACA,MAAOA,EAIX,uBAAuB7P,EAAvB,sBAqDmDA,MAW3Dg3J,EAAen2J,UAAUm4J,mBAAqB,SAASpjE,EAAQ51F,GAC3D,GAAIwK,GAAQpL,KAAK+3J,cAAcvhE,EAAQ51F,EAMvC,OAJqB,gBAAVwK,KACPA,EAAQ6C,OAAO7C,IAGfoE,MAAMpE,GACC,EAGJ8C,KAAK0mC,IAAI,EAAGxpC,IAQvBwsJ,EAAen2J,UAAUg4J,mBAAqB,WAAW,GAAA1jH,GAAA/1C,IACrD,IAAKA,KAAKo4J,oBAAV,CAIA,GAAMyB,GAAe75J,KAAK+3J,cACpB+B,IAEN,KAAK,GAAM5/D,KAAOl6F,MAAKm4J,mBACnB,GAAKn4J,KAAKm4J,mBAAmBz2J,eAAew4F,GAA5C,CAGA,GAAMrwE,GAAM7pB,KAAKm4J,mBAAmBj+D,EAGpC,IAAKrwE,EAAL,CAIA,IACI,GAAM+uI,GAAmBiB,EAAahwI,EAAK,oBACrCgvI,EAAgBgB,EAAahwI,EAAK,kBAEpC+uI,GAAoBC,KACpB74J,KAAKs4J,gBAAgB5mF,WACjB2jC,SAAYnnG,KAAKupJ,MAAMmB,EAAmB,KAC1C9mC,OAAU5jH,KAAKupJ,MAAMoB,EAAgB,OAG/C,MAAO54J,IAET,GAAiB,sBAAb4pB,EAAI7L,MAA8B,wBAClC,GAAIujF,UAAQ/zD,SAAIohF,SAAoBmrC,SAChClrC,SAAqBH,SAAK1wG,QAE9B,KAEI,KADAujF,EAASs4D,EAAahwI,EAAK,qBAEvB,gBAGJ2jB,GAAKqsH,EAAahwI,EAAK,iBACvB7L,EAAO67I,EAAahwI,EAAK,iBACzBkwI,EAAUF,EAAahwI,EAAK,gBAC5B+kG,EAAqBirC,EAAahwI,EAAK,sBACvCglG,EAAsBgrC,EAAahwI,EAAK,uBACxC6kG,EAAM34E,EAAK6jH,mBAAmB/vI,EAAK,wBACrC,MAAO5pB,IACT,IAAKutC,IAAOxvB,IAAS+7I,GAAsB,SAAXx4D,EAC5B,gBAIJ,IAAMy4D,GAA2BjkH,EAAKuiH,gBAAgBh2J,SAiBtD,OAfK03J,GAAyB13F,KACtB,SAAAzgE,GAAA,MACIA,GAAE2rC,KAAOA,GACF3rC,EAAEmc,OAASA,GACXnc,EAAEk4J,UAAYA,KAC7BC,EAAyBn3J,MACrB2qC,KACAxvB,OACA+7I,UACA3zD,IAAKrwD,EAAK3gB,eAAe20C,MACzB6kD,qBACAC,sBACAH,QAGR,sBAGJ,IAAiB,kBAAb7kG,EAAI7L,KAA0B,CAE9B,GAAkB,cAAd6L,EAAIgwE,QAA0BhwE,EAAIo0G,SAClC,QAGJ,IAAMwR,GAAQzvI,KAAKm4J,mBAAmBtuI,EAAIyoI,kBACpC5iB,EAAS1vI,KAAKm4J,mBAAmBtuI,EAAIowI,kBAE3Cj6J,MAAKs4J,gBAAgBh2J,UAAUO,MAC3B2qC,GAAOkiG,EAAO2iB,UAAd,IAA2B3iB,EAAOwqB,WAClCl8I,KAAMyxH,EAAMntI,UACZy3J,QAAYtqB,EAAM4iB,UAAlB,IAA+B5iB,EAAMyqB,WACrC9zD,IAAKpmG,KAAKo1B,eAAe20C,MACzB6kD,mBAAoB6gB,EAAM+iB,cAC1B3jC,oBAAqB6gB,EAAO8iB,gBAcpC,GATmB,yBAAf3oI,EAAIswI,QACJn6J,KAAKs4J,gBAAgBh2J,UAAUO,MAC3B2qC,GAAI3jB,EAAIivI,cACR96I,KAAM6L,EAAItK,SACVw6I,QAASlwI,EAAIkvI,aACb3yD,IAAKpmG,KAAKo1B,eAAe20C,SAIhB,SAAblgD,EAAI7L,MAAgC,gBAAb6L,EAAI7L,MACX,eAAb6L,EAAI7L,MAAsC,UAAb6L,EAAI7L,SAMpC6kF,EAAAv6F,EAAelC,UACE,eAAbyjB,EAAI7L,MAAsC,gBAAb6L,EAAI7L,MADzC,CAKA,GAAMo8I,GAASp6J,KAAKo4J,oBAAoBl+D,GACpC1/D,EAAOx6B,KAAK45J,mBAAmB/vI,EAAK,OAOxC,IAJiB,UAAbA,EAAI7L,MAAoBxQ,MAAMG,QAAQkc,EAAIwwI,WAC1C7/H,EAAOvsB,OAAO4b,EAAIwwI,QAAQ,KAGzBD,GAAW5/H,IAcXqoE,EAAAv6F,EAAelC,eACRyjB,EAAIw6G,eAAqBx6G,EAAIywI,cADzC,CAKA,GAAIC,GAAYv6J,KAAK04J,WAAWv3J,IAAIq5B,EAE/B+/H,KACDA,EAAY,GAAI7C,GAChB13J,KAAK04J,WAAWljI,IAAIgF,EAAM+/H,GAG9B,IAAIC,MACA/pJ,EAAM,kBACNgqJ,EAAaZ,EAAahwI,EAAKpZ,YAExBgqJ,GACW,OAAfA,GAAsC,KAAfA,IAC1BD,SAAmB,MAEnBC,EAAaZ,EAAahwI,EAD1BpZ,EAAM,iBAEkD,OAAfgqJ,GACrC73J,EAAOwF,KAAK,oDAGfqyJ,GAAcA,EAAa,KAC5BA,EAAa,EAGjB,IAAMC,GAAgB16J,KAAK45J,mBAAmBQ,EAAQ3pJ,GAChDkqJ,EAAczsJ,KAAK0mC,IAAI,EAAG6lH,EAAaC,GAEvCE,EACA56J,KAAK45J,mBAAmB/vI,EAAK,eAC7BgxI,EACA76J,KAAK45J,mBAAmBQ,EAAQ,eAChCU,EAAkB5sJ,KAAK0mC,IAAI,EAAGgmH,EAAiBC,EAErDN,GAAUrB,SACN6B,aAAcJ,EAAcG,EAC5B5X,YAAa4X,EACbN,oBAGJ,IAAMQ,GACAh7J,KAAK45J,mBAAmB/vI,EAAK,iBAC7BoxI,EACAj7J,KAAK45J,mBAAmBQ,EAAQ,iBAChC1+B,EACAxtH,KAAK0mC,IAAI,EAAGomH,EAAmBC,GAEjCt/B,EAAY,EAGZu/B,EAAsBrB,EAAahwI,EAAK,YAET,iBAAxBqxI,IAC2B,gBAAxBA,KACVA,EAAsBjtJ,OAAOitJ,GACxB1rJ,MAAM0rJ,KACPpB,EAAct/H,GAAQ0gI,EAClBA,EAAsB,IACtBv/B,EAAYu/B,EACNrB,EAAaO,EAAQ,gBAIvCz+B,EAAYztH,KAAK0mC,IAAI,EAAG+mF,EAExB,IAAMw/B,GAAStxI,EAAI6sE,UAAY0jE,EAAO1jE,UAClC0kE,EAAsB,EAAGC,EAAkB,CAE3CF,GAAS,IAETC,EAAsBltJ,KAAKupJ,MAAuB,EAAhB/7B,EAAqBy/B,GACvDE,EAAkBntJ,KAAKupJ,MAAmB,EAAZ97B,EAAiBw/B,IAGnDZ,EAAUnB,YACN/jD,SAAY+lD,EACZtpC,OAAUupC,GAGd,IAAM1rF,IACFI,OAAQ,KACRF,MAAO,KAGX,KACI,GAAIE,UAAQF,UAEPE,EAAS8pF,EAAahwI,EAAK,8BACxBgmD,EAAQgqF,EAAahwI,EAAK,4BAC9B8lD,EAAWI,OAASA,EACpBJ,EAAWE,MAAQA,IACXE,EAAS8pF,EAAahwI,EAAK,0BAC/BgmD,EAAQgqF,EAAahwI,EAAK,yBAC9B8lD,EAAWI,OAASA,EACpBJ,EAAWE,MAAQA,GAEzB,MAAO5vE,IAGT,GAAI2xH,SAEJ,KACIA,EAAYioC,EAAahwI,EAAK,0BACvBgwI,EAAahwI,EAAK,sBAAwB,EACnD,MAAO5pB,GAGL,IACI2xH,EAAY5xH,KAAK45J,mBAAmB/vI,EAAK,iBAC3C,MAAOrD,KAEb+zI,EAAUjB,aAAaprJ,KAAKupJ,MAAM7lC,GAAa,IAE3CjiD,EAAWI,QAAUJ,EAAWE,MAChC0qF,EAAUpB,cAAcxpF,GAExB4qF,EAAUpB,cAAc,SAKhC,GAAM3B,IACFniD,SAAU,EACVyc,OAAQ,GAENylC,GACFliD,SAAU,EACVyc,OAAQ,GAERwpC,EAAkB,EAClBC,EAAgB,EACdC,KACAC,KACFC,EAAuB,EACvBC,EAAqB,EACrBC,EAAuB,EACvBC,EAAqB,EApR4BjlI,KAAAC,KAAAC,QAAA,KAsRrD,OAAAC,GAAAC,EAAkCh3B,KAAK04J,WAAvCxhI,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAmD,IAAAkf,GAAA/e,EAAA3rB,MAAAujG,GAAAC,EAAA94D,EAAA,GAAtCtb,GAAsCm0E,GAAA,GAAhC4rD,GAAgC5rD,GAAA,GAEzCgpD,GAAO4C,GAAU5C,KACjB35I,GAAO25I,GAAK6C,iBAAmB,WAAa,QAElDhD,GAAax5I,KAAS25I,GAAKoD,aAC3BxD,EAAYv5I,KAAS25I,GAAKzU,YAG1BoY,GAAmBf,GAAU7oC,QAAQrc,SACrCkmD,GAAiBhB,GAAU7oC,QAAQI,MAGnC,IAAMrnD,IAAQzqE,KAAKo1B,eAAey2C,eAAerxC,GAEjD,IAAIiwC,GAAO,CACHA,GAAMqB,gBACN4vF,GAAwBnB,GAAU7oC,QAAQrc,SAC1CsmD,GAAsBpB,GAAU7oC,QAAQI,SAExC8pC,GAAwBrB,GAAU7oC,QAAQrc,SAC1CwmD,GAAsBtB,GAAU7oC,QAAQI,OAG5C,IAAMrvC,IAAgBhY,GAAM8Y,kBAE5B,IAAId,GAAe,CACf,GAAM9S,IAAa4qF,GAAU5qF,UAE7B,IAAIA,GAAWE,OACJF,GAAWI,SACW,IAAtBJ,GAAWE,QACY,IAAvBF,GAAWI,OAAe,CACjC,GAAM+rF,IAAkBN,EAAY/4E,OAEpCq5E,IAAgBthI,IAAQm1C,GACxB6rF,EAAY/4E,IAAiBq5E,GAEjC,GAA4B,IAAxBvB,GAAU1oC,UAAiB,CAC3B,GAAMkqC,IAAiBN,EAAWh5E,OAElCs5E,IAAevhI,IAAQ+/H,GAAU1oC,UACjC4pC,EAAWh5E,IAAiBs5E,QAGhCn5J,GAAO0Z,MAAP,iCAA8CmuD,QAE3CzqE,MAAKo1B,eAAe20C,OAS3BnnE,EAAO0Z,MACH,iCAAiCke,GAAjC,OACax6B,KAAKo1B,eAG1BmlI,IAAUlB,gBAnVuC,MAAA7yI,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAsVrD92B,KAAK4zB,aAAa+C,KACdqlI,EAAAt7J,EAAkCV,KAAKo1B,eAAgB0kI,GAE3D95J,KAAKs4J,gBAAgB5mC,SACjBI,OAAUypC,EACVlmD,SAAYimD,GAGhBt7J,KAAKs4J,gBAAgB5mC,QAAQziD,OACzB6iD,OAAU6pC,EACVtmD,SAAYqmD,GAGhB17J,KAAKs4J,gBAAgB5mC,QAAQ3nF,OACzB+nF,OAAU+pC,EACVxmD,SAAYumD,GAGhB57J,KAAKs4J,gBAAgB3mC,YACjBI,MACIulC,EACIC,EAAYliD,SAAWkiD,EAAYzlC,OACnC0lC,EAAaniD,SAAWmiD,EAAa1lC,QAC7Czc,SACIiiD,EAAoBC,EAAYliD,SAAUmiD,EAAaniD,UAC3Dyc,OACIwlC,EAAoBC,EAAYzlC,OAAQ0lC,EAAa1lC,SAG7D9xH,KAAK4zB,aAAa+C,KACdqlI,EAAAr7J,EACAX,KAAKo1B,gBAEDs8C,UAAa1xE,KAAKs4J,gBAAgB5mF,UAClCggD,QAAW1xH,KAAKs4J,gBAAgB5mC,QAChCC,WAAc3xH,KAAKs4J,gBAAgB3mC,WACnChiD,WAAc6rF,EACd3pC,UAAa4pC,EACbn5J,UAAatC,KAAKs4J,gBAAgBh2J,YAE1CtC,KAAKs4J,gBAAgBh2J,eAMzBs1J,EAAen2J,UAAU+3J,wBAA0B,WAC/C,GAAKx5J,KAAKi4J,0BAAV,CAIA,GAAM4B,GAAe75J,KAAK+3J,aAE1B,KAAK,GAAM79D,KAAOl6F,MAAKk4J,yBACnB,GAAKl4J,KAAKk4J,yBAAyBx2J,eAAew4F,GAAlD,CAIA,GAAMrwE,GAAM7pB,KAAKk4J,yBAAyBh+D,EAE1C,IAAiB,SAAbrwE,EAAI7L,MAAgC,UAAb6L,EAAI7L,KAA/B,CAIA,GAAMo8I,GAASp6J,KAAKi4J,0BAA0B/9D,GAC1C1/D,EAAOx6B,KAAK45J,mBAAmB/vI,EAAK,OAMxC,KAJK2Q,GAAQhtB,MAAMG,QAAQkc,EAAIwwI,WAC3B7/H,EAAOvsB,OAAO4b,EAAIwwI,QAAQ,KAGzBD,EAKL,GAAK5/H,EAAL,CAQA,GAAIoxC,SAEJ,KACIA,EACMiuF,EAAahwI,EAAK,oBACbgwI,EAAahwI,EAAK,oBAC/B,MAAO5pB,GAIL,MAHA2C,GAAOwF,KAAK,yDACZ6+E,eAAcjnF,KAAKq4J,uBAKvB,GAAIzsF,EAAY,CACZ,GAAI/vC,SAIAA,GADa,SAAbhS,EAAI7L,MACO67I,EAAahwI,EAAK,oBAIlBA,EAAIywI,aAUfz3D,EAAAv6F,EAAelC,SACfwlE,EAAaA,EAAa,EAAI19D,KAAKwhB,IAAI,GAAIk8C,EAAa,IAAM,EAK9DA,GAA0B,MAG9B5rE,KAAK4zB,aAAa+C,KACdqlI,EAAA1zJ,EACAtI,KAAKo1B,eACLoF,EACAoxC,EACA/vC,QArDC5c,MAAK4K,MAAQA,EAAI6sE,UAAa,KAC/B9zF,EAAOwF,KAAK,iBANhBxF,GAAOwF,KAAQoyB,EAAf,0BAAAh6B,KAAAqB,EAAA,qDAAA5B,EAAA4B,EAAAT,GC52BZ,GAAAsH,GAAAF,EAAAC,CAsBAzI,OAAA6E,OAXA2D,eAAAC,EAAA,mBAAAC,EAcA,WA+QA,QAAAuzJ,KAIA,OAAAC,EAAAl5J,OACA,WAGA,IAAA3C,GAAAJ,EAAA2b,EAAAu+D,EAAAsqB,EACA03D,KACAC,EAAAH,EAAAG,gBAAA,CAQA,KAAA/7J,EAAA,EAAaA,EAAA67J,EAAAl5J,OAAoB3C,IACjCg8J,GAAAC,EACAC,EAAAh4J,KAAA23J,EAAA77J,GAAA+tB,aACA+tI,EAAAt5J,KAAAq5J,EAAA77J,IAIA87J,EAAAt5J,KAAAq5J,EAAA77J,GAQA,IAJAJ,EAAA,GAAAyL,OACA8wJ,IACA5gJ,EAAA3b,EAAA2b,QAEAA,GAAA6gJ,EACA,IACA,KAAAx8J,GAEA,MAAAumB,GAEA5K,EAAA4K,EAAA5K,MAiEA,GA7DAA,KAEA6oF,EAzQA,SAAAtqB,EAAAgiF,GACA,GAAA97J,GACAokG,EAAA,IAIA,IAFA03D,KAAAD,EAEA,gBAAA/hF,MACA,IAAA95E,EAAA87J,EAAAn5J,OAAoC3C,KACpC,GAAA87J,EAAA97J,GAAA6+D,MAAAib,EAAA,CAGAsqB,EAAA03D,EAAA97J,EACA,OAIA,MAAAokG,IAwPAtqB,EAvMA,QAAAuiF,GAAA9gJ,EAAAwgJ,GACA,GAAAjzI,GACAgxD,EAAA,KACAwiF,EAAA,gBAAAP,EA+BA,OA9BAA,GAAAO,EAAAzuJ,KAAAupJ,MAAA2E,GAAA,EACA,gBAAAxgJ,QACA+gJ,EACAxzI,EAAAvN,EAAAjY,MAAA,+GAGAwlB,EAAAvN,EAAAjY,MAAA,kNAEAwlB,EAAA,KACAA,EAAAvN,EAAAjY,MAAA,kHAIAwlB,KAAA,KAGAgxD,EAFAiiF,EAAA,EAEAM,EADA9gJ,EAAAtR,MAAAsR,EAAA7W,QAAAokB,EAAA,IAAAA,EAAA,GAAAnmB,QACAo5J,EAAA,GAGAjzI,EAAA,KAWAgxD,GAqKAv+D,EAAAwgJ,GACAD,KAEAS,GAAAziF,IAAAyiF,IAiBAn4D,EA5OA,SAAA03D,GACA,GAAA97J,GAAA0N,EACA02F,EAAA,IAEA,KAAApkG,EAAA,EAAA0N,GADAouJ,KAAAD,GACAl5J,OAA2C3C,EAAA0N,EAAS1N,IACpD,IAAA87J,EAAA97J,GAAAw8J,aAAA,QACA,GAAAp4D,EAAA,CACAA,EAAA,IACA,OAEAA,EAAA03D,EAAA97J,GAGA,MAAAokG,IA+NA03D,IAUA13D,GAKA,IAAA03D,EAAAn5J,SACAyhG,EAAA03D,EAAA,IAIA13D,GAeAq4D,IACAr4D,EAAAlxF,SAAAwpJ,gBAIAt4D,GAeA43D,GAAAC,EACA,IAAAj8J,EAAA87J,EAAAn5J,OAAsC3C,KACtC,mBAAA87J,EAAA97J,GAAA+tB,WAAA,CACAq2E,EAAA03D,EAAA97J,EACA,OAkCA,MA5BAokG,KAyBAA,EAAA03D,IAAAn5J,OAAA,UAGAyhG,EA1aA,GAAA83D,GAAA,kCAGAS,EAAAn4J,OAAAgrB,SAAAhrB,OAAAgrB,SAAA0lF,KAAA,KACAqnD,EAAAI,IAAA5yJ,QAAA,WAAAA,QAAA,uBAGA8xJ,EAAA3oJ,SAAA0T,qBAAA,UAGAq1I,EAAA,eAAAJ,EAAA,IAAA3oJ,SAAA4F,cAAA,WAGAkjJ,GAAAx3J,OAAAqyC,OAAA,mBAAAryC,OAAAqyC,MAAArpC,WAGAivJ,EAAA,iBAAAvpJ,SAIA,oBAAA7H,cAAAw+C,kBAAA+yG,MACAvxJ,MAAAw+C,gBACAx+C,MAAAw+C,gBAAA+yG,IAOA,IAAAT,MACAC,MACA,WACA,IACA,GAAAj2I,GAAA,GAAA9a,MAEA,MADA8wJ,GAAA,gBAAAh2I,GAAA5K,SAAA4K,EAAA5K,MACA4K,EAEA,MAAA02I,GACAT,EAAA,gBAAAS,GAAAthJ,SAAAshJ,EAAAthJ,UAwYAqgJ,EAAAG,eAAA,CAOA,IAAAh4D,GAAA63D,CASA,OARA73D,GAAA+4D,KAAAlB,EACA73D,EAAAg5D,IA1RA,WAMA,aAqRAh5D,EAAAi5D,OArLA,WAIA,aAuLAj5D,IA9cA17F,EAAAuC,MAAAvL,EAAA8I,GAAAE,KAAA/I,EAAAD,QAAA+I,kBCPA9I,EAAOD,SAHHw+B,UAAW,mBAAAj+B,EAAA4B,EAAAT,GAAA,uBAAAnB,GC6BA,QAASq9J,GAAmB91F,GAEvCxnE,KAAKknE,YAELlnE,KAAKwnE,WAAaA,EAClBxnE,KAAKwnE,WAAW04C,mBACZ,WAAYlgH,KAAKu9J,gBAAgBlwJ,KAAKrN,ODnC/B6B,EAAAyG,EAAAxH,CAAA,IAAAyH,GAAAnH,EAAA,GCCTwB,EAAS1C,EAAQ,GAAqBsC,UAAUyD,EAMtDq3J,GAAmBE,gBAAkB,QAMrCF,EAAmBG,sBAAwB,cAM3CH,EAAmBI,sBAAwB,OAmB3CJ,EAAmB77J,UAAU87J,gBACvB,SAAS/jJ,EAAMmkJ,EAAanzC,GAAQ,GAAAz0E,GAAA/1C,IAClC,IAA8B,6BAA1BwZ,EAAKlE,WAAWyH,MAMpB,GAAK/c,KAAKwnE,WAAW+iD,SAASC,GAA9B,CAQA,GAAM1mH,KAEN0V,GAAKm1E,SAAStgF,QAAQ,SAAAqjC,GAElB,GAAMksH,GAAgBlsH,EAAKp8B,WAAW1U,IAEtC,IAAIg9J,IAAkBN,EAAmBE,iBACtCI,IAAkBN,EAAmBI,uBACrCE,IAAkBN,EAAmBG,sBAFxC,CAUA,GAAMx5J,GAAUytC,EAAKtmC,KAEjB2qC,GAAKmxB,SAAS02F,KAAmB35J,IACjC8xC,EAAKmxB,SAAS02F,GAAiB35J,EAC/BrB,EAAOsB,KAAP,OAAmB05J,EAAnB,aAA6C35J,GAE7CH,EAAIjB,MACAJ,GAAI,oBACJ8qC,UAAWqwH,EACX35J,iBAhBJrB,GAAOwF,KAAP,sDAEQw1J,KAoBZ95J,EAAId,OAAS,GACb66J,EAAAv1J,EAAW00B,QAAQzZ,KAAKkK,UAAU3pB,QAvClClB,GAAOwF,KAAP,8CACkDoR,EAC9CgxG,OARJ5nH,GAAOwF,KAAK,iDAAkDoR,IAwD1E8jJ,EAAmB77J,UAAUq8J,oBAAsB,SAASF,GACxD,MAAO59J,MAAKknE,SAAS02F,iGC5BzB,QAASG,GAAUC,EAAWruF,EAAYsuF,GAItC,GAAIA,EAAmB,IACnB,MAAO,EAGX,IAAIjiH,GAAS,EACT+zB,EAAS7hE,KAAKuhB,IAAIkgD,EAAWI,OAAQJ,EAAWE,MAEpD,IAAImuF,EAAW,CAEX,GAAIE,GAAkBC,EAAkBzuH,KAAK,SAAArjC,GAAA,MAAKA,GAAE0jE,QAAUA,GAE9D,IAAImuF,EAAiB,CAGjB,IAAKnuF,EAASmuF,EAAgBnuF,OAAQA,GAAU,KAAkB,UAHjD,WAIb,GAAMquF,GAAeruF,CAIrB,MAFAmuF,EACMC,EAAkBzuH,KAAK,SAAArjC,GAAA,MAAKA,GAAE0jE,SAAWquF,KAI3C,aAFApiH,IAAUkiH,EAAgBliH,UANmB+zB,GAAU,SAYhE,CAGH,GAAMsuF,GAAS1uF,EAAWE,MAAQF,EAAWI,MAGzC/zB,GADAqiH,GAAU,MACD,IACFA,GAAU,OACR,KACFA,GAAU,OACR,IAEA,KAMjB,MAAOnwJ,MAAKuhB,IAAIusB,EASpB,SAAgBiiH,GACZ,MAAIA,GAAmB,IACZhwJ,OAAOqwJ,iBAMXC,EAAerwJ,KAAKwhB,IAAI,KAAMuuI,EAAmB,MAjBzB/vJ,KAAK0mC,IAAI,EAAGqpH,EAAmB,ODpBzCL,wRC9FnB/yD,EAAa3qG,EAAQ,GACrBs+J,EAAYt+J,EAAQ,IACpBu+J,EAAcv+J,EAAQ,IAEtB0C,EAAS7B,OAAA29J,EAAAl8J,WAAUyD,GAMnB04J,EAAqB,QAKrBR,IACAtuF,MAAO,KACLE,OAAQ,KACR6uF,OAAQ,EACRhqH,IAAK,IACLoH,OAAQ,IACRvsB,IAAK,MACPogD,MAAO,KACLE,OAAQ,IACR6uF,OAAQ,EACRhqH,IAAK,KACLoH,OAAQ,KACRvsB,IAAK,MACPogD,MAAO,IACLE,OAAQ,IACR6uF,OAAQ,EACRhqH,IAAK,IACLoH,OAAQ,IACRvsB,IAAK,MACPogD,MAAO,IACLE,OAAQ,IACR6uF,OAAQ,EACRhqH,IAAK,IACLoH,OAAQ,IACRvsB,IAAK,MACPogD,MAAO,IACLE,OAAQ,IACR6uF,OAAQ,EACRhqH,IAAK,IACLoH,OAAQ,IACRvsB,IAAK,MACPogD,MAAO,IACLE,OAAQ,IACR6uF,OAAQ,EACRhqH,IAAK,IACLoH,OAAQ,IACRvsB,IAAK,KAMT8uI,EAAe,IAmFEM,aAOjB,QAAAA,GAAYr3F,EAAY5zC,EAAc3V,GAAS,GAAA83B,GAAA/1C,wGAAA6+J,GAC3C7+J,KAAK4zB,aAAeA,EAKpB5zB,KAAKouH,YAAc5mD,EAKnBxnE,KAAK8+J,aACD/nD,kBAAmB,IACnB8Y,eAMJ7vH,KAAK++J,8BAAgC,EAMrC/+J,KAAKg/J,gBAMLh/J,KAAKi/J,mBAAqB,EAM1Bj/J,KAAKk/J,mBAAqB,EAItBjhJ,EAAQsgJ,cAAgBtgJ,EAAQsgJ,aAAe,IAC/CA,EAAetgJ,EAAQsgJ,cAK3B/2F,EAAWzxC,GACP6rD,EAAA7iD,uBACA,WACIgX,EAAKopH,8BAA8B,GACnCppH,EAAKniB,aAAa+C,KACdyoI,EAAAxiF,oBACA7mC,EAAK+oH,aACT/oH,EAAKspH,yBAGb73F,EAAWg1C,KAAKr0E,YACZ0iE,EAAWlkE,6BACX,SAACw/E,EAAe7hC,GACP6hC,EAAcp8C,OAAsB,cAAbua,IACxBvuC,EAAKkpH,kBAAoBp6J,OAAOwwC,YAAYxrB,SAMxD29C,EAAWzxC,GACP6rD,EAAAviD,0BACA,SAAC0jD,EAAa7xC,GACNA,EAAQlzB,OAAS2gJ,GACjB5oH,EAAKupH,mBACDv8E,EAAYG,QAAShyC,EAAQja,UAa7CuwC,EAAWruC,WAAW9C,2BAClBr2B,KAAKu/J,kBAAkBlyJ,KAAKrN,OAGhCwnE,EAAWzxC,GACP6rD,EAAAlhD,mBACA,SAAA+pC,GACQA,EAAMonC,iBACFpnC,EAAMqa,UACN/uC,EAAKmpH,mBAAqB,EAE1BnpH,EAAKypH,4BAIrBh4F,EAAWzxC,GACP6rD,EAAAphD,YACA,SAAAiqC,GACQA,EAAMonC,iBAAmBpnC,EAAMqa,WAC/B/uC,EAAKypH,sFAUbx/J,KAAKk/J,kBAAoB,IACzBl/J,KAAKk/J,kBAAoBr6J,OAAOwwC,YAAYxrB,2DAaxB6iD,EAAWoY,EAAS26E,GAI5C,GAAM9vF,GAAa8uF,EAAYgB,GAE3Bz9B,EAAU,IACVrQ,QA0BJ,IAtBI3xH,KAAK8+J,YAAYntC,aACjBA,EAAa3xH,KAAK8+J,YAAYntC,WAAWG,OAgBrChtC,IACA6sC,GAAc,KAIlB7sC,IAAYnV,GAAcjD,IAAc8xF,EAAUpzH,SAC/CprC,KAAKi/J,kBAAoB,GACzBj/J,KAAKk/J,kBAAoB,WAGxBvtC,GACA/uH,EAAO0Z,MAAM,6DAEb0lH,EAAU,KAEVA,EADOrQ,GAAc,EACX,IACHA,GAAc,EACX,GACHA,GAAc,EACX,GACHA,GAAc,EACX,GACHA,GAAc,GACX,GAEA,MAEX,CAIH,GAAMssC,GAAmBp5J,OAAOwwC,YAAYxrB,MAClC3b,KAAK0mC,IAAI50C,KAAKk/J,kBAAmBl/J,KAAKi/J,mBAG1CS,EAAY1/J,KAAKouH,YAAYzM,0BAK/B3lE,EACE+hH,EAJAjkF,QAAQ4lF,GAAaA,EAAUC,iBAINhwF,EAAYsuF,EAE3CjiH,IAAS,GAETgmF,EAAU,IAAMhiI,KAAK8+J,YAAYptC,QAAQI,OAAS91E,EAG9C21E,GAAcA,GAAc,KAC5BqQ,EAAU9zH,KAAKuhB,IAAIuyG,EAAS,KAKpC,GAAIhiI,KAAK++J,6BAA+B,EAAG,CACvC,GACMa,GAAwB5/J,KAAK8+J,YAAY/nD,kBACzC8oD,GACCh7J,OAAOwwC,YAAYxrB,MAAQ7pB,KAAK++J,8BAC7B,GAEV/8B,GACM9zH,KAAKuhB,IACHuyG,EACA49B,EATqB,EAUdC,GAGnB,MAAO3xJ,MAAKuhB,IAAI,IAAKuyG,yDAOK52H,GAC1BpL,KAAK8+J,YAAY/nD,kBAAoB3rG,EACrCpL,KAAK++J,6BAA+Bl6J,OAAOwwC,YAAYxrB,qDASvD,GAAMnZ,IACFghH,QAAS1xH,KAAK8+J,YAAYptC,QAC1BC,WAAY3xH,KAAK8+J,YAAYntC,WAC7B5a,kBAAmB/2G,KAAK8+J,YAAY/nD,kBACpC8Y,OAAQ7vH,KAAK8+J,YAAYjvC,OAG7B,KACI7vH,KAAKouH,YAAYxD,0BACb5sG,KAAM2gJ,EACN1nI,OAAQvmB,IACd,MAAOzQ,+CAmBKu3B,EAAK9mB,GAEnB,IAAK8mB,EAAIuyC,MAAO,CACZ,GAAM8lD,GACAn/G,EAAKpO,WACAoO,EAAKpO,UAAUU,QAAU0N,EAAKpO,UAAU,GAAGosH,GAEtD1uH,MAAK8+J,YAAYjvC,OAASA,UAK9B,GAAIr4F,IAAQx3B,KAAKouH,YAAYzM,0BAA7B,CAIA,GAAIlxG,UACEqvJ,GACC9/J,KAAKouH,YAAYvD,0BAClBtJ,EACAvhH,KAAKouH,YAAYpO,qBACjBtzC,EACA60C,EAAkBA,EAAgB70C,iBAClCoY,GAAUy8B,GAAkBA,EAAgBz8B,UAC5CnV,EAAa4xC,EAAkBA,EAAgB5xC,WAAa,IAE7DmV,IACD9kF,KAAKw/J,wBAIT,KAAK/uJ,IAAOC,GACJA,EAAKhP,eAAe+O,KACpBzQ,KAAK8+J,YAAYruJ,GAAOC,EAAKD,GAKjCqvJ,IACA9/J,KAAKm/J,8BACDn/J,KAAK+/J,4BACDrzF,EACAoY,EACAnV,IAGZ3vE,KAAK4zB,aAAa+C,KACdyoI,EAAAxiF,oBACA58E,KAAK8+J,aACT9+J,KAAKq/J,mEAQU58J,EAAIiO,GAEnB1Q,KAAKg/J,aAAav8J,IACdivH,QAAShhH,EAAKghH,QACdC,WAAYjhH,EAAKihH,WACjB5a,kBAAmBrmG,EAAKqmG,kBACxB8Y,OAAQn/G,EAAKm/G,QAGjB7vH,KAAK4zB,aAAa+C,KACdyoI,EAAAziF,qBACAl6E,EACAzC,KAAKg/J,aAAav8J,uCAQtB,MAAOzC,MAAK8+J,mHC1bL,SAAAhpH,GAWZ,GAAAC,GAAA/1C,KATCyC,EASDqzC,EATCrzC,GACAkqF,EAQD72C,EARC62C,SAIAqzE,EAIDlqH,EAJCkqH,kBAGAC,EACDnqH,EADCmqH,aAEIC,KACAC,SACA1sI,EAAO,GAAI2sI,GAAA93J,EAAKtI,KAAK+pB,WAAW9L,SAE9B05B,EAAU,GAAIK,SAAQ,SAAC4E,EAAS8F,GAIlCy9G,EAAgBz9G,EAGhBjvB,EAAK0U,YACDk4H,EAAAj5F,wBACA,WACI3zC,WAERA,EAAK0U,YACDk4H,EAAA/7H,uBACA,WACI,IAAI47H,EAAJ,CAKAF,GAAqBA,GAIfvsI,GAAK+0E,WAAWzyD,EAAK93B,QAAQrd,KAAMm1C,EAAK93B,QAAQjU,QAEjD01G,UAAUj4F,eACVsoC,KAAK,WACFt8B,GAAQA,EAAK5N,aAETq6I,IAOJnqH,EAAKtrC,KAAKw1J,GAEVrjH,OAEHwZ,MAAM,SAAAu4C,GAAwB,GAArBryF,GAAqBqyF,EAArBryF,MAAOL,EAAc0yF,EAAd1yF,OACbwX,GAAK5N,aAEL68B,GACI49G,oBAAqBhkJ,EACrBL,iBAIpBwX,EAAK0U,YACDk4H,EAAA97H,kBACA,SAACg8H,EAAiBtkJ,EAAS+pF,GACvBtjD,GACI69G,kBACAv6D,cACA/pF,YAEJwX,WAGRysI,GAAYzsI,EAAKrR,QAAQ3f,EAAIkqF,IAgBjC,OANAh1C,GAAQ8G,OAAS,WACbyhH,KACAC,MACA1sI,GAAQA,EAAK5N,cAGV8xB,kDCpJV6oH,GAA+B,YAEhCA,GAAA9sJ,QAAAmJ,oBAAA,SAEAmN,YAAA,KACAy2I,eACAC,aACAC,UAOAl/I,KAAA,SAAA6jF,GAEAtlG,KAAAgqB,YAAAs7E,EACAtlG,KAAAygK,eACAzgK,KAAA0gK,aACA1gK,KAAA2gK,UAEAr7D,EAAA7gF,WAAAzkB,KAAA4gK,aAAAvzJ,KAAArN,MAAAwgK,EAAA9sJ,QAAAS,GAAAO,WAAA,sBAEA4wF,EAAA7gF,WAAAzkB,KAAA6gK,cAAAxzJ,KAAArN,MAAAwgK,EAAA9sJ,QAAAS,GAAAQ,YAAA,uBAaAmsJ,YAAA,SAAAC,EAAA/iJ,EAAApd,EAAAogK,GAEA,OAAA3gK,GAAA,EAAqBA,EAAAL,KAAAygK,YAAAz9J,OAA2B3C,IAEhD,GAAAL,KAAAygK,YAAApgK,GAAA0gK,aACA/gK,KAAAygK,YAAApgK,GAAA2d,SACAhe,KAAAygK,YAAApgK,GAAAO,SACAZ,KAAAygK,YAAApgK,GAAA2gK,QAEA,QAIA,OADAhhK,MAAAygK,YAAA59J,MAA+Bk+J,WAAA/iJ,OAAApd,OAAAogK,aAW/Bp7D,WAAA,SAAAq7D,GAEA,OAAA5gK,GAAA,EAAqBA,EAAAL,KAAA0gK,UAAA19J,OAAyB3C,IAE9C,GAAAL,KAAA0gK,UAAArgK,IAAA4gK,EACA,QAGA,OADAjhK,MAAA0gK,UAAA79J,KAAAo+J,OAWAxmD,cAAA,SAAAwmD,GAEA,OAAA5gK,GAAA,EAAqBA,EAAAL,KAAA0gK,UAAA19J,OAAyB3C,IAE9C,GAAAL,KAAA0gK,UAAArgK,KAAA4gK,EAEA,MADAjhK,MAAA0gK,UAAAl2J,OAAAnK,EAAA,KAIA,WAaA6gK,QAAA,SAAA5lJ,EAAA1a,EAAA4Y,EAAA2nJ,GAEA,QAAA3nJ,IAAA2nJ,IAEAnhK,KAAA2gK,OAAA99J,MAA0ByY,MAAA1a,OAAA4Y,OAAA2nJ,mBAW1Bj9J,KAAA,SAAAoX,EAAA9B,EAAAs2C,EAAAxzC,EAAAiI,GAEA,GAAAvQ,IAAqB+I,MAAAyjJ,EAAA9sJ,QAAAS,GAAAO,WACrB8E,KACAxF,EAAAwF,OAEA,IAAAtV,GAAAs8J,EAAA5sJ,KAAmC5F,KAAAhO,KAAAgqB,YAAA1O,IACnCuN,GAAAvN,EAAA0C,KAAA,QAA4Ctd,EAAA,QAAAsT,EAC5ChU,MAAAgqB,YAAAlF,OAAA5gB,EAAA4rD,EAAAxzC,EAAAiI,IAUAolI,MAAA,SAAAruI,EAAA9B,EAAAs2C,EAAAxzC,EAAAiI,GAEA,GAAAvQ,IAAqB+I,MAAAyjJ,EAAA9sJ,QAAAS,GAAAQ,YACrB6E,KACAxF,EAAAwF,OAEA,IAAAmwI,GAAA6W,EAAA5sJ,KAAoC5F,KAAAhO,KAAAgqB,YAAA1O,IACpCuN,GAAAvN,EAAA0C,KAAA,QAA4Ctd,EAAA,QAAAsT,EAC5ChU,MAAAgqB,YAAAlF,OAAA6kI,EAAA75F,EAAAxzC,EAAAiI,IAKA68I,eAAA,SAAA18I,EAAA28I,GAEA,GAAA5+J,GAAAiiB,EAAA1J,aAAA,MACAhN,EAAA0W,EAAA1J,aAAA,QACAsmJ,EAAAd,EAAA5sJ,KAAuCoK,KAAA,SAAAvb,MAMvC,OAJA,QAAAuL,GACAszJ,EAAAttJ,OAA4B6U,GAAA7a,IAG5BszJ,EAAA5gK,EAAA,QAAA2gK,IAMAT,aAAA,SAAAl8I,GAEA,GAEArkB,GAFAmZ,EAAAkL,EAAAuC,qBAAA,YAAAjM,aAAA,QACAhH,GAAqB+I,MAAAyjJ,EAAA9sJ,QAAAS,GAAAO,WAErB8E,KAEAxF,EAAAwF,OAEA,IAAA8nJ,GAAAthK,KAAAohK,eAAA18I,EAAA1Q,EACA,KAAA3T,EAAA,EAAiBA,EAAAL,KAAAygK,YAAAz9J,OAA2B3C,IAE5C2T,GAAqB+sJ,SAAA/gK,KAAAygK,YAAApgK,GAAA0gK,SACrB/iJ,KAAAhe,KAAAygK,YAAApgK,GAAA2d,MACAhe,KAAAygK,YAAApgK,GAAAO,OACAoT,EAAApT,KAAAZ,KAAAygK,YAAApgK,GAAAO,MACAZ,KAAAygK,YAAApgK,GAAA2gK,OACAhtJ,EAAA,YAAAhU,KAAAygK,YAAApgK,GAAA2gK,MACAM,EAAA5gK,EAAA,WAAAsT,GAAAiJ,IAEA,KAAA5c,EAAA,EAAiBA,EAAAL,KAAA0gK,UAAA19J,OAAyB3C,IAE1CihK,EAAA5gK,EAAA,WAAmC6gK,IAAAvhK,KAAA0gK,UAAArgK,KAAwB4c,IAG3D,OADAjd,MAAAgqB,YAAAhG,KAAAs9I,EAAA7kJ,YAMAokJ,cAAA,SAAAn8I,GAEA,GAEAilI,GAAAtpJ,EAFAghK,GAA2BtkJ,MAAAyjJ,EAAA9sJ,QAAAS,GAAAQ,aAC3B6E,EAAAkL,EAAAuC,qBAAA,YAAAjM,aAAA,OAEA,IAAAxB,GAIA,IAFA6nJ,EAAA7nJ,OACAmwI,KACAtpJ,EAAA,EAAuBA,EAAAL,KAAA2gK,OAAA39J,OAAwB3C,IAE/C,GAAAL,KAAA2gK,OAAAtgK,GAAAmZ,QACA,CACAmwI,EAAA3pJ,KAAA2gK,OAAAtgK,GAAA8gK,UAAAz8I,EACA,YAMAilI,GAAA3pJ,KAAA2gK,MAEA,IAAAW,GAAAthK,KAAAohK,eAAA18I,EAAA28I,EACA,KAAAhhK,EAAA,EAAmBA,EAAAspJ,EAAA3mJ,OAAkB3C,IACrC,CACA,GAAA2T,IAAyBsH,IAAAquI,EAAAtpJ,GAAAib,IACzBquI,GAAAtpJ,GAAAO,OACAoT,EAAApT,KAAA+oJ,EAAAtpJ,GAAAO,MACA+oJ,EAAAtpJ,GAAAmZ,OACAxF,EAAAwF,KAAAmwI,EAAAtpJ,GAAAmZ,MACA8nJ,EAAA5gK,EAAA,OAAAsT,GAAAiJ,KAGA,MADAjd,MAAAgqB,YAAAhG,KAAAs9I,EAAA7kJ,eAlOAvc,EAAA,cAAAD,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAA,GAAAsI,GAAAnH,EAAA,GAAAf,GAAAe,IAAAmH,GAAAnH,EAAA,IAAAN,GAAAM,IAAAf,GAAAe,EAAA,KAAAkH,EAAAlH,EAAA,IAAAQ,EAAAR,EAAA,GAAAV,EAAAU,IAAAQ,GAAA8yB,EAAA,mBAAAz0B,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MCQMe,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAKnBu7J,cAKF,QAAAA,GAAY/tI,iGAAMzzB,KAAAwhK,EAAA,IAAAzrH,qKAAA/1C,MAAAwhK,EAAAxrH,WAAAj1C,OAAAk1C,eAAAurH,IAAAhhK,KAAAR,MAAA,OAEd+1C,GAAKtiB,KAAOA,EACZsiB,EAAK0rH,SAHS1rH,QALhByrH,6TAA4BE,EAAA,GAKZ3rH,gCAUbhsB,+PACDy3I,EAAA//J,UAAAu0C,WAAAj1C,OAAAk1C,eAAAurH,EAAA//J,WAAA,OAAAzB,MAAAQ,KAAAR,KAAW+pB,GAGX/pB,KAAK+pB,WAAWtF,WAAWzkB,KAAK2hK,WAAWt0J,KAAKrN,MAAO,KACnD,WAAY,KAAM,KAAM,KAAM,MAClCA,KAAK+pB,WAAWtF,WAAWzkB,KAAK4hK,sBAAsBv0J,KAAKrN,MACvD,KAAM,WAAY,cAAe,MACrCA,KAAK+pB,WAAWtF,WAAWzkB,KAAK6hK,gBAAgBx0J,KAAKrN,MAAO,KACxD,WAAY,QAAS,MACzBA,KAAK+pB,WAAWtF,WAAWzkB,KAAK8hK,UAAUz0J,KAAKrN,MAAO,KAClD,UAAW,KAAM,MACrBA,KAAK+pB,WAAWtF,WAAWzkB,KAAK+hK,OAAO10J,KAAKrN,MACxC,iCAAkC,KAAM,MAAO,KAAM,SAAAyQ,IAAA,aAAArF,MAAA,SASlDkQ,EAAKqxE,EAAU1uE,GACtB,GAAM+jJ,GAAUz8D,EAAA7xF,QAAQ+H,kBAAkBH,EAE1C,IAAItb,KAAKyhK,MAAMO,GAAU,CACrB,GAAM1wF,GAAS,8BAGf,MADA1uE,GAAO0Z,MAAMg1D,GACP,GAAI5lE,OAAM4lE,GAOpB,MALAtxE,MAAKyhK,MAAMO,GAAW,GAAIC,GAAA35J,EAAStI,KAAK+pB,WAAYzO,EAChDqxE,EAAU3sF,KAAKyzB,KAAMxV,GACzBje,KAAK4zB,aAAa+C,KACdurI,EAAA55J,EAAWm8B,gBAAiBzkC,KAAKyhK,MAAMO,IAEpChiK,KAAKyhK,MAAMO,mCAOd1mJ,GACJtb,KAAK4zB,aAAa+C,KACdurI,EAAA55J,EAAWo8B,kBAAmB1kC,KAAKyhK,MAAMnmJ,UACtCtb,MAAKyhK,MAAMnmJ,sCAOXyK,GACP,GAAM/X,GAAO+X,EAAK/K,aAAa,OAG/B,IAAI+K,EAAK/K,aAAa,QAClB,QAGJ,IAAMwhG,GAAOx8G,KAAKyhK,MAAMl8D,EAAA7xF,QAAQ+H,kBAAkBzN,GAElD,OAAKwuG,IAKDzlC,EAAEhxD,GAAM2pB,KAAK,sEACY1sC,QACzBw5G,EAAK2lD,yBAGT3lD,EAAKmlD,WAAW57I,WAVhB,MAYOtV,IAAA,wBAAArF,MAAA,SAOW2a,GAClB,GAAM/X,GAAO+X,EAAK/K,aAAa,QACzBwhG,EAAOx8G,KAAKyhK,MAAMl8D,EAAA7xF,QAAQ+H,kBAAkBzN,GAElD,IAAKwuG,EAML,MAFAA,GAAKolD,sBAAsB77I,EAAM/X,SAE1ByC,IAAA,kBAAArF,MAAA,SAOK2a,GACZ,GAAM/X,GAAO+X,EAAK/K,aAAa,QACzBwhG,EAAOx8G,KAAKyhK,MAAMl8D,EAAA7xF,QAAQ+H,kBAAkBzN,GAElD,IAAKwuG,EAML,MAFAA,GAAKqlD,gBAAgB97I,EAAM/X,SAEpByC,IAAA,YAAArF,MAAA,SAODgR,GAEN,GAAMpO,GAAOoO,EAAIpB,aAAa,QACxBwhG,EAAOx8G,KAAKyhK,MAAMl8D,EAAA7xF,QAAQ+H,kBAAkBzN,GAElD,IAAKwuG,EAML,MAFAA,GAAKslD,UAAU1lJ,EAAKpO,SAEbyC,IAAA,SAAArF,MAAA,SAOJ2d,GACH,GAAM/a,GAAO+a,EAAG/N,aAAa,QACvBwhG,EAAOx8G,KAAKyhK,MAAMl8D,EAAA7xF,QAAQ+H,kBAAkBzN,GAElD,IAAKwuG,EAML,MAFAA,GAAKulD,OAAOh5I,UAELlnB,IAQfwG,GAAAC,EAAA,SAAwBy8F,GACpBQ,EAAA7xF,QAAQmJ,oBAAoB,OAAQ,GAAI2kJ,GAAoBz8D,yFC3GhE,QAASq9D,GAA2Br8I,EAAMrL,GAGtC,IAAK,GAFCs6D,MAEG30E,EAAI,EAAGA,EAAI0lB,EAAK/iB,OAAQ3C,IACzB0lB,EAAK1lB,GAAGqY,UAAYgC,GACpBs6D,EAAInyE,KAAKkjB,EAAK1lB,GAItB,OAAO20E,GDkGqD+vB,ojBCvK1DniG,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAEnB8rC,GACFswH,YADW,SACCC,EAAQ/4G,GAChB,GAAMxpD,GAAOC,IAGb+2E,GAAEurF,GAAQ3zE,WAAWniC,KAAK,WAEtB,GACMhzC,IACFd,QAFYq+D,EAAE/2E,MAAMgJ,KAAK,WAK7BwQ,GAAKlE,cAGLyhE,EAAEA,EAAE/2E,MAAM,GAAGsV,YAAYk3C,KAAK,SAAC3gD,EAAO8N,GAClCH,EAAKlE,WAAWqE,EAAK/Y,MAAQ+Y,EAAKvO,OAItC,IAAM0O,GAAOyrF,EAAA7xF,QAAQ6G,QAAQw8D,EAAE/2E,MAAM,GAEjC8Z,KACAN,EAAKpO,MAAQ0O,GAEjBN,EAAKm1E,YACLplC,EAAM1mD,KAAK2W,GAGXzZ,EAAKsiK,YAAYtrF,EAAE/2E,MAAOwZ,EAAKm1E,aAGvC4zE,YAhCW,SAgCCh5G,EAAO+4G,GACf,IAAK,GAAIjiK,GAAI,EAAGA,EAAIkpD,EAAMvmD,OAAQ3C,IAAK,CACnC,GAAMmZ,GAAO+vC,EAAMlpD,EAEfmZ,KACA8oJ,EAAO5hK,EAAE8Y,EAAKd,QAASc,EAAKlE,YACxBkE,EAAKpO,OACLk3J,EAAOzgK,EAAE2X,EAAKpO,OAEdoO,EAAKm1E,UACL3uF,KAAKuiK,YAAY/oJ,EAAKm1E,SAAU2zE,GAEpCA,EAAOrlJ,SA8BjBulJ,GAAsB,2BAA4B,WAmDnCC,cAYjB,QAAAA,GAAY14I,EAAYzO,EAAKqxE,EAAUoY,EAAM9mF,iGAASje,KAAAyiK,EAAA,IAAA1sH,qKAAA/1C,MAAAyiK,EAAAzsH,WAAAj1C,OAAAk1C,eAAAwsH,IAAAjiK,KAAAR,MAAA,OAElD+1C,GAAKtiB,KAAOsxE,EACZhvD,EAAKhsB,WAAaA,EAClBgsB,EAAKkyD,QAAU1C,EAAA7xF,QAAQ+H,kBAAkBH,GACzCy6B,EAAK+rE,UAAYxmG,EACjBy6B,EAAK42C,SAAWA,EAChB/pF,EAAOsB,KAAP,iBAA6B6xC,EAAK+rE,WAClC/rE,EAAK2sH,WACL3sH,EAAK4sH,WACL5sH,EAAK6sH,gBACL7sH,EAAK0oE,UACL1oE,EAAKi8C,KAAO,KACZj8C,EAAKq0D,YAAc,KACnBr0D,EAAK8sH,qBACL9sH,EAAK93B,QAAUA,MACf83B,EAAK2pE,UACC,GAAIojD,GAAAx6J,EAAUytC,EAAKkyD,QAASlyD,EAAKtiB,KAAMsiB,EAAKniB,cAC1C7J,WAAYgsB,EAAKtiB,KAAKxV,QACtBupD,WAAYzxB,EAAK93B,UAEzB83B,EAAKgtH,gBAAgB9kJ,GACrB83B,EAAKitH,iBACLjtH,EAAKktH,YAAc,KACnBltH,EAAKmtH,SAAW,KAChBntH,EAAKmvD,mBACLnvD,EAAKotH,4BAA8B,KAEnCptH,EAAKqtH,UACLrtH,EAAKygE,oBAAsB6sD,EAAA15D,IA7BuB5zD,QAZrC0sH,6TAAiBa,EAAA,GAYoBvtH,6CAqCxB,GAAd93B,GAAclT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,KAC1B/K,MAAK2iK,QAAQ95I,GAAK7oB,KAAK8hH,UACvB9hH,KAAK2iK,QAAQY,IAAM,iCACnBvjK,KAAK2iK,QAAQp5G,SACbvpD,KAAK2iK,QAAQp5G,MAAM1mD,MACf6V,QAAW,aACXtN,MAAShI,UAAUM,UACnB4R,YAAgByH,MAAO,yCAGvBkB,EAAQy/F,eACR19G,KAAK2iK,QAAQp5G,MAAM1mD,MACf6V,QAAW,WACXtN,MAASo4J,EAAAl7J,EAASyqB,oBAO1B/yB,KAAKyjK,2BAEDxlJ,EAAQ65F,gBAAkB75F,EAAQ65F,eAAe4rD,YACjD1jK,KAAK2iK,QAAQp5G,MAAM1mD,MACf6V,QAAW,SACXpD,YACI7S,GAAIwb,EAAQ65F,eAAe4rD,WAC3B3mJ,MAAO,oCAAAtM,IAAA,2BAAArF,MAAA,SAUEo+B,GACrBxpC,KAAK2iK,QAAQp5G,MAAM1mD,MACf6V,QAAW,UACXi2E,WAEQj2E,QAAW,QACXtN,MAASo+B,EAAQylC,QAGjBv2D,QAAW,QACXtN,MAASo+B,EAAQO,uCAU5B4iD,GAAU,GAAA/jB,GAAA5oE,IACXA,MAAK2sF,SAAWA,EAChB3sF,KAAK0/G,UAAUikD,wBAAwB,iBAAM/6F,GAAKvkD,sBAAa5T,IAAA,eAAArF,MAAA,SAOtDw4J,GACT,GAAM/6I,GAAK7oB,KAAK2iK,QAAQ95I,EAExB,IAAKA,IAAQ7oB,KAAKy+G,QAAWmlD,GAA7B,CAKA,GAAM79I,GAAOhlB,OAAAwkG,EAAAzxF,QAAQ+U,MAOjB+6I,KACA79I,EAAKrlB,EAAE,KAAOqc,MAAO/c,KAAK2iK,QAAQY,MAE9BvjK,KAAK2sF,UACL5mE,EAAKrlB,EAAE,YAAYmB,EAAE7B,KAAK2sF,UAAU1vE,KAExC8I,EAAK9I,MAGT80B,EAAOwwH,YAAYviK,KAAK2iK,QAAQp5G,MAAOxjC,GACvC/lB,KAAK+pB,WAAW/F,KAAK+B,GACjB69I,GAKA5jK,KAAK+pB,WAAW5F,2CASpBvhB,EAAOkB,IAAI,WAAY9D,KAAK8hH,UAC5B,IAAM/7F,GAAOhlB,OAAAwkG,EAAAzxF,QAAQ+U,GAAI7oB,KAAK8hH,UAC1B9jG,KAAM,eAEVhe,MAAK2iK,QAAQ3/J,OAAS,EActBhD,KAAK+pB,WAAW5F,QAChBnkB,KAAK+pB,WAAW/F,KAAK+B,GACrB/lB,KAAK+pB,WAAW5F,gDAMJ,GAAAglD,GAAAnpE,KAGN6jK,EACA9iK,OAAAwkG,EAAA3xF,MACEoK,KAAM,MACN6K,GAAI7oB,KAAKioG,UAERvnG,EAAE,SAAWqc,MAAOwoF,EAAA7xF,QAAQS,GAAGO,YAExC1U,MAAK+pB,WAAWjF,OAAO++I,EAAS,SAAArnJ,GAC5B,GAAM4mJ,GAGM,IAFNrsF,EAAEv6D,GAAQkzB,KAAK,+CACZ1sC,MAGLogK,KAAWj6F,EAAKi6F,SAChBj6F,EAAKv1C,aAAa+C,KAAKmtI,EAAAx7J,EAAWk9B,iBAAkB49H,GACpDj6F,EAAKi6F,OAASA,IAEnB,SAAA9mJ,GACC2sD,EAAA3gE,EAAqB+pB,iBAAiB/V,GACtC1Z,EAAO0Z,MAAM,4BAA6BA,sDAU9C,GAAMynJ,GAAUhjK,OAAAwkG,EAAA3xF,MAAMoK,KAAM,MACxB6K,GAAI7oB,KAAKioG,UACRvnG,EAAE,SAAWqc,MAAO,yCACpBrc,EAAE,KAAOqc,MAAO,gBACbiB,KAAM,WAERje,EAAOC,IAEbA,MAAK+pB,WAAWjF,OAAOi/I,EAAS,SAAAC,GAC5B,IAAKjtF,EAAEitF,GAAMt0H,KACL,qEACwC1sC,OAAQ,CACpD,GAAMsuE,GAAS,mCAKf,OAHArI,GAAA3gE,EAAqB+pB,iBAAiB,GAAI3mB,OAAM4lE,QAChD1uE,GAAO0Z,MAAMg1D,GAKjB,GAAM2yF,GAAaljK,OAAAwkG,EAAA3xF,MAAMiV,GAAI9oB,EAAKkoG,QAC9BjqF,KAAM,QACLtd,EAAE,SAAWqc,MAAO,wCAEzBknJ,GAAWvjK,EAAE,KAAOqc,MAAO,gBACvBiB,KAAM,WAEVimJ,EAAWvjK,EAAE,SAAW6gK,IAAO,cAC1B7gK,EAAE,SACFmB,EAAE,6CAA6Cob,KAAKA,KAEzDgnJ,EAAWvjK,EAAE,SAAW6gK,IAAO,yBAC1B7gK,EAAE,SAASmB,EAAE,UAAUob,KAAKA,KAEjCld,EAAKgqB,WAAWjF,OAAOm/I,IAExB,SAAA3nJ,GACC2sD,EAAA3gE,EAAqB+pB,iBAAiB/V,GACtC1Z,EAAO0Z,MAAM,0CAA2CA,wCAQrDyJ,GACP,GAAM/X,GAAO+X,EAAK/K,aAAa,QAGzBkpJ,IAENA,GAAOltF,KAAOD,EAAEhxD,GAAM2pB,KAAK,SAAS51B,MACpC,IAAMqqJ,GAAcptF,EAAEhxD,GAAM2pB,KAAK,UACfy0H,GAAYnhK,SAG1BkhK,EAAO79I,OAAS89I,EAAYrqJ,OAEhC,IAAIsqJ,MAEEC,EACAttF,EAAEhxD,GAAM2pB,KACN,uDAERw0H,GAAOI,YAAcD,EAAY1qJ,KAAK,eACtCuqJ,EAAOlyE,KAAOqyE,EAAY1qJ,KAAK,OAG/B,IAAM2B,GAAM+oJ,EAAY1qJ,KAAK,MAE7BuqJ,GAAO5oJ,IAAMA,EACb4oJ,EAAOp9C,QACDxrG,GAA+D,IAAxDA,EAAIvW,QAAW/E,KAAK0/G,UAAU6kD,kBAA9B,KACbL,EAAOM,eACDlpJ,GAAOA,EAAIvW,QAAQ,KAAO,GACrB/E,KAAKie,QAAQwmJ,eACRnpJ,EAAItW,UAAUsW,EAAIvW,QAAQ,KAAO,EAAGuW,EAAIvW,QAAQ,MAEhEgyE,EAAEhxD,GAAM2pB,KAAK,MAAMguC,QACnB,IAAMn0B,KAENxX,GAAOswH,YAAYt8I,EAAMwjC,GACzBvpD,KAAKgjK,cAAch1J,GAAQu7C,CAM3B,KAAK,GALDkiD,GAAQ,KAKHprG,EAAI,EAAGA,EAAIkpD,EAAMvmD,OAAQ3C,IAAK,CACnC,GAAMmZ,GAAO+vC,EAAMlpD,EAEnB,QAAQmZ,EAAKd,SACb,IAAK,OACDwrJ,EAAO77D,KAAO7uF,EAAKpO,KACnB,MACJ,KAAK,SACD84J,EAAOzhK,GAAK+W,EAAKpO,KACjB,MACJ,KAAK,WACD84J,EAAOx/C,QAAUlrG,EAAKpO,OAK9B,GAAI4C,IAAShO,KAAK8hH,UAAW,CACzB,GAAM4iD,GACuB,UAAvBR,EAAOI,YAA0BJ,EAAOlyE,KAAO,MAQrD,IANIhyF,KAAKgyF,OAAS0yE,IACd1kK,KAAKgyF,KAAO0yE,EACZ1kK,KAAK4zB,aAAa+C,KACdmtI,EAAAx7J,EAAW28B,mBACXjlC,KAAKgyF,QAERhyF,KAAKy+G,OAAQ,CACdz+G,KAAKy+G,SACL,IAAM50F,GAAM7pB,KAAKklG,gBAAgB,cAC3BrgG,OAAOwwC,YAAYxrB,KAEzBjnB,GAAOkB,IAAI,uBAAwB+lB,GAG/B7pB,KAAK2sF,WACL3sF,KAAKojK,WAGTpjK,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAW68B,iBAEnC,aAAInlC,KAAK0iK,QAAQ10J,GAEpBhO,KAAK0iK,QAAQ10J,GAAQk2J,EACrBthK,EAAOkB,IAAI,UAAWkK,EAAMk2J,GAC5BE,WAAkBF,EAAO79I,OACrB69I,EAAOp9C,QACP9mH,KAAK2kK,WAAW32J,EAAMsN,IAEtBtb,KAAK4zB,aAAa+C,KACdmtI,EAAAx7J,EAAW88B,kBACXp3B,EACAk2J,EAAO77D,KACP67D,EAAOlyE,KACPkyE,EAAOM,eACPN,EAAOx/C,QACPw/C,EAAO79I,QAIX+9I,UAED,CAGH,GAAMQ,GAAe5kK,KAAK0iK,QAAQ10J,EAE9B42J,GAAa5yE,OAASkyE,EAAOlyE,OAC7B4yE,EAAa5yE,KAAOkyE,EAAOlyE,KAC3BhyF,KAAK4zB,aAAa+C,KACdmtI,EAAAx7J,EAAWi9B,iBAAkBv3B,EAAMk2J,EAAOlyE,OAG9CkyE,EAAOp9C,UAUP89C,EAAa99C,WACb9mH,KAAK2kK,WAAW32J,EAAMsN,IAItB4oJ,EAAO3mD,cACPqnD,EAAarnD,YAAc2mD,EAAO3mD,aAIlCqnD,EAAav+I,SAAW69I,EAAO79I,SAC/B+9I,KACAQ,EAAav+I,OAAS69I,EAAO79I,QAMrC,IAAK,GAAIhmB,GAAI,EAAGA,EAAIkpD,EAAMvmD,OAAQ3C,IAAK,CACnC,GAAMmZ,GAAO+vC,EAAMlpD,EAEnB,QAAQmZ,EAAKd,SACb,IAAK,OACD,IAAKwrJ,EAAOp9C,QAAS,CACjB,GAAMvJ,GACAv9G,KAAKyzB,KAAKxV,QAAQ4mJ,YACdt/D,EAAA7xF,QAAQgI,mBAAmB1N,GAC3Bk2J,EAAO77D,IAEbkV,IAAeA,EAAYv6G,OAAS,GACpChD,KAAK4zB,aAAa+C,KACdmtI,EAAAx7J,EAAW42B,qBACXlxB,EACAuvG,GAGZ,KACJ,KAAK,qBACG2mD,EAAOp9C,UAAY9mH,KAAK6iK,oBACxB7iK,KAAK6iK,qBACL7iK,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAWg6B,aAEtC,MACJ,KAAK,yBACDmpE,EAAQjyF,CACR,MACJ,KAAK,uBAAwB,GACjBlE,GAAekE,EAAflE,UAER,KAAKA,EACD,KAJqB,IAOjB+Q,GAAW/Q,EAAX+Q,MAEJA,IAAUA,IAAWrmB,KAAKw2G,sBAC1Bx2G,KAAKw2G,oBAAsBnwF,EAC3BrmB,KAAK4zB,aAAa+C,KACdmtI,EAAAx7J,EAAWs4B,6BACXva,GAKR,MAEJ,KAAK,eACD,GAAMy+I,GAAMtrJ,EAAKlE,UAEjB,KAAKwvJ,EACD,KAEJ9kK,MAAKijK,YAAc6B,EAAIC,OAAS,KAChC/kK,KAAKkjK,SAAW4B,EAAIE,KAAO,KAC3BhlK,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAWy3B,qBAClC,MAEJ,SACI//B,KAAKilK,YAAYzrJ,EAAMxL,IAK3Bo2J,GACApkK,KAAK4zB,aAAa+C,KACdmtI,EAAAx7J,EAAWw9B,gBACX93B,EACAk2J,EAAO79I,QAGXolF,IACAzrG,KAAKklK,UAAYz5D,EACbzrG,KAAKmlK,WACLnlK,KAAKmlK,UAAU35D,oBAAoBC,uCAUpCz9F,EAAMw8G,GACbxqH,KAAKoqG,YAAcp8F,EACdhO,KAAKmlK,YACNnlK,KAAKmlK,UAAY,GAAIC,GAAA98J,EAAStI,KAAKie,QAAQonJ,cACvCrlK,KAAK4zB,aAAc5zB,KAAK+pB,WAAY/pB,KAAKoqG,YACzCpqG,KAAKie,QAAQosF,QAASrqG,KAAKioG,SAC3BjoG,KAAKklK,WACLllK,KAAKmlK,UAAU35D,oBAAoBxrG,KAAKklK,YAGhDtiK,EAAOsB,KAAP,iBAA6B8J,EAA7B,eAAgDw8G,0DAOrB10F,GAC3B91B,KAAKmjK,4BAA8BrtI,sCAQ3Btc,EAAMxL,GAGd,IACI,GAAIs3J,GAActlK,KAAK4iK,aAAappJ,EAAKd,QAErCc,GAAKd,QAAQk4B,WAAW,wBACxB00H,GAAgBtlK,KAAKmjK,8BAGrBmC,GACAA,EAAYj3J,QAAQ,SAAA0N,GAChBA,EAAQvC,EAAM+rF,EAAA7xF,QAAQgI,mBAAmB1N,GAAOA,KAG1D,MAAO/N,GACLgpE,EAAA3gE,EAAqB+pB,iBAAiBpyB,GACtC2C,EAAO0Z,MAAP,oBAAiC9C,EAAKd,QAAtC,SAAuDzY,wCASnDgW,EAAMsvJ,GACd,GAAMnpJ,GAAMrb,OAAAwkG,EAAA1xF,OAAOgV,GAAI7oB,KAAKioG,QACxBjqF,KAAM,aAEV5B,GAAI1b,EAAE,OAAQuV,GAAMgH,KAChBsoJ,GACAnpJ,EAAI1b,EAAE,QAAUqc,MAAO,oCAClBlb,EAAE0jK,GACFtoJ,KACAA,KAETjd,KAAK+pB,WAAW/F,KAAK5H,GACrBpc,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAWi+B,qBAAsBtwB,sCAOjD8qG,GACP,GAAM3kG,GAAMrb,OAAAwkG,EAAA1xF,OAAOgV,GAAI7oB,KAAKioG,QACxBjqF,KAAM,aAEV5B,GAAI1b,EAAE,UAAWqgH,GACjB/gH,KAAK+pB,WAAW/F,KAAK5H,6CASPd,EAAKkqJ,SAEZxlK,MAAKgjK,cAAc1nJ,GAEtBkqJ,IAIJxlK,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAW+8B,gBAAiB/pB,GAEnDtb,KAAK0/G,UAAU+lD,gBAAgBnqJ,kDAQbyK,EAAM/X,GAAM,GAAAqqE,GAAAr4E,IAE9B,IAAI+2E,EAAEhxD,GAAM2pB,KAAK,8CAA8C1sC,OAC3D,QAIJ,IAAI+zE,EAAEhxD,GAAM2pB,KAAK,2DACC1sC,OAAQ,CACtB,GAAI8iB,UACE4/I,EACA3uF,EAAEhxD,GAAM2pB,KACN,iEAUR,OAPIg2H,GAAa1iK,SACb8iB,EAAS4/I,EAAa5rJ,QAG1B9Z,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAW48B,cAAepf,GACjD9lB,KAAK+pB,WAAWw+E,KAAKo9D,QAAQ3lK,KAAKioG,YAMtC,GAAM29D,GACA7uF,EAAEhxD,GACC2pB,KACG,sEAEH1sC,OACH6iK,EACA9uF,EAAEhxD,GACC2pB,KACG,sEAEH1sC,OACH8iK,EAAc/kK,OAAOg3B,KAAK/3B,KAAK0iK,QAEhCkD,GAGME,EAAY9iK,OAAS,IAI5B8iK,EAAYz3J,QAAQ,SAAAiN,GAChB,GAAM4oJ,GAAS7rF,EAAKqqF,QAAQpnJ,SAErB+8D,GAAKqqF,QAAQpnJ,GACpB+8D,EAAK0tF,kBAAkBzqJ,EAAK4oJ,EAAOp9C,WAEvC9mH,KAAK+pB,WAAWw+E,KAAKo9D,QAAQ3lK,KAAKioG,SAI7B49D,GACD7lK,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAWg9B,kBAjB/BtlC,MAAK0iK,QAAQ10J,GACpBhO,KAAK+lK,kBAAkB/3J,OAoBvB63J,GAAU7lK,KAAK8hH,YAAc9zG,GAC7BhO,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAWi3B,0CAShCnjB,EAAKpO,GACX,GAAMq6F,GACAtxB,EAAE36D,GAAKszB,KAAK,kDACT51B,QACFyrF,EAAA7xF,QAAQgI,mBAAmB1N,GAE5Bg4J,EAAMjvF,EAAE36D,GAAKszB,KAAK,SAAS51B,MAGjC,IAAa,UAFAsC,EAAIpB,aAAa,QAM1B,MAHAhb,MAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAW87B,oBAC9B2yC,EAAE36D,GAAKszB,KAAK,SAAS51B,OAAQksJ,KAKrC,IAAMjlD,GAAUhqC,EAAE36D,GAAKszB,KAAK,WAE5B,IAAIqxE,EAAQ/9G,OAAQ,CAChB,GAAMijK,GAAcllD,EAAQjnG,QAExBmsJ,GAA+B,KAAhBA,KACfjmK,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAW+3B,gBAAiB4lI,GACnDrjK,EAAOkB,IAAP,yBAAoCmiK,IAK5C,GAAIC,GAAQnvF,EAAE36D,GAAKszB,KAAK,UAAU/1B,KAAK,QAEvC,KAAKusJ,IAEDA,EAAQnvF,EAAE36D,GAAKszB,KAAK,6BAA6B/1B,KAAK,UAE3C,CAEP,GAAMwsJ,GACAD,EAAMviK,MAAM,0CAElBuiK,GAAWC,EAAU,GAArB,IAA2BA,EAAU,GAArC,IAA2CA,EAAU,GAArD,IAIJn4J,IAAShO,KAAKioG,SACPlxB,EAAE36D,GACAszB,KACG,sEAEH1sC,QACThD,KAAKomK,eAGT,IAAMC,GAjvBd,SAA+BC,GAC3B,IACI,GAAMD,GAAO9iJ,KAAKgK,MAAM+4I,EASxB,IAAID,GAAwB,qBAATA,EAAP,YAAA58H,EAAO48H,IAAmB,CAClC,GAAME,GAAQF,EAAK7D,EAAkB,IAC/BtxH,EAAUm1H,EAAK7D,EAAkB,GAEvC,KAAsB,gBAAV+D,IAAsBA,YAAiB72J,UAC5CwhC,EAEH,MAAOm1H,EAGXzjK,GAAOyZ,MAAM,yDACM,UAAWkqJ,EAAO,YAAar1H,IAExD,MAAOjxC,GAEL,SAGJ,UAotBuC+lK,EAE/BK,GACArmK,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAWs+B,sBAC9B54B,EAAMq4J,GAKVL,IACApjK,EAAOkB,IAAI,OAAQukG,EAAM29D,GACzBhmK,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAWo3B,iBAC9B1xB,EAAMq6F,EAAM29D,EAAKhmK,KAAK8hH,UAAWokD,4CAS7BngJ,EAAM/X,GACd+oE,EAAEhxD,GACG2pB,KACG,mFAGH1sC,QACLJ,EAAOkB,IAAI,uBAAwBkK,GACnChO,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAWs9B,oBAC3BmxC,EAAEhxD,GACJ2pB,KACG,kFAGH1sC,OACYuiG,EAAA7xF,QAAQ6H,iBAAiBwK,EAAK/K,aAAa,SAE3Chb,KAAKyzB,KAAKxV,QAAQ2pF,MAAMC,gBAKrC7nG,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAW+9B,kBAGlCzjC,EAAOwF,KAAK,eAAgB2d,GAC5B/lB,KAAK4zB,aAAa+C,KACdmtI,EAAAx7J,EAAW89B,iCAEZ2wC,EAAEhxD,GAAM2pB,KAAK,8BAA8B1sC,QAClDJ,EAAOwF,KAAK,oDACR2d,GACJ/lB,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAWg+B,wBAElC1jC,EAAOwF,KAAK,eAAgB2d,GAC5B/lB,KAAK4zB,aAAa+C,KAAKmtI,EAAAx7J,EAAW69B,kDAQrC7qB,GACD,GAAMkrJ,GAASzlK,OAAAwkG,EAAA3xF,MAAMiV,GAAI7oB,KAAKioG,QAC1BjqF,KAAM,QACLtd,EAAE,SAAWqc,MAAO,yCACpBrc,EAAE,QAAU2nG,KAAM9C,EAAA7xF,QAAQgI,mBAAmBJ,GAC1C02E,KAAM,SACTtxF,EAAE,UAAUmB,EAAE,yBAAyBob,KAAKA,KAAKA,IAEtDjd,MAAK+pB,WAAWjF,OACZ0hJ,EACA,SAAAhqJ,GAAA,MAAU5Z,GAAOkB,IAAI,8BAA+BwX,EAAKkB,IACzD,SAAAF,GAAA,MAAS1Z,GAAOkB,IAAI,2BAA4BwY,sCAY/C7L,EAAK2Y,EAAW0uE,EAAS2uE,GAAgB,GAAAjjD,GAAAxjH,IAE9CA,MAAK+pB,WAAWjF,OACZ/jB,OAAAwkG,EAAA3xF,MACIiV,GAAI7oB,KAAKioG,QACTjqF,KAAM,QAELtd,EAAE,SAAWqc,MAAO,yCACzB,SAAAi4D,GACI,GAAI+B,EAAE/B,GACGtlC,KACG,0EAEH1sC,OAAQ,CACb,GAAM0jK,GACA3lK,OAAAwkG,EAAA3xF,MACEiV,GAAI26F,EAAKvb,QACTjqF,KAAM,QAELtd,EAAE,SACCqc,MAAO,wCAGnB2pJ,GAAWhmK,EAAE,KACTqc,MAAO,gBACPiB,KAAM,WAEV0oJ,EACKhmK,EAAE,SAAW6gK,IAAO,cACpB7gK,EAAE,SACFmB,EAAE,6CACFob,KACAA,KACLypJ,EACKhmK,EAAE,SAAW6gK,IAAO,8BACpB7gK,EAAE,SACFmB,EAAE4O,GACFwM,KACAA,KAILypJ,EACKhmK,EAAE,SAAW6gK,IAAO,yBACpB7gK,EAAE,SACFmB,EAAE,UACFob,KACAA,KAGLumG,EAAKz5F,WAAWjF,OAAO4hJ,EAAYt9I,EAAW0uE,OAE9C2uE,MAGR3uE,yCAUMrnF,EAAKwmB,GACfA,EAAOve,QAAUjI,EACjBzQ,KAAK4gH,mBAAmBnwG,GACxBzQ,KAAK2iK,QAAQp5G,MAAM1mD,KAAKo0B,8CAOTxmB,GACf,GAAM84C,GAAQvpD,KAAK2iK,QAAQp5G,MAAMna,OAAO,SAAA51B,GAAA,MAAQ/I,KAAQ+I,EAAKd,SAE7D1Y,MAAK2iK,QAAQp5G,MAAQA,8CAQL3oD,EAAMmb,GACtB,GAAuB,kBAAZA,GACP,KAAM,IAAIrQ,OAAM,8BAEpB,IAAI45J,GAActlK,KAAK4iK,aAAahiK,EAE/B0kK,KACDtlK,KAAK4iK,aAAahiK,GAAQ0kK,OAEQ,IAAlCA,EAAYvgK,QAAQgX,GACpBupJ,EAAYziK,KAAKkZ,GAEjBnZ,EAAOwF,KAAP,sDAC0DxH,kDAS3CA,EAAMmb,GACzB,GAAMupJ,GAActlK,KAAK4iK,aAAahiK,GAChC+lK,EAAarB,EAAcA,EAAYvgK,QAAQgX,IAAY,GAG7C,IAAhB4qJ,EACArB,EAAY96J,OAAOm8J,EAAY,GAE/B/jK,EAAOwF,KAAP,gBAA4BxH,EAA5B,0BAAA6P,IAAA,UAAArF,MAAA,SAYAo/G,GACJ,GAAM05C,GAASlkK,KAAK0iK,QAAQl4C,EAE5B,OAAI05C,GACOA,EAAOp9C,QAGX,QAAAr2G,IAAA,cAAArF,MAAA,WAOP,MAAqB,cAAdpL,KAAKgyF,2CAOFg7B,GACV,MAAIhtH,MAAK0iK,QAAQ11C,GACNhtH,KAAK0iK,QAAQ11C,GAASh7B,KAG1B,QAAAvhF,IAAA,eAAArF,MAAA,SAQEkgE,EAAM7+D,GACfzM,KAAK4mK,sBAAsBt7F,GACvB7+D,GACAA,EAAS6+D,wCASJA,EAAM7+D,GACf,MAAOzM,MAAK6mK,sBAAsBv7F,EAAM7+D,kDAOrB6+D,GACnBtrE,KAAK4gH,mBAAmB,cACxB5gH,KAAKygH,cACD,cAEInrG,YAAcyH,MAAS,kCACvB3R,MAAOkgE,EAAKz9D,2DASFy9D,EAAM7+D,GACxBzM,KAAK8mK,uBAAuBx7F,GACxBtrE,KAAK+pB,YACL/pB,KAAKqkB,eAEL5X,GACAA,mDAQe6+D,GACnBtrE,KAAK4gH,mBAAmB,cACxB5gH,KAAKygH,cACD,cAEInrG,YAAcyH,MAAS,kCACvB3R,MAAOkgE,EAAKz9D,2DAQFy9D,GAClBtrE,KAAKyjK,uBAAuBn4F,GACvBtrE,KAAK+pB,YAGV/pB,KAAKqkB,4DAcYs+D,EAAY7X,GAE7B,GAAM/kD,GAAO/lB,KAAKgjK,cAAiBhjK,KAAKioG,QAA3B,IAAsCtlB,EAEnD,KAAK58D,EAED,MAAO,KAEX,IAAMrV,IACF4pB,SACAoyC,kBAEAq6F,EAAY,IAEhB,IAAIj8F,IAAck8F,EAAA1+J,EACdy+J,EAAY3E,EAA2Br8I,EAAM,kBAC1C,IAAI+kD,IAAck8F,EAAA52J,EAUrB,MAFAxN,GAAO0Z,MAAP,2BAAwCwuD,GAEjC,IATPi8F,GAAY3E,EAA2Br8I,EAAM,aAC7C,IAAMkhJ,GAAgB7E,EAA2Br8I,EAAM,YAEnDkhJ,GAAcjkK,OAAS,IACvB0N,EAAKg8D,UAAYu6F,EAAc,GAAG77J,OAU1C,MAFAsF,GAAK4pB,MAAQysI,EAAU/jK,OAAS,GAA4B,SAAvB+jK,EAAU,GAAG37J,MAE3CsF,iDAOP,QAAI1Q,KAAKmlK,WACEnlK,KAAKmlK,UAAUjtF,0DAW1B,MAAOl4E,MAAKmlK,UAAYnlK,KAAKmlK,UAAUx4D,qBAAa5uD,uCAOpD,MAAO/9C,MAAKmlK,UAAYnlK,KAAKmlK,UAAUv4D,SAAW,QAAAn8F,IAAA,kBAAArF,MAAA,SAStC6S,EAASquF,GACrB,MAAItsG,MAAKmlK,UACEnlK,KAAKmlK,UAAU94D,gBAAgBpuF,EAASquF,GAG5CA,EAAoB,QACvB,GAAI5gG,OAAM,0CAAA+E,IAAA,wBAAArF,MAAA,WAOd,QAAIpL,KAAK0/G,WACE1/G,KAAK0/G,UAAUwnD,mDAUzB13D,GACD,MAAOxvG,MAAK+pB,WAAWg8E,KAAK4C,KAAK6G,EAAQ,aACrCjK,EAAA7xF,QAAQ+H,kBAAkBzb,KAAK8hH,WAAY9hH,KAAK2sF,SAChD3sF,KAAKoqG,8CAOT,MAAOpqG,MAAK+pB,WAAWg8E,KAAKkjB,kDAO5B,MAAOjpH,MAAKijK,kDAOZ,MAAOjjK,MAAKkjK,iDAQA5nJ,EAAKgwD,GACjB1oE,EAAOsB,KAAK,WAAYonE,EACxB,IAAM67F,GAAYpmK,OAAAwkG,EAAA3xF,MACZiV,GAAI7oB,KAAKoqG,YACPpsF,KAAM,QACTtd,EAAE,QACCqc,MAAO,iCACPzB,QAEHzZ,EAAEypE,EAAKz9D,YACPoP,IAELjd,MAAK+pB,WAAWjF,OACZqiJ,EACA,SAAA3qJ,GAAA,MAAU5Z,GAAOkB,IAAI,WAAY0Y,IACjC,SAAAF,GAAA,MAAS1Z,GAAOkB,IAAI,iBAAkBwY,oCAOvCyM,GAGH,GAFaA,EAAG/N,aAAa,UAEhBhb,KAAKoqG,YAGd,MAFAxnG,GAAOwF,KAAK,sCAIhB,IAAMkjE,GAAOyL,EAAEhuD,GAAI2mB,KAAK,OAExB,IAAI47B,EAAKtoE,OAAQ,CACb,GAAMokK,GAA8B,SAAhB97F,EAAKxxD,MAEzB9Z,MAAK4zB,aAAa+C,KACdmtI,EAAAx7J,EAAWy7B,qBACXqjI,GAGR,YAAO32J,IAAA,QAAArF,MAAA,WASH,GAAAu5G,GAAA3kH,IACJ,OAAO,IAAIg4C,SAAQ,SAAC4E,EAAS8F,GAQzB,QAAS2kH,KAA4B,GAAlBC,GAAkBv8J,UAAA/H,OAAA,YAAA+H,UAAA,IAAAA,UAAA,EACjC6oB,GAAasC,eAAe4tI,EAAAx7J,EAAWg9B,SAAU+hI,GACjDjjJ,aAAaG,GACT+iJ,EAEA5kH,EAAO,GAAIh3C,OAAM,qEAGjBkxC,IAfR,GAAMr4B,GAAUvX,WAAW,iBAAMq6J,QAAiB,KAC5CzzI,EAAe+wF,EAAK/wF,YAiB1BA,GAAamC,GAAG+tI,EAAAx7J,EAAWg9B,SAAU+hI,GACrC1iD,EAAKghD,2GCj1CjB,QAAS4B,GAAsBC,GAC3B,GAAI5kG,GAAQ,CAEZ,OAAO,UAASzjD,GAEZ,IAAIA,EAAJ,CAOA,GAAMoF,GAAUrW,KAAKwhB,IAAI,EAAGkzC,EAAQ,EAIpC,OAFAA,IAAS,EAEFr+C,EAAUijJ,EAVb5kG,EAAQ,GAuBL,QAAS6kG,GAAU/tI,EAAUjG,EAAMmgB,EAAS31B,GA0BvD,QAAS6X,GAAS3D,GACd,GAAIA,EAAMzhB,MAAQyhB,EAAMzhB,KAAKikC,UAAW,CACpC,GAAIxiB,EAAMkrI,SAAWx4J,OAAOgrB,SAASwtI,OAKjC,WAJAz6J,GAAOwF,KAAP,6CAEQ+pB,EAAMkrI,OAIlBqK,GAAAp/J,EAASqsC,UAAYxiB,EAAMzhB,KAAKikC,WAlCxC30C,KAAK05B,SAAWA,EAChB15B,KAAK2nK,YAAcl0I,EACnBzzB,KAAK4nK,eAAiBL,EAAsB,KAC5CvnK,KAAK6nK,oBAAsBN,EAAsB,KAGjDvnK,KAAK8nK,uBACL9nK,KAAKie,QAAUA,EAKfje,KAAK+nK,kBACC/nK,KAAKie,QAAQ8L,WAAW69E,gBACnB5nG,KAAKie,QAAQ8L,WAAW69E,MAAMogE,aAEzChoK,KAAK4zB,aAAeggB,EAEpB5zC,KAAK+pB,WAAa/pB,KAAK2nK,YAAY59I,WAuB/BllB,OAAOqjC,iBACPrjC,OAAOqjC,iBAAiB,UAAWpS,MAEnCjxB,OAAOmkF,YAAY,YAAalzD,GDuwCvB6vI,iCCn2CjB+B,EAAAxnK,EAAA,IAEM0C,EAAS1C,EAAQ,GAAqBsC,UAAUyD,GAIhD4kG,EAAa3qG,EAAQ,GACrB+nK,EACA/nK,EAAQ,IACRkyB,EAAuBlyB,EAAQ,EAyFrCunK,GAAUhmK,UAAUg+G,sBAAwB,WACxC,MAAOz/G,MAAK8nK,qBAGhBL,EAAUhmK,UAAUylK,oBAAsB,WACtC,MAAOlnK,MAAK+nK,mBAGhBN,EAAUhmK,UAAUgkK,gBAAkB,SAASnqJ,GAC3C1Y,EAAOsB,KAAP,8BAA0CoX,GAGzB,UAFAspG,EAAAlxG,QAAQgI,mBAAmBJ,KAGxC1Y,EAAOsB,KACH,gDACJlE,KAAK4zB,aAAa+C,KAAKk0E,EAAWhoE,cAI1C4kI,EAAUhmK,UAAUymK,gBAAkB,SAASC,GACtCnoK,KAAKooK,eACNpoK,KAAKooK,aAAeD,EACpBvlK,EAAOsB,KAAP,sBAAkClE,KAAKooK,gBAI/CX,EAAUhmK,UAAU8iK,gBAAkB,WAClC,MAAOvkK,MAAKooK,cAGhBX,EAAUhmK,UAAU4mK,kBAAoB,WAEpC,GAAIC,GAAiBtoK,KAAKie,QAAQ8L,WAAW69E,MAAM2gE,KAQnD,OAJKD,KACDA,WAA0BtoK,KAAKie,QAAQ8L,WAAW69E,MAAMz0F,QAGrDm1J,GAGXb,EAAUhmK,UAAU+mK,mBAAqB,WAErC,GAAMrwJ,GAAOpX,OAAA6jH,EAAAhxG,MAAMiV,GAAI7oB,KAAKqoK,oBACxBrqJ,KAAM,QAGF22B,EAAc+yH,EAAAp/J,EAAdqsC,UACF8zH,EAAaf,EAAAp/J,EAASmsC,SAE5B7xC,GAAOsB,KAAP,eAA2BywC,EAA3B,iBAAqD8zH,GAErDtwJ,EAAKzX,EAAE,cACHqc,MAAO,kCACPy/F,KAAMx8G,KAAK05B,SACXgvI,cAAeD,IAGf9zH,GACAx8B,EAAKnE,OAAQ20J,aAAch0H,aAE3B30C,KAAKie,QAAQ8L,WAAW6+I,gBACxBzwJ,EAAKzX,EACD,YACIE,KAAM,iBACNwK,MAAOpL,KAAKie,QAAQ8L,WAAW6+I,iBAChC3rJ,cAIPjd,KAAKie,QAAQ8L,WAAW69E,gBACrB5nG,KAAKie,QAAQ8L,WAAW69E,MAAMogE,cACjC7vJ,EAAKzX,EACD,YACIE,KAAM,eACNwK,MAAOpL,KAAKie,QAAQ8L,WAAW69E,MAAMogE,eACtC/qJ,cAEPjd,KAAKie,QAAQupD,WAAWy2C,cACxB9lG,EAAKzX,EACD,YACIE,KAAM,eACNwK,MAAOpL,KAAKie,QAAQupD,WAAWy2C,eAChChhG,KAEX9E,EAAKzX,EACD,YACIE,KAAM,aACNwK,MAAO0uE,QAAQ95E,KAAKie,QAAQupD,WAAWq+B,cACxC5oF,KACP9E,EAAKzX,EACD,YACIE,KAAM,gBACNwK,WAAOpL,KAAKie,QAAQ8L,WAAW+7E,gBAChC7oF,cACHjd,KAAKie,QAAQupD,WAAWqhG,kBACxB1wJ,EAAKzX,EACD,YACIE,KAAM,mBACNwK,MAAOpL,KAAKie,QAAQupD,WAAWqhG,mBAChC5rJ,KAEPjd,KAAKie,QAAQupD,WAAW+2F,cACxBpmJ,EAAKzX,EACD,YACIE,KAAM,eACNwK,MAAOpL,KAAKie,QAAQupD,WAAW+2F,eAChCthJ,KAEPjd,KAAKie,QAAQupD,WAAWshG,YACxB3wJ,EAAKzX,EACD,YACIE,KAAM,aACNwK,MAAOpL,KAAKie,QAAQupD,WAAWshG,aAChC7rJ,IAGX,IAAI8rJ,SAEJ,QAAQ/oK,KAAKie,QAAQupD,WAAWkgD,mBAChC,IAAK,cACL,OACA,YACIqhD,IACA,MACJ,KAAK,YACDA,KA4CJ,MAxCIA,KAAaC,EAAA1gK,EAAeT,yBAC5BkhK,MAGJ5wJ,EAAKzX,EACD,YACIE,KAAM,WACNwK,MAAO29J,IACR9rJ,cAEHjd,KAAKie,QAAQupD,WAAW6zC,iBACxBljG,EAAKzX,EACD,YACIE,KAAM,kBACNwK,MAAOpL,KAAKie,QAAQupD,WAAW6zC,kBAChCp+F,cAEPjd,KAAKie,QAAQupD,WAAW8zC,iBACxBnjG,EAAKzX,EACD,YACIE,KAAM,kBACNwK,MAAOpL,KAAKie,QAAQupD,WAAW8zC,kBAChCr+F,cAEPjd,KAAKie,QAAQupD,WAAWyhG,QACxB9wJ,EAAKzX,EACD,YACIE,KAAM,SACNwK,MAAOpL,KAAKie,QAAQupD,WAAWyhG,SAChChsJ,cAEPjd,KAAKie,QAAQupD,WAAW0hG,6BACxB/wJ,EAAKzX,EACD,YACIE,KAAM,8BACNwK,MAAOpL,KAAKie,QAAQupD,WAAW0hG,8BAChCjsJ,KAEX9E,EAAK8E,KAEE9E,GAIXsvJ,EAAUhmK,UAAU0nK,eAAiB,SAASC,GAE1C,GAAMz0H,GAAYoiC,EAAEqyF,GAAU15H,KAAK,cAAc/1B,KAAK,aAElDg7B,KACA/xC,EAAOsB,KAAP,wBAAoCywC,GACpC+yH,EAAAp/J,EAASqsC,UAAYA,IAI7B8yH,EAAUhmK,UAAU4nK,mBAAqB,SAASD,GAE9CppK,KAAKkoK,gBAAgBnxF,EAAEqyF,GAAU15H,KAAK,cAAc/1B,KAAK,YAEzD,IAAM2vJ,GACAvyF,EAAEqyF,GAAU15H,KACV,6DAC+C1sC,OAAS,CAEhEJ,GAAOsB,KAAP,2BAAuColK,GAEvCtpK,KAAK8nK,oBAAsB/wF,EAAEqyF,GAAU15H,KACnC,2DACiD1sC,OAAS,EAE9DJ,EAAOsB,KAAP,oCACwClE,KAAK8nK,qBAExC9nK,KAAK8nK,qBAEN9nK,KAAKmpK,eAAeC,EAIxB,IAAM7pD,GAAexoC,EAAEqyF,GAAU15H,KAAK,eAAe/1B,KAAK,WAE1D3Z,MAAK4zB,aAAa+C,KAAKsxI,EAAqBp+D,iBACxCy/D,EAAuB/pD,GAIvBxoC,EAAEqyF,GAAU15H,KACZ,gEACkD1sC,SAClDhD,KAAK+nK,sBAGTnlK,EAAOsB,KAAP,yBAAqClE,KAAK+nK,oBAW9CN,EAAUhmK,UAAUkiK,wBAA0B,SAASl3J,GAAU,GAAAspC,GAAA/1C,IAE7DA,MAAKkoK,gBAAgBloK,KAAKie,QAAQ8L,WAAWq+I,cAG7CpoK,KAAK+pB,WAAWjF,OACZ9kB,KAAKwoK,qBACL,SAAAhsJ,GAAA,MAAUu5B,GAAKwzH,gCAAgC/sJ,EAAQ/P,IACvD,SAAA6P,GAAA,MAASy5B,GAAKyzH,8BAA8BltJ,EAAO7P,KAMvDzM,KAAK+pB,WAAW5F,SAYpBsjJ,EAAUhmK,UAAU+nK,8BAAgC,SAASltJ,EAAO7P,GAAU,GAAAm8D,GAAA5oE,KAGpEypK,EACA1yF,EAAEz6D,GAAOozB,KAAK,0BAA0B1sC,QACnC+zE,EAAEz6D,GAAOozB,KAAK,yBAAyB1sC,MAMlD,IAJIymK,IACA7mK,EAAOsB,KAAK,+BACZwjK,EAAAp/J,EAASqsC,kBAEToiC,EAAEz6D,GAAOozB,KAAK,4BAA4B1sC,OAC1ChD,KAAK4zB,aAAa+C,KAAKk0E,EAAWhmE,uBADtC,CAOA,GAAM6kI,GAAiB3yF,EAAEz6D,GAAOozB,KAAK,2BAErC,IAAIg6H,EAAe1mK,OAAQ,CAEvB,GAAM4oI,GAAY89B,EAAe/vJ,KAAK,cAChCgwJ,EAAgB5yF,EAAEz6D,GAAOozB,KAAK,eAChC+2E,QAUJ,OARIkjD,KACAljD,EAAWkjD,EAAc7vJ,YAE7B9Z,MAAK4zB,aAAa+C,KACdk0E,EAAW3kE,kBACX0lG,EACAnlB,GAMR,GAAI1vC,EAAEz6D,GAAOozB,KAAK,yBAAyB1sC,OAWvC,MAVAJ,GAAOwF,KAAK,uCAAwCkU,GACnCsoG,EAAAlxG,QAAQ6H,iBAAiBe,EAAMtB,aAAa,SAE5Chb,KAAKie,QAAQ8L,WAAW69E,MAAMC,kBAG3C7nG,KAAK8nK,4BAET9nK,MAAK4zB,aAAa+C,KAAKk0E,EAAW7mE,wBAItC,IAAM4lI,GAAS5pK,KAAK6nK,sBACdv2F,8BAAqCs4F,CAE3Cx3I,GAAqBC,iBAAiB,GAAI3mB,OAAM4lE,IAChD1uE,EAAO0Z,MAAMg1D,EAAQh1D,EAGrB,IAAMgsJ,GAAiBtoK,KAAKqoK,oBACtBwB,EAAWD,EAAS,GAKrBH,IACDzpK,KAAK4zB,aAAa+C,KACdk0E,EAAWjmE,mBACX0jI,EACAuB,GAIR7pK,KAAK4nK,mBACL/iK,OAAOmI,WAAW,iBAAM47D,GAAK+6F,wBAAwBl3J,IAAWm9J,KAYpEnC,EAAUhmK,UAAU8nK,gCAAkC,SAC9C/sJ,EACA/P,GAAU,GAAA08D,GAAAnpE,IAQd,IANAA,KAAKqpK,mBAAmB7sJ,GAGxBxc,KAAK6nK,wBAG8C,SAA/C9wF,EAAEv6D,GAAQkzB,KAAK,cAAc/1B,KAAK,SAElC3Z,KAAK4nK,mBAGLn7J,QACG,CACH,GAAMm9J,GAAS5pK,KAAK4nK,gBAEpBhlK,GAAOsB,KAAP,4BAAwC0lK,GACxC/kK,OAAOmI,WAAW,iBAAMm8D,GAAKw6F,wBAAwBl3J,IACjDm9J,KAIZnC,EAAUhmK,UAAUgmB,aAAe,WAAW,GAAA4wD,GAAAr4E,IAC1C,OAAO,IAAIg4C,SAAQ,SAAC4E,EAAS8F,GACzB21B,EAAKtuD,WAAWjF,OACZuzD,EAAKmwF,qBACL,SAAAhsJ,GACI67D,EAAK8wF,eAAe3sJ,GACpBogC,KAEJ,SAAAktH,GAAA,MAAWpnH,IACPpmC,MAAOy6D,EAAE+yF,GAASp6H,KAAK,mBAClB1mC,KAAK,WACViT,QAAS86D,EAAE+yF,GAASp6H,KAAK,iBACpB51B,cAMrB2tJ,EAAUhmK,UAAUq+G,YAAc,SAASiqD,EAAajyF,GACpD93E,KAAKgqK,gBAAgCD,EAAajyF,IAUtD2vF,EAAUhmK,UAAUuoK,aAAe,SAASC,EAAOC,EAAO3qE,GAuBtD,QAASm3B,GAAYplD,EAAQ9qD,GACzB4L,EAAqBC,iBAAiB,GAAI3mB,OAAM4lE,IAChD1uE,EAAO0Z,MAAMg1D,EAAQ9qD,GACrB+4E,EAAU/4E,GAzBd,GAAMuC,GAAKhoB,OAAA6jH,EAAAhxG,MAAMiV,GAAI7oB,KAAKqoK,oBACtBrqJ,KAAM,QACJhK,GACF+I,MAAO,kCACPy/F,KAAMx8G,KAAK05B,SACXgvI,cAAehB,EAAAp/J,EAASmsC,WAExBrjC,EAAM,UAEN64J,KACAj2J,EAAMi2J,SACN74J,WAAeA,GAEnB2X,EAAGroB,EAAE,YAAasT,GAclBhU,KAAK+pB,WAAWjF,OACZiE,EACA,SAAAvM,GAEI,GAAI29D,GAAMpD,EAAEv6D,GAAQkzB,KAAK,aAAa/1B,KAAK,QAE3CwgE,EAAMqtD,mBAAmBrtD,KAErBv3E,EAAOsB,KAAP,OAAmBkN,EAAnB,KAA2B+oE,GAC3B+vF,EAAM/vF,IAENu8C,mBAA6BtlH,EAA7B,kBAAmDoL,IAG3Dk6G,EAAYrpH,YAAZ,OAAmC+D,EAAnC,YAIRq2J,EAAUhmK,UAAUo+G,iBAAmB,SAASkqD,EAAajyF,GACzD93E,KAAKgqK,gBAA+BD,EAAajyF,IAGrD2vF,EAAUhmK,UAAU0oK,OAAS,SAAS19J,GAClC,GAAMsc,GAAKhoB,OAAA6jH,EAAAhxG,MAAMiV,GAAI7oB,KAAKqoK,oBACtBrqJ,KAAM,QACF22B,EAAc+yH,EAAAp/J,EAAdqsC,SAEHA,IAKL5rB,EAAGroB,EAAE,UACDqc,MAAO,kCACP4rJ,aAAch0H,IAElB30C,KAAK+pB,WAAWjF,OACZiE,EACA,SAAAvM,GAEI,GAAI4tJ,GAAYrzF,EAAEv6D,GAAQkzB,KAAK,UAAU/1B,KAAK,aAE1CywJ,KACAA,EAAY5iC,mBAAmB4iC,IAEnCxnK,EAAOsB,KAAP,oBAAgCkmK,EAAa5tJ,GAC7CkrJ,EAAAp/J,EAASqsC,iBACTloC,EAAS29J,IAEb,SAAA9tJ,GAGI8V,EAAqBC,iBAAiB,GAAI3mB,OAF3B,iBAGf9I,EAAO0Z,MAHQ,eAGMA,MAzBzB7P,0FC3IO,SAAoBs4F,EAAMnxE,EAAck2C,GACnDugG,EAAA32J,QAAQmJ,oBACJ,SACA,GAAIytJ,GAAuBvlE,EAAMnxE,EAAck2C,8WA/YjDlnE,EAAS7B,OAAAyvG,EAAAhuG,WAAUyD,GASnBqkK,cAQF,QAAAA,GAAY72I,EAAMG,EAAck2C,iGAAW9pE,KAAAsqK,EAAA,IAAAv0H,qKAAA/1C,MAAAsqK,EAAAt0H,WAAAj1C,OAAAk1C,eAAAq0H,IAAA9pK,KAAAR,MAAA,OAEvC+1C,GAAKtiB,KAAOA,EACZsiB,EAAKniB,aAAeA,EACpBmiB,EAAKgzD,YACLhzD,EAAKw0H,aAAezgG,EAAUo/B,IAC9BnzD,EAAKy0H,aAAe1gG,EAAUs8B,IAC9BrwD,EAAK00H,kBACDvgI,WACIwgI,uBACAC,yBAV+B50H,QARzCu0H,6TAA+BM,EAAA,GAQU70H,gCAqBtChsB,+PACDugJ,EAAA7oK,UAAAu0C,WAAAj1C,OAAAk1C,eAAAq0H,EAAA7oK,WAAA,OAAAzB,MAAAQ,KAAAR,KAAW+pB,GACX/pB,KAAK+pB,WAAWtF,WAAWzkB,KAAK6qK,SAASx9J,KAAKrN,MAC1C,oBAAqB,KAAM,MAAO,KAAM,SAAAyQ,IAAA,WAAArF,MAAA,SAOvC2d,GACL,GAAM/F,GAAM+zD,EAAEhuD,GAAI2mB,KAAK,UAAU/1B,KAAK,OAChC0xF,EAASt0B,EAAEhuD,GAAI2mB,KAAK,UAAU/1B,KAAK,UACnCmxJ,EAAU/hJ,EAAG/N,aAAa,QAG1B+vJ,EAAMhqK,OAAAspK,EAAAz2J,MAAMoK,KAAM,SACpB6K,GAAIiiJ,EACJroK,GAAIsmB,EAAG/N,aAAa,OAGxBpY,GAAOkB,IAAP,aAAwBunG,EAAxB,SAAuCy/D,EAAW/hJ,EAClD,IAAIiiJ,GAAOhrK,KAAK+oG,SAAS/lF,EAEzB,IAAe,qBAAXqoF,EAA+B,CAC/B,IAAK2/D,EAaD,MAZAD,GAAI/2J,OAAQgK,KAAM,UAClB+sJ,EAAIrqK,EAAE,SAAWsd,KAAM,WAClBtd,EAAE,kBACCqc,MAAO,wCAEVE,KACAvc,EAAE,mBACCqc,MAAO,6BAEfna,EAAOwF,KAAK,qBAAsB2gB,GAClC/oB,KAAK+pB,WAAW/F,KAAK+mJ,KAMzB,IAAID,IAAYE,EAAKzkD,UAcjB,MAbA3jH,GAAOwF,KACH,8BAA+B4a,EAAKgoJ,EAAKzkD,UAAWx9F,GACxDgiJ,EAAI/2J,OAAQgK,KAAM,UAClB+sJ,EAAIrqK,EAAE,SAAWsd,KAAM,WAClBtd,EAAE,kBACCqc,MAAO,wCAEVE,KACAvc,EAAE,mBACCqc,MAAO,6BAEf/c,KAAK+pB,WAAW/F,KAAK+mJ,UAItB,aAAIC,EAYP,MATAD,GAAI/2J,OAAQgK,KAAM,UAClB+sJ,EAAIrqK,EAAE,SAAWsd,KAAM,WAClBtd,EAAE,uBACCqc,MAAO,wCAEVE,KACLra,EAAOwF,KAAK,uBAAwB4a,EAAK+F,GACzC/oB,KAAK+pB,WAAW/F,KAAK+mJ,KAIzB,IAAMlhJ,GAAMhlB,OAAOwwC,YAAYxrB,KAI/B,QAAQwhF,GACR,IAAK,mBACDzoG,EAAOkB,IAAI,sCAAuC+lB,EAClD,IAAMohJ,GAAal0F,EAAEhuD,GAAI2mB,KAAK,oBAE9B,IAAIu7H,GAAcA,EAAWjoK,OAAS,EAAG,CACrC,GAAMkoK,GAAaD,EAAWtxJ,KAAK,SAC7BwxJ,EAAaF,EAAWtxJ,KAAK,QAEnC3Z,MAAK4zB,aAAa+C,KACdy0I,EAAA9iK,EAAWm+B,uBACI,SAAfykI,EACe,SAAfC,GAMR,GAAMphG,GAAgD,UAAxCsgG,EAAA32J,QAAQgI,mBAAmBovJ,EAEzCloK,GAAOsB,KAAP,wBAC4B4mK,EAD5B,QAEW/gG,EAAQ,GAAK,SAFxB,QAGAihG,EACM,GAAIK,GAAA/iK,EACFyuE,EAAEhuD,GAAI2mB,KAAK,UAAU/1B,KAAK,OAC1Bo9D,EAAEhuD,GAAIpP,KAAK,MACXmxJ,EACA9qK,KAAK+pB,WACL/pB,KAAKyqK,iBACL1gG,EAAQ/pE,KAAKwqK,aAAexqK,KAAKuqK,aACjCxgG,KAEA/pE,KAAKyzB,KAAKxV,SAElBje,KAAK+oG,SAASiiE,EAAKhoJ,KAAOgoJ,EAE1BhrK,KAAK4zB,aAAa+C,KAAKy0I,EAAA9iK,EAAW47B,cAC9B8mI,EAAMj0F,EAAEhuD,GAAI2mB,KAAK,WAAY7lB,GACjCu5D,EAAA96E,EAAW0sB,UAAUmF,UACjB84C,EAAApjE,GAA6BzE,MAAOye,GACxC,MAEJ,KAAK,iBACD7pB,KAAK4zB,aAAa+C,KACdy0I,EAAA9iK,EAAW27B,cAAe+mI,EAAMj0F,EAAEhuD,GAAI2mB,KAAK,WAC/C,MAEJ,KAAK,iBACDs7H,EAAKM,eAAev0F,EAAEhuD,GAAI2mB,KAAK,WAC/B,MAEJ,KAAK,iBACD1vC,KAAK4zB,aAAa+C,KACdy0I,EAAA9iK,EAAWo+B,eAAgBskI,EAAMj0F,EAAEhuD,GAAI2mB,KAAK,WAChD,MAEJ,KAAK,oBACD9sC,EAAOkB,IAAI,iBAAkBknK,EAAKhoJ,IAClC,IAAI+kG,GAAkB,KAClBC,EAAa,IAEbjxC,GAAEhuD,GAAI2mB,KAAK,kBAAkB1sC,SAC7B+kH,EACMhxC,EAAEhuD,GAAI2mB,KAAK,yBAAyB,GAAGh3B,QAC7CsvG,EAAajxC,EAAEhuD,GAAI2mB,KAAK,uBAAuB51B,QAEnD9Z,KAAK4nH,UAAUojD,EAAKhoJ,IAAK+kG,EAAiBC,GAC1ChoH,KAAK4zB,aAAa+C,KAAKy0I,EAAA9iK,EAAW67B,WAC9B6mI,EAAMjjD,EAAiBC,EAC3B,MAEJ,KAAK,oBACDplH,EAAOsB,KAAK,iCAAkC2lB,GAC9Cu5D,EAAA96E,EAAW0sB,UAAUmF,UACjB84C,EAAA1xC,GACEn2B,MAAOye,IAEbmhJ,EAAKO,iBAAiBx0F,EAAEhuD,GAAI2mB,KAAK,WAAY,WACzC,GAAM87H,GAAc3mK,OAAOwwC,YAAYxrB,KAEvCjnB,GAAOsB,KAAK,oCAAqCsnK,GACjDpoF,EAAA96E,EAAW0sB,UAAUmF,UACjB84C,EAAA6qD,GACE1yH,MAAOogK,KACd,SAAAlvJ,GACCi1D,EAAAjpE,EAAqB+pB,iBAAiB/V,GACtC1Z,EAAO0Z,MAAM,2BAA4BA,GACzC0uJ,EAAKS,uBAET,MACJ,KAAK,YACL,IAAK,aACDT,EAAKU,gBAAgB30F,EAAEhuD,GAAI2mB,KAAK,mBAChC,MACJ,KAAK,eACL,IAAK,gBACDs7H,EAAKW,mBAAmB50F,EAAEhuD,GAAI2mB,KAAK,mBACnC,MACJ,SACI9sC,EAAOwF,KAAK,gCAAiCijG,GAC7C0/D,EAAI/2J,OAAQgK,KAAM,UAClB+sJ,EAAIrqK,EAAE,SAAWsd,KAAM,WAClBtd,EAAE,eACGqc,MAAO,wCACZE,KAKT,MAFAjd,MAAK+pB,WAAW/F,KAAK+mJ,SAEdt6J,IAAA,sBAAArF,MAAA,SAUSwgK,EAAIl/C,GACpB,GAAMs+C,GACA,GAAIK,GAAA/iK,EACFujK,EAAAvjK,EAAW2sC,gBAAgB,IAC3B22H,EACAl/C,EACA1sH,KAAK+pB,WACL/pB,KAAKyqK,iBACLzqK,KAAKwqK,iBACK,EAEVxqK,KAAKyzB,KAAKxV,QAIlB,OAFAje,MAAK+oG,SAASiiE,EAAKhoJ,KAAOgoJ,EAEnBA,oCASDhoJ,EAAK+kG,EAAiBC,GACxBhoH,KAAK+oG,SAASrnG,eAAeshB,KACI,UAA7BhjB,KAAK+oG,SAAS/lF,GAAK62E,OACnB75F,KAAK+oG,SAAS/lF,GAAK8oJ,aAAa/jD,EAAiBC,SAE9ChoH,MAAK+oG,SAAS/lF,wDAOD,GAAA4lD,GAAA5oE,IAcxBA,MAAK+pB,WAAWjF,OACZ/jB,OAAAspK,EAAAz2J,MAAMoK,KAAM,MACR6K,GAAI7oB,KAAK+pB,WAAW5W,SACnBzS,EAAE,YAAcqc,MAAO,wBACvBrc,EAAE,WAAawqB,aAAclrB,KAAK+pB,WAAW5W,SAClD,SAAA6hE,GACI,GAAM+2F,KAENh1F,GAAE/B,GAAKtlC,KAAK,qBAAqB8c,KAAK,SAAC0tC,EAAKzhF,GAGxC,GAAMuzJ,MACAhuJ,GAFNvF,EAAKs+D,EAAEt+D,IAESkB,KAAK,OAErB,QAAQqE,GACR,IAAK,OACDguJ,EAAK7xF,IAAL,QAAmB1hE,EAAGkB,KAAK,QACvBlB,EAAGkB,KAAK,UACRqyJ,EAAK7xF,KAAL,IAAgB1hE,EAAGkB,KAAK,SAE5BoyJ,EAAWlpK,KAAKmpK,EAChB,MACJ,KAAK,OACL,IAAK,QACDA,EAAK7xF,IAASn8D,EAAd,GACA,IAAMs2B,GAAW77B,EAAGkB,KAAK,WAKzB,IAAI26B,EAAU,CACV,GAAM3wC,GACAP,UAAUM,UAAUC,MAClB,2BAEJA,IAASE,SAASF,EAAM,GAAI,IAAM,GAClCqoK,EAAK7xF,KAAU7lC,EAAf,IAGA03H,EAAK13H,SAAWA,EAGxB03H,EAAK7xF,KAAO1hE,EAAGkB,KAAK,OACpB,IAAM2yB,GAAO7zB,EAAGkB,KAAK,OAEjB2yB,IAAiB,SAATA,IACR0/H,EAAK7xF,KAAL,IAAgB1hE,EAAGkB,KAAK,QAE5B,IAAMrX,GAAYmW,EAAGkB,KAAK,YAEtBrX,IAA2B,QAAdA,IACb0pK,EAAK7xF,KAAL,cAA0B73E,GAG9B0pK,EAAKj/E,WAAat0E,EAAGkB,KAAK,aACfqyJ,EAAKj/E,WAChBg/E,EAAWlpK,KAAKmpK,KAMxB,IAAM/tJ,GAAU2qD,EAAKn1C,KAAKxV,OAEtBA,GAAQkoF,cACRv9B,EAAK2hG,aAAat9E,WAAa8+E,GAG/B9tJ,EAAQmoF,KAAOnoF,EAAQmoF,IAAID,cAC3Bv9B,EAAK4hG,aAAav9E,WAAa8+E,IAGpC,SAAAvlJ,GACC5jB,EAAOwF,KAAK,kCAAmCoe,GAC/C5jB,EAAOwF,KAAK,qDAAAqI,IAAA,SAAArF,MAAA,WASf,GAAA+9D,GAAAnpE,KACC0Q,IAgBN,OAdA3P,QAAOg3B,KAAK/3B,KAAK+oG,UAAU16F,QAAQ,SAAA2U,GAC/B,GACMkzE,GADU/sB,EAAK4/B,SAAS/lF,GACXoS,cAEf8gE,IAAMA,EAAG+1E,YAETv7J,YAAesS,IACXipJ,UAAW/1E,EAAG+1E,UACd1uI,MAAO24D,EAAG34D,MACV48C,IAAKt1E,OAAOgrB,SAAS0lF,SAK1B7kG,+fC1XT9N,EAAS7B,OAAA29J,EAAAl8J,WAAUyD,GAYJimK,cAyDjB,QAAAA,GACQlpJ,EACAmpJ,EACA5lD,EACAx8F,EACA0gJ,EACA3gG,EACAC,EACAghD,EACA9sG,iGAASje,KAAAksK,EAAA,IAAAn2H,qKAAA/1C,MAAAksK,EAAAl2H,WAAAj1C,OAAAk1C,eAAAi2H,IAAA1rK,KAAAR,KAETgjB,EAAKmpJ,EAAU5lD,EAAWx8F,EAAY0gJ,EAAkB3gG,GAF/C,OAUb/zB,GAAKq2H,6BAA+B,KAYpCr2H,EAAKs2H,2BAA6B,KAgBlCt2H,EAAKu2H,qBAYLv2H,EAAKw2H,sBASLx2H,EAAKy2H,sBAELz2H,EAAK02H,oBACL12H,EAAK8xC,UAOL9xC,EAAKg1E,YAAcA,EAQnBh1E,EAAKg0B,MAAQA,EAMbh0B,EAAK22H,eAAiB,GAAIC,GAAArkK,EAE1BytC,EAAK62H,oBAAsB9yF,QAAQ77D,EAAQ2uJ,qBAC3C72H,EAAK82H,oBAAsB/yF,QAAQ77D,EAAQ4uJ,qBAO3C92H,EAAKk3D,QAAUnzB,QAAQ77D,EAAQgvF,SAE/Bl3D,EAAK+2H,kBACCC,EAAAzkK,EAAMyyC,MAAMhF,EAAKi3H,mBAAmB3/J,KAAxB0oC,GAAoC,GAOtDA,EAAKk3H,gBAQLl3H,EAAKy1E,6BA/GQz1E,QAlEAm2H,6TAAwBgB,EAAA,GAAAz4I,EAAA5yB,EAAA,OAAA4O,IAAA,oBAAArF,MAAA,SAShB+hK,GACrB,GAAMC,GAAgBD,EAAez9H,KAAK,yBAE1C,IAAI09H,EAAcpqK,OAAQ,CACtB,GAAMosG,GAAUg+D,EAAc,GAAGpyJ,aAAa,UAE9C,IAAgB,SAAZo0F,GACe,cAAZA,GACY,cAAZA,GACY,SAAZA,EACH,MAAOA,GAIf,MAAO,UA2CMr5D,2CA6HDs3H,GACZ,MAAIrtK,MAAK65F,QAAUyzE,EAAAl9J,IACfxN,EAAOkB,IAAP,8CACkDupK,UAE3C58J,IAAA,eAAArF,MAAA,WASA,GAAAw9D,GAAA5oE,IACXA,MAAKysK,oBAGLzsK,KAAKutK,eAGLvtK,KAAKwtK,YAEL,IAAMC,IAAc5nE,WAAY7lG,KAAKw8G,KAAKv+F,QAAQ4nF,WAElD,IAAI7lG,KAAK+pE,MAAO,CAEZ0jG,EAAUC,oBACVD,EAAUE,YACJ3tK,KAAKw8G,KAAKv+F,QAAQmoF,KAAOpmG,KAAKw8G,KAAKv+F,QAAQmoF,IAAIunE,YACrDF,EAAUG,WACJ5tK,KAAKw8G,KAAKv+F,QAAQmoF,KAAOpmG,KAAKw8G,KAAKv+F,QAAQmoF,IAAIwnE,UAErD,IAAM1jG,GAAqBlqE,KAAK6tK,sCAErB3jG,IACPujG,EAAUvjG,mBAAqBA,OAInCujG,GAAUC,iBACJ1tK,KAAKw8G,KAAKv+F,QAAQyvJ,kBACZ1tK,KAAKw8G,KAAKv+F,QAAQ2vJ,aACV5tK,KAAKw8G,KAAKv+F,QAAQ0vJ,YACtCF,EAAUG,WAAa5tK,KAAKw8G,KAAKv+F,QAAQ2vJ,WACzCH,EAAUK,uBACJ9tK,KAAKw8G,KAAKv+F,QAAQ4gG,SACb7+G,KAAKw8G,KAAKv+F,QAAQ4gG,QAAQivD,sBAGzC9tK,MAAKo1B,eACCp1B,KAAK0gF,IAAIqtF,qBACH/tK,KAAK0sK,eACL1sK,KAAK8pE,UACL9pE,KAAK+pE,MACL0jG,GAEZztK,KAAKo1B,eAAe+iE,eAAiB,SAAA6Q,GACjC,GAAKA,EAAL,CAUA,GAAM57D,GAAY47D,EAAG57D,UACfvjB,EAAMhlB,OAAOwwC,YAAYxrB,KAE/B,IAAIujB,EAAW,CAC6B,OAApCw7B,EAAKyjG,6BACLzjG,EAAKyjG,2BAA6BxiJ,EAItC,IAAItK,GAAW6tB,EAAU7tB,QAEzB,IAAwB,gBAAbA,GAEP,GAAiB,SADjBA,EAAWA,EAASxE,gBACmB,WAAbwE,GACtB,GAAIqpD,EAAKikG,oBACL,WAED,IAAiB,QAAbttJ,GACHqpD,EAAKgkG,oBACL,WAIT,KAAKhkG,EAAK4jG,mBAAoB,CAEjC,GAAInuI,GAAYuqC,EAAKmB,MAAQ,WAAa,MAE1C1rC,IAAauqC,EAAKmiD,YAAc,aAAe,aAC/C1sF,GAAa40C,EAAAwqD,EACbuwC,EAAA1lK,EAAW0sB,UAAUmF,UACjBkE,GACEjzB,MAAOye,EAAM++C,EAAKyjG,6BACxBzjG,EAAK4jG,sBAET5jG,EAAKqlG,iBAAiB7gI,KAU1BptC,KAAKo1B,eAAemjE,uBAAyB,WACpC3vB,EAAKxzC,iBAGiC,WAAvCwzC,EAAKxzC,eAAe6jE,eACpBrwB,EAAK4kG,aAEmC,WAAvC5kG,EAAKxzC,eAAe6jE,gBACsB,WAAxCrwB,EAAKxzC,eAAeisG,iBACnBz4D,EAAKif,QACTjf,EAAK4zC,KAAK5oF,aAAa+C,KAAKu3I,EAAA5lK,EAAWg4B,iBAAvCsoC,KAUR5oE,KAAKo1B,eAAeojE,2BAA6B,WAC7C,GAAK5vB,EAAKxzC,gBACEwzC,EAAKulG,gBAAgB,8BADjC,CAIA,GAAMtkJ,GAAMhlB,OAAOwwC,YAAYxrB,KAE1B++C,GAAKmB,QACNnB,EAAK4zC,KAAKtX,gBAAV,aACiBt8B,EAAKxzC,eAAek2D,oBAC/BzhE,GAEVjnB,EAAOkB,IACH,cAAc8kE,EAAKxzC,eAAek2D,mBAAlC,SACe1iB,EAAKmB,MADpB,MAEAlgD,EACJ,IAAMukJ,IACGxlG,EAAKmB,MAAQ,OAAS,IAAKkJ,EAAA9xC,EAD9B,IAEEynC,EAAKxzC,eAAek2D,kBAQ5B,QANA0iF,EAAA1lK,EAAW0sB,UAAUmF,UACjBi0I,GAA0BhjK,MAAOye,IACrC++C,EAAK4zC,KAAK5oF,aAAa+C,KACnBu3I,EAAA5lK,EAAWq+B,6BADfiiC,EAGIA,EAAKxzC,eAAek2D,oBAChB1iB,EAAKxzC,eAAek2D,oBAC5B,IAAK,WACD1iB,EAAKwjG,6BAA+BviJ,CACpC,MACJ,KAAK,YAUD,GAP2C,WAAvC++C,EAAKxzC,eAAe6jE,gBAChBrwB,EAAK2kG,aACL3kG,EAAK4zC,KAAK5oF,aAAa+C,KACnBu3I,EAAA5lK,EAAW02B,oBADf4pC,IAKHA,EAAKqkG,cAAgBrkG,EAAK4kG,UAAW,CACtC,GAAInvI,GAAYuqC,EAAKmB,MAAQ,WAAa,MAE1C1rC,IAAauqC,EAAKmiD,YAAc,aAAe,aAC/CijD,EAAA1lK,EAAW0sB,UAAUmF,UAArB,GACOkE,EAAY40C,EAAAzxC,GAEXp2B,MAAOye,EAAM++C,EAAKwjG,8BAM1B,IAAMiC,GACAngK,KAAKuhB,IACHm5C,EAAKwjG,6BACLxjG,EAAKyjG,2BAEbzjG,GAAK4iD,sBAAwB3hG,EAAMwkJ,EAEnCL,EAAA1lK,EAAW0sB,UAAUmF,UAArB,GACOkE,EAAY40C,EAAAzxD,GAEXpW,MAAOw9D,EAAK4iD,wBAEpB5iD,EAAKqkG,gBACLrkG,EAAK4zC,KAAK5oF,aAAa+C,KACnBu3I,EAAA5lK,EAAWg8B,uBADfskC,GAGJA,EAAK2kG,cACL,MACJ,KAAK,eACD,GAAI3kG,EAAKif,OACL,KAEJjf,GAAK2kG,eAID3kG,EAAK4kG,WACL5kG,EAAK4zC,KAAK5oF,aAAa+C,KACnBu3I,EAAA5lK,EAAWy2B,uBADf6pC,EAGJ,MACJ,KAAK,SACDA,EAAK4zC,KAAK5oF,aAAa+C,KACnBu3I,EAAA5lK,EAAWk8B,sBADfokC,GAEAA,EAAK4zC,KAAK5oF,aAAa+C,KACnBu3I,EAAA5lK,EAAW+7B,wBADfukC,EAGI,GAAIl9D,OAAM,gBAItB1L,KAAKo1B,eAAeqjE,oBAAsB,WACtC7vB,EAAK4zC,KAAK5oF,aAAa+C,KAAKu3I,EAAA5lK,EAAWu9B,qBAAvC+iC,IAIJ5oE,KAAK0sK,eAAe4B,YAAYtuK,KAAKw8G,+CAQxBpvE,GAAW,GAAA+7B,GAAAnpE,KAClBgyI,EAAW,GAAIu8B,GAAAjmK,EAAItI,KAAKo1B,eAAe2jE,iBAAiBtoD,IAE9D,IAAIrD,IAAcptC,KAAKysK,iBAAkB,CACrC,GAAM+B,GACAC,EAAAnmK,EAAQijC,UACNymG,EAAS5lG,MAAMgB,EAAUmiD,eAAgByiD,EAAS1kH,SACpDohJ,EAAQD,EAAAnmK,EAAQsmC,kBAAkBxB,EAAUA,UAElD,KAAMohI,IAAOE,EAAQ,CACjB,GAAMC,GAAgB,4BAKtB,OAHAC,GAAAtmK,EAAqB+pB,iBAAiB,GAAI3mB,OAAMijK,QAChD/rK,GAAO0Z,MAAMqyJ,GAIjBH,EAAIzxJ,MAAQ,uCAER/c,KAAK6uK,SAC6B,IAA9B7uK,KAAK8uK,cAAc9rK,QAEnBgK,WAAW,WAC2B,IAA9Bm8D,EAAK2lG,cAAc9rK,SAGvBmmE,EAAK4lG,kBAAkB5lG,EAAK2lG,eAC5B3lG,EAAK2lG,mBACN,IAEP9uK,KAAK8uK,cAAcjsK,KAAKuqC,IAExBptC,KAAK+uK,mBAAoB3hI,QAG7BxqC,GAAOkB,IAAI,qCAGX9D,KAAKysK,uBAAmBh8J,IAAA,oBAAArF,MAAA,SAUd4jK,GAAY,GAAA32F,GAAAr4E,IAC1B,IAAKA,KAAKmuK,gBAAgB,qBAA1B,CAKAvrK,EAAOkB,IAAI,oBAAqBkrK,EAUhC,KAAK,GATCnhI,GAAO9sC,OAAAkuK,EAAAr7J,MAAMiV,GAAI7oB,KAAKumH,UACxBvoG,KAAM,QACLtd,EAAE,UAAYqc,MAAO,oBAClBsuF,OAAQ,iBACR6jE,UAAWlvK,KAAKkvK,UAChBlsJ,IAAKhjB,KAAKgjB,MAEZgvH,EAAW,GAAIu8B,GAAAjmK,EAAItI,KAAKo1B,eAAe2jE,iBAAiBtoD,KAErD2jD,EAAM,EAAGA,EAAM49C,EAAS5lG,MAAMppC,OAAQoxF,KAhBrB,SAgBjBA,GACL,GAAM+H,GAAQ6yE,EAAW5/H,OAAO,SAAA32B,GAAA,MAAMA,GAAG82E,gBAAkB6E,IACrD3nD,EACAgiI,EAAAnmK,EAAQ6jC,WAAW6lG,EAAS5lG,MAAMgoD,GAAK5tF,MAAM,QAAQ,GAE3D,IAAI21F,EAAMn5F,OAAS,EAAG,CAClB,GAAMwrK,GACAC,EAAAnmK,EAAQijC,UAAUymG,EAAS5lG,MAAMgoD,GAAM49C,EAAS1kH,QAEtDkhJ,GAAIzxJ,MAAQ,uCACZ8wB,EAAKntC,EAAE,WACH0tG,QAAS/1B,EAAK62F,YAAc72F,EAAK8zF,SAC3B,YAAc,YACpBvrK,KAAMu7F,EAAM,GAAG9M,OAAS8M,EAAM,GAAG9M,OAAS5iD,EAAML,QACjD1rC,EAAE,YAAa8tK,EAClB,KAAK,GAAInuK,GAAI,EAAGA,EAAI87F,EAAMn5F,OAAQ3C,IAAK,CACnC,GAAM+sC,GACAqhI,EAAAnmK,EAAQsmC,kBAAkButD,EAAM97F,GAAG+sC,UAIrCirC,GAAK40B,UACL7/D,EAAUI,GAAK,WAEnBK,EAAKntC,EAAE,YAAa0sC,GAAWnwB,KAInC,GAAMkyJ,GACAV,EAAAnmK,EAAQsjC,SACNomG,EAAS5lG,MAAMgoD,GACf,iBAAkB49C,EAAS1kH,QAEnC,IAAI6hJ,EAAiB,CACjB,GAAM7hE,GAAMmhE,EAAAnmK,EAAQ0kC,iBAAiBmiI,EAErC7hE,GAAImB,YACJ5gE,EAAKntC,EACD,eACEqc,MAAO,gCACRlb,EAAEyrG,EAAIrgE,mBACJqgE,GAAIrgE,YACXY,EAAK75B,MAAMs5F,GACXz/D,EAAK5wB,KAET4wB,EAAK5wB,KACL4wB,EAAK5wB,OA9CJm3E,EAqDTp0F,MAAK+pB,WAAWjF,OACZ+oB,EAAM,KAAM7tC,KAAKovK,sBAAsBvhI,GAziBhC,SAAAp9B,IAAA,mBAAArF,MAAA,SA+iBE+M,GAAM,GAAAqrG,GAAAxjH,IACnB,IAA2C,WAAvCA,KAAKo1B,eAAe6jE,eAAxB,CAMA,GAAMkmC,KAENhnH,GAAKu3B,KAAK,gCACL8c,KAAK,SAAC0tC,EAAK9sD,GACR,GAAIpxB,GAAOyyJ,EAAAnmK,EAAQumC,oBAAoBzB,EAEvCpxB,GAAOA,EAAK5R,QAAQ,OAAQ,IAAIA,QAAQ,KAAM,GAI9C,IAAMilK,GAAe,GAAI3jF,kBACrB6D,cAAe,EAOfF,OAAQ,GACRjiD,UAAWpxB,GAGfmjH,GAAct8H,KAAKwsK,KAGtBlwC,EAAcn8H,QA0BnBJ,EAAOyZ,MAAP,eACmB8iH,EAAcn8H,OADjC,4BAEAhD,KAAK8sK,kBAAkBjqK,KAjBF,SAAAysK,GAAoB,GAAA14I,MAAAC,KAAAC,QAAA,KACrC,OAAAC,GAAAC,EAA2BmoG,EAA3BjoG,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAA0C,IAA/B24I,GAA+Bx4I,EAAA3rB,KACtCo4G,GAAKpuF,eAAe8hE,gBAChBq4E,EACA,WACI3sK,EAAOyZ,MAAM,wBAEjB,SAAAC,GACI1Z,EAAO0Z,MAAM,0BAA2BA,MARf,MAAAkK,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAYrCw4I,OAtBA1sK,EAAO0Z,MACH,6BAA8BnE,EAAK,IAAMA,EAAK,GAAGq3J,eAhCrD5sK,GAAOwF,KAAK,qDAAAqI,IAAA,eAAArF,MAAA,SAiEP2kG,GAAU,GAAA4U,GAAA3kH,IAEb+2E,GAAEg5B,GAAUrgE,KACV,gEAGF8c,KAAK,SAACnsD,EAAGovK,GACX,GAAMj1I,GAAOvsB,OAAOwhK,EAAYz0J,aAAa,QAEzC2pG,GAAK56C,MAEL46C,EAAK+nD,eAAegD,aAChBl1I,EAAMy0I,EAAAv7J,QAAQgI,mBAAmBipG,EAAK4B,YAE1CxvC,EAAE04F,GACG//H,KAAK,gDACL8c,KAAK,SAACmjH,EAAIC,GACP,GAAMpkG,GAAQokG,EAAgB50J,aAAa,QAEvCwwD,IAASA,EAAMxoE,SACXwM,MAAMgrB,IAASA,EAAO,EACtB53B,EAAOwF,KACH,gBAAgBoyB,EAAhB,uBACcgxC,GAElBm5C,EAAK+nD,eAAegD,aAChBl1I,EACAy0I,EAAAv7J,QAAQgI,mBAAmB8vD,wDAcnDxrE,KAAKo1B,eACLp1B,KAAKo1B,eAAey6I,uBAEpBjtK,EAAO0Z,MACH,2DAAA7L,IAAA,cAAArF,MAAA,SAwBAg7G,EAAat2D,EAAS6+E,EAAShnE,GAAa,GAAAw9C,GAAAnlH,IACpDA,MAAK8vK,oBACD1pD,EACA,WAIIjB,EAAK4qD,kBAAkBjgH,EAAS6+E,IAEpCA,EACAhnE,kCAWDA,GAAa,GAAA69C,GAAAxlH,IAChB,KAAKA,KAAK+qH,YACN,KAAM,IAAIr/G,OAAM,8CAkCpB1L,MAAK8sK,kBAAkBjqK,KAhCF,SAAAysK,GAAoB,GAAA53I,MAAAC,KAAAC,QAAA,KACrC,OAAAC,GAAAC,EAAyB6vC,EAAzBzwC,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAsC,IAA3B41C,GAA2Bz1C,EAAAzsB,KAClCo6G,GAAKpwF,eAAeyjD,SAASvL,IAFI,MAAA9mD,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAIrC4tF,EAAKpwF,eAAe+nE,YAChB,SAAA6yE,GACIxqD,EAAKpwF,eAAe0mE,oBAChBk0E,EACA,WAIIxqD,EAAKyqD,oBACDzqD,EAAKpwF,eAAe2jE,iBAAiBtoD,KACzC6+H,KAEJ,SAAAhzJ,GACI1Z,EAAO0Z,MACH,0BAA2BA,EAAO0zJ,GACtCV,EAAiBhzJ,MAG7B,SAAAA,GACI1Z,EAAO0Z,MACH,4BACAA,EACAkpG,EAAKilD,kBACT6E,EAAiBhzJ,IAErBkpG,EAAKilD,mBAKT,SAAAnuJ,GACQA,EACA1Z,EAAO0Z,MAAM,eAAgBA,GAE7B1Z,EAAOyZ,MAAM,6BAAA5L,IAAA,sBAAArF,MAAA,SAeT4kK,GAChB,GAAIvuJ,GAAO1gB,OAAAkuK,EAAAr7J,MACPiV,GAAI7oB,KAAKumH,UACTvoG,KAAM,QACPtd,EAAE,UACDqc,MAAO,oBACPsuF,OAAQ,mBACR6jE,UAAWlvK,KAAKkvK,UAChBlsJ,IAAKhjB,KAAKgjB,KAGd,IAAIurJ,GAAAjmK,EAAI0nK,GAAU/hE,SACdxsF,EACAzhB,KAAKkvK,YAAclvK,KAAK4rK,GAAK,YAAc,aAC/CnqJ,EAAOA,EAAKhF,OACZ7Z,EAAOsB,KAAK,qBAAsBud,GAClCzhB,KAAK+pB,WAAWjF,OAAOrD,EACnB,WACI7e,EAAOsB,KAAK,sCAEhB,SAAAoY,GACI1Z,EAAO0Z,MAAM,2BAA4BA,IA1xBtC,QAAA7L,IAAA,YAAArF,MAAA,SAmyBL8kK,GACN,IAAKlwK,KAAK+qH,YACN,KAAM,IAAIr/G,OAAM,mDAEpB1L,MAAK8vK,oBACDI,EACA,WACIttK,EAAOsB,KAAK,0BAEhB,SAAAoY,GACI1Z,EAAO0Z,MAAM,qBAAsBA,iDAmB3B6zJ,EAAqBrgH,EAAS6+E,EAAShnE,GAAa,GAAAs+C,GAAAjmH,IA0DpEA,MAAK8sK,kBAAkBjqK,KAzDF,SAAAysK,GAEjB,GAAI3nG,EAAa,IAAA7uC,MAAAC,KAAAC,QAAA,KACb,OAAAC,GAAAC,EAAoByuC,EAApBzwC,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,KAAiC,IAAtB2xC,GAAsBxxC,EAAA7tB,KAC7B66G,GAAK7wF,eAAeyjD,SAASpO,IAFpB,MAAAjkD,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,KAMjB,GAAMo3I,GACAnqD,EAAKoqD,yBAAyBF,GAC9BG,EACArqD,EAAK7wF,eAAe2jE,iBAAiBtoD,GAE3Cw1E,GAAKsqD,aAAaH,EAAa1pJ,KAC1BqpC,KAAK,WAwBF,GAvBIk2D,EAAKpsB,QAAUyzE,EAAA5sK,IACfulH,EAAKpsB,MAAQyzE,EAAAhlK,EAaT29G,EAAKl8C,QAAUk8C,EAAKqmD,mBACpBrmD,EAAKuqD,kBAAkBvqD,EAAKqmD,oBAQhCgE,EAAa,CACb,GAAMG,GACA,GAAIlC,GAAAjmK,EAAI29G,EAAK7wF,eAAe2jE,iBAAiBtoD,IAEnDw1E,GAAKyqD,mBACD,GAAInC,GAAAjmK,EAAIgoK,GAAcG,GAG9BnB,KACD,SAAAhzJ,GACC1Z,EAAO0Z,MAAP,iDAEQ2pG,EAAK8E,YAAc,WAAa,WAAYzuG,EAChD8zJ,GACJlE,EAAgByE,mBAAhB1qD,EAAyC3pG,GACzCgzJ,EAAiBhzJ,MAMzB,SAAAA,GACIA,EAAQqyH,EAAQryH,GAASwzC,+CAcpB8gH,EAAiB9gH,EAAS6+E,GAAS,GAAA3nB,GAAAhnH,IAKhDA,MAAKw8G,KAAK5oF,aAAa+C,KAAKu3I,EAAA5lK,EAAWw8B,eAAgB9kC,KACvD,IAAM6wK,GAAgBD,EAAgB72E,OAEtC62E,GAAgBlhI,KAAK,yBAA2BguC,SAGhD19E,KAAK8vK,oBACDc,EACA,WAEI5pD,EAAK8oD,oBACDe,EACA,WACI,GAAM7+B,GACA,GAAIu8B,GAAAjmK,EAAI0+G,EAAK5xF,eAAe2jE,iBAAiBtoD,IAEnDu2E,GAAK8pD,oBAAoB9+B,EAAUliF,EAAS6+E,IAEhDA,IAERA,6CAYU7+E,EAAS6+E,GAAS,GAAA5lB,GAAA/oH,KAG1BgyI,EAAW,GAAIu8B,GAAAjmK,EAAItI,KAAKo1B,eAAe2jE,iBAAiBtoD,KAC1DsgI,EAAShwK,OAAAkuK,EAAAr7J,MAAMiV,GAAI7oB,KAAKumH,UACxBvoG,KAAM,QACLtd,EAAE,UAAYqc,MAAO,oBAClBsuF,OAAQ,iBACR6jE,UAAWlvK,KAAKkvK,UAChB8B,UAAWhxK,KAAKgxK,UAChBhuJ,IAAKhjB,KAAKgjB,KAEdhjB,MAAK6sK,sBACL76B,EAAS9kC,wBAETltG,KAAK4sK,sBACL56B,EAAS7kC,wBAETntG,KAAKitG,UACL+kC,EAAS/kC,YAEb+kC,EAAS/jC,SACL8iE,EACA/wK,KAAKkvK,YAAclvK,KAAKmsK,SAAW,YAAc,YACjD,MAGJ4E,EAASA,EAAOt0J,OAChB7Z,EAAOsB,KAAK,yBAA0B6sK,GACtC/wK,KAAK+pB,WAAWjF,OAAOisJ,EACnBjhH,EACA9vD,KAAKovK,sBAAsB2B,EAAQ,SAAAz0J,GAC/BqyH,EAAQryH,GAIRysG,EAAKvM,KAAK5oF,aAAa+C,KACnBu3I,EAAA5lK,EAAWk+B,uBADfuiF,KAp9BG,QAAAt4G,IAAA,oBAAArF,MAAA,SAu/BG6lK,GACd,GAAMC,GAAkBD,EAAsB,OAAS,OAEjDE,EACApwK,OAAAkuK,EAAAr7J,MACEiV,GAAI7oB,KAAKumH,UACTvoG,KAAM,QAELtd,EAAE,UACCqc,MAAO,oBACPsuF,OAAQ,iBACR6jE,UAAWlvK,KAAKkvK,UAChBlsJ,IAAKhjB,KAAKgjB,MAEbtiB,EAAE,WACCE,KAAM,QACNwuG,QAAS8hE,GAGrBtuK,GAAOsB,KAAP,0CAC8CgtK,GAE9ClxK,KAAK+pB,WAAWjF,OACZqsJ,EACA,KACAnxK,KAAKovK,sBAAsB+B,GAhhCpB,QAAA1gK,IAAA,sBAAArF,MAAA,SA8hCK4mI,EAAUliF,EAAS6+E,GAAS,GAAAyiC,GAAApxK,KACxCqxK,EAAkBtwK,OAAAkuK,EAAAr7J,MAAMiV,GAAI7oB,KAAKumH,UACjCvoG,KAAM,QACLtd,EAAE,UACCqc,MAAO,oBACPsuF,OAAQ,mBACR6jE,UAAWlvK,KAAKkvK,UAChBlsJ,IAAKhjB,KAAKgjB,KAGlBgvH,GAAS5lG,MAAM/9B,QAAQ,SAACijK,EAAYp3E,GAChC,GAAMztD,GAAQgiI,EAAAnmK,EAAQ6jC,WAAWmlI,EAAW9qK,MAAM,QAAQ,GAE1D6qK,GAAgB3wK,EAAE,WAEV0tG,QACIgjE,EAAKlC,YAAckC,EAAKjF,SAClB,YACA,YACVvrK,KAAM6rC,EAAML,QAGpB4lG,EAAS3iC,kBAAkBnV,EAAKm3E,GAChCA,EAAgBp0J,OAIpBo0J,EAAkBA,EAAgB50J,OAClC7Z,EAAOsB,KAAK,6BAA8BmtK,GAE1CrxK,KAAK+pB,WAAWjF,OAAOusJ,EACnBvhH,EACA9vD,KAAKovK,sBAAsBiC,EAAiB1iC,GA9jCrC,QAAAl+H,IAAA,sBAAArF,MAAA,SA6kCK0kD,EAAS6+E,GAGzB,GAAI4iC,GAAkBxwK,OAAAkuK,EAAAr7J,MAAMiV,GAAI7oB,KAAKumH,UACjCvoG,KAAM,QACLtd,EAAE,UACCqc,MAAO,oBACPsuF,OAAQ,mBACR6jE,UAAWlvK,KAAKkvK,UAChBlsJ,IAAKhjB,KAAKgjB,KAGlBuuJ,GAAkBA,EAAgB90J,OAClC7Z,EAAOsB,KAAK,4BAA8BqtK,GAE1CvxK,KAAK+pB,WAAWjF,OAAOysJ,EACnBzhH,EACA9vD,KAAKovK,sBAAsBmC,EAAiB5iC,GA9lCrC,QAAAl+H,IAAA,YAAArF,MAAA,SAqmCL0kD,EAAS6+E,EAAS1wH,GACxB,GAAIje,KAAK65F,QAAUyzE,EAAAl9J,EAAnB,CAIA,IAAK6N,GAAW67D,QAAQ77D,EAAQ4pG,sBAAuB,CACnD,GAAI2pD,GACEzwK,OAAAkuK,EAAAr7J,MACEiV,GAAI7oB,KAAKumH,UACTvoG,KAAM,QAELtd,EAAE,UACCqc,MAAO,oBACPsuF,OAAQ,oBACR6jE,UAAWlvK,KAAKkvK,UAChBlsJ,IAAKhjB,KAAKgjB,MAEbtiB,EAAE,UACFA,EAAGud,GAAWA,EAAQ6H,QAAW,UAEtC7H,IAAWA,EAAQuoG,mBACnBgrD,EAAiBv0J,KACZvc,EAAE,QACFmB,EAAEoc,EAAQuoG,mBAInBgrD,EAAmBA,EAAiB/0J,OACpC7Z,EAAOsB,KAAK,4BAA6BstK,GACzCxxK,KAAK+pB,WAAWjF,OACZ0sJ,EACA1hH,EACA9vD,KAAKovK,sBAAsBoC,EAAkB7iC,GAroC1C,SAwoCP/rI,GAAOsB,KAAP,yCAAqDlE,KAIzDA,MAAK+pB,WAAWs8E,OAAOuhB,UAAU5nH,KAAKgjB,2CAQ7B+kG,EAAiBC,GAC1BhoH,KAAK65F,MAAQyzE,EAAAl9J,EACbpQ,KAAKwrH,6BAKL5oH,EAAOsB,KAAP,sBAAkClE,KAAQ+nH,EAAiBC,GAE3DhoH,KAAKsxB,4DAamBmgJ,EAAeC,GACvC,GAAMC,KAiEN,OA/DA56F,GAAE06F,GAAejlH,KAAK,SAAColH,EAAI3kJ,GACvB,GAAMrsB,GAAOm2E,EAAE9pD,GAAStT,KAAK,QACzBs0B,EAAQ,EAEZ8oC,GAAE9pD,GACGyiB,KAAK,uDACL8c,KAAK,WAEF,GAAM5c,GAAY5vC,KAAKgb,aAAa,aAC9Bk0B,EACA6nC,EAAE/2E,MACC0vC,KAAK,WACL3lC,IAAI,WAED,MAAO/J,MAAKgb,aAAa,UAE5B7Z,KAEL+tC,GAAMlsC,SACNirC,mBACuB2B,EADvB,IAEQV,EAAMzkC,KAAK,KAFnB,UAQNssE,EAAE9pD,GAASyiB,KACT,mDAGJ8c,KAAK,WACL,GAAMhyB,GAAOu8C,EAAE/2E,MAAM2Z,KAAK,OAEtB+3J,GAAiBhkE,aAAalzE,GAC9B53B,EAAOwF,KAAP,yCAC6CoyB,GAMjDu8C,EAAE/2E,MAAM0vC,KAAK,cAAc8c,KAAK,WAC5Bve,aAAmBzT,EAAnB,IAA2Bu8C,EAAE/2E,MAAM2Z,KAAK,QACpCo9D,EAAE/2E,MAAM2Z,KAAK,UAAYo9D,EAAE/2E,MAAM2Z,KAAK,SAAS3W,SAC/CirC,OAAa8oC,EAAE/2E,MAAM2Z,KAAK,UAE9Bs0B,GAAS,WAKjByjI,EAAiBtlI,MAAM/9B,QAAQ,SAAC+9B,EAAOylI,GAC9BpD,EAAAnmK,EAAQsjC,SAASQ,EAAjB,SAAiCxrC,KAGjC+wK,EAAYE,KACbF,EAAYE,GAAM,IAEtBF,EAAYE,IAAO5jI,OAIpB0jI,0CAOKx5J,GACZnY,KAAK8xK,4BAAyC35J,8CAO/BA,GACfnY,KAAK8xK,4BAA6C35J,oDAW7B45J,EAAO55J,GAAM,GAAA65J,GAAAhyK,KAC5BiyK,EAAYF,EAAQ,kBAAoB,oBAE1CA,IACA/xK,KAAKkyK,aAAa/5J,GA+CtBnY,KAAK8sK,kBAAkBjqK,KA5CF,SAAAysK,GACjB,IAAK0C,EAAK58I,eAAe2jE,mBACjBi5E,EAAK58I,eAAe2jE,iBAAiBtoD,IAAK,CAC9C,GAAM22D,GAAY6qE,EAAZ,mCAKN,OAHArvK,GAAO0Z,MAAM8qF,OACbkoE,GAAiBloE,GAKrBxkG,EAAOkB,IAAP,cAAyBmuK,GACzBrvK,EAAOkB,IACH,yBACAkuK,EAAK58I,eAAek2D,mBAExB,IAAMglF,GACA,GAAI/B,GAAAjmK,EAAI0pK,EAAK58I,eAAe2jE,iBAAiBtoD,KAC7CA,EAAM,GAAI89H,GAAAjmK,EAAI0pK,EAAK58I,eAAe4jE,kBAAkBvoD,KACpD0hI,EACAJ,EACIC,EAAKI,4BAA4Bj6J,EAAMs4B,GACvCuhI,EAAKK,+BAA+Bl6J,EAAMs4B,GAC9C2/H,EACA2B,EACIC,EAAKM,wBAAwBH,GAC7BH,EAAKO,2BAA2BJ,EAE1CH,GAAKzB,aAAaH,EAAa1pJ,KAC1BqpC,KAAK,WACF,GAAM0gH,GACA,GAAIlC,GAAAjmK,EAAI0pK,EAAK58I,eAAe2jE,iBAAiBtoD,IAEnD7tC,GAAOkB,IACAmuK,EADP,gBACiC3B,EAAaG,GAC9CuB,EAAKtB,mBAAmBJ,EAAaG,GACrCnB,KACD,SAAAhzJ,GACC1Z,EAAO0Z,MAAS21J,EAAhB,WAAqC31J,GACrCgzJ,EAAiBhzJ,kDAsBdw3I,EAAMwb,GACrBxb,EAAKwb,oDAQgBhoD,GACrB,GAAMkrD,GAAY,GAAIjE,GAAAjmK,EAAI,GAe1B,OAbItI,MAAK6sK,sBACL2F,EAAUtlE,wBAEVltG,KAAK4sK,sBACL4F,EAAUrlE,wBAEVntG,KAAKitG,UACLulE,EAAUvlE,YAGdulE,EAAU3iE,WAAWyX,GACrBtnH,KAAKkyK,aAAan7F,EAAEuwC,GAAS53E,KAAK,aAE3B8iI,qDAUgBC,GACvB,GAAMD,GAAY,GAAIjE,GAAAjmK,EAAItI,KAAKo1B,eAAe4jE,kBAAkBvoD,IAahE,OAXAgiI,GAAepkK,QAAQ,SAAC4/B,EAAOisD,IAE3BjsD,EAAQA,EAAMznC,MAAM,SACdqgB,MACNonB,EAAM5/B,QAAQ,SAAA2N,GACVw2J,EAAUpmI,MAAM8tD,GACVs4E,EAAUpmI,MAAM8tD,GAAK9vF,QAAW4R,EAAhC,OAA4C,QAG1Dw2J,EAAU9rJ,IAAM8rJ,EAAUllJ,QAAUklJ,EAAUpmI,MAAM3hC,KAAK,IAElD+nK,kDAUab,GACpB,GAAMa,GAAY,GAAIjE,GAAAjmK,EAAItI,KAAKo1B,eAAe4jE,kBAAkBvoD,IAOhE,OALAkhI,GAAYtjK,QAAQ,SAAC4/B,EAAOisD,GACxBs4E,EAAUpmI,MAAM8tD,IAAQjsD,IAE5BukI,EAAU9rJ,IAAM8rJ,EAAUllJ,QAAUklJ,EAAUpmI,MAAM3hC,KAAK,IAElD+nK,uCAYEE,GAAmB,GAAAC,GAAA3yK,KACtBwyK,EACAE,GAAqB1yK,KAAKo1B,eAAe4jE,kBAAkBvoD,GAEjE,KAAK+hI,EACD,MAAOx6H,SAAQ0K,OACX,mEAC0B1iD,KAAK65F,MAGvC,IAAMb,GAAoB,GAAIvN,wBAC1BztE,KAAMhe,KAAK+qH,YAAc,SAAW,QACpCt6E,IAAK+hI,GAGT,OAAO,IAAIx6H,SAAQ,SAAC4E,EAAS8F,GACkB,WAAvCiwH,EAAKv9I,eAAe6jE,eAKpB05E,EAAK5nD,YACL4nD,EAAKC,sBAAsB55E,EAAmBp8C,EAAS8F,GAEvDiwH,EAAKE,sBAAsB75E,EAAmBp8C,EAAS8F,GAPvDA,EAAO,iDAAAjyC,IAAA,wBAAArF,MAAA,SAoBG4tF,EAAmBp8C,EAAS8F,GAAQ,GAAAowH,GAAA9yK,IAEtD4C,GAAOyZ,MAAM,2CACbrc,KAAKo1B,eAAeonE,qBAChBxD,EACA,WACIp2F,EAAOyZ,MAAM,gCACby2J,EAAK19I,eAAesoE,aAChB,SAAAioB,GACI/iH,EAAOyZ,MAAM,0CACby2J,EAAK19I,eAAe0mE,oBAChB6pB,EACA,WACI/oE,KAEJ,SAAAtgC,GACIomC,iCACmCpmC,MAI/C,SAAAA,GAAA,MAASomC,2BAA+BpmC,IACxCw2J,EAAKrI,mBAGb,SAAAnuJ,GAAA,MAASomC,mCAAuCpmC,mDAYlC08E,EAAmBp8C,EAAS8F,GAAQ,GAAAqwH,GAAA/yK,IAEX,sBAAvCA,KAAKo1B,eAAe6jE,gBAGpBr2F,EAAOyZ,MACH,2CACJrc,KAAKo1B,eAAeonE,qBAChBxD,EACA,WASI+5E,EAAKH,sBACD55E,EAAmBp8C,EAAS8F,IAEpC,SAAApmC,GAAA,MAASomC,mCAAuCpmC,OAGpD1Z,EAAOyZ,MAAM,+BACbrc,KAAKo1B,eAAe+nE,YAChB,SAAA61E,GACIpwK,EAAOyZ,MAAM,0CACb02J,EAAK39I,eAAe0mE,oBAAoBk3E,EACpC,WACIpwK,EAAOyZ,MACH,2CACJ02J,EAAK39I,eAAeonE,qBAChBxD,EACA,WACIp8C,KAEJ,SAAAtgC,GAAA,MAASomC,mCAC2BpmC,MAG5C,SAAAA,GACIomC,EAAO,+BAAgCpmC,MAGnD,SAAAA,GAAA,MAASomC,0BAA8BpmC,IACvCtc,KAAKyqK,wDAgBJpoD,EAAUC,GAAU,GAAA2wD,GAAAjzK,IA6D7BA,MAAK8sK,kBAAkBjqK,KA5DF,SAAAysK,GAIjB,GAA2C,WAAvC2D,EAAK79I,eAAe6jE,gBACuB,WAAxCg6E,EAAK79I,eAAeisG,iBACpB4xC,EAAKprF,OAERynF,QAJJ,CASA,GAAMgB,GAAc2C,EAAK79I,eAAe2jE,iBAAiBtoD,KAKpD4xE,GAAYC,GAAYA,EAASzQ,eAMlCohE,EAAK79I,eAAe89I,oBAGb7wD,GAAYA,EAASxQ,iBAAmByQ,IAK/C2wD,EAAK79I,eAAe89I,oBACpBD,EAAK79I,eAAey6I,wBAEpBxtD,GACA4wD,EAAK79I,eAAe6/E,YAAYoN,GAEhCC,GACA2wD,EAAK79I,eAAeyjD,SAASypC,IAG5BD,GAAYC,IACV2wD,EAAKp5E,QAAUyzE,EAAAhlK,EAClB2qK,EAAK1C,eACAxgH,KAAK,WACF,GAAMojH,GACA,GAAI5E,GAAAjmK,EACF2qK,EAAK79I,eAAe2jE,iBAAiBtoD,IAE7CwiI,GAAKvC,mBACD,GAAInC,GAAAjmK,EAAIgoK,GAAc6C,GAC1B7D,KAEJA,GAEJA,MAMJ,SAAAhzJ,GACQA,EACA1Z,EAAO0Z,MAAM,uBAAwBA,GAErC1Z,EAAOsB,KAAK,4BAAAuM,IAAA,iCAAArF,MAAA,SAeGgoK,EAAkB1B,GAC7C,GAAMe,KA2DN,OAzDA17F,GAAEq8F,GAAkB5mH,KAAK,SAAColH,EAAI3kJ,GAC1B,GAAMrsB,GAAOm2E,EAAE9pD,GAAStT,KAAK,QACzBs0B,EAAQ,EAEZ8oC,GAAE9pD,GACGyiB,KAAK,uDACL8c,KAAK,WAEF,GAAM5c,GAAY5vC,KAAKgb,aAAa,aAC9Bk0B,EACA6nC,EAAE/2E,MACC0vC,KAAK,WACL3lC,IAAI,WACD,MAAO/J,MAAKgb,aAAa,UAE5B7Z,KAEL+tC,GAAMlsC,SACNirC,mBACuB2B,EADvB,IAEQV,EAAMzkC,KAAK,KAFnB,SAOZ,IAAMykC,KAIA6nC,GAAE9pD,GAASyiB,KACT,mDAEJ8c,KAAK,WAEL,GAAMhyB,GAAOu8C,EAAE/2E,MAAM2Z,KAAK,OAE1Bu1B,GAAMrsC,KAAK23B,KAEfk3I,EAAiBtlI,MAAM/9B,QAAQ,SAAC+9B,EAAOylI,GAC9BpD,EAAAnmK,EAAQsjC,SAASQ,EAAjB,SAAiCxrC,KAGjC6xK,EAAeZ,KAChBY,EAAeZ,GAAM,IAEzB3iI,EAAM7gC,QAAQ,SAAAmsB,GACV,GAAM64I,GACA5E,EAAAnmK,EAAQomC,UAAUtC,EAAlB,UAAmC5R,EAErC64I,GAAUrwK,SACVyvK,EAAeZ,IAAUwB,EAAU5oK,KAAK,QAAxC,UAGRgoK,EAAeZ,IAAO5jI,OAIvBwkI,+CAeUa,EAAeC,GAChC,GAAMC,GACA,GAAIjF,GAAAjmK,EAAItI,KAAKo1B,eAAe2jE,iBAAiBtoD,KAC/CgjI,EAAU,GAAIC,GAAAprK,EAAUirK,EAAQC,GAC9BG,EAAaF,EAAQG,aAE3B,IAAI7yK,OAAOg3B,KAAK47I,GAAY3wK,OAKxB,MAJAJ,GAAO0Z,MACAtc,KADP,8BACyCszK,EACrCK,KAMR,IAAME,IADNJ,EAAU,GAAIC,GAAAprK,EAAUkrK,EAAiBD,IACZK,aAE7B,QAAI7yK,OAAOg3B,KAAK87I,GAAc7wK,SAC1BJ,EAAO0Z,MACAtc,KADP,iCAC4CszK,EACxCO,UAEGpjK,IAAA,mBAAArF,MAAA,SAcEq/D,GACb,MAAOzqE,MAAK8zK,+BACmBrpG,6CAWjBA,GACd,MAAOzqE,MAAK8zK,+BACmBrpG,uDAUPspG,EAAQtpG,GAAO,GAAAupG,GAAAh0K,IACvC,KAAKyqE,EACD,MAAOzyB,SAAQ0K,OAAO,iCAE1B,IAAM4wH,GAAgBS,EAAS,kBAAoB,iBAC7CE,EAAe,SAAA3E,GACjB,GAAM93I,GAAMw8I,EAAK5+I,cAEjB,IAAKoC,EAAL,CAOA,GAAM08I,GAAc18I,EAAIuhE,iBAAiBtoD,KAEnCsjI,EACIv8I,EAAI28I,gBAAgB9mK,KAAKmqB,EAAKizC,GAC9BjzC,EAAI48I,eAAe/mK,KAAKmqB,EAAKizC,MAI3BypG,GAAgB18I,EAAIwhE,kBAAkBvoD,IAG9CujI,EAAKzD,eACAxgH,KAAK,WAIFikH,EAAKK,qBACDf,EAAe,GAAI/E,GAAAjmK,EAAI4rK,IAC3B5E,KAEJA,GAXJA,IAFAA,EAAoBgE,EAApB,gBAbAhE,GACI,iBAAiBgE,EAAjB,wCA6BZ,OAAO,IAAIt7H,SAAQ,SAAC4E,EAAS8F,GACzBsxH,EAAKlH,kBAAkBjqK,KACnBoxK,EACA,SAAA33J,GACQA,EACAomC,EAAOpmC,GAEPsgC,uDAgBG03H,EAAaC,GAAa,GAAAC,GAAAx0K,IAC7C,KAAKA,KAAKo1B,eACN,MAAO4iB,SAAQ0K,OACX,sEAIR,IAAM+xH,GAAcH,EAAc,eAAiB,iBAC7CI,EAAcH,EAAc,eAAiB,gBAEnD3xK,GAAOsB,KAAP,eAA2BwwK,EAA3B,KAA2CD,EAA3C,WAEA,IAAMR,GAAe,SAAA3E,GACjB,GAAMqF,GAAkBH,EAAK36E,QAAUyzE,EAAAhlK,EAMjCssK,EACAJ,EAAKp/I,eAAey/I,uBAAuBP,EAE7CE,GAAKlI,oBAAsBiI,IAC3BC,EAAKlI,kBAAoBiI,EAUrBC,EAAKzqG,OAAS4qG,GACdH,EAAKhE,kBAAkB+D,GAI/B,IAAMO,GACAN,EAAKp/I,eAAe2/I,uBAClBP,EAAKlI,mBAAqBkI,EAAKjI,mBAInCoI,KACQC,GAAsBE,GAC9BN,EAAKjE,eACAxgH,KACGu/G,EACAA,GAERA,IAIR,OAAO,IAAIt3H,SAAQ,SAAC4E,EAAS8F,GACzB8xH,EAAK1H,kBAAkBjqK,KACnBoxK,EACA,SAAA33J,GACQA,EACAomC,EAAOpmC,GAEPsgC,+CAgBLuwH,GAAgB,GAAA6H,GAAAh1K,KACrBi1K,EACA/I,EAAgBgJ,kBAAkB/H,EAEhB,QAApB8H,GAoBJryK,EAAOyZ,MACArc,KAAH,gDACyBi1K,EADzB,MAGJj1K,KAAK8sK,kBAAkBjqK,KAhBF,SAAAysK,GACb0F,EAAK7G,gBAAgB,mBACd6G,EAAKG,yBAAyBF,GAGrCD,EAAKzE,eACAxgH,KAAKu/G,EAAkBA,GAE5BA,KAUJ,SAAAhzJ,GACQA,GACA1Z,EAAO0Z,MAAM,0BAA2BA,MA3BhD1Z,EAAO0Z,MACAtc,KAAH,6EAAAyQ,IAAA,2BAAArF,MAAA,SAyCagqK,GACrB,GAAMC,GACuB,SAAvBD,GAC6B,cAAvBA,GAAsCp1K,KAAK+qH,aACpB,cAAvBqqD,IAAuCp1K,KAAK+qH,WAQxD,OANIsqD,KAAwBr1K,KAAKusK,qBAC7B3pK,EAAOyZ,MACArc,KADP,6BACwCq1K,GACxCr1K,KAAKusK,mBAAqB8I,GAGvBr1K,KAAKo1B,eAAe2/I,uBACvB/0K,KAAKssK,mBAAqBtsK,KAAKusK,+DAQpBgH,EAAQ+B,GAEvB,GAAIt1K,KAAK65F,QAAUyzE,EAAAhlK,EAAnB,CAOA,GAAIitK,GAAY,GAAI7B,GAAAprK,EAAUgtK,EAAQ/B,GAChC71F,EAAS38E,OAAAkuK,EAAAr7J,MAAMiV,GAAI7oB,KAAKumH,UAC1BvoG,KAAM,QACLtd,EAAE,UACCqc,MAAO,oBACPsuF,OAAQ,gBACR6jE,UAAWlvK,KAAKkvK,UAChBlsJ,IAAKhjB,KAAKgjB,KAGMuyJ,GAAUtnE,SAASvwB,IAGvC96E,EAAOsB,KAAK,wBAAyBw5E,EAAOjhE,QAC5Czc,KAAK+pB,WAAWjF,OACZ44D,EAAQ,KACR19E,KAAKovK,sBAAsB1xF,GAr+DxB,MAu+DP96E,EAAOkB,IAAI,yBAIfyxK,EAAY,GAAI7B,GAAAprK,EAAUirK,EAAQ+B,EAClC,IAAM9gJ,GAAMzzB,OAAAkuK,EAAAr7J,MAAMiV,GAAI7oB,KAAKumH,UACvBvoG,KAAM,QACLtd,EAAE,UACCqc,MAAO,oBACPsuF,OAAQ,aACR6jE,UAAWlvK,KAAKkvK,UAChBlsJ,IAAKhjB,KAAKgjB,KAIOuyJ,GAAUtnE,SAASz5E,IAGxC5xB,EAAOsB,KAAK,qBAAsBswB,EAAI/X,QACtCzc,KAAK+pB,WAAWjF,OACZ0P,EAAK,KAAMx0B,KAAKovK,sBAAsB56I,GA3/DnC,MA6/DP5xB,EAAOkB,IAAI,8BA9CXlB,GAAOwF,KAAP,4BAAwCpI,KAAK65F,MAA7C,gBAAAppF,IAAA,wBAAArF,MAAA,SAoEcoqK,EAASj2E,GAAW,GAAAk2E,GAAAz1K,IACtC,OAAO,UAAA01K,GAEH,GAAMp5J,MAGAq5J,EAAa5+F,EAAE2+F,GAAahmI,KAAK,QAEvC,IAAIimI,EAAW3yK,OAAQ,CACnBsZ,EAAMkV,KAAOmkJ,EAAWh8J,KAAK,OAC7B,IAAMi8J,GAAiB7+F,EAAE2+F,GAAahmI,KAAK,eAEvCkmI,GAAe5yK,SACfsZ,EAAMwJ,OAAS8vJ,EAAe,GAAGl9J,QAGrC,IAAMm9J,GAAcF,EAAWjmI,KAAK,QAEhCmmI,GAAY7yK,SACZsZ,EAAMF,IAAMy5J,EAAY/7J,QAI3B47J,IACDp5J,EAAMwJ,OAAS,WAGnBxJ,EAAMgR,QAAUmoJ,EAAK5nK,WAEjB0xF,EACAA,EAAUjjF,GACHm5J,EAAK57E,QAAUyzE,EAAAl9J,GACM,mBAAjBkM,EAAMwJ,OAMjBljB,EAAOyZ,MAAP,iBAA8BkH,KAAKkK,UAAUnR,IAE7CsyJ,EAAAtmK,EAAqB+pB,iBACjB,GAAI3mB,OAAJ,iBACqB6X,KAAKkK,UAAUnR,sDAwBhD,MAAOtc,MAAKo1B,eAAek2D,mDAO3BtrF,KAAK6nF,UAGL7nF,KAAK0sK,eAAe4B,YAAY,MAGhCtuK,KAAKo1B,iBACIp1B,KAAKo1B,eAAe6jE,gBACyB,WAAvCj5F,KAAKo1B,eAAe6jE,gBACvBj5F,KAAKo1B,eAAeisG,iBACuB,WAAxCrhI,KAAKo1B,eAAeisG,kBAC5BrhI,KAAKo1B,eAAe9D,2CAQ3B,MAAO,uBAAuBtxB,KAAK+pE,MAA5B,cACoB/pE,KAAK+qH,YADzB,QAC4C/qH,KAAKgjB,IADjD,OAAAvS,IAAA,6BAAArF,MAAA,WAUP,GAAKpL,KAAKw8G,KAAKv+F,QAAQ63J,WACf91K,KAAKw8G,KAAKv+F,QAAQ63J,UAAUC,uBADpC,CAQA,GAAMz6J,GAAMtb,KAAKg2K,kBAEjB,OAAOj1K,QAAAk1K,EAAAC,aAAY56J,GAAO,GAAM,QAAA7K,IAAA,qBAAArF,MAAA,SA5DVkiB,EAAShR,GAC3Btc,KAAKw8G,OACLx8G,KAAKw8G,KAAK5oF,aAAa+C,KACnBu3I,EAAA5lK,EAAW+7B,wBAAyB/W,EAAShR,GACjDtc,KAAKw8G,KAAK5oF,aAAa+C,KACnBu3I,EAAA5lK,EAAW08B,mBAAoB1X,EAAShR,+FC3mExD,GAAA7T,IASA,WAiBA,QAAA0tK,GAAA78H,GACA,GAAA4V,KACA,mBACA,GAAAA,EAAA,SAAAxjD,OAAA,+BACAwjD,MACA5V,EAAAruC,MAAAzL,EAAAuL,YApBA,GAGAvL,GAAA42K,EAHA/7J,IAMA,QADA7a,EAAAQ,QAEAo2K,EAAA52K,EAAA6a,OAGAA,EAAA2iC,WAAA,WAEA,MADAx9C,GAAA6a,MAAA+7J,EACA/7J,EAcA,IAAAg8J,GAAAt1K,OAAAU,UAAAoM,SAEAyoK,EAAA9oK,MAAAG,SAAA,SAAA5E,GACA,yBAAAstK,EAAA71K,KAAAuI,IAGA62D,EAAA,SAAA9qB,EAAA3d,GACA,GAAA2d,EAAAzmC,QACA,MAAAymC,GAAAzmC,QAAA8oB,EAEA,QAAA92B,GAAA,EAAuBA,EAAAy0C,EAAA9xC,OAAgB3C,GAAA,EACvC82B,EAAA2d,EAAAz0C,KAAAy0C,IAIAyhI,EAAA,SAAAzhI,EAAA3d,GACA,GAAA2d,EAAA/qC,IACA,MAAA+qC,GAAA/qC,IAAAotB,EAEA,IAAA0mE,KAIA,OAHAj+B,GAAA9qB,EAAA,SAAAjlC,EAAAxP,EAAAiI,GACAu1F,EAAAh7F,KAAAs0B,EAAAtnB,EAAAxP,EAAAiI,MAEAu1F,GAaA24E,EAAA,SAAAztK,GACA,GAAAhI,OAAAg3B,KACA,MAAAh3B,QAAAg3B,KAAAhvB,EAEA,IAAAgvB,KACA,QAAAvpB,KAAAzF,GACAA,EAAArH,eAAA8M,IACAupB,EAAAl1B,KAAA2L,EAGA,OAAAupB,aAMA4f,KAAAspB,UAgBA5mD,EAAA4mD,SAAAtpB,EAAAspB,SAEA5mD,EAAAw9B,sBADAA,EACA,SAAAyB,GAEAzB,EAAAyB,IAIAj/B,EAAA4mD,UAvBA,kBAAAppB,IACAx9B,EAAA4mD,SAAA,SAAA3nB,GAEAzB,EAAAyB,IAEAj/B,EAAAw9B,aAAAx9B,EAAA4mD,WAGA5mD,EAAA4mD,SAAA,SAAA3nB,GACAtsC,WAAAssC,EAAA,IAEAj/B,EAAAw9B,aAAAx9B,EAAA4mD,UAgBA5mD,EAAAmyC,KAAA,SAAA1X,EAAA3d,EAAA1qB,GASA,QAAA4qB,GAAA7Q,GACAA,GACA/Z,EAAA+Z,GACA/Z,EAAA,eAGAwzD,GAAA,IACAnrB,EAAA9xC,QACAyJ,IAfA,GADAA,KAAA,cACAqoC,EAAA9xC,OACA,MAAAyJ,IAEA,IAAAwzD,GAAA,CACAL,GAAA9qB,EAAA,SAAAjlC,GACAsnB,EAAAtnB,EAAAsmK,EAAA9+I,OAeAhd,EAAAhM,QAAAgM,EAAAmyC,KAEAnyC,EAAAo8J,WAAA,SAAA3hI,EAAA3d,EAAA1qB,GAEA,GADAA,KAAA,cACAqoC,EAAA9xC,OACA,MAAAyJ,IAEA,IAAAwzD,GAAA,EACAy2G,EAAA,WACAv/I,EAAA2d,EAAAmrB,GAAA,SAAAz5C,GACAA,GACA/Z,EAAA+Z,GACA/Z,EAAA,eAGAwzD,GAAA,IACAnrB,EAAA9xC,OACAyJ,IAGAiqK,MAKAA,MAEAr8J,EAAAs8J,cAAAt8J,EAAAo8J,WAEAp8J,EAAAu8J,UAAA,SAAA9hI,EAAAge,EAAA37B,EAAA1qB,GACAoqK,EAAA/jH,GACA7nD,MAAA,MAAA6pC,EAAA3d,EAAA1qB,KAEA4N,EAAAy8J,aAAAz8J,EAAAu8J,SAEA,IAAAC,GAAA,SAAA/jH,GAEA,gBAAAhe,EAAA3d,EAAA1qB,GAEA,GADAA,KAAA,cACAqoC,EAAA9xC,QAAA8vD,GAAA,EACA,MAAArmD,IAEA,IAAAwzD,GAAA,EACAy/E,EAAA,EACAq3B,EAAA,GAEA,QAAAC,KACA,GAAA/2G,GAAAnrB,EAAA9xC,OACA,MAAAyJ,IAGA,MAAAsqK,EAAAjkH,GAAA4sF,EAAA5qG,EAAA9xC,QAEA+zK,GAAA,EACA5/I,EAAA2d,GAFA4qG,GAAA,GAEA,YAAAl5H,GACAA,GACA/Z,EAAA+Z,GACA/Z,EAAA,eAIAsqK,GAAA,GADA92G,GAAA,IAEAnrB,EAAA9xC,OACAyJ,IAGAuqK,YAUAC,EAAA,SAAA39H,GACA,kBACA,GAAAzuC,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UACA,OAAAuuC,GAAAruC,MAAA,MAAAoP,EAAAmyC,MAAAjiD,OAAAM,MASAqsK,EAAA,SAAA59H,GACA,kBACA,GAAAzuC,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UACA,OAAAuuC,GAAAruC,MAAA,MAAAoP,EAAAo8J,YAAAlsK,OAAAM,MAKAssK,EAAA,SAAAC,EAAAtiI,EAAA3d,EAAA1qB,GAIA,GAHAqoC,EAAAyhI,EAAAzhI,EAAA,SAAAjlC,EAAAxP,GACA,OAAoBwL,MAAAxL,EAAA+K,MAAAyE,KAEpBpD,EAMS,CACT,GAAAoxF,KACAu5E,GAAAtiI,EAAA,SAAAjlC,EAAApD,GACA0qB,EAAAtnB,EAAAzE,MAAA,SAAAob,EAAAmO,GACAkpE,EAAAhuF,EAAAhE,OAAA8oB,EACAloB,EAAA+Z,MAEa,SAAAA,GACb/Z,EAAA+Z,EAAAq3E,SAbAu5E,GAAAtiI,EAAA,SAAAjlC,EAAApD,GACA0qB,EAAAtnB,EAAAzE,MAAA,SAAAob,GACA/Z,EAAA+Z,OAeAnM,GAAAtQ,IAAAktK,EAAAE,GACA98J,EAAAoyC,UAAAyqH,EAAAC,GACA98J,EAAAg9J,SAAA,SAAAviI,EAAAge,EAAA37B,EAAA1qB,GACA,MAAA6qK,GAAAxkH,GAAAhe,EAAA3d,EAAA1qB,GAGA,IAAA6qK,GAAA,SAAAxkH,GACA,MA3CAA,GA2CAA,EA3CAxZ,EA2CA69H,EA1CA,WACA,GAAAtsK,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UACA,OAAAuuC,GAAAruC,MAAA,MAAA4rK,EAAA/jH,IAAAvoD,OAAAM,IAHA,IAAAioD,GAAAxZ,EAgDAj/B,GAAAiyC,OAAA,SAAAxX,EAAAyiI,EAAApgJ,EAAA1qB,GACA4N,EAAAo8J,WAAA3hI,EAAA,SAAAjlC,EAAApD,GACA0qB,EAAAogJ,EAAA1nK,EAAA,SAAA2W,EAAAmO,GACA4iJ,EAAA5iJ,EACAloB,EAAA+Z,MAES,SAAAA,GACT/Z,EAAA+Z,EAAA+wJ,MAIAl9J,EAAAm9J,OAAAn9J,EAAAiyC,OAEAjyC,EAAAo9J,MAAAp9J,EAAAiyC,OAEAjyC,EAAAq9J,YAAA,SAAA5iI,EAAAyiI,EAAApgJ,EAAA1qB,GACA,GAAAkrK,GAAApB,EAAAzhI,EAAA,SAAAjlC,GACA,MAAAA,KACS+nK,SACTv9J,GAAAiyC,OAAAqrH,EAAAJ,EAAApgJ,EAAA1qB,IAGA4N,EAAAw9J,MAAAx9J,EAAAq9J,WAEA,IAAA3kH,GAAA,SAAAqkH,EAAAtiI,EAAA3d,EAAA1qB,GACA,GAAAoxF,KAIAu5E,GAHAtiI,EAAAyhI,EAAAzhI,EAAA,SAAAjlC,EAAAxP,GACA,OAAoBwL,MAAAxL,EAAA+K,MAAAyE,KAEpB,SAAAA,EAAApD,GACA0qB,EAAAtnB,EAAAzE,MAAA,SAAAupB,GACAA,GACAkpE,EAAAh7F,KAAAgN,GAEApD,OAES,SAAA+Z,GACT/Z,EAAA8pK,EAAA14E,EAAAnkF,KAAA,SAAApR,EAAA8H,GACA,MAAA9H,GAAAuD,MAAAuE,EAAAvE,QACa,SAAAgE,GACb,MAAAA,GAAAzE,WAIAiP,GAAA+0B,OAAA6nI,EAAAlkH,GACA14C,EAAAy9J,aAAAZ,EAAAnkH,GAEA14C,EAAA09J,OAAA19J,EAAA+0B,OACA/0B,EAAA29J,aAAA39J,EAAAy9J,YAEA,IAAAt8H,GAAA,SAAA47H,EAAAtiI,EAAA3d,EAAA1qB,GACA,GAAAoxF,KAIAu5E,GAHAtiI,EAAAyhI,EAAAzhI,EAAA,SAAAjlC,EAAAxP,GACA,OAAoBwL,MAAAxL,EAAA+K,MAAAyE,KAEpB,SAAAA,EAAApD,GACA0qB,EAAAtnB,EAAAzE,MAAA,SAAAupB,GACAA,GACAkpE,EAAAh7F,KAAAgN,GAEApD,OAES,SAAA+Z,GACT/Z,EAAA8pK,EAAA14E,EAAAnkF,KAAA,SAAApR,EAAA8H,GACA,MAAA9H,GAAAuD,MAAAuE,EAAAvE,QACa,SAAAgE,GACb,MAAAA,GAAAzE,WAIAiP,GAAAqoC,OAAAu0H,EAAAz7H,GACAnhC,EAAA49J,aAAAf,EAAA17H,EAEA,IAAA08H,GAAA,SAAAd,EAAAtiI,EAAA3d,EAAAghJ,GACAf,EAAAtiI,EAAA,SAAAjlC,EAAApD,GACA0qB,EAAAtnB,EAAA,SAAA2M,GACAA,GACA27J,EAAAtoK,GACAsoK,EAAA,cAGA1rK,OAGS,SAAA+Z,GACT2xJ,MAGA99J,GAAAg8B,OAAA4gI,EAAAiB,GACA79J,EAAA+9J,aAAAlB,EAAAgB,GAEA79J,EAAAioD,KAAA,SAAAxtB,EAAA3d,EAAAghJ,GACA99J,EAAAmyC,KAAA1X,EAAA,SAAAjlC,EAAApD,GACA0qB,EAAAtnB,EAAA,SAAA8kB,GACAA,IACAwjJ,MACAA,EAAA,cAEA1rK,OAES,SAAA+Z,GACT2xJ,SAIA99J,EAAA49B,IAAA59B,EAAAioD,KAEAjoD,EAAAu/E,MAAA,SAAA9kD,EAAA3d,EAAAghJ,GACA99J,EAAAmyC,KAAA1X,EAAA,SAAAjlC,EAAApD,GACA0qB,EAAAtnB,EAAA,SAAA8kB,GACAA,IACAwjJ,MACAA,EAAA,cAEA1rK,OAES,SAAA+Z,GACT2xJ,SAIA99J,EAAAkyC,IAAAlyC,EAAAu/E,MAEAv/E,EAAAg+J,OAAA,SAAAvjI,EAAA3d,EAAA1qB,GACA4N,EAAAtQ,IAAA+qC,EAAA,SAAAjlC,EAAApD,GACA0qB,EAAAtnB,EAAA,SAAA2W,EAAA8xJ,GACA9xJ,EACA/Z,EAAA+Z,GAGA/Z,EAAA,MAAoCrB,MAAAyE,EAAAyoK,gBAG3B,SAAA9xJ,EAAAq3E,GACT,GAAAr3E,EACA,MAAA/Z,GAAA+Z,EAGA,IAAA8yB,GAAA,SAAAiwC,EAAAC,GACA,GAAAlhF,GAAAihF,EAAA+uF,SAAAloK,EAAAo5E,EAAA8uF,QACA,OAAAhwK,GAAA8H,GAAA,EAAA9H,EAAA8H,EAAA,IAEA3D,GAAA,KAAA8pK,EAAA14E,EAAAnkF,KAAA4/B,GAAA,SAAAzpC,GACA,MAAAA,GAAAzE,YAMAiP,EAAAk+J,KAAA,SAAAC,EAAA/rK,GACAA,KAAA,YACA,IAAAsrB,GAAAy+I,EAAAgC,GACAC,EAAA1gJ,EAAA/0B,MACA,KAAAy1K,EACA,MAAAhsK,IAGA,IAAAoxF,MAEA5qD,KACA9K,EAAA,SAAAmR,GACArG,EAAA3B,QAAAgI,IAUAo/H,EAAA,WACAD,IACA74G,EAAA3sB,EAAA3oC,MAAA,YAAAgvC,GACAA,MAIAnR,GAAA,WACA,IAAAswI,EAAA,CACA,GAAAE,GAAAlsK,CAEAA,GAAA,aAEAksK,EAAA,KAAA96E,MAIAj+B,EAAA7nC,EAAA,SAAAvpB,GACA,GAAAslJ,GAAAwiB,EAAAkC,EAAAhqK,IAAAgqK,EAAAhqK,IAAAgqK,EAAAhqK,IACAoqK,EAAA,SAAApyJ,GACA,GAAA3b,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EAIA,IAHAF,EAAA7H,QAAA,IACA6H,IAAA,IAEA2b,EAAA,CACA,GAAAqyJ,KACAj5G,GAAA42G,EAAA34E,GAAA,SAAAi7E,GACAD,EAAAC,GAAAj7E,EAAAi7E,KAEAD,EAAArqK,GAAA3D,EACA4B,EAAA+Z,EAAAqyJ,GAEApsK,EAAA,iBAGAoxF,GAAArvF,GAAA3D,EACAwP,EAAAw9B,aAAA6gI,IAGAK,EAAAjlB,EAAAxpJ,MAAA,EAAA4D,KAAAyhB,IAAAmkI,EAAA9wJ,OAAA,QACA88I,EAAA,WACA,MAlaA3oH,GAkaA,SAAA7uB,EAAAuH,GACA,MAAAvH,IAAAu1F,EAAAn8F,eAAAmO,IAnaA0nK,OAAAziI,EAkaAikI,GAjaAzsH,OACAxX,EAAAwX,OAAAn1B,EAAAogJ,IAEA33G,EAAA9qB,EAAA,SAAAjlC,EAAAxP,EAAAiI,GACAivK,EAAApgJ,EAAAogJ,EAAA1nK,EAAAxP,EAAAiI,KAEAivK,MA6ZiB15E,EAAAn8F,eAAA8M,EApajB,IAAAsmC,GAAA3d,EAAAogJ,EAsaA,IAAAz3B,IACAgU,IAAA9wJ,OAAA,GAAA41K,EAAA/6E,OAEA,CACA,GAAA/nE,GAAA,WACAgqH,MA1DA,SAAAxmG,GACA,OAAAj5C,GAAA,EAA2BA,EAAA4yC,EAAAjwC,OAAsB3C,GAAA,EACjD,GAAA4yC,EAAA5yC,KAAAi5C,EAEA,WADArG,GAAAzoC,OAAAnK,EAAA,IAwDAy1B,GACAg+H,IAAA9wJ,OAAA,GAAA41K,EAAA/6E,IAGA11D,GAAArS,OAKAzb,EAAA2+J,MAAA,SAAAC,EAAAnlB,EAAArnJ,GACA,GACAysK,KAEA,mBAAAD,KACAxsK,EAAAqnJ,EACAA,EAAAmlB,EACAA,EANA,GASAA,EAAAp1K,SAAAo1K,EAAA,KATA,CAUA,IAAAE,GAAA,SAAAC,EAAAC,GAQA,KAAAJ,GACAC,EAAAr2K,KARA,SAAAixJ,EAAAwlB,GACA,gBAAAC,GACAzlB,EAAA,SAAAttI,EAAAhK,GACA+8J,GAAA/yJ,GAAA8yJ,GAA8D9yJ,MAAAhK,YACzC68J,KAIrBvlB,IAAAmlB,GAAA,IAEA5+J,GAAAm/J,OAAAN,EAAA,SAAA7hJ,EAAA3mB,GACAA,MAAA1N,OAAA,IACAo2K,GAAA3sK,GAAAiE,EAAA8V,IAAA9V,EAAA8L,UAIA,OAAA/P,GAAA0sK,OAGA9+J,EAAAo/J,UAAA,SAAAjB,EAAA/rK,GAEA,GADAA,KAAA,cACA6pK,EAAAkC,GAAA,CACA,GAAAhyJ,GAAA,GAAA9a,OAAA,4DACA,OAAAe,GAAA+Z,GAEA,IAAAgyJ,EAAAx1K,OACA,MAAAyJ,IAEA,IAAAitK,GAAA,SAAAviJ,GACA,gBAAA3Q,GACA,GAAAA,EACA/Z,EAAAxB,MAAA,KAAAF,WACA0B,EAAA,iBAEA,CACA,GAAA5B,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,GACAqsB,EAAAD,EAAAC,MACAA,GACAvsB,EAAAhI,KAAA62K,EAAAtiJ,IAGAvsB,EAAAhI,KAAA4J,GAEA4N,EAAAw9B,aAAA,WACA1gB,EAAAlsB,MAAA,KAAAJ,OAKA6uK,GAAAr/J,EAAA8c,SAAAqhJ,MAGA,IAAAmB,GAAA,SAAAvC,EAAAoB,EAAA/rK,GAEA,GADAA,KAAA,aACA6pK,EAAAkC,GACApB,EAAArtK,IAAAyuK,EAAA,SAAAl/H,EAAA7sC,GACA6sC,GACAA,EAAA,SAAA9yB,GACA,GAAA3b,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACAF,GAAA7H,QAAA,IACA6H,IAAA,IAEA4B,EAAAjM,KAAA,KAAAgmB,EAAA3b,MAGa4B,OAEb,CACA,GAAAoxF,KACAu5E,GAAA5qH,KAAAgqH,EAAAgC,GAAA,SAAAhqK,EAAA/B,GACA+rK,EAAAhqK,GAAA,SAAAgY,GACA,GAAA3b,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACAF,GAAA7H,QAAA,IACA6H,IAAA,IAEAgzF,EAAArvF,GAAA3D,EACA4B,EAAA+Z,MAEa,SAAAA,GACb/Z,EAAA+Z,EAAAq3E,MAKAxjF,GAAAu/J,SAAA,SAAApB,EAAA/rK,GACAktK,GAAmB5vK,IAAAsQ,EAAAtQ,IAAAyiD,KAAAnyC,EAAAmyC,MAAmCgsH,EAAA/rK,IAGtD4N,EAAAw/J,cAAA,SAAArB,EAAA1lH,EAAArmD,GACAktK,GAAmB5vK,IAAAutK,EAAAxkH,GAAAtG,KAAAqqH,EAAA/jH,IAAiD0lH,EAAA/rK,IAGpE4N,EAAAm/J,OAAA,SAAAhB,EAAA/rK,GAEA,GADAA,KAAA,aACA6pK,EAAAkC,GACAn+J,EAAAoyC,UAAA+rH,EAAA,SAAAl/H,EAAA7sC,GACA6sC,GACAA,EAAA,SAAA9yB,GACA,GAAA3b,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACAF,GAAA7H,QAAA,IACA6H,IAAA,IAEA4B,EAAAjM,KAAA,KAAAgmB,EAAA3b,MAGa4B,OAEb,CACA,GAAAoxF,KACAxjF,GAAAo8J,WAAAD,EAAAgC,GAAA,SAAAhqK,EAAA/B,GACA+rK,EAAAhqK,GAAA,SAAAgY,GACA,GAAA3b,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACAF,GAAA7H,QAAA,IACA6H,IAAA,IAEAgzF,EAAArvF,GAAA3D,EACA4B,EAAA+Z,MAEa,SAAAA,GACb/Z,EAAA+Z,EAAAq3E,OAKAxjF,EAAA8c,SAAA,SAAAqhJ,GACA,GAAAsB,GAAA,SAAAjuK,GACA,GAAAytC,GAAA,WAIA,MAHAk/H,GAAAx1K,QACAw1K,EAAA3sK,GAAAZ,MAAA,KAAAF,WAEAuuC,EAAAliB,OAKA,OAHAkiB,GAAAliB,KAAA,WACA,MAAAvrB,GAAA2sK,EAAAx1K,OAAA,EAAA82K,EAAAjuK,EAAA,SAEAytC,EAEA,OAAAwgI,GAAA,IAGAz/J,EAAApP,MAAA,SAAAquC,GACA,GAAAzuC,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACA,mBACA,MAAAuuC,GAAAruC,MACA,KAAAJ,EAAAN,OAAAiD,MAAA/L,UAAA6I,MAAA9J,KAAAuK,cAKA,IAAA0C,GAAA,SAAA2pK,EAAAtiI,EAAAwE,EAAA7sC,GACA,GAAAlE,KACA6uK,GAAAtiI,EAAA,SAAAjlC,EAAAgxC,GACAvH,EAAAzpC,EAAA,SAAA2W,EAAAxV,GACAzI,IAAAgC,OAAAyG,OACA6vC,EAAAr6B,MAES,SAAAA,GACT/Z,EAAA+Z,EAAAje,KAGA8R,GAAA9P,OAAA0sK,EAAAxpK,GACA4M,EAAA0/J,aAAA7C,EAAAzpK,GAEA4M,EAAA2/J,OAAA,SAAAz1K,EAAA4yB,EAAA1qB,GACAlI,IACA4yB,EAAA,SAAA3Q,GACA,GAAAA,EACA,MAAA/Z,GAAA+Z,EAEAnM,GAAA2/J,OAAAz1K,EAAA4yB,EAAA1qB,KAIAA,KAIA4N,EAAA4/J,SAAA,SAAA9iJ,EAAA5yB,EAAAkI,GACA0qB,EAAA,SAAA3Q,GACA,GAAAA,EACA,MAAA/Z,GAAA+Z,EAEA,IAAA3b,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACAxG,GAAA0G,MAAA,KAAAJ,GACAwP,EAAA4/J,SAAA9iJ,EAAA5yB,EAAAkI,GAGAA,OAKA4N,EAAA6/J,MAAA,SAAA31K,EAAA4yB,EAAA1qB,GACAlI,IASAkI,IARA0qB,EAAA,SAAA3Q,GACA,GAAAA,EACA,MAAA/Z,GAAA+Z,EAEAnM,GAAA6/J,MAAA31K,EAAA4yB,EAAA1qB,MAQA4N,EAAA8/J,QAAA,SAAAhjJ,EAAA5yB,EAAAkI,GACA0qB,EAAA,SAAA3Q,GACA,GAAAA,EACA,MAAA/Z,GAAA+Z,EAEA,IAAA3b,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACAxG,GAAA0G,MAAA,KAAAJ,GAIA4B,IAHA4N,EAAA8/J,QAAAhjJ,EAAA5yB,EAAAkI,MAQA4N,EAAA0gC,MAAA,SAAAq/H,EAAA9mH,GAIA,QAAA+mH,GAAApoK,EAAAvB,EAAAu4B,EAAAx8B,GAOA,GANAwF,EAAAytI,UACAztI,EAAAytI,YAEA42B,EAAA5lK,KACAA,OAEA,GAAAA,EAAA1N,OAEA,MAAAqX,GAAAw9B,aAAA,WACA5lC,EAAAqoK,OACAroK,EAAAqoK,SAIA16G,GAAAlvD,EAAA,SAAAojJ,GACA,GAAApiH,IACAhhC,KAAAojJ,EACArnJ,SAAA,kBAAAA,KAAA,KAGAw8B,GACAh3B,EAAAumK,MAAAlnI,QAAAI,GAEAz/B,EAAAumK,MAAA31K,KAAA6uC,GAGAz/B,EAAAsoK,WAAAtoK,EAAAumK,MAAAx1K,SAAAiP,EAAAqhD,aACArhD,EAAAsoK,YAEAlgK,EAAAw9B,aAAA5lC,EAAA0lC,eAlCA2b,KACAA,IACAA,EAAA,EAoCA,IAAAknH,GAAA,EACAvoK,GACAumK,SACAllH,cACAinH,UAAA,KACAE,MAAA,KACAH,MAAA,KACA56B,WACA7+H,UACAhe,KAAA,SAAA6N,EAAAjE,GACA4tK,EAAApoK,EAAAvB,KAAAjE,IAEAiuK,KAAA,WACAzoK,EAAAqoK,MAAA,KACAroK,EAAAumK,UAEAlnI,QAAA,SAAA5gC,EAAAjE,GACA4tK,EAAApoK,EAAAvB,KAAAjE,IAEAkrC,QAAA,WACA,IAAA1lC,EAAA4O,QAAA25J,EAAAvoK,EAAAqhD,aAAArhD,EAAAumK,MAAAx1K,OAAA,CACA,GAAA8wJ,GAAA7hJ,EAAAumK,MAAAnsI,OACAp6B,GAAAwoK,OAAA,IAAAxoK,EAAAumK,MAAAx1K,QACAiP,EAAAwoK,QAEAD,GAAA,CACA,IAUA35H,GAAAs1H,EAVA,WACAqE,GAAA,EACA1mB,EAAArnJ,UACAqnJ,EAAArnJ,SAAAxB,MAAA6oJ,EAAA/oJ,WAEAkH,EAAAqoK,OAAAroK,EAAAumK,MAAAx1K,OAAAw3K,IAAA,GACAvoK,EAAAqoK,QAEAroK,EAAA0lC,WAGAyiI,GAAAtmB,EAAApjJ,KAAAmwC,KAGA79C,OAAA,WACA,MAAAiP,GAAAumK,MAAAx1K,QAEA+zK,QAAA,WACA,MAAAyD,IAEAG,KAAA,WACA,MAAA1oK,GAAAumK,MAAAx1K,OAAAw3K,IAAA,GAEA54J,MAAA,gBACA3P,EAAA4O,SACA5O,EAAA4O,UACA5O,EAAA0lC,YAEA91B,OAAA,gBACA5P,EAAA4O,SACA5O,EAAA4O,UACA5O,EAAA0lC,YAGA,OAAA1lC,IAGAoI,EAAAugK,cAAA,SAAAR,EAAA9mH,GAEA,QAAAunH,GAAAvyK,EAAA8H,GACA,MAAA9H,GAAAwf,SAAA1X,EAAA0X,SAiDA,GAAA7V,GAAAoI,EAAA0gC,MAAAq/H,EAAA9mH,EAUA,OAPArhD,GAAApP,KAAA,SAAA6N,EAAAoX,EAAArb,IAnCA,SAAAwF,EAAAvB,EAAAoX,EAAArb,GAOA,GANAwF,EAAAytI,UACAztI,EAAAytI,YAEA42B,EAAA5lK,KACAA,OAEA,GAAAA,EAAA1N,OAEA,MAAAqX,GAAAw9B,aAAA,WACA5lC,EAAAqoK,OACAroK,EAAAqoK,SAIA16G,GAAAlvD,EAAA,SAAAojJ,GACA,GAAApiH,IACAhhC,KAAAojJ,EACAhsI,WACArb,SAAA,kBAAAA,KAAA,KAGAwF,GAAAumK,MAAAhuK,OApCA,SAAAswK,EAAAppI,EAAAqpI,GAGA,IAFA,GAAAC,IAAA,EACA9/E,EAAA4/E,EAAA93K,OAAA,EACAg4K,EAAA9/E,GAAA,CACA,GAAA9G,GAAA4mF,GAAA9/E,EAAA8/E,EAAA,MACAD,GAAArpI,EAAAopI,EAAA1mF,KAAA,EACA4mF,EAAA5mF,EAEA8G,EAAA9G,EAAA,EAGA,MAAA4mF,IAyBA/oK,EAAAumK,MAAA9mI,EAAAmpI,GAAA,IAAAnpI,GAEAz/B,EAAAsoK,WAAAtoK,EAAAumK,MAAAx1K,SAAAiP,EAAAqhD,aACArhD,EAAAsoK,YAEAlgK,EAAAw9B,aAAA5lC,EAAA0lC,YASA1lC,EAAAvB,EAAAoX,EAAArb,UAIAwF,GAAAq/B,QAEAr/B,GAGAoI,EAAA4gK,MAAA,SAAAb,EAAAlpI,GACA,GAAAgqI,MACA1C,KAEAyC,GACAzC,QACAtnI,UACAqpI,UAAA,KACAE,MAAA,KACAH,MAAA,KACAa,WACAt4K,KAAA,SAAA6N,EAAAjE,GACA6pK,EAAA5lK,KACAA,OAEAkvD,EAAAlvD,EAAA,SAAAojJ,GACA0kB,EAAA31K,MACA6N,KAAAojJ,EACArnJ,SAAA,kBAAAA,KAAA,OAEAwuK,EAAAE,WACAF,EAAAV,WAAA/B,EAAAx1K,SAAAkuC,GACA+pI,EAAAV,cAGAlgK,EAAAw9B,aAAAojI,EAAAtjI,UAEAA,QAAA,QAAAA,KACA,IAAAujI,EAAA,CACA,OAAA1C,EAAAx1K,OAGA,MAFAi4K,GAAAX,QAAAW,EAAAE,SAAAF,EAAAX,aACAW,EAAAE,WAIA,IAAAC,GAAA,gBAAAlqI,GACAsnI,EAAAhuK,OAAA,EAAA0mC,GACAsnI,EAAAhuK,OAAA,EAAAguK,EAAAx1K,QAEAovE,EAAAmkG,EAAA6E,EAAA,SAAAtnB,GACA,MAAAA,GAAApjJ,MAGAuqK,GAAAR,OAAAQ,EAAAR,QACAS,KACAd,EAAAhoG,EAAA,WACA8oG,IAEA,IAAArwK,GAAAE,SACA60D,GAAAw7G,EAAA,SAAA1qK,GACAA,EAAAjE,UACAiE,EAAAjE,SAAAxB,MAAA,KAAAJ,KAIA8sC,QAGA30C,OAAA,WACA,MAAAw1K,GAAAx1K,QAEA+zK,QAAA,WACA,MAAAmE,IAGA,OAAAD,GAGA,IAAAI,GAAA,SAAAz6K,GACA,gBAAA04C,GACA,GAAAzuC,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACAuuC,GAAAruC,MAAA,KAAAJ,EAAAN,QAAA,SAAAic,GACA,GAAA3b,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACA,oBAAAjF,WACA0gB,EACA1gB,QAAAwW,OACAxW,QAAAwW,MAAAkK,GAGA1gB,QAAAlF,IACAg/D,EAAA/0D,EAAA,SAAAgF,GACA/J,QAAAlF,GAAAiP,WAOAwK,GAAAvW,IAAAu3K,EAAA,OACAhhK,EAAAglE,IAAAg8F,EAAA,OAKAhhK,EAAAihK,QAAA,SAAAhiI,EAAAiiI,GACA,GAAAhE,MACAiE,IACAD,MAAA,SAAA1rK,GACA,MAAAA,GAEA,IAAA4rK,GAAA,WACA,GAAA5wK,GAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,WACA0B,EAAA5B,EAAAgc,MACApW,EAAA8qK,EAAAtwK,MAAA,KAAAJ,EACA4F,KAAA8mK,GACAl9J,EAAA4mD,SAAA,WACAx0D,EAAAxB,MAAA,KAAAssK,EAAA9mK,MAGAA,IAAA+qK,GACAA,EAAA/qK,GAAA5N,KAAA4J,IAGA+uK,EAAA/qK,IAAAhE,GACA6sC,EAAAruC,MAAA,KAAAJ,EAAAN,QAAA,WACAgtK,EAAA9mK,GAAA1F,SACA,IAAAkH,GAAAupK,EAAA/qK,SACA+qK,GAAA/qK,EACA,QAAApQ,GAAA,EAAAC,EAAA2R,EAAAjP,OAAiD3C,EAAAC,EAAOD,IACxD4R,EAAA5R,GAAA4K,MAAA,KAAAF,gBAOA,OAFA0wK,GAAAlE,OACAkE,EAAAC,WAAApiI,EACAmiI,GAGAphK,EAAAshK,UAAA,SAAAriI,GACA,kBACA,OAAAA,EAAAoiI,YAAApiI,GAAAruC,MAAA,KAAAF,aAIAsP,EAAA4+J,MAAA,SAAAr2G,EAAAzrC,EAAA1qB,GAEA,OADAmvK,MACAv7K,EAAA,EAAuBA,EAAAuiE,EAAWviE,IAClCu7K,EAAA/4K,KAAAxC,EAEA,OAAAga,GAAAtQ,IAAA6xK,EAAAzkJ,EAAA1qB,IAGA4N,EAAAwhK,YAAA,SAAAj5G,EAAAzrC,EAAA1qB,GAEA,OADAmvK,MACAv7K,EAAA,EAAuBA,EAAAuiE,EAAWviE,IAClCu7K,EAAA/4K,KAAAxC,EAEA,OAAAga,GAAAoyC,UAAAmvH,EAAAzkJ,EAAA1qB,IAGA4N,EAAAyhK,IAAA,WACA,GAAAC,GAAAhxK,SACA,mBACA,GAAA2T,GAAA1e,KACA6K,EAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,WACA0B,EAAA5B,EAAAgc,KACAxM,GAAAiyC,OAAAyvH,EAAAlxK,EAAA,SAAAmxK,EAAA1iI,EAAAuH,GACAvH,EAAAruC,MAAAyT,EAAAs9J,EAAAzxK,QAAA,WACA,GAAAic,GAAAzb,UAAA,GACAkxK,EAAAzuK,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,EACA81C,GAAAr6B,EAAAy1J,QAGA,SAAAz1J,EAAAq3E,GACApxF,EAAAxB,MAAAyT,GAAA8H,GAAAjc,OAAAszF,QAKAxjF,EAAA6hK,QAAA,WACA,MAAA7hK,GAAAyhK,IAAA7wK,MAAA,KAAAuC,MAAA/L,UAAAm2K,QAAAp3K,KAAAuK,YAGA,IAAAoxK,GAAA,SAAA/E,EAAA2E,GACA,GAAAK,GAAA,WACA,GAAA19J,GAAA1e,KACA6K,EAAA2C,MAAA/L,UAAA6I,MAAA9J,KAAAuK,WACA0B,EAAA5B,EAAAgc,KACA,OAAAuwJ,GAAA2E,EAAA,SAAAziI,EAAAuH,GACAvH,EAAAruC,MAAAyT,EAAA7T,EAAAN,QAAAs2C,MAEAp0C,GAEA,IAAA1B,UAAA/H,OAAA,GAEA,MAAAo5K,GAAAnxK,MAAAjL,KADAwN,MAAA/L,UAAA6I,MAAA9J,KAAAuK,UAAA,IAIA,MAAAqxK,GAGA/hK,GAAAgiK,UAAApF,EAAAkF,GACA9hK,EAAAiiK,gBAAApF,EAAAiF,GAEA9hK,EAAAkiK,QAAA,SAAAjjI,EAAA7sC,IACA,QAAA2qB,GAAA5Q,GACA,GAAAA,EAAA,CACA,GAAA/Z,EACA,MAAAA,GAAA+Z,EAEA,MAAAA,GAEA8yB,EAAAliB,WAEAA,KAIAz3B,KAAAD,QACAC,EAAAD,QAAA2a,YAIA5R,EAAA,WACA,MAAA4R,IACSpP,MAAAvL,SAAAC,EAAAD,QAAA+I,QAllCTjI,KAAAqB,EAAAT,EAAA,IAAAA,EAAA,IAAAy2C,eAAA,SAAA53C,EAAA4B,GCcAlC,EAAOD,SAAYw2K,YAhBnB,SAAqBhlJ,GACjB,IAAKA,EACD,MAAO,EAGX,IAAUngB,GAAO,EAAG1Q,QAEpB,KAAKA,EAAI,EAAGA,EAAI6wB,EAAOluB,OAAQ3C,IAE3B0Q,GADOmgB,EAAO3hB,WAAWlP,GACV6N,KAAKwhB,IAAI,GAAIwB,EAAOluB,OAAS,EAAI3C,GAChD0Q,EAAO7C,KAAKyhB,IAAW,EAAP5e,EAGpB,OAAOA,iUChBLnO,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAOJu2K,aAejB,QAAAA,GACQx5J,EACAmpJ,EACA5lD,EACAx8F,EACA0gJ,EACA3gG,iGAAW9pE,KAAAw8K,GACfx8K,KAAKgjB,IAAMA,EACXhjB,KAAKmsK,SAAWA,EAChBnsK,KAAKumH,UAAYA,EACjBvmH,KAAK+pB,WAAaA,EAClB/pB,KAAKyqK,iBAAmBA,EACxBzqK,KAAK8pE,UAAYA,EAMjB9pE,KAAK6uK,WAKL7uK,KAAK8uK,iBAML9uK,KAAKw8G,KAAO,KAMZx8G,KAAK65F,MAAQ,KAMb75F,KAAK0gF,IAAM,WAAA5/E,GAAAb,IAAAwQ,IAAA,aAAArF,MAAA,SAYJ2/G,EAAavO,EAAM97B,GAC1B,GAAmB,OAAf1gF,KAAK65F,MAAgB,CACrB,GAAMvoB,qCACkCtxE,KAAKgjB,IADvC,iCAEYhjB,KAAK65F,KAGvB,MADAj3F,GAAO0Z,MAAMg1D,GACP,GAAI5lE,OAAM4lE,GAEpBtxE,KAAKw8G,KAAOA,EACZx8G,KAAK0gF,IAAMA,EACX1gF,KAAK65F,MAAQ4iF,EAAA/7K,EACbV,KAAKkvK,UAAYnkD,EAAc/qH,KAAKmsK,SAAWnsK,KAAKumH,UACpDvmH,KAAKgxK,UAAYjmD,EAAc/qH,KAAKumH,UAAYvmH,KAAKmsK,SACrDnsK,KAAK08K,gGAmBQ3sE,uCASb,MAAO/vG,MAAK65F,yCAULkW,0CAOGA,sCAeJjgD,EAAS6+E,EAAS1wH,wCAWhBooF,EAAQv2C,EAAS6+E,+CAMzB,MAAO3uI,MAAK+qH,YAAc/qH,KAAKmsK,SAAWnsK,KAAKumH,gGClKvD,SAASo2D,GAAYC,EAAQC,GAEzB,IAAKA,EACD,QAIJ,IAAID,EAAO55K,SAAW65K,EAAO75K,OACzB,QAGJ,KAAK,GAAI3C,GAAI,EAAGC,EAAIs8K,EAAO55K,OAAQ3C,EAAIC,EAAGD,IAEtC,GAAIu8K,EAAOv8K,YAAcmN,QAASqvK,EAAOx8K,YAAcmN,QAEnD,IAAKovK,EAAOv8K,GAAGy8K,OAAOD,EAAOx8K,IACzB,aAED,IAAIu8K,EAAOv8K,KAAOw8K,EAAOx8K,GAG5B,QAIR,UAQW,QAAS08K,GAAUC,EAAOC,GAGrC,GAFAj9K,KAAKg9K,MAAQA,EACbh9K,KAAKi9K,SAAWA,GACXD,EACD,KAAM,IAAItxK,OAAM,wBACb,KAAKuxK,EACR,KAAM,IAAIvxK,OAAM,4BD2H+B66G,iBCnHvDw2D,GAAUt7K,UAAUmyK,YAAc,WAE9B,GAAMsJ,GAAWl9K,KAAKg9K,MAAM5vE,kBACtB+vE,EAAen9K,KAAKi9K,SAAS7vE,kBAC7BgwE,IAgEN,OA9DAr8K,QAAOg3B,KAAKolJ,GAAc9uK,QAAQ,SAAAgvK,GAC9B,GAAMC,GAAUJ,EAASG,GACnBE,EAAcJ,EAAaE,EAE5BC,KAAWC,GAQhBx8K,OAAOg3B,KAAKwlJ,EAAYruI,OAAO7gC,QAAQ,SAAAmsB,IACe,IAA9Cz5B,OAAOg3B,KAAKulJ,EAAQpuI,OAAOnqC,QAAQy1B,KAG9B4iJ,EAASC,KACVD,EAASC,IACL9vE,WAAYgwE,EAAYhwE,WACxBnZ,IAAKmpF,EAAYnpF,IACjBllD,SACAK,gBAGR6tI,EAASC,GAAgBnuI,MAAM1U,GAAQ+iJ,EAAYruI,MAAM1U,MAKjE+iJ,EAAYhuI,WAAWlhC,QAAQ,SAAAmvK,GAK3B,IAAK,GAFDh2J,MAEKnnB,EAAI,EAAGA,EAAIi9K,EAAQ/tI,WAAWvsC,OAAQ3C,IAAK,CAChD,GAAMo9K,GAAcH,EAAQ/tI,WAAWlvC,EAEvC,IAAIm9K,EAAe5tI,YAAc6tI,EAAY7tI,WACtC+sI,EAAYa,EAAetuI,MAAOuuI,EAAYvuI,OAAQ,CAEzD1nB,IACA,QAIHA,IAII41J,EAASC,KACVD,EAASC,IACL9vE,WAAYgwE,EAAYhwE,WACxBnZ,IAAKmpF,EAAYnpF,IACjBllD,SACAK,gBAGR6tI,EAASC,GAAgB9tI,WAAW1sC,KAAK26K,OAnD7CJ,EAASC,GAAkBE,IAwD5BH,GAMXL,EAAUt7K,UAAUwsG,SAAW,SAASyvE,GACpC,GAAMC,GAAgB39K,KAAK4zK,cAEvBgK,IA+DJ,OA7DA78K,QAAOg3B,KAAK4lJ,GAAetvK,QAAQ,SAAAk/F,GAC/BqwE,IACA,IAAMxxI,GAAQuxI,EAAcpwE,EAE5BmwE,GAAOh9K,EAAE,WAAaE,KAAMwrC,EAAMgoD,MAElCspF,EAAOh9K,EAAE,eACHqc,MAAO,6BACLqvB,MAAOA,EAAMgoD,MAKrBrzF,OAAOg3B,KAAKqU,EAAM8C,OAAO7gC,QAAQ,SAAA0sE,GAC7B,GAAM8iG,GAAYzxI,EAAM8C,MAAM6rC,EAE9B2iG,GAAOh9K,EAAE,UAAYqc,MAAO,oCAC5B2gK,EAAO1pK,OAAQwmB,KAAMqjJ,EAAUrjJ,OAG/BqjJ,EAAU5vI,MAAM5/B,QAAQ,SAAA2N,GACpB,GAAMk+E,GAAMl+E,EAAKjX,QAAQ,KACnBksF,EAAKj1E,EAAK+O,OAAOmvE,EAAM,EAG7B,IADAwjF,EAAOh9K,EAAE,cACgB,IAArBuwF,EAAGlsF,QAAQ,KACX24K,EAAO1pK,OAAQpT,KAAMqwF,QAClB,CACH,GAAM6sF,GAAK7sF,EAAGzqF,MAAM,IAAK,GACnB5F,EAAOk9K,EAAG,GACV1yK,EAAQoiG,EAAAllG,EAAQgjC,mBAAmBwyI,EAAG,GAE5CJ,GAAO1pK,OAAQpT,SACf88K,EAAO1pK,OAAQ5I,UAEnBsyK,EAAOzgK,OAEXygK,EAAOzgK,OAIXmvB,EAAMmD,WAAWlhC,QAAQ,SAAAiiC,GACjBA,EAAUpB,MAAMlsC,SAEhB06K,EAAOh9K,EAAE,cACLkvC,UAAWU,EAAUV,UACrB7yB,MAAO,oCAGXuzB,EAAUpB,MAAM7gC,QAAQ,SAAAmsB,GACpBkjJ,EAAOh9K,EAAE,UAAY85B,SAChBvd,OAETygK,EAAOzgK,QAIfygK,EAAOzgK,KACPygK,EAAOzgK,OAGJ2gK,+UC5LLh7K,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAMJ83K,cAIjB,QAAAA,mGAAc/9K,KAAA+9K,EAAA,IAAAhoI,qKAAA/1C,MAAA+9K,EAAA/nI,WAAAj1C,OAAAk1C,eAAA8nI,IAAAv9K,KAAAR,MAAA,OAWV+1C,GAAKioI,WAAa,GAAIrqJ,KAMtBoiB,EAAKkoI,SAAW,KAjBNloI,QAJGgoI,6TAA2BG,EAAA,GAI9BnoI,uCAwBFymE,GAAM,GAAA5zC,GAAA5oE,KACRm+K,EAAcn+K,KAAKi+K,QAEzBj+K,MAAKi+K,SAAWzhE,EACZ2hE,IACAA,EAAY79D,uBACR,aAActgH,KAAKo+K,mBACvBD,EAAY79D,uBACR,aAActgH,KAAKq+K,mBACvBF,EAAY79D,uBACR,YAAatgH,KAAKs+K,oBAEtB9hE,IAEAx8G,KAAKo+K,kBAAoB,SAAC5kK,EAAMxL,GAC5B46D,EAAKh1C,aAAa+C,KACd4nJ,EAAAj2K,EACA0F,EAAMwwK,EAAAl2K,EAAgC,SAAfkR,EAAKpO,QAEpCoxG,EAAK4D,oBAAoB,aAAcpgH,KAAKo+K,mBAE5Cp+K,KAAKq+K,kBAAoB,SAAC7kK,EAAMxL,GAC5B46D,EAAKh1C,aAAa+C,KACd4nJ,EAAAj2K,EACA0F,EAAMwwK,EAAApuK,EAAgC,SAAfoJ,EAAKpO,QAEpCoxG,EAAK4D,oBAAoB,aAAcpgH,KAAKq+K,mBAE5Cr+K,KAAKs+K,kBAAoB,SAAC9kK,EAAMxL,GAC5B46D,EAAKh1C,aAAa+C,KACd4nJ,EAAAnuK,EACApC,EAAMwL,EAAKpO,QAEnBoxG,EAAK4D,oBAAoB,YAAapgH,KAAKs+K,6DAOlC9yG,EAAOV,GACpB,GAAI9qE,KAAKi+K,SACL,MAAOj+K,MAAKi+K,SAASQ,qBAAqBjzG,EAAOV,EAErDloE,GAAO0Z,MAAM,qDAAA7L,IAAA,eAAArF,MAAA,SAMJovB,GACT,MAAOx6B,MAAKg+K,WAAW78K,IAAIq5B,wCASlBA,EAAMmoD,GACf,GAAoB,gBAATnoD,GACP,KAAM,IAAI/rB,WAAJ,QAAsB+rB,EAAtB,qBAEVx6B,MAAKg+K,WAAWxoJ,IAAIgF,EAAMmoD,gWCxFb+7F,cAAuB,QAAA78K,KAAA,gBAAA5B,EAAA4B,GAAA,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,sCAAAzO,KAAA6B,GAAA,SAAA5B,EAAA4B,GAAA,IAAA5B,EAAA,SAAAirJ,gBAAA,oEAAArpJ,GAAA,gBAAAA,IAAA,kBAAAA,GAAA5B,EAAA4B,GAAA7B,MAAA6B,EAAAm0C,WAAAj1C,OAAAk1C,eAAAp0C,IAAAoJ,MAAAjL,KAAA+K,YAAA,MAAvB2zK,6TAAuBC,EAAA,GAAAt+K,EAAAwB,IAAA4O,IAAA,eAAArF,MAAA,SAO3BovB,GACT,KAAM,IAAI9uB,OAAM,sBAAA+E,IAAA,mBAAArF,MAAA,SAcHogE,EAAOV,GACpB,KAAM,IAAIp/D,OAAM,uBAAA7J,OAAAyG,EAAAxH,GAAA,SAAAb,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAA,GAAAsI,GAAAnH,EAAA,GAAAf,GAAAe,IAAAmH,GAAAnH,EAAA,ICxCxBw9K,UAAA1+K,EAAA,IAAA+oE,EAAA/oE,EAAAkB,EAAAw9K,GASMh8K,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAkBrBohG,GAAmB,EAQjBw3E,EAA8B,6BAO9BC,EACA,uDAKNz2K,GAAAC,EAAA,WAEIi9F,EAAA7xF,QAAQ5P,IAAM,SAASf,EAAOqZ,GAe1B,OATAxZ,EAAOywC,MAAM,UAAWtwC,EAAOqZ,GACZ,gBAARA,KAC6B,IAA7BA,EAAIrX,QAAQ,cAC0C,IAAtDqX,EAAIrX,QAAQ,uCAEnBhC,EAAQwiG,EAAA7xF,QAAQ2D,SAASG,MAIrBzU,GACR,IAAKwiG,GAAA7xF,QAAQ2D,SAASC,OAGO,IAArB+vF,GACOw3E,EAA4Bt6K,KAAK6X,KACxCxZ,EAAOyZ,MAAM,yBACbgrF,GAAmB,EAEvB,MACJ,KAAK9B,GAAA7xF,QAAQ2D,SAASG,KAClB5U,EAAOwF,KAAP,YAAwBgU,EACxB,IAAM2iK,GAAmBD,EAAuBznI,KAAKj7B,EAEjD2iK,IAAgD,IAA5BA,EAAiB/7K,SACrCqkG,EAAkBxjG,SAASk7K,EAAiB,GAAI,IAChDn8K,EAAOyZ,MAAP,2BAAwCgrF,GAE5C,MACJ,KAAK9B,GAAA7xF,QAAQ2D,SAASX,MACtB,IAAK6uF,GAAA7xF,QAAQ2D,SAASI,MAElB2E,cAAkBA,EAClB6sD,EAAA3gE,EAAqB+pB,iBAAiB,GAAI3mB,OAAM0Q,IAChDxZ,EAAO0Z,MAAMF,KAarBmpF,EAAA7xF,QAAQ4zF,mBAAqB,WACzB,MAAOD,IAGX9B,EAAA7xF,QAAQwyF,gBAAkB,SAAS7/E,GAC/B,OAAQA,GACR,IAAKk/E,GAAA7xF,QAAQ+C,OAAOC,MAChB,MAAO,OACX,KAAK6uF,GAAA7xF,QAAQ+C,OAAOE,WAChB,MAAO,YACX,KAAK4uF,GAAA7xF,QAAQ+C,OAAOG,SAChB,MAAO,UACX,KAAK2uF,GAAA7xF,QAAQ+C,OAAOI,eAChB,MAAO,gBACX,KAAK0uF,GAAA7xF,QAAQ+C,OAAOK,SAChB,MAAO,UACX,KAAKyuF,GAAA7xF,QAAQ+C,OAAOM,UAChB,MAAO,WACX,KAAKwuF,GAAA7xF,QAAQ+C,OAAOO,aAChB,MAAO,cACX,KAAKuuF,GAAA7xF,QAAQ+C,OAAOQ,cAChB,MAAO,eACX,KAAKsuF,GAAA7xF,QAAQ+C,OAAOS,SAChB,MAAO,UACX,SACI,MAAO,eAAA1W,KAAAqB,EAAA,0CAAA5B,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAA,GAAAsI,GAAAnH,EAAA,GAAAf,GAAAe,IAAAmH,GAAAnH,EAAA,IAAAN,GAAAM,IAAAf,GAAAe,EAAA,IAAAkH,EAAAlH,IAAAN,GAAAc,EAAAR,EAAA,IAAAV,EAAA,mBAAAT,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MCvHbe,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAsBnB+4K,cAMF,QAAAA,GAAYvrJ,iGAAMzzB,KAAAg/K,EAAA,IAAAjpI,qKAAA/1C,MAAAg/K,EAAAhpI,WAAAj1C,OAAAk1C,eAAA+oI,IAAAx+K,KAAAR,MAAA,OAEd+1C,GAAKkpI,YAAc,EACnBlpI,EAAKtiB,KAAOA,EAHEsiB,QANhBipI,6TAA6Btd,EAAA,GAMb3rH,gCAUbhsB,+PACDi1J,EAAAv9K,UAAAu0C,WAAAj1C,OAAAk1C,eAAA+oI,EAAAv9K,WAAA,OAAAzB,MAAAQ,KAAAR,KAAW+pB,GACXw7E,EAAA7xF,QAAQuE,aAAa,OAAQ,oBAAAxH,IAAA,OAAArF,MAAA,SAa5BkQ,EAAKw0C,EAASxzC,EAAOiI,GACtB,GAAMwE,GAAKhoB,OAAAwkG,EAAA3xF,MACPoK,KAAM,MACN6K,GAAIvN,GAGRyN,GAAGroB,EAAE,QAAUqc,MAAOwoF,EAAA7xF,QAAQS,GAAG+qK,OACjCl/K,KAAK+pB,WAAWjF,OAAOiE,EAAI+mC,EAASxzC,EAAOiI,0CAWhCjJ,EAAK7O,GAChBzM,KAAKyzB,KAAKy/D,KAAK6xB,YAAYzpG,GAAKy0C,KAAK,SAAApwC,GAAA,MACjClT,GAASkT,EAAS6Y,IAAI,mBAAmB,SAAAlc,GACzC,GAAMg1D,GAAS,8BAEfrI,GAAA3gE,EAAqB+pB,iBACjB,GAAI3mB,OAAS4lE,EAAb,KAAwBh1D,IAC5B1Z,EAAO0Z,MAAMg1D,EAAQh1D,GACrB7P,WAASgE,IAAA,gBAAArF,MAAA,SAWHm7G,GAAqC,GAAA39C,GAAA5oE,KAA1B0iG,EAA0B33F,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,GArFjC,GAsFd,IAAI/K,KAAK2iG,WAAY,CACjB,GAAMrxB,GAAS,6BAKf,OAHArI,GAAA3gE,EAAqB+pB,iBAAiB,GAAI3mB,OAAM4lE,QAChD1uE,GAAO0Z,MAAMg1D,GAIjBtxE,KAAK2iG,WAAa99F,OAAOmiF,YAAY,WACjCpe,EAAK49B,KAAK+f,EAAW,WACjB39C,EAAKq2G,YAAc,GACpB,SAAA3iK,GACCssD,EAAKq2G,aAAe,CACpB,IAAM3tG,YAAiBh1D,EAAQ,QAAU,UAErCssD,GAAKq2G,aA3FF,GA4FHh2G,EAAA3gE,EAAqB+pB,iBAAiB,GAAI3mB,OAAM4lE,IAChD1uE,EAAO0Z,MAAMg1D,EAAQh1D,IASrB1Z,EAAOwF,KAAKkpE,EAAQh1D,IA3GnB,OA8GVomF,GACH9/F,EAAOsB,KAAP,iCAA6Cw+F,EAA7C,UAAAjyF,IAAA,eAAArF,MAAA,WAOIpL,KAAK2iG,aACL99F,OAAOoiF,cAAcjnF,KAAK2iG,YAC1B3iG,KAAK2iG,WAAa,KAClB3iG,KAAKi/K,YAAc,EACnBr8K,EAAOsB,KAAK,8BAAArC,IASxBwG,GAAAC,EAAA,SAAwBmrB,GACpB8xE,EAAA7xF,QAAQmJ,oBAAoB,OAAQ,GAAImiK,GAAqBvrJ,0XC/I3D7wB,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAEnBk5K,EAAa,kBAKbC,cAA6B,QAAAv9K,KAAA,gBAAA5B,EAAA4B,GAAA,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,sCAAAzO,KAAA6B,GAAA,SAAA5B,EAAA4B,GAAA,IAAA5B,EAAA,SAAAirJ,gBAAA,oEAAArpJ,GAAA,gBAAAA,IAAA,kBAAAA,GAAA5B,EAAA4B,GAAA7B,MAAA6B,EAAAm0C,WAAAj1C,OAAAk1C,eAAAp0C,IAAAoJ,MAAAjL,KAAA+K,YAAA,MAA7Bq0K,6TAA6BC,EAAA,GAAA/2K,EAAAzG,IAAA4O,IAAA,OAAArF,MAAA,SAK1B2e,+PACDq1J,EAAA39K,UAAAu0C,WAAAj1C,OAAAk1C,eAAAmpI,EAAA39K,WAAA,OAAAzB,MAAAQ,KAAAR,KAAW+pB,GAEX/pB,KAAK+pB,WAAWtF,WACZzkB,KAAKs/K,OAAOjyK,KAAKrN,MAAOm/K,EAAY,KAAM,MAAO,KAAM,SAAA1uK,IAAA,SAAArF,MAAA,SAOxD2d,GACHnmB,EAAOsB,KAAK,UAAW6kB,gCAatBF,EAAI7a,EAAM0rB,EAAU6lJ,EAAUn1E,GAAa,GAAAxhC,GAAA5oE,IAC5C,OAAO,IAAIg4C,SAAQ,SAAC4E,EAAS8F,GACzB,GAAK0nD,EAAL,CAKA,GAAMp/F,GAAMjK,OAAAwkG,EAAA3xF,MACRoK,KAAM,MACN6K,GAAIuhF,GAGRp/F,GAAItK,EAAE,QACFqc,MAAOoiK,EACPt2J,KACA7a,SAEJhD,EAAItK,EAAE,UACFE,KAAM,cACNwK,MAAOsuB,IACRzc,KAECsiK,GAAYA,EAASv8K,QACrBgI,EAAItK,EAAE,UACFE,KAAM,kBACNwK,MAAOm0K,IACRtiK,KAGP2rD,EAAK7+C,WAAWjF,OACZ9Z,EACA,SAAAwR,GACI5Z,EAAOsB,KAAK,eAAgBsY,EAG5B,IAAMiN,GAAWstD,EAAEv6D,GAAQkzB,KAAK,OAAO/1B,KAAK,MAE5CivD,GAAK42G,aAAe/1J,EAASsB,OAAO,QAAQ/nB,QAC5CJ,EAAOsB,KAAP,2BAAuC0kE,EAAK42G,cAC5C5iI,KAEJ,SAAAtgC,GACI1Z,EAAOsB,KAAK,cAAeoY,GAC3BomC,EAAOpmC,SAxCXomC,GAAO,GAAIh3C,OAAM,yBAAA+E,IAAA,SAAArF,MAAA,WAkDpB,GAAA+9D,GAAAnpE,IACL,OAAO,IAAIg4C,SAAQ,SAAC4E,EAAS8F,GACzB,IAAKymB,EAAKq2G,aAIN,MAHA98H,GAAO,GAAIh3C,OAAM,4BACjB9I,GAAOwF,KAAK,sBAKhB,IAAM4C,GAAMjK,OAAAwkG,EAAA3xF,MACRoK,KAAM,MACN6K,GAAIsgD,EAAKq2G,cAGbx0K,GAAItK,EAAE,UACFqc,MAAOoiK,IAGXh2G,EAAKp/C,WAAWjF,OAAO9Z,EAAK,SAAAwR,GACxB5Z,EAAOsB,KAAK,iBAAkBsY,GAC9B2sD,EAAKq2G,aAAe,KACpB5iI,KACD,SAAAtgC,GACC1Z,EAAOsB,KAAK,gBAAiBoY,GAC7B6sD,EAAKq2G,aAAe,KACpB98H,EAAO,GAAIh3C,OAAM,0BAAA7J,IASjCwG,GAAAC,EAAA,WACIi9F,EAAA7xF,QAAQmJ,oBAAoB,OAAQ,GAAIuiK,6VC7HtCK,cAIF,QAAAA,mGAAcz/K,KAAAy/K,EAAA,IAAA1pI,qKAAA/1C,MAAAy/K,EAAAzpI,WAAAj1C,OAAAk1C,eAAAwpI,IAAAj/K,KAAAR,MAAA,OAEV+1C,GAAKjyC,OAFKiyC,QAJZ0pI,6TAAsBC,EAAA,GAIV3pI,gCASThsB,+PACD01J,EAAAh+K,UAAAu0C,WAAAj1C,OAAAk1C,eAAAwpI,EAAAh+K,WAAA,OAAAzB,MAAAQ,KAAAR,KAAW+pB,GACX/pB,KAAK+pB,WAAWlG,SAAW7jB,KAAK2/K,YAAYtyK,KAAKrN,MACjDA,KAAK+pB,WAAWjG,UAAY9jB,KAAK4/K,YAAYvyK,KAAKrN,0CAO1C0kB,GACR1kB,KAAK8D,IAAIjB,UAAWoc,OAAOC,UAAW,WAAYwF,wCAO1CA,GACR1kB,KAAK8D,IAAIjB,UAAWoc,OAAOC,UAAW,WAAYwF,YAO1Drc,GAAAC,EAAA,WACIs8G,EAAAlxG,QAAQmJ,oBAAoB,SAAU,GAAI4iK,kCC5B9C,SAASI,GAAkBv3K,EAAG8H,GAC1B,GAAI4kE,GAAM,CAMV,OAJA8qG,GAAgCx9G,KAAK,SAAA7xD,GAAA,MACiC,MAAjEukE,EAAQ1sE,EAAEmI,GAAOL,EAAEK,GAAS,EAAQnI,EAAEmI,GAAOL,EAAEK,KAAU,KAGvDukE,EDqBmCyqG,iSCrCxCM,GAAwB,WAAY,OAAQ,OAAQ,QACpDD,GAAoC,WAAY,OAAQ,QAqBzCE,cAOjB,QAAAA,KAAkE,GAAtDj2J,GAAsDhf,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MAArCyO,EAAqCzO,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,GAA9B,uCAAA9K,EAAA4B,GAAA,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,sCAA8BzO,KAAAggL,EAAA,IAAAjqI,qKAAA/1C,MAAAggL,EAAAhqI,WAAAj1C,OAAAk1C,eAAA+pI,IAAAx/K,KAAAR,MAI9D,IAFA+1C,EAAKv8B,KAAOA,EACZu8B,EAAKkqI,MAAQl2J,EAAWk2J,OACnBlqI,EAAKkqI,MACN,KAAM,IAAIv0K,OACN,sDAIRqqC,GAAKmqI,sBAAwBn/K,OAAOkqC,OAAO,MAC3C8K,EAAKoqI,aAAep/K,OAAOkqC,OAAO,MAClC8K,EAAK9xC,QAAU,GACf8xC,EAAK0rH,MAAQ,GAAIvsI,IAEjB,IAAMqzE,GAAOx+E,EAAWw+E,IAfsC,OAiB9DA,GAAKpgE,YAAYi4I,EAAA93K,EAAWm8B,gBACxB,SAAA+3E,GAAA,MAAQzmE,GAAKsqI,aAAa7jE,KAC9BjU,EAAKpgE,YAAYi4I,EAAA93K,EAAWo8B,kBACxB,SAAA83E,GAAA,MAAQzmE,GAAKuqI,gBAAgB9jE,KACjCz7G,OAAOg3B,KAAKwwE,EAAKk5D,OAAOpzJ,QAAQ,SAAAiN,GAC5By6B,EAAKsqI,aAAa93E,EAAKk5D,MAAMnmJ,MAGjCspG,EAAAlxG,QAAQuE,aAAa,OAAQ,mCAC7B89B,EAAKkqI,MAAMr6E,WAAWgf,EAAAlxG,QAAQS,GAAGosK,MACjCx2J,EAAWtF,WAAWsxB,EAAKyqI,YAAYnzK,KAAjB0oC,GAA6B6uE,EAAAlxG,QAAQS,GAAGosK,MAE9DxqI,EAAK0qI,iBAAmB1qI,EAAK2qI,yBAAyBrzK,KAA9B0oC,GA7BsCA,QAPjDiqI,6TAAaW,EAAA,GAOoC5qI,sCAuCvDwkE,GAAyB,GAAhBC,GAAgBzvG,UAAA/H,OAAA,YAAA+H,UAAA,IAAAA,UAAA,EAChC/K,MAAKigL,MAAMr6E,WAAW2U,GACtBv6G,KAAK4gL,mBACDpmE,GACAx6G,KAAKw6G,+CAWCD,GAAyB,GAAhBC,GAAgBzvG,UAAA/H,OAAA,YAAA+H,UAAA,IAAAA,UAAA,EACnC/K,MAAKigL,MAAMxlE,cAAcF,GACzBv6G,KAAK4gL,mBACDpmE,GACAx6G,KAAKw6G,0CAQTx6G,KAAKyhK,MAAMpzJ,QAAQ,SAAAmuG,GAAA,MAAQA,GAAKn4F,qDASxB/I,GAAqB,GAAAstD,GAAA5oE,KAAhBukB,EAAgBxZ,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,GAAN,IACjBsT,EACA/C,IAAOtb,MAAKmgL,aAAengL,KAAKmgL,aAAa7kK,GAAO,IAE1D,MAAK+C,GAAUA,EAAKpa,UAAWjE,MAAKkgL,uBAAwB,CACxD,GAAM1mK,GAAO6E,EAAUA,EAAK7E,KAAf,IAAuB6E,EAAKpa,QAAY,IAGrD,OAAO,IAAI+zC,SAAQ,SAAC4E,EAAS8F,GAAV,MACfkmB,GAAKq3G,MAAM/7K,KAAKoX,EAAK9B,EAAM,SAAAiP,GACvB,GAAM9I,GAAW,GAAIuV,IAErB6hD,GAAEtuD,GACGinB,KAAK,kBACL8c,KACG,SAAC0tC,EAAKzhF,GAAN,MAAakH,GAAS6U,IAAI/b,EAAGuC,aAAa,UAC9CqD,IAEAuqD,EAAKs3G,sBAAsB7hK,EAAKpa,SAAW0b,GAE/Ci9B,EAAQj9B,IACT+iC,EAAQn+B,KAInB,MAAOyzB,SAAQ4E,QAAQ58C,KAAKkgL,sBAAsB7hK,EAAKpa,+CAQ9Cu4G,GACTx8G,KAAKyhK,MAAMjtI,IAAIgoF,GACfA,EAAKr0E,YAAYi4I,EAAA93K,EAAW+8B,gBAAiBrlC,KAAKygL,kBAClDzgL,KAAK6gL,wBAAwBrkE,2CAQjBA,GACZx8G,KAAKyhK,MAAMtpI,OAAOqkF,GAClBA,EAAKtmF,eAAekqJ,EAAA93K,EAAW+8B,gBAAiBrlC,KAAKygL,kEAOjCjkE,GACpBA,EAAKiE,cAAc,KACfnrG,YACIyH,MAAO6nG,EAAAlxG,QAAQS,GAAGosK,KAClBxvK,KA/JH,QAgKGyI,KAAMxZ,KAAKwZ,KACX5V,IAAK5D,KAAKiE,2DAQE,GAAAklE,GAAAnpE,IAEpBA,MAAKyhK,MAAMpzJ,QAAQ,SAAAmuG,GAAA,MAAQrzC,GAAK03G,wBAAwBrkE,KACxDx8G,KAAKw6G,oDAOL,GAAMsmE,GACF9gL,KAAKigL,MAAMxf,YAAY/mJ,KAAKmmK,GAAmBvzH,OAC7C,SAACy0H,EAAkBC,GAAnB,MAEQjB,GAAoBzzH,OAChB,SAACghD,EAAK78F,EAAKypF,GAAX,MACIoT,IACe,IAARpT,EAAY,GAAK,KAClB8mF,EAASvwK,IACnB,IAPZ,KASA,IACAkP,EACA3f,KAAKigL,MAAMvf,UAAUhnJ,OAAO4yC,OAC1B,SAACghD,EAAKiN,GAAN,MAAqBjN,GAAMiN,EAA3B,KAAuC,GAE/Cv6G,MAAKiE,QAAUlD,OAAA6jH,EAAAjzG,UAASmvK,EAAanhK,GACrC3f,KAAKihL,4DAOGv8J,GACR,GAAM1W,GAAO0W,EAAO1J,aAAa,QAC3Bk4E,EAAOxuE,EAAOslF,cAAc,KAC5B/lG,EAAUivF,EAAKl4E,aAAa,OAC5BxB,EAAO05E,EAAKl4E,aAAa,QACzBkmK,EAAalhL,KAAKmgL,aAAanyK,EAUrC,OARAhO,MAAKmgL,aAAanyK,IAAU/J,UACxBuV,QACA0nK,GAAcA,EAAWj9K,UAAYA,GACrCjE,KAAK4zB,aAAa+C,KAAKypJ,EAAA93K,EAAWs3B,4BAC9B5xB,SAIDyC,IAAA,2BAAArF,MAAA,SAOckQ,GACjBA,IAAOtb,MAAKmgL,oBACLngL,MAAKmgL,aAAa7kK,6DChNtB,QAAS6lK,GAA4B35G,GAChDxnE,KAAKwnE,WAAaA,EAGlBA,EAAWzxC,GAAGqrJ,EAAA1gJ,mBACV,SAAA+pC,GACI,GAAKA,EAAM5uC,WAAc2rC,EAAWruC,WAApC,CAGA,GAAM7L,GACAm9C,EAAMV,MACFvC,EAAW60C,iBAAmB70C,EAAWwzC,iBAI7CxjF,EAAOlK,GAAWA,EAAQ8H,gBAAmB,IAEnDoyC,GAAWruC,WAAWkB,cAClB7C,EACAizC,EAAMqa,UACNra,EAAMO,cAElBxD,EAAWzxC,GACPqrJ,EAAAriJ,uBACAsiJ,EAAA/4K,EAAW81B,eAAe/wB,KACtBg0K,EAAA/4K,EAAY8xB,EAAA/tB,IACpBm7D,EAAWzxC,GACPqrJ,EAAApiJ,oBACAqiJ,EAAA/4K,EAAW81B,eAAe/wB,KACtBg0K,EAAA/4K,EAAY8xB,EAAA4G,IDmLa1lB,kJC/OrCgmK,EAAAphL,EAAA,GAAAqhL,EAAArhL,EAAAkB,EAAAkgL,GAyBM1+K,EAAS7B,OAAAygL,EAAAh/K,WAAUyD,EAyCzBk7K,GAA4B1/K,UAAUk8G,uBAAyB,WAAW,GAAA5nE,GAAA/1C,KAChEwnE,EAAaxnE,KAAKwnE,WAClBy2G,EAAWz2G,EAAWg1C,IAE5Bx8G,MAAKyhL,kBAAoB,GAAIC,GAAAp5K,EAAsB21K,EAC/Cj+K,KAAKwnE,WAAW5zC,cAEpBqqJ,EAAS91I,YAAYo5I,EAAAj5K,EAAWw8B,eAAgB,SAAAqhF,GACvCA,EAAcp8C,OAMfvC,EAAWkZ,IAAIu+B,uBAMvBg/D,EAAS91I,YAAYo5I,EAAAj5K,EAAWy7B,qBAC5B,SAAA34B,GACIi2K,EAAA/4K,EAAW0sB,UAAUmF,UAAUC,EAAAzF,GAG/B6yC,EAAWkZ,IAAIoiC,aAAa13G,GAAO2kD,KAC/B,WACIyX,EAAWi0C,mBAEf,iBACI74G,GAAOwF,KACH,qDAIpBpI,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW+3B,gBACtC+gJ,EAAA/gJ,iBAEJrgC,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW68B,WACtCi8I,EAAAviJ,mBAGJo/I,EAAS91I,YAAYo5I,EAAAj5K,EAAW68B,WAC5B,WACI4Q,EAAKyxB,WAAWu0C,8BAEhBh7G,OAAOg3B,KAAKkmJ,EAAS/4E,iBAAiB72F,QAAQ,SAAAoC,GAC1C,GAAMrF,GAAQ6yK,EAAS/4E,gBAAgBz0F,GACjC4tB,gBAA0BjE,EAAA8G,EAAqBzwB,CAErD4wK,GAAA/4K,EAAW0sB,UAAUmF,UAAUkE,GAAajzB,YAEhDrK,OAAOg3B,KAAKkmJ,EAASxqJ,KAAKyxE,iBAAiB72F,QAAQ,SAAAoC,GAC/C,GAAMrF,GAAQ6yK,EAASxqJ,KAAKyxE,gBAAgBz0F,GACtC4tB,UAAoBjE,EAAA8G,EAAqBzwB,CAE/C4wK,GAAA/4K,EAAW0sB,UAAUmF,UAAUkE,GAAajzB,cAIxDpL,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW+9B,gBACtC+6I,EAAAxiJ,kBACAgjJ,EAAA3kG,kBAEJj9E,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW69B,mBACtCi7I,EAAAxiJ,kBACAgjJ,EAAA3kG,kBACJj9E,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW89B,+BACtCg7I,EAAAxiJ,kBACAgjJ,EAAA1kG,mBAEJl9E,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAWg+B,qBACtC86I,EAAAxiJ,kBACAgjJ,EAAA5kG,sBAEJh9E,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAWs9B,kBACtCw7I,EAAAxiJ,kBACAgjJ,EAAAh8I,mBAEJ5lC,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW07B,wBACtCo9I,EAAAxiJ,kBACAgjJ,EAAA59I,yBAEJhkC,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAWg6B,YACtC8+I,EAAAxiJ,kBACAgjJ,EAAA/kG,2BACJohG,EAAS91I,YACLo5I,EAAAj5K,EAAWg6B,YACX,iBAAM++I,GAAA/4K,EAAW0sB,UAAUmF,UAAUC,EAAAhqB,KAEzCpQ,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW49B,kBACtCk7I,EAAAxiJ,kBACAgjJ,EAAA17I,mBAEJlmC,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAWu8B,kBACtCu8I,EAAAxiJ,kBACAgjJ,EAAA/8I,mBAEJo5I,EAAS91I,YAAYo5I,EAAAj5K,EAAW08B,mBAC5B,SAAC1X,EAAShR,GACDgR,EAAQy8C,OACTvC,EAAW5zC,aAAa+C,KACpByqJ,EAAAxiJ,kBACAgjJ,EAAA58I,mBAA0C1oB,KAI1D2hK,EAAS91I,YAAYo5I,EAAAj5K,EAAWk8B,sBAC5B,SAAA2hF,GACI3+C,EAAWsjD,uBAAuB3E,KAG1CnmH,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW48B,cACtCk8I,EAAAxiJ,kBACAgjJ,EAAA7kG,sBAEJ/8E,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW87B,oBACtCg9I,EAAAziJ,iBACAijJ,EAAA9kG,YAEJ98E,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAWs8B,mBACtCw8I,EAAAxiJ,kBACAgjJ,EAAAh9I,oBAEJq5I,EAAS91I,YAAYo5I,EAAAj5K,EAAWu6B,WAC5B,WACIw+I,EAAA/4K,EAAW0sB,UAAUmF,UAAUC,EAAA5rB,GAC/Bg5D,EAAW5zC,aAAa+C,KACpByqJ,EAAAxiJ,kBACAgjJ,EAAA/+I,cAMZo7I,EAAS91I,YAAYo5I,EAAAj5K,EAAWk+B,uBAC5B,SAAA2/E,GAHErgG,EAKMqgG,EAAcp8C,MACR,0BAA4B,uBAN9Bs3G,EAAA/4K,EAAW81B,eAAkBhE,EAAA15B,EAA7B,IAAkDolB,EAA5D,IAAAA,KASN9lB,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW03B,uBACtCohJ,EAAAphJ,wBAEJhgC,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAWs4B,6BACtCwgJ,EAAAxgJ,8BAEJ5gC,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAW23B,kCACtCmhJ,EAAAnhJ,mCAEJjgC,KAAKyhL,kBAAkBE,QACnBJ,EAAAj5K,EAAW43B,mCACXkhJ,EAAAlhJ,oCAEJlgC,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAWy3B,qBACtCqhJ,EAAArhJ,sBAEJk+I,EAAS91I,YACLo5I,EAAAj5K,EAAW+7B,wBACX,SAAC8hF,EAAe7pG,GACP6pG,EAAcp8C,OACfvC,EAAW5zC,aAAa+C,KACpByqJ,EAAAxiJ,kBACAgjJ,EAAAvkG,aACA/gE,KAIhB2hK,EAAS4D,+BAA+B,SAACroK,EAAMxL,GAC3C,GAAM+0E,GAAcvb,EAAWsc,mBAAmB91E,EAE7C+0E,IAILA,EAAY++F,YACRtoK,EAAKd,QAAQ1T,UAAU,qBAAqBhC,QAC5CwW,EAAKpO,SAGbpL,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAWi3B,OACtC6hJ,EAAA7hJ,QACJ0+I,EAAS91I,YAAYo5I,EAAAj5K,EAAWi3B,OAC5B,WACIioC,EAAWg1C,KAAO,KAClBh1C,EAAWu3C,UAEnBk/D,EAAS91I,YAAYo5I,EAAAj5K,EAAWg4B,iBAC5BknC,EAAW4gD,kBAAkB/6G,KAAKm6D,IAEtCxnE,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAWk9B,iBACtC47I,EAAA3hJ,oBAEJw+I,EAAS91I,YAAYo5I,EAAAj5K,EAAW88B,kBAC5BoiC,EAAWi9C,eAAep3G,KAAKm6D,IACnCy2G,EAAS91I,YAAYo5I,EAAAj5K,EAAW+8B,gBAC5BmiC,EAAW03C,aAAa7xG,KAAKm6D,IACjCxnE,KAAKyhL,kBAAkBE,QAAQJ,EAAAj5K,EAAWg9B,SACtC87I,EAAAtiJ,iBAEJm/I,EAAS91I,YAAYo5I,EAAAj5K,EAAW42B,qBAC5BsoC,EAAW89C,qBAAqBj4G,KAAKm6D,IAEzCy2G,EAAS91I,YAAYo5I,EAAAj5K,EAAW28B,mBAAoB,SAAA+sD,GAChDxqB,EAAW49C,mBAAmBpzB,GAG1BxqB,EAAWruC,YAAcquC,EAAWw5C,eACpCx5C,EAAWzxC,GAAGqrJ,EAAAphJ,uBACV,SAAC3Z,EAAQ/J,GACL,GAAMy7F,IACFt1G,GAAI,kBACJ4jB,SAGA/J,KACAy7F,EAAUz7F,MAAQA,GAEtB+kK,EAAA/4K,EAAW00B,QAAQzZ,KAAKkK,UAAUsqF,QAKlDkmE,EAAS91I,YAAYo5I,EAAAj5K,EAAWi9B,iBAC5BiiC,EAAW69C,kBAAkBh4G,KAAKm6D,IAEtCy2G,EAAS91I,YAAY45I,EAAAz5K,EAAqBuhG,iBACtC,SAACuR,EAAamE,GACV/3C,EAAW4zC,YAAcA,EACzB5zC,EAAW+3C,aAAeA,EAC1B/3C,EAAW5zC,aAAa+C,KACpByqJ,EAAA7iJ,oBAA2C68E,EAC3CmE,KAGZ0+D,EAAS91I,YACLo5I,EAAAj5K,EAAWo3B,iBAGX,SAACpkB,EAAKiiG,EAAayoD,EAAKgc,EAAO5G,GAC3B,GAAM34K,GAAKmiH,EAAAlxG,QAAQgI,mBAAmBJ,EAEtCksD,GAAW5zC,aAAa+C,KACpByqJ,EAAA1hJ,iBACAj9B,EAAIujK,EAAKoV,KAGrB6C,EAAS91I,YAAYo5I,EAAAj5K,EAAWw9B,gBAC5B,SAACxqB,EAAK+K,GACF,GAAM5jB,GAAKmiH,EAAAlxG,QAAQgI,mBAAmBJ,GAChCynE,EAAcvb,EAAWsc,mBAAmBrhF,EAE7CsgF,IAAeA,EAAYk/F,UAAY57J,IAG5C08D,EAAYk/F,QAAU57J,EACtBmhD,EAAW5zC,aAAa+C,KACpByqJ,EAAA9iJ,oBAA2C77B,EAAI4jB,MAG3D43J,EAAS91I,YAAYo5I,EAAAj5K,EAAWs+B,sBAC5B,SAAC54B,EAAMkjC,GACH,GAAMzuC,GAAKmiH,EAAAlxG,QAAQgI,mBAAmB1N,GAChC+0E,EAAcvb,EAAWsc,mBAAmBrhF,EAE9CsgF,GACAvb,EAAW5zC,aAAa+C,KACpByqJ,EAAA/hJ,0BACA0jD,EAAa7xC,GAEjBtuC,EAAOwF,KACH,0EACkB4F,EAClBkjC,KAIhB+sI,EAAS79D,oBAAoB,aAAc,SAAC1vG,EAAM1C,GAC9C,GAAIgzG,KAEJ,IAAIx5C,EAAWqb,aAAe70E,GAAQw5D,EAAWw5C,cAC7CA,SACG,CACH,GAAMj+B,GAAcvb,EAAWsc,mBAAmB91E,EAE9C+0E,IAAeA,EAAYi+B,gBAC3BA,MAIR,GAAKA,EAAL,CAIA,GAAM3F,GAA4C,SAA1B3qG,EAAK4E,WAAW25D,MAClCqsC,EAA4C,SAA1B5qG,EAAK4E,WAAWy0B,MAEpCm4I,IAEA7mE,KAAoB7zC,EAAW+zC,iBAAiBtsC,QAChDzH,EAAW+zC,iBAAiBtsC,MAAQosC,EACpC6mE,MAGA5mE,IAAoB9zC,EAAW+zC,iBAAiBxxE,QAChDy9B,EAAW+zC,iBAAiBxxE,MAAQuxE,EACpC4mE,MAGAA,GACA16G,EAAW5zC,aAAa+C,KACpByqJ,EAAAjhJ,2BACAqnC,EAAW+zC,qBAKvB0iE,EAAS79D,oBAAoB,UAAW,SAAC1vG,EAAM1C,GAC3C,GAAIm0K,MACAC,IAEJ1xK,GAAKi+E,SAAStgF,QAAQ,SAAArE,GACK,UAAnBA,EAAO0O,UACPypK,EAAoC,SAAjBn4K,EAAOoB,OAEP,UAAnBpB,EAAO0O,UACP0pK,EAAoC,SAAjBp4K,EAAOoB,QAIlC,IAAIowG,SAEJ,IAAIh0C,EAAWqb,aAAe70E,EAC1BwtG,EAAmBh0C,EAAWg0C,qBAC3B,CACH,GAAMz4B,GAAcvb,EAAWsc,mBAAmB91E,EAElD,KAAK+0E,EACD,MAGJy4B,GAAmBz4B,EAAYs/F,kBAGnC,GAAIH,KAEA1mE,GAAiBvsC,QAAUkzG,IAC3BD,KACA1mE,EAAiBvsC,MAAQkzG,GAGzB3mE,EAAiBzxE,QAAUq4I,IAC3BF,KACA1mE,EAAiBzxE,MAAQq4I,GAGzBF,GACA16G,EAAW5zC,aAAa+C,KACpByqJ,EAAA5iJ,0BACAxwB,EAAMwtG,KAIdh0C,EAAWruC,aAEX8kJ,EAAS91I,YAAYo5I,EAAAj5K,EAAWk8B,sBAC5B,SAAAlX,GACIk6C,EAAWruC,WAAWe,6BAClB5M,EAAQ8H,kBAIpB6oJ,EAAS91I,YAAYo5I,EAAAj5K,EAAWw7B,yBAC5B,SAAC7jC,EAAGi2F,GACA1uB,EAAWruC,WAAW4D,0BAA0B98B,EAAGi2F,OAQnEirF,EAA4B1/K,UAAUw7G,kBAAoB,WACtD,GAAMz1C,GAAaxnE,KAAKwnE,WAClBkZ,EAAMlZ,EAAWkZ,GAEvBA,GAAIv4C,YACAm6I,EAAAh6K,EAAU++B,mBACVmgC,EAAW0a,mBAAmB70E,KAAKm6D,IAEvCkZ,EAAIv4C,YACAm6I,EAAAh6K,EAAUi/B,qBACVigC,EAAW4a,qBAAqB/0E,KAAKm6D,IAEzCkZ,EAAIv4C,YAAYm6I,EAAAh6K,EAAU62B,yBACtB,SAAA18B,GACQ+kE,EAAWyzC,sBAAwBx4G,GAAM+kE,EAAWg1C,OACpDh1C,EAAWyzC,oBAAsBx4G,EACjC+kE,EAAW5zC,aAAa+C,KACpByqJ,EAAAjiJ,yBAAgD18B,IAEpD+kE,EAAWruC,YAAcquC,EAAWqb,aAAepgF,GAEnD+kE,EAAWruC,WAAW2B,6BAIlC4lD,EAAIv4C,YAAYm6I,EAAAh6K,EAAUo6B,kBAAmB,WACzC,GAAM7Y,GAAMhlB,OAAOwwC,YAAYxrB,KAE/BjnB,GAAOkB,IAAI,8BAA+B+lB,GAC1C29C,EAAWg1C,KAAKtX,gBAAgB,uBAAyBr7E,EACzDw3J,EAAA/4K,EAAW0sB,UAAUmF,UAAUC,EAAA1c,GAAqBtS,MAAOye,IAE3D29C,EAAW5zC,aAAa+C,KAAKyqJ,EAAAniJ,uBAGjCyhD,EAAIv4C,YACAm6I,EAAAh6K,EAAUk2B,0BACV,SAAAgL,GAAA,MAAWg+B,GAAWg1C,KAAKO,yBAAyBvzE,KAExDk3C,EAAIv4C,YAAYm6I,EAAAh6K,EAAU+2B,0BACtB,SAACrxB,EAAMkjC,GACH,GAAM6xC,GAAcvb,EAAWsc,mBAAmB91E,EAE9C+0E,GACAvb,EAAW5zC,aAAa+C,KACpByqJ,EAAA/hJ,0BACA0jD,EAAa7xC,GAEjBtuC,EAAOwF,KACH,mEACsB4F,EACtBkjC,KAIhBwvC,EAAIv4C,YAAYm6I,EAAAh6K,EAAUw/B,oBACtB,SAACtQ,EAAKmU,GACGnU,EAAIuyC,OACLs3G,EAAA/4K,EAAW00B,QACPzZ,KAAKkK,WACDhrB,GAAI,cACJ2I,MAAOugC,OAI3B+0C,EAAIv4C,YAAYm6I,EAAAh6K,EAAUy/B,qBACtB,SAACvQ,EAAKmU,GACGnU,EAAIuyC,OACLs3G,EAAA/4K,EAAW00B,QACPzZ,KAAKkK,WACDhrB,GAAI,eACJ2I,MAAOugC,OAK3B+0C,EAAIv4C,YAAYm6I,EAAAh6K,EAAUu+B,qBACtB,SAAC5mC,EAAGu3B,GACAgwC,EAAWruC,WAAWyD,uBAAuB38B,EAAGu3B,KAGxDkpD,EAAIv4C,YAAYm6I,EAAAh6K,EAAUw+B,oBACtB,SAAC7mC,EAAGu3B,GACAgwC,EAAWruC,WAAWwD,sBAAsB18B,EAAGu3B,KAGvDkpD,EAAIv4C,YAAYm6I,EAAAh6K,EAAUm/B,6BACtB,SAACxnC,EAAGu3B,GACAgwC,EAAWruC,WAAW0D,uBAAuB58B,EAAGu3B,KAGxDkpD,EAAIv4C,YAAYm6I,EAAAh6K,EAAUo/B,8BACtB,SAACznC,EAAGu3B,GACAgwC,EAAWruC,WAAW2D,wBAAwB78B,EAAGu3B,KAGzDkpD,EAAIv4C,YAAYm6I,EAAAh6K,EAAU6+B,yBACtB,SAACsjC,EAAOjwC,GAKAiwC,EAAMonC,gBAAkBpnC,EAAMiC,YAAc61G,EAAAj6K,EAAU8iC,SACtDo8B,EAAWruC,WAAWoB,0BAA6BC,MAQnE2mJ,EAA4B1/K,UAAUi7G,mBAAqB,WACvD,GAAMl1C,GAAaxnE,KAAKwnE,UAExBA,GAAW/zC,KAAKy/D,KAAK/qD,YAAYo5I,EAAAj5K,EAAWs3B,4BACxC,SAAA5xB,GACI,GAAM+0E,GACAvb,EAAWsc,mBACT8gC,EAAAlxG,QAAQgI,mBAAmB1N,GAE/B+0E,IACAvb,EAAW5zC,aAAa+C,KACpByqJ,EAAAxhJ,4BACAmjD,KAGhBvb,EAAW/zC,KAAK0U,YACZo5I,EAAAj5K,EAAW47B,cACXsjC,EAAWq/C,eAAex5G,KAAKm6D,IACnCA,EAAW/zC,KAAK0U,YACZo5I,EAAAj5K,EAAW27B,cACXujC,EAAWk+C,eAAer4G,KAAKm6D,IACnCA,EAAW/zC,KAAK0U,YACZo5I,EAAAj5K,EAAWo+B,eACX8gC,EAAWq+C,gBAAgBx4G,KAAKm6D,IACpCA,EAAW/zC,KAAK0U,YACZo5I,EAAAj5K,EAAW67B,WACXqjC,EAAWsgD,YAAYz6G,KAAKm6D,IAEhCA,EAAW/zC,KAAK0U,YAAYo5I,EAAAj5K,EAAWm+B,uBACnC,SAACykI,EAAYC,GACL3jG,EAAWvpD,QAAQjU,OAAOw4K,mBAI9Bh7G,EAAW6zC,gBAAkB6vD,EAC7B1jG,EAAW8zC,gBAAkB6vD,EAI7B3jG,EAAWmD,iBAAiBt8D,QAAQ,SAAAo8D,GAChC,OAAQA,EAAMO,WACd,IAAKgO,GAAA1wE,EACDk/D,EAAW6zC,iBAAmB5wC,EAAMa,MACpC,MACJ,KAAK0N,GAAA5oE,EACDo3D,EAAW8zC,iBAAmB7wC,EAAMa,UAK5C9D,EAAW5zC,aAAa+C,KAAKyqJ,EAAAhhJ,mBAOzC+gJ,EAA4B1/K,UAAUm8G,yBAA2B,WAC7D,GAAMp2C,GAAaxnE,KAAKwnE,UAEnBA,GAAWruC,aAKhBquC,EAAWruC,WAAWtD,sBAAsB,SAAC2B,EAAKgD,EAAMz3B,EAAO84B,GAC3D2rC,EAAWkZ,IAAI3U,cAAcv0C,EAAKgD,EAAMz3B,EAAO84B,KAMnD2rC,EAAWruC,WAAWhD,0BAA0B,WAC5CqxC,EAAW5zC,aAAa+C,KACpByqJ,EAAA1iJ,8BAER8oC,EAAWruC,WAAW5C,yBAAyB,SAACiB,EAAK+F,GACjDiqC,EAAWmD,eAAeqO,EAAA1wE,GAAiB+F,QAAQ,SAAAo8D,GAC/C,GAAMjwC,GAAOhD,EAAI4yF,aAAa3/C,EAEzBjwC,IAAS+C,EAAM77B,eAAe84B,IAInCiwC,EAAMg4G,yBAAyBjrJ,EAAK+F,EAAM/C,oEC7nBtD,QAASkoJ,GAAsBxjH,EAAKyjH,GAChC,IAAKzjH,IAAQyjH,GAAmC,kBAApBzjH,GAAI/2B,aACJ,kBAAdw6I,GAAKhsJ,KACf,KAAM,IAAIjrB,OAAM,oDAEpB1L,MAAKk/D,IAAMA,EACXl/D,KAAK2iL,KAAOA,EAWhBD,EAAsBjhL,UAAUkgL,QAAU,WAAkB,OAAA1vJ,GAAAlnB,UAAA/H,OAAN6H,EAAM2C,MAAAykB,GAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANrnB,EAAMqnB,GAAAnnB,UAAAmnB,EACxD,IAAM0wJ,GAAW/3K,EAAK,EAItBA,GAAK,GAAK7K,KAAK2iL,KAGf3iL,KAAKk/D,IAAI/2B,YACLy6I,EACAx1K,SAAS3L,UAAU4L,KAAKpC,MAAMjL,KAAK2iL,KAAKhsJ,KAAM9rB,KAGtDlL,EAAOD,QAAUgjL,6BCrCjBz8K,GAAe/F,EAAQ,GAAqBsC,UAAUyD,6WCWjC48K,aAgBjB,QAAAA,GAAYvnK,EAAKksD,EAAY+1C,EAAaulE,EAAQp+D,EAASr+F,iGAAQrmB,KAAA6iL,GAC/D7iL,KAAK+iL,KAAOznK,EACZtb,KAAK8gG,IAAM8jB,EAAAlxG,QAAQgI,mBAAmBJ,GACtCtb,KAAKouH,YAAc5mD,EACnBxnE,KAAKulH,aAAehI,EACpBv9G,KAAKglH,iBACLhlH,KAAKylH,WACLzlH,KAAK8kH,MAAQ,OACb9kH,KAAKiiL,QAAU57J,EACfrmB,KAAKqiL,mBACDpzG,aACAllC,cAEJ/pC,KAAKgjL,QAAUF,EACf9iL,KAAKijL,SAAWv+D,EAChB1kH,KAAKkjL,kBAAoBC,EAAA76K,EAA4B+3E,OACrDrgF,KAAKojL,iEAUL,MAAOpjL,MAAKouH,gDAMJxtH,GACR,MAAOZ,MAAKojL,YAAYxiL,yDAYxB,MACIZ,MAAKi6E,YAAY3X,KACb,SAAA+gH,GAAA,MACIA,GAAWr4G,YAAcsY,EAAAlzE,GAClBizK,EAAWC,oEASbj9J,GACjBrmB,KAAKkjL,kBAAoB78J,gDAWzB,MAAOrmB,MAAKkjL,sDASJtiL,EAAMwK,GACd,GAAMm4K,GAAWvjL,KAAKojL,YAAYxiL,EAE9BwK,KAAUm4K,IACVvjL,KAAKojL,YAAYxiL,GAAQwK,EACzBpL,KAAKouH,YAAYx6F,aAAa+C,KAC1BirD,EAAA/hD,6BACA7/B,KACAY,EACA2iL,EACAn4K,wCASR,MAAOpL,MAAKylH,QAAQn7G,qDAQHwgE,GACjB,MAAO9qE,MAAKi6E,YAAY7qC,OAAO,SAAAq7B,GAAA,MAASA,GAAMO,YAAcF,oCAO5D,MAAO9qE,MAAK8gG,qCAOZ,MAAO9gG,MAAK+iL,8CAOZ,MAAO/iL,MAAKulH,kDAOZ,MAAOvlH,MAAKijL,6CAOZ,MAAOjjL,MAAKiiL,8CAOZ,MAAsB,cAAfjiL,KAAK8kH,yCASZ,MAAO9kH,MAAKgjL,+CAWZ,MAAOhjL,MAAKwjL,kBAAkBlgG,EAAAh7E,MAAAmI,IAAA,oBAAArF,MAAA,SAchB0/D,GACd,MAAO9qE,MAAKi6E,YAAY3tB,OACpB,SAAChyB,EAAOmwC,GAAR,MACInwC,KAAUmwC,EAAMO,YAAcF,GAAaL,EAAMqa,mBACrDr0E,IAAA,eAAArF,MAAA,WAOJ,MAAOpL,MAAKwjL,kBAAkBlgG,EAAAlzE,MAAAK,IAAA,UAAArF,MAAA,WAO9B,MAAOpL,MAAK8kH,6CAOZ,MAAO9kH,MAAKglH,oDAQY,GAAhBzgG,GAAgBxZ,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,GAAN,GAClB,OAAO/K,MAAKouH,YAAY36F,KAAKy/D,KAAK6xB,YAAY/kH,KAAK+iL,KAAMx+J,6UC/O3D3hB,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAOJw9K,aAKjB,QAAAA,GAAYj8G,GAAY,GAAAzxB,GAAA/1C,wGAAAyjL,GACpBzjL,KAAKouH,YAAc5mD,EASnBxnE,KAAK0jL,WAEL1jL,KAAKouH,YAAYlmF,iBACb05C,EAAA/gD,YAAmC,iBAAMkV,GAAK4tI,mBAClD3jL,KAAKouH,YAAYlmF,iBACb05C,EAAA9gD,UAAiC,iBAAMiV,GAAK4tI,mBAChD3jL,KAAKouH,YAAYlmF,iBACb05C,EAAA9hD,WAAkC,iBAAMiW,GAAK4tI,sEAQjD,GAAMpyD,GAAYvxH,KAAK0jL,QACjB1gG,GACChjF,KAAKouH,YAAYpqC,eACbhkF,KAAKouH,YAAYhK,uBAAyB,CAEjDmN,KAAcvuC,IACdhjF,KAAK0jL,QAAU1gG,EACfpgF,EAAOyZ,MAAP,iBAA8Bk1G,EAA9B,OAA8CvuC,GAC9ChjF,KAAKouH,YAAYx6F,aAAa+C,KAC1BirD,EAAAtiD,cAAqCiyF,EAAWvuC,mWClC3C4gG,aAMjB,QAAAA,GAAYp8G,iGAAYxnE,KAAA4jL,GACpB5jL,KAAKwnE,WAAaA,EAElBA,EAAWt/B,iBACP27I,EAAApjJ,0BACAzgC,KAAK8jL,YAAYz2K,KAAKrN,OAE1BA,KAAK+jL,SAAW/jL,KAAKwnE,WAAWqb,yDASxBpgF,EAAImpE,IAKP5rE,KAAKwnE,WAAWwc,eACdpY,GAtCiB,IAuChBnpE,IAAOzC,KAAK+jL,UACL/jL,KAAKwnE,WAAWu4C,qBAAqBj7B,WAIpD9kF,KAAKwnE,WAAW5zC,aAAa+C,KACzBktJ,EAAA1kJ,yBACA18B,sWChDNG,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAMJ+9K,aAWjB,QAAAA,GAAY5uJ,EAAgBuzC,EAAO/0B,GAAS,GAAAmC,GAAA/1C,IACxC,aAAAC,EAAA4B,GAAA,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,sCADwCzO,KAAAgkL,IACnC5uJ,IAAmBuzC,EACpB,KAAM,IAAIl6D,WACN,iDACD,IAAI2mB,GAAkBuzC,EACzB,KAAM,IAAIl6D,WACN,oDAsBR,IAnBI2mB,EACAxyB,EAAOyZ,MAAM,qCAEbzZ,EAAOyZ,MAAP,6BAA0CssD,EAA1C,KAKJ3oE,KAAK4nE,SAAW,KAGhB5nE,KAAKikL,cAAgBrwI,EAIrB5zC,KAAKkkL,MAAQ,KAIT9uJ,EACAA,EAAesjE,cAAgB,SAAAvmE,GAI3B,GAAMgyJ,GAAchyJ,EAAMgyG,OAG1BpuF,GAAKquI,eAAeD,GACpBpuI,EAAKmuI,MAAQ,mBAId,IAAIv7G,EAAO,CAEd,GAAM07G,GAAK,GAAI/zJ,WAAUq4C,EAGzB3oE,MAAKokL,eAAeC,GACpBrkL,KAAKkkL,MAAQ,mBAAAxjL,GAAAT,IAAAwQ,IAAA,QAAArF,MAAA,WAgBjB,GAAIpL,KAAK4nE,SAAU,CACf,IACI5nE,KAAK4nE,SAASt2C,QAChB,MAAOhV,IAETtc,KAAK4nE,SAAW,SAAAn3D,IAAA,SAAArF,MAAA,WAUpB,MAAOpL,MAAK4nE,WAA0C,SAA7B5nE,KAAK4nE,SAASx5C,YAChCpuB,KAAK4nE,SAASx5C,aAAekC,UAAUg0J,0CAYtCz7J,EAAIqoB,GACZlxC,KAAKkkB,OACDqgK,aAAc,kBACdC,WAAYtzI,EACZroB,mDAQYzd,GAChB,GAAMq5K,IACFF,aAAc,oBACdvgE,MAAO54G,EAGXpL,MAAKkkB,MAAMugK,GACX7hL,EAAOkB,IAAP,yBAAoCsH,qDAUdu3E,GACtB//E,EAAOkB,IACH,kEACA6+E,GAEJ3iF,KAAKkkB,OACDqgK,aAAc,6BACdG,eAAgB/hG,GAAc,UAAAlyE,IAAA,8BAAArF,MAAA,SAWVu3E,GACxB//E,EAAOkB,IACH,oEACA6+E,GAEJ3iF,KAAKkkB,OACDqgK,aAAc,+BACdI,iBAAkBhiG,GAAc,UAAAlyE,IAAA,qCAAArF,MAAA,SASLw5K,GAC/BhiL,EAAOkB,IAAI,sEACkB8gL,EADlB,WAEX5kL,KAAKkkB,OACDqgK,aAAc,0BACd56G,eAAgBi7G,2CAOTzgD,GAAS,GAAAv7D,GAAA5oE,KACd4zC,EAAU5zC,KAAKikL,aAErB9/C,GAAQ5zG,OAAS,WACb3tB,EAAOsB,KAAQ0kE,EAAKs7G,MAApB,mBAQAtwI,EAAQjd,KAAKkuJ,EAAAv8K,EAAUo6B,oBAG3ByhG,EAAQ1zG,QAAU,SAAAnU,GACd1Z,EAAO0Z,MAAM,iBAAkBA,IAGnC6nH,EAAQtzG,UAAY,SAAAilB,GAAc,GAAXplC,GAAWolC,EAAXplC,KAEf3H,QAEJ,KACIA,EAAMwa,KAAKgK,MAAM7c,GACnB,MAAO4L,GAML,MALA2sD,GAAA3gE,EAAqB+pB,iBAAiB/V,OACtC1Z,GAAO0Z,MACH,4CACA5L,EAAM4L,GAKd,GAAMioK,GAAex7K,EAAIw7K,YAEzB,QAAQA,GACR,IAAK,qCAED,GAAMO,GAA0B/7K,EAAI+7K,uBAEpCliL,GAAOsB,KACH,uCACA4gL,GACJlxI,EAAQjd,KACJkuJ,EAAAv8K,EAAU62B,yBACV2lJ,EACJ,MAEJ,KAAK,wCACD,GAAM9xC,GAAWjqI,EAAIiqI,SACfpwD,EAA0B,SAAf75E,EAAIw4F,MAErB3+F,GAAOsB,KAAP,uCAC2C8uI,EAD3C,aAEQpwD,GACRhvC,EAAQjd,KAAKkuJ,EAAAv8K,EAAU0+B,6BACnBgsG,EAAUpwD,EAEd,MAEJ,KAAK,kBACDhvC,EAAQjd,KACJkuJ,EAAAv8K,EAAU+2B,0BAA2Bt2B,EAAIiF,KACzCjF,EAAIy7K,WAER,MAEJ,KAAK,4BAED,GAAMp7G,GAAiBrgE,EAAIqgE,cAE3BxmE,GAAOsB,KAAK,6BACRklE,EAAgBrgE,GACpB6qC,EAAQjd,KAAKkuJ,EAAAv8K,EAAU2+B,uBACnBmiC,EAAgBrgE,EAEpB,MAEJ,SACInG,EAAOyZ,MAAM,mCAAoCtT,GAMjD6qC,EAAQjd,KAAR,mBAAgC4tJ,EAAgBx7K,KAKxDo7H,EAAQxzG,QAAU,WACd/tB,EAAOsB,KAAK,kBAGZ0kE,EAAKhB,SAAW,MAIpB5nE,KAAK4nE,SAAWu8D,gCAUdsgD,GACF,GAAMtgD,GAAUnkI,KAAK4nE,QAErB,KAAK5nE,KAAK+kL,SACN,KAAM,IAAIr5K,OAAM,oBAGpBy4H,GAAQngH,KAAKT,KAAKkK,UAAUg3J,iCAlO5B,MAAOzkL,MAAKkkL,ouBCpDdthL,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAMJ++K,cAmBjB,QAAAA,GAAAlvI,GAWG,GAVCyyB,GAUDzyB,EAVCyyB,SACAsE,EASD/2B,EATC+2B,WACA/B,EAQDh1B,EARCg1B,UACA6E,EAOD75B,EAPC65B,WACA3C,EAMDl3B,EANCk3B,MACAR,EAKD12B,EALC02B,SACAC,EAID32B,EAJC22B,WACA92C,EAGDmgB,EAHCngB,OACA80C,EAED30B,EAFC20B,MACAiC,EACD52B,EADC42B,wGACD1sE,KAAAglL,EAAA,IAAAjvI,qKAAA/1C,MAAAglL,EAAAhvI,WAAAj1C,OAAAk1C,eAAA+uI,IAAAxkL,KAAAR,KAEsB,KACjB21B,EACA80C,EAC4B,iBAAM10B,GAAKpf,KAAKsuJ,EAAApxI,sBAC5Ci3B,EACA4B,GAPL,OAcC32B,GAAKi3B,MAAQA,EACbj3B,EAAKy2B,SAAWA,EAChBz2B,EAAK02B,WAAaA,EAEdy4G,EAAA58K,EAAelB,kBAGf2uC,EAAK45B,WAAalF,EAAMmC,cAAcmD,OAItCh6B,EAAKovI,aAAe16G,EAAMsE,kBAK1Bh5B,EAAK45B,WAAau1G,EAAA58K,EAAenC,YAAc,KAAOwpE,EAG1D55B,EAAKwyB,SAAWA,EAUhBxyB,EAAKqvI,cAAgBptI,QAAQ4E,UAS7B7G,EAAKsvI,YAAcx4G,EAMnB92B,EAAKuvI,eAKLvvI,EAAKwvI,gBAOLxvI,EAAKyvI,iBAMLzvI,EAAK0vI,cAAkC,KAAlB1vI,EAAKwyB,gBAA8BxyB,EAAKwyB,SAO7DxyB,EAAK2vI,yBAA2B,KAEhC3vI,EAAK4vI,qBAAuB,SAAAn8I,GACxBuM,EAAK0iE,+BAA+BjvE,YAKzBuM,EAAK6sE,WAAWx0F,qBACT2nB,EAAK0vI,eACXj8I,EAAQkG,KAAK,SAAA/uC,GAAA,MAAKA,GAAE4nE,WAAaxyB,EAAK0vI,kBAC9C1vI,EAAKuvI,iBAQTvvI,EAAK+1B,gBAAkB85G,EAAAt9K,EAAS+/D,wBAAwB,YACxDtyB,EAAK8vI,4BAA8B9vI,EAAKm2B,eAAe7+D,KAApB0oC,GACnC6vI,EAAAt9K,EAAS6/B,YACL29I,EAAAx9K,EAAUq/B,4BACVoO,EAAK8vI,8BAGbD,EAAAt9K,EAAS6/B,YACL29I,EAAAx9K,EAAUs/B,oBACVmO,EAAK4vI,sBAET5vI,EAAKgwI,gCAjHNhwI,QA9BcivI,6TAAwBgB,EAAA,GA8BtCjwI,qCA0HC,MAAsC,UAA/B/1C,KAAK4iH,WAAWx0F,YAA0BpuB,KAAKslL,oEAO1B,GAAA18G,GAAA5oE,IAC5B,IAAIA,KAAK6xG,gBAAkB7xG,KAAK0sE,YAAcu5G,EAAA39K,EAAU6iC,OAAQ,CAC5D,GAAM+6I,GACAlmL,KAAKkmL,yBAAyB74K,KAAKrN,KAEzCA,MAAKoxG,YAAY,aAAc,WAC3B,GAAIxoC,EAAKu9G,wBAAyB,CAC9B,GAAMt8J,GAAMhlB,OAAOwwC,YAAYxrB,KAE/B++C,GAAK88G,yBACC14K,WAAWk5K,EAA0B,KAC3Ct9G,EAAKwoC,YAAY,eAAgB,WAC7BxoC,EAAKw9G,sCACLh8G,EAAA9hE,EAAW81B,eACJwqC,EAAKoC,UADZ,IACyBq7G,EAAAhlJ,GACnBj2B,MAAOvG,OAAOwwC,YAAYxrB,MAAQA,SAIpD7pB,KAAKoxG,YAAY,cAAe80E,kEAShClmL,KAAK0lL,2BACLthK,aAAapkB,KAAK0lL,0BAClB1lL,KAAK0lL,yBAA2B,MAEpC1lL,KAAKoxG,YAAY,0BAAgBrzD,gDASjC/9C,KAAKomL,sCACDpmL,KAAKmmL,yBACLnmL,KAAKsmL,kFAQTtmL,KAAK22B,KAAKsuJ,EAAAj6I,oBACV,IAAM3M,GAAer+B,KAAKgrE,UAApB,IAAiCq7G,EAAA3oD,CAEvCtzD,GAAA9hE,EAAW0sB,UAAUmF,UAAUkE,EAC/B,IAAMv6B,IAAQlD,KAAMy9B,EAEhBr+B,MAAK8rE,iBACLhoE,EAAIyiL,gBAAkBvmL,KAAKwtE,oBAE/BpD,EAAA9hE,EAAW00B,QAAQzZ,KAAKkK,UAAU3pB,2DAWP0lC,GAC3B,GAAMihC,GAAQzqE,KAAK4iH,WAIbt0C,EAAS9kC,EAAQkG,KACnB,SAAA/uC,GAAA,MAAKA,GAAEosE,OAAYtC,EAAMsC,KAApB,SAAmCpsE,EAAE8xE,QAAUhI,EAAMgI,OAE1DnE,KACAtuE,KAAKylL,cAAgBn3G,EAAO/F,6CAWzB5yC,GACP6wJ,EAAAxB,EAAAvjL,UAAAu0C,WAAAj1C,OAAAk1C,eAAA+uI,EAAAvjL,WAAA,aAAAzB,MAAAQ,KAAAR,KAAiB21B,GAEbA,GAEA31B,KAAKymL,WAAazmL,KAAK0mL,UACvB9jL,EAAOyZ,MAAP,qBAAkCrc,KAAKymL,WAAvC,OAAwDzmL,OAExD4C,EAAOyZ,MAAP,4BAAyCrc,qCAU7C,MAAOA,MAAK2mL,sBAAel2K,IAAA,SAAArF,MAAA,WAS3B,MAAOpL,MAAK2mL,sBAAel2K,IAAA,iBAAArF,MAAA,SAYhBkvB,GACX,GAAMssJ,GAAW5mL,KAAK6mL,UAAUx5K,KAAKrN,KAAMs6B,EAI3C,OAFAt6B,MAAKolL,cAAgBplL,KAAKolL,cAAcr1H,KAAK62H,EAAUA,GAEhD5mL,KAAKolL,gDAWN9qJ,GAAO,GAAA6uC,GAAAnpE,IACb,IAAIA,KAAK8kF,YAAcxqD,EACnB,MAAO0d,SAAQ4E,SAGnB,IAAI58C,KAAKixG,SACL,MAAOj5D,SAAQ0K,OAAO,GAAIokI,GAAAx+K,EAAgBy+K,EAAAj8I,mBAG9C,IAAIsN,GAAUJ,QAAQ4E,UAGhBoqI,EAAc,iBAAMpkL,GAAOsB,KAAP,QAAAilE,EAAA,KAA6B7uC,GAEvD,IAAIt6B,KAAK8rE,gBACE9rE,KAAK0sE,YAAcu5G,EAAA39K,EAAU8iC,UAC5B85I,EAAA58K,EAAepC,8BACvB8gL,IACIhnL,KAAKyqE,QACLzqE,KAAKyqE,MAAMk0C,SAAWrkF,OAEvB,IAAIA,EACP8d,EAAU,GAAIJ,SAAQ,SAAC4E,EAAS8F,GAC5BskI,IACA79G,EAAK89G,kCACD,WAII99G,EAAK+9G,sBACL/9G,EAAKg+G,cACLh+G,EAAKgoC,WAAW,MAChBv0D,KAEJ8F,SAEL,CACHskI,GAGA,IAAMI,IACF/5G,eAAgBrtE,KAAKqnL,cACrB79I,SAAWohC,EAAAx6D,GACXy8D,WAAY7sE,KAAKsnL,sBAGjBpC,GAAA58K,EAAelB,iBACfgxC,EACMwtI,EAAAt9K,EAAS8jE,kCAAkCrrE,OAAOsmE,UAEhD+/G,GACE/qJ,aAAe0N,MAAO/pC,KAAKmlL,kBAEjCnlL,KAAK2vE,aACLy3G,EAAcz3G,WAAa3vE,KAAK2vE,YAGpCv3B,EACMwtI,EAAAt9K,EAAS+jE,+BAA+B+6G,IAGlDhvI,EAAQ2X,KAAK,SAAAw3H,GACT,GAAMz8G,GAAY3B,EAAK6B,UACjBw8G,EACAtC,EAAA58K,EAAelB,iBACXmgL,EAAY73I,KACV,SAAAxrC,GAAA,MAAQA,GAAKumE,MAAMsC,OAASjC,IAC9By8G,EAAY73I,KACV,SAAAxrC,GAAA,MAAQA,GAAK4mE,YAAcA,GAEvC,KAAI08G,EAaA,KAAM,IAAIV,GAAAx+K,EAAgBy+K,EAAAh8I,sBAM9B,OAlBIo+B,GAAKgoC,WAAWq2E,EAAW7xJ,QAC3BwzC,EAAKsB,MAAQ+8G,EAAW/8G,MAIpBtB,EAAKuD,YAAc86G,EAAW96G,YAC9B9pE,EAAOwF,KAAP+gE,EAAA,yCAEIA,EAAKuD,UAAW86G,EAAW96G,WAC/BvD,EAAKuD,UAAY86G,EAAW96G,WAMpCvD,EAAK6nC,WAAa7nC,EAAK6nC,WAAWjnG,IAC9B,SAAA09K,GAAA,MAAQ7B,GAAAt9K,EAAS0lE,kBAAkBy5G,EAAMt+G,EAAKxzC,UAE3CwzC,EAAKu+G,mCAIpB,MAAOtvI,GACF2X,KAAK,iBAAMoZ,GAAKw+G,gBAAgBrtJ,KAChCy1B,KAAK,iBAAMoZ,GAAKxyC,KAAKsuJ,EAAAvkJ,mBAAVyoC,8DASa,GAAAkP,GAAAr4E,IAC7B,OAAKA,MAAKwnE,WAcH,GAAIxvB,SAAQ,SAAC4E,EAAS8F,GACzB21B,EAAK7Q,WAAWw7C,uBAAhB3qC,GACKtoB,KAAKnT,EAAS,SAAAtgC,GAAA,MAASomC,GAAO,GAAIh3C,OAAM4Q,QAftC07B,QAAQ4E,oEA0BW82B,EAAiBC,GAC1C3zE,KAAKwnE,WAKVxnE,KAAKwnE,WAAW27C,wBAAwBnjH,MAAM+vD,KAC1C2jB,EACA,SAAAp3D,GAAA,MAASq3D,GAAc,GAAIjoE,OAAM4Q,MANjCo3D,4CAgBQpI,GAAM,GAAAk4C,GAAAxjH,IAClB,OAAKA,MAAKwnE,YAAexnE,KAAKwnE,WAAWg1C,KAIlC,GAAIxkE,SAAQ,SAAA4E,GACf4mE,EAAKh8C,WAAWg1C,KACZgH,EAAK13C,eACC,eACA,gBAAgBR,EAAM1uB,KAPzB5E,QAAQ4E,4CAoBb,GAAA+nE,GAAA3kH,KACFo4C,EAAUJ,QAAQ4E,SAmBtB,OAjBI58C,MAAKwnE,aACLpvB,EAAUp4C,KAAKwnE,WAAWytC,YAAYj1G,OAGtCA,KAAK21B,SACL31B,KAAKmnL,cACLnnL,KAAK4nL,UAGThC,EAAAt9K,EAAS4tB,eAAe4vJ,EAAAx9K,EAAUs/B,oBAC9B5nC,KAAK2lL,sBAEL3lL,KAAK6lL,6BACLD,EAAAt9K,EAAS4tB,eAAe4vJ,EAAAx9K,EAAUq/B,4BAC9B3nC,KAAK6lL,6BAGNztI,EAAQ2X,KAAK,iBAAAy2H,GAAAxB,EAAAvjL,UAAAu0C,WAAAj1C,OAAAk1C,eAAA+uI,EAAAvjL,WAAA,UAAAkjH,GAAAnkH,KAAAmkH,uCAYpB,QAAK3kH,KAAK21B,UAGN31B,KAAK6xG,gBAAmB7xG,KAAK4iF,aAIzB5iF,KAAKyqE,OAAUzqE,KAAKyqE,MAAMk0C,gDASvBn3C,GACXxnE,KAAKwnE,WAAaA,CAMlB,KAAK,GAAInnE,GAAI,EAAGA,EAAIL,KAAKgxG,WAAWhuG,OAAQ3C,IACxCL,KAAKwxG,wBAAwBxxG,KAAKgxG,WAAW3wG,sCAUjD,YAAOoQ,IAAA,cAAArF,MAAA,WASP,MAAOpL,MAAKylL,eAAiBzlL,KAAKuoE,oDAUlC,MAAOvoE,MAAKwnE,YAAcxnE,KAAKwnE,WAAWqb,4DAUrBrrD,EAAKmkG,GAAW,GAAAxW,GAAAnlH,IACjC27H,GAAY,IACZ37H,KAAKulL,gBAET,IAAMj6F,GAAqB9zD,EAAI8xF,oBAE3BtpH,MAAKwlL,eAAwC,cAAvBl6F,IACtBt+E,WAAW,WACFm4G,EAAKogE,eACN3iL,EAAOwF,KAAP+8G,EAAA,+CACMA,EAAK0iE,YAGX1iE,EAAKmhE,+BAEV,KACHtmL,KAAKwlL,qBAAgB/0K,IAAA,sBAAArF,MAAA,WAWzB,GAAIpL,KAAK6xG,gBAAkB7xG,KAAK0sE,YAAcu5G,EAAA39K,EAAU6iC,OAAQ,CAQ5D,GAAI28I,SAEJ,KACIA,EAAgB9nL,KAAKyqE,MAAMmC,cAC7B,MAAO3sE,IAKT,MAAI6nL,IAAiB,cAAgBA,GAC1BA,EAAcj7G,oBAGd7sE,KAAKqlL,YACLrlL,KAAKqlL,YAMT0C,EAAAz/K,EAAiB+mE,4CAmB5BrvE,KAAKgoL,wBAEL,KACIpC,EAAAt9K,EAASumE,gBAAgB7uE,KAAK21B,QADlC,QAGI31B,KAAKgoL,6BAAwBv3K,IAAA,gBAAArF,MAAA,WAkB7BpL,KAAK6xG,gBACE7xG,KAAK0sE,YAAcu5G,EAAA39K,EAAU6iC,QACO,kBAA7BnrC,MAAKyqE,MAAMw9G,gBACzBjoL,KAAKyqE,MAAMw9G,gBAEXjoL,KAAKqlL,YACCrlL,KAAKqlL,cAAgB0C,EAAAz/K,EAAiBwpG,YAClCi2E,EAAAz/K,EAAiB+mE,KACjB04G,EAAAz/K,EAAiBwpG,6DAU/B,SAAK9xG,KAAK6xG,gBACC7xG,KAAKgoL,uBACLhoL,KAAK0sE,YAAcu5G,EAAA39K,EAAU8iC,SAIhCprC,KAAKwtE,+DAeb,QAAKxtE,KAAK21B,QAWH31B,KAAK21B,OAAOskD,YAAY3X,KAAK,SAAAmI,GAAA,QAC7B,cAAgBA,IAA+B,SAArBA,EAAMr8C,YACzB,SAAWq8C,SAAUA,EAAMnwC,4CASzC,oBAAqBt6B,KAAKgtE,MAA1B,IAAmChtE,KAAKgrE,UAAxC,QAAAnpE,OAAAyG,EAAAiG,IAAA/N,KAAAqB,EAAA,4CAAA5B,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAA,GAAAsI,GAAAnH,EAAA,GAAAf,GAAAe,IAAAmH,GAAAnH,EAAA,MAAAN,EAAAM,IAAAf,GAAAiI,EAAAlH,EAAA,KAAAQ,EAAAR,EAAA,KAAAV,EAAAU,EAAA,KAAAszB,EAAAtzB,EAAA,IAAAd,EAAAc,IAAAszB,GAAA/zB,EAAAS,EAAA,IAAAO,EAAA,2BAAA1B,EAAA4B,GAAA,GAAA2L,MAAAG,QAAA1N,GAAA,MAAAA,EAAA,IAAAi3B,OAAAC,WAAAp2B,QAAAd,GAAA,gBAAAA,EAAA4B,GAAA,GAAAT,MAAAmH,GAAA,EAAAlI,GAAA,EAAAS,MAAA,cAAAwH,GAAA1G,EAAA3B,EAAAi3B,OAAAC,cAAA5uB,GAAAD,EAAA1G,EAAAw1B,QAAAC,QAAAj2B,EAAAyB,KAAAyF,EAAA8C,QAAAvJ,GAAAT,EAAA4B,SAAAnB,GAAA0G,GAAA,UAAAtI,GAAAI,GAAA,EAAAS,EAAAb,EAAA,aAAAsI,GAAA3G,EAAA61B,QAAA71B,EAAA61B,SAAA,WAAAp3B,EAAA,KAAAS,IAAA,MAAAM,IAAAnB,EAAA4B,EAAA,UAAA4M,WAAA,4DAAAiP,EAAA,mBAAAzd,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MC9uBFe,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAEnBiiL,GACFtoC,OAAQ,SACRuoC,eAAgB,mBAChBC,gBAAiB,oBACjBvgG,OAAQ,UAGNwgG,GACFprF,IAAK,MACLqrF,UAAW,YACXntF,SAAU,YAGRotF,sBAA4B1c,EAAAvjK,EAAW0nC,UAAU,IAAO,OAazCw4I,cAGjB,QAAAA,GAAYzyF,iGAAU/1F,KAAAwoL,EAAA,IAAAzyI,qKAAA/1C,MAAAwoL,EAAAxyI,WAAAj1C,OAAAk1C,eAAAuyI,IAAAhoL,KAAAR,MAAA,OAGlB4C,GAAOyZ,MAAM,0BAA2B05E,GAIxChgD,EAAK0yI,0BAIL1yI,EAAK2yI,WAIL3yI,EAAK4yI,eAAiB,KAItB5yI,EAAK6yI,aAAe,KAMpB7yI,EAAK8yI,mBAAqBR,EAAqBprF,IAI/ClnD,EAAK+yI,cAAgB,KAIrB/yI,EAAKgzI,mBAAqB,KAI1BhzI,EAAKizI,kBAAoB,KAUzBjzI,EAAKkzI,iBAAmB,GAAIt1J,KAI5BoiB,EAAKmzI,MAAQ,GAAIv1J,KAIjBoiB,EAAKozI,mBAAqB,KAM1BpzI,EAAKqzI,eAAiB,GAAIz1J,KAe1BoiB,EAAKszI,kBAAoB,GAAI11J,KAG7BoiB,EAAKuzI,kBACD7mL,GAAI8mL,EAAAjhL,EAAQwnC,eACZ7rC,QAAS,GAKb8xC,EAAKyzI,gBAAkBtB,EAAkBtoC,OAGzC7pG,EAAK0zI,gBAAgB1zF,GAGrBhgD,EAAK2zI,iBAAiB3zI,EAAK6yI,cAG3B7yI,EAAK4zI,kBAAkB5zI,EAAK+yI,eA/FV/yI,QAHLyyI,6TAA8BoB,EAAAthL,EAAMuhL,aAG/B9zI,2CA8JN3I,GACZ,GAAI08I,UACAr9K,SACA6X,QAEJ,KAAK8oB,EACD,KAAM,IAAI3+B,WAAU,oBAGxB,IAAoB,IAAhB1D,UAAA/H,QAAA,IAAA+H,UAAA/H,OAAA,GACA8mL,SACG,CAKH,GAJAA,KACAr9K,0CACA6X,0CAEwB,kBAAb7X,GACP,KAAM,IAAIgC,WAAU,mBAGxB,IAAuB,kBAAZ6V,GACP,KAAM,IAAI7V,WAAU,mBAM5B,GAFA7L,EAAOyZ,MAAM,+BAAgC+wB,GAEzC08I,EACA,MAAO9pL,MAAK+pL,iBAAiB38I,EAGjCptC,MAAK+pL,iBAAiB38I,GACjB2iB,KAAK,iBAAMtjD,OACX2pD,MAAM,SAAA95C,GAAA,MAASgI,GAAQhI,uCAQtBqZ,GACN/yB,EAAOyZ,MAAM,eAEbrc,KAAKgqL,WAAWr0J,mCAOhB,IAAI31B,KAAK0oL,QAAT,CAIA1oL,KAAK0oL,WAEL9lL,EAAOyZ,MAAM,WAEbrc,KAAKiqL,mCAAmC/B,EAAkBrgG,OAI1D,KACI7nF,KAAK4oL,aAAat3J,QACpB,MAAOhV,GACL1Z,EAAOwF,KAAP,8BAA0CkU,GAI9C,IACItc,KAAK8oL,cAAczwJ,OACrB,MAAO/b,GACL1Z,EAAOwF,KAAP,8BAA0CkU,GAI9C,IACItc,KAAK2oL,eAAetwJ,OACtB,MAAO/b,GACL1Z,EAAOwF,KAAP,+BAA2CkU,GA9B3C,GAAAsa,MAAAC,KAAAC,QAAA,KAkCJ,OAAAC,GAAAC,EAAmBh3B,KAAKipL,iBAAiBhyJ,SAAzCC,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAmD,IACzCy9D,GADyCt9D,EAAA3rB,MACxBipF,SAEvB,KACIA,EAAUh8D,OACZ,MAAO/b,GACL1Z,EAAOwF,KAAP,2BAAuCkU,KAxC3C,MAAAkK,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IA4CJ92B,KAAKipL,iBAAiBl5D,OA5ClB,IAAAr4F,MAAAC,KAAAC,QAAA,KA+CJ,OAAAC,GAAAC,EAAmB93B,KAAKqpL,kBAAkBpyJ,SAA1CC,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAoD,IAC1C48D,GAD0Cz8D,EAAAzsB,MACvBkpF,WAEzB,KACIA,EAAYj8D,OACd,MAAO/b,GACL1Z,EAAOwF,KAAP,6BAAyCkU,KArD7C,MAAAkK,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAyDJ53B,KAAKqpL,kBAAkBt5D,QAGvB/vH,KAAKopL,eAAer5D,gDAgBpB,GAAI+5D,UACA7rK,SACAxR,SACA6X,QAEJ,IAAIvZ,UAAK/H,QAAU,EACf8mL,KACA7rK,8CACG,CAMH,GALA6rK,KACAr9K,0CACA6X,0CACArG,0CAEwB,kBAAbxR,GACP,KAAM,IAAIgC,WAAU,mBAGxB,IAAuB,kBAAZ6V,GACP,KAAM,IAAI7V,WAAU,mBAM5B,GAFA7L,EAAOyZ,MAAM,0BAA2B4B,GAEpC6rK,EACA,MAAO9pL,MAAKkqL,cAAcjsK,EAG9Bje,MAAKkqL,cAAcjsK,GACd8xC,KAAK,SAAA/hB,GAAA,MAAQvhC,GAASuhC,KACtBooB,MAAM,SAAA95C,GAAA,MAASgI,GAAQhI,iDAU5B,KAHA1Z,GAAOyZ,MAAM,uBAGP,GAAI3Q,OAAM,gDAAA+E,IAAA,cAAArF,MAAA,WAgBhB,GAAI0+K,UACA7rK,SACAxR,SACA6X,QAEJ,IAAIvZ,UAAK/H,QAAU,EACf8mL,KACA7rK,8CACG,CAMH,GALA6rK,KACAr9K,0CACA6X,0CACArG,0CAEwB,kBAAbxR,GACP,KAAM,IAAIgC,WAAU,mBAGxB,IAAuB,kBAAZ6V,GACP,KAAM,IAAI7V,WAAU,mBAM5B,GAFA7L,EAAOyZ,MAAM,yBAA0B4B,GAEnC6rK,EACA,MAAO9pL,MAAKmqL,aAAalsK,EAG7Bje,MAAKmqL,aAAalsK,GACb8xC,KAAK,SAAA/hB,GAAA,MAAQvhC,GAASuhC,KACtBooB,MAAM,SAAA95C,GAAA,MAASgI,GAAQhI,+CAQ5B,MAAO9O,OAAMQ,KAAKhO,KAAKipL,iBAAiBhyJ,UACnCltB,IAAI,SAAA7F,GAAA,MAAQA,GAAKyxB,SACjByZ,OAAO,SAACj3B,EAAM8wB,EAAK6L,GAAZ,MAAoBA,GAAI/vC,QAAQoT,KAAU8wB,+CAQtD,MAAOz7B,OAAMQ,KAAKhO,KAAKopL,eAAenyJ,6CAgBtC,GAAI6yJ,UACAzzF,SACA5pF,SACA6X,QAuBJ,IArBuB,mBAAnBvZ,UAAA/H,QAAA,SAAA+H,UAAA,KACA++K,KACAr9K,0CACA6X,2CAC0B,mBAAnBvZ,UAAA/H,QAAA,SAAA+H,UAAA,KACP++K,KACAzzF,0CACA5pF,0CACA6X,4CAEAwlK,KACAzzF,2CAGCyzF,GAAexlK,IAChBA,EAAU,SAAAhI,GACN1Z,EAAO0Z,MAAP,sBAAmCA,GACnC1Z,EAAO0Z,MAAMA,EAAMV,SAIvBkuK,EACA,MAAO9pL,MAAKoqL,UAAU/zF,EAG1Br2F,MAAKoqL,UAAU/zF,GACVtmC,KAAK,SAAAxyB,GAAA,MAAS9wB,GAAS8wB,KACvB64B,MAAM,SAAA95C,GAAA,MAASgI,GAAQhI,0CAQnBqZ,GACT/yB,EAAOyZ,MAAM,kBAEbrc,KAAKqqL,cAAc10J,+CAeHqY,GAChB,GAAI87I,UACAr9K,SACA6X,QAEJ,KAAK0pB,EACD,KAAM,IAAIv/B,WAAU,sBAGxB,IAAoB,IAAhB1D,UAAA/H,QAAA,IAAA+H,UAAA/H,OAAA,GACA8mL,SACG,CAKH,GAJAA,KACAr9K,0CACA6X,0CAEwB,kBAAb7X,GACP,KAAM,IAAIgC,WAAU,mBAGxB,IAAuB,kBAAZ6V,GACP,KAAM,IAAI7V,WAAU,mBAM5B,GAFA7L,EAAOyZ,MAAM,8BAA+B2xB,GAExC87I,EACA,MAAO9pL,MAAKsqL,qBAAqBt8I,EAGrChuC,MAAKsqL,qBAAqBt8I,GACrB+hB,KAAK,iBAAMtjD,OACX2pD,MAAM,SAAA95C,GAAA,MAASgI,GAAQhI,kDAeX0xB,GACjB,GAAI87I,UACAr9K,SACA6X,QAEJ,KAAK0pB,EACD,KAAM,IAAIv/B,WAAU,sBAGxB,IAAoB,IAAhB1D,UAAA/H,QAAA,IAAA+H,UAAA/H,OAAA,GACA8mL,SACG,CAKH,GAJAA,KACAr9K,0CACA6X,0CAEwB,kBAAb7X,GACP,KAAM,IAAIgC,WAAU,mBAGxB,IAAuB,kBAAZ6V,GACP,KAAM,IAAI7V,WAAU,mBAM5B,GAFA7L,EAAOyZ,MAAM,+BAAgC2xB,GAEzC87I,EACA,MAAO9pL,MAAKuqL,sBAAsBv8I,EAGtChuC,MAAKuqL,sBAAsBv8I,GACtB+hB,KAAK,iBAAMtjD,OACX2pD,MAAM,SAAA95C,GAAA,MAASgI,GAAQhI,8CAQf8wB,GACb,MAAIptC,MAAK0oL,QACE1wI,QAAQ0K,OACX,GAAI8nI,GAAAliL,EAAkB,6BAMvB0vC,QAAQ0K,OAAO,GAAIh3C,OAAM,uCAAA+E,IAAA,aAAArF,MAAA,SAOzBuqB,GACP,GAAI31B,KAAK0oL,QACL,KAAM,IAAI8B,GAAAliL,EAAkB,2BAFjB,IAAAwwB,MAAAC,KAAAC,QAAA,KAMf,OAAAC,GAAAC,EAAoBvD,EAAOskD,YAA3B/iD,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,KAAwC,IAA7B2xC,GAA6BxxC,EAAA7tB,KAEpC,IAAyB,UAArBq/D,EAAMr8C,WAOV,GAAIpuB,KAAKipL,iBAAiBzwJ,IAAIiyC,EAAMhoE,IAChCG,EAAOwF,KAAK,iDADhB,CAMA,GAAMisF,GAAY,GAAIyI,cAAaryB,EAAOzqE,KAAK2oL,eAG/C3oL,MAAKipL,iBAAiBzzJ,IAAIi1C,EAAMhoE,IAC5B4xF,YACA1+D,eAjBA/yB,GAAOwF,KAAK,oCATL,MAAAoe,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,IAAA,GAAAI,MAAAC,KAAAC,QAAA,KA+Bf,OAAAC,GAAAC,EAAgCx5B,KAAKipL,iBAArC/xJ,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,KAAuD,IAAA0c,GAAAvc,EAAAnuB,MAAAujG,EAAAC,EAAA94D,EAAA,GAA1C67D,EAA0ChD,EAAA,GAAjCzqG,EAAiCyqG,EAAA,GAC7ClkC,EAAQvmE,EAAKmwF,UAAU5pB,KAG7B,IAAyB,UAArBA,EAAMr8C,WAAwB,CAC9BxrB,EAAOwF,KACH,+DACcqiE,EAAMhoE,GAExB,KACIyB,EAAKmwF,UAAUh8D,OACjB,MAAO/b,GACL1Z,EAAOwF,KAAP,2BAAuCkU,GAI3Ctc,KAAKipL,iBAAiB9wJ,OAAOsyC,EAAMhoE,QAKhC,IAAIyB,EAAKyxB,SAAWA,IACnBA,EAAO80J,aAAa94E,GAAU,CAClC/uG,EAAOwF,KACH,6DACcupG,EAElB,KACIztG,EAAKmwF,UAAUh8D,OACjB,MAAO/b,GACL1Z,EAAOwF,KAAP,2BAAuCkU,GAI3Ctc,KAAKipL,iBAAiB9wJ,OAAOsyC,EAAMhoE,MAjE5B,MAAA+jB,GAAA6S,KAAAC,EAAA9S,EAAA,aAAA4S,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,WAAA4B,EAAA,KAAAC,IAsEft5B,KAAK0qL,+DAQKzsK,GACV,GAAIje,KAAK0oL,QACL,MAAO1wI,SAAQ0K,OACX,GAAI8nI,GAAAliL,EAAkB,4BAG9B,IAAItI,KAAKi5F,iBAAmBivF,EAAkBE,gBAC1C,MAAOpwI,SAAQ0K,OAAO,GAAI8nI,GAAAliL,EAAJ,2BACStI,KAAKi5F,eADd,KAK1B,IAAMF,GAAmB/4F,KAAK2qL,wBAAwB,SAGtD,OAAO3yI,SAAQ4E,QAAQm8C,mDAQH/6E,GA2EpB,QAAS4sK,GAAgBx2F,EAAKrnB,GAC1B,GAAM89G,KAKN,QAFAA,EAAY7sK,KAAO+uD,EAEXA,GACR,IAAK,QACL,IAAK,QACD89G,EAAYtrK,SAAW,YACvBsrK,EAAYv+I,KAAO,EACnBu+I,EAAYv8I,UAAY,UACxB,MACJ,KAAK,cACDu8I,EAAYtrK,SAAW,YACvBsrK,EAAYv+I,KAAO,EACnBu+I,EAAYz5I,SAAW,IACvBy5I,EAAYv8I,UAAY,WAK5Bu8I,EAAY9gK,YACRyjB,GAAI,YACJvpC,QAAS,GAIb4mL,EAAYz2F,IAAMA,EAGlBy2F,EAAYC,SAAWC,EAAmBx4F,iBAC1Cs4F,EAAYG,OAASD,EAAmBp+F,SACxCk+F,EAAY7b,aAjCoB,IAAAzzI,MAAAC,KAAAC,QAAA,KAmChC,OAAAC,GAAAC,EAAwBsvJ,EAAxB/zJ,OAAAC,cAAAoE,GAAAG,EAAAC,EAAAvE,QAAAC,MAAAkE,KAA4C,IAAjC6R,GAAiC1R,EAAAtwB,MAClC8/K,IAGNA,GAAgB39I,UAAY,EAC5B29I,EAAgB59I,WAAaF,EAAUE,WACvC49I,EAAgB19I,GAAKJ,EAAUI,GAC/B09I,EAAgB5+I,KAAOc,EAAUd,KACjC4+I,EAAgBpjK,SAAWslB,EAAUtlB,SACrCojK,EAAgB5oL,UACV8qC,EAAU7tB,SAASxE,cACzBmwK,EAAgBltK,KAAOovB,EAAUpvB,KACC,QAA9BktK,EAAgB5oL,YAChB4oL,EAAgBx9I,QAAUN,EAAUmjD,SAGxCs6F,EAAY7b,WAAWnsK,KAAKqoL,IAnDA,MAAA1kK,GAAAgV,KAAAC,EAAAjV,EAAA,aAAA+U,GAAAI,EAAAlE,QAAAkE,EAAAlE,SAAA,WAAA+D,EAAA,KAAAC,IAiEhC,GAXAovJ,EAAYM,gBAAkB,oBAK1BN,EAAYp7E,MADH,UAATzxF,EACoB,UAE8B,WAA9Bq+E,EAAqBrK,KACnC,SAAW,UAGR,UAATjlB,GAA6B,UAATA,EAAkB,CACtC89G,EAAY75I,OACZ65I,EAAY/4I,UACZ+4I,EAAYj5I,OAGZ,IAAMR,MANgC9U,KAAAC,KAAAC,QAAA,KAStC,OAAAC,GAAAC,EAAoB49D,EAAkB3H,OAAtCz7D,OAAAC,cAAAmF,GAAAG,EAAAC,EAAAtF,QAAAC,MAAAiF,KAA8C,IAAnC2U,GAAmCxU,EAAArxB,KAC1C,KAAI6lC,EAAM87B,MAAQ97B,EAAM87B,OAASA,EAAjC,CAIA37B,EAASvuC,KAAKouC,EAAM4/C,qBAEpB,IAAMu6F,IACFn6I,MAAOA,EAAMrwC,KACbswC,QAASD,EAAM4/C,qBACfshB,KAAMlhE,EAAMy/C,UAUhB,IAPIz/C,EAAM0/C,YAAc,IACpBy6F,EAAUl5E,SAAWjhE,EAAM0/C,aAG/Bk6F,EAAY75I,IAAInuC,KAAKuoL,GAGjBn6I,EAAMkgD,WAAY,CAClB,GAAMk6F,IACFrhL,OAAQ,GACRknC,QAASD,EAAM4/C,sBAHDy6F,KAAAC,KAAAC,QAAA,KAMlB,OAAAC,GAAAC,EAAmB3qL,OAAOg3B,KAAKkZ,EAAMkgD,YAArCj6D,OAAAC,cAAAm0J,GAAAG,EAAAC,EAAAt0J,QAAAC,MAAAi0J,KAAkD,IAAvC1qL,GAAuC6qL,EAAArgL,KAE1CigL,GAAUrhL,SACVqhL,EAAUrhL,QAAU,KAIxBqhL,EAAUrhL,QACApJ,EADV,IACkBqwC,EAAMkgD,WAAWvwF,IAdrB,MAAA4lB,GAAA+kK,KAAAC,EAAAhlK,EAAA,aAAA8kK,GAAAI,EAAAj0J,QAAAi0J,EAAAj0J,SAAA,WAAA8zJ,EAAA,KAAAC,IAiBdH,EAAUrhL,QACV6gL,EAAYj5I,KAAK/uC,KAAKwoL,GAtCY,GAAAM,MAAAC,KAAAC,QAAA,KA2C1C,OAAAC,GAAAC,GAAiB96I,EAAMugD,kBAAvBt6D,OAAAC,cAAAw0J,GAAAG,EAAAC,EAAA30J,QAAAC,MAAAs0J,KAA2C,IAAhCl6F,GAAgCq6F,EAAA1gL,KACvCy/K,GAAY/4I,OAAOjvC,MACfquC,QAASD,EAAM4/C,qBACf8e,QAASle,EAAGH,kBACZtzE,KAAMyzE,EAAGzzE,QA/CyB,MAAAwI,GAAAolK,KAAAC,EAAArlK,EAAA,aAAAmlK,GAAAI,EAAAt0J,QAAAs0J,EAAAt0J,SAAA,WAAAm0J,EAAA,KAAAC,OATR,MAAArlK,GAAA+V,KAAAC,EAAAhW,EAAA,aAAA8V,GAAAI,EAAAjF,QAAAiF,EAAAjF,SAAA,WAAA8E,EAAA,KAAAC,IA8Dd,IAApB4U,EAASpuC,QACT6nL,EAAYz5I,SAAW,IACvBy5I,EAAYv+I,KAAO,EACnBu+I,EAAYv8I,UAAY,YAExBu8I,EAAYz5I,SAAWA,EAAS3mC,KAAK,KAIzCogL,EAAY37I,SACZ27I,EAAYt7I,aAxE0B,IAAArS,MAAAC,KAAAC,QAAA,KA2EtC,OAAAC,GAAAC,EAAmB0uJ,EAAgB/0J,SAAnCC,OAAAC,cAAA+F,GAAAG,EAAAC,EAAAlG,QAAAC,MAAA6F,KAA6C,IAAlCh5B,GAAkCm5B,EAAAjyB,MACnCipF,EAAYnwF,EAAKmwF,UACjB3lB,EAAWxqE,EAAKyxB,OAAOlzB,GACvBgoE,EAAQ4pB,EAAU5pB,KAGxB,IAAyB,UAArBA,EAAMr8C,YAINq8C,EAAMsC,OAASA,EAAnB,CAKK7oE,EAAKs2B,OACNt2B,EAAKs2B,KAAO+uJ,EAAAjhL,EAAQwnC,eAIxB,IAAMm8I,GAAYC,GAA8B,UAAfzhH,EAAMsC,IAGnCk/G,KAAc/nL,EAAKioL,UACnBjoL,EAAKioL,QAAUjoL,EAAKs2B,KAAO,GAG/BqwJ,EAAY37I,MAAMrsC,MACdyT,UAAW,QACX7T,GAAIyB,EAAKs2B,KACTpvB,MAAOm9K,IAGXsC,EAAY37I,MAAMrsC,MACdyT,UAAW,OACX7T,GAAIyB,EAAKs2B,KACTpvB,MAAUsjE,EAAV,IAAsBjE,EAAMhoE,KAGhCooL,EAAY37I,MAAMrsC,MACdyT,UAAW,UACX7T,GAAIyB,EAAKs2B,KACTpvB,MAAOsjE,IAGXm8G,EAAY37I,MAAMrsC,MACdyT,UAAW,QACX7T,GAAIyB,EAAKs2B,KACTpvB,MAAOq/D,EAAMhoE,KAGbwpL,IACApB,EAAY37I,MAAMrsC,MACdyT,UAAW,QACX7T,GAAIyB,EAAKioL,QACT/gL,MAAOm9K,IAGXsC,EAAY37I,MAAMrsC,MACdyT,UAAW,OACX7T,GAAIyB,EAAKioL,QACT/gL,MAAUsjE,EAAV,IAAsBjE,EAAMhoE,KAGhCooL,EAAY37I,MAAMrsC,MACdyT,UAAW,UACX7T,GAAIyB,EAAKioL,QACT/gL,MAAOsjE,IAGXm8G,EAAY37I,MAAMrsC,MACdyT,UAAW,QACX7T,GAAIyB,EAAKioL,QACT/gL,MAAOq/D,EAAMhoE,KAGjBooL,EAAYt7I,WAAW1sC,MACnB+sC,UAAW,MACXV,MAAUhrC,EAAKs2B,KAAf,IAAuBt2B,EAAKioL,aAzJF,MAAA3lK,GAAA2W,KAAAC,EAAA5W,EAAA,aAAA0W,GAAAI,EAAA7F,QAAA6F,EAAA7F,SAAA,WAAA0F,EAAA,KAAAC,IA+JtCytJ,EAAY7gD,MA/J0B,IAAAxsG,MAAAC,KAAAC,QAAA,KAiKtC,OAAAC,IAAAC,GAAwB08D,EAAkB1H,iBAA1C17D,OAAAC,cAAAqG,GAAAG,GAAAC,GAAAxG,QAAAC,MAAAmG,KAA4D,IAAjDo1E,IAAiDj1E,GAAAvyB,KACpDwnG,IAAU7lC,MAAQ6lC,GAAU7lC,OAASA,GAIzC89G,EAAY7gD,IAAInnI,MACZuI,MAAOwnG,GAAU5hB,YACjBzkF,IAAKqmG,GAAUrmG,OAxKe,MAAAia,GAAAiX,KAAAC,EAAAlX,EAAA,aAAAgX,GAAAI,GAAAnG,QAAAmG,GAAAnG,SAAA,WAAAgG,EAAA,KAAAC,IA6KtCmtJ,EAAYuB,QAAU,WAGtBvB,EAAYwB,UAAY,aAI5BC,EAAUlgJ,MAAMvpC,KAAKgoL,GA/TzB,GAAMyB,MACAvB,EAAqB/qL,KAAK4oL,aAAa10F,qBACvC+2F,EAAqBjrL,KAAK4oL,aAAa2D,qBACvCC,EAAsBxsL,KAAK2oL,eAAez0F,qBAC1CmI,EAAuBr8F,KAAK2oL,eAAe8D,sBAC3CnyF,EAAoBt6F,KAAK+oL,mBACzBiD,EAAkBhsL,KAAKipL,gBAGhB,WAATjrK,GACAhe,KAAKspL,iBAAiBrlL,UAI1BqoL,EAAUroL,QAAU,EACpBqoL,EAAUjvB,QACNjrD,QAAS,YACTs6E,MAAO,EACPC,QAAS,KACTh4I,UAAW30C,KAAKspL,iBAAiB7mL,GACjCmqL,eAAgB5sL,KAAKspL,iBAAiBrlL,QACtCqwC,SAAU,0BAEdg4I,EAAU1rL,KAAO,IACjB0rL,EAAUh3I,QACN1jB,MAAO,EACPyG,KAAM,GAEVi0J,EAAUO,cACNC,SAAU,MACV9nF,MAAO,KAEXsnF,EAAUx8E,SAEFi9E,KAAMv/K,MAAMQ,KAAKhO,KAAKkpL,MAAMnxJ,QAAQttB,KAAK,KACzCuT,KAAM,WAGdsuK,EAAUlgJ,SAGVkgJ,EAAUr/I,aACNl8B,KAAMy7K,EAAoBv6F,aAAa,GAAG7mF,MAC1C4S,KAAMwuK,EAAoBv6F,aAAa,GAAGC,UAI9C,IAAIg6F,MAhDsBzxJ,KAAAC,KAAAC,QAAA,KAkD1B,OAAAC,GAAAC,EAAoBy/D,EAAkB3H,OAAtCz7D,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,KAA8C,IAAnCwW,GAAmCrW,EAAAxvB,KAC1C,IAAmB,UAAf6lC,EAAM87B,MAAmC,QAAf97B,EAAMrwC,KAAgB,CAChDsrL,IACA,SArDkB,MAAA1lK,GAAAkU,KAAAC,EAAAnU,EAAA,aAAAiU,GAAAI,EAAApD,QAAAoD,EAAApD,SAAA,WAAAiD,EAAA,KAAAC,IAAA,GAAAI,MAAAC,KAAAC,QAAA,KA0D1B,OAAAC,GAAAC,EAA4Bn7B,KAAKkpL,MAAjChyJ,OAAAC,cAAA4D,GAAAG,EAAAC,EAAA/D,QAAAC,MAAA0D,KAAwC,IAAAiyJ,GAAA9xJ,EAAA9vB,MAAA6hL,EAAAr+E,EAAAo+E,EAAA,GAA3B54F,EAA2B64F,EAAA,GAAtBlgH,EAAsBkgH,EAAA,EACpCrC,GAAgBpqL,KAAKR,KAAMo0F,EAAKrnB,IA3DV,MAAAvmD,GAAAwU,KAAAC,EAAAzU,EAAA,aAAAuU,GAAAI,EAAA1D,QAAA0D,EAAA1D,SAAA,WAAAuD,EAAA,KAAAC,IA+D1B,GAAM89D,GAAmB,GAAIm0F,GAAA5kL,GACzB0V,OACAmvK,WAAYb,GAKhB,OAFA1pL,GAAOyZ,MAAM,6BAA8B08E,GAEpCA,KA0PkB8xF,kCAShB5sK,GACT,MAAIje,MAAK0oL,QACE1wI,QAAQ0K,OACX,GAAI8nI,GAAAliL,EAAkB,6BAG1BtI,KAAKi5F,iBAAmBivF,EAAkBtoC,OACnC5nG,QAAQ0K,OAAO,GAAI8nI,GAAAliL,EAAJ,2BACStI,KAAKi5F,eADd,MAMnBjhD,QAAQ0K,OAAO,GAAIh3C,OAAM,wCAAA+E,IAAA,iBAAArF,MAAA,SAOrBuqB,GACX,IAAI31B,KAAK0oL,QAAT,CAIA9lL,EAAOyZ,MAAM,uBAEb,IAAM8V,GAAQ,GAAIy3J,GAAAthL,EAAM0/C,MAAM,YAE9B71B,GAAMwD,OAASA,EACf31B,KAAK4nD,cAAcz1B,yDAQnB,IAAInyB,KAAK0oL,QAAT,CADyB,GAAA0E,MAAAC,KAAAC,QAAA,KAKzB,OAAAC,GAAAC,EAA2BxtL,KAAKyoL,uBAAhCvxJ,OAAAC,cAAAi2J,GAAAG,EAAAC,EAAAp2J,QAAAC,MAAA+1J,KAAwD,IAA7CK,GAA6CF,EAAAniL,KACpD,IAAKqiL,EAAL,CAMAA,EAAaC,UAAY1tL,KAAKkpL,MAAMnxJ,OAAOX,OAAOhsB,MAElDxI,EAAOyZ,MACH,+CAAgDoxK,EAEpD,IAAMt7J,GAAQ,GAAIy3J,GAAAthL,EAAM0/C,MAAM,eAE9B71B,GAAMib,UAAYqgJ,EAClBztL,KAAK4nD,cAAcz1B,KApBE,MAAA3L,GAAA6mK,KAAAC,EAAA9mK,EAAA,aAAA4mK,GAAAI,EAAA/1J,QAAA+1J,EAAA/1J,SAAA,WAAA41J,EAAA,KAAAC,IAuBzBttL,KAAKyoL,gFAQL,IAAIzoL,KAAK0oL,SAAoC,WAAzB1oL,KAAKqhI,gBAAzB,CAIAz+H,EAAOyZ,MACH,qDACArc,KAAKqhI,gBAET,IAAMlvG,GAAQ,GAAIy3J,GAAAthL,EAAM0/C,MAAM,wBAE9BhoD,MAAK4nD,cAAcz1B,8CAOLib,GACd,IAAIptC,KAAK0oL,QAAT,CAIA,GAAI+E,GAAe,IAEnB,IAAIrgJ,EAAW,CAGX,GAAMsgJ,GAAY1tL,KAAKkpL,MAAMnxJ,OAAOX,OAAOhsB,MAEvCuiL,EACE,aAAavgJ,EAAUE,WAAvB,MAAuCF,EAAU7tB,SAAjD,IACI6tB,EAAUtlB,SADd,IAC0BslB,EAAUI,GADpC,IAC0CJ,EAAUd,KADpD,QAEQc,EAAUpvB,IAEpBovB,GAAUijD,iBACVs9F,aAA0BvgJ,EAAUijD,gBAEpCjjD,EAAUkjD,cACVq9F,aAA0BvgJ,EAAUkjD,aAEb,QAAvBljD,EAAU7tB,WACVouK,eAA4BvgJ,EAAUmjD,SAG1Ck9F,GACIrgJ,UAAWugJ,EACXpgJ,UAAW,EACXD,WAAYF,EAAUE,WACtBE,GAAIJ,EAAUI,GACdlB,KAAMc,EAAUd,KAChBxkB,SAAUslB,EAAUtlB,SACpBvI,SAAU6tB,EAAU7tB,SACpBvB,KAAMovB,EAAUpvB,KAChB0vK,YACAn+F,cA1BkB,GA6BK,QAAvBniD,EAAU7tB,WACVkuK,EAAa//I,QAAUN,EAAUmjD,SAEjCnjD,EAAUijD,iBACVo9F,EAAap9F,eAAiBjjD,EAAUijD,gBAExCjjD,EAAUkjD,cACVm9F,EAAan9F,YAAcljD,EAAUkjD,aAK7C,GAAItwF,KAAKgpL,kBAAmB,CACxBpmL,EAAOyZ,MACH,sCAAuCoxK,EAE3C,IAAMt7J,GAAQ,GAAIy3J,GAAAthL,EAAM0/C,MAAM,eAE9B71B,GAAMib,UAAYqgJ,EAClBztL,KAAK4nD,cAAcz1B,OAEnBvvB,GAAOyZ,MACH,oCAAqCoxK,GAEzCztL,KAAKyoL,uBAAuB5lL,KAAK4qL,4DASrC,IAAIztL,KAAK0oL,SAAuC,WAA5B1oL,KAAKsrF,mBAAzB,CAIA1oF,EAAOyZ,MACH,2DACArc,KAAKsrF,mBAET,IAAMn5D,GAAQ,GAAIy3J,GAAAthL,EAAM0/C,MAAM,2BAE9BhoD,MAAK4nD,cAAcz1B,qDASnB,GAAInyB,KAAKi5F,iBAAmBivF,EAAkBtoC,OAA9C,CAIAh9I,EAAOyZ,MAAM,+BAEb,IAAM8V,GAAQ,GAAIy3J,GAAAthL,EAAM0/C,MAAM,oBAE9BhoD,MAAK4nD,cAAcz1B,8CAOLwD,GACd,IAAI31B,KAAK0oL,QAAT,CAIA9lL,EAAOyZ,MAAM,0BAEb,IAAM8V,GAAQ,GAAIy3J,GAAAthL,EAAM0/C,MAAM,eAE9B71B,GAAMwD,OAASA,EACf31B,KAAK4nD,cAAcz1B,yDAQM46C,EAAMr8D,GAC/B,GAAM8pB,GAAO9pB,EAAK8pB,KACZ2xJ,EAAUz7K,EAAKy7K,QACfxwF,EAAQjrF,EAAKirF,MACbrB,EAAoBt6F,KAAK+oL,mBACzB53F,GACFwB,UACAi7F,sBAAuB,WACvBlyF,aACA9I,oBACAi7F,MAAO,GACP/6F,MACI6I,QACAsX,YACAC,OACAF,iBAIFrgB,KACFe,SApBiCo6F,KAAAC,KAAAC,QAAA,KAsBrC,OAAAC,GAAAC,EAA8B5zF,EAAkB3H,OAAhDz7D,OAAAC,cAAA22J,GAAAG,EAAAC,EAAA92J,QAAAC,MAAAy2J,KAAwD,IAA7CK,GAA6CF,EAAA7iL,KACpD,IAAI+iL,EAAgBphH,OAASA,GACG,QAAzBohH,EAAgBvtL,KADvB,CAKA8yF,EAAmBy6F,EAAgBt9F,qBACnC8B,EAAO9vF,MACH6tF,UAAWy9F,EAAgBz9F,UAC3BiiB,SAAUw7E,EAAgBx7E,SAC1BmC,SAAUq5E,EAAgBr5E,SAC1Bl0G,KAAMutL,EAAgBvtL,KACtB+vF,YAAaw9F,EAAgBx9F,YAC7BQ,WAAYg9F,EAAgBh9F,WAC5BpgD,YAAao9I,EAAgBt9F,qBAC7Bu9F,MAAOD,EAAgBC,MACvB58F,aAAc28F,EAAgB38F,cAGlC,SAzCiC,MAAAhrE,GAAAunK,KAAAC,EAAAxnK,EAAA,aAAAsnK,GAAAI,EAAAz2J,QAAAy2J,EAAAz2J,SAAA,WAAAs2J,EAAA,KAAAC,IA4CrC,GAAI7B,EAAS,IAAAkC,MAAAC,KAAAC,QAAA,KACT,OAAAC,GAAAC,EAA8Bn0F,EAAkB3H,OAAhDz7D,OAAAC,cAAAk3J,GAAAG,EAAAC,EAAAr3J,QAAAC,MAAAg3J,KAAwD,IAA7CF,GAA6CK,EAAApjL,KACpD,IAAI+iL,EAAgBphH,OAASA,GACG,QAAzBohH,EAAgBvtL,KADvB,CAKA+xF,EAAO9vF,MACH6tF,UAAWy9F,EAAgBz9F,UAC3BokB,SAAUq5E,EAAgBr5E,SAC1Bl0G,KAAM,MACNuwF,WAAYg9F,EAAgBh9F,WAC5BpgD,YAAao9I,EAAgBt9F,qBAC7BW,aAAc28F,EAAgB38F,cAGlC,SAhBK,MAAAhrE,GAAA8nK,KAAAC,EAAA/nK,EAAA,aAAA6nK,GAAAI,EAAAh3J,QAAAg3J,EAAAh3J,SAAA,WAAA62J,EAAA,KAAAC,KAoBbp9F,EAAWwB,OAASA,CAEpB,IAAMuf,IACF3Q,UACA7N,mBACAl5D,OAGA2xJ,KACAj6E,EAASve,KACLn5D,KAAM2xJ,IAIdh7F,EAAWuK,UAAU74F,KAAKqvG,EA9EW,IAAAw8E,MAAAC,KAAAC,QAAA,KAgFrC,OAAAC,GAAAC,EAAwBx0F,EAAkB1H,iBAA1C17D,OAAAC,cAAAu3J,GAAAG,EAAAC,EAAA13J,QAAAC,MAAAq3J,KAA4D,IAAjD97E,GAAiDi8E,EAAAzjL,KACpDwnG,GAAU7lC,OAASA,GAIvBokB,EAAWyB,iBAAiB/vF,MACxBksL,QAASn8E,EAAUo8E,iBACnBvsL,GAAImwG,EAAU5hB,YACdzkF,IAAKqmG,EAAUrmG,OAxFc,MAAAia,GAAAmoK,KAAAC,EAAApoK,EAAA,aAAAkoK,GAAAI,EAAAr3J,QAAAq3J,EAAAr3J,SAAA,WAAAk3J,EAAA,KAAAC,IA4FrC,MAAOz9F,sDAQgBpkB,EAAMr8D,GAC7B,GAAM8pB,GAAO9pB,EAAK8pB,KACZ2xJ,EAAUz7K,EAAKy7K,QACfxwF,EAAQ4sF,EACRjuF,EAAoBt6F,KAAK+oL,mBACzB53F,GACFwB,UACAi7F,sBAAuB,WACvBlyF,aACA9I,oBACAi7F,MAAO,GACP/6F,MACI6I,QACAsX,YACAC,OACAF,iBAIFrgB,KACFe,SApB+Bu7F,KAAAC,KAAAC,QAAA,KAsBnC,OAAAC,GAAAC,EAA8B/0F,EAAkB3H,OAAhDz7D,OAAAC,cAAA83J,GAAAG,EAAAC,EAAAj4J,QAAAC,MAAA43J,KAAwD,IAA7Cd,GAA6CiB,EAAAhkL,KACpD,IAAI+iL,EAAgBphH,OAASA,GACG,QAAzBohH,EAAgBvtL,KADvB,CAKA8yF,EAAmBy6F,EAAgBt9F,qBACnC8B,EAAO9vF,MACH6tF,UAAWy9F,EAAgBz9F,UAC3BiiB,SAAUw7E,EAAgBx7E,SAC1BmC,SAAUq5E,EAAgBr5E,SAC1Bl0G,KAAMutL,EAAgBvtL,KACtB+vF,YAAaw9F,EAAgBx9F,YAC7BQ,WAAYg9F,EAAgBh9F,WAC5BpgD,YAAao9I,EAAgBt9F,qBAC7Bu9F,MAAOD,EAAgBC,MACvB58F,aAAc28F,EAAgB38F,cAGlC,SAzC+B,MAAAhrE,GAAA0oK,KAAAC,EAAA3oK,EAAA,aAAAyoK,GAAAI,EAAA53J,QAAA43J,EAAA53J,SAAA,WAAAy3J,EAAA,KAAAC,IA4CnC,GAAIhD,EAAS,IAAAmD,MAAAC,KAAAC,QAAA,KACT,OAAAC,GAAAC,EAA8Bp1F,EAAkB3H,OAAhDz7D,OAAAC,cAAAm4J,GAAAG,EAAAC,EAAAt4J,QAAAC,MAAAi4J,KAAwD,IAA7CnB,GAA6CsB,EAAArkL,KACpD,IAAI+iL,EAAgBphH,OAASA,GACG,QAAzBohH,EAAgBvtL,KADvB,CAKA+xF,EAAO9vF,MACH6tF,UAAWy9F,EAAgBz9F,UAC3BokB,SAAUq5E,EAAgBr5E,SAC1Bl0G,KAAM,MACNuwF,WAAYg9F,EAAgBh9F,WAC5BpgD,YAAao9I,EAAgBt9F,qBAC7BW,aAAc28F,EAAgB38F,cAGlC,SAhBK,MAAAhrE,GAAA+oK,KAAAC,EAAAhpK,EAAA,aAAA8oK,GAAAI,EAAAj4J,QAAAi4J,EAAAj4J,SAAA,WAAA83J,EAAA,KAAAC,KAoBbr+F,EAAWwB,OAASA,CAEpB,IAAMuf,IACF3Q,UACA7N,mBACAl5D,OAGA2xJ,KACAj6E,EAASve,KACLn5D,KAAM2xJ,IAIdh7F,EAAWuK,UAAU74F,KAAKqvG,EA9ES,IAAAy9E,MAAAC,KAAAC,QAAA,KAgFnC,OAAAC,GAAAC,EAAwBz1F,EAAkB1H,iBAA1C17D,OAAAC,cAAAw4J,GAAAG,EAAAC,EAAA34J,QAAAC,MAAAs4J,KAA4D,IAAjD/8E,GAAiDk9E,EAAA1kL,KACpDwnG,GAAU7lC,OAASA,GAIvBokB,EAAWyB,iBAAiB/vF,MACxBksL,QAASn8E,EAAUo8E,iBACnBvsL,GAAImwG,EAAU5hB,YACdzkF,IAAKqmG,EAAUrmG,OAxFY,MAAAia,GAAAopK,KAAAC,EAAArpK,EAAA,aAAAmpK,GAAAI,EAAAt4J,QAAAs4J,EAAAt4J,SAAA,WAAAm4J,EAAA,KAAAC,IA4FnC,MAAO1+F,qCAQDkF,GACN,GAAIr2F,KAAK0oL,QACL,MAAO1wI,SAAQ0K,OACX,GAAI8nI,GAAAliL,EAAkB,4BAG9B,IAAM2rF,GAAcj0F,KAAK4oL,aACnB9tF,EAAe96F,KAAK8oL,cACpBkH,KACAC,KACA/3I,KAVUg4I,KAAAC,KAAAC,QAAA,KAahB,OAAAC,GAAAC,EAAmBtwL,KAAKipL,iBAAiBhyJ,SAAzCC,OAAAC,cAAA+4J,GAAAG,EAAAC,EAAAl5J,QAAAC,MAAA64J,KAAmD,IAAxChsL,GAAwCmsL,EAAAjlL,MACvCipF,EAAuBnwF,EAAvBmwF,SAAuBnwF,GAAZqsL,SAGfP,EAAWntL,KAAKwxF,IAjBR,MAAA7tE,GAAA2pK,KAAAC,EAAA5pK,EAAA,aAAA0pK,GAAAI,EAAA74J,QAAA64J,EAAA74J,SAAA,WAAA04J,EAAA,KAAAC,IAAA,GAAAI,MAAAC,KAAAC,QAAA,KAsBhB,OAAAC,GAAAC,EAAmB5wL,KAAKqpL,kBAAkBpyJ,SAA1CC,OAAAC,cAAAq5J,GAAAG,EAAAC,EAAAx5J,QAAAC,MAAAm5J,KAAoD,IACxCl8F,GADwCq8F,EAAAvlL,MACxCkpF,WAER27F,GAAaptL,KAAKyxF,IAzBN,MAAA9tE,GAAAiqK,KAAAC,EAAAlqK,EAAA,aAAAgqK,GAAAI,EAAAn5J,QAAAm5J,EAAAn5J,SAAA,WAAAg5J,EAAA,KAAAC,IA8BZz8F,GACA/7C,EAASr1C,KACLoxF,EAAYmC,WACPhgC,MAAM,iBAAM,SAGrB0kC,IACA5iD,EAASr1C,KACLi4F,EAAa1E,WACRhgC,MAAM,iBAAM,SAGkB,kBAA5B0kC,GAAa+1F,YACpB34I,EAASr1C,KACLi4F,EAAa+1F,aACRz6H,MAAM,iBAAM,SA7Cb,IAAA06H,MAAAC,KAAAC,QAAA,KAiDhB,OAAAC,GAAAC,EAAwBlB,EAAxB94J,OAAAC,cAAA25J,GAAAG,EAAAC,EAAA95J,QAAAC,MAAAy5J,MAjDgB,SAiDLz8F,GACP,GAAM88F,GAAmC,UAAzB98F,EAAU5pB,MAAMsC,IAEhC70B,GAASr1C,KAAKwxF,EAAU+B,WACnBrmC,KAAK,SAAAr/C,GAGF,IAAKygL,EAAS,IAAAC,MAAAC,KAAAC,QAAA,KACV,OAAAC,GAAAC,EAAkBzwL,OAAOg3B,KAAKrnB,GAA9BwmB,OAAAC,cAAAi6J,GAAAG,EAAAC,EAAAp6J,QAAAC,MAAA+5J,KAAqC,IAC3Bz6F,GAAOjmF,EADoB6gL,EAAAnmL,MAGf,WAAdurF,EAAK34E,YACE24E,GAAK/qB,YALV,MAAAplD,GAAA6qK,KAAAC,EAAA9qK,EAAA,aAAA4qK,GAAAI,EAAA/5J,QAAA+5J,EAAA/5J,SAAA,WAAA45J,EAAA,KAAAC,KAUd,MAAO5gL,KAEV0lD,MAAM,iBAAM,UAnBVi+B,EAAyB48F,EAAA7lL,OAjDpB,MAAAob,GAAAuqK,KAAAC,EAAAxqK,EAAA,aAAAsqK,GAAAI,EAAAz5J,QAAAy5J,EAAAz5J,SAAA,WAAAs5J,EAAA,KAAAC,IAAA,GAAAS,MAAAC,KAAAC,QAAA,KAuEhB,OAAAC,GAAAC,EAA0B5B,EAA1B/4J,OAAAC,cAAAs6J,GAAAG,EAAAC,EAAAz6J,QAAAC,MAAAo6J,MAvEgB,SAuELn9F,GACP,GAAM68F,GAAqC,UAA3B78F,EAAY7pB,MAAMsC,IAElC70B,GAASr1C,KAAKyxF,EAAY8B,WACrBrmC,KAAK,SAAAr/C,GAGF,IAAKygL,EAAS,IAAAW,MAAAC,KAAAC,QAAA,KACV,OAAAC,GAAAC,EAAkBnxL,OAAOg3B,KAAKrnB,GAA9BwmB,OAAAC,cAAA26J,GAAAG,EAAAC,EAAA96J,QAAAC,MAAAy6J,KAAqC,IAC3Bn7F,GAAOjmF,EADoBuhL,EAAA7mL,MAGf,WAAdurF,EAAK34E,YACE24E,GAAK/qB,YALV,MAAAplD,GAAAurK,KAAAC,EAAAxrK,EAAA,aAAAsrK,GAAAI,EAAAz6J,QAAAy6J,EAAAz6J,SAAA,WAAAs6J,EAAA,KAAAC,KAUd,MAAOthL,KAEV0lD,MAAM,iBAAM,UAnBVk+B,EAA6Bs9F,EAAAxmL,OAvExB,MAAAob,GAAAkrK,KAAAC,EAAAnrK,EAAA,aAAAirK,GAAAI,EAAAp6J,QAAAo6J,EAAAp6J,SAAA,WAAAi6J,EAAA,KAAAC,IA6FhB,MAAO35I,SAAQuU,IAAIrU,GACd6X,KAAK,SAAAoiI,GACF,GAAM50J,MADK60J,KAAAC,KAAAC,QAAA,KAGX,OAAAC,GAAAC,EAAmBL,EAAnBj7J,OAAAC,cAAAi7J,GAAAG,EAAAC,EAAAp7J,QAAAC,MAAA+6J,KAA0B,IAAf1hL,GAAe6hL,EAAAnnL,KACtB,IAAKsF,EAAL,CADsB,GAAA+hL,MAAAC,KAAAC,QAAA,KAKtB,OAAAC,GAAAC,EAAkB9xL,OAAOg3B,KAAKrnB,GAA9BwmB,OAAAC,cAAAs7J,GAAAG,EAAAC,EAAAz7J,QAAAC,MAAAo7J,KAAqC,IAA1BhiL,GAA0BmiL,EAAAxnL,KACjCmyB,GAAM9sB,GAAOC,EAAKD,IANA,MAAA+V,GAAAksK,KAAAC,EAAAnsK,EAAA,aAAAisK,GAAAI,EAAAp7J,QAAAo7J,EAAAp7J,SAAA,WAAAi7J,EAAA,KAAAC,OAHf,MAAAnsK,GAAA6rK,KAAAC,EAAA9rK,EAAA,aAAA4rK,GAAAI,EAAA/6J,QAAA+6J,EAAA/6J,SAAA,WAAA46J,EAAA,KAAAC,IAaX,MAAO/0J,uDASOyQ,GACtBprC,EAAOyZ,MAAM,qCAAsC2xB,EAEnD,IAAMs+I,GAAYt+I,EAAKs+I,SAGvBtsL,MAAK+oL,mBAAqB+J,EAAAxqL,EAA0BgkL,GAEpD1pL,EAAOyZ,MAAM,sBAAuBrc,KAAK+oL,iEAWxB/6I,GACjBprC,EAAOyZ,MAAM,gCAAiC2xB,EAE9C,IAAMs+I,GAAYt+I,EAAKs+I,SAGvBtsL,MAAK+oL,mBAAqB+J,EAAAxqL,EAA0BgkL,GAEpD1pL,EAAOyZ,MAAM,sBAAuBrc,KAAK+oL,sEAWnB/6I,GACtBprC,EAAOyZ,MAAM,qCAAsC2xB,EAEnD,IAAMs+I,GAAYt+I,EAAKs+I,SAGvBtsL,MAAKkpL,MAAQ4J,EAAA7yL,EAAkBqsL,EAG/B,IAAM/xF,GAAqBu4F,EAAAxqL,EAA0BgkL,EAErD1pL,GAAOyZ,MAAM,uBAAwBk+E,GAGrCv6F,KAAK+oL,mBACC+J,EAAA9xJ,EAA2Bu5D,GAGjCv6F,KAAK+yL,iBAAiB/kJ,gDAQLA,GACjBprC,EAAOyZ,MAAM,gCAAiC2xB,EAE9C,IAAMs+I,GAAYt+I,EAAKs+I,SAGvBtsL,MAAKkpL,MAAQ4J,EAAA7yL,EAAkBqsL,EAG/B,IAAM/xF,GAAqBu4F,EAAAxqL,EAA0BgkL,EAErD1pL,GAAOyZ,MAAM,uBAAwBk+E,GAGrCv6F,KAAK+oL,mBACC+J,EAAA9xJ,EAA2Bu5D,2CAOjC33F,EAAOyZ,MAAM,kBAEb,IAAM22K,GAAqB,GAAI99J,KAAIl1B,KAAKqpL,kBAAkBtxJ,QACpDk7J,EACAH,EAAAzmL,EAAwBrM,KAAKmpL,mBAAmBmD,WAGhD4G,EAAqB,GAAIv/J,KAIzBw/J,EAAoB,GAAIx/J,KAGxBy/J,EAAsB,GAAIz/J,IAEhC/wB,GAAOyZ,MACH,sCAAuC42K,EAlB/B,IAAAI,MAAAC,KAAAC,QAAA,KAqBZ,OAAAC,GAAAC,EAA6BR,EAA7B/7J,OAAAC,cAAAk8J,GAAAG,EAAAC,EAAAr8J,QAAAC,MAAAg8J,KAAkD,IAAAK,GAAAF,EAAApoL,MAAAuoL,EAAA/kF,EAAA8kF,EAAA,GAArCl5J,EAAqCm5J,EAAA,GAA/BzvL,EAA+ByvL,EAAA,EAE9C,KAAIX,EAAmBx6J,IAAIgC,GAA3B,CAIA53B,EAAOyZ,MAAP,0CAAuDme,GAGvDx6B,KAAKqpL,kBAAkB7zJ,IAAIgF,EAAMt2B,EAEjC,IAAM6oE,GAAO7oE,EAAK6oE,KACZo/G,EAAUjoL,EAAKioL,QACfyH,EAAiB1vL,EAAKwqE,SACtBmlH,EAAgB3vL,EAAKytG,QACrBhW,EAAQz3F,EAAKy3F,MAEfhmE,QADiB31B,MAAKopL,eAAe5wJ,IAAIo7J,GAgBzCj+J,EAAS31B,KAAKopL,eAAejoL,IAAIyyL,IAZjChxL,EAAOyZ,MAAP,yCAC6Cu3K,IAG7Cj+J,EAAS,GAAIijD,cAGNrC,cAAgBq9G,EAEvBV,EAAmB19J,IAAIo+J,EAAgBj+J,GACvC31B,KAAKopL,eAAe5zJ,IAAIo+J,EAAgBj+J,GAK5C,IAAM2+D,GAAc,GAAIsI,gBAAe58F,KAAK2oL,eAAgB57G,GACtDokB,EAAanxF,KAAK8zL,6BAA6B/mH,GACjDvyC,OACA2xJ,UACAxwF,SAOJz3F,GAAKumE,MAAQ6pB,EAAY7pB,MAGzB6pB,EAAY7jE,QAAU,SAAAu4E,GAClBpmG,EAAO0Z,MAAM,qCACb1Z,EAAO0Z,MAAM0sF,IAIjB9kG,EAAKyxB,OAASA,EACdzxB,EAAKowF,YAAcA,EAEnB1xF,EAAOyZ,MACH,6CAA8C80E,EAGlD,KACImD,EAAYuH,QAAQ1K,EAGpB,IAAM1mB,GAAQvmE,EAAKumE,KAGnBA,GAAM8L,cAAgBs9G,EAGtBl+J,EAAOkjD,SAASpO,GAEXyoH,EAAmB16J,IAAIo7J,IACxBT,EAAkB39J,IAAIi1C,EAAO90C,GAEnC,MAAOrZ,GACL1Z,EAAO0Z,MAAP,gCAA6CA,EAAML,SACnDrZ,EAAO0Z,MAAMA,MApGT,MAAAkK,GAAA8sK,KAAAC,EAAA/sK,EAAA,aAAA6sK,GAAAI,EAAAh8J,QAAAg8J,EAAAh8J,SAAA,WAAA67J,EAAA,KAAAC,IAAA,GAAAQ,MAAAC,KAAAC,QAAA,KAyGZ,OAAAC,GAAAC,EAAmBnB,EAAnB97J,OAAAC,cAAA48J,GAAAG,EAAAC,EAAA/8J,QAAAC,MAAA08J,KAAuC,IAA5Bv5J,GAA4B05J,EAAA9oL,KACnC,KAAI6nL,EAAoBz6J,IAAIgC,GAA5B,CAIA53B,EAAOyZ,MAAP,8CAA2Dme,EAE3D,IAAMt2B,GAAOlE,KAAKqpL,kBAAkBloL,IAAIq5B,GAElCiwC,GADA90C,EAASzxB,EAAKyxB,OACNzxB,EAAKumE,MACb6pB,GAAcpwF,EAAKowF,WAEzB,KACIA,EAAYj8D,OACd,MAAO/b,GACL1Z,EAAOwF,KAAP,6BAAyCkU,GAG7C82K,EAAoB59J,IAAIi1C,EAAO90C,GAC/BA,EAAOs/E,YAAYxqC,GACnBzqE,KAAKqpL,kBAAkBlxJ,OAAOqC,KA7HtB,MAAAhU,GAAAwtK,KAAAC,EAAAztK,EAAA,aAAAutK,GAAAI,EAAA18J,QAAA08J,EAAA18J,SAAA,WAAAu8J,EAAA,KAAAC,IAAA,GAAAG,MAAAC,KAAAC,QAAA,KAkIZ,OAAAC,GAAAC,EAAgCrB,EAAhCj8J,OAAAC,cAAAi9J,GAAAG,EAAAC,EAAAp9J,QAAAC,MAAA+8J,KAAmD,IAAAK,GAAAF,EAAAnpL,MAAAspL,EAAA9lF,EAAA6lF,EAAA,EAAtChqH,GAAsCiqH,EAAA,GAA/B/+J,EAA+B++J,EAAA,IACzCviK,EAAQ,GAAI61B,OAAM,aAElByiB,MAAQA,EACd90C,EAAOiyB,cAAcz1B,IAtIb,MAAA3L,GAAA6tK,KAAAC,EAAA9tK,EAAA,aAAA4tK,GAAAI,EAAA/8J,QAAA+8J,EAAA/8J,SAAA,WAAA48J,EAAA,KAAAC,IAAA,GAAAK,MAAAC,KAAAC,QAAA,KA0IZ,OAAAC,GAAAC,EAAgC3B,EAAhCl8J,OAAAC,cAAAw9J,GAAAG,EAAAC,EAAA39J,QAAAC,MAAAs9J,KAAqD,IAC3CxiK,GAD2C6iK,EAAAF,EAAA1pL,MAAA6pL,EAAArmF,EAAAomF,EAAA,GAAxCvqH,EAAwCwqH,EAAA,GAAjCt/J,EAAiCs/J,EAAA,IAC3C9iK,EAAQ,GAAI61B,OAAM,gBAElByiB,MAAQA,EACd90C,EAAOiyB,cAAcz1B,IA9Ib,MAAA3L,GAAAouK,KAAAC,EAAAruK,EAAA,aAAAmuK,GAAAI,EAAAt9J,QAAAs9J,EAAAt9J,SAAA,WAAAm9J,EAAA,KAAAC,IAAA,GAAAK,MAAAC,KAAAC,QAAA,KAkJZ,OAAAC,IAAAC,GAAqBpC,EAAmBj8J,SAAxCC,OAAAC,cAAA+9J,GAAAG,GAAAC,GAAAl+J,QAAAC,MAAA69J,KAAkD,IAAvCv/J,IAAuC0/J,GAAAjqL,KAEZ,KAA9BuqB,GAAOskD,YAAYj3E,QACnBJ,EAAOwF,KACH,yDAEJ8qL,EAAmB/6J,OAAOxC,GAAO4gD,eACjCv2E,KAAKopL,eAAejxJ,OAAOxC,GAAO4gD,gBAElCv2E,KAAKu1L,eAAe5/J,KA3JhB,MAAAnP,GAAA2uK,KAAAC,EAAA5uK,EAAA,aAAA0uK,GAAAI,GAAA79J,QAAA69J,GAAA79J,SAAA,WAAA09J,EAAA,KAAAC,IAAA,GAAAI,OAAAC,MAAAC,SAAA,KAgKZ,OAAAC,IAAAC,GAAyC51L,KAAKopL,eAA9ClyJ,OAAAC,cAAAq+J,IAAAG,GAAAC,GAAAx+J,QAAAC,MAAAm+J,MAA8D,IAAAK,IAAAF,GAAAvqL,MAAA0qL,GAAAlnF,EAAAinF,GAAA,GAAjClgK,IAAhBi+J,EAAiDkC,GAAA,GAAAA,GAAA,GACtDngK,IAAOskD,YAAYj3E,OAAS,IAIhChD,KAAKopL,eAAejxJ,OAAOy7J,GAC3B5zL,KAAK+1L,kBAAkBpgK,MAtKf,MAAAnP,GAAAivK,MAAAC,GAAAlvK,EAAA,aAAAgvK,IAAAI,GAAAn+J,QAAAm+J,GAAAn+J,SAAA,WAAAg+J,GAAA,KAAAC,4CA8KF//J,GACV,GAAI31B,KAAK0oL,QACL,KAAM,IAAI8B,GAAAliL,EAAkB,2BAFd,IAAA0tL,MAAAC,KAAAC,QAAA,KAMlB,OAAAC,GAAAC,EAAoBzgK,EAAOskD,YAA3B/iD,OAAAC,cAAA6+J,GAAAG,EAAAC,EAAAh/J,QAAAC,MAAA2+J,KAAwC,IAA7BvrH,GAA6B0rH,EAAA/qL,KAEpC,IAAKpL,KAAKipL,iBAAiBzwJ,IAAIiyC,EAAMhoE,IAArC,CAIA,GAAM4xF,GAAYr0F,KAAKipL,iBAAiB9nL,IAAIspE,EAAMhoE,IAAI4xF,SAEtD,KACIA,EAAUh8D,OACZ,MAAO/b,GACL1Z,EAAOwF,KAAP,2BAAuCkU,GAI3Ctc,KAAKipL,iBAAiB9wJ,OAAOsyC,EAAMhoE,MArBrB,MAAA+jB,GAAAyvK,KAAAC,EAAA1vK,EAAA,aAAAwvK,GAAAI,EAAA3+J,QAAA2+J,EAAA3+J,SAAA,WAAAw+J,EAAA,KAAAC,IAyBlBl2L,KAAK0qL,8DAOL9nL,EAAOyZ,MAAM,eADJ,IAAAg6K,MAAAC,KAAAC,QAAA,KAGT,OAAAC,GAAAC,EAAmBz2L,KAAKipL,iBAAiBhyJ,SAAzCC,OAAAC,cAAAk/J,GAAAG,EAAAC,EAAAr/J,QAAAC,MAAAg/J,KAAmD,IAAxCnyL,GAAwCsyL,EAAAprL,KAE/C,KAAIlH,EAAKqsL,QAAT,CAIA,GAAMl8F,GAAYnwF,EAAKmwF,UACjB75D,EAAOt2B,EAAKs2B,KACZ2xJ,EAAUjoL,EAAKioL,QAEfp/G,EADQsnB,EAAU5pB,MACLsC,KAEbokB,EAAanxF,KAAK02L,2BAA2B3pH,GAC/CvyC,OACA2xJ,WAGJvpL,GAAOyZ,MACH,wCAAyC80E,EAG7C,KACIkD,EAAUrwE,KAAKmtE,GAGfjtF,EAAKqsL,WACP,MAAOj0K,GACL1Z,EAAO0Z,MAAP,2BAAwCA,EAAML,SAC9CrZ,EAAO0Z,MAAMA,MA/BZ,MAAAkK,GAAA8vK,KAAAC,EAAA/vK,EAAA,aAAA6vK,GAAAI,EAAAh/J,QAAAg/J,EAAAh/J,SAAA,WAAA6+J,EAAA,KAAAC,+CAwCKz7F,GAAc,GAAAlyB,GAAA5oE,KACtBm0F,EAAgB,GAAImH,kBAAiBR,EAG3C3G,GAAcwiG,cAAgB,WAC1B/zL,EAAOyZ,MACH,4CACW83E,EAAc0F,OAE7BjxB,EAAKguH,8BAITziG,EAAcoH,kBAAoB,WAC9B34F,EAAOyZ,MACH,gDACW83E,EAAc0F,OAE7BjxB,EAAKguH,8BAGTziG,EAAc1jE,QAAU,SAAAu4E,GACpB,GAAI/sF,SAEA+sF,GAAG/sF,QACHA,EAAU+sF,EAAG/sF,QACN+sF,EAAG1sF,QACVL,EAAU+sF,EAAG1sF,MAAML,SAGvBrZ,EAAO0Z,MAAP,wCAAqDL,GAKrD2sD,EAAKguH,8BAGT52L,KAAK2oL,eAAiBx0F,0CAOV4B,GAAU,GAAA5sB,GAAAnpE,KAChB62L,GACFz9F,aAAcrD,EAASC,oBAAsB,MAC7C/I,WAAY8I,EAAS9I,gBAEnBgH,EAAc,GAAIgE,gBAAe4+F,EAGvC5iG,GAAY0iG,cAAgB,WACxB/zL,EAAOyZ,MAAP,0CAC8C43E,EAAY4F,OAE1D1wB,EAAK2tH,sCAAsC7iG,EAAY4F,QAG3D5F,EAAY+G,iBAAmB,SAAAgO,GAC3B,GAAI57D,GAAY47D,EAAG57D,UAGb+tD,EAAW6N,EAAG7N,QAEpBv4F,GAAOyZ,MACH,iDAAkD+wB,GAIlD+tD,IACI/tD,GACiC,IAAlCrsC,OAAOg3B,KAAKqV,GAAWpqC,QAE1BoqC,EAAY,KAEZ+7B,EAAK2tH,sCACDzO,EAAqBltF,UACzBhyB,EAAK4tH,kBAAkB,OAEvB5tH,EAAK4tH,kBAAkB3pJ,IAI/B6mD,EAAYxjE,QAAU,SAAAu4E,GAClB,GAAM4iC,GAAY5iC,EAAG4iC,UACf3hC,EAAYjB,EAAGiB,SAErBrnG,GAAO0Z,MACH,wCAAwCsvH,EAAxC,eACe3hC,GAKvB,KACIhW,EAAY+iG,SACd,MAAO16K,GACL1Z,EAAOwF,KAAP,+BAA2CkU,GAG/Ctc,KAAK4oL,aAAe30F,2CAOPA,GAAa,GAAA5b,GAAAr4E,KACpB86F,EAAe,GAAIC,iBAAgB9G,EAGzC6G,GAAa67F,cAAgB,WACzB/zL,EAAOyZ,MACH,2CACWy+E,EAAajB,OAE5BxhB,EAAK4+G,iCAITn8F,EAAaM,iBAAmB,WAC5Bx4F,EAAOyZ,MACH,8CACWy+E,EAAajB,OAED,cAAvBiB,EAAajB,OACbj3F,EAAOyZ,MACH,4BACAy+E,EAAao8F,6BAGrB7+G,EAAK4+G,iCAGTn8F,EAAaq8F,sBAAwB,SAAAnuF,GACjCpmG,EAAOyZ,MACH,kDACU2sF,EAAG2wD,OAGrB35J,KAAK8oL,cAAgBhuF,+CAQJ9sD,GAAM,GAAAw1E,GAAAxjH,IACvB,IAAIA,KAAK0oL,QACL,MAAO1wI,SAAQ0K,OACX,GAAI8nI,GAAAliL,EAAkB,4BAG9B,IAAIywF,SAEJ,KACIA,EAAmB,GAAIm0F,GAAA5kL,EAAsB0lC,GAC/C,MAAO1xB,GACL,MAAO07B,SAAQ0K,OAAO,GAAIj0C,WAAJ,sCACoB6N,IAG9C,OAAQ0xB,EAAKhwB,MACb,IAAK,QACD,MAAIhe,MAAKi5F,iBAAmBivF,EAAkBtoC,OACnC5nG,QAAQ0K,OAAO,GAAI8nI,GAAAliL,EAAJ,2BACStI,KAAKi5F,eADd,MAMnBjhD,QAAQ0K,OAAO,GAAIj0C,WACtB,yDAER,KAAK,SACD,GAAIzO,KAAKi5F,iBAAmBivF,EAAkBE,gBAC1C,MAAOpwI,SAAQ0K,OAAO,GAAI8nI,GAAAliL,EAAJ,2BACStI,KAAKi5F,eADd,KAI1B,IAAMm+F,GAAuBt9G,SAAS95E,KAAKgpL,kBAE3C,OAAOhxI,SAAQ4E,UACVmT,KAAK,WAEF,MAAIqnI,GACO5zE,EAAK6zE,0BAA0Bt+F,GAE/ByqB,EAAK8zE,qBAAqBv+F,KAGxChpC,KAAK,WACFntD,EAAOyZ,MAAM,iCAGbmnG,EAAKwlE,kBAAoBjwF,EAGzByqB,EAAKymE,mCACD/B,EAAkBtoC,QAGlBw3C,GACA5zE,EAAK+zE,6BAIT/zE,EAAKg0E,aAGLh0E,EAAKi0E,kBAERrhI,MAAM,SAAA95C,GAKH,KAJA1Z,GAAO0Z,MAAP,iCACqCA,EAAML,SAC3CrZ,EAAO0Z,MAAMA,GAEPA,GAGlB,SACI,MAAO07B,SAAQ0K,OAAO,GAAIj0C,WAAJ,iCACeu/B,EAAKhwB,KADpB,UAAAvN,IAAA,wBAAArF,MAAA,SAUR4iC,GAAM,GAAA22E,GAAA3kH,IACxB,IAAIA,KAAK0oL,QACL,MAAO1wI,SAAQ0K,OACX,GAAI8nI,GAAAliL,EAAkB,4BAG9B,IAAI0wF,SAEJ,KACIA,EAAoB,GAAIk0F,GAAA5kL,EAAsB0lC,GAChD,MAAO1xB,GACL,MAAO07B,SAAQ0K,OAAO,GAAIj0C,WAAJ,sCACoB6N,IAG9C,OAAQ0xB,EAAKhwB,MACb,IAAK,QACD,GAAIhe,KAAKi5F,iBAAmBivF,EAAkBtoC,OAC1C,MAAO5nG,SAAQ0K,OAAO,GAAI8nI,GAAAliL,EAAJ,2BACStI,KAAKi5F,eADd,KAI1B,IAAMy+F,GAAuB59G,SAAS95E,KAAKmpL,mBAE3C,OAAOnxI,SAAQ4E,UACVmT,KAAK,WAEF,MAAI2nI,GACO/yE,EAAKgzE,0BACR3+F,GAEG2rB,EAAKizE,qBAAqB5+F,KAGxCjpC,KAAK,WACFntD,EAAOyZ,MAAM,kCAGbsoG,EAAKwkE,mBAAqBnwF,EAG1B2rB,EAAKslE,mCACD/B,EAAkBE,mBAEzBhyH,MAAM,SAAA95C,GAGH,KAFA1Z,GAAO0Z,MAAP,kCAA+CA,GAEzCA,GAGlB,KAAK,SACD,MAAItc,MAAKi5F,iBAAmBivF,EAAkBC,eACnCnwI,QAAQ0K,OAAO,GAAI8nI,GAAAliL,EAAJ,2BACStI,KAAKi5F,eADd,MAMnBjhD,QAAQ0K,OAAO,GAAIj0C,WACtB,2DAER,SACI,MAAOupC,SAAQ0K,OAAO,GAAIj0C,WAAJ,iCACeu/B,EAAKhwB,KADpB,UAAAvN,IAAA,mBAAArF,MAAA,SASb4iC,GACb,GAAMs+I,GAAYt+I,EAAKs+I,UACjBpwF,EACA42F,EAAAnyL,EAA2B2rL,GAC3BuL,EACA/E,EAAApyL,EAA2B4rL,GAC3BjwF,EACAy2F,EAAA1iL,EAA4Bk8K,EAGlC,QAAQt+I,EAAKhwB,MACb,IAAK,QACDhe,KAAK8oL,cAAcl3J,MACf5xB,KAAK4oL,aAAc1sF,EAAqB,aAC5C,MACJ,KAAK,SACDl8F,KAAK8oL,cAAcl3J,MACf5xB,KAAK4oL,aAAc1sF,EAAqB,eAjB7B,GAAA47F,MAAAC,KAAAC,QAAA,KAuBnB,OAAAC,GAAAC,EAAwBL,EAAxB3gK,OAAAC,cAAA2gK,GAAAG,EAAAC,EAAA9gK,QAAAC,MAAAygK,KAA6C,IAAlC1qJ,GAAkC6qJ,EAAA7sL,KAClB,KAAnBgiC,EAAUd,MAAiC,IAAnBc,EAAUd,MAItCtsC,KAAK8oL,cAAcnrF,mBAAmBvwD,IA5BvB,MAAA5mB,GAAAuxK,KAAAC,EAAAxxK,EAAA,aAAAsxK,GAAAI,EAAAzgK,QAAAygK,EAAAzgK,SAAA,WAAAsgK,EAAA,KAAAC,IAuCnB,OAHAh4L,KAAK8oL,cAAcnrF,uBAGX3vD,EAAKhwB,MACb,IAAK,QACDq+E,EAAqBrK,KAAO,QAC5B,MACJ,KAAK,SACDqK,EAAqBrK,KAAO,SAKhChyF,KAAK2oL,eAAe/2J,MAAMyqE,iEAOQxC,GAClC,IAAI75F,KAAK0oL,SAAW7uF,IAAU75F,KAAKk5F,kBAAnC,CAIAl5F,KAAK6oL,mBAAqBhvF,EAE1Bj3F,EAAOyZ,MACH,yDACArc,KAAKk5F,kBAET,IAAM/mE,GAAQ,GAAIy3J,GAAAthL,EAAM0/C,MAAM,0BAE9BhoD,MAAK4nD,cAAcz1B,+DAOY0nE,GAC/B,GAAIA,IAAU75F,KAAKi5F,eAAnB,CAIAj5F,KAAKwpL,gBAAkB3vF,EAEvBj3F,EAAOyZ,MACH,mDACArc,KAAKi5F,eAET,IAAM9mE,GAAQ,GAAIy3J,GAAAthL,EAAM0/C,MAAM,uBAE9BhoD,MAAK4nD,cAAcz1B,4CAlmEnB,MAAOnyB,MAAK2oL,eAAe9uF,iDAQ3B,MAAO75F,MAAK8oL,cAAcjvF,gDAQ1B,MAAO75F,MAAK6oL,4DAQZ,MAAO7oL,MAAKgpL,4DAQZ,MAAOhpL,MAAKmpL,0DAQZ,MAAOnpL,MAAKwpL,kGC1LpB7pL,EAAAD,SAEAmqL,YAAA3pL,EAAA,KACA8nD,MAAA9nD,EAAA,gBAAAD,EAAA4B,GCHA,QAAAs2L,KAEAn4L,KAAAo4L,cAGAr3L,OAAAs3L,iBAAAF,EAAA12L,WAEAwxC,WAEA9xC,IAAA,WAEA,MAAAnB,MAAAo4L,eAKAD,EAAA12L,UAAAymC,iBAAA,SAAAlqB,EAAAm1B,GAEA,GAAAmlJ,GACAj4L,EACAy1B,CAEA,IAAA9X,GAAAm1B,EAAA,CAQA,cALAmlJ,EAAAt4L,KAAAo4L,WAAAp6K,MAGAhe,KAAAo4L,WAAAp6K,GAAAs6K,MAEAj4L,EAAA,EAAYy1B,EAAAwiK,EAAAj4L,GAAiCA,IAE7C,GAAAy1B,IAAAqd,EACA,MAGAmlJ,GAAAz1L,KAAAswC,KAGAglJ,EAAA12L,UAAA2mC,oBAAA,SAAApqB,EAAAu6K,GAEA,GAAAD,GACAj4L,EACAy1B,CAEA,IAAA9X,GAAAu6K,aAGAD,EAAAt4L,KAAAo4L,WAAAp6K,IAEA,CAGA,IAAA3d,EAAA,EAAYy1B,EAAAwiK,EAAAj4L,GAAiCA,IAE7C,GAAAy1B,IAAAyiK,EACA,CACAD,EAAA9tL,OAAAnK,EAAA,EACA,OAIA,IAAAi4L,EAAAt1L,cACAhD,MAAAo4L,WAAAp6K,KAGAm6K,EAAA12L,UAAAmmD,cAAA,SAAAz1B,GAEA,GAAAnU,GACAs6K,EACAE,EAEAn4L,EACAy1B,EAFA2iK,IAIA,KAAAtmK,GAAA,gBAAAA,GAAAnU,KACA,SAAAtS,OAAA,4CAIAymB,GAAAumK,SAEAvmK,EAAA6pB,OAAAh8C,KACAmyB,EAAA41B,cAIA,KAEA51B,EAAAsmK,yBAAA,WAEAA,MAGA,MAAAn8K,IAQA,GALA0B,EAAAmU,EAAAnU,KACAs6K,EAAAt4L,KAAAo4L,WAAAp6K,OAIA,mBAFAw6K,EAAAx4L,KAAA,KAAAge,IAIA,IAEAw6K,EAAAh4L,KAAAR,KAAAmyB,GAEA,MAAA7V,GAEAxW,QAAAwW,SAIA,IAAAjc,EAAA,GAAYy1B,EAAAwiK,EAAAj4L,MAEZo4L,EAF6Cp4L,IAK7C,IAEAy1B,EAAAt1B,KAAAR,KAAAmyB,GAEA,MAAA7V,GAEAxW,QAAAwW,SAIA,OAAA6V,EAAAwmK,kBAGAh5L,EAAAD,QAAAy4L,6BCpIAvgJ,GAIAj4C,EAAAD,QAAAk4C,EAAAoQ,0gBCCqByjC,aASjB,QAAAA,GAAY/6E,GAUR,gBAAAzQ,EAAA4B,GAAA,KAAA5B,YAAA4B,IAAA,SAAA4M,WAAA,sCAVczO,KAAAyrF,GAEdzrF,KAAK44L,KAAO,KAGZ54L,KAAKmtL,WAAa,KAGlBntL,KAAK64L,MAAQ,KAELnoL,EAAKsN,MACb,IAAK,QAEL,IAAK,SACD,KACJ,SACI,KAAM,IAAIvP,WAAJ,iBAA+BiC,EAAKsN,KAApC,KAKV,GAFAhe,KAAK64L,MAAQnoL,EAAKsN,KAEM,gBAAbtN,GAAK+/B,IAAkB,CAC9BzwC,KAAK44L,KAAOloL,EAAK+/B,GACjB,KACIzwC,KAAKmtL,WAAa2L,EAAAxwL,EAAailB,MAAM7c,EAAK+/B,KAC5C,MAAOn0B,GACL,KAAM,IAAI5Q,OAAJ,gBAA0B4Q,QAEjC,IAA+B,WAA3BmtB,EAAO/4B,EAAKy8K,YAQnB,KAAM,IAAI1+K,WAAU,4BAPpBzO,MAAKmtL,WAAaz8K,EAAKy8K,UACvB,KACIntL,KAAK44L,KAAOE,EAAAxwL,EAAa2pC,MAAMvhC,EAAKy8K,YACtC,MAAO7wK,GACL,KAAM,IAAI5Q,OAAJ,uBAAiC4Q,gDAoD/C,OACIm0B,IAAKzwC,KAAK44L,KACV56K,KAAMhe,KAAK64L,mCA1Cf,MAAO74L,MAAK44L,mBAQRnoJ,GACJ,IACIzwC,KAAKmtL,WAAa2L,EAAAxwL,EAAailB,MAAMkjB,GACvC,MAAOn0B,GACL,KAAM,IAAI5Q,OAAJ,gBAA0B4Q,GAGpCtc,KAAK44L,KAAOnoJ,oCASZ,MAAOzwC,MAAKmtL,wCAQZ,MAAOntL,MAAK64L,sCC3FpB,GAAAE,GAAA,SAAApkK,GACA,MAAAjlB,QAAAzB,OAAA0mB,QAAA1mB,OAAA0mB,MAgBAqkK,EAAA,SAAAjwL,EAAA8mB,EAAA5C,GACA,GAAAgsK,GAAAlwL,EAAAnI,MAAAmI,EAAAqlD,KACArlD,GAAAlG,OAAAgtB,EAAA9mB,EAAAlG,MACAgtB,EAAA9mB,EAAAlG,SAEAo2L,IAAAppK,EAAA9mB,EAAAnI,QACAivB,EAAA9mB,EAAAnI,SAEA,IAAAs4L,GAAAnwL,EAAAlG,QAEAo2L,EAAAppK,EAAA9mB,EAAAnI,MAAAivB,GAvBA,SAAAlsB,EAAAksB,EAAAu+B,EAAA+qI,GACA,GAAAA,IAAA/qI,EACAv+B,EAAAspK,GAAAJ,EAAAp1L,EAAA,QAGA,QAAAtD,GAAA,EAAmBA,EAAA+tD,EAAAprD,OAAkB3C,GAAA,EACrC,MAAAsD,EAAAtD,EAAA,KACAwvB,EAAAu+B,EAAA/tD,IAAA04L,EAAAp1L,EAAAtD,EAAA,MAkBA4sB,EAAAtpB,MAAAoF,EAAAipG,KAAAknF,EAAAnwL,EAAAqlD,MAAArlD,EAAAnI,MAEAmI,EAAAlG,MACAgtB,EAAA9mB,EAAAlG,WAAAq2L,IAIAnnF,EAAA7xG,EAAA,IACAk5L,EAAAp8H,OAAAv7D,UAAA8C,KAAA8I,KAAA,gBAEA3N,GAAA6tB,MAAA,SAAAkjB,GACA,GAAAnjB,MACA8e,KACAvc,EAAAvC,CAoBA,OAjBAmjB,GAAAjqC,MAAA,gBAAA4oC,OAAAgqJ,GAAA/qL,QAAA,SAAA/N,GACA,GAAA0d,GAAA1d,EAAA,GACA2sB,EAAA3sB,EAAAgK,MAAA,EACA,OAAA0T,IACAouB,EAAAvpC,MAAkBmuC,OAAAY,UAClB/hB,EAAAuc,IAAAppC,OAAA,GAGA,QAAA4G,GAAA,EAAmBA,GAAAmoG,EAAA/zF,QAAAhb,OAAkC4G,GAAA,GACrD,GAAAb,GAAAgpG,EAAA/zF,GAAApU,EACA,IAAAb,EAAAipG,IAAAztG,KAAA0oB,GACA,MAAA+rK,GAAAjwL,EAAA8mB,EAAA5C,MAKAK,EAAA8e,QACA9e,EAGA,IAAA+rK,GAAA,SAAAC,EAAAtwJ,GACA,GAAApnC,GAAAonC,EAAAxiC,MAAA,UAIA,OAHA,KAAA5E,EAAAoB,SACAs2L,EAAA13L,EAAA,IAAAm3L,EAAAn3L,EAAA,KAEA03L,EAGA55L,GAAAyyC,YAAA,SAAA/gC,GACA,MAAAA,GAAA5K,MAAA,SAAsB8lD,OAAA+sI,OAItB35L,EAAAwyC,gBAAAxyC,EAAAyyC,YAEAzyC,EAAA0yC,cAAA,SAAAhhC,GACA,MAAAA,GAAA5K,MAAA,KAAAuD,IAAAkE,SAGAvO,EAAA2yC,sBAAA,SAAAjhC,GAGA,OAFA49J,MACA7iK,EAAAiF,EAAA5K,MAAA,KAAAuD,IAAAgvL,GACA14L,EAAA,EAAiBA,EAAA8L,EAAAnJ,OAAkB3C,GAAA,EACnC2uK,EAAAnsK,MACA0qC,UAAAphC,EAAA9L,GACAmtC,GAAArhC,EAAA9L,EAAA,GACAisC,KAAAngC,EAAA9L,EAAA,IAGA,OAAA2uK,IAGAtvK,EAAA4yC,qBAAA,SAAAlhC,GACA,MAAAA,GAAA5K,MAAA,KAAAuD,IAAA,SAAA2nC,GACA,MAAAA,GAAA1sC,UAAA,EAAA0sC,EAAA1uC,OAAA,GAAAwD,MAAA,KAAA8lD,OAAA+sI,SAIA35L,EAAA6yC,yBAAA,SAAAnhC,GACA,MAAAA,GAAA5K,MAAA,KAAqBuD,IAAA,SAAA4rB,GACrB,MAAAA,GAAAnvB,MAAA,KAAAuD,IAAA,SAAApH,GACA,GAAA42L,GAAA14K,IASA,OAPA,MAAAle,EAAA,GACA42L,EAAAR,EAAAp2L,IAEA42L,EAAAR,EAAAp2L,EAAAqC,UAAA,EAAArC,EAAAK,SACA6d,OAIA04K,OACA14K,gCCrHA,GAAAkxF,GAAA7xG,EAAA,IAGAs5L,EAAA,WAyBAC,EAAA,SAAAz7K,EAAAjV,EAAA8mB,GACA,GAIAhlB,IAAAmT,EAAA,KAJAjV,EAAApG,iBAAAyK,UACArE,EAAApG,OAAAoG,EAAAlG,KAAAgtB,IAAA9mB,EAAAnI,OACAmI,EAAApG,QAGA,IAAAoG,EAAAqlD,MACA,OAAA/tD,GAAA,EAAmBA,EAAA0I,EAAAqlD,MAAAprD,OAAsB3C,GAAA,GACzC,GAAAe,GAAA2H,EAAAqlD,MAAA/tD,EACA0I,GAAAnI,KACAiK,EAAAhI,KAAAgtB,EAAA9mB,EAAAnI,MAAAQ,IAGAyJ,EAAAhI,KAAAgtB,EAAA9mB,EAAAqlD,MAAA/tD,SAKAwK,GAAAhI,KAAAgtB,EAAA9mB,EAAAnI,MAEA,OA5CA,UAAA84L,GACA,GAAAr5L,GAAA,EACAwK,EAAAE,UACAgD,EAAAlD,EAAA7H,MACA,OAAA02L,GAAAtvL,QAAAovL,EAAA,SAAA3pL,GACA,GAAAxP,GAAA0N,EACA,MAAA8B,EAEA,IAAAjC,GAAA/C,EAAAxK,EAEA,QADAA,GAAA,EACAwP,GACA,SACA,SACA,UACA,MAAAH,QAAA9B,EACA,UACA,MAAAK,QAAAL,EACA,UACA,aA0BA3C,MAAA,KAAAJ,IAKA8uL,GACA,gBACA,gBACA,qBAEAC,GAAA,gBAGAj6L,GAAAD,QAAA,SAAA4tB,EAAA07B,GACAA,QAEA,MAAA17B,EAAArpB,UACAqpB,EAAArpB,QAAA,GAEA,MAAAqpB,EAAA1sB,OACA0sB,EAAA1sB,KAAA,KAEA0sB,EAAA8e,MAAA/9B,QAAA,SAAA6hC,GACA,MAAAA,EAAAkB,WACAlB,EAAAkB,SAAA,KAIA,IAAAyoJ,GAAA7wI,EAAA6wI,YAAAF,EACAG,EAAA9wI,EAAA8wI,YAAAF,EACAnpJ,IAkCA,OA/BAopJ,GAAAxrL,QAAA,SAAA2P,GACA+zF,EAAA/zF,GAAA3P,QAAA,SAAAtF,GACAA,EAAAnI,OAAA0sB,IAAA,MAAAA,EAAAvkB,EAAAnI,MACA6vC,EAAA5tC,KAAA42L,EAAAz7K,EAAAjV,EAAAukB,IAEAvkB,EAAAlG,OAAAyqB,IAAA,MAAAA,EAAAvkB,EAAAlG,OACAyqB,EAAAvkB,EAAAlG,MAAAwL,QAAA,SAAAoK,GACAg4B,EAAA5tC,KAAA42L,EAAAz7K,EAAAjV,EAAA0P,UAOA6U,EAAA8e,MAAA/9B,QAAA,SAAA6hC,GACAO,EAAA5tC,KAAA42L,EAAA,IAAA1nF,EAAAtxG,EAAA,GAAAyvC,IAEA4pJ,EAAAzrL,QAAA,SAAA2P,GACA+zF,EAAA/zF,GAAA3P,QAAA,SAAAtF,GACAA,EAAAnI,OAAAsvC,IAAA,MAAAA,EAAAnnC,EAAAnI,MACA6vC,EAAA5tC,KAAA42L,EAAAz7K,EAAAjV,EAAAmnC,IAEAnnC,EAAAlG,OAAAqtC,IAAA,MAAAA,EAAAnnC,EAAAlG,OACAqtC,EAAAnnC,EAAAlG,MAAAwL,QAAA,SAAAoK,GACAg4B,EAAA5tC,KAAA42L,EAAAz7K,EAAAjV,EAAA0P,YAOAg4B,EAAAhmC,KAAA,0BAAAxK,EAAA4B,EAAAT,GAAA,YCqVA,SAAS24L,GAA2BzN,GAChC,MAAOA,GAAUlgJ,MAAMsD,KAAK,SAAAjvC,GAAA,MACxBA,GAAEqqL,UAAuB,IAAXrqL,EAAE6rC,ODvVxBzqC,EAAAyG,ECvGO,SAA6BgkL,GAEhC,GAAM0N,GAAY,GAAIrmK,KAGhBi/D,KALqCh8D,KAAAC,KAAAC,QAAA,KAO3C,OAAAC,GAAAC,EAAgBs1J,EAAUlgJ,MAA1BlV,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAiC,IAAtBn2B,GAAsBs2B,EAAA3rB,MAEvB2hE,EAAOtsE,EAAEud,IAEf,IAAa,UAAT+uD,GAA6B,UAATA,EAAxB,CAJ6B,GAAAr1C,MAAAC,KAAAC,QAAA,KAS7B,OAAAC,GAAAC,EAAkBr3B,EAAEuwC,IAApB9Z,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAyB,IAAdsZ,GAAcnZ,EAAAzsB,MACf6lC,GACFy/C,UAAW1/C,EAAImhE,KACfplC,OACA+nC,SAAa/nC,EAAb,IAAqB/7B,EAAIC,MACzBrwC,KAAMowC,EAAIC,MACV0/C,YAAa3/C,EAAIkhE,UAAY,EAC7B/gB,cACAN,qBAAsB7/C,EAAIE,QAC1BsgD,gBAGJwoG,GAAUxkK,IAAIyb,EAAM4/C,qBAAsB5/C,IArBjB,MAAAzqB,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAAA,GAAAkB,MAAAC,KAAAC,QAAA,KAyB7B,OAAAC,GAAAC,GAAmBz4B,EAAEmxC,UAArB1a,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,KAAiC,IAAtB8Y,GAAsB3Y,EAAA7tB,MACvB+lF,EAAa2nG,EAAAxwL,EAAa4pC,gBAAgBN,EAAK5nC,QAC/CinC,EAAQ+oJ,EAAU74L,IAAIywC,EAAKV,QAE5BD,KAILA,EAAMkgD,WAAaA,IAjCM,MAAA3qE,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,IAAA,GAAAI,MAAAC,KAAAC,QAAA,KAqC7B,OAAAC,GAAAC,GAAiB/4B,EAAEqxC,YAAnB5a,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,KAAiC,IAAtBq4D,GAAsBl4D,EAAAnuB,MACvB6lC,EAAQ+oJ,EAAU74L,IAAIswF,EAAGvgD,QAE1BD,IAILA,EAAMugD,aAAa3uF,MACfyuF,UAAWG,EAAGke,SAAW,GACzB3xF,KAAMyzE,EAAGzzE,QA9CY,MAAAwI,GAAA6S,KAAAC,EAAA9S,EAAA,aAAA4S,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,WAAA4B,EAAA,KAAAC,IAAA,GAAAmB,MAAAC,KAAAC,QAAA,KAmD7B,OAAAC,GAAAC,GAAkBp6B,EAAEupI,SAApB9yG,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,KAA+B,IAApBuvG,GAAoBpvG,EAAAxvB,OAnDF,SAmDlB4+H,GACP,GAAMh5C,GAAcg5C,EAAI5+H,MAClBmB,EAAMy9H,EAAIz9H,IACVwkF,GACFhkB,OACAxgE,MACAykF,cAIe4B,GAAiBljD,KAAK,SAAAuqJ,GAAA,MACrClpG,GAAgBhkB,OAASktH,EAAqBltH,MACvCgkB,EAAgBxkF,MAAQ0tL,EAAqB1tL,OAIpDqmF,EAAiB/vF,KAAKkuF,IAhBnBi5C,IAnDkB,MAAAxjH,GAAAkU,KAAAC,EAAAnU,EAAA,aAAAiU,GAAAI,EAAApD,QAAAoD,EAAApD,SAAA,WAAAiD,EAAA,KAAAC,OAPU,MAAAnU,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IA+E3C,OACI67D,OAAQnlF,MAAMQ,KAAKgsL,EAAU/iK,UAC7B47D,iBACAD,yBASD,SAA+B05F,GAClC,GAAMlgJ,GAAQ2tJ,EAA2BzN,GACnCr/I,EAAcb,EAAMa,aAAeq/I,EAAUr/I,YAC/C+kD,QAEJ,QAAQ5lD,EAAMqjE,OACd,IAAK,SACDzd,EAAO,QACP,MACJ,KAAK,UACDA,EAAO,QACP,MACJ,KAAK,UACDA,EAAO,OAIX,OACIA,OACAC,eAEQC,UAAWjlD,EAAYjvB,KACvB5S,MAAO6hC,EAAYl8B,aAY5B,SAA8Bu7K,GACjC,GAAMlgJ,GAAQ2tJ,EAA2BzN,GACnCtd,KAFsCj0I,KAAAC,KAAAC,QAAA,KAI5C,OAAAC,GAAAC,EAAgBiR,EAAM4iI,WAAtB93I,OAAAC,cAAA4D,GAAAG,EAAAC,EAAA/D,QAAAC,MAAA0D,KAAkC,IAAvBr6B,GAAuBw6B,EAAA9vB,KAE9B,IAAoB,IAAhB1K,EAAE6sC,UAAN,CAIA,GAAMH,IACFE,WAAY5sC,EAAE4sC,WACdE,GAAI9sC,EAAE8sC,GACNlB,KAAM5rC,EAAE4rC,KACRxkB,SAAUpnB,EAAEonB,SACZvI,SAAU7e,EAAE4B,UAAUyY,cACtBiD,KAAMtd,EAAEsd,KAGZgxJ,GAAWnsK,KAAKuqC,KAnBwB,MAAA5mB,GAAAwU,KAAAC,EAAAzU,EAAA,aAAAuU,GAAAI,EAAA1D,QAAA0D,EAAA1D,SAAA,WAAAuD,EAAA,KAAAC,IAsB5C,MAAO+zI,QASJ,SAA8Bsd,GACjC,GAAMlgJ,GAAQ2tJ,EAA2BzN,GACnC/5F,EAAmBnmD,EAAM0+I,SACzBn+F,EAAWvgD,EAAM4+I,MAGvB,QACIkP,QAHkC,aAAtB5N,EAAU4N,QAItBvtG,WACA4F,yBASD,SAAqB+5F,GACxB,GAAM6N,GAAY,GAAIxmK,KADa4H,KAAAC,KAAAC,QAAA,KAInC,OAAAC,GAAAC,EAAgB2wJ,EAAUlgJ,MAA1BlV,OAAAC,cAAAoE,GAAAG,EAAAC,EAAAvE,QAAAC,MAAAkE,KAAiC,IAAtB96B,GAAsBi7B,EAAAtwB,KAC7B+uL,GAAU3kK,IAAI/0B,EAAE2zF,IAAK3zF,EAAEud,OALQ,MAAAwI,GAAAgV,KAAAC,EAAAjV,EAAA,aAAA+U,GAAAI,EAAAlE,QAAAkE,EAAAlE,SAAA,WAAA+D,EAAA,KAAAC,IAQnC,MAAO0+J,QAQJ,SAA2B7N,GAW9B,GAAM8N,GAAQ,GAAIzmK,KAIZ0mK,EAAS,GAAI1mK,KAGb2mK,EAAS,GAAIplK,KAlBsBoH,KAAAC,KAAAC,QAAA,KAoBzC,OAAAC,GAAAC,EAAgB4vJ,EAAUlgJ,MAA1BlV,OAAAC,cAAAmF,GAAAG,EAAAC,EAAAtF,QAAAC,MAAAiF,KAAiC,IAAtB77B,GAAsBg8B,EAAArxB,MACvB2hE,EAAOtsE,EAAEud,IAEf,IAAa,UAAT+uD,GAA6B,UAATA,EAAxB,CAH6B,GAAA7vC,MAAAC,KAAAC,QAAA,KAQ7B,OAAAC,GAAAC,GAAwB78B,EAAE8uC,gBAA1BrY,OAAAC,cAAA+F,GAAAG,EAAAC,EAAAlG,QAAAC,MAAA6F,KAA4C,IAAjCoT,GAAiCjT,EAAAjyB,KAExC,IAA4B,QAAxBklC,EAAUV,UAAd,CAIA,GAAMV,GACAoB,EAAUpB,MAAM1oC,MAAM,KAAKuD,IAAI,SAAAywB,GAAA,MAAQvsB,QAAOusB,KAC9CA,EAAO0U,EAAM,GACbi9I,EAAUj9I,EAAM,EAEtBmrJ,GAAO7kK,IAAIgF,EAAM2xJ,GACjBmO,EAAO9lK,IAAI23J,KApBc,MAAA3lK,GAAA2W,KAAAC,EAAA5W,EAAA,aAAA0W,GAAAI,EAAA7F,QAAA6F,EAAA7F,SAAA,WAAA0F,EAAA,KAAAC,IAAA,GAAAI,MAAAC,KAAAC,QAAA,KAuB7B,OAAAC,GAAAC,GAAyBn9B,EAAEyuC,WAA3BhY,OAAAC,cAAAqG,GAAAG,EAAAC,EAAAxG,QAAAC,MAAAmG,KAAwC,IAA7B+8J,GAA6B58J,EAAAvyB,MAC9BovB,EAAO+/J,EAAW93L,EAGxB,KAAI63L,EAAO9hK,IAAIgC,GAAf,CAIA,GAAIt2B,GAAOk2L,EAAMj5L,IAAIq5B,EAYrB,QAVKt2B,IACDA,GACI6oE,OACAo/G,QAASkO,EAAOl5L,IAAIq5B,GACpBA,QAGJ4/J,EAAM5kK,IAAIgF,EAAMt2B,IAGZq2L,EAAWjkL,WACnB,IAAK,QACDpS,EAAKy3F,MAAQ4+F,EAAWnvL,KACxB,MAEJ,KAAK,OACD,GAAM6rB,GAASsjK,EAAWnvL,MAAM5E,MAAM,KAChCkoE,EAAWz3C,EAAO,GAClB06E,EAAU16E,EAAO,EAEvB/yB,GAAKwqE,SAAWA,EAChBxqE,EAAKytG,QAAUA,CACf,MAEJ,KAAK,UACD,GAAMjjC,GAAW6rH,EAAWnvL,KAE5BlH,GAAKwqE,SAAWA,CAChB,MAEJ,KAAK,QACD,GAAMijC,GAAU4oF,EAAWnvL,KAE3BlH,GAAKytG,QAAUA,KAlEM,MAAAnrF,GAAAiX,KAAAC,EAAAlX,EAAA,aAAAgX,GAAAI,EAAAnG,QAAAmG,EAAAnG,SAAA,WAAAgG,EAAA,KAAAC,OApBQ,MAAAlX,GAAA+V,KAAAC,EAAAhW,EAAA,aAAA8V,GAAAI,EAAAjF,QAAAiF,EAAAjF,SAAA,WAAA8E,EAAA,KAAAC,IA6FzC,MAAO49J,QAUJ,SAA8BI,GACjC,GAAMC,GAAwB79F,eAAeC,kBACvCvC,GACF3H,UACAE,iBACAD,qBAOE8nG,EAAe,GAAI/mK,KAZgC23J,KAAAC,KAAAC,QAAA,KAezD,OAAAC,GAAAC,EAA0B8O,EAAuB7nG,OAAjDz7D,OAAAC,cAAAm0J,GAAAG,EAAAC,EAAAt0J,QAAAC,MAAAi0J,KAAyD,IAA9CqP,GAA8ClP,EAAArgL,OAfA,SAe9CuvL,GACP,GAAMC,GAAkBD,EAAY/5L,KAAKma,aAEzC,IAAwB,QAApB6/K,EAIA,MAHAF,GAAallK,IACTmlK,EAAYxpG,WAAWqC,IAAKmnG,EAAY9pG,sBAE5C,UAGJ,IAAMgqG,GAAaJ,EAAsB9nG,OAAOjjD,KAAK,SAAAuB,GAAA,MACjDA,GAAMrwC,KAAKma,gBAAkB6/K,GACtB3pJ,EAAM87B,OAAS4tH,EAAY5tH,MAC3B97B,EAAMy/C,YAAciqG,EAAYjqG,WAG3C,KAAKmqG,EACD,gBAGJ,IAAM5pJ,IACFy/C,UAAWmqG,EAAWnqG,UACtB3jB,KAAM8tH,EAAW9tH,KACjB+nC,SAAa+lF,EAAW9tH,KAAxB,IAAgC8tH,EAAWj6L,KAC3CA,KAAMi6L,EAAWj6L,KACjB+vF,YAAakqG,EAAWlqG,aAAe,EACvCQ,cACAN,qBAAsB8pG,EAAY9pG,qBAClCW,iBA3CiD68F,KAAAC,KAAAC,QAAA,KA8CrD,OAAAC,GAAAC,EAA8B1tL,OAAOg3B,KAAK4iK,EAAYxpG,YAAtDj6D,OAAAC,cAAAk3J,GAAAG,EAAAC,EAAAr3J,QAAAC,MAAAg3J,KAAmE,IAAxDyM,GAAwDtM,EAAApjL,MACzD2vL,EACAJ,EAAYxpG,WAAW2pG,GAFkC7L,KAAAC,KAAAC,QAAA,KAI/D,OAAAC,GAAAC,EAA6BtuL,OAAOg3B,KAAK8iK,EAAW1pG,YAApDj6D,OAAAC,cAAA83J,GAAAG,EAAAC,EAAAj4J,QAAAC,MAAA43J,KAAiE,IAAtD+L,GAAsD5L,EAAAhkL,MACvD6vL,EACAJ,EAAW1pG,WAAW6pG,EAE5B,IAAIA,IAAmBF,GAMnBG,IAAoBF,EAAkB,CAEtC9pJ,EAAMkgD,WAAW6pG,GAAkBC,CACnC,SAjBuD,MAAAz0K,GAAA0oK,KAAAC,EAAA3oK,EAAA,aAAAyoK,GAAAI,EAAA53J,QAAA43J,EAAA53J,SAAA,WAAAy3J,EAAA,KAAAC,MA9Cd,MAAA3oK,GAAA8nK,KAAAC,EAAA/nK,EAAA,aAAA6nK,GAAAI,EAAAh3J,QAAAg3J,EAAAh3J,SAAA,WAAA62J,EAAA,KAAAC,IAAA,GAAAG,MAAAC,KAAAC,QAAA,KAoErD,OAAAC,GAAAC,EAAuB6L,EAAYnpG,aAAnCt6D,OAAAC,cAAAu3J,GAAAG,EAAAC,EAAA13J,QAAAC,MAAAq3J,KAAiD,IAAtCwM,GAAsCrM,EAAAzjL,OApEI,SAoE1C8vL,GACP,GAAMC,GAAUN,EAAWrpG,aAAa9hD,KAAK,SAAA+hD,GAAA,MACzCA,GAAGzzE,OAASk9K,EAASl9K,MACdyzE,EAAGH,YAAc4pG,EAAS5pG,WAGjC6pG,IAEAlqJ,EAAMugD,aAAa3uF,KAAKs4L,IARrBD,IApE0C,MAAA10K,GAAAmoK,KAAAC,EAAApoK,EAAA,aAAAkoK,GAAAI,EAAAr3J,QAAAq3J,EAAAr3J,SAAA,WAAAk3J,EAAA,KAAAC,IAiFrDt0F,EAAkB3H,OAAO9vF,KAAKouC,IAlEvB0pJ,IAf8C,MAAAn0K,GAAA+kK,KAAAC,EAAAhlK,EAAA,aAAA8kK,GAAAI,EAAAj0J,QAAAi0J,EAAAj0J,SAAA,WAAA8zJ,EAAA,KAAAC,IAAA,GAAAG,MAAAC,KAAAC,QAAA,KAqFzD,OAAAC,GAAAC,EAAoBzxF,EAAkB3H,OAAtCz7D,OAAAC,cAAAw0J,GAAAG,EAAAC,EAAA30J,QAAAC,MAAAs0J,KAA8C,IAAnC16I,GAAmC66I,EAAA1gL,MACpC2lC,EAAcE,EAAM4/C,oBAE1B,IAAK6pG,EAAaliK,IAAIuY,GAAtB,CAIA,GAAMqqJ,IACF1qG,UAAWz/C,EAAMy/C,UACjB3jB,KAAM97B,EAAM87B,KACZ+nC,SAAa7jE,EAAM87B,KAAnB,OACAnsE,KAAM,MACNuwF,YACIqC,IAAKziD,GAET8/C,qBAAsB6pG,EAAav5L,IAAI4vC,GACvCygD,gBAIJ8I,GAAkB3H,OAAO9vF,KAAKu4L,KAzGuB,MAAA50K,GAAAolK,KAAAC,EAAArlK,EAAA,aAAAmlK,GAAAI,EAAAt0J,QAAAs0J,EAAAt0J,SAAA,WAAAm0J,EAAA,KAAAC,IAAA,GAAAuB,MAAAC,KAAAC,QAAA,KA6GzD,OAAAC,GAAAC,EAA8BgN,EAAuB5nG,iBAArD17D,OAAAC,cAAAi2J,GAAAG,EAAAC,EAAAp2J,QAAAC,MAAA+1J,KAAuE,IAA5DiO,GAA4D9N,EAAAniL,OA7Gd,SA6G9CiwL,GACP,GAAMC,GACAb,EAAsB7nG,iBAAiBljD,KAAK,SAAAkjE,GAAA,MAC1CA,GAAU7lC,OAASsuH,EAAgBtuH,MAC5B6lC,EAAUrmG,MAAQ8uL,EAAgB9uL,KAGjD,IAAI+uL,EAAgB,CAChB,GAAM1oF,IACF7lC,KAAMuuH,EAAevuH,KACrBiiH,iBAAkBl1G,QAAQuhH,EAAgBrM,kBAC1Ch+F,YAAaqqG,EAAgBrqG,YAC7BzkF,IAAK+uL,EAAe/uL,IAIxB+tF,GAAkB1H,iBAAiB/vF,KAAK+vG,KAhBrCyoF,IA7G8C,MAAA70K,GAAA6mK,KAAAC,EAAA9mK,EAAA,aAAA4mK,GAAAI,EAAA/1J,QAAA+1J,EAAA/1J,SAAA,WAAA41J,EAAA,KAAAC,IAAA,GAAAQ,MAAAC,KAAAC,QAAA,KAmIzD,OAAAC,GAAAC,EAAiCsM,EAAuB3nG,cAAxD37D,OAAAC,cAAA22J,GAAAG,EAAAC,EAAA92J,QAAAC,MAAAy2J,KAAuE,IAA5DyN,GAA4DtN,EAAA7iL,OAnId,SAmI9CmwL,GACP,GAAMC,GACAf,EAAsB5nG,cAAcnjD,KAAK,SAAAkkD,GAAA,MACvCA,KAAQ2nG,GAGZC,IAEAlhG,EAAkBzH,cAAchwF,KAAK24L,IARlCD,IAnI8C,MAAA/0K,GAAAunK,KAAAC,EAAAxnK,EAAA,aAAAsnK,GAAAI,EAAAz2J,QAAAy2J,EAAAz2J,SAAA,WAAAs2J,EAAA,KAAAC,IA+IzD,MAAO1zF,GA7bX,IAAAve,GAAA77E,EAAA,IAAA44L,EAAA54L,EAAAkB,EAAA26E,IAucwBzvC,4DCnbjB,IAjBmB1rC,GAiBb66L,GAjBa76L,EAiBwB,oBAhBxC86L,YAKF,QAAAA,GAAYz/K,iGAASjc,KAAA07L,EAAA,IAAA3lJ,qKAAA/1C,MAAA07L,EAAA1lJ,WAAAj1C,OAAAk1C,eAAAylJ,IAAAl7L,KAAAR,KACXic,GADW,OAIjBlb,QAAOC,eAAP+0C,EAA4B,QAAU3qC,MAAOxK,IAJ5Bm1C,EALnB,MAAA2lJ,6TAAsBhwL,OAAtBgwL,iDCqfV,QAASC,GAAmB19K,EAAS29K,EAAgBC,GACjDC,GACM,UACF,SAAAnmK,GAAA,MAAUimK,IAAiBjmK,YAC3BkmK,GAUR,QAASE,GAAsB99K,GAC3B,mDAEQA,EAAQ+9K,0BAkDpB,QAASC,GAAwBxvL,EAAUwR,GACjB,mBAAXu4B,SAA2BA,QAAWA,OAAO0lJ,QAMxD1lJ,OAAO0lJ,QAAQlwH,YACX/tD,EAAQ+9K,2BACNG,eACF,SAAA1zK,GACI,IAAKA,IAAaA,EAASxkB,QAMvB,MAJArB,GAAOwF,KACH,6BAA8BouC,OAAO0lJ,QAAQE,eACjD3vL,OAAS,EAMb,IAAM4vL,GAAa5zK,EAASxkB,OAE5BrB,GAAOkB,IAAP,yBAAoCu4L,EACpC,IAAMC,GAjElB,SAA0BC,EAAYF,GAClC,IAMI,IAAK,GALCG,GAAKD,EAAW/1L,MAAM,KACtBi2L,EAAKJ,EAAW71L,MAAM,KAEtBuH,EAAMG,KAAK0mC,IAAI4nJ,EAAGx5L,OAAQy5L,EAAGz5L,QAE1B3C,EAAI,EAAGA,EAAI0N,EAAK1N,IAAK,CAC1B,GAAIq8L,GAAK,EACLC,EAAK,CAST,IAPIt8L,EAAIm8L,EAAGx5L,SACP05L,EAAK74L,SAAS24L,EAAGn8L,GAAI,KAErBA,EAAIo8L,EAAGz5L,SACP25L,EAAK94L,SAAS44L,EAAGp8L,GAAI,KAGrBmP,MAAMktL,IAAOltL,MAAMmtL,GACnB,QACG,IAAID,IAAOC,EACd,MAAOD,GAAKC,EAMpB,SACF,MAAO18L,GAIL,MAHAmyB,GAAqBC,iBAAiBpyB,GACtC2C,EAAO0Z,MAAM,oCAAqCrc,QAqCtCge,EAAQ2+K,kCACRP,EAER5vL,IAAU6vL,EAAgBA,KA1B9B7vL,MAAS,GAqCjB,QAASowL,GAAyB5+K,EAAS29K,EAAgBC,GAGvDrlJ,OAAO0lJ,QAAQlwH,YACX/tD,EAAQ+9K,2BAEJc,aACA/oH,QAAS91D,EAAQ8+K,6BAErB,SAAAt0K,GACI,GAAKA,EAYL7lB,EAAOkB,IAAI,4BAA6B2kB,GACxCu0K,EAAoBv0K,EAAUmzK,EAAgBC,OAb9C,CAEI,GAAMO,GAAY5lJ,OAAO0lJ,QAAQE,SAEjCP,GAAaO,YAAqB1wL,OAC5B0wL,EACA,GAAIa,GAAA30L,EACF40L,EAAAvyJ,+BACAyxJ,OA0DxB,QAASe,GAA6Bl/K,EAASm/K,EAAcC,GACzD,MAAgB,KAAZA,EACOrlJ,QAAQ0K,SAGZ,GAAI1K,SAAQ,SAAC4E,EAAS8F,GACzB,GAAI46I,GAAiBD,EACf36F,EAAW79F,OAAOmiF,YAAY,WAChCi1G,EAAwB,SAAAsB,GAChBA,GACA14L,OAAOoiF,cAAcyb,GACrB9lD,KAGuB,KADvB0gJ,IAEI56I,IACA79C,OAAOoiF,cAAcyb,KAG9BzkF,IACJm/K,KAaX,QAASJ,GAATlnJ,EAEQ1sB,EACAQ,GAAW,GAFT8kD,GAES54B,EAFT44B,SAAU8qD,EAED1jF,EAFC0jF,WAAYl9G,EAEbw5B,EAFax5B,KAG5B,IAAIoyD,EACAotH,GACM,WACF,SAAAnmK,GAAA,MAAUvM,IACNuM,SACA62C,SAAUkC,EACVjC,WAAY+sD,KAEhB5vG,GACE6nD,cAAe/C,QAClB,CAIH,GAAiB,KAAbA,EAIA,WAHA9kD,GAAU,GAAIqzK,GAAA30L,EACV40L,EAAAxyJ,gCAKR9gB,GAAU,GAAIqzK,GAAA30L,EACV40L,EAAAvyJ,+BACAruB,KASZ,QAASkhL,GAA8Bv/K,GACnC,IAAIA,EAAQw/K,oCAGRC,QAAiCA,EAGrC,GAAKz/K,EAAQ0/K,2BAAb,CAMA,GAAMhoL,GAAMpC,SAAS4F,cAAc,MAEnCxD,GAAIyvE,OAAS,WACTxiF,EAAOkB,IAAI,8CACX45L,MAEJ/nL,EAAI8a,QAAU,WACV7tB,EAAOkB,IAAI,sDACX45L,KAOJ,IAEMx+H,eAFQjhD,EAAQ0/K,2BAA2BvzL,QAAQ,IAAK,KAExD,YADSmJ,SAASsc,SAASk4E,SAC3B,MAENpyF,GAAIiE,aAAa,MAAOslD,OAxBpBw+H,MDzvBEhC,oBCJVkC,EAAA19L,EAAA,GAMM0C,EAAS1C,EAAQ,GAAqBsC,UAAUyD,GAChDmsB,EAAuBlyB,EAAQ,GAMjC29L,KAOAC,KAOAJ,EAAsB,KAOtBK,KAEAjC,EAAc,KAoDZkC,GAOFC,oBAAqB,KAErB7lH,aAAc,KAcd32D,KAvBmB,WA6BX,GANHxD,GAMGlT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,IALJmzL,yBACAC,gCACAnC,0BAA2B,KAC3ByB,iCACAE,2BAA4B,MAC7BxhK,EAAKpxB,UAAA,EAEJ/K,MAAKie,QAAUA,EAAUA,MACzB69K,EAAc3/J,EAEdn8B,KAAKo4E,aACCp4E,KAAKie,QAAQigL,sBACT,KAAOl+L,KAAKo+L,0BAA0BngL,GAE3Cje,KAAKo4E,cACNx1E,EAAOsB,KAAK,6BAapBk6L,0BApDmB,SAoDOngL,GAAS,GAAA83B,GAAA/1C,IAC/B,IAAI49L,EAAAt1L,EAAexB,SACf,MAAO,UAAC2tB,EAAGrL,EAAWQ,GAClB/kB,OAAOw5L,YAAYC,oBACfl1K,EACA,SAAC9M,EAAO+f,GACJ,GAAIkiK,SAmBAA,GADAjiL,GAAwB,sBAAfA,EAAM1b,KACF,GAAIq8L,GAAA30L,EACb40L,EAAAxyJ,gCAGS,GAAIuyJ,GAAA30L,EACbgU,EAAO+f,GAAe,YAER,kBAAdzS,IACDA,EAAU20K,KAG1B,IAAIX,EAAAt1L,EAAevB,aACtB,MAAO/G,MAAKw+L,sBACT,IAAIZ,EAAAt1L,EAAepB,sBAAuB,CAG7C,GAAMgF,GACAhM,EAAQ,IAAyBgxE,aAAahlE,MAEpD,OAAKA,GAAO6zF,wBAKA7zF,EAAO8zF,0BAQnBp9F,EAAOsB,KAAK,4CAELy3L,IATH/4L,EAAOwF,KACH,gEAGG,OATPxF,EAAOwF,KACH,sDAEG,MAYR,MAAIw1L,GAAAt1L,EAAe7B,YAAcm3L,EAAAt1L,EAAe5B,WAC9Ck3L,EAAAt1L,EAAejB,oBACTu2L,EAAAt1L,EAAed,mBAAqB,IAC3C5E,EAAOsB,KAAK,+CAEL,MACA+Z,EAAQkgL,mCACZlgL,EAAQwgL,6BACPxgL,EAAQ+9K,0BAGL,MAGXp5L,EAAOsB,KAAK,8CACZlE,KAAKi+L,oBA8bjB,SAA6BhgL,GAIzB,MAnBwBA,GAiBLA,EAhBgC,IAA/C84D,EAAE,kCAAkC/zE,QACpC+zE,EAAE,QAAQ2nH,OAAO,qCAErB3nH,EAAE,kCAAkCp9D,KAAK,OACrCoiL,EAAsB99K,IAcnB,GAAI+5B,SAAQ,SAAA4E,GAEfq/I,EAAwB,SAACsB,EAAWjB,GAChCuB,EAAqBN,EACrBO,EAA0BxB,EAC1B15L,EAAOsB,KAAP,+BAEQ25L,EAFR,oBAGQC,GACRlhJ,KACD3+B,IA7BX,IAA4BA,IA9aUA,GAAS8xC,KAAK,WAChCha,EAAKkoJ,oBAAsB,OAG5Bj+L,KAAK2+L,2BACLf,EAAAt1L,EAAenC,YAClB8X,EAAQw/K,8BACD,KAC6B,UAA7B54L,OAAOgrB,SAAStQ,UACvB3c,EAAOkB,IAAI,wEAGJ,OAGX05L,EAA8Bv/K,GAEvBje,KAAK4+L,wBAGhBh8L,EAAOkB,IACH,wDACA85L,EAAAt1L,EAAehC,iBACfs3L,EAAAt1L,EAAe/B,kBAEZ,OAQX2xE,YAjKmB,WAkKf,MAA6B,QAAtBl4E,KAAKo4E,cAQhBwmH,sBA1KmB,SA0KG3gL,EAASxR,EAAUknE,GAAe,GAAA/K,GAAA5oE,KAChD6+L,KACIC,EAA+C9+L,KAAKie,QAApD6gL,0CAYR,MAVoD,IAAhDA,GACIA,GAA8C,GAC3ClB,EAAAt1L,EAAef,qBACXu3L,KACXD,KACAj8L,EAAOkB,IAAP,iDAEQ85L,EAAAt1L,EAAef,sBAGtBs3L,QAAqBnB,EAA1B,CAaA,GAPIK,IACAA,KACAP,EAA8Bx9L,KAAKie,UAKX,OAAxBy/K,EAYA,MAXA74L,QAAOmI,WACH,WACgC,OAAxB0wL,IACAA,MAEJ90H,EAAKg2H,sBAAsBnyL,EAAUknE,IAEzC,SACJ/wE,GAAOkB,IACH,yDAQR45L,GAAsB,KACtBK,KAIApqH,EACI,GAAIspH,GAAA30L,EAAgB40L,EAAA3yJ,+BApCpBoxJ,GAAmB19K,EAASxR,EAAUknE,IAiD9C6qH,uBA1OmB,WA0OwC,GAApCvgL,GAAoClT,UAAA/H,OAAA,YAAA+H,UAAA,GAAAA,UAAA,MAAtBqe,EAAsBre,UAAA,GAAX6e,EAAW7e,UAAA,EACnDlG,QAAOk6L,yBACJl6L,OAAOk6L,wBAAwBC,kBAClCn6L,OAAOk6L,wBAAwBC,mBAEvB/mH,sBACIh6D,EAAQg6D,uBACDj4E,KAAKie,QAAQ8+K,6BAE5B,SAACruH,EAAU8qD,GAAX,MACIwjE,IAEQtuH,WACA8qD,cAEJpwG,EACAQ,IAER,SAAApD,GAAA,MAAOoD,GAAU,GAAIqzK,GAAA30L,EACjB40L,EAAAtyJ,8BACApkB,MAIRoD,EAAU,GAAIqzK,GAAA30L,EACV40L,EAAAryJ,qCAQZ8zJ,0BA3QmB,SA2QO1gL,EAAS29K,EAAgBC,GAAc,GAAA1yH,GAAAnpE,IAC7D,IAAiC,OAA7BA,KAAKi+L,oBAAT,CAD6D,GAAAgB,GAazDj/L,KAAKie,QAFL+9K,EAXyDiD,EAWzDjD,0BACAe,EAZyDkC,EAYzDlC,4BAGEmC,GACFlD,4BACAe,4BACI9+K,EAAQg6D,uBACD8kH,EAGf,IAAIc,EACAhB,EACIqC,EACAtD,EACAC,OACD,CAcH,GAbIiC,GAEAqB,MACI,+FAUJvB,EAAAt1L,EAAe5B,UAIf,WAHA1G,MAAKo/L,sBAAsBnhL,EAAS29K,EAChCC,EAKR,KACIrlJ,OAAOoyC,SAASy2G,QACZtD,EAAsB/7L,KAAKie,SAC3B,SAAArQ,GACIhL,EAAOkB,IAAI,mCAAoC8J,GAC/CiwL,KAIAV,EAA6Bh0H,EAAKlrD,QAAS,IAAK,IAC3C8xC,KAAK,WACF8sI,EACIqC,EACAtD,EACAC,KAEPzlI,MAAM,WACH+S,EAAKm2H,iCAAiCrhL,EAClC29K,EAAgBC,MAGhC77L,KAAKs/L,iCAAiCjyL,KAAKrN,KACvCie,EAAS29K,EAAgBC,IAEnC,MAAO57L,GACLD,KAAKs/L,iCAAiCrhL,EAAS29K,EAC3CC,EAAc57L,SAxEtBD,MAAKi+L,oBAAoBluI,KAAK,WAC1BoZ,EAAKw1H,0BACD1gL,EAAS29K,EAAgBC,MA6EzCuD,sBA5VmB,SA4VGnhL,EAAS29K,EAAgBC,EAAc57L,GACzD,GAAMs/L,GAAqBxD,EAAsB/7L,KAAKie,QAEtDA,GAAQ6X,SAAS,sBAAuBypK,GACxCv/L,KAAKw/L,kCAAkCvhL,EAAS29K,EAC5CC,EAAc57L,IAGtBq/L,iCApWmB,SAoWcrhL,EAAS29K,EAAgBC,EAAc57L,GACpE,GAAMs/L,GAAqBxD,EAAsB/7L,KAAKie,QAEtD,KApZF,8DAoZwChe,GA7YxC,yEA8Y4CA,GAtY5C,yFAuY4CA,GA7X5C,6GA8X0DA,IAC7Cge,EAAQykF,SAAW,GACW,kBAAvBzkF,GAAQwhL,YACa,kBAArBxhL,GAAQ6X,SACtB91B,KAAKo/L,sBAAsBnhL,EAAS29K,EAChCC,EAAc57L,OARtB,CAaA,GAAMmc,2CACwCmjL,CAE9C38L,GAAOkB,IAAIsY,EAAKnc,EAEhB,IAAMqc,GA9XR,2EA+XQrc,EACIi9L,EAAAzyJ,uCACAyyJ,EAAA1yJ,mCAEVqxJ,GAAa,GAAIoB,GAAA30L,EAAgBgU,EAAOF,MAK5CojL,kCAnYmB,SAmYevhL,EAAS29K,EAAgBC,GAAc,GAAAxjH,GAAAr4E,UACjEie,EAAQwhL,aAMZtC,EAA6Bn9L,KAAKie,QAASA,EAAQykF,SAAU,GACxD3yC,KAAK,WACF8tI,KACA5/K,EAAQ6X,SAAS,kBACjBuiD,EAAKsmH,0BAA0B1gL,EAC3B29K,EAAgBC,KAEvBzlI,MAAM,WACHiiB,EAAKmnH,kCAAkCvhL,EACnC29K,EAAgBC,KAdxBA,EAAa,GAAIoB,GAAA30L,EACb40L,EAAA1yJ,uCA0ThBniC,GAAAC,EAAAoV,IAAAld,KAAAqB,EAAA,2CAAA5B,EAAA4B,EAAAT,GAAA,uBCxxBAw2C,GAWA,GAAA8nJ,GAAAx/L,EAAA,IACAP,GAAAD,QAAAggM,GAAiC76L,OAAA+yC,EAAA/yC,sDCDjC,IAAAkP,GAAA7T,EAAA,GAEAP,GAAAD,QAAA,SAAAigM,EAAA32I,GACA,GAAAnkD,GAAA86L,KAAA96L,OAEAoZ,GACA2hL,cACAC,eACAC,YACAC,cAGA,QAAAtvL,KAAAu4C,GACAtnD,eAAAlB,KAAAwoD,EAAAv4C,KACAwN,EAAAxN,GAAAu4C,EAAAv4C,GAKA,IAAAgkF,GAAA1gF,EAAAjQ,IACA4wF,EAAA3gF,EAAAm1B,cAAArkC,GAGAswD,GACAu/B,iBACA5rD,eAAA/0B,EAAA+0B,eACAN,WAAAz0B,EAAAy0B,WACAE,gBAAA30B,EAAA20B,iBAUAisD,EAAAz0F,EAAA,WACA00F,EAAA10F,EAAA,WACA20F,EAAA30F,EAAA,WACA40F,EAAA50F,EAAA,WACA8/L,EAAA9/L,EAAA,UAGA,QAAAw0F,EAAAvrD,SACA,aACA,IAAAwrD,MAAAI,qBACA92E,EAAA2hL,WAEA,MADAnrG,GAAA,wDACAt/B,CAEAs/B,GAAA,+BAEAt/B,EAAA6/B,YAAAL,EACAqrG,EAAA12J,oBAAAzkC,GAEA8vF,EAAAM,iBAAApwF,GACA8vF,EAAAO,gBAAArwF,GACA8vF,EAAAQ,iBAAAtwF,GACA8vF,EAAAI,mBAAAlwF,GACA8vF,EAAAS,YAAAvwF,GACA8vF,EAAAsrG,wBAAAp7L,GACA8vF,EAAAurG,uBAAAr7L,GAEAm7L,EAAAG,oBAAAt7L,EACA,MACA,eACA,IAAAgwF,MAAAE,qBACA92E,EAAA4hL,YAEA,MADAprG,GAAA,yDACAt/B,CAEAs/B,GAAA,gCAEAt/B,EAAA6/B,YAAAH,EACAmrG,EAAA12J,oBAAAzkC,GAEAgwF,EAAAI,iBAAApwF,GACAgwF,EAAAM,iBAAAtwF,GACAgwF,EAAAE,mBAAAlwF,GACAgwF,EAAAO,YAAAvwF,GAEAm7L,EAAAG,oBAAAt7L,EACA,MACA,YACA,IAAA+vF,MAAAG,qBAAA92E,EAAA6hL,SAEA,MADArrG,GAAA,yDACAt/B,CAEAs/B,GAAA,6BAEAt/B,EAAA6/B,YAAAJ,EACAorG,EAAA12J,oBAAAzkC,GAEA+vF,EAAAK,iBAAApwF,GACA+vF,EAAAG,mBAAAlwF,GACA+vF,EAAAwrG,iBAAAv7L,EAGA,MACA,cACA,IAAAiwF,IAAA72E,EAAA8hL,WAEA,MADAtrG,GAAA,wDACAt/B,CAEAs/B,GAAA,+BAEAt/B,EAAA6/B,YAAAF,EACAkrG,EAAA12J,oBAAAzkC,GAEAiwF,EAAAurG,qBAAAx7L,GACAiwF,EAAAwrG,iBAAAz7L,GACAiwF,EAAAyrG,oBAAA17L,GACAiwF,EAAA0rG,qBAAA37L,GACAiwF,EAAA2rG,0BAAA57L,GACAiwF,EAAAG,iBAAApwF,GACAiwF,EAAA4rG,sBAAA77L,GAEAm7L,EAAAG,oBAAAt7L,EACA,MACA,SACA4vF,EAAA,wBAIA,MAAAt/B,iCC9HA,IAAAphD,GAAA7T,EAAA,IACAu0F,EAAA1gF,EAAAjQ,IAEA6wF,GACAO,gBAAA,SAAArwF,GACAA,EAAA+zE,YAAA/zE,EAAA+zE,aAAA/zE,EAAAsxE,mBAGAif,YAAA,SAAAvwF,GACA,mBAAAA,MAAAkxE,qBAAA,WACAlxE,GAAAkxE,kBAAAt0E,WAAA,CACAV,OAAAC,eAAA6D,EAAAkxE,kBAAAt0E,UAAA,WACAN,IAAA,WACA,MAAAnB,MAAA01F,UAEAlgE,IAAA,SAAAnpB,GACArM,KAAA01F,UACA11F,KAAAooC,oBAAA,QAAApoC,KAAA01F,UAEA11F,KAAAkoC,iBAAA,QAAAloC,KAAA01F,SAAArpF,KAGA,IAAAs0L,GACA97L,EAAAkxE,kBAAAt0E,UAAA+6F,oBACA33F,GAAAkxE,kBAAAt0E,UAAA+6F,qBAAA,WACA,GAAAtG,GAAAl2F,IAyCA,OAxCAk2F,GAAAP,eACAO,EAAAP,aAAA,SAAA11F,GAGAA,EAAA01B,OAAAuS,iBAAA,oBAAA0tD,GACA,GAAAr8C,EAEAA,GADA10C,EAAAkxE,kBAAAt0E,UAAA24F,aACAlE,EAAAkE,eAAA1qD,KAAA,SAAAnnC,GACA,MAAAA,GAAAkiE,OAAAliE,EAAAkiE,MAAAhoE,KAAAmzF,EAAAnrB,MAAAhoE,MAG4BgoE,MAAAmrB,EAAAnrB,MAG5B,IAAAt4C,GAAA,GAAA61B,OAAA,QACA71B,GAAAs4C,MAAAmrB,EAAAnrB,MACAt4C,EAAAonB,WACApnB,EAAA6hE,aAAmCz6C,YACnCpnB,EAAAomD,SAAAt4E,EAAA01B,QACAugE,EAAAtuC,cAAAz1B,KAEAlyB,EAAA01B,OAAAskD,YAAA5rE,QAAA,SAAAo8D,GACA,GAAAlxB,EAEAA,GADA10C,EAAAkxE,kBAAAt0E,UAAA24F,aACAlE,EAAAkE,eAAA1qD,KAAA,SAAAnnC,GACA,MAAAA,GAAAkiE,OAAAliE,EAAAkiE,MAAAhoE,KAAAgoE,EAAAhoE,MAG4BgoE,QAE5B,IAAAt4C,GAAA,GAAA61B,OAAA,QACA71B,GAAAs4C,QACAt4C,EAAAonB,WACApnB,EAAA6hE,aAAmCz6C,YACnCpnB,EAAAomD,SAAAt4E,EAAA01B,QACAugE,EAAAtuC,cAAAz1B,MAGA+jE,EAAAhuD,iBAAA,YAAAguD,EAAAP,eAEAgrG,EAAA11L,MAAAirF,EAAAnrF,cAKAm1L,uBAAA,SAAAr7L,GAEA,mBAAAA,MAAAkxE,qBACA,cAAAlxE,GAAAkxE,kBAAAt0E,YACA,oBAAAoD,GAAAkxE,kBAAAt0E,UAAA,CACA,GAAAm/L,GAAA,SAAA1qG,EAAAzrB,GACA,OACAA,QACAo2H,WAQA,gBAPA7gM,KAAA8gM,QACA,UAAAr2H,EAAAsC,KACA/sE,KAAA8gM,MAAA5qG,EAAA6qG,iBAAAt2H,GAEAzqE,KAAA8gM,MAAA,MAGA9gM,KAAA8gM,OAEAE,IAAA9qG,GAKA,KAAArxF,EAAAkxE,kBAAAt0E,UAAA04F,WAAA,CACAt1F,EAAAkxE,kBAAAt0E,UAAA04F,WAAA,WAEA,MADAn6F,MAAAihM,SAAAjhM,KAAAihM,aACAjhM,KAAAihM,SAAA32L,QAEA,IAAA42L,GAAAr8L,EAAAkxE,kBAAAt0E,UAAAo3E,QACAh0E,GAAAkxE,kBAAAt0E,UAAAo3E,SAAA,SAAApO,EAAA90C,GACA,GACA6qC,GAAA0gI,EAAAj2L,MADAjL,KACA+K,UAKA,OAJAy1D,KACAA,EAAAogI,EAHA5gM,KAGAyqE,GAHAzqE,KAIAihM,SAAAp+L,KAAA29D,IAEAA,EAGA,IAAA2gI,GAAAt8L,EAAAkxE,kBAAAt0E,UAAAwzG,WACApwG,GAAAkxE,kBAAAt0E,UAAAwzG,YAAA,SAAAz0C,GAEA2gI,EAAAl2L,MADAjL,KACA+K,UACA,IAAAmvF,GAFAl6F,KAEAihM,SAAAl8L,QAAAy7D,IACA,IAAA05B,GAHAl6F,KAIAihM,SAAAz2L,OAAA0vF,EAAA,IAIA,GAAAknG,GAAAv8L,EAAAkxE,kBAAAt0E,UAAAq4F,SACAj1F,GAAAkxE,kBAAAt0E,UAAAq4F,UAAA,SAAAnkE,GACA,GAAAugE,GAAAl2F,IACAk2F,GAAA+qG,SAAA/qG,EAAA+qG,aACAG,EAAAn2L,MAAAirF,GAAAvgE,IACAA,EAAAskD,YAAA5rE,QAAA,SAAAo8D,GACAyrB,EAAA+qG,SAAAp+L,KAAA+9L,EAAA1qG,EAAAzrB,MAIA,IAAA42H,GAAAx8L,EAAAkxE,kBAAAt0E,UAAAw4F,YACAp1F,GAAAkxE,kBAAAt0E,UAAAw4F,aAAA,SAAAtkE,GACA,GAAAugE,GAAAl2F,IACAk2F,GAAA+qG,SAAA/qG,EAAA+qG,aACAI,EAAAp2L,MAAAirF,GAAAvgE,IAEAA,EAAAskD,YAAA5rE,QAAA,SAAAo8D,GACA,GAAAjK,GAAA01B,EAAA+qG,SAAAvxJ,KAAA,SAAA9tC,GACA,MAAAA,GAAA6oE,WAEAjK,IACA01B,EAAA+qG,SAAAz2L,OAAA0rF,EAAA+qG,SAAAl8L,QAAAy7D,GAAA,UAIK,oBAAA37D,MAAAkxE,mBACL,cAAAlxE,GAAAkxE,kBAAAt0E,WACA,oBAAAoD,GAAAkxE,kBAAAt0E,WACAoD,EAAAi4F,gBACA,QAAAj4F,GAAAi4F,aAAAr7F,WAAA,CACA,GAAA6/L,GAAAz8L,EAAAkxE,kBAAAt0E,UAAA04F,UACAt1F,GAAAkxE,kBAAAt0E,UAAA04F,WAAA,WACA,GAAAjE,GAAAl2F,KACAovG,EAAAkyF,EAAAr2L,MAAAirF,KAIA,OAHAkZ,GAAA/gG,QAAA,SAAAmyD,GACAA,EAAAwgI,IAAA9qG,IAEAkZ,GAGAruG,OAAAC,eAAA6D,EAAAi4F,aAAAr7F,UAAA,QACAN,IAAA,WAQA,gBAPAnB,KAAA8gM,QACA,UAAA9gM,KAAAyqE,MAAAsC,KACA/sE,KAAA8gM,MAAA9gM,KAAAghM,IAAAD,iBAAA/gM,KAAAyqE,OAEAzqE,KAAA8gM,MAAA,MAGA9gM,KAAA8gM,WAMA3rG,iBAAA,SAAAtwF,GACA,GAAAwvE,GAAAxvE,KAAAwvE,GAEA,iBAAAxvE,MACAA,EAAAgxF,kBACA,aAAAhxF,GAAAgxF,iBAAAp0F,WAEAV,OAAAC,eAAA6D,EAAAgxF,iBAAAp0F,UAAA,aACAN,IAAA,WACA,MAAAnB,MAAA81F,YAEAtgE,IAAA,SAAAG,GACA,GAAA51B,GAAAC,IAEAA,MAAA81F,WAAAngE,EACA31B,KAAAk/D,KACAmV,EAAA+F,gBAAAp6E,KAAAk/D,KAGAvpC,GAIA31B,KAAAk/D,IAAAmV,EAAAE,gBAAA5+C,GAGAA,EAAAuS,iBAAA,sBACAnoC,EAAAm/D,KACAmV,EAAA+F,gBAAAr6E,EAAAm/D,KAEAn/D,EAAAm/D,IAAAmV,EAAAE,gBAAA5+C,KAEAA,EAAAuS,iBAAA,yBACAnoC,EAAAm/D,KACAmV,EAAA+F,gBAAAr6E,EAAAm/D,KAEAn/D,EAAAm/D,IAAAmV,EAAAE,gBAAA5+C,MAhBA31B,KAAAk/D,IAAA,QAwBA+gI,wBAAA,SAAAp7L,GAkHA,QAAA08L,GAAArrG,EAAAxD,GACA,GAAAjiD,GAAAiiD,EAAAjiD,GAOA,OANA1vC,QAAAg3B,KAAAm+D,EAAAsrG,qBAAAnzL,QAAA,SAAAozL,GACA,GAAAC,GAAAxrG,EAAAsrG,gBAAAC,GACAE,EAAAzrG,EAAA0rG,SAAAF,EAAAj/L,GACAguC,KAAArmC,QAAA,GAAA4yD,QAAA2kI,EAAAl/L,GAAA,KACAi/L,EAAAj/L,MAEA,GAAAgpF,wBACAztE,KAAA00E,EAAA10E,KACAyyB,QA3HA,GAAAikD,GAAA3gF,EAAAm1B,cAAArkC,EAEA,MAAAA,EAAAkxE,kBAAAt0E,UAAAo3E,UACA6b,EAAAzwF,SAAA,IADA,CAOA,GAAA49L,GAAAh9L,EAAAkxE,kBAAAt0E,UACAo3F,eACAh0F,GAAAkxE,kBAAAt0E,UAAAo3F,gBAAA,WACA,GAAA94F,GAAAC,KACA8hM,EAAAD,EAAA52L,MAAAjL,KAEA,OADAD,GAAAyhM,gBAAAzhM,EAAAyhM,oBACAM,EAAA/3L,IAAA,SAAA4rB,GACA,MAAA51B,GAAAyhM,gBAAA7rK,EAAAlzB,MAIA,IAAA2+L,GAAAv8L,EAAAkxE,kBAAAt0E,UAAAq4F,SACAj1F,GAAAkxE,kBAAAt0E,UAAAq4F,UAAA,SAAAnkE,GACA,GAAAugE,GAAAl2F,IAeA,IAdAk2F,EAAA0rG,SAAA1rG,EAAA0rG,aACA1rG,EAAAsrG,gBAAAtrG,EAAAsrG,oBAEA7rK,EAAAskD,YAAA5rE,QAAA,SAAAo8D,GAIA,GAHAyrB,EAAAiE,aAAAzqD,KAAA,SAAA9tC,GACA,MAAAA,GAAA6oE,YAGA,SAAAwuE,cAAA,wBACA,yBAKA/iD,EAAAsrG,gBAAA7rK,EAAAlzB,IAAA,CACA,GAAAs/L,GAAA,GAAAl9L,GAAA+zE,YAAAjjD,EAAAskD,YACAic,GAAA0rG,SAAAjsK,EAAAlzB,IAAAs/L,EACA7rG,EAAAsrG,gBAAAO,EAAAt/L,IAAAkzB,EACAA,EAAAosK,EAEAX,EAAAn2L,MAAAirF,GAAAvgE,IAGA,IAAA0rK,GAAAx8L,EAAAkxE,kBAAAt0E,UAAAw4F,YACAp1F,GAAAkxE,kBAAAt0E,UAAAw4F,aAAA,SAAAtkE,GACA31B,KACA4hM,SADA5hM,KACA4hM,aADA5hM,KAEAwhM,gBAFAxhM,KAEAwhM,oBAEAH,EAAAp2L,MAJAjL,WAIA4hM,SAAAjsK,EAAAlzB,KAAAkzB,UAJA31B,MAKAwhM,gBALAxhM,KAKA4hM,SAAAjsK,EAAAlzB,IALAzC,KAMA4hM,SAAAjsK,EAAAlzB,OAAAkzB,EAAAlzB,UANAzC,MAOA4hM,SAAAjsK,EAAAlzB,KAGAoC,EAAAkxE,kBAAAt0E,UAAAo3E,SAAA,SAAApO,EAAA90C,GACA,GAAAugE,GAAAl2F,IACA,eAAAk2F,EAAA+C,eACA,SAAAggD,cACA,sDACA,oBAEA,IAAA1gE,MAAAjuE,MAAA9J,KAAAuK,UAAA,EACA,QAAAwtE,EAAAv1E,SACAu1E,EAAA,GAAA0B,YAAAvqC,KAAA,SAAA7tC,GACA,MAAAA,KAAA4oE,IAIA,SAAAwuE,cACA,gHAEA,oBAMA,IAHA/iD,EAAAiE,aAAAzqD,KAAA,SAAA9tC,GACA,MAAAA,GAAA6oE,YAGA,SAAAwuE,cAAA,wBACA,qBAGA/iD,GAAA0rG,SAAA1rG,EAAA0rG,aACA1rG,EAAAsrG,gBAAAtrG,EAAAsrG,mBACA,IAAAQ,GAAA9rG,EAAA0rG,SAAAjsK,EAAAlzB,GACA,IAAAu/L,EAKAA,EAAAnpH,SAAApO,GAGAzyB,QAAA4E,UAAAmT,KAAA,WACAmmC,EAAAtuC,cAAA,GAAAI,OAAA,4BAEO,CACP,GAAA+5I,GAAA,GAAAl9L,GAAA+zE,aAAAnO,GACAyrB,GAAA0rG,SAAAjsK,EAAAlzB,IAAAs/L,EACA7rG,EAAAsrG,gBAAAO,EAAAt/L,IAAAkzB,EACAugE,EAAA4D,UAAAioG,GAEA,MAAA7rG,GAAAiE,aAAAzqD,KAAA,SAAA9tC,GACA,MAAAA,GAAA6oE,cAgCA,8BAAAp8D,QAAA,SAAA+5C,GACA,GAAA4uC,GAAAnyF,EAAAkxE,kBAAAt0E,UAAA2mD,EACAvjD,GAAAkxE,kBAAAt0E,UAAA2mD,GAAA,WACA,GAAA8tC,GAAAl2F,KACA6K,EAAAE,SAGA,OAFAA,WAAA/H,QACA,kBAAA+H,WAAA,GAEAisF,EAAA/rF,MAAAirF,GACA,SAAAxD,GACA,GAAA1kD,GAAAuzJ,EAAArrG,EAAAxD,EACA7nF,GAAA,GAAAI,MAAA,MAAA+iC,KAEA,SAAAxnB,GACA3b,EAAA,IACAA,EAAA,GAAAI,MAAA,KAAAub,IAEazb,UAAA,KAGbisF,EAAA/rF,MAAAirF,EAAAnrF,WACAglD,KAAA,SAAA2iC,GACA,MAAA6uG,GAAArrG,EAAAxD,OAKA,IAAAuvG,GACAp9L,EAAAkxE,kBAAAt0E,UAAAq6F,mBACAj3F,GAAAkxE,kBAAAt0E,UAAAq6F,oBAAA,WAEA,MAAA/wF,WAAA/H,QAAA+H,UAAA,GAAAiT,MAGAjT,UAAA,GA/CA,SAAAmrF,EAAAxD,GACA,GAAAjiD,GAAAiiD,EAAAjiD,GAOA,OANA1vC,QAAAg3B,KAAAm+D,EAAAsrG,qBAAAnzL,QAAA,SAAAozL,GACA,GAAAC,GAAAxrG,EAAAsrG,gBAAAC,GACAE,EAAAzrG,EAAA0rG,SAAAF,EAAAj/L,GACAguC,KAAArmC,QAAA,GAAA4yD,QAAA0kI,EAAAj/L,GAAA,KACAk/L,EAAAl/L,MAEA,GAAAgpF,wBACAztE,KAAA00E,EAAA10E,KACAyyB,SAiCAzwC,KAIA+K,UAAA,IACAk3L,EAAAh3L,MALAjL,KAKA+K,YAHAk3L,EAAAh3L,MAFAjL,KAEA+K,WAQA,IAAAm3L,GAAAnhM,OAAAotD,yBACAtpD,EAAAkxE,kBAAAt0E,UAAA,mBACAV,QAAAC,eAAA6D,EAAAkxE,kBAAAt0E,UACA,oBACAN,IAAA,WACA,GACAuxF,GAAAwvG,EAAA/gM,IAAA8J,MAAAjL,KACA,YAAA0yF,EAAA10E,KACA00E,EAEA6uG,EALAvhM,KAKA0yF,MAIA7tF,EAAAkxE,kBAAAt0E,UAAAwzG,YAAA,SAAAz0C,GACA,GAAA01B,GAAAl2F,IACA,eAAAk2F,EAAA+C,eACA,SAAAggD,cACA,sDACA,oBAIA,KAAAz4E,EAAAwgI,IACA,SAAA/nD,cAAA,yFACA,YAGA,IADAz4E,EAAAwgI,MAAA9qG,EAEA,SAAA+iD,cAAA,6CACA,qBAIA/iD,GAAA0rG,SAAA1rG,EAAA0rG,YACA,IAAAjsK,EACA50B,QAAAg3B,KAAAm+D,EAAA0rG,UAAAvzL,QAAA,SAAA09F,GACA7V,EAAA0rG,SAAA71F,GAAA9xB,YAAAvqC,KAAA,SAAA+6B,GACA,MAAAjK,GAAAiK,cAGA90C,EAAAugE,EAAA0rG,SAAA71F,MAIAp2E,IACA,IAAAA,EAAAskD,YAAAj3E,OAGAkzF,EAAA+D,aAAA/D,EAAAsrG,gBAAA7rK,EAAAlzB,KAGAkzB,EAAAs/E,YAAAz0C,EAAAiK,OAEAyrB,EAAAtuC,cAAA,GAAAI,OAAA,0BAKA+sC,mBAAA,SAAAlwF,GACA,GAAA6vF,GAAA3gF,EAAAm1B,cAAArkC,EAGA,IAAAA,EAAAkxE,kBAsBK,CAEL,GAAAosH,GAAAt9L,EAAAkxE,iBACAlxE,GAAAkxE,kBAAA,SAAAggB,EAAA/rB,GACA,GAAA+rB,KAAA9I,WAAA,CAEA,OADAgR,MACA59F,EAAA,EAAyBA,EAAA01F,EAAA9I,WAAAjqF,OAAgC3C,IAAA,CACzD,GAAAk5F,GAAAxD,EAAA9I,WAAA5sF,IACAk5F,EAAA73F,eAAA,SACA63F,EAAA73F,eAAA,QACAqS,EAAA40B,WAAA,yCACA4wD,EAAAh2E,KAAAgK,MAAAhK,KAAAkK,UAAA8rE,KACAvM,KAAAuM,EAAApf,IACA8jB,EAAAp7F,KAAA02F,IAEA0E,EAAAp7F,KAAAkzF,EAAA9I,WAAA5sF,IAGA01F,EAAA9I,WAAAgR,EAEA,UAAAkkG,GAAApsG,EAAA/rB,IAEAnlE,EAAAkxE,kBAAAt0E,UAAA0gM,EAAA1gM,UAEAV,OAAAC,eAAA6D,EAAAkxE,kBAAA,uBACA50E,IAAA,WACA,MAAAghM,GAAAprG,2BA/CAlyF,GAAAkxE,kBAAA,SAAAggB,EAAA/rB,GASA,MALAyqB,GAAA,kBACAsB,KAAAC,qBACAD,EAAAE,cAAAF,EAAAC,oBAGA,GAAAnxF,GAAAukC,wBAAA2sD,EAAA/rB,IAEAnlE,EAAAkxE,kBAAAt0E,UACAoD,EAAAukC,wBAAA3nC,UAEAoD,EAAAukC,wBAAA2tD,qBACAh2F,OAAAC,eAAA6D,EAAAkxE,kBAAA,uBACA50E,IAAA,WACA,MAAA0D,GAAAukC,wBAAA2tD,sBAmCA,IAAAZ,GAAAtxF,EAAAkxE,kBAAAt0E,UAAA20F,QACAvxF,GAAAkxE,kBAAAt0E,UAAA20F,SAAA,SAAAC,EACA3iB,EAAAC,GACA,GAAA5zE,GAAAC,KACA6K,EAAAE,SAIA,IAAAA,UAAA/H,OAAA,qBAAAqzF,GACA,MAAAF,GAAAlrF,MAAAjL,KAAA+K,UAKA,QAAAorF,EAAAnzF,SAAA,IAAA+H,UAAA/H,QACA,kBAAA+H,WAAA,IACA,MAAAorF,GAAAlrF,MAAAjL,QAGA,IAAAs2F,GAAA,SAAA7tE,GACA,GAAA8tE,KAiBA,OAhBA9tE,GAAAjM,SACAnO,QAAA,SAAAmoF,GACA,GAAAC,IACAh0F,GAAA+zF,EAAA/zF,GACAi0F,UAAAF,EAAAE,UACA14E,MACAokL,eAAA,kBACAC,gBAAA,oBACa7rG,EAAAx4E,OAAAw4E,EAAAx4E,KAEbw4E,GAAApoC,QAAA//C,QAAA,SAAAzN,GACA61F,EAAA71F,GAAA41F,EAAAG,KAAA/1F,KAEA21F,EAAAE,EAAAh0F,IAAAg0F,IAGAF,GAIAK,EAAA,SAAAr5D,GACA,UAAA5J,KAAA5yB,OAAAg3B,KAAAwF,GAAAxzB,IAAA,SAAA0G,GACA,OAAAA,EAAA8sB,EAAA9sB,OAIA,IAAA1F,UAAA/H,QAAA,GACA,GAAA8zF,GAAA,SAAAruE,GACA5d,EAAA,GAAA+rF,EAAAN,EAAA7tE,KAGA,OAAA0tE,GAAAlrF,MAAAjL,MAAA82F,EACA/rF,UAAA,KAIA,UAAAitC,SAAA,SAAA4E,EAAA8F,GACAyzC,EAAAlrF,MAAAlL,GACA,SAAA0oB,GACAm0B,EAAAg6C,EAAAN,EAAA7tE,MACWi6B,MACJqN,KAAA2jB,EAAAC,IAIP+gB,EAAAzwF,QAAA,KACA,gEACAoK,QAAA,SAAA+5C,GACA,GAAA4uC,GAAAnyF,EAAAkxE,kBAAAt0E,UAAA2mD,EACAvjD,GAAAkxE,kBAAAt0E,UAAA2mD,GAAA,WACA,GAAAv9C,GAAAE,UACAhL,EAAAC,KACAo4C,EAAA,GAAAJ,SAAA,SAAA4E,EAAA8F,GACAs0C,EAAA/rF,MAAAlL,GAAA8K,EAAA,GAAA+xC,EAAA8F,KAEA,OAAA73C,GAAA7H,OAAA,EACAo1C,EAEAA,EAAA2X,KAAA,WACAllD,EAAA,GAAAI,MAAA,UAEA,SAAAub,GACA3b,EAAA7H,QAAA,GACA6H,EAAA,GAAAI,MAAA,MAAAub,SASAkuE,EAAAzwF,QAAA,KACA,8BAAAoK,QAAA,SAAA+5C,GACA,GAAA4uC,GAAAnyF,EAAAkxE,kBAAAt0E,UAAA2mD,EACAvjD,GAAAkxE,kBAAAt0E,UAAA2mD,GAAA,WACA,GAAAroD,GAAAC,IACA,IAAA+K,UAAA/H,OAAA,OAAA+H,UAAA/H,QACA,gBAAA+H,WAAA,IACA,GAAAi+C,GAAA,IAAAj+C,UAAA/H,OAAA+H,UAAA,SACA,WAAAitC,SAAA,SAAA4E,EAAA8F,GACAs0C,EAAA/rF,MAAAlL,GAAA68C,EAAA8F,EAAAsG,MAGA,MAAAguC,GAAA/rF,MAAAjL,KAAA+K,eAMA,gEACAsD,QAAA,SAAA+5C,GACA,GAAA4uC,GAAAnyF,EAAAkxE,kBAAAt0E,UAAA2mD,EACAvjD,GAAAkxE,kBAAAt0E,UAAA2mD,GAAA,WAIA,MAHAr9C,WAAA,2BAAAq9C,EACAvjD,EAAA6mF,gBACA7mF,EAAA4mF,uBAAA1gF,UAAA,IACAisF,EAAA/rF,MAAAjL,KAAA+K,aAKA,IAAAksF,GACApyF,EAAAkxE,kBAAAt0E,UAAAy1F,eACAryF,GAAAkxE,kBAAAt0E,UAAAy1F,gBAAA,WACA,MAAAnsF,WAAA,GAMAksF,EAAAhsF,MAAAjL,KAAA+K,YALAA,UAAA,IACAA,UAAA,GAAAE,MAAA,MAEA+sC,QAAA4E,aASAj9C,GAAAD,SACAw1F,gBAAAP,EAAAO,gBACAE,YAAAT,EAAAS,YACA6qG,wBAAAtrG,EAAAsrG,wBACAC,uBAAAvrG,EAAAurG,uBACA/qG,iBAAAR,EAAAQ,iBACAJ,mBAAAJ,EAAAI,mBACAE,iBAAA/0F,EAAA,gBAAAD,EAAA4B,EAAAT,GAAA,YCtpBA,IAAA2S,GAAA7T,EAAA,IACAu0F,EAAA1gF,EAAAjQ,GAGAnE,GAAAD,QAAA,SAAAmF,GACA,GAAA6vF,GAAA3gF,EAAAm1B,cAAArkC,GACAzB,EAAAyB,KAAAzB,UAEAi0F,EAAA,SAAA32F,GACA,mBAAAA,MAAAwpC,WAAAxpC,EAAAyuE,SACA,MAAAzuE,EAEA,IAAA+sF,KA4CA,OA3CA1sF,QAAAg3B,KAAAr3B,GAAA2N,QAAA,SAAAoC,GACA,eAAAA,GAAA,aAAAA,GAAA,gBAAAA,EAAA,CAGA,GAAAlI,GAAA,gBAAA7H,GAAA+P,GAAA/P,EAAA+P,IAAuDq/D,MAAApvE,EAAA+P,aACvDlI,EAAAmlF,OAAA,gBAAAnlF,GAAAmlF,QACAnlF,EAAAknB,IAAAlnB,EAAAqsC,IAAArsC,EAAAmlF,MAEA,IAAA4J,GAAA,SAAA1rF,EAAAhL,GACA,MAAAgL,GACAA,EAAAhL,EAAAyJ,OAAA,GAAAujF,cAAAhtF,EAAA0J,MAAA,GAEA,aAAA1J,EAAA,WAAAA,EAEA,aAAA2H,EAAAunE,MAAA,CACA2d,EAAAte,SAAAse,EAAAte,YACA,IAAA0e,KACA,iBAAAtlF,GAAAunE,OACA+d,EAAAyJ,EAAA,MAAA7mF,IAAAlI,EAAAunE,MACA2d,EAAAte,SAAAtsE,KAAAgrF,IACAA,MACAyJ,EAAA,MAAA7mF,IAAAlI,EAAAunE,MACA2d,EAAAte,SAAAtsE,KAAAgrF,KAEAA,EAAAyJ,EAAA,GAAA7mF,IAAAlI,EAAAunE,MACA2d,EAAAte,SAAAtsE,KAAAgrF,aAGAtlF,EAAAmlF,OAAA,gBAAAnlF,GAAAmlF,OACAD,EAAAvjD,UAAAujD,EAAAvjD,cACAujD,EAAAvjD,UAAAotD,EAAA,GAAA7mF,IAAAlI,EAAAmlF,QAEA,aAAAr/E,QAAA,SAAAy/E,YACAvlF,EAAAulF,KACAL,EAAAvjD,UAAAujD,EAAAvjD,cACAujD,EAAAvjD,UAAAotD,EAAAxJ,EAAAr9E,IAAAlI,EAAAulF,SAKAptF,EAAAqtF,WACAN,EAAAte,UAAAse,EAAAte,cAAA5kE,OAAA7J,EAAAqtF,WAEAN,GAGA8J,EAAA,SAAAl7D,EAAA/uB,GACA,GAAAonF,EAAAzwF,SAAA,GACA,MAAAqJ,GAAA+uB,EAGA,KADAA,EAAA9Y,KAAAgK,MAAAhK,KAAAkK,UAAA4O,MACA,gBAAAA,GAAA4yC,MAAA,CACA,GAAAqzH,GAAA,SAAAv5L,EAAAT,EAAA8H,GACA9H,IAAAS,MAAAqH,IAAArH,MACAA,EAAAqH,GAAArH,EAAAT,SACAS,GAAAT,IAIAg6L,IADAjmK,EAAA9Y,KAAAgK,MAAAhK,KAAAkK,UAAA4O,KACA4yC,MAAA,yCACAqzH,EAAAjmK,EAAA4yC,MAAA,2CACA5yC,EAAA4yC,MAAAooB,EAAAh7D,EAAA4yC,OAEA,GAAA5yC,GAAA,gBAAAA,GAAA0N,MAAA,CAEA,GAAAytD,GAAAn7D,EAAA0N,MAAA8iC,UACA2qB,OAAA,gBAAAA,MAA2D1nB,MAAA0nB,GAC3D,IAAA+qG,GAAA7tG,EAAAzwF,QAAA,EAEA,IAAAuzF,IAAA,SAAAA,EAAA9J,OAAA,gBAAA8J,EAAA9J,OACA,SAAA8J,EAAA1nB,OAAA,gBAAA0nB,EAAA1nB,UACA1sE,EAAAimC,aAAAouD,0BACAr0F,EAAAimC,aAAAouD,0BAAA5qB,YACA01H,GAAA,OACAlmK,GAAA0N,MAAA8iC,UACA,IAAA1jD,EAMA,IALA,gBAAAquE,EAAA9J,OAAA,gBAAA8J,EAAA1nB,MACA3mD,GAAA,eACS,SAAAquE,EAAA9J,OAAA,SAAA8J,EAAA1nB,QACT3mD,GAAA,UAEAA,EAEA,MAAA/lB,GAAAimC,aAAAslC,mBACA5e,KAAA,SAAAvmB,GAIA,GAAAg5J,IAHAh5J,IAAA4F,OAAA,SAAAzuC,GACA,qBAAAA,EAAAosE,QAEAr9B,KAAA,SAAA/uC,GACA,MAAAwoB,GAAAm5C,KAAA,SAAA3+D,GACA,WAAAhD,EAAA8xE,MAAA13D,cAAAhW,QAAApB,MAYA,QATA6+L,GAAAh5J,EAAAxmC,SAAA,IAAAmmB,EAAApkB,QAAA,UACAy9L,EAAAh5J,IAAAxmC,OAAA,IAEAw/L,IACAnmK,EAAA0N,MAAAw+B,SAAAivB,EAAA9J,OAAyDA,MAAA80G,EAAAj6H,WACAuH,MAAA0yH,EAAAj6H,WAEzDlsC,EAAA0N,MAAAstD,EAAAh7D,EAAA0N,OACA0qD,EAAA,WAAAlxE,KAAAkK,UAAA4O,IACA/uB,EAAA+uB,KAIAA,EAAA0N,MAAAstD,EAAAh7D,EAAA0N,OAGA,MADA0qD,GAAA,WAAAlxE,KAAAkK,UAAA4O,IACA/uB,EAAA+uB,IAGAs7D,EAAA,SAAA13F,GACA,OACAW,MACAg3F,sBAAA,kBACA6jG,kBAAA,mBACAgH,qBAAA,gBACA5qG,4BAAA,uBACA6qG,gBAAA,mBACAC,+BAAA,mBACAC,wBAAA,oBACO3iM,EAAAW,OAAAX,EAAAW,KACPqb,QAAAhc,EAAAgc,QACA6tB,WAAA7pC,EAAAm8B,eACAvuB,SAAA,WACA,MAAA7N,MAAAY,MAAAZ,KAAAic,SAAA,MAAAjc,KAAAic,UAeA7Y,GAAAqwE,aAVA,SAAAp3C,EAAAjT,EAAA0uE,GACAP,EAAAl7D,EAAA,SAAA37B,GACA0C,EAAAC,mBAAA3C,EAAA0oB,EAAA,SAAAnpB,GACA63F,GACAA,EAAAH,EAAA13F,QASA,IAAA83F,GAAA,SAAA17D,GACA,UAAA2b,SAAA,SAAA4E,EAAA8F,GACAt/C,EAAAqwE,aAAAp3C,EAAAugB,EAAA8F,KA+BA,IA3BAt/C,EAAAimC,eACAjmC,EAAAimC,cACAoqC,aAAAskB,EACAppB,iBAAA,WACA,UAAA32B,SAAA,SAAA4E,GACA,GAAAqxC,IAAuBhf,MAAA,aAAAllC,MAAA,aACvB,OAAAllC,GAAAgvE,iBAAAC,WAAA,SAAAtqC,GACAoT,EAAApT,EAAAz/B,IAAA,SAAAukE,GACA,OAAsBmE,MAAAnE,EAAAmE,MACtB1F,KAAAkhB,EAAA3f,EAAAvB,MACAxE,SAAA+F,EAAA7rE,GACA+vE,QAAA,YAKAilB,wBAAA,WACA,OACAlvB,YAAA2H,oBAAArD,cACA+kD,aAAA7hD,UAAAF,aAQAzsE,EAAAimC,aAAAoqC,aAIG,CAIH,GAAAukB,GAAA50F,EAAAimC,aAAAoqC,aACApmE,KAAAjK,EAAAimC,aACAjmC,GAAAimC,aAAAoqC,aAAA,SAAAh6C,GACA,MAAA89D,GAAA99D,EAAA,SAAA/4B,GACA,MAAAs3F,GAAAt3F,GAAAqvD,KAAA,SAAAp6B,GACA,GAAAj1B,EAAAuuE,QAAAt5C,EAAAo8C,iBAAA/uE,QACAtC,EAAAqpC,QAAApU,EAAAs8C,iBAAAjvE,OAIA,KAHA2yB,GAAAskD,YAAA5rE,QAAA,SAAAo8D,GACAA,EAAApyC,SAEA,GAAA4gH,cAAA,mBAEA,OAAAtjH,IACS,SAAA11B,GACT,MAAA+3C,SAAA0K,OAAAi1C,EAAA13F,aArBAmD,GAAAimC,aAAAoqC,aAAA,SAAAp3C,GACA,MAAA07D,GAAA17D,aA4BAj5B,EAAAimC,aAAAnB,mBACA9kC,EAAAimC,aAAAnB,iBAAA,WACAusD,EAAA,0DAGArxF,EAAAimC,aAAAjB,sBACAhlC,EAAAimC,aAAAjB,oBAAA,WACAqsD,EAAA,+DAAAx0F,EAAA4B,EAAAT,GAAA,YClOA,IAAA2S,GAAA7T,EAAA,IACA2iM,EAAA3iM,EAAA,IAEAP,GAAAD,SACAu1F,iBAAA/0F,EAAA,KACA60F,mBAAA,SAAAlwF,GACA,GAAA6vF,GAAA3gF,EAAAm1B,cAAArkC,EAEA,IAAAA,EAAAozF,iBAGApzF,EAAA6mF,kBACA7mF,EAAA6mF,gBAAA,SAAA7gF,GACA,MAAAA,KAMAhG,EAAA4mF,wBACA5mF,EAAA4mF,sBAAA,SAAA5gF,GACA,MAAAA,KAMA6pF,EAAAzwF,QAAA,QACA,GAAA6+L,GAAA/hM,OAAAotD,yBACAtpD,EAAAgvE,iBAAApyE,UAAA,UACAV,QAAAC,eAAA6D,EAAAgvE,iBAAApyE,UAAA,WACA+zB,IAAA,SAAApqB,GACA03L,EAAAttK,IAAAh1B,KAAAR,KAAAoL,EACA,IAAA49F,GAAA,GAAAhhD,OAAA,UACAghD,GAAA2V,QAAAvzG,EACApL,KAAA4nD,cAAAohD,OAQAnkG,EAAAi4F,cAAA,QAAAj4F,GAAAi4F,aAAAr7F,WACAV,OAAAC,eAAA6D,EAAAi4F,aAAAr7F,UAAA,QACAN,IAAA,WAQA,gBAPAnB,KAAA8gM,QACA,UAAA9gM,KAAAyqE,MAAAsC,KACA/sE,KAAA8gM,MAAA,GAAAj8L,GAAAk+L,cAAA/iM,MACa,UAAAA,KAAAyqE,MAAAsC,OACb/sE,KAAA8gM,MAAA,OAGA9gM,KAAA8gM,SAKAj8L,EAAAkxE,kBACA8sH,EAAAh+L,EAAA6vF,EAAAzwF,UAEAm8L,iBAAA,SAAAv7L,IAEAA,EAAAi4F,cACA,gBAAAj4F,GAAAi4F,aAAAr7F,YACAoD,EAAAi4F,aAAAr7F,UAAA+/G,aACA38G,EAAAi4F,aAAAr7F,UAAAuhM,yCChEA,SAAAjvG,GAAAC,EAAAd,EAAAl1E,EAAA2X,EAAAstK,GACA,GAAAxyJ,GAAAm/C,EAAAqD,oBAAAe,EAAAjnB,KAAAmmB,EAuBA,IApBAziD,GAAAm/C,EAAA4C,mBACAwB,EAAAC,YAAAC,sBAGAzjD,GAAAm/C,EAAAuC,oBACA6B,EAAAG,cAAAD,qBACA,UAAAl2E,EAAA,UAAAilL,GAAA,UAEAxyJ,GAAA,SAAAujD,EAAAI,IAAA,OAEAJ,EAAAK,WAAAL,EAAAM,YACA7jD,GAAA,iBACGujD,EAAAK,UACH5jD,GAAA,iBACGujD,EAAAM,YACH7jD,GAAA,iBAEAA,GAAA,iBAGAujD,EAAAK,UAAA,CAEA,GAAApZ,GAAA,QAAAtlD,EAAAlzB,GAAA,IACAuxF,EAAAK,UAAA5pB,MAAAhoE,GAAA,MACAguC,IAAA,KAAAwqC,EAGAxqC,GAAA,UAAAujD,EAAAO,uBAAA,GAAA/5D,KACA,IAAAygD,EACA+Y,EAAAO,uBAAA,GAAAZ,MACAljD,GAAA,UAAAujD,EAAAO,uBAAA,GAAAZ,IAAAn5D,KACA,IAAAygD,EACAxqC,GAAA,oBACAujD,EAAAO,uBAAA,GAAA/5D,KAAA,IACAw5D,EAAAO,uBAAA,GAAAZ,IAAAn5D,KACA,QAUA,MANAiW,IAAA,UAAAujD,EAAAO,uBAAA,GAAA/5D,KACA,UAAAo1D,EAAAE,WAAA,OACAkE,EAAAK,WAAAL,EAAAO,uBAAA,GAAAZ,MACAljD,GAAA,UAAAujD,EAAAO,uBAAA,GAAAZ,IAAAn5D,KACA,UAAAo1D,EAAAE,WAAA,QAEAr/C,EA2CA,QAAAyyJ,GAAA5oG,EAAAC,GACA,GAAAC,IACA7H,UACAC,oBACAC,kBAGAswG,EAAA,SAAAh1J,EAAAwkD,GACAxkD,EAAAtqC,SAAAsqC,EAAA,GACA,QAAA9tC,GAAA,EAAmBA,EAAAsyF,EAAA3vF,OAAmB3C,IACtC,GAAAsyF,EAAAtyF,GAAA0wC,cAAA5C,GACAwkD,EAAAtyF,GAAAwwF,uBAAA1iD,EACA,MAAAwkD,GAAAtyF,IAKA+iM,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACA,GAAA/oG,GAAA0oG,EAAAE,EAAAlyG,WAAAqC,IAAA+vG,GACA7oG,EAAAyoG,EAAAG,EAAAnyG,WAAAqC,IAAAgwG,EACA,OAAA/oG,IAAAC,GACAD,EAAA75F,KAAAma,gBAAA2/E,EAAA95F,KAAAma,cAqDA,OAlDAu/E,GAAA3H,OAAAtkF,QAAA,SAAAosF,GACA,OAAAp6F,GAAA,EAAmBA,EAAAk6F,EAAA5H,OAAA3vF,OAAsC3C,IAAA,CACzD,GAAAq6F,GAAAH,EAAA5H,OAAAtyF,EACA,IAAAo6F,EAAA75F,KAAAma,gBAAA2/E,EAAA95F,KAAAma,eACA0/E,EAAA/J,YAAAgK,EAAAhK,UAAA,CACA,WAAA+J,EAAA75F,KAAAma,eACA0/E,EAAAtJ,YAAAuJ,EAAAvJ,WAAAqC,MAGA4vG,EAAA3oG,EAAAC,EACAJ,EAAA3H,OAAA4H,EAAA5H,QACA,UAGA+H,EAAAn3E,KAAAgK,MAAAhK,KAAAkK,UAAAitE,KAEA/J,YAAAziF,KAAAuhB,IAAAgrE,EAAA9J,YACA+J,EAAA/J,aAEA6J,EAAA7H,OAAA9vF,KAAA63F,GAGAA,EAAAlJ,aAAAkJ,EAAAlJ,aAAApiD,OAAA,SAAAqiD,GACA,OAAA7nF,GAAA,EAAyBA,EAAA6wF,EAAAjJ,aAAAxuF,OAAgC4G,IACzD,GAAA6wF,EAAAjJ,aAAA5nF,GAAAoU,OAAAyzE,EAAAzzE,MACAy8E,EAAAjJ,aAAA5nF,GAAA0nF,YAAAG,EAAAH,UACA,QAGA,WAIA,WAKAgJ,EAAA1H,iBAAAvkF,QAAA,SAAAssF,GACA,OAAAt6F,GAAA,EAAmBA,EAAAk6F,EAAA3H,iBAAA5vF,OACnB3C,IAAA,CACA,GAAAu6F,GAAAL,EAAA3H,iBAAAvyF,EACA,IAAAs6F,EAAApuF,MAAAquF,EAAAruF,IAAA,CACAiuF,EAAA5H,iBAAA/vF,KAAA+3F,EACA,WAMAJ,EAIA,QAAAipG,GAAAp4F,EAAArtF,EAAAi7E,GACA,OASG,KARH+5E,OACAl3E,qBAAA,6BACAU,sBAAA,+BAEAmpB,QACA7pB,qBAAA,2CACAU,sBAAA,6CAEGx+E,GAAAqtF,GAAAtmG,QAAAk0F,GAGH,QAAAyqG,GAAA5oG,EAAA1tD,GAGA,GAAAu2J,GAAA7oG,EAAA8oG,sBACAl0J,KAAA,SAAAyuF,GACA,MAAA/wF,GAAAE,aAAA6wF,EAAA7wF,YACAF,EAAAI,KAAA2wF,EAAA3wF,IACAJ,EAAAd,OAAA6xF,EAAA7xF,MACAc,EAAAtlB,WAAAq2G,EAAAr2G,UACAslB,EAAA7tB,WAAA4+G,EAAA5+G,UACA6tB,EAAApvB,OAAAmgH,EAAAngH,MAKA,OAHA2lL,IACA7oG,EAAA6C,mBAAAvwD,IAEAu2J,EAOA,QAAAE,GAAAp5H,EAAA90C,GACAA,EAAAkjD,SAAApO,EACA,IAAAxqE,GAAA,GAAA+nD,OAAA,WACA/nD,GAAAwqE,QACA90C,EAAAiyB,cAAA3nD,GAUA,QAAA6jM,GAAA5tG,EAAAzrB,EAAAlxB,EAAAg/B,GACA,GAAAwkB,GAAA,GAAA/0C,OAAA,QACA+0C,GAAAtyB,QACAsyB,EAAAxjD,WACAwjD,EAAA/I,aAA4Bz6C,YAC5BwjD,EAAAxkB,UACA1zE,OAAAmI,WAAA,WACAkpF,EAAA6tG,eAAA,QAAAhnG,KAIA,QAAAinG,GAAApjM,EAAA8xF,GACA,GAAAzyF,GAAA,GAAAyL,OAAAgnF,EAEA,OADAzyF,GAAAW,OACAX,EA3OA,GAAA2vF,GAAA1vF,EAAA,GA8OAP,GAAAD,QAAA,SAAAmF,EAAAo/L,GACA,GAAAluH,GAAA,SAAA/rE,GACA,GAAAksF,GAAAl2F,KAEAk4F,EAAA3kF,SAAA2H,wBAuBA,KAtBA,0DACA7M,QAAA,SAAA+5C,GACA8tC,EAAA9tC,GAAA8vC,EAAA9vC,GAAA/6C,KAAA6qF,KAGAl4F,KAAAkkM,wBAAA,KAEAlkM,KAAAmkM,mBAEAnkM,KAAA24F,gBACA34F,KAAA44F,iBAEA54F,KAAA+4F,iBAAA,KACA/4F,KAAAg5F,kBAAA,KAEAh5F,KAAAi5F,eAAA,SACAj5F,KAAAsrF,mBAAA,MACAtrF,KAAAk5F,kBAAA,MAEAlvF,EAAAuZ,KAAAgK,MAAAhK,KAAAkK,UAAAzjB,QAEAhK,KAAAq5F,YAAA,eAAArvF,EAAAsvF,aACA,cAAAtvF,EAAAo6L,cACA,KAAAJ,GAAA,oBACA,6CAKA,QAJKh6L,EAAAo6L,gBACLp6L,EAAAo6L,cAAA,WAGAp6L,EAAAgsF,oBACA,UACA,YACA,KACA,SACAhsF,EAAAgsF,mBAAA,MAIA,OAAAhsF,EAAAsvF,cACA,eACA,iBACA,iBACA,KACA,SACAtvF,EAAAsvF,aAAA,WAOA,GAHAtvF,EAAAijF,WAxOA,SAAAA,EAAAg3G,GACA,GAAAI,KAEA,QADAp3G,EAAA1pE,KAAAgK,MAAAhK,KAAAkK,UAAAw/D,KACA79C,OAAA,SAAAmqD,GACA,GAAAA,MAAAvM,MAAAuM,EAAApf,KAAA,CACA,GAAA6S,GAAAuM,EAAAvM,MAAAuM,EAAApf,GACAof,GAAApf,MAAAof,EAAAvM,MACAlnF,QAAAsC,KAAA,oDAEA,IAAAk8L,GAAA,gBAAAt3G,EAoBA,OAnBAs3G,KACAt3G,OAEAA,IAAA59C,OAAA,SAAA+qC,GAMA,MALA,KAAAA,EAAAp1E,QAAA,WACA,IAAAo1E,EAAAp1E,QAAA,mBACA,IAAAo1E,EAAAp1E,QAAA,WACAs/L,EAMA,IAAAlqH,EAAAp1E,QAAA,UAAAk/L,GAAA,QACA,IAAA9pH,EAAAp1E,QAAA,mBAJAs/L,MAAA,WAOA9qG,GAAApf,IACAof,EAAAvM,KAAAs3G,EAAAt3G,EAAA,GAAAA,IACAA,EAAAhqF,WA2MAgH,EAAAijF,eAAAg3G,GAEAjkM,KAAAukM,iBACAv6L,EAAAw6L,qBACA,OAAAnkM,GAAA2J,EAAAw6L,qBAA+CnkM,EAAA,EAAOA,IACtDL,KAAAukM,cAAA,GAAA1/L,GAAAozF,gBACAhL,WAAAjjF,EAAAijF,WACAmM,aAAApvF,EAAAgsF,yBAIAhsF,GAAAw6L,qBAAA,CAGAxkM,MAAAykM,QAAAz6L,EAIAhK,KAAAw5F,gBAEAx5F,KAAA0kM,cAAA90G,EAAA0jB,oBACAtzG,KAAA2kM,mBAAA,EAEA3kM,KAAA4kM,iBAEA5kM,KAAA6kM,aAIA9uH,GAAAt0E,UAAA02F,eAAA,KACApiB,EAAAt0E,UAAA22F,YAAA,KACAriB,EAAAt0E,UAAA42F,QAAA,KACAtiB,EAAAt0E,UAAA62F,eAAA,KACAviB,EAAAt0E,UAAA82F,uBAAA,KACAxiB,EAAAt0E,UAAA+2F,2BAAA,KACAziB,EAAAt0E,UAAAqjM,0BAAA,KACA/uH,EAAAt0E,UAAAg3F,oBAAA,KACA1iB,EAAAt0E,UAAAi3F,cAAA,KAEA3iB,EAAAt0E,UAAAsiM,eAAA,SAAAnjM,EAAAuxB,GACAnyB,KAAA6kM,YAGA7kM,KAAA4nD,cAAAz1B,GACA,kBAAAnyB,MAAA,KAAAY,IACAZ,KAAA,KAAAY,GAAAuxB,KAIA4jD,EAAAt0E,UAAAsjM,0BAAA,WACA,GAAA5yK,GAAA,GAAA61B,OAAA,0BACAhoD,MAAA+jM,eAAA,0BAAA5xK,IAGA4jD,EAAAt0E,UAAAujM,iBAAA,WACA,MAAAhlM,MAAAykM,SAGA1uH,EAAAt0E,UAAAo3F,gBAAA,WACA,MAAA74F,MAAA24F,cAGA5iB,EAAAt0E,UAAAq3F,iBAAA,WACA,MAAA94F,MAAA44F,eAKA7iB,EAAAt0E,UAAAwjM,mBAAA,SAAAl4H,GACA,GAAAm4H,GAAAllM,KAAAw5F,aAAAx2F,OAAA,EACAgxF,GACAvpB,MAAA,KACAwpB,YAAA,KACA6G,aAAA,KACA3G,cAAA,KACAmG,kBAAA,KACAC,mBAAA,KACAlG,UAAA,KACAC,YAAA,KACAvnB,OACAqnB,IAAA,KACAG,uBAAA,KACAqH,uBAAA,KACAjmE,OAAA,KACAwvK,gCACA1nG,eAEA,IAAAz9F,KAAAq5F,aAAA6rG,EACAlxG,EAAA8G,aAAA96F,KAAAw5F,aAAA,GAAAsB,aACA9G,EAAAG,cAAAn0F,KAAAw5F,aAAA,GAAArF,kBACK,CACL,GAAAzxF,GAAA1C,KAAA66F,6BACA7G,GAAA8G,aAAAp4F,EAAAo4F,aACA9G,EAAAG,cAAAzxF,EAAAyxF,cAGA,MADAn0F,MAAAw5F,aAAA32F,KAAAmxF,GACAA,GAGAje,EAAAt0E,UAAAo3E,SAAA,SAAApO,EAAA90C,GAKA,GAJA31B,KAAAw5F,aAAA9pD,KAAA,SAAA9tC,GACA,MAAAA,GAAA6oE,YAIA,KAAAu5H,GAAA,6CAGA,eAAAhkM,KAAAi5F,eACA,KAAA+qG,GAAA,oBACA,yDAIA,QADAhwG,GACA3zF,EAAA,EAAmBA,EAAAL,KAAAw5F,aAAAx2F,OAA8B3C,IACjDL,KAAAw5F,aAAAn5F,GAAAoqE,OACAzqE,KAAAw5F,aAAAn5F,GAAA0sE,OAAAtC,EAAAsC,OACAinB,EAAAh0F,KAAAw5F,aAAAn5F,GAiBA,OAdA2zF,KACAA,EAAAh0F,KAAAilM,mBAAAx6H,EAAAsC,OAGA/sE,KAAAg6F,+BAEA,IAAAh6F,KAAA24F,aAAA5zF,QAAA4wB,IACA31B,KAAA24F,aAAA91F,KAAA8yB,GAGAq+D,EAAAvpB,QACAupB,EAAAr+D,SACAq+D,EAAAK,UAAA,GAAAxvF,GAAAi4F,aAAAryB,EACAupB,EAAAG,eACAH,EAAAK,WAGAte,EAAAt0E,UAAAq4F,UAAA,SAAAnkE,GACA,GAAAugE,GAAAl2F,IACA,IAAAikM,GAAA,MACAtuK,EAAAskD,YAAA5rE,QAAA,SAAAo8D,GACAyrB,EAAArd,SAAApO,EAAA90C,SAEK,CAIL,GAAAyvK,GAAAzvK,EAAAokE,OACApkE,GAAAskD,YAAA5rE,QAAA,SAAAo8D,EAAAyvB,GACA,GAAAmrG,GAAAD,EAAAnrH,YAAAigB,EACAzvB,GAAAviC,iBAAA,mBAAA/V,GACAkzK,EAAA1mF,QAAAxsF,EAAAwsF,YAGAymF,EAAAnrH,YAAA5rE,QAAA,SAAAo8D,GACAyrB,EAAArd,SAAApO,EAAA26H,OAKArvH,EAAAt0E,UAAAwzG,YAAA,SAAAz0C,GACA,KAAAA,YAAA37D,GAAAi4F,cACA,SAAAruF,WAAA,yFAIA,IAAAulF,GAAAh0F,KAAAw5F,aAAA9pD,KAAA,SAAA7tC,GACA,MAAAA,GAAAwyF,YAAA7zB,GAGA,KAAAwzB,EACA,KAAAgwG,GAAA,qBACA,6CAEA,IAAAruK,GAAAq+D,EAAAr+D,MAEAq+D,GAAAK,UAAAh8D,OACA27D,EAAAK,UAAA,KACAL,EAAAvpB,MAAA,KACAupB,EAAAr+D,OAAA,MAMA,IAHA31B,KAAAw5F,aAAAzvF,IAAA,SAAAlI,GACA,MAAAA,GAAA8zB,SAEA5wB,QAAA4wB,IACA31B,KAAA24F,aAAA5zF,QAAA4wB,IAAA,GACA31B,KAAA24F,aAAAnuF,OAAAxK,KAAA24F,aAAA5zF,QAAA4wB,GAAA,GAGA31B,KAAAg6F,+BAGAjkB,EAAAt0E,UAAAw4F,aAAA,SAAAtkE,GACA,GAAAugE,GAAAl2F,IACA21B,GAAAskD,YAAA5rE,QAAA,SAAAo8D,GACA,GAAAjK,GAAA01B,EAAAiE,aAAAzqD,KAAA,SAAA9tC,GACA,MAAAA,GAAA6oE,WAEAjK,IACA01B,EAAA+e,YAAAz0C,MAKAuV,EAAAt0E,UAAA04F,WAAA,WACA,MAAAn6F,MAAAw5F,aAAApqD,OAAA,SAAA4kD,GACA,QAAAA,EAAAK,YAEAtqF,IAAA,SAAAiqF,GACA,MAAAA,GAAAK,aAIAte,EAAAt0E,UAAA24F,aAAA,WACA,MAAAp6F,MAAAw5F,aAAApqD,OAAA,SAAA4kD,GACA,QAAAA,EAAAM,cAEAvqF,IAAA,SAAAiqF,GACA,MAAAA,GAAAM,eAKAve,EAAAt0E,UAAA6jM,mBAAA,SAAA/1G,EACA8J,GACA,GAAAnD,GAAAl2F,IACA,IAAAq5F,GAAA9J,EAAA,EACA,MAAAvvF,MAAAw5F,aAAA,GAAAvF,WACK,IAAAj0F,KAAAukM,cAAAvhM,OACL,MAAAhD,MAAAukM,cAAAl4J,OAEA,IAAA4nD,GAAA,GAAApvF,GAAAozF,gBACAhL,WAAAjtF,KAAAykM,QAAAx3G,WACAmM,aAAAp5F,KAAAykM,QAAAzuG,oBAkBA,OAhBAj1F,QAAAC,eAAAizF,EAAA,SACS7oF,MAAA,MAAA48B,cAGThoC,KAAAw5F,aAAAjK,GAAAy/E,cACAhvK,KAAAw5F,aAAAjK,GAAAg2G,iBAAA,SAAApzK,GACA,GAAA+oE,IAAA/oE,EAAAib,WAAA,IAAArsC,OAAAg3B,KAAA5F,EAAAib,WAAApqC,MAGAixF,GAAA4F,MAAAqB,EAAA,wBACA,OAAAhF,EAAAsD,aAAAjK,GAAAy/E,YACA94E,EAAAsD,aAAAjK,GAAAy/E,WAAAnsK,KAAAsvB,EAAAib,YAGA6mD,EAAA/rD,iBAAA,iBACAloC,KAAAw5F,aAAAjK,GAAAg2G,kBACAtxG,GAIAle,EAAAt0E,UAAA+jM,QAAA,SAAApxG,EAAA7E,GACA,GAAA2G,GAAAl2F,KACAi0F,EAAAj0F,KAAAw5F,aAAAjK,GAAA0E,WACA,KAAAA,EAAA+G,iBAAA,CAGA,GAAAg0E,GAAAhvK,KAAAw5F,aAAAjK,GAAAy/E,UACAhvK,MAAAw5F,aAAAjK,GAAAy/E,WAAA,KACA/6E,EAAA7rD,oBAAA,iBACApoC,KAAAw5F,aAAAjK,GAAAg2G,kBACAtxG,EAAA+G,iBAAA,SAAAC,GACA,KAAA/E,EAAAmD,aAAA9J,EAAA,IAMA,GAAAp9D,GAAA,GAAA61B,OAAA,eACA71B,GAAAib,WAAyBiiD,OAAA+E,EAAA7E,gBAEzB,IAAA1hD,GAAAotD,EAAA7tD,UAEA8tD,GAAArtD,GAAA,IAAA9sC,OAAAg3B,KAAA8V,GAAA7qC,MACAk4F,GAGA,QAAAjH,EAAA4F,OAAA,cAAA5F,EAAA4F,QACA5F,EAAA4F,MAAA,cAGA,QAAA5F,EAAA4F,QACA5F,EAAA4F,MAAA,aAGAhsD,EAAAN,UAAA,EACApb,EAAAib,oBAAAwiD,EAAAY,eAAA3iD,GAIA,IAAA8rD,GAAA/J,EAAAM,cAAAgG,EAAA6C,iBAAAtoD,IAKAkpD,GAAAxnE,EAAAib,UAAAmiD,cAAA,IAJA2L,EAKA,0BAHA,KAAA/oE,EAAAib,oBAAA,OAKA8oD,EAAA6C,iBAAAtoD,IAAAkpD,EAAAlvF,KAAA,GACA,IAAA0wF,GAAAjF,EAAAsD,aAAAI,MAAA,SAAA5F,GACA,MAAAA,GAAAC,aACA,cAAAD,EAAAC,YAAA4F,OAGA,eAAA3D,EAAAgD,oBACAhD,EAAAgD,kBAAA,YACAhD,EAAA6uG,6BAKA7pG,GACAhF,EAAA6tG,eAAA,eAAA5xK,GAEAgpE,IACAjF,EAAA6tG,eAAA,kBAAA/7I,OAAA,iBACAkuC,EAAAgD,kBAAA,WACAhD,EAAA6uG,+BAKAlgM,EAAAmI,WAAA,WACAgiK,EAAA3gK,QAAA,SAAA++B,GACA,GAAAntC,GAAA,GAAA+nD,OAAA,oBACA/nD,GAAAmtC,YACA6mD,EAAA+G,iBAAA/6F,MAEK,KAIL81E,EAAAt0E,UAAAo5F,4BAAA,WACA,GAAA3E,GAAAl2F,KACA86F,EAAA,GAAAj2F,GAAAk2F,gBAAA,KACAD,GAAAM,iBAAA,WACAlF,EAAAmF,yBAGA,IAAAlH,GAAA,GAAAtvF,GAAAy2F,iBAAAR,EAWA,OAVA3G,GAAAoH,kBAAA,WACArF,EAAAmF,0BAEAlH,EAAA1jE,QAAA,WAEA1vB,OAAAC,eAAAmzF,EAAA,SACW/oF,MAAA,SAAA48B,cACXkuD,EAAAmF,2BAIAP,eACA3G,kBAMApe,EAAAt0E,UAAAgkM,6BAAA,SACAl2G,GACA,GAAA0E,GAAAj0F,KAAAw5F,aAAAjK,GAAA0E,WACAA,WACAA,GAAA+G,uBACAh7F,MAAAw5F,aAAAjK,GAAA0E,YAEA,IAAA6G,GAAA96F,KAAAw5F,aAAAjK,GAAAuL,YACAA,WACAA,GAAAM,uBACAp7F,MAAAw5F,aAAAjK,GAAAuL,aAEA,IAAA3G,GAAAn0F,KAAAw5F,aAAAjK,GAAA4E,aACAA,WACAA,GAAAoH,wBACApH,GAAA1jE,cACAzwB,MAAAw5F,aAAAjK,GAAA4E,gBAKApe,EAAAt0E,UAAA+5F,YAAA,SAAAxH,EACAhwE,EAAAy3E,GACA,GAAArtD,GAAA80J,EAAAlvG,EAAAsG,kBACAtG,EAAAuG,mBACAv2E,IAAAgwE,EAAAK,YACAjmD,EAAAstD,UAAA1H,EAAAO,uBACAnmD,EAAA0kD,MACA6I,MAAA/L,EAAAE,WACAmjB,SAAAjf,EAAA8e,eAAAG,UAEAjf,EAAA4H,uBAAA54F,SACAorC,EAAA0kD,KAAAt4D,KAAAw5D,EAAA4H,uBAAA,GAAAphE,MAEAw5D,EAAAK,UAAArwE,KAAAoqB,IAEAqtD,GAAAzH,EAAAM,aAAAlmD,EAAAukD,OAAA3vF,OAAA,IAEA,UAAAgxF,EAAAjnB,MACAinB,EAAA4H,wBACAqoG,EAAA,OACAjwG,EAAA4H,uBAAAvtF,QAAA,SAAA1M,SACAA,GAAAgyF,MAGAK,EAAA4H,uBAAA54F,SACAorC,EAAAstD,UAAA1H,EAAA4H,wBAEAxtD,EAAA0kD,MACAmgB,SAAAjf,EAAA8e,eAAAG,UAEAjf,EAAA8e,eAAAnX,QACAvtD,EAAA0kD,KAAA6I,MAAA3H,EAAA8e,eAAAnX,OAEA3H,EAAAO,uBAAAvxF,SACAorC,EAAA0kD,KAAAt4D,KAAAw5D,EAAAO,uBAAA,GAAA/5D,MAEAw5D,EAAAM,YAAAuH,QAAAztD,KAIA2nC,EAAAt0E,UAAAq6F,oBAAA,SAAApJ,GACA,GAAAwD,GAAAl2F,IAEA,KAAAyjM,EAAA,sBACA/wG,EAAA10E,KAAAhe,KAAAi5F,iBAAAj5F,KAAA6kM,UACA,MAAA7sJ,SAAA0K,OAAAshJ,EAAA,oBACA,qBAAAtxG,EAAA10E,KACA,aAAAk4E,EAAA+C,gBAGA,IAAAU,GACAlrD,CACA,cAAAikD,EAAA10E,KAGA27E,EAAA/J,EAAAM,cAAAwC,EAAAjiD,KACAhC,EAAAkrD,EAAAttD,QACAstD,EAAAtrF,QAAA,SAAAyjF,EAAAvC,GACA,GAAA2D,GAAAtD,EAAA6C,mBAAAX,EACAoE,GAAAsD,aAAAjK,GAAA+K,kBAAApH,IAGAlzF,KAAAw5F,aAAAnrF,QAAA,SAAA2lF,EAAAzE,GACA2G,EAAAsvG,QAAAxxG,EAAAI,IAAA7E,SAEK,eAAAmD,EAAA10E,KAAA,CACL27E,EAAA/J,EAAAM,cAAAgG,EAAA8C,kBAAAvoD,KACAhC,EAAAkrD,EAAAttD,OACA,IAAA2vD,GAAApM,EAAAO,YAAA1hD,EACA,cAAAzrC,OAAA,CACA22F,GAAAtrF,QAAA,SAAAyjF,EAAAvC,GACA,GAAAyE,GAAAkC,EAAAsD,aAAAjK,GACA0E,EAAAD,EAAAC,YACA6G,EAAA9G,EAAA8G,aACA3G,EAAAH,EAAAG,cACAmG,EAAAtG,EAAAsG,kBACAC,EAAAvG,EAAAuG,kBAMA,MAHA3K,EAAAjgC,WAAAmiC,IACA,IAAAlC,EAAAO,YAAA2B,EAAA,iBAAA9uF,QAEAgxF,EAAAiI,eAAA,CACA,GAAAC,GAAAtM,EAAA0C,iBACAR,EAAArjD,GACA4tD,EAAAzM,EAAAiC,kBACAC,EAAArjD,EACAutD,KACAK,EAAArK,KAAA,UAGAkE,EAAAmD,aAAA,IAAA9J,IACA2G,EAAAsvG,QAAAxxG,EAAAI,IAAA7E,GACA,QAAAuL,EAAAjB,OACAiB,EAAAlpE,MAAAqiE,EAAAiI,EACAF,EAAA,4BAEA,QAAA7H,EAAA0F,OACA1F,EAAAviE,MAAAyqE,GAKA,IAAAjuD,GAAA80J,EAAA5oG,EACAC,EAIArE,GAAAsF,YAAAxH,EACA5lD,EAAAukD,OAAA3vF,OAAA,SAUA,OAJAhD,KAAA+4F,kBACA/6E,KAAA00E,EAAA10E,KACAyyB,IAAAiiD,EAAAjiD,KAEAiiD,EAAA10E,MACA,YACAhe,KAAAs8F,sBAAA,mBACA,MACA,cACAt8F,KAAAs8F,sBAAA,SACA,MACA,SACA,SAAA7tF,WAAA,qBAAAikF,EAAA10E,KACA,KAGA,MAAAg6B,SAAA4E,WAGAm5B,EAAAt0E,UAAA+6F,qBAAA,SAAA9J,GACA,GAAAwD,GAAAl2F,IAEA,KAAAyjM,EAAA,uBACA/wG,EAAA10E,KAAAhe,KAAAi5F,iBAAAj5F,KAAA6kM,UACA,MAAA7sJ,SAAA0K,OAAAshJ,EAAA,oBACA,sBAAAtxG,EAAA10E,KACA,aAAAk4E,EAAA+C,gBAGA,IAAA1gB,KACAv4E,MAAA44F,cAAAvqF,QAAA,SAAAsnB,GACA4iD,EAAA5iD,EAAAlzB,IAAAkzB,GAEA,IAAA8mE,MACA9C,EAAA/J,EAAAM,cAAAwC,EAAAjiD,KACAhC,EAAAkrD,EAAAttD,QACA2vD,EAAApM,EAAAO,YAAA1hD,EACA,cAAAzrC,OAAA,EACAq2F,EAAAzJ,EAAAO,YAAA1hD,EACA,mBAAAzrC,OAAA,CACAhD,MAAAq5F,aACA,IAAAF,GAAAvJ,EAAAO,YAAA1hD,EACA,oBAiQA,QA/PAzuC,KAAAkkM,0BADA/qG,GACAA,EAAApuE,OAAA,IAAAvkB,MAAA,KACAzB,QAAA,cAKA40F,EAAAtrF,QAAA,SAAAyjF,EAAAvC,GACA,GAAAthD,GAAA2hD,EAAAG,WAAA+B,GACA/kB,EAAA6iB,EAAA6jB,QAAA3hB,GAEAx6B,EAAAs4B,EAAAjgC,WAAAmiC,IACA,IAAAlC,EAAAO,YAAA2B,EAAA,iBAAA9uF,OACAuc,EAAA0uB,EAAA,GAAAljB,OAAA,GAAAvkB,MAAA,QAEA8nC,EAAAshD,EAAA4E,aAAA1C,EAAArjD,GACAi3J,EAAA91G,EAAAujB,UAAArhB,GAEAsC,EAAAxE,EAAA8iB,OAAA5gB,IAAAlC,EAAAC,oBAGA,oBAAA9iB,GAAA,cAAAxtD,EAAA,CAQA,GAAAy0E,GACAC,EACA6G,EACA3G,EACAG,EACAC,EACAqH,EACAtB,EAEA7vB,EAGAyxB,EACAG,EAFA9B,EAAA3K,EAAA6C,mBAAAX,EAGAx6B,KACA4kC,EAAAtM,EAAA0C,iBAAAR,EACArjD,IACA4tD,EAAAzM,EAAAiC,kBAAAC,EACArjD,IACAujD,KAAA,UAEA4J,EACAhM,EAAAuD,2BAAArB,EAEA,IAAAghB,GAAAljB,EAAAijB,oBAAA/gB,GAEA6K,EAAA/M,EAAAO,YAAA2B,EACA,sBAAArjD,GAAAzrC,OAAA,EACAm5F,EAAAvM,EAAAO,YAAA2B,EAAA,gBACA/nF,IAAA,SAAA8jC,GACA,MAAA+hD,GAAAQ,eAAAviD,KAEAuB,OAAA,SAAAvB,GACA,WAAAA,EAAAN,WAuBA,KAnBA,UAAAmlD,EAAA10E,MAAA,WAAA00E,EAAA10E,QACAs5C,GAAA+hC,GAAA9J,EAAA,GACA2G,EAAAsD,aAAAjK,KACA2G,EAAAuvG,6BAAAl2G,GACA2G,EAAAsD,aAAAjK,GAAA0E,YACAiC,EAAAsD,aAAA,GAAAvF,YACAiC,EAAAsD,aAAAjK,GAAAuL,aACA5E,EAAAsD,aAAA,GAAAsB,aACA5E,EAAAsD,aAAAjK,GAAA4E,cACA+B,EAAAsD,aAAA,GAAArF,cACA+B,EAAAsD,aAAAjK,GAAA8E,WACA6B,EAAAsD,aAAAjK,GAAA8E,UAAAsxG,aACAzvG,EAAAsD,aAAA,GAAArF,eAEA+B,EAAAsD,aAAAjK,GAAA+E,aACA4B,EAAAsD,aAAAjK,GAAA+E,YAAAqxG,aACAzvG,EAAAsD,aAAA,GAAArF,gBAGA,UAAAzB,EAAA10E,MAAAs5C,EAmGO,WAAAo7B,EAAA10E,MAAAs5C,IAEP28B,GADAD,EAAAkC,EAAAsD,aAAAjK,IACA0E,YACA6G,EAAA9G,EAAA8G,aACA3G,EAAAH,EAAAG,cACAG,EAAAN,EAAAM,YACAC,EAAAP,EAAAO,uBACA+F,EAAAtG,EAAAsG,kBAEApE,EAAAsD,aAAAjK,GAAAqM,uBACAA,EACA1F,EAAAsD,aAAAjK,GAAAgL,mBACAA,EACArE,EAAAsD,aAAAjK,GAAAujB,iBAEA3W,EAAAn5F,QAAA,QAAA83F,EAAAjB,SACAmC,IAAAW,GACAtD,GAAA,IAAA9J,EAGA4M,EAAA9tF,QAAA,SAAA++B,GACAs2J,EAAA1vG,EAAA8G,aAAA1tD,KAHA0tD,EAAAsB,oBAAAD,IAQA9C,GAAA,IAAA9J,IACA,QAAAuL,EAAAjB,OACAiB,EAAAlpE,MAAAqiE,EAAAiI,EACA,eAEA,QAAA/H,EAAA0F,OACA1F,EAAAviE,MAAAyqE,IAIAnG,EAAAsF,YAAAxH,EACA,aAAA1lD,GAAA,aAAAA,EACA,aAAAA,GAAA,aAAAA,IAGAgmD,GACA,aAAAhmD,GAAA,aAAAA,QAiBA0lD,GAAAM,aAhBA7pB,EAAA6pB,EAAA7pB,MACAi7H,GACAntH,EAAAmtH,EAAA/vK,UACA4iD,EAAAmtH,EAAA/vK,QAAA,GAAA9wB,GAAA+zE,aAEAirH,EAAAp5H,EAAA8N,EAAAmtH,EAAA/vK,SACA8mE,EAAA55F,MAAA4nE,EAAA6pB,EAAA/b,EAAAmtH,EAAA/vK,YAEA4iD,EAAAj3E,UACAi3E,EAAAj3E,QAAA,GAAAuD,GAAA+zE,aAEAirH,EAAAp5H,EAAA8N,EAAAj3E,SACAm7F,EAAA55F,MAAA4nE,EAAA6pB,EAAA/b,EAAAj3E,iBA1JA,EACA0yF,EAAAkC,EAAAsD,aAAAjK,IACA2G,EAAA+uG,mBAAAl4H,IACAqnB,MAEAJ,EAAAC,cACAD,EAAAC,YAAAiC,EAAAovG,mBAAA/1G,EACA8J,IAGA8C,EAAAn5F,QAAA,QAAAgxF,EAAA8G,aAAAjB,SACA8C,GAAAtD,GAAA,IAAA9J,EAGA4M,EAAA9tF,QAAA,SAAA++B,GACAs2J,EAAA1vG,EAAA8G,aAAA1tD,KAHA4mD,EAAA8G,aAAAsB,oBAAAD,IAQA7B,EAAAz1F,EAAA+3F,eAAAC,gBAAA9vB,GAIAk3H,EAAA,QACA3pG,EAAA3H,OAAA2H,EAAA3H,OAAAvjD,OACA,SAAA6B,GACA,cAAAA,EAAArwC,QAIA2zF,EAAAP,EAAAO,0BACA/5D,KAAA,QAAA+0D,EAAA,IAIA,IAAAq2G,KACA,iBAAAt3J,GAAA,aAAAA,GAKA,GAJAs3J,GAAA5xG,EAAAM,YACAA,EAAAN,EAAAM,aACA,GAAAzvF,GAAA+3F,eAAA5I,EAAAG,cAAApnB,GAEA64H,EAAA,CACA,GAAAjwK,EACA80C,GAAA6pB,EAAA7pB,MAEAi7H,GAAA,MAAAA,EAAA/vK,SAEa+vK,GACbntH,EAAAmtH,EAAA/vK,UACA4iD,EAAAmtH,EAAA/vK,QAAA,GAAA9wB,GAAA+zE,YACA73E,OAAAC,eAAAu3E,EAAAmtH,EAAA/vK,QAAA,MACAx0B,IAAA,WACA,MAAAukM,GAAA/vK,WAIA50B,OAAAC,eAAAypE,EAAA,MACAtpE,IAAA,WACA,MAAAukM,GAAAj7H,SAGA90C,EAAA4iD,EAAAmtH,EAAA/vK,UAEA4iD,EAAAj3E,UACAi3E,EAAAj3E,QAAA,GAAAuD,GAAA+zE,aAEAjjD,EAAA4iD,EAAAj3E,UAEAq0B,IACAkuK,EAAAp5H,EAAA90C,GACAq+D,EAAAmxG,6BAAAtiM,KAAA8yB,IAEA8mE,EAAA55F,MAAA4nE,EAAA6pB,EAAA3+D,SAESq+D,GAAAM,aAAAN,EAAAM,YAAA7pB,QACTupB,EAAAmxG,6BAAA92L,QAAA,SAAAzM,GACA,GAAAikM,GAAAjkM,EAAAq4E,YAAAvqC,KAAA,SAAA7tC,GACA,MAAAA,GAAAY,KAAAuxF,EAAAM,YAAA7pB,MAAAhoE,IAEAojM,IAhxBA,SAAAp7H,EAAA90C,GACAA,EAAAs/E,YAAAxqC,EACA,IAAAxqE,GAAA,GAAA+nD,OAAA,cACA/nD,GAAAwqE,QACA90C,EAAAiyB,cAAA3nD,IA6wBA4lM,EAAAjkM,KAGAoyF,EAAAmxG,gCAGAnxG,GAAAsG,oBACAtG,EAAAuG,qBACAvG,EAAAM,cACAN,EAAA8e,iBACA9e,EAAAO,yBACAP,EAAA4H,yBAIA1F,EAAAsF,YAAAtF,EAAAsD,aAAAjK,MAEAq2G,QAjKA1vG,GAAAsD,aAAAjK,IACA6E,MACA6H,wBAAA,KAgOAj8F,KAAA4kM,YACA5kM,KAAA4kM,UAAA,UAAAlyG,EAAA10E,KAAA,oBAGAhe,KAAAg5F,mBACAh7E,KAAA00E,EAAA10E,KACAyyB,IAAAiiD,EAAAjiD,KAEAiiD,EAAA10E,MACA,YACAhe,KAAAs8F,sBAAA,oBACA,MACA,cACAt8F,KAAAs8F,sBAAA,SACA,MACA,SACA,SAAA7tF,WAAA,qBAAAikF,EAAA10E,KACA,KAgDA,MA9CAjd,QAAAg3B,KAAAwgD,GAAAlqE,QAAA,SAAA2U,GACA,GAAA2S,GAAA4iD,EAAAv1D,EACA,IAAA2S,EAAAskD,YAAAj3E,OAAA,CACA,QAAAkzF,EAAA0C,cAAA7zF,QAAA4wB,GAAA,CACAugE,EAAA0C,cAAA/1F,KAAA8yB,EACA,IAAAxD,GAAA,GAAA61B,OAAA,YACA71B,GAAAwD,SACA9wB,EAAAmI,WAAA,WACAkpF,EAAA6tG,eAAA,YAAA5xK,KAIAsqE,EAAApuF,QAAA,SAAAqjC,GACA,GAAA+4B,GAAA/4B,EAAA,GACA6H,EAAA7H,EAAA,EACA/b,GAAAlzB,KAAAivC,EAAA,GAAAjvC,IAGAqhM,EAAA5tG,EAAAzrB,EAAAlxB,GAAA5jB,SAIA8mE,EAAApuF,QAAA,SAAAqjC,GACAA,EAAA,IAGAoyJ,EAAA5tG,EAAAxkD,EAAA,GAAAA,EAAA,SAKA7sC,EAAAmI,WAAA,WACAkpF,KAAAsD,cAGAtD,EAAAsD,aAAAnrF,QAAA,SAAA2lF,GACAA,EAAA8G,cACA,QAAA9G,EAAA8G,aAAAjB,OACA7F,EAAA8G,aAAA8oG,sBAAA5gM,OAAA,IACA8C,QAAAsC,KAAA,sFAEA4rF,EAAA8G,aAAA6C,2BAGK,KAEL3lD,QAAA4E,WAGAm5B,EAAAt0E,UAAA6vB,MAAA,WACAtxB,KAAAw5F,aAAAnrF,QAAA,SAAA2lF,GAMAA,EAAA8G,cACA9G,EAAA8G,aAAAziE,OAEA27D,EAAAG,eACAH,EAAAG,cAAA97D,OAEA27D,EAAAK,WACAL,EAAAK,UAAAh8D,OAEA27D,EAAAM,aACAN,EAAAM,YAAAj8D,SAIAr4B,KAAA6kM,aACA7kM,KAAAs8F,sBAAA,WAIAvmB,EAAAt0E,UAAA66F,sBAAA,SAAAhY,GACAtkF,KAAAi5F,eAAA3U,CACA,IAAAnyD,GAAA,GAAA61B,OAAA,uBACAhoD,MAAA+jM,eAAA,uBAAA5xK,IAIA4jD,EAAAt0E,UAAAu4F,4BAAA,WACA,GAAA9D,GAAAl2F,IACA,YAAAA,KAAAi5F,qBAAAj5F,KAAAmkM,kBAGAnkM,KAAAmkM,mBACAt/L,EAAAmI,WAAA,WACA,QAAAkpF,EAAAiuG,gBAAA,CAGAjuG,EAAAiuG,kBACA,IAAAhyK,GAAA,GAAA61B,OAAA,oBACAkuC,GAAA6tG,eAAA,oBAAA5xK,KACK,KAIL4jD,EAAAt0E,UAAA45F,uBAAA,WACA,GAAA/W,GACA0Y,GACAC,IAAA,EACApV,OAAA,EACAqV,WAAA,EACAxV,SAAA,EACAhnE,UAAA,EACAu/C,UAAA,EACA0nB,aAAA,EACAC,OAAA,EAsBA,IApBA5nF,KAAAw5F,aAAAnrF,QAAA,SAAA2lF,GACAgJ,EAAAhJ,EAAA8G,aAAAjB,SACAmD,EAAAhJ,EAAAG,cAAA0F,WAGAmD,EAAAt8E,WAAAs8E,EAAA/8B,UAEAqkB,EAAA,MACA0Y,EAAApV,OAAA,EACAtD,EAAA,SACK0Y,EAAAE,WAAA,GAAAF,EAAAtV,SAAA,EACLpD,EAAA,aACK0Y,EAAArV,aAAA,EACLrD,EAAA,eACK0Y,EAAAC,IAAA,EACL3Y,EAAA,OACK0Y,EAAAt8E,UAAA,GAAAs8E,EAAA/8B,UAAA,KACLqkB,EAAA,aAGAA,IAAAtkF,KAAAsrF,mBAAA,CACAtrF,KAAAsrF,mBAAAhH,CACA,IAAAnyD,GAAA,GAAA61B,OAAA,2BACAhoD,MAAA+jM,eAAA,2BAAA5xK,KAIA4jD,EAAAt0E,UAAA07F,YAAA,WACA,GAAAjH,GAAAl2F,IAEA,IAAAA,KAAA6kM,UACA,MAAA7sJ,SAAA0K,OAAAshJ,EAAA,oBACA,wCAGA,IAAA3mG,GAAAr9F,KAAAw5F,aAAApqD,OAAA,SAAAvtC,GACA,gBAAAA,EAAAkrE,OACK/pE,OACLs6F,EAAAt9F,KAAAw5F,aAAApqD,OAAA,SAAAvtC,GACA,gBAAAA,EAAAkrE,OACK/pE,OAGLo6F,EAAAryF,UAAA,EACA,IAAAqyF,EAAA,CAEA,GAAAA,EAAAlzD,WAAAkzD,EAAAjuB,SACA,SAAA1gE,WACA,iEAEA2uF,EAAAG,sBAEAF,OADAD,EAAAG,oBACA,OACSH,EAAAG,oBACT,EAEAH,EAAAG,8BAGAH,EAAAI,sBAEAF,OADAF,EAAAI,oBACA,OACSJ,EAAAI,oBACT,EAEAJ,EAAAI,qBAoBA,IAfAx9F,KAAAw5F,aAAAnrF,QAAA,SAAA2lF,GACA,UAAAA,EAAAjnB,OACAswB,EACA,IACArJ,EAAAyJ,gBAEO,UAAAzJ,EAAAjnB,QACPuwB,EACA,IACAtJ,EAAAyJ,kBAMAJ,EAAA,GAAAC,EAAA,GACAD,EAAA,IACAr9F,KAAAilM,mBAAA,SACA5nG,KAEAC,EAAA,IACAt9F,KAAAilM,mBAAA,SACA3nG,IAIA,IAAA7sD,GAAAm/C,EAAAkE,wBAAA9zF,KAAA0kM,cACA1kM,KAAA2kM,qBACA3kM,MAAAw5F,aAAAnrF,QAAA,SAAA2lF,EAAAzE,GAGA,GAAA9kB,GAAAupB,EAAAvpB,MACAsC,EAAAinB,EAAAjnB,KACAqnB,EAAAxE,EAAAC,oBACAmE,GAAAI,MAEAJ,EAAAC,cACAD,EAAAC,YAAAiC,EAAAovG,mBAAA/1G,EACA2G,EAAAmD,aAGA,IAAAiB,GAAAz1F,EAAAi4F,aAAAD,gBAAA9vB,EAGAk3H,GAAA,QACA3pG,EAAA3H,OAAA2H,EAAA3H,OAAAvjD,OACA,SAAA6B,GACA,cAAAA,EAAArwC,QAGA05F,EAAA3H,OAAAtkF,QAAA,SAAA4iC,GAGA,SAAAA,EAAArwC,eACAqwC,EAAAkgD,WAAA,6BACAlgD,EAAAkgD,WAAA,iCAKA,IAAAoD,GAAAP,EAAAO,0BACA/5D,KAAA,QAAA+0D,EAAA,IAEA9kB,IAEAw5H,GAAA,iBAAAl3H,IACAwnB,EAAA,GAAAZ,MACAY,EAAA,GAAAZ,KACAn5D,KAAA+5D,EAAA,GAAA/5D,KAAA,IAKAw5D,EAAAyJ,cACAzJ,EAAAM,YAAA,GAAAzvF,GAAA+3F,eACA5I,EAAAG,cAAApnB,IAGAinB,EAAAsG,oBACAtG,EAAAO,2BAIA,eAAAv0F,KAAAykM,QAAAnrG,eACA7oD,GAAA,kBAAAzwC,KAAAw5F,aAAAzvF,IAAA,SAAAlI,GACA,MAAAA,GAAAuyF,MACO3pF,KAAA,aAEPgmC,GAAA,4BAEAzwC,KAAAw5F,aAAAnrF,QAAA,SAAA2lF,EAAAzE,GACA9+C,GAAAsjD,EAAAC,IAAAsG,kBACA,QAAAtG,EAAAr+D,OAAAugE,EAAA0uG,WACAn0J,GAAA,oBAEAujD,EAAAC,aAAA,QAAAiC,EAAAgD,mBACA,IAAA3J,GAAA2G,EAAAmD,cACArF,EAAAC,YAAAs4F,qBAAAl+K,QAAA,SAAAw/B,GACAA,EAAAN,UAAA,EACAkD,GAAA,KAAAm/C,EAAAY,eAAA3iD,GAAA,SAGA,cAAAmmD,EAAAC,YAAA4F,QACAppD,GAAA,6BAKA,IAAAzC,GAAA,GAAAnpC,GAAA4mF,uBACAztE,KAAA,QACAyyB,OAEA,OAAAuH,SAAA4E,QAAA5O,IAGA+nC,EAAAt0E,UAAAi8F,aAAA,WACA,GAAAxH,GAAAl2F,IAEA,IAAAA,KAAA6kM,UACA,MAAA7sJ,SAAA0K,OAAAshJ,EAAA,oBACA,yCAGA,IAAAvzJ,GAAAm/C,EAAAkE,wBAAA9zF,KAAA0kM,cACA1kM,KAAA2kM,qBACA3kM,MAAAq5F,cACA5oD,GAAA,kBAAAzwC,KAAAw5F,aAAAzvF,IAAA,SAAAlI,GACA,MAAAA,GAAAuyF,MACO3pF,KAAA,YAEP,IAAAq7L,GAAAl2G,EAAAM,cACAlwF,KAAAg5F,kBAAAvoD,KAAAztC,OAAA,CACAhD,MAAAw5F,aAAAnrF,QAAA,SAAA2lF,EAAAzE,GACA,KAAAA,EAAA,EAAAu2G,GAGA,GAAA9xG,EAAAiI,cACAxrD,GAAA,+DAEAujD,EAAAI,IAAA,WAHA,CAQA,GAAAJ,EAAAr+D,OAAA,CACA,GAAA23C,EACA,WAAA0mB,EAAAjnB,KACAO,EAAA0mB,EAAAr+D,OAAAo8C,iBAAA,GACS,UAAAiiB,EAAAjnB,OACTO,EAAA0mB,EAAAr+D,OAAAs8C,iBAAA,IAEA3E,GAEA22H,GAAA,iBAAAjwG,EAAAjnB,OACAinB,EAAAO,uBAAA,GAAAZ,MACAK,EAAAO,uBAAA,GAAAZ,KACAn5D,KAAAw5D,EAAAO,uBAAA,GAAA/5D,KAAA,IAOA,GAAAggE,GAAA0oG,EACAlvG,EAAAsG,kBACAtG,EAAAuG,qBAEAC,EAAA7H,OAAAvjD,OAAA,SAAA1uC,GACA,cAAAA,EAAAE,KAAAma,gBACO/X,QACPgxF,EAAAO,uBAAA,GAAAZ,WACAK,GAAAO,uBAAA,GAAAZ,IAGAljD,GAAAsjD,EAAAC,EAAAwG,EACA,SAAAxG,EAAAr+D,OAAAugE,EAAA0uG,WACA5wG,EAAA8e,gBACA9e,EAAA8e,eAAAE,cACAviE,GAAA,sBAIA,IAAAzC,GAAA,GAAAnpC,GAAA4mF,uBACAztE,KAAA,SACAyyB,OAEA,OAAAuH,SAAA4E,QAAA5O,IAGA+nC,EAAAt0E,UAAAy1F,gBAAA,SAAA9pD,GACA,GAAAusD,EACA,IAAAvsD,GAAA,KAAAA,YAaK,aAAAA,EAAAmiD,gBAAAniD,EAAAiiD,OACL,SAAA5gF,WAAA,mCACK,KAAAzO,KAAAg5F,kBACL,MAAAhhD,SAAA0K,OAAAshJ,EAAA,oBACA,0DAEA,IAAAz0G,GAAAniD,EAAAmiD,aACA,IAAAniD,EAAAiiD,OACA,OAAAhvF,GAAA,EAAuBA,EAAAL,KAAAw5F,aAAAx2F,OAA8B3C,IACrD,GAAAL,KAAAw5F,aAAAn5F,GAAA+zF,MAAAhnD,EAAAiiD,OAAA,CACAE,EAAAlvF,CACA,OAIA,GAAA2zF,GAAAh0F,KAAAw5F,aAAAjK,EACA,KAAAyE,EAmCA,MAAAh8C,SAAA0K,OAAAshJ,EAAA,iBACA,6BAnCA,IAAAhwG,EAAAiI,cACA,MAAAjkD,SAAA4E,SAEA,IAAA/O,GAAA9sC,OAAAg3B,KAAAqV,aAAApqC,OAAA,EACA4sF,EAAAQ,eAAAhjD,eAEA,YAAAS,EAAAtuB,WAAA,IAAAsuB,EAAAvB,MAAA,IAAAuB,EAAAvB,MACA,MAAA0L,SAAA4E,SAGA,IAAA/O,EAAAN,WAAA,IAAAM,EAAAN,UACA,MAAAyK,SAAA4E,SAIA,SAAA2yC,KAAA,GACAyE,EAAA8G,eAAA96F,KAAAw5F,aAAA,GAAAsB,gBACA4oG,EAAA1vG,EAAA8G,aAAAjtD,GACA,MAAAmK,SAAA0K,OAAAshJ,EAAA,iBACA,6BAKA,IAAA+B,GAAA34J,YAAA6iD,MACA,KAAA81G,EAAAhhM,QAAA,QACAghM,IAAAh7K,OAAA,KAEA4uE,EAAA/J,EAAAM,cAAAlwF,KAAAg5F,kBAAAvoD,MACA8+C,EAAA,UACA1hD,EAAA7vB,KAAA+nL,EAAA,qBACA,OACA/lM,KAAAg5F,kBAAAvoD,IAAAkpD,EAAAlvF,KAAA,QA7DA,QAAAb,GAAA,EAAqBA,EAAA5J,KAAAw5F,aAAAx2F,SACrBhD,KAAAw5F,aAAA5vF,GAAAqyF,gBAGAj8F,KAAAw5F,aAAA5vF,GAAAkxF,aAAA6C,wBACAhE,EAAA/J,EAAAM,cAAAlwF,KAAAg5F,kBAAAvoD,MACA7mC,EAAA,8BACA5J,KAAAg5F,kBAAAvoD,IAAAkpD,EAAAlvF,KAAA,KACAzK,KAAAq5F,cARmDzvF,KAmEnD,MAAAouC,SAAA4E,WAGAm5B,EAAAt0E,UAAA20F,SAAA,WACA,GAAAl+C,KAkBA,OAjBAl4C,MAAAw5F,aAAAnrF,QAAA,SAAA2lF,IACA,uDACA,iBAAA3lF,QAAA,SAAA+5C,GACA4rC,EAAA5rC,IACAlQ,EAAAr1C,KAAAmxF,EAAA5rC,GAAAguC,gBAaA,GAAAp+C,SAAA,SAAA4E,GAEA,GAAAihD,GAAA,GAAAlqE,IACAqkB,SAAAuU,IAAArU,GAAA6X,KAAA,SAAAilB,GACAA,EAAA3mE,QAAA,SAAAmO,GACAzb,OAAAg3B,KAAAvb,GAAAnO,QAAA,SAAA5L,GACA+Z,EAAA/Z,GAAAub,MAfA24E,EAeAn6E,EAAA/Z,IAbAujM,WAAA,cACAC,YAAA,eACAC,cAAA,iBACA9D,eAAA,kBACAC,gBAAA,oBACO1rG,EAAA34E,OAAA24E,EAAA34E,KAPP,IAAA24E,EAgBAkH,GAAAroE,IAAA/yB,EAAA+Z,EAAA/Z,QAGAm6C,EAAAihD,OAMA,IAAAlwC,IAAA,6BA8DA,OA7DAA,GAAAt/C,QAAA,SAAA+5C,GACA,GAAA4uC,GAAAjhB,EAAAt0E,UAAA2mD,EACA2tB,GAAAt0E,UAAA2mD,GAAA,WACA,GAAAv9C,GAAAE,SACA,yBAAAF,GAAA,IACA,kBAAAA,GAAA,GACAmsF,EAAA/rF,MAAAjL,MAAA+K,UAAA,KACAglD,KAAA,SAAA2iC,GACA,kBAAA7nF,GAAA,IACAA,EAAA,GAAAI,MAAA,MAAAynF,KAES,SAAAp2E,GACT,kBAAAzR,GAAA,IACAA,EAAA,GAAAI,MAAA,MAAAqR,MAIA06E,EAAA/rF,MAAAjL,KAAA+K,eAIA4iD,GAAA,iEACAt/C,QAAA,SAAA+5C,GACA,GAAA4uC,GAAAjhB,EAAAt0E,UAAA2mD,EACA2tB,GAAAt0E,UAAA2mD,GAAA,WACA,GAAAv9C,GAAAE,SACA,yBAAAF,GAAA,IACA,kBAAAA,GAAA,GACAmsF,EAAA/rF,MAAAjL,KAAA+K,WACAglD,KAAA,WACA,kBAAAllD,GAAA,IACAA,EAAA,GAAAI,MAAA,OAES,SAAAqR,GACT,kBAAAzR,GAAA,IACAA,EAAA,GAAAI,MAAA,MAAAqR,MAIA06E,EAAA/rF,MAAAjL,KAAA+K,eAMA,YAAAsD,QAAA,SAAA+5C,GACA,GAAA4uC,GAAAjhB,EAAAt0E,UAAA2mD,EACA2tB,GAAAt0E,UAAA2mD,GAAA,WACA,GAAAv9C,GAAAE,SACA,yBAAAF,GAAA,GACAmsF,EAAA/rF,MAAAjL,KAAA+K,WACAglD,KAAA,WACA,kBAAAllD,GAAA,IACAA,EAAA,GAAAI,MAAA,QAIA+rF,EAAA/rF,MAAAjL,KAAA+K,cAIAgrE,gCCvmDAp2E,GAAAD,QAAA,SAAAmF,GACA,GAAAzB,GAAAyB,KAAAzB,UAcA40F,EAAA50F,EAAAimC,aAAAoqC,aACApmE,KAAAjK,EAAAimC,aACAjmC,GAAAimC,aAAAoqC,aAAA,SAAA/yE,GACA,MAAAs3F,GAAAt3F,GAAA01D,MAAA,SAAAn2D,GACA,MAAA+3C,SAAA0K,QAdA9hD,MAAag3F,sBAAA,oBAFb33F,EAgBAA,GAdsDW,OAAAX,EAAAW,KACtDqb,QAAAhc,EAAAgc,QACA6tB,WAAA7pC,EAAA6pC,WACAj8B,SAAA,WACA,MAAA7N,MAAAY,OANA,IAAAX,oCCJA,IAAA8T,GAAA7T,EAAA,IAEA20F,GACAO,YAAA,SAAAvwF,GACA,gBAAAA,OAAAkxE,mBAAA,WACAlxE,GAAAkxE,kBAAAt0E,WACAV,OAAAC,eAAA6D,EAAAkxE,kBAAAt0E,UAAA,WACAN,IAAA,WACA,MAAAnB,MAAA01F,UAEAlgE,IAAA,SAAAnpB,GACArM,KAAA01F,WACA11F,KAAAooC,oBAAA,QAAApoC,KAAA01F,UACA11F,KAAAooC,oBAAA,YAAApoC,KAAA21F,eAEA31F,KAAAkoC,iBAAA,QAAAloC,KAAA01F,SAAArpF,GACArM,KAAAkoC,iBAAA,YAAAloC,KAAA21F,aAAA,SAAA11F,GACAA,EAAA01B,OAAAskD,YAAA5rE,QAAA,SAAAo8D,GACA,GAAAt4C,GAAA,GAAA61B,OAAA,QACA71B,GAAAs4C,QACAt4C,EAAAonB,UAAgCkxB,SAChCt4C,EAAA6hE,aAAmCz6C,SAAApnB,EAAAonB,UACnCpnB,EAAAomD,SAAAt4E,EAAA01B,QACA31B,KAAA4nD,cAAAz1B,IACa9kB,KAAArN,QACFqN,KAAArN,UAIX,gBAAA6E,MAAAshM,eACA,YAAAthM,GAAAshM,cAAA1kM,aACA,eAAAoD,GAAAshM,cAAA1kM,YACAV,OAAAC,eAAA6D,EAAAshM,cAAA1kM,UAAA,eACAN,IAAA,WACA,OAAkBo4C,SAAAv5C,KAAAu5C,cAMlB47C,iBAAA,SAAAtwF,GAEA,gBAAAA,MACAA,EAAAgxF,kBACA,aAAAhxF,GAAAgxF,iBAAAp0F,WAEAV,OAAAC,eAAA6D,EAAAgxF,iBAAAp0F,UAAA,aACAN,IAAA,WACA,MAAAnB,MAAA+9F,cAEAvoE,IAAA,SAAAG,GACA31B,KAAA+9F,aAAApoE,OAOAo/D,mBAAA,SAAAlwF,GACA,GAAA6vF,GAAA3gF,EAAAm1B,cAAArkC,EAEA,oBAAAA,OAAAkxE,mBACAlxE,EAAAm5F,sBADA,CAKAn5F,EAAAkxE,oBACAlxE,EAAAkxE,kBAAA,SAAAggB,EAAA/rB,GACA,GAAA0qB,EAAAzwF,QAAA,IAGA8xF,KAAA9I,WAAA,CAEA,OADAgR,MACA59F,EAAA,EAA2BA,EAAA01F,EAAA9I,WAAAjqF,OAAgC3C,IAAA,CAC3D,GAAAk5F,GAAAxD,EAAA9I,WAAA5sF,EACA,IAAAk5F,EAAA73F,eAAA,QACA,OAAAkI,GAAA,EAA+BA,EAAA2vF,EAAAvM,KAAAhqF,OAAwB4G,IAAA,CACvD,GAAAs0F,IACA/jB,IAAAof,EAAAvM,KAAApjF,GAEA,KAAA2vF,EAAAvM,KAAApjF,GAAA7E,QAAA,UACAm5F,EAAA5pD,SAAAilD,EAAAjlD,SACA4pD,EAAAnR,WAAAwM,EAAAxM,YAEAkR,EAAAp7F,KAAAq7F,OAGAD,GAAAp7F,KAAAkzF,EAAA9I,WAAA5sF,IAGA01F,EAAA9I,WAAAgR,EAGA,UAAAp5F,GAAAm5F,qBAAAjI,EAAA/rB,IAEAnlE,EAAAkxE,kBAAAt0E,UACAoD,EAAAm5F,qBAAAv8F,UAGAoD,EAAAm5F,qBAAAjH,qBACAh2F,OAAAC,eAAA6D,EAAAkxE,kBAAA,uBACA50E,IAAA,WACA,MAAA0D,GAAAm5F,qBAAAjH,uBAKAlyF,EAAA4mF,sBAAA5mF,EAAAs5F,yBACAt5F,EAAA6mF,gBAAA7mF,EAAAu5F,qBAIA,gEACA/vF,QAAA,SAAA+5C,GACA,GAAA4uC,GAAAnyF,EAAAkxE,kBAAAt0E,UAAA2mD,EACAvjD,GAAAkxE,kBAAAt0E,UAAA2mD,GAAA,WAIA,MAHAr9C,WAAA,2BAAAq9C,EACAvjD,EAAA6mF,gBACA7mF,EAAA4mF,uBAAA1gF,UAAA,IACAisF,EAAA/rF,MAAAjL,KAAA+K,aAKA,IAAAksF,GACApyF,EAAAkxE,kBAAAt0E,UAAAy1F,eACAryF,GAAAkxE,kBAAAt0E,UAAAy1F,gBAAA,WACA,MAAAnsF,WAAA,GAMAksF,EAAAhsF,MAAAjL,KAAA+K,YALAA,UAAA,IACAA,UAAA,GAAAE,MAAA,MAEA+sC,QAAA4E,WAMA,IASAwpJ,IACAJ,WAAA,cACAC,YAAA,eACAC,cAAA,iBACA9D,eAAA,kBACAC,gBAAA,oBAGAhkG,EAAAx5F,EAAAkxE,kBAAAt0E,UAAA20F,QACAvxF,GAAAkxE,kBAAAt0E,UAAA20F,SAAA,SACAC,EACAiI,EACAC,GAEA,MAAAF,GAAApzF,MAAAjL,MAAAq2F,GAAA,OACAtmC,KAAA,SAAAxyB,GAIA,GAHAm3D,EAAAzwF,QAAA,KACAs5B,EA1BA,SAAAA,GACA,GAAAxzB,GAAA,GAAA4pB,IAKA,OAJA5yB,QAAAg3B,KAAAwF,GAAAlvB,QAAA,SAAAoC,GACA1G,EAAAyrB,IAAA/kB,EAAA8sB,EAAA9sB,IACA1G,EAAA0G,GAAA8sB,EAAA9sB,KAEA1G,GAoBAwzB,IAEAm3D,EAAAzwF,QAAA,KAAAq6F,EAGA,IACA/gE,EAAAlvB,QAAA,SAAAsoF,GACAA,EAAA34E,KAAAooL,EAAAzvG,EAAA34E,OAAA24E,EAAA34E,OAEa,MAAA/d,GACb,iBAAAA,EAAAW,KACA,KAAAX,EAGAs9B,GAAAlvB,QAAA,SAAAsoF,EAAAt2F,GACAk9B,EAAA/H,IAAAn1B,EAAAU,OAAAsmE,UAA6CsvB,GAC7C34E,KAAAooL,EAAAzvG,EAAA34E,OAAA24E,EAAA34E,UAKA,MAAAuf,KAEAwyB,KAAAuuC,EAAAC,MAMA5+F,GAAAD,SACA01F,YAAAP,EAAAO,YACAD,iBAAAN,EAAAM,iBACAJ,mBAAAF,EAAAE,mBACAE,iBAAA/0F,EAAA,gBAAAD,EAAA4B,EAAAT,GAAA,YCpMA,IAAA2S,GAAA7T,EAAA,IACAu0F,EAAA1gF,EAAAjQ,GAGAnE,GAAAD,QAAA,SAAAmF,GACA,GAAA6vF,GAAA3gF,EAAAm1B,cAAArkC,GACAzB,EAAAyB,KAAAzB,UACAywE,EAAAhvE,KAAAgvE,iBAEA8jB,EAAA,SAAA13F,GACA,OACAW,MACAylM,cAAA,mBACAC,kBAAA,YACA1uG,sBAAA,kBACA4G,cAAA,mBACOv+F,EAAAW,OAAAX,EAAAW,KACPqb,SACAwiF,6BAAA,wFAEOx+F,EAAAgc,UAAAhc,EAAAgc,QACP6tB,WAAA7pC,EAAA6pC,WACAj8B,SAAA,WACA,MAAA7N,MAAAY,MAAAZ,KAAAic,SAAA,MAAAjc,KAAAic,WAMAyiF,EAAA,SAAAriE,EAAAjT,EAAA0uE,GACA,GAAA6G,GAAA,SAAAj+F,GACA,mBAAAA,MAAAkI,QACA,MAAAlI,EAEA,IAAAkI,KAqCA,OApCA7H,QAAAg3B,KAAAr3B,GAAA2N,QAAA,SAAAoC,GACA,eAAAA,GAAA,aAAAA,GAAA,gBAAAA,EAAA,CAGA,GAAAlI,GAAA7H,EAAA+P,GAAA,gBAAA/P,GAAA+P,GACA/P,EAAA+P,IAAsBq/D,MAAApvE,EAAA+P,GAatB,aAZAlI,EAAAknB,cACAlnB,EAAAqsC,cAAArsC,EAAAmlF,OACA9kF,EAAA/F,KAAA4N,YAEAlI,EAAAmlF,QACA,gBAAAnlF,GAAAmlF,MACAnlF,EAAAknB,IAAAlnB,EAAAqsC,IAAArsC,EAAAmlF,MAEAhtF,EAAA+P,GAAAlI,EAAAmlF,YAEAnlF,GAAAmlF,gBAEAnlF,EAAAunE,MAAA,CACApvE,EAAAqtF,SAAArtF,EAAAqtF,YACA,IAAAF,KACA,iBAAAtlF,GAAAunE,MACA+d,EAAAp9E,IAAuBgf,IAAAlnB,EAAAunE,MAAAl7B,IAAArsC,EAAAunE,OAEvB+d,EAAAp9E,GAAAlI,EAAAunE,MAEApvE,EAAAqtF,SAAAlrF,KAAAgrF,SACAtlF,GAAAunE,MACA/uE,OAAAg3B,KAAAxvB,GAAAvF,cACAtC,GAAA+P,OAIA7H,EAAA5F,SACAtC,EAAAkI,WAEAlI,EAaA,OAXA27B,GAAA9Y,KAAAgK,MAAAhK,KAAAkK,UAAA4O,IACAq4D,EAAAzwF,QAAA,KACAwwF,EAAA,SAAAlxE,KAAAkK,UAAA4O,IACAA,EAAA4yC,QACA5yC,EAAA4yC,MAAA0vB,EAAAtiE,EAAA4yC,QAEA5yC,EAAA0N,QACA1N,EAAA0N,MAAA40D,EAAAtiE,EAAA0N,QAEA0qD,EAAA,SAAAlxE,KAAAkK,UAAA4O,KAEAj5B,EAAAgB,gBAAAi4B,EAAAjT,EAAA,SAAAnpB,GACA63F,EAAAH,EAAA13F,OAKA83F,EAAA,SAAA17D,GACA,UAAA2b,SAAA,SAAA4E,EAAA8F,GACAg8C,EAAAriE,EAAAugB,EAAA8F,KAsBA,IAjBAt/C,EAAAimC,eACAjmC,EAAAimC,cAA8BoqC,aAAAskB,EAC9B7vD,iBAAA,aACAE,oBAAA,eAGAhlC,EAAAimC,aAAAslC,iBACAvrE,EAAAimC,aAAAslC,kBAAA,WACA,UAAA32B,SAAA,SAAA4E,GAKAA,IAHamwB,KAAA,aAAAxE,SAAA,UAAAkK,MAAA,GAAAD,QAAA,KACAzF,KAAA,aAAAxE,SAAA,UAAAkK,MAAA,GAAAD,QAAA,SAMbkiB,EAAAzwF,QAAA,IAEA,GAAA26F,GACAx7F,EAAAimC,aAAAslC,iBAAAthE,KAAAjK,EAAAimC,aACAjmC,GAAAimC,aAAAslC,iBAAA,WACA,MAAAiwB,KAAA7uC,YAAA,SAAA9vD,GACA,qBAAAA,EAAAW,KACA,QAEA,MAAAX,MAIA,GAAAy0F,EAAAzwF,QAAA,IACA,GAAA+zF,GAAA50F,EAAAimC,aAAAoqC,aACApmE,KAAAjK,EAAAimC,aACAjmC,GAAAimC,aAAAoqC,aAAA,SAAA/yE,GACA,MAAAs3F,GAAAt3F,GAAAqvD,KAAA,SAAAp6B,GAEA,GAAAj1B,EAAAuuE,QAAAt5C,EAAAo8C,iBAAA/uE,QACAtC,EAAAqpC,QAAApU,EAAAs8C,iBAAAjvE,OAIA,KAHA2yB,GAAAskD,YAAA5rE,QAAA,SAAAo8D,GACAA,EAAApyC,SAEA,GAAA4gH,cAAA,oCACA,gBAEA,OAAAtjH,IACO,SAAA11B,GACP,MAAA+3C,SAAA0K,OAAAi1C,EAAA13F,OAIA,KAAAy0F,EAAAzwF,QAAA,IACA,mBAAAb,GAAAimC,aAAAouD,2BAAA,CACA,GAAA6qG,GAAA,SAAAv5L,EAAAT,EAAA8H,GACA9H,IAAAS,MAAAqH,IAAArH,MACAA,EAAAqH,GAAArH,EAAAT,SACAS,GAAAT,KAIAi+L,EAAAnjM,EAAAimC,aAAAoqC,aACApmE,KAAAjK,EAAAimC,aAUA,IATAjmC,EAAAimC,aAAAoqC,aAAA,SAAA/yE,GAMA,MALA,gBAAAA,IAAA,gBAAAA,GAAAuuE,QACAvuE,EAAA6iB,KAAAgK,MAAAhK,KAAAkK,UAAA/sB,IACA4hM,EAAA5hM,EAAAuuE,MAAA,wCACAqzH,EAAA5hM,EAAAuuE,MAAA,2CAEAs3H,EAAA7lM,IAGAmzE,KAAApyE,UAAAmrE,YAAA,CACA,GAAA45H,GAAA3yH,EAAApyE,UAAAmrE,WACAiH,GAAApyE,UAAAmrE,YAAA,WACA,GAAA7jE,GAAAy9L,EAAAv7L,MAAAjL,KAAA+K,UAGA,OAFAu3L,GAAAv5L,EAAA,wCACAu5L,EAAAv5L,EAAA,0CACAA,GAIA,GAAA8qE,KAAApyE,UAAAglM,iBAAA,CACA,GAAAC,GAAA7yH,EAAApyE,UAAAglM,gBACA5yH,GAAApyE,UAAAglM,iBAAA,SAAA/lM,GAMA,MALA,UAAAV,KAAA+sE,MAAA,gBAAArsE,KACAA,EAAA6iB,KAAAgK,MAAAhK,KAAAkK,UAAA/sB,IACA4hM,EAAA5hM,EAAA,wCACA4hM,EAAA5hM,EAAA,2CAEAgmM,EAAAz7L,MAAAjL,MAAAU,MAIA0C,EAAAqwE,aAAA,SAAAp3C,EAAAjT,EAAA0uE,GACA,GAAApD,EAAAzwF,QAAA,GACA,MAAAy6F,GAAAriE,EAAAjT,EAAA0uE,EAGA/jF,GAAA40B,WAAA,yBACA,uCACAvlC,EAAAimC,aAAAoqC,aAAAp3C,GAAA0zB,KAAA3mC,EAAA0uE,kCCtMA,IAAA/jF,GAAA7T,EAAA,IAEA40F,GAOAyrG,oBAAA,SAAA17L,GACA,mBAAAA,MAAAkxE,kBAAA,CA+BA,GA5BA,mBAAAlxE,GAAAkxE,kBAAAt0E,YACAoD,EAAAkxE,kBAAAt0E,UAAAo3F,gBAAA,WAIA,MAHA74F,MAAA2mM,gBACA3mM,KAAA2mM,kBAEA3mM,KAAA2mM,gBAGA,iBAAA9hM,GAAAkxE,kBAAAt0E,YACAoD,EAAAkxE,kBAAAt0E,UAAAmlM,cAAA,SAAAnkM,GACA,GAAA+Z,GAAA,IAeA,OAdAxc,MAAA2mM,eACA3mM,KAAA2mM,cAAAt4L,QAAA,SAAAsnB,GACAA,EAAAlzB,SACA+Z,EAAAmZ,KAIA31B,KAAAopL,gBACAppL,KAAAopL,eAAA/6K,QAAA,SAAAsnB,GACAA,EAAAlzB,SACA+Z,EAAAmZ,KAIAnZ,MAGA,aAAA3X,GAAAkxE,kBAAAt0E,WAAA,CACA,GAAAolM,GAAAhiM,EAAAkxE,kBAAAt0E,UAAAo3E,QACAh0E,GAAAkxE,kBAAAt0E,UAAAq4F,UAAA,SAAAnkE,GACA31B,KAAA2mM,gBACA3mM,KAAA2mM,mBAEA,IAAA3mM,KAAA2mM,cAAA5hM,QAAA4wB,IACA31B,KAAA2mM,cAAA9jM,KAAA8yB,EAEA,IAAA51B,GAAAC,IACA21B,GAAAskD,YAAA5rE,QAAA,SAAAo8D,GACAo8H,EAAArmM,KAAAT,EAAA0qE,EAAA90C,MAIA9wB,EAAAkxE,kBAAAt0E,UAAAo3E,SAAA,SAAApO,EAAA90C,GACAA,IACA31B,KAAA2mM,eAEW,IAAA3mM,KAAA2mM,cAAA5hM,QAAA4wB,IACX31B,KAAA2mM,cAAA9jM,KAAA8yB,GAFA31B,KAAA2mM,eAAAhxK,IAKAkxK,EAAArmM,KAAAR,KAAAyqE,EAAA90C,IAGA,gBAAA9wB,GAAAkxE,kBAAAt0E,YACAoD,EAAAkxE,kBAAAt0E,UAAAw4F,aAAA,SAAAtkE,GACA31B,KAAA2mM,gBACA3mM,KAAA2mM,iBAEA,IAAA96L,GAAA7L,KAAA2mM,cAAA5hM,QAAA4wB,EACA,SAAA9pB,EAAA,CAGA7L,KAAA2mM,cAAAn8L,OAAAqB,EAAA,EACA,IAAA9L,GAAAC,KACA+qE,EAAAp1C,EAAAskD,WACAj6E,MAAAm6F,aAAA9rF,QAAA,SAAAmyD,IACA,IAAAuK,EAAAhmE,QAAAy7D,EAAAiK,QACA1qE,EAAAk1G,YAAAz0C,UAMAggI,qBAAA,SAAA37L,GACA,gBAAAA,MAAAkxE,oBAGA,oBAAAlxE,GAAAkxE,kBAAAt0E,YACAoD,EAAAkxE,kBAAAt0E,UAAAq3F,iBAAA,WACA,MAAA94F,MAAAopL,eAAAppL,KAAAopL,oBAGA,eAAAvkL,GAAAkxE,kBAAAt0E,WACAV,OAAAC,eAAA6D,EAAAkxE,kBAAAt0E,UAAA,eACAN,IAAA,WACA,MAAAnB,MAAA8mM,cAEAtxK,IAAA,SAAAnpB,GACArM,KAAA8mM,eACA9mM,KAAAooC,oBAAA,YAAApoC,KAAA8mM,cACA9mM,KAAAooC,oBAAA,QAAApoC,KAAA+mM,mBAEA/mM,KAAAkoC,iBAAA,YAAAloC,KAAA8mM,aAAAz6L,GACArM,KAAAkoC,iBAAA,QAAAloC,KAAA+mM,iBAAA,SAAA9mM,GACA,GAAA01B,GAAA11B,EAAAs4E,QAAA,EAIA,IAHAv4E,KAAAopL,iBACAppL,KAAAopL,qBAEAppL,KAAAopL,eAAArkL,QAAA4wB,IAAA,IAGA31B,KAAAopL,eAAAvmL,KAAA8yB,EACA,IAAAxD,GAAA,GAAA61B,OAAA,YACA71B,GAAAwD,OAAA11B,EAAAs4E,QAAA,GACAv4E,KAAA4nD,cAAAz1B,KACW9kB,KAAArN,YAKXsgM,iBAAA,SAAAz7L,GACA,mBAAAA,MAAAkxE,kBAAA,CAGA,GAAAt0E,GAAAoD,EAAAkxE,kBAAAt0E,UACA07F,EAAA17F,EAAA07F,YACAO,EAAAj8F,EAAAi8F,aACA5B,EAAAr6F,EAAAq6F,oBACAU,EAAA/6F,EAAA+6F,qBACAtF,EAAAz1F,EAAAy1F,eAEAz1F,GAAA07F,YAAA,SAAAzpB,EAAAoE,GACA,GAAA75D,GAAAlT,UAAA/H,QAAA,EAAA+H,UAAA,GAAAA,UAAA,GACAqtC,EAAA+kD,EAAAlyF,MAAAjL,MAAAie,GACA,OAAA65D,IAGA1/B,EAAA2X,KAAA2jB,EAAAoE,GACA9/B,QAAA4E,WAHAxE,GAMA32C,EAAAi8F,aAAA,SAAAhqB,EAAAoE,GACA,GAAA75D,GAAAlT,UAAA/H,QAAA,EAAA+H,UAAA,GAAAA,UAAA,GACAqtC,EAAAslD,EAAAzyF,MAAAjL,MAAAie,GACA,OAAA65D,IAGA1/B,EAAA2X,KAAA2jB,EAAAoE,GACA9/B,QAAA4E,WAHAxE,EAMA,IAAA4uJ,GAAA,SAAAt0G,EAAAhf,EAAAoE,GACA,GAAA1/B,GAAA0jD,EAAA7wF,MAAAjL,MAAA0yF,GACA,OAAA5a,IAGA1/B,EAAA2X,KAAA2jB,EAAAoE,GACA9/B,QAAA4E,WAHAxE,EAKA32C,GAAAq6F,oBAAAkrG,EAEAA,EAAA,SAAAt0G,EAAAhf,EAAAoE,GACA,GAAA1/B,GAAAokD,EAAAvxF,MAAAjL,MAAA0yF,GACA,OAAA5a,IAGA1/B,EAAA2X,KAAA2jB,EAAAoE,GACA9/B,QAAA4E,WAHAxE,GAKA32C,EAAA+6F,qBAAAwqG,EAEAA,EAAA,SAAA55J,EAAAsmC,EAAAoE,GACA,GAAA1/B,GAAA8+C,EAAAjsF,MAAAjL,MAAAotC,GACA,OAAA0qC,IAGA1/B,EAAA2X,KAAA2jB,EAAAoE,GACA9/B,QAAA4E,WAHAxE,GAKA32C,EAAAy1F,gBAAA8vG,IAEA/xG,iBAAA,SAAApwF,GACA,GAAAzB,GAAAyB,KAAAzB,SAEAA,GAAAqwE,eACArwE,EAAAC,mBACAD,EAAAqwE,aAAArwE,EAAAC,mBAAAgK,KAAAjK,GACOA,EAAAimC,cACPjmC,EAAAimC,aAAAoqC,eACArwE,EAAAqwE,aAAA,SAAAp3C,EAAAwkB,EAAAomJ,GACA7jM,EAAAimC,aAAAoqC,aAAAp3C,GACA0zB,KAAAlP,EAAAomJ,IACS55L,KAAAjK,MAITi9L,qBAAA,SAAAx7L,GAEA,GAAAs9L,GAAAt9L,EAAAkxE,iBACAlxE,GAAAkxE,kBAAA,SAAAggB,EAAA/rB,GACA,GAAA+rB,KAAA9I,WAAA,CAEA,OADAgR,MACA59F,EAAA,EAAuBA,EAAA01F,EAAA9I,WAAAjqF,OAAgC3C,IAAA,CACvD,GAAAk5F,GAAAxD,EAAA9I,WAAA5sF,IACAk5F,EAAA73F,eAAA,SACA63F,EAAA73F,eAAA,QACAqS,EAAA40B,WAAA,yCACA4wD,EAAAh2E,KAAAgK,MAAAhK,KAAAkK,UAAA8rE,KACAvM,KAAAuM,EAAApf,UACAof,GAAApf,IACA8jB,EAAAp7F,KAAA02F,IAEA0E,EAAAp7F,KAAAkzF,EAAA9I,WAAA5sF,IAGA01F,EAAA9I,WAAAgR,EAEA,UAAAkkG,GAAApsG,EAAA/rB,IAEAnlE,EAAAkxE,kBAAAt0E,UAAA0gM,EAAA1gM,UAEA,uBAAAoD,GAAAkxE,mBACAh1E,OAAAC,eAAA6D,EAAAkxE,kBAAA,uBACA50E,IAAA,WACA,MAAAghM,GAAAprG,wBAKA0pG,0BAAA,SAAA57L,GAEA,gBAAAA,MAAAkxE,mBACA,YAAAlxE,GAAAshM,cAAA1kM,YAGAoD,EAAAqiM,gBACAnmM,OAAAC,eAAA6D,EAAAshM,cAAA1kM,UAAA,eACAN,IAAA,WACA,OAAkBo4C,SAAAv5C,KAAAu5C,cAMlBmnJ,sBAAA,SAAA77L,GACA,GAAAsiM,GAAAtiM,EAAAkxE,kBAAAt0E,UAAA07F,WACAt4F,GAAAkxE,kBAAAt0E,UAAA07F,YAAA,SAAAC,GAEA,GAAAA,EAAA,CACA,GAAAgqG,GAFApnM,KAEAqnM,kBAAA33J,KAAA,SAAAskD,GACA,MAAAA,GAAAxzB,OAAAiK,OACA,UAAAupB,EAAAxzB,OAAAiK,MAAAsC,YAEAqwB,EAAAG,qBAAA6pG,EACA,aAAAA,EAAA94J,UACA84J,EAAAE,aAAA,YACW,aAAAF,EAAA94J,WACX84J,EAAAE,aAAA,iBAESlqG,EAAAG,qBACT6pG,GAbApnM,KAcAunM,eAAA,QAGA,IAAAC,GAjBAxnM,KAiBAqnM,kBAAA33J,KAAA,SAAAskD,GACA,MAAAA,GAAAxzB,OAAAiK,OACA,UAAAupB,EAAAxzB,OAAAiK,MAAAsC,YAEAqwB,EAAAI,qBAAAgqG,EACA,aAAAA,EAAAl5J,UACAk5J,EAAAF,aAAA,YACW,aAAAE,EAAAl5J,WACXk5J,EAAAF,aAAA,iBAESlqG,EAAAI,qBACTgqG,GA5BAxnM,KA6BAunM,eAAA,SAGA,MAAAJ,GAAAl8L,MAhCAjL,KAgCA+K,aAMApL,GAAAD,SACA4gM,iBAAAxrG,EAAAwrG,iBACAC,oBAAAzrG,EAAAyrG,oBACAC,qBAAA1rG,EAAA0rG,qBACAvrG,iBAAAH,EAAAG,iBACAorG,qBAAAvrG,EAAAurG,qBACAI,0BAAA3rG,EAAA2rG,0BACAC,sBAAA5rG,EAAA4rG,oDCtSA,IAAA9wG,GAAA1vF,EAAA,IACA6T,EAAA7T,EAAA,GAqDAP,GAAAD,SACAygM,oBAAA,SAAAt7L,GAGA,KAAAA,EAAA6mF,iBAAA,cACA7mF,GAAA6mF,gBAAAjqF,WADA,CAKA,GAAAgmM,GAAA5iM,EAAA6mF,eACA7mF,GAAA6mF,gBAAA,SAAA7gF,GAEA,gBAAAA,MAAAuiC,WACA,IAAAviC,EAAAuiC,UAAAroC,QAAA,SACA8F,EAAA0Y,KAAAgK,MAAAhK,KAAAkK,UAAA5iB,KACAuiC,UAAAviC,EAAAuiC,UAAAriB,OAAA,GAIA,IAAA28K,GAAA,GAAAD,GAAA58L,GACA88L,EAAA/3G,EAAAQ,eAAAvlF,EAAAuiC,WACAw6J,EAAA7mM,OAAAsmE,OAAAqgI,EACAC,EAWA,OARAC,GAAAnxI,OAAA,WACA,OACArpB,UAAAw6J,EAAAx6J,UACAiiD,OAAAu4G,EAAAv4G,OACAE,cAAAq4G,EAAAr4G,cACAgD,iBAAAq1G,EAAAr1G,mBAGAq1G,GAlFA,SAAA/iM,EAAAgjM,EAAAv+K,GACA,GAAAzkB,EAAAkxE,kBAAA,CAGA,GAAAz2D,GAAAza,EAAAkxE,kBAAAt0E,UACAqmM,EAAAxoL,EAAA4oB,gBACA5oB,GAAA4oB,iBAAA,SAAA6/J,EAAAlnJ,GACA,GAAAknJ,IAAAF,EACA,MAAAC,GAAA78L,MAAAjL,KAAA+K,UAEA,IAAAquK,GAAA,SAAAn5K,GACA4gD,EAAAv3B,EAAArpB,IAIA,OAFAD,MAAAgoM,UAAAhoM,KAAAgoM,cACAhoM,KAAAgoM,UAAAnnJ,GAAAu4H,EACA0uB,EAAA78L,MAAAjL,MAAA+nM,EACA3uB,IAGA,IAAA6uB,GAAA3oL,EAAA8oB,mBACA9oB,GAAA8oB,oBAAA,SAAA2/J,EAAAlnJ,GACA,GAAAknJ,IAAAF,IAAA7nM,KAAAgoM,YACAhoM,KAAAgoM,UAAAnnJ,GACA,MAAAonJ,GAAAh9L,MAAAjL,KAAA+K,UAEA,IAAAm9L,GAAAloM,KAAAgoM,UAAAnnJ,EAEA,cADA7gD,MAAAgoM,UAAAnnJ,GACAonJ,EAAAh9L,MAAAjL,MAAA+nM,EACAG,KAGAnnM,OAAAC,eAAAse,EAAA,KAAAuoL,GACA1mM,IAAA,WACA,MAAAnB,MAAA,MAAA6nM,IAEAryK,IAAA,SAAAqrB,GACA7gD,KAAA,MAAA6nM,KACA7nM,KAAAooC,oBAAAy/J,EACA7nM,KAAA,MAAA6nM,UACA7nM,MAAA,MAAA6nM,IAEAhnJ,GACA7gD,KAAAkoC,iBAAA2/J,EACA7nM,KAAA,MAAA6nM,GAAAhnJ,QA4CAh8C,EAAA,wBAAA5E,GAOA,MANAA,GAAAmtC,WACArsC,OAAAC,eAAAf,EAAA,aACAmL,MAAA,GAAAvG,GAAA6mF,gBAAAzrF,EAAAmtC,WACApF,SAAA,UAGA/nC,MAMAqpC,oBAAA,SAAAzkC,GACA,GAAAwvE,GAAAxvE,KAAAwvE,GAEA,oBAAAxvE,MAAAgxF,kBACA,aAAAhxF,GAAAgxF,iBAAAp0F,WACA4yE,EAAAE,iBAAAF,EAAA+F,gBAFA,CAOA,GAAA+tH,GAAA9zH,EAAAE,gBAAAlnE,KAAAgnE,GACA+zH,EAAA/zH,EAAA+F,gBAAA/sE,KAAAgnE,GACAkE,EAAA,GAAA5kD,KAAA00K,EAAA,CAEAh0H,GAAAE,gBAAA,SAAA5+C,GACA,gBAAAA,GAAA,CACA,GAAAwkD,GAAA,eAAAkuH,CAIA,OAHA9vH,GAAA/iD,IAAA2kD,EAAAxkD,GACA5hB,EAAA40B,WAAA,8BACA,2BACAwxC,EAEA,MAAAguH,GAAAxyK,IAEA0+C,EAAA+F,gBAAA,SAAAD,GACAiuH,EAAAjuH,GACA5B,EAAApgD,OAAAgiD,GAGA,IAAAmuH,GAAAvnM,OAAAotD,yBAAAtpD,EAAAgxF,iBAAAp0F,UACA,MACAV,QAAAC,eAAA6D,EAAAgxF,iBAAAp0F,UAAA,OACAN,IAAA,WACA,MAAAmnM,GAAAnnM,IAAA8J,MAAAjL,OAEAw1B,IAAA,SAAA2kD,GAEA,MADAn6E,MAAAi2E,UAAAsC,EAAAp3E,IAAAg5E,IAAA,KACAmuH,EAAA9yK,IAAAvqB,MAAAjL,MAAAm6E,MAIA,IAAAouH,GAAA1jM,EAAAgxF,iBAAAp0F,UAAAmY,YACA/U,GAAAgxF,iBAAAp0F,UAAAmY,aAAA,WAKA,MAJA,KAAA7O,UAAA/H,QACA,YAAA+H,UAAA,IAAAgQ,gBACA/a,KAAAi2E,UAAAsC,EAAAp3E,IAAA4J,UAAA,WAEAw9L,EAAAt9L,MAAAjL,KAAA+K,0DCvGe,QAASy9L,GAChB9nH,EACAj+E,EACAiqK,EACA5iG,EACAztC,EACA0tC,EACA9rD,GAAS,GAAA83B,GAAA/1C,IAUbA,MAAKyoM,uBAULzoM,KAAKixK,uBAOLjxK,KAAK0gF,IAAMA,EAMX1gF,KAAKyC,GAAKA,EAOVzC,KAAK+pE,MAAQA,EASb/pE,KAAKirE,aAAe,GAAIt3C,KAMxB3zB,KAAK2nE,YAAc,GAAIh0C,KASvB3zB,KAAK0oM,iBAoBL1oM,KAAK2oM,WAAa,GAAIh1K,KAKtB3zB,KAAK4oM,WAAa,KAKlB5oM,KAAK6oM,YAAc,KAMnB7oM,KAAK0sK,eAAiBA,EAGtB1sK,KAAK8oM,sBAAwB9oM,KAAK8oM,sBAAsBz7L,KAAKrN,MAC7DA,KAAK0sK,eAAe32I,GAChBgzK,EAAA34L,EACApQ,KAAK8oM,uBAET9oM,KAAKgpM,kBAAoBhpM,KAAKgpM,kBAAkB37L,KAAKrN,MACrDA,KAAK0sK,eAAe32I,GAChBgzK,EAAAzgM,EACAtI,KAAKgpM,mBACThpM,KAAKie,QAAUA,EAEfje,KAAKo1B,eACC,GAAI6zK,GAAA3gM,EAASwtE,sBAAsBhM,EAAWztC,GACpDr8B,KAAKisK,aACLjsK,KAAKu9B,SACLv9B,KAAKkpM,cAAgB,KAKrBlpM,KAAKmpM,SAAW,CAChB,IAAMC,GAAUlpM,EAAQ,KAAekpM,OAEvCppM,MAAKqpM,QAAU,GAAID,EACnB,IAAME,GAAYppM,EAAQ,IAE1BF,MAAKg+J,UAAY,GAAIsrC,IAAYC,YAAaC,EAC1CC,4BACJzpM,KAAK0pM,eAAiB,GAAIC,GAAArhM,EAAetI,KAAK6N,YAO9C7N,KAAK4pM,eAAiB,GAAIC,GAAAvhM,EAAetI,MAMzCA,KAAK4zB,aAAe8sD,EAAI9sD,aACxB5zB,KAAK8pM,YAAc,GAAIC,GAAAzhM,EAGvBtI,KAAKqzC,MAAQ,SAAC22J,EAAM9lM,GAUhB6xC,EAAKk2H,UAAUppK,MACXgpF,KAAM,GAAI5sE,MACVjB,KAAMgsL,EACN5+L,MAAOlH,GAAQ,MAGvBlE,KAAKm4F,eAAiB,KACtBn4F,KAAKo1B,eAAe+iE,eAAiB,SAAAhmE,GAE5B83K,EAAA3hM,EAAepB,uBAChB6uC,EAAK1C,MACD,iBACA9vB,KAAKkK,UAAU0E,EAAMib,UAAW,KAAM,MAGlB,OAAxB2I,EAAKoiD,gBACLpiD,EAAKoiD,eAAehmE,IAG5BnyB,KAAKo1B,eAAegjE,YACd,SAAAjmE,GAAA,MAAS4jB,GAAKm0J,mBAAmB/3K,EAAMwD,SAC7C31B,KAAKo1B,eAAekjE,eACd,SAAAnmE,GAAA,MAAS4jB,GAAKo0J,qBAAqBh4K,EAAMwD,SAC/C31B,KAAKu4F,uBAAyB,KAC9Bv4F,KAAKo1B,eAAemjE,uBAAyB,SAAApmE,GACzC4jB,EAAK1C,MAAM,yBAA0B0C,EAAKkjD,gBACN,OAAhCljD,EAAKwiD,wBACLxiD,EAAKwiD,uBAAuBpmE,IAGpCnyB,KAAKw4F,2BAA6B,KAClCx4F,KAAKo1B,eAAeojE,2BAA6B,SAAArmE,GAC7C4jB,EAAK1C,MAAM,6BAA8B0C,EAAKu1C,oBACN,OAApCv1C,EAAKyiD,4BACLziD,EAAKyiD,2BAA2BrmE,IAGxCnyB,KAAKy4F,oBAAsB,KAC3Bz4F,KAAKo1B,eAAeqjE,oBAAsB,SAAAtmE,GACtC4jB,EAAK1C,MAAM,uBACsB,OAA7B0C,EAAK0iD,qBACL1iD,EAAK0iD,oBAAoBtmE,IAGjCnyB,KAAK04F,cAAgB,KACrB14F,KAAKo1B,eAAesjE,cAAgB,SAAAvmE,GAChC4jB,EAAK1C,MAAM,gBAAiBlhB,GACD,OAAvB4jB,EAAK2iD,eACL3iD,EAAK2iD,cAAcvmE,KAKtB83K,EAAA3hM,EAAenC,aAAenG,KAAKmpM,WACpCnpM,KAAKkpM,cAAgBrkM,OAAOmiF,YAAY,WACpCjxC,EAAK3gB,eAAeghE,SAAS,SAAA74D,GAIzB,IAAK,GAHCsgE,GAAUtgE,EAAM/gB,SAChBqN,EAAM,GAAI5K,MAEP5e,EAAI,EAAGA,EAAIw9F,EAAQ76F,SAAU3C,GAJJ,SAIzBA,GACLw9F,EAAQx9F,GAAG+tD,QAAQ//C,QAAQ,SAAAzN,GAEvB,GAAM6B,GAAQo7F,EAAQx9F,GAAGoC,GAAnB,IAAyB7B,EAC3BgB,EAAIm0C,EAAKxY,MAAM96B,EAEdb,KACDm0C,EAAKxY,MAAM96B,GAAMb,GACbiyG,UAAWhqF,EACXugL,QAASvgL,EACToN,UACAgiJ,WAGRr3K,EAAEq1B,OAAOp0B,KAAKg7F,EAAQx9F,GAAGs2F,KAAK/1F,IAC9BgB,EAAEq3K,MAAMp2K,KAAKgnB,EAAI3K,WACbtd,EAAEq1B,OAAOj0B,OAAS+yC,EAAKozJ,WACvBvnM,EAAEq1B,OAAOoV,QACTzqC,EAAEq3K,MAAM5sI,SAEZzqC,EAAEwoM,QAAUvgL,KApBXxpB,MAwBd,MAGPuC,EAAOsB,KAAP,cAA0BlE,MA61D9B,QAASqqM,GAAmBvvH,GACxB,MAAIA,IAAWA,EAAQg1B,QAAUh1B,EAAQg1B,OAAO9sG,OACrC83E,EAAQg1B,OAAO,GAAG5gE,MAAM,GACxB4rC,GAAWA,EAAQ5rC,OAAS4rC,EAAQ5rC,MAAMlsC,OAC1C83E,EAAQ5rC,MAAM,GAGlB,KDx/DXnkC,yXC5IMnI,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GACnBujM,EAAmB,EAInBc,GAHkB,IACA,IACA,KAoSlBC,EAAU,SAAS73G,GACrB,gBAAWA,GAA+C,OAAhBA,EAC/B,GAGX,SAAgBA,EAAY10E,KAA5B,OAAuC00E,EAAYjiD,IAYvD+3J,GAAwB/mM,UAAU6nH,mBAAqB,WACnD,GAAMzvB,GAAQ75F,KAAKo1B,eAAek2D,kBAElC,OAAc,cAAVuO,EACO,YAGJA,GAaX2uG,EAAwB/mM,UAAU+oM,0BAA4B,SACtD1/H,GACJ,GAAI2/H,KAOJ,OALI3/H,KAAc8nD,EAAAtqH,EACdmiM,EAAsBzqM,KAAKyoM,oBACpB39H,IAAc8nD,EAAAxiH,IACrBq6L,EAAsBzqM,KAAKixK,qBAE3Bw5B,EACOzqM,KAAK0qM,mBAAmB5/H,GAAa,WAAa,WAGtD,YAQX09H,EAAwB/mM,UAAUk+J,cAAgB,WAC9C,OAAQ3/J,KAAKie,QAAQyvJ,kBACdu8B,EAAA3hM,EAAeP,uBAObkiM,EAAA3hM,EAAenC,aACbnG,KAAKie,QAAQ6vJ,yBAS5B06B,EAAwB/mM,UAAUqnM,sBAAwB,SAClDnmH,EACAjW,GAEJ,GAAKiW,EAAL,CAKA,GAAMgoH,GAAa3qM,KAAKmrE,gBAAgBwX,EAAYiwC,EAAAxiH,EAEhDu6L,GAAW3nM,QAEX2nM,EAAW,GAAGC,cAAcl+H,OAR5B9pE,GAAO0Z,MAAP,yCAAsDtc,OAmB9DwoM,EAAwB/mM,UAAUunM,kBAAoB,SAC9CrmH,EACA7X,EACAga,GAEJ,GAAKnC,EAAL,CAKA,GAAMlY,GAAQzqE,KAAKmrE,gBAAgBwX,EAAY7X,EAE3CL,GAAMznE,QAENynE,EAAM,GAAGo+B,QAAQ/jB,OARjBliF,GAAO0Z,MAAM,wCAkBrBksL,EAAwB/mM,UAAUkpE,eAAiB,SAASG,GACxD,GAAIC,GAASv9D,MAAMQ,KAAKhO,KAAK2nE,YAAY1wC,SAMzC,iBAJI6zC,IACAC,EAASA,EAAO37B,OAAO,SAAAq7B,GAAA,MAASA,GAAMO,YAAcF,KAGjDC,GASXy9H,EAAwB/mM,UAAUipM,mBAAqB,SAAS5/H,GAC5D,IAAKA,EACD,KAAM,IAAIp/D,OAAM,0BAGpB,OAAO1L,MAAK2qE,eAAeG,GAAW9nE,OAAS,GAUnDwlM,EAAwB/mM,UAAU0pE,gBAAkB,SAC5CwX,EACA7X,GACJ,GAAMG,MACA4/H,EACAloH,GAAeA,GAAe3iF,KAAKirE,aAAalzC,OAHvCnB,KAAAC,KAAAC,QAAA,KAKf,OAAAC,GAAAC,EAAuB6zK,EAAvB3zK,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAkC,IAAvBo8G,GAAuBj8G,EAAA3rB,MACxB0/L,EAAmB9qM,KAAKirE,aAAa9pE,IAAI6xI,EAE/C,IAAK83D,EAAL,CAH8B,GAAApzK,MAAAC,KAAAC,QAAA,KAU9B,OAAAC,GAAAC,EAA6BgzK,EAAiB/yK,OAA9Cb,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAsD,IAA3Cq5E,GAA2Cl5E,EAAAzsB,KAElD,KAAK0/D,GAAaA,IAAcimC,EAAgB,CAC5C,GAAMg6F,GAAaD,EAAiB3pM,IAAI4vG,EAEpCg6F,IACA9/H,EAAapoE,KAAKkoM,KAhBA,MAAAvkL,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,OALnB,MAAApR,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IA2Bf,MAAOm0C,IASXu9H,EAAwB/mM,UAAUoqE,eAAiB,SAASrxC,GACxD,GAAoB,gBAATA,GACP,KAAM,IAAI9uB,OAAJ,QAAkB8uB,EAAlB,mBAFoD,IAAA1B,MAAAC,KAAAC,QAAA,KAI9D,OAAAC,GAAAC,EAAyBl5B,KAAK2nE,YAAY1wC,SAA1CC,OAAAC,cAAA2B,GAAAG,EAAAC,EAAA9B,QAAAC,MAAAyB,KAAoD,IAAzCw0C,GAAyCr0C,EAAA7tB,KAChD,IAAIpL,KAAKoqH,aAAa98C,KAAgB9yC,EAClC,MAAO8yC,IAN+C,MAAA9mD,GAAAuS,KAAAC,EAAAxS,EAAA,aAAAsS,GAAAI,EAAAzB,QAAAyB,EAAAzB,SAAA,WAAAsB,EAAA,KAAAC,IAAA,GAAAI,MAAAC,KAAAC,QAAA,KAS9D,OAAAC,GAAAC,EAA0Bx5B,KAAKmrE,kBAA/Bj0C,OAAAC,cAAAiC,GAAAG,EAAAC,EAAApC,QAAAC,MAAA+B,KAAkD,IAAvCiqD,GAAuC9pD,EAAAnuB,KAC9C,IAAIi4E,EAAYgnC,YAAc7vF,EAC1B,MAAO6oD,IAX+C,MAAA78D,GAAA6S,KAAAC,EAAA9S,EAAA,aAAA4S,GAAAI,EAAA/B,QAAA+B,EAAA/B,SAAA,WAAA4B,EAAA,KAAAC,IAe9D,MAAO,OAOXkvK,EAAwB/mM,UAAUyoM,mBAAqB,SAASv0K,GAAQ,GAAAizC,GAAA5oE,KAC9D0uE,EAAWs8H,EAAA1iM,EAAI2lE,YAAYt4C,EAEjC,IAAKq1K,EAAA1iM,EAAImmE,iBAAiBC,GAA1B,EASIu7H,EAAA3hM,EAAe7B,YAAcwjM,EAAA3hM,EAAexB,UACzCmjM,EAAA3hM,EAAevB,cAAgBkjM,EAAA3hM,EAAelC,YACjDuvB,EAAOs1K,WAAa,SAAA94K,GAChBy2C,EAAKsiI,kBAAkBv1K,EAAQxD,EAAMs4C,QAEzC90C,EAAOw1K,cAAgB,SAAAh5K,GACnBy2C,EAAKwiI,oBAAoBz1K,EAAQxD,EAAMs4C,QAK/C,IAAM4gI,GAAoB11K,EAAOo8C,iBAvBmCt3C,KAAAC,KAAAC,QAAA,KAyBpE,OAAAC,GAAAC,EAAyBwwK,EAAzBn0K,OAAAC,cAAAsD,GAAAG,EAAAC,EAAAzD,QAAAC,MAAAoD,KAA4C,IAAjC4wC,GAAiCzwC,EAAAxvB,KACxCpL,MAAKkrM,kBAAkBv1K,EAAQ01C,IA1BiC,MAAA7kD,GAAAkU,KAAAC,EAAAnU,EAAA,aAAAiU,GAAAI,EAAApD,QAAAoD,EAAApD,SAAA,WAAAiD,EAAA,KAAAC,IA4BpE,GAAM2wK,GAAoB31K,EAAOs8C,iBA5BmCl3C,KAAAC,KAAAC,QAAA,KA8BpE,OAAAC,GAAAC,EAAyBmwK,EAAzBp0K,OAAAC,cAAA4D,GAAAG,EAAAC,EAAA/D,QAAAC,MAAA0D,KAA4C,IAAjC4vK,GAAiCzvK,EAAA9vB,KACxCpL,MAAKkrM,kBAAkBv1K,EAAQg1K,IA/BiC,MAAAnkL,GAAAwU,KAAAC,EAAAzU,EAAA,aAAAuU,GAAAI,EAAA1D,QAAA0D,EAAA1D,SAAA,WAAAuD,EAAA,KAAAC,SAIhEr4B,GAAOsB,KACAlE,KAAH,+DACU0uE,IAuCtB85H,EAAwB/mM,UAAUypM,kBAAoB,SAASv1K,EAAQ80C,GACnE,GAAMiE,GAAWs8H,EAAA1iM,EAAI2lE,YAAYt4C,GAC3Bm1C,EAAYL,EAAMsC,IAKxB,IAHAnqE,EAAOsB,KAAQlE,KAAf,uBAA2C0uE,EAAU5D,GAGhDA,EAAL,CAUA,GACMygI,GADY,GAAIC,GAAAljM,EAAItI,KAAKg5F,kBAAkBvoD,KAEjCrE,MAAMgD,OAAO,SAAAq8J,GAAA,MAAOA,GAAI76J,WAAJ,KAAoBk6B,IAExD,IAAKygI,EAAWvoM,OAAhB,CAWA,GAAIqwK,GAAYq4B,EAAApjM,EAAQomC,UAAU68J,EAAW,GAAI,UAUjD,KARAl4B,EAAYA,EAAUjkI,OAClB,SAAApzB,GACI,GAAMi/D,GACAgvH,EAAA3hM,EAAepB,sBAAwB,UAAY,MAGzD,QAAgD,IAAzC8U,EAAKjX,QAAWk2E,EAAhB,IAAwBvM,MAExB1rE,OAAf,CAYA,GAAMutC,GAAU8iI,EAAU,GAAGruK,UAAU,GAAGwB,MAAM,KAAK,GAC/CmlM,EAAY19L,OAAOsiC,GACnBq7J,EAAkB5rM,KAAK0sK,eAAem/B,aAAaF,EAEzD,IAAIn8L,MAAMm8L,IAAcA,EAAY,EAChC/sB,EAAAvsJ,iBACI,GAAI3mB,OAAJ,iBACqB6kC,EADrB,4BAEQm+B,EAFR,gBAEgC5D,QAIjC,IAAK8gI,EAAL,CAWPhpM,EAAOkB,IAAO9D,KAAd,mBAAsC4rM,EAAiBD,EAEvD,IAAMG,GACA9rM,KAAK0sK,eAAeq/B,iBAAiBH,EAAiB9gI,EAE5D,IAAKghI,EAAL,CASA,GAAMxxK,GAAQwxK,EAAcxxK,MACtBoyC,EAAYo/H,EAAcp/H,SAEhC1sE,MAAKgsM,mBACDJ,EAAiBj2K,EAAQ80C,EAAOK,EAAW4B,EAAWi/H,EAAWrxK,OAZjEskJ,GAAAvsJ,iBACI,GAAI3mB,OACG1L,KADP,sCAEQ4rM,QAnBZhtB,GAAAvsJ,iBACI,GAAI3mB,OAAJ,4BAEQigM,EAFR,4BAGQj9H,EAHR,gBAGgC5D,QA5BpC8zG,GAAAvsJ,iBACI,GAAI3mB,OAAJ,8BAEQgjE,EAFR,kCAEkD5D,QAxBtD8zG,GAAAvsJ,iBACI,GAAI3mB,OAAJ,2BAEQo/D,EAFR,0CAGQ4D,QAlBZkwG,GAAAvsJ,iBACI,GAAI3mB,OAAJ,oDACwDgjE,KAuGpE85H,EAAwB/mM,UAAUuqM,mBAAqB,SAC/CJ,EACAj2K,EACA80C,EACAK,EACA4B,EACAlyC,EACAF,GACJ,GAAM+oD,GACA,GAAI4oH,GAAA3jM,EACFtI,KAAK0gF,IAAK1gF,KAAK0gF,IAAIlZ,WACnBokI,EACAj2K,EAAQ80C,EAAOK,EAAW4B,EAAWlyC,EAAMF,EAAOt6B,KAAK+pE,OAC3DmiI,EAAkBlsM,KAAKirE,aAAa9pE,IAAIyqM,EAEvCM,KACDA,EAAkB,GAAIv4K,KACtB3zB,KAAKirE,aAAaz1C,IAAIo2K,EAAiBM,IAGvCA,EAAgB1zK,IAAIsyC,IACpBloE,EAAO0Z,MACAtc,KADP,8BACyCqjF,EACrCuoH,EAAiB9gI,GAEzBohI,EAAgB12K,IAAIs1C,EAAWuY,GAE/BrjF,KAAK4zB,aAAa+C,KAAKmvJ,EAAAx9K,EAAU++B,mBAAoBg8C,IAUzDmlH,EAAwB/mM,UAAU0oM,qBAAuB,SAASx0K,GAC9D,GAAKq1K,EAAA1iM,EAAI6jM,aAAax2K,GAAtB,CAUA,GAAM21K,GAAoB31K,EAAOs8C,iBAXqC12C,KAAAC,KAAAC,QAAA,KAatE,OAAAC,GAAAC,EAAyB2vK,EAAzBp0K,OAAAC,cAAAoE,GAAAG,EAAAC,EAAAvE,QAAAC,MAAAkE,KAA4C,IAAjCovK,GAAiCjvK,EAAAtwB,KACxCpL,MAAKorM,oBAAoBz1K,EAAQg1K,IAdiC,MAAAnkL,GAAAgV,KAAAC,EAAAjV,EAAA,aAAA+U,GAAAI,EAAAlE,QAAAkE,EAAAlE,SAAA,WAAA+D,EAAA,KAAAC,IAgBtE,GAAM4vK,GAAoB11K,EAAOo8C,iBAhBqCz1C,KAAAC,KAAAC,QAAA,KAkBtE,OAAAC,GAAAC,EAAyB2uK,EAAzBn0K,OAAAC,cAAAmF,GAAAG,EAAAC,EAAAtF,QAAAC,MAAAiF,KAA4C,IAAjC+uC,GAAiC5uC,EAAArxB,KACxCpL,MAAKorM,oBAAoBz1K,EAAQ01C,IAnBiC,MAAA7kD,GAAA+V,KAAAC,EAAAhW,EAAA,aAAA8V,GAAAI,EAAAjF,QAAAiF,EAAAjF,SAAA,WAAA8E,EAAA,KAAAC,SACtE,CACI,GAAM/5B,GAAKuoM,EAAA1iM,EAAI2lE,YAAYt4C,EAE3B/yB,GAAOsB,KAAP,6DACiEzB,KAyBzE+lM,EAAwB/mM,UAAU2pM,oBAAsB,SAChDz1K,EACA80C,GACJ,GAAMiE,GAAWs8H,EAAA1iM,EAAI2lE,YAAYt4C,GAC3Bg8E,EAAUlnC,GAASugI,EAAA1iM,EAAI4lE,WAAWzD,EAExC7nE,GAAOsB,KAAQlE,KAAf,4BAA+C0uE,EAA/C,KAA4DijC,GAEvDjjC,EAOAijC,EAOA3xG,KAAKosM,uBAAuB19H,EAAUijC,IAWvC/uG,EAAOwF,KACApI,KADP,sCACiD0uE,EADjD,6BAEiBijC,GAnBjBitE,EAAAvsJ,iBACI,GAAI3mB,OAAS1L,KAAb,+CARJ4+K,EAAAvsJ,iBACI,GAAI3mB,OAAS1L,KAAb,iDAqCZwoM,EAAwB/mM,UAAU4qM,oBAAsB,SAChD39H,EACAijC,GAAS,GAAAz0E,MAAAC,KAAAC,QAAA,KAEb,OAAAC,GAAAC,EAA+Bt9B,KAAKirE,aAAah0C,SAAjDC,OAAAC,cAAA+F,GAAAG,EAAAC,EAAAlG,QAAAC,MAAA6F,KAA2D,IAAhD4tK,GAAgDztK,EAAAjyB,MAAAoyB,KAAAC,KAAAC,QAAA,KACvD,OAAAC,GAAAC,EAAyBktK,EAAiB7zK,SAA1CC,OAAAC,cAAAqG,GAAAG,EAAAC,EAAAxG,QAAAC,MAAAmG,KAAoD,IAAzCutK,GAAyCptK,EAAAvyB,KAGhD,IAAI2/L,EAAWr5F,eAAiBhjC,GACzBq8H,EAAWn5F,cAAgBD,EAC9B,MAAOo5F,IANwC,MAAAvkL,GAAAiX,KAAAC,EAAAlX,EAAA,aAAAgX,GAAAI,EAAAnG,QAAAmG,EAAAnG,SAAA,WAAAgG,EAAA,KAAAC,MAF9C,MAAAlX,GAAA2W,KAAAC,EAAA5W,EAAA,aAAA0W,GAAAI,EAAA7F,QAAA6F,EAAA7F,SAAA,WAAA0F,EAAA,KAAAC,MAyBjBorK,EAAwB/mM,UAAUkqE,mBAAqB,SAASH,GAC5D,GAAMC,MACAygI,EAAkBlsM,KAAKirE,aAAa9pE,IAAIqqE,EAE9C,IAAI0gI,EAAiB,CACjB,GAAMI,GAAoBJ,EAAgB/qM,IAAIyxH,EAAAtqH,GACxCikM,EAAoBL,EAAgB/qM,IAAIyxH,EAAAxiH,EAE9Ck8L,IAAqB7gI,EAAc5oE,KAAKypM,GACxCC,GAAqB9gI,EAAc5oE,KAAK0pM,GAExCvsM,KAAKirE,aAAa9yC,OAAOqzC,GAO7B,MAJA5oE,GAAOyZ,MACArc,KADP,8BACyCwrE,EADzC,WAEQC,EAAczoE,QAEfyoE,GAQX+8H,EAAwB/mM,UAAU+qM,mBAAqB,SAASC,GAC5DA,EAAYh2K,SACZ,IAAMgsD,GAAgBgqH,EAAYlpH,mBAC5B2oH,EAAkBlsM,KAAKirE,aAAa9pE,IAAIshF,EAEzCypH,GAGOA,EAAgB/zK,OAAOs0K,EAAYzhI,YAC3CpoE,EAAO0Z,MAAP,oBACwBmwL,EADxB,+BAHA7pM,EAAO0Z,MAAP,+CACmDmmE,GAKvDziF,KAAK4zB,aAAa+C,KAAKmvJ,EAAAx9K,EAAUi/B,qBAAsBklK,IAa3DjE,EAAwB/mM,UAAU2qM,uBAAyB,SACnD19H,EACAijC,GACJ,GAAM86F,GAAczsM,KAAKqsM,oBAAoB39H,EAAUijC,EAMvD,OAJI86F,IACAzsM,KAAKwsM,mBAAmBC,GAGrBA,GA2NXjE,EAAwB/mM,UAAU2oH,aAAe,SAAS98C,GACtD,GAAMn+B,GAAWnvC,KAAK0sM,SAASp/H,EAAWN,MAE1C,OAAO79B,IAAYA,EAASD,MAAM,IAmBtCs5J,EAAwB/mM,UAAUkrM,oCAC5B,SAAS3+J,GACP,GAAMyC,GAAMm8J,EAAAtkM,EAAUilB,MAAMygB,EAAKyC,KAC3B1G,EAAQ0G,EAAIrE,MAAMsD,KAAK,SAAAjD,GAAA,MAAwB,UAAfA,EAAMzuB,MAE5C,IAAI+rB,EAAM8iK,aAAc,CACpB,GAAM39J,KAQN,IANAnF,EAAMmF,MAAM7gC,QAAQ,SAAAmsB,GACO,SAAnBA,EAAKlkB,WACL44B,EAAMrsC,KAAK23B,EAAK/3B,MAGxBsnC,EAAMwF,WAAaxF,EAAMwF,eACrBxF,EAAMwF,WAAWG,KAAK,SAAAC,GAAA,MAA6B,QAApBA,EAAMC,YAErC,MAAO5B,EAEXjE,GAAMwF,WAAW1sC,MACb+sC,UAAW,MACXV,MAAOA,EAAMzkC,KAAK,OAI1B,MAAO,IAAIghF,wBACPztE,KAAMgwB,EAAKhwB,KACXyyB,IAAKm8J,EAAAtkM,EAAU2pC,MAAMxB,KAKjC,IAAMq8J,IACF7zG,eADY,WAER,MAAOj5F,MAAKo1B,eAAe6jE,gBAE/B3N,mBAJY,WAKR,MAAOtrF,MAAKo1B,eAAek2D,oBAE/ByN,iBAPY,WAQR,GAAI/qD,GAAOhuC,KAAKo1B,eAAe2jE,gBAE/B,OAAK/qD,IAMLhuC,KAAKqzC,MAAM,oCAAqCk3J,EAAQv8J,IAGpDi8J,EAAA3hM,EAAeX,oBACfqmC,EAAOhuC,KAAKqpM,QAAQ0D,QAAQ/+J,GAC5BhuC,KAAKqzC,MAAM,8CACPk3J,EAAQv8J,IAEZA,EAAOhuC,KAAK2sM,oCAAoC3+J,GAChDhuC,KAAKqzC,MAAM,yDACPk3J,EAAQv8J,KAGZi8J,EAAA3hM,EAAepC,gCACf8nC,EAAOhuC,KAAK4pM,eAAeoD,mCAAmCh/J,GAC9DprC,EAAOyZ,MACH,uDAAwD2xB,IAWhEA,EAnIgB,SAAS+qD,GAC7B,IAAKA,EACD,KAAM,IAAIrtF,OAAM,kCAGpB,IAAMuhM,GAAc,GAAIC,GAAA5kM,EAAiBywF,EAAiBtoD,KACpD08J,EAAaF,EAAYG,YAAY,SACvCC,IAEAF,IAAuC,aAAzBA,EAAW7+J,YACzB6+J,EAAW7+J,UAAY,WACvB++J,KAGJ,IAAMC,GAAaL,EAAYG,YAAY,QAO3C,OALIE,IAAuC,aAAzBA,EAAWh/J,YACzBg/J,EAAWh/J,UAAY,WACvB++J,MAGAA,EACO,GAAI5hH,wBACPztE,KAAM+6E,EAAiB/6E,KACvByyB,IAAKw8J,EAAYM,aAIlBx0G,GAuGoB/qD,KAhCnBprC,EAAOyZ,MAAM,sDAoCrB28E,kBA/CY,WAgDR,GAAIhrD,GAAOhuC,KAAKo1B,eAAe4jE,iBAW/B,OATAh5F,MAAKqzC,MAAM,qCAAsCk3J,EAAQv8J,IAGrDi8J,EAAA3hM,EAAeX,oBACfqmC,EAAOhuC,KAAKqpM,QAAQ0D,QAAQ/+J,GAC5BhuC,KAAKqzC,MACD,+CAAgDk3J,EAAQv8J,KAGzDA,OAIfjtC,QAAOg3B,KAAK+0K,GAASz+L,QAAQ,SAAArF,GACzBjI,OAAOC,eACHwnM,EAAwB/mM,UACxBuH,GACI7H,IAAK2rM,EAAQ9jM,OAKzBw/L,EAAwB/mM,UAAUirM,SAAW,SAAS1/H,GAClD,MAAOhtE,MAAK2oM,WAAWxnM,IAAI6rE,IAO/Bw7H,EAAwB/mM,UAAUo3E,SAAW,SAASpO,GAClD,GAAMuC,GAAQvC,EAAMuC,KAIpB,IAFApqE,EAAOsB,KAAP,OAAmBumE,EAAnB,QAAgCzqE,MAE5BA,KAAK2nE,YAAYnvC,IAAIw0C,GACrBpqE,EAAO0Z,MAASmuD,EAAhB,kBAAuCzqE,UAD3C,CAMAA,KAAK2nE,YAAYnyC,IAAIw3C,EAAOvC,EAE5B,IAAM+iI,GAAe/iI,EAAMoqC,mBAa3B,IAXI24F,EACAxtM,KAAKgqL,WAAWwjB,KAGRvD,EAAA3hM,EAAepC,+BACZukE,EAAMqB,gBACLrB,EAAMonC,iBAAmBpnC,EAAMqa,YAC3CliF,EAAO0Z,MAAStc,KAAhB,0BAA8CyqE,GAI9Cw/H,EAAA3hM,EAAepC,+BACRukE,EAAMonC,gBAAkBpnC,EAAMqa,UAAW,CAChD,GAAM31C,GAAWnvC,KAAKytM,0BAA0BhjI,EAEhDzqE,MAAK0pM,eAAegE,eAAev+J,EAASD,MAAM,GAClD,IAAMW,GACAV,EAAS2gE,OAAOpgE,KAAK,SAAA+rC,GAAA,MAAqC,QAAxBA,EAAU7rC,WAE9CC,IACA7vC,KAAKg+J,UAAU2vC,aAAa99J,EAASX,MAEzC,IAAM0+J,GACAz+J,EAAS2gE,OAAO1gE,OACd,SAAAqsC,GAAA,MAAqC,QAAxBA,EAAU7rC,WAE/B,IAAIg+J,EAAW,CACX,GAAMC,GAAiB,GAAIl6K,IAE3Bi6K,GAAUv/L,QAAQ,SAAAohC,GACd,GAAMD,GAAcC,EAASP,MAAM,GAC7Bi9I,EAAU18I,EAASP,MAAM,EAE/B2+J,GAAer4K,IAAIga,EAAa28I,KAEpCnsL,KAAK8pM,YAAY6D,aAAaE,OAY1CrF,EAAwB/mM,UAAU2yK,eAAiB,SAAS3pG,GACxD,IAAKzqE,KAAK8tM,oBAAoB,iBAAkBrjI,GAE5C,QAGJ7nE,GAAOsB,KAAP,UAAsBumE,EAAtB,iBAA4CzqE,KAC5C,IAAM+tM,GAAetjI,EAAMoqC,mBAE3B,OAAKk5F,IAML/tM,KAAKgqL,WAAW+jB,QALZnrM,EAAO0Z,MAAP,iBACqBmuD,EADrB,iBAC2CzqE,KAD3C,4BAeRwoM,EAAwB/mM,UAAUuoL,WAAa,SAASp7G,GACpD5uE,KAAKo1B,eAAe0kE,UAAUlrB,GAC9B5uE,KAAK0oM,cAAc7lM,KAAK+rE,IAO5B45H,EAAwB/mM,UAAU4oL,cAAgB,SAASz7G,GACnDq7H,EAAA3hM,EAAenC,YACfnG,KAAKguM,2BAA2Bp/H,GAEhC5uE,KAAKo1B,eAAe6kE,aAAarrB,GAErC5uE,KAAK0oM,cACC1oM,KAAK0oM,cAAct5J,OAAO,SAAAzZ,GAAA,MAAUA,KAAWi5C,KAczD45H,EAAwB/mM,UAAUqsM,oBAAsB,SAChDvwJ,EACA+vB,GACJ,GAAM2gI,GAAajuM,KAAK2nE,YAAYnvC,IAAI80C,EAAWN,MAOnD,OALKihI,IACDrrM,EAAO0Z,MACAihC,EADP,KACsB+vB,EADtB,uBACuDttE,MAGpDiuM,GASXzF,EAAwB/mM,UAAUysM,kBAAoB,SAASt/H,GAC3D,MAAO5uE,MAAK0oM,cAAc3jM,QAAQ6pE,IAAgB,GAUtD45H,EAAwB/mM,UAAUwzG,YAAc,SAAS3nC,GACrD,GAAMygI,GAAezgI,EAAWunC,mBAEhC70G,MAAKqzC,MACD,eACAi6B,EAAWN,MAAO+gI,EAAeA,EAAatrM,WAE7CzC,KAAK8tM,oBAAoB,eAAgBxgI,KAI9CttE,KAAK2nE,YAAYxvC,OAAOm1C,EAAWN,OACnChtE,KAAK2oM,WAAWxwK,OAAOm1C,EAAWN,OAE9B+gI,IACI9D,EAAA3hM,EAAenC,YACfnG,KAAKguM,2BAA2BD,GAEhC/tM,KAAKo1B,eAAe6kE,aAAa8zG,MAY7CvF,EAAwB/mM,UAAU0yK,gBAAkB,SAAS7mG,GACzD,GAAMygI,GAAezgI,EAAWunC,mBAMhC,OAJA70G,MAAKqzC,MACD,mBACAi6B,EAAWN,MAAO+gI,EAAeA,EAAatrM,GAAK,QAElDzC,KAAK8tM,oBAAoB,mBAAoBxgI,KAK9CygI,GACAnrM,EAAOsB,KAAP,YACgBopE,EADhB,iBAC2CttE,MAC3CA,KAAKqqL,cAAc0jB,QAKvBnrM,EAAO0Z,MAAP,2CAAwDgxD,SAS5Dk7H,EAAwB/mM,UAAUusM,2BAA6B,SACvDr4K,GACJ,GAAKA,EAAL,CAIA,GAAI6qC,GAAS,KAMTiK,EAAQ,IAER90C,GAAOo8C,kBAAoBp8C,EAAOo8C,iBAAiB/uE,OACnDynE,EAAQ90C,EAAOo8C,iBAAiB,GACzBp8C,EAAOs8C,kBAAoBt8C,EAAOs8C,iBAAiBjvE,SAC1DynE,EAAQ90C,EAAOs8C,iBAAiB,IAG/BxH,GAOLzqE,KAAKo1B,eAAe+kE,aAAa73B,KAAK,SAAA1gE,GAClC,MAAIA,GAAE6oE,QAAUA,IACZjK,EAAS5+D,QAQb4+D,EACAxgE,KAAKo1B,eAAe6/E,YAAYz0C,GAEhC59D,EAAOkB,IAAI,wCAnBXlB,EAAO0Z,MAAM,sCAuBrBksL,EAAwB/mM,UAAUquJ,kBAAoB,SAASr9E,EAAOzpB,GAGlE,MAFAhpD,MAAKqzC,MAAM,oBAAqBo/B,EAAOzpB,GAEhChpD,KAAKo1B,eAAe06H,kBAAkBr9E,EAAOzpB,IAWxDw/I,EAAwB/mM,UAAU0sM,4BAA8B,SACxDC,GACJ,GAAIC,GAASD,EAAS39J,IAEhB69J,EAAkBD,EAAOtpM,QAAQ,WACjCwpM,EAAgBF,EAAOtpM,QAAQ,mBAAoBupM,GACrDE,EAAkBH,EAAOvpG,YAAY,eAEzC,KAAuB,IAAnBypG,IACwB,IAArBC,GACAA,IAAoBD,EACvB,MAAOH,EAGX,IAAMK,GAAcJ,EAAOtpM,QAAQ,OAAQwpM,GACrCG,EAASL,EAAOrpM,UAAUupM,EAAeE,EAAc,EAG7DD,IADAH,EAASA,EAAOjkM,QAAQskM,EAAQ,KACP5pG,YAAY,eACrC,IAAM6pG,GAAgBN,EAAOtpM,QAAQ,OAAQypM,EAO7C,OAFAH,GAJgBA,EAAO/jM,MAAM,EAAGqkM,GAIhC,OAHsBD,EAAOz+G,OACbo+G,EAAO/jM,MAAMqkM,GAItB,GAAIljH,wBACPztE,KAAMowL,EAASpwL,KACfyyB,IAAK49J,KAYb7F,EAAwB/mM,UAAUmtM,2BAA6B,SACvD71G,GACJ,GAAMk0G,GAAc,GAAIC,GAAA5kM,EAAiBywF,EAAiBtoD,KACtDo+J,KACE1B,EAAaF,EAAYG,YAAY,QAE3C,IAAID,EAAY,CACZ,GAAM2B,GACA9uM,KAAKwqM,0BAA0B53E,EAAAtqH,EAEjC6kM,GAAW7+J,YAAcwgK,IACzB3B,EAAW7+J,UAAYwgK,EACvBlsM,EAAOsB,KAAP,qCACyC4qM,GACzCD,UAGJjsM,GAAOwF,KAAK,mDAGhB,IAAMklM,GAAaL,EAAYG,YAAY,QAE3C,IAAIE,EAAY,CACZ,GAAMyB,GACA/uM,KAAKwqM,0BAA0B53E,EAAAxiH,EAEjCk9L,GAAWh/J,YAAcygK,IACzBzB,EAAWh/J,UAAYygK,EACvBnsM,EAAOsB,KAAP,qCACyC6qM,GACzCF,UAGJjsM,GAAOwF,KAAK,kDAGhB,OAAIymM,GACO,GAAIpjH,wBACPztE,KAAM+6E,EAAiB/6E,KACvByyB,IAAKw8J,EAAYM,aAIlBx0G,GAGXyvG,EAAwB/mM,UAAUq6F,oBAAsB,SAChDpJ,EACAhf,EACAoE,GAAiB,GAAA3O,GAAAnpE,KACjBouM,EAAW17G,CAIf,IAFA1yF,KAAKqzC,MAAM,oCAAqCk3J,EAAQ6D,IAEpDpuM,KAAKie,QAAQ0vJ,aAAe3tK,KAAKie,QAAQ2vJ,WAAY,CACrD,GAAMohC,GAAYpC,EAAAtkM,EAAUilB,MAAM6gL,EAAS39J,KACrCzB,EAAaggK,EAAU5iK,MAAMsD,KAAK,SAAAjvC,GAAA,MAAgB,UAAXA,EAAEud,MAE3Che,MAAKie,QAAQ0vJ,YACb+9B,EAAApjM,EAAQipC,gBAAgBvC,EAAY,QAEpC08J,EAAApjM,EAAQuoC,iBAAiB7B,EAAY,QAGzCo/J,EAAW,GAAI3iH,wBACXztE,KAAMowL,EAASpwL,KACfyyB,IAAKm8J,EAAAtkM,EAAU2pC,MAAM+8J,KAGzBhvM,KAAKqzC,MAAM,4CACPk3J,EAAQ6D,IAGhBA,EAAWpuM,KAAK4uM,2BAA2BR,GAE3CA,EAAWpuM,KAAKmuM,4BAA4BC,GAGxCnE,EAAA3hM,EAAeX,oBACfymM,EAAWpuM,KAAKqpM,QAAQ4F,cAAcb,GACtCpuM,KAAKqzC,MACD,oDACAk3J,EAAQ6D,KAGhBpuM,KAAKo1B,eAAe0mE,oBAAoBsyG,EACpC,WACIjlI,EAAK91B,MAAM,+BACX,IAAMu1J,GAAa8C,EAAApjM,EAAQooC,SAAS09J,EAAS39J,IAEzCm4J,KAAez/H,EAAKy/H,aACpBz/H,EAAKy/H,WAAaA,EAClBz/H,EAAKv1C,aAAa+C,KACdmvJ,EAAAx9K,EAAUw/B,oBADdqhC,EACyCy/H,IAE7Cl1H,KAEJ,SAAAltD,GACI2iD,EAAK91B,MAAM,+BAAgC7sB,GAC3C2iD,EAAKv1C,aAAa+C,KACdmvJ,EAAAx9K,EAAUm/B,6BACVjhB,EAFJ2iD,GAGA2O,EAAgBtxD,MAkB5BgiL,EAAwB/mM,UAAUozK,uBAAyB,SAAStzE,GAChE3+F,EAAOyZ,MAASrc,KAAhB,2BAA+CuhG,EAC/C,IAAM8rG,GAAUrtM,KAAKyoM,sBAAwBlnG,CAI7C,OAFAvhG,MAAKyoM,oBAAsBlnG,EAEpB8rG,GAaX7E,EAAwB/mM,UAAUytM,mCAC5B,SAASlhK,GACP,GAAMyC,GAAMm8J,EAAAtkM,EAAUilB,MAAMygB,EAAKyC,KAC3B1G,EAAQ0G,EAAIrE,MAAMsD,KAAK,SAAAjD,GAAA,MAAwB,UAAfA,EAAMzuB,MAsB5C,OAnBA+rB,GAAMklE,OAEExsG,GAxoDQ,IAyoDR6rC,UAAW,SAGX7rC,GA3oDQ,IA4oDR6rC,UAAW,SAGX7rC,GA9oDQ,IA+oDR6rC,UAAW,SAInBvE,EAAM8iK,cACFzhM,kBAAmBk/L,EAAe7/L,KAAK,MAGpC,GAAIghF,wBACPztE,KAAMgwB,EAAKhwB,KACXyyB,IAAKm8J,EAAAtkM,EAAU2pC,MAAMxB,MAIjC+3J,EAAwB/mM,UAAU+6F,qBAAuB,SACjD9J,EACAhf,EACAoE,GAAiB,GAAAO,GAAAr4E,IAUrB,IATAA,KAAKqzC,MAAM,qCAAsCk3J,EAAQ73G,IAIzDA,EAAc1yF,KAAKg+J,UAAUmxC,uBAAuBz8G,GACpD1yF,KAAKqzC,MACD,kDACAk3J,EAAQ73G,IAER1yF,KAAKie,QAAQ2vJ,WAAY,CACzB,GAAMohC,GAAYpC,EAAAtkM,EAAUilB,MAAMmlE,EAAYjiD,KACxCzB,EAAaggK,EAAU5iK,MAAMsD,KAAK,SAAAjvC,GAAA,MAAgB,UAAXA,EAAEud,MAE/C0tL,GAAApjM,EAAQuoC,iBAAiB7B,EAAY,QAGrC0jD,EAAc,GAAIjH,wBACdztE,KAAM00E,EAAY10E,KAClByyB,IAAKm8J,EAAAtkM,EAAU2pC,MAAM+8J,KAKzB/E,EAAA3hM,EAAeX,mBAEf+qF,EAAc,GAAIjH,wBACdztE,KAAM00E,EAAY10E,KAClByyB,IAAKzwC,KAAK8pM,YAAYsF,SAAS18G,EAAYjiD,OAG/CzwC,KAAKqzC,MACD,iDACAk3J,EAAQ73G,IAGZA,EAAc1yF,KAAKqpM,QAAQ4F,cAAcv8G,GACzC1yF,KAAKqzC,MACD,+CACAk3J,EAAQ73G,IAER1yF,KAAK2/J,kBAELjtE,EAAc1yF,KAAKkvM,mCAAmCx8G,GACtD1yF,KAAKqzC,MACD,oDACAk3J,EAAQ73G,MAKhBA,EAnwBe,SAAS1kD,GAC5B,GAAoB,qBAATA,EAAP,YAAAvE,EAAOuE,KAA8B,OAATA,GACL,gBAAbA,GAAKyC,IAGf,MAFA7tC,GAAOwF,KAAK,mDAEL4lC,CAIX,IAAM28C,GAAYzqF,EAAQ,IACpBotB,EAAUq9D,EAAUp9D,MAAMygB,EAAKyC,cAE1BnjB,YACOA,EAAQ8e,OACf5+B,MAAMG,QAAQ2f,EAAQ8e,QAC7B9e,EAAQ8e,MAAM/9B,QAAQ,SAAA6hC,GASlB,GAAMm/J,MACAC,IAcN,aAZWp/J,EAAMX,YACV/hC,MAAMG,QAAQuiC,EAAMX,aACvBW,EAAMX,WAAWlhC,QAAQ,SAAAshC,YACVA,EAAMC,WACU,QAApBD,EAAMC,oBACED,EAAMT,OACbmgK,EAAWxsM,KAAKoL,OAAO0hC,EAAMT,MAAM1oC,MAAM,KAAK,OAM1DgH,MAAMG,QAAQuiC,EAAMhB,OAAQ,CAC5B,GAAI7uC,SAEJ,KAAKA,EAAI,EAAGA,EAAI6vC,EAAMhB,MAAMlsC,OAAQ3C,IACF,WAA1BopC,EAAOyG,EAAMhB,MAAM7uC,cACT6vC,EAAMhB,MAAM7uC,GAAGoC,IACtB4sM,EAAWtqM,QAAQmrC,EAAMhB,MAAM7uC,GAAGoC,KAAO,IAC5C6sM,EAAazsM,KAAKqtC,EAAMhB,MAAM7uC,UACvB6vC,GAAMhB,MAAM7uC,GAI3B,KAAKA,EAAI,EAAGA,EAAI6vC,EAAMhB,MAAMlsC,OAAQ3C,aACrB6vC,EAAMhB,MAAM7uC,IACnBivM,EAAazsM,KAAKqtC,EAAMhB,MAAM7uC,GAItC6vC,GAAMhB,MAAQogK,IAK1B,IAAMC,GAAS5kH,EAAU14C,MAAM3kB,EAG/B,OAAO,IAAIm+D,wBACPztE,KAAMgwB,EAAKhwB,KACXyyB,IAAK8+J,KAgsBwB78G,GAK7Bu3G,EAAA3hM,EAAejC,uBACfzD,EAAOyZ,MAAM,oDAGbq2E,EAAc1yF,KAAKwvM,wBAAwB98G,IAG/C1yF,KAAKo1B,eAAeonE,qBAChB9J,EACA,WACIra,EAAKhlC,MAAM,gCACX,IAAMw1J,GAAc6C,EAAApjM,EAAQooC,SAASgiD,EAAYjiD,IAE7Co4J,KAAgBxwH,EAAKwwH,cACrBxwH,EAAKwwH,YAAcA,EACnBxwH,EAAKzkD,aAAa+C,KACdmvJ,EAAAx9K,EAAUy/B,qBADdswC,EAC0CwwH,IAE9Cn1H,KAEJ,SAAAltD,GACI6xD,EAAKhlC,MAAM,gCAAiC7sB,GAC5C6xD,EAAKzkD,aAAa+C,KACdmvJ,EAAAx9K,EAAUo/B,8BACVlhB,EAFJ6xD,GAIAP,EAAgBtxD,MAgB5BgiL,EAAwB/mM,UAAU+tM,wBAA0B,SACpD98G,GACJ,GAAMs8G,GAAYpC,EAAAtkM,EAAUilB,MAAMmlE,EAAYjiD,KACxCzB,EAAaggK,EAAU5iK,MAAMsD,KAAK,SAAAjvC,GAAA,MAAgB,UAAXA,EAAEud,MAE/C,KAAKgxB,EAGD,MAFApsC,GAAOyZ,MAAM,gDAENq2E,CAGX,IAAI1jD,EAAWgC,IAAIsxB,KAAK,SAAAtxB,GAAA,MAAmC,SAA5BA,EAAIC,MAAMl2B,gBAGrC,MAFAnY,GAAOyZ,MAAM,uDAENq2E,CAOX,KAAK,GAJG9gD,GAAwB5C,EAAxB4C,KAAMR,EAAkBpC,EAAlBoC,SAAUJ,EAAQhC,EAARgC,IAClBy+J,EAAgBr+J,EAASvjC,WAAWrH,MAAM,KAC5CkpM,SAEKrvM,EAAI,IAAKA,GAAK,GAAIA,IACvB,IAAKovM,EAAcrrE,SAAS/jI,GAAI,CAC5BqvM,EAAmBrvM,EACnBovM,EAAc5sM,KAAKxC,GACnB2uC,EAAWoC,SAAWq+J,EAAchlM,KAAK,IACzC,OAIR,gBAAWilM,GACP9sM,EAAO0Z,MAAM,gDAENo2E,IAGX1hD,EAAInuC,MACAouC,MAAO,OACPC,QAASw+J,EACTv9F,KAAM,MAGVvgE,EAAK/uC,MACDmH,OAAQ,yEAGRknC,QAASw+J,IAGb9sM,EAAOyZ,MAAP,+BACmCqzL,EADnC,sBAGO,GAAIjkH,wBACPztE,KAAM00E,EAAY10E,KAClByyB,IAAKm8J,EAAAtkM,EAAU2pC,MAAM+8J,OAiB7BxG,EAAwB/mM,UAAUszK,uBAAyB,SAASxzE,GAChE3+F,EAAOyZ,MAASrc,KAAhB,2BAA+CuhG,EAC/C,IAAM8rG,GAAUrtM,KAAKixK,sBAAwB1vE,CAI7C,OAFAvhG,MAAKixK,oBAAsB1vE,EAEpB8rG,GAOX7E,EAAwB/mM,UAAUouK,qBAAuB,WACrD,GAAMl0F,GAAU+vH,EAAApjM,EAAQwnC,cAExBltC,GAAOsB,KAAQlE,KAAf,iCAAoD27E,GACpD37E,KAAK0pM,eAAegE,eAAe/xH,IAOvC6sH,EAAwB/mM,UAAUyxK,kBAAoB,WAClDtwK,EAAOsB,KAAK,gCACZlE,KAAK0pM,eAAeiG,uBAQxBnH,EAAwB/mM,UAAU6vB,MAAQ,WACtCtxB,KAAKqzC,MAAM,QAGXrzC,KAAK0sK,eAAerkI,IAChB0gK,EAAAzgM,EAAoCtI,KAAKgpM,mBAC7ChpM,KAAK0sK,eAAerkI,IAChB0gK,EAAA34L,EAAyCpQ,KAAK8oM,sBAPD,IAAAza,MAAAC,KAAAC,QAAA,KASjD,OAAAC,GAAAC,EAAyBzuL,KAAKirE,aAAah0C,SAA3CC,OAAAC,cAAAk3J,GAAAG,EAAAC,EAAAr3J,QAAAC,MAAAg3J,KAAqD,IAA1CuhB,GAA0CphB,EAAApjL,MAAAsjL,KAAAC,KAAAC,QAAA,KACjD,OAAAC,GAAAC,EAA0B8gB,EAAW34K,SAArCC,OAAAC,cAAAu3J,GAAAG,EAAAC,EAAA13J,QAAAC,MAAAq3J,KAA+C,IAApCrrG,GAAoCwrG,EAAAzjL,KAC3CpL,MAAKwsM,mBAAmBnpH,IAFqB,MAAA78D,GAAAmoK,KAAAC,EAAApoK,EAAA,aAAAkoK,GAAAI,EAAAr3J,QAAAq3J,EAAAr3J,SAAA,WAAAk3J,EAAA,KAAAC,MATJ,MAAApoK,GAAA8nK,KAAAC,EAAA/nK,EAAA,aAAA6nK,GAAAI,EAAAh3J,QAAAg3J,EAAAh3J,SAAA,WAAA62J,EAAA,KAAAC,IAcjDvuL,KAAKirE,aAAa8kD,QAElB/vH,KAAK0oM,iBAEA1oM,KAAK0gF,IAAImvH,sBAAsB7vM,OAChC4C,EAAO0Z,MAAM,4CAEU,OAAvBtc,KAAKkpM,gBACLrkM,OAAOoiF,cAAcjnF,KAAKkpM,eAC1BlpM,KAAKkpM,cAAgB,MAEzBtmM,EAAOsB,KAAP,WAAuBlE,KAAvB,OACAA,KAAKo1B,eAAe9D,SA8DxBk3K,EAAwB/mM,UAAUi8F,aAAe,SACzChqB,EACAoE,EACAz7C,GACJ,GAAI4tK,EAAA3hM,EAAeL,qBAAuBjI,KAAK2/J,gBAAiB,CAC5D,GAGMmwC,IACFp0G,YAEQz4E,IAh9DI,IAi9DJ8sL,sBAAuB,IAGvB9sL,IAn9DI,IAo9DJ8sL,sBAAuB,IAGvB9sL,IAt9DI,MAy8DVjjB,MAAKo1B,eAAe+kE,aAAazqD,KAAK,SAAA8wB,GAAA,MACd,UAAtBA,EAAOiK,MAAMsC,OAiBTijI,cAAcF,GAE9B9vM,KAAKiwM,wBACmBv8H,EAAiBoE,EAAiBz7C,IAG9DmsK,EAAwB/mM,UAAU07F,YAAc,SACxCzpB,EACAoE,EACAz7C,GACJr8B,KAAKiwM,wBACiBv8H,EAAiBoE,EAAiBz7C,IAK5DmsK,EAAwB/mM,UAAUwuM,qBAAuB,SACjDC,EACAx8H,EACAoE,EACAz7C,GAAa,GAAAmnF,GAAAxjH,KACXqrH,EAAU6kF,EAAU,QAAU,QAEpClwM,MAAKqzC,MAAL,SAAoBg4E,EAAW9nG,KAAKkK,UAAU4O,EAAa,KAAM,KAEjE,IAAM8zK,GAAmB,SAAAC,GACrB,IA4EI,GA3EA5sF,EAAKnwE,MAAL,SACag4E,EADb,0BAC+Ck/E,EAAQ6F,IAGnDnG,EAAA3hM,EAAeX,oBAEfyoM,EAAY5sF,EAAK6lF,QAAQ0D,QAAQqD,GACjC5sF,EAAKnwE,MAAL,SACag4E,EADb,oCAEIk/E,EAAQ6F,IACR5sF,EAAKm8C,kBAELywC,EACM5sF,EAAKmpF,oCAAoCyD,GAC/C5sF,EAAKnwE,MACD,SAASg4E,EAAT,8CACyBk/E,EAAQ6F,MAYxCnG,EAAA3hM,EAAenC,cAGXq9G,EAAKknF,mBAAmB93E,EAAAxiH,IACrBozG,EAAKkmF,eAAe2G,wBACxB7sF,EAAKqsD,uBAITugC,EAAY,GAAI3kH,wBACZztE,KAAMoyL,EAAUpyL,KAChByyB,IAAK+yE,EAAKkmF,eAAe4G,gCACrBF,EAAU3/J,OAGlB+yE,EAAKnwE,MACD,SAASg4E,EAAT,uEAEAk/E,EAAQ6F,KAIZ5sF,EAAKm8C,kBAGLywC,EAAY5sF,EAAKw6C,UAAUuyC,sBAAsBH,GACjD5sF,EAAKnwE,MACD,SAASg4E,EACH,uCACNk/E,EAAQ6F,MAGX5sF,EAAKvlG,QAAQ4nF,YAAcokG,EAAA3hM,EAAeN,gBAE3CooM,EAAY,GAAI3kH,wBACZztE,KAAMoyL,EAAUpyL,KAChByyB,IAAK+yE,EAAKsmF,YAAY0G,eAAeJ,EAAU3/J,OAGnD+yE,EAAKnwE,MACD,SAASg4E,EACF,0CACPk/E,EAAQ6F,MAKXF,EAAS,CACV,GAAMl3G,GACA,GAAIwyG,GAAAljM,EAAIk7G,EAAKxqB,kBAAkBvoD,KAC/BsoD,EAAmB,GAAIyyG,GAAAljM,EAAI8nM,EAAU3/J,IAjLnBuiI,GAmLDh6E,EAnLQ2sB,EAmLW5sB,EAlLjDkxG,EAAA3hM,EAAe7B,YA+BhBusK,GAASrtD,GACFqtD,EAAM5mI,OAASu5E,EAAOv5E,OACtB4mI,EAAM5mI,MAAMppC,SAAW2iH,EAAOv5E,MAAMppC,SAC3C2iH,EAAOv5E,MAAM/9B,QAAQ,SAAC/F,EAAGjI,GACjBqrM,EAAApjM,EAAQsjC,SACJonI,EAAM5mI,MAAM/rC,GACZ,kBACA2yK,EAAM1lJ,WACVq4F,EAAOv5E,MAAM/rC,GACPiI,EAAE8B,QAAQ,kBAAmB,sBAG3Cu7G,EAAOj/F,IAAMi/F,EAAOr4F,QAAUq4F,EAAOv5E,MAAM3hC,KAAK,KA0IxC2lM,EAAY,GAAI3kH,wBACZztE,KAAMoyL,EAAUpyL,KAChByyB,IAAKsoD,EAAiBryE,MAI9B,GAAMgoF,GA1tClB,SAAwB1gE,GAKpB,GAAM0gE,GAAU,GAAI/6E,KAMd88K,EAAY,GAAI98K,IAEtB,IAAoB,qBAATqa,EAAP,YAAAvE,EAAOuE,KAA8B,OAATA,GACL,gBAAbA,GAAKyC,IAGf,MAFA7tC,GAAOwF,KAAK,mDAELsmG,CAGX,IAAMphF,GAAUs/K,EAAAtkM,EAAUilB,MAAMygB,EAAKyC,IAErC,KAAKjjC,MAAMG,QAAQ2f,EAAQ8e,OACvB,MAAOsiE,EAvBe,IAAA48E,MAAAC,KAAAC,QAAA,KA0B1B,OAAAC,GAAAC,EAAoBp+J,EAAQ8e,MAA5BlV,OAAAC,cAAAm0J,GAAAG,EAAAC,EAAAt0J,QAAAC,MAAAi0J,KAAmC,IAAxBp7I,GAAwBu7I,EAAArgL,KAC/B,IAAKoC,MAAMG,QAAQuiC,EAAMhB,OAAzB,CAIA,GAAI1hC,MAAMG,QAAQuiC,EAAMX,YAAa,IAAAo8I,MAAAC,KAAAC,QAAA,KACjC,OAAAC,GAAAC,EAAoB77I,EAAMX,WAA1BrY,OAAAC,cAAAw0J,GAAAG,EAAAC,EAAA30J,QAAAC,MAAAs0J,KAAsC,IAA3Bh8I,GAA2Bm8I,EAAA1gL,KAClC,aAAWukC,EAAMC,oBACHD,EAAMT,MAAuB,CAEvC,GAAMwhK,GACA/gK,EAAMT,MAAM1oC,MAAM,KAAKuD,IACrB,SAAAwmC,GAAA,MAAW1sC,UAAS0sC,EAAS,MAC/ByqC,EAAc01H,EAAW,EAI/B/gK,GAAMT,MAAQwhK,EAGTD,EAAUj4K,IAAIwiD,IACfy1H,EAAUj7K,IAAIwlD,MAElBy1H,EAAUtvM,IAAI65E,GAAan4E,KAAK8sC,KAlBP,MAAAnpB,GAAAolK,KAAAC,EAAArlK,EAAA,aAAAmlK,GAAAI,EAAAt0J,QAAAs0J,EAAAt0J,SAAA,WAAAm0J,EAAA,KAAAC,KALN,GAAAuB,MAAAC,KAAAC,QAAA,KA2B/B,OAAAC,GAAAC,EAAmBt9I,EAAMhB,MAAzBhY,OAAAC,cAAAi2J,GAAAG,EAAAC,EAAAp2J,QAAAC,MAAA+1J,KAAgC,IAArB5yJ,GAAqB+yJ,EAAAniL,KAC5B,IAAuB,SAAnBovB,EAAKlkB,UAAT,CAIA,GAAM2kE,GAAOzgD,EAAKpvB,MACd+jC,EAAWu/D,EAAQvtG,IAAI85E,EAEtB9rC,KACDA,GACID,SACA4gE,UACA70B,QAEJyzB,EAAQl5E,IAAIylD,EAAM9rC,GAGtB,IAAMyrC,GAAapgD,EAAK/3B,EAIxB,IAFA0sC,EAASD,MAAMrsC,KAAK+3E,GAEhB61H,EAAUj4K,IAAIoiD,GAAa,CAC3B,GAAMrrC,GAAakhK,EAAUtvM,IAAIy5E,GADNkzG,KAAAC,KAAAC,QAAA,KAG3B,OAAAC,GAAAC,EAAoB3+I,EAApBrY,OAAAC,cAAA22J,GAAAG,EAAAC,EAAA92J,QAAAC,MAAAy2J,KAAgC,IAArBn+I,GAAqBs+I,EAAA7iL,KAC5B+jC,GAAS2gE,OAAOjtG,KAAK8sC,IAJE,MAAAnpB,GAAAunK,KAAAC,EAAAxnK,EAAA,aAAAsnK,GAAAI,EAAAz2J,QAAAy2J,EAAAz2J,SAAA,WAAAs2J,EAAA,KAAAC,QAhDJ,MAAAxnK,GAAA6mK,KAAAC,EAAA9mK,EAAA,aAAA4mK,GAAAI,EAAA/1J,QAAA+1J,EAAA/1J,SAAA,WAAA41J,EAAA,KAAAC,OA1BT,MAAA9mK,GAAA+kK,KAAAC,EAAAhlK,EAAA,aAAA8kK,GAAAI,EAAAj0J,QAAAi0J,EAAAj0J,SAAA,WAAA8zJ,EAAA,KAAAC,IAoF1B,MAAO98E,IAsoCgC0hG,EAE/BxtM,GAAOyZ,MAAM,wBAAyBqyF,GACtC8U,EAAKmtF,sBAAsBjiG,GAE3Bh7B,EAAgB08H,GAClB,MAAOnwM,GACLujH,EAAKnwE,MAAL,SAAoBg4E,EAApB,UAAsCprH,GACtCujH,EAAKnwE,MAAL,SAAoBg4E,EAApB,UAAsCk/E,EAAQ6F,IAC9CxtM,EAAO0Z,MAAP,SAAsB+uG,EAAtB,UAAwCprH,EAAGsqM,EAAQ6F,IACnDt4H,EAAgB73E,GAtMG,GAAS+yK,GAAOrtD,GA0MrCirF,EAAiB,SAAApqL,GACnBg9F,EAAKnwE,MAAL,SAAoBg4E,EAApB,YAAwC7kG,EACxC,IAAMmnD,GACAuiI,EACIpqB,EAAAx9K,EAAUw+B,oBACVg/I,EAAAx9K,EAAUu+B,oBAEpB28E,GAAK5vF,aAAa+C,KAAKg3C,EAAWnnD,EAAlCg9F,GACA1rC,EAAgBtxD,GAIhB0pL,GACAlwM,KAAKo1B,eAAe+nE,YAChBgzG,EAAkBS,EAAgBv0K,GAEtCr8B,KAAKo1B,eAAesoE,aAChByyG,EAAkBS,EAAgBv0K,IA4B9CmsK,EAAwB/mM,UAAUkvM,sBAAwB,SAASjiG,GAAS,GAAAugF,MAAAC,KAAAC,QAAA,KACxE,OAAAC,GAAAC,EAAoBrvL,KAAK2nE,YAAY1wC,SAArCC,OAAAC,cAAA83J,GAAAG,EAAAC,EAAAj4J,QAAAC,MAAA43J,KAA+C,IAApCxkH,GAAoC2kH,EAAAhkL,MACrCylM,EAAYpmI,EAAMi8G,SAExB,IAAIh4E,EAAQl2E,IAAIq4K,GAAY,CACxB,GAAMl1H,GAAU+yB,EAAQvtG,IAAI0vM,EAE5B,KAAKl1H,EAGD,WAFA/4E,GAAO0Z,MAAP,sBAAmCu0L,EAAnC,OAAmD7wM,KAIvD,IAAM07E,GAAU17E,KAAK2oM,WAAWxnM,IAAIspE,EAAMuC,OACpC8jI,EAAazG,EAAmB1uH,GAChCo1H,EAAa1G,EAAmB3uH,EAGlCo1H,KAAeC,GACI,OAAfA,EACAnuM,EAAOsB,KAAP,8BACkCumE,EADlC,OAC8CzqE,KAC1C27E,GAEJ/4E,EAAO0Z,MAAP,wBAC4BmuD,EAD5B,IACqComI,EADrC,OACqD7wM,KADrD,UAEe27E,GAEnB37E,KAAK2oM,WAAWnzK,IAAIi1C,EAAMuC,MAAO2O,GAEjC37E,KAAK4zB,aAAa+C,KACdmvJ,EAAAx9K,EAAU6+B,yBAA0BsjC,EAAOqmI,IAE/CluM,EAAOyZ,MACH,kBAAkBy0L,EAAlB,SAAqCrmI,EAArC,IAA8ComI,EAA9C,0BAC6B7wM,UAGrC4C,GAAOwF,KAAP,gCAA4CyoM,EAA5C,OAA4D7wM,OArCI,MAAAwmB,GAAA0oK,KAAAC,EAAA3oK,EAAA,aAAAyoK,GAAAI,EAAA53J,QAAA43J,EAAA53J,SAAA,WAAAy3J,EAAA,KAAAC,MA0C5EqZ,EAAwB/mM,UAAUy1F,gBAAkB,SAC5C9pD,EACAsmC,EACAoE,GAEJ93E,KAAKqzC,MAAM,kBAAmB9vB,KAAKkK,UAAU2f,EAAW,KAAM,MAC9DptC,KAAKo1B,eAAe8hE,gBAChB9pD,EAAWsmC,EAAiBoE,IAyBpC0wH,EAAwB/mM,UAAU20F,SAAW,SAAS3pF,EAAU6X,GAKxD2lL,EAAA3hM,EAAenC,aACR8jM,EAAA3hM,EAAepB,uBACf+iM,EAAA3hM,EAAerB,gBACtBjH,KAAKo1B,eAAeghE,SAChB,KACA3pF,EACA6X,GAAY,cAKT2lL,EAAA3hM,EAAejC,sBAKtBrG,KAAKo1B,eAAeghE,SAAS3pF,IAWrC+7L,EAAwB/mM,UAAUgsM,0BAA4B,SAAShjI,GACnE,GAAMuC,GAAQvC,EAAMuC,MAChB79B,EAAWnvC,KAAK0sM,SAAS1/H,EAK7B,IAHI79B,GACAvsC,EAAO0Z,MAAP,4CAAyD0wD,GAEzDhtE,KAAK2/J,gBAAiB,CACtBxwH,GACID,SACA4gE,UAEJ,KAAK,GAAIzvG,GAAI,EAAGA,EAAImpM,EAAkBnpM,IAClC8uC,EAASD,MAAMrsC,KAAK6oM,EAAApjM,EAAQwnC,eAEhCX,GAAS2gE,OAAOjtG,MACZqsC,MAAOC,EAASD,MAAM5kC,QACtBslC,UAAW,YAGfT,IACID,OAASw8J,EAAApjM,EAAQwnC,gBACjBggE,UAGR,KAAK9vG,KAAKie,QAAQ4nF,YAAcokG,EAAA3hM,EAAeN,cAO3C,IAAK,GAFCgpM,GAAe7hK,EAASD,MAAMlsC,OAE3B3C,EAAI,EAAGA,EAAI2wM,IAAgB3wM,EAAG,CACnC,GAAMmvC,GAAcL,EAASD,MAAM7uC,GAC7B8rL,EAAUuf,EAAApjM,EAAQwnC,cAExBX,GAASD,MAAMrsC,KAAKspL,GACpBh9I,EAAS2gE,OAAOjtG,MACZqsC,OAASM,EAAa28I,GACtBv8I,UAAW,QAOvB,MAHAT,GAAS8rC,KAAOxQ,EAAMg8G,WACtBzmL,KAAK2oM,WAAWnzK,IAAIw3C,EAAO79B,GAEpBA,GAQXq5J,EAAwB/mM,UAAUoM,SAAW,WACzC,aAAc7N,KAAKyC,GAAnB,QAA6BzC,KAAK+pE,MAAlC,OAAAvpE,KAAAqB,EAAA,oDAAA5B,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAA,GAAAsI,GAAAnH,EAAA,GAAAf,EAAAe,EAAA,IAAAN,EAAAM,EAAA,IAAAkH,EAAAlH,EAAA,GAAAQ,EAAAR,EAAA,GAAAV,EAAA,mBAAAT,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MC/zEEe,EAAS1C,EAAQ,GAAqBsC,UAAUyD,GAChDgrM,EAAY/wM,EAAQ,GAEtBgxM,KACAC,KAOiBC,cAmBjB,QAAAA,GACQ1wH,EACAlZ,EACAokI,EACAj2K,EACA80C,EACAK,EACA4B,EACAlyC,EACAF,EACAyvC,iGAAO/pE,KAAAoxM,EAAA,IAAAr7J,qKAAA/1C,MAAAoxM,EAAAp7J,WAAAj1C,OAAAk1C,eAAAm7J,IAAA5wM,KAAAR,KAEPwnE,EACA7xC,EACA80C,EACA,aAGAK,EACA4B,GAIJ,IAHA32B,EAAK2qC,IAAMA,EAGS,gBAATlmD,GACP,KAAM,IAAI/rB,WAAJ,QAAsB+rB,EAAtB,mBAdC,OAgBXub,GAAKvb,KAAOA,EACZub,EAAK61J,gBAAkBA,EACvB71J,EAAKzb,MAAQA,EACbyb,EAAKg0B,MAAQA,EAKbh0B,EAAKs7J,aAAe/2K,EAGhByb,EAAK2qC,KAAO3qC,EAAK00B,OACjB10B,EAAKu7J,oBA5BEv7J,QA7BEq7J,6TAAyBprB,EAAA,GA6B3BjwI,+CAsCK,GAAA6yB,GAAA5oE,IAWZA,MAAKyqE,MAAMviC,kBACXloC,KAAKyqE,MAAMviC,iBAAiB,OAAQ,iBAAM0gC,GAAK2oI,iBAC/CvxM,KAAKyqE,MAAMviC,iBAAiB,SAAU,iBAAM0gC,GAAK4oI,oBAC1CxxM,KAAKyqE,MAAMue,cAElBhpF,KAAKyqE,MAAMue,YAAY,SAAU,iBAAMpgB,GAAK2oI,iBAC5CvxM,KAAKyqE,MAAMue,YAAY,WAAY,iBAAMpgB,GAAK4oI,2DAYlD5uM,EAAOyZ,MAAP,kBACsB4C,KAAK4K,MAD3B,MAEI7pB,KAAKujF,mBAAoBvjF,KAAKgrE,UAAWhrE,KAAKqqH,WAElDrqH,KAAK0gF,IAAI9sD,aAAa+C,KAAKs6K,EAAU3pK,kBAAmBtnC,+CAWxD4C,EAAOyZ,MAAP,oBACwB4C,KAAK4K,MAD7B,MAEI7pB,KAAKujF,mBAAoBvjF,KAAKgrE,UAAWhrE,KAAKqqH,WAElDrqH,KAAK0gF,IAAI9sD,aAAa+C,KAAKs6K,EAAUzpK,oBAAqBxnC,sCAOtDoL,GACApL,KAAKs6B,QAAUlvB,IAIfA,IACApL,KAAKqxM,iBAILrxM,KAAK21B,SACL31B,KAAK21B,OAAO2E,MAAQlvB,GAGxBpL,KAAKs6B,MAAQlvB,EACbpL,KAAK22B,KAAK6sD,EAAA9iD,mBAAqC1gC,yCAS/C,MAAOA,MAAKs6B,iDAUZ,MAAOt6B,MAAK4rM,kDAOZ,YAAOn7L,IAAA,UAAArF,MAAA,WAUP,MAAOpL,MAAKw6B,2CAQFxc,GACNhe,KAAK0sE,YAAc1uD,IAGvBhe,KAAK0sE,UAAY1uD,EACjBhe,KAAK22B,KAAK6sD,EAAAzvC,wBAA0C/1B,4CAOpD,GAAMA,GAAOhe,KAAK6xG,eAAiB,QAAU,QAEvChoF,EAAMhlB,OAAOwwC,YAAYxrB,KAE/B/jB,SAAQhC,IAAR,iBAA6Bka,EAA7B,MAAwC6L,GACxC7pB,KAAKwnE,WAAW8yC,qBAAwBt8F,EAAxC,WAAyD6L,CAKzD,IAAM4nL,GAAW5sM,OAAOqgG,gBAAgB,2BAClCwsG,EAAS7sM,OAAOqgG,gBAAgB,yBAChCysG,EACCniM,MAAMkiM,IAAYliM,MAAMiiM,GAAgC,EAApBC,EAASD,EAE9CG,EAAO/nL,GACN7pB,KAAKwnE,WAAW8yC,qBAAqB,oBACtCt6G,KAAKwnE,WAAW8yC,qBAAqB,eACrCq3F,CAEN3xM,MAAKwnE,WAAW8yC,qBAAwBt8F,EAAxC,SAAuD4zL,EACvD9rM,QAAQhC,IAAR,eAA2Bka,EAA3B,MAAsC4zL,EACtC,IAAIvzK,GAAergB,EAAf,IAAuBi1D,EAAA0qD,CAEvB39H,MAAKqxM,eACLhzK,GAAa,UAEjBwzK,EAAAvpM,EAAW0sB,UAAUmF,UAAUkE,GAAajzB,MAAOwmM,+CAWpCvgG,GACV6/F,GAA4BlxM,KAAK8rE,gBAC9BqlI,GAA4BnxM,KAAK6xG,iBAIrC7xG,KAAK8rE,iBACLolI,MAEAlxM,KAAK6xG,iBACLs/F,MAGAW,EAAAxpM,EAAepB,sBAGGhH,EAAQ,IAGhB4oF,SACNuoB,EACA,OACArxG,KAAK+xM,cAAc1kM,KAAKrN,OAE5BqxG,EAAUnpE,iBACN,UACAloC,KAAK+xM,cAAc1kM,KAAKrN,2CAShC,qBACIA,KAAK4rM,gBADT,KAEI5rM,KAAKgrE,UAFT,UAGIhrE,KAAK+pE,MAHT,QAAAloE,OAAAyG,EAAAoV,IAAAld,KAAAqB,EAAA,6CAAA5B,EAAA4B,EAAAT,GAAA,uBAAAnB,GAAA,GAAAsI,GAAAnH,EAAA,GAAAf,GAAAe,IAAAmH,GAAAnH,EAAA,IAAAN,EAAAM,EAAA,IAAAkH,EAAA,mBAAArI,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MCrRFe,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAUJ+rM,aAOjB,QAAAA,GAAYx6K,iGAAKx3B,KAAAgyM,GACbhyM,KAAKw3B,IAAMA,mEAkBgBy1K,GAE3B,GAAMgF,GAAcjyM,KAAKw3B,IAAImzC,eAAe6zG,EAAApuK,EAE5C,KAAK6hM,EAAYjvM,OACb,QAC8B,KAAvBivM,EAAYjvM,QACnBJ,EAAO0Z,MACAtc,KAAKw3B,IAAR,kEACqCy6K,EAG7C,IAAMjjK,GAAai+J,EAAYG,YAAY,QAE3C,KAAKp+J,EAKD,MAJApsC,GAAOyZ,MACArc,KAAKw3B,IAAR,6DAMR,IAAIomJ,MAtBoChnJ,KAAAC,KAAAC,QAAA,KAwBxC,OAAAC,GAAAC,EAAyBi7K,EAAzB/6K,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAsC,IAA3B+zK,GAA2B5zK,EAAA3rB,MAC5BkvB,EAAQqwK,EAAW7lH,UACnBlW,EAAc+7H,EAAW91F,oBAKzBq9F,EACAtjI,GAAe5uE,KAAKw3B,IAAI02K,kBAAkBt/H,GAC1CujI,EAAgB73K,IAAU43K,CAQhC,IANAtvM,EAAOyZ,MACArc,KAAKw3B,IADZ,IACmBmzK,EADnB,WAEQrwK,EAFR,2BAGQ43K,EAHR,2BAIQC,GAEHA,EAAL,CAKA,GAAMC,GACApyM,KAAKw3B,IAAImoI,gBACL3/J,KAAKw3B,IAAIwmI,UAAUq0C,WACjBryM,KAAKw3B,IAAIkyK,eAAe4I,kBAEpC,IAAKF,EAAcpvM,OAAnB,CAOA46K,KAMA5uI,EAAWV,UAAY,UAGvB,IAMMikK,eANcH,EAAc,GA3CA16K,KAAAC,KAAAC,QAAA,KAmDlC,OAAAC,GAAAC,EAAsBs6K,EAAtBl7K,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAqC,IAA1BqjD,GAA0BljD,EAAAzsB,KAEjC4jC,GAAWwjK,WAAWz3H,GAGtBn4E,EAAOyZ,MACArc,KAAKw3B,IADZ,0BACyCujD,EADzC,QAEQ4vH,GACR37J,EAAWyjK,kBACPhwM,GAAIs4E,EACJzkE,UAAW,QACXlL,MAAOmnM,IAEXvjK,EAAWyjK,kBACPhwM,GAAIs4E,EACJzkE,UAAW,OACXlL,MAAOu/L,EAAWlkB,cAnEQ,MAAAjgK,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAsElC,GAAIw6K,EAAcpvM,OAAS,EAAG,CAC1B,GAAM2sC,IACFT,MAAOkjK,EAAc3nM,KAAK,KAC1BmlC,UAAW,MAGVZ,GAAWksC,UAAUvrC,EAAMC,UAAWD,EAAMT,SAE7CtsC,EAAOyZ,MACArc,KAAKw3B,IADZ,4BAC2CmzK,EACvCh7J,GACJX,EAAW0jK,aAAa/iK,IAQ3B3vC,KAAKw3B,IAAIvZ,QAAQ4nF,YAClB7lG,KAAKw3B,IAAIsyK,YAAY6I,gBAAgB3jK,OA9DrCpsC,GAAO0Z,MAAP,wBAC4BquL,EAD5B,OAC6C3qM,KAAKw3B,OArDlB,MAAAhR,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IAsHxC,MAAO8mJ,8DAWwB5vI,GAC/B,IAAKA,EACD,KAAM,IAAItiC,OAAM,kCAGpB,IAAMuhM,GAAc,GAAI2F,GAAAtqM,EAAiB0lC,EAAKyC,IAE9C,OAAIzwC,MAAK6yM,+BAA+B5F,GAC7B,GAAIxhH,wBACPztE,KAAMgwB,EAAKhwB,KACXyyB,IAAKw8J,EAAYM,aAIlBv/J,sGCpKf,QAAS8kK,GAA0B5iK,EAAO6iK,EAAiB5mB,GACvDvpL,EAAOyZ,MACH,+BAA+B8vK,EAA/B,iCACmC4mB,EAAgBtwM,GACvD,IAAM+sC,GAAcujK,EAAgBtwM,GAC9BuwM,EAAkBD,EAAgB93H,KAClCg4H,EAAmBF,EAAgBp3G,MAEnCu3G,EAAkBhjK,EAAMijK,WAAW3jK,EAErC0jK,KAAoB/mB,GAKpB+mB,IACAtwM,EAAOyZ,MACAmzB,EAAH,sCACK0jK,EADL,mCAKJhjK,EAAMsiK,WAAWU,GAEjBtwM,EAAOyZ,MAAP,+BAA4C62L,GAC5CtwM,EAAOyZ,MAAM6zB,EAAMkjK,kBAEnBljK,EAAMmjK,qBAAqBH,IAE/BhjK,EAAMuiK,kBACFhwM,GAAI0pL,EACJ71K,UAAW,QACXlL,MAAO6nM,IAEX/iK,EAAMuiK,kBACFhwM,GAAI0pL,EACJ71K,UAAW,OACXlL,MAAO4nM,IAEX9iK,EAAMwiK,cACF9iK,UAAW,MACXV,MAAUM,EAAV,IAAyB28I,KA9BzBvpL,EAAOyZ,MAAS8vK,EAAhB,gCAAuD38I,GDyJhDxB,yRCnLTprC,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAoEJqtM,aAIjB,QAAAA,mGAActzM,KAAAszM,GAKVtzM,KAAKuzM,sBAAwB,GAAI5/K,wDASjC3zB,KAAKuzM,sBAAsBxjF,6CASlByjF,GACT5wM,EAAOyZ,MAAM,yBAA0Bm3L,GACvCxzM,KAAKuzM,sBAAwBC,yCAUlBnF,GACX,GAAMoF,GAAiB,GAAIC,GAAAprM,EAAiB+lM,GACtCr/J,EAAaykK,EAAerG,YAAY,QAE9C,OAAKp+J,GAMEhvC,KAAK2yM,gBAAgB3jK,GACtBykK,EAAelG,WAAac,GAN9BzrM,EAAOyZ,MAAP,sCAAmDgyL,GAE5CA,2CAcCr/J,GACZ,GAA6B,aAAzBA,EAAWV,UAGX,MAFA1rC,GAAOyZ,MAAM,yDAIjB,IAAI2yB,EAAW2kK,eAAiB,EAG5B,MAFA/wM,GAAOyZ,MAAM,uDAIjBzZ,GAAOyZ,MAAM,yBAA0Brc,KAAKuzM,sBAC5C,IAAMK,GAAoB5kK,EAAW6kK,sBAErCjxM,GAAOyZ,MAAM,8BAA+Bu3L,EACxC,oCAfoB,IAAAh9K,MAAAC,KAAAC,QAAA,KAgBxB,OAAAC,GAAAC,EAAmB48K,EAAnB18K,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAAsC,IAA3B4D,GAA2BzD,EAAA3rB,MAC5B6vE,EAAOjsC,EAAW8kK,iBAAiBt5K,EAAM,QACzCmhE,EAAQ3sD,EAAW8kK,iBAAiBt5K,EAAM,SAC5Cu5K,EAAuB/zM,KAAKuzM,sBAAsBpyM,IAAIq5B,EAE1D,IAAIu5K,EACAnxM,EAAOyZ,MACH,qDACgBme,EADhB,KACyBu5K,OAC1B,CACHnxM,EAAOyZ,MAAP,oDACwDme,EAIxD,IAAMw5K,GAA8BhlK,EAAWmkK,WAAW34K,EAEtDw5K,IACApxM,EAAOyZ,MACH,cAAc23L,EAAd,oDAEKx5K,GACTu5K,EAAuBC,IAEvBD,EAAuBE,EAAA3rM,EAAQwnC,eAC/BltC,EAAOyZ,MAAM,sBAAsB03L,EAAtB,aACcv5K,IAE/B53B,EAAOyZ,MAAM,oBAAoB03L,EAApB,mBACoBv5K,GACjCx6B,KAAKuzM,sBAAsB/9K,IAAIgF,EAAMu5K,GAEzCjB,EACI9jK,GAEIvsC,GAAI+3B,EACJmhE,QACA1gB,QAEJ84H,IAvDgB,MAAAvtL,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,IA4DxB,YAAOrmB,IAAA,WAAArF,MAAA,SAQFijM,GACL,GAAMoF,GAAiB,GAAIC,GAAAprM,EAAiB+lM,GACtCr/J,EAAaykK,EAAerG,YAAY,QAE9C,KAAKp+J,EAGD,MAFApsC,GAAOyZ,MAAP,sCAAmDgyL,GAE5CA,CAEX,IAA6B,aAAzBr/J,EAAWV,UAGX,MAFA1rC,GAAOyZ,MAAM,uDAENgyL,CAEX,IAAIr/J,EAAW2kK,eAAiB,EAG5B,MAFA/wM,GAAOyZ,MAAM,qDAENgyL,CAEX,KAAKr/J,EAAWklK,wBAIZ,MAHAtxM,GAAOyZ,MAAM,0DAGNgyL,CAEX,IAAMT,GAAY5+J,EAAWmlK,WAAW,MAIxCnlK,GAAWolK,wBAAwB,MA7BtB,IAAA18K,MAAAC,KAAAC,QAAA,KAgCb,OAAAC,GAAAC,EAAuB81K,EAAvB12K,OAAAC,cAAAO,GAAAG,EAAAC,EAAAV,QAAAC,MAAAK,KAAkC,IAAvB+X,GAAuB5X,EAAAzsB,MACxB+gL,EAAUprL,OAAA2yM,EAAAhzM,GAAmB+uC,EAEnCT,GAAWwjK,WAAWrmB,IAnCb,MAAA3lK,GAAAmR,KAAAC,EAAApR,EAAA,aAAAkR,GAAAI,EAAAL,QAAAK,EAAAL,SAAA,WAAAE,EAAA,KAAAC,IAsCb,MAAO67K,GAAelG,8XCvOxB3qM,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GASJouM,aAOjB,QAAAA,GAAYpiC,iGAAWjyK,KAAAq0M,GACnBr0M,KAAK2vM,sBACL3vM,KAAKiyK,UAAYA,0DASjBjyK,KAAKsyM,kBAAoB,KACzBtyM,KAAKs0M,qBAAiB7jM,IAAA,iBAAArF,MAAA,SAUXokC,GACX,GAA2B,gBAAhBA,GACP,KAAM,IAAI9jC,OAAM,iCAEpB1L,MAAKsyM,kBAAoB9iK,iDAQzB,MAAOsqC,SAAQ95E,KAAKsyM,2EAcQjE,GAC5B,GAAMoF,GAAiB,GAAIC,GAAAprM,EAAiB+lM,GACtCr/J,EAAaykK,EAAerG,YAAY,QAE9C,KAAKp+J,EAKD,MAJApsC,GAAOyZ,MACArc,KAAKiyK,UAAR,uCACSo8B,GAENA,CAGX,IAA6B,aAAzBr/J,EAAWV,UAGPtuC,KAAKsyM,mBAAqBtyM,KAAKs0M,eAC/BtlK,EAAWyjK,kBACPhwM,GAAIzC,KAAKsyM,kBACTh8L,UAAW,QACXlL,kBAAmBpL,KAAKsyM,oBAG5B1vM,EAAOsB,KACAlE,KAAKiyK,UAAR,oDAGL,CACH,GAAMsiC,GAAiBvlK,EAAWwlK,qBAElC,KAAKD,EAKD,MAJA3xM,GAAOsB,KACAlE,KAAKiyK,UAAR,oDAGGo8B,CAEX,IAAIruM,KAAKsyM,kBAAmB,CACxB1vM,EAAOsB,KACAlE,KAAKiyK,UAAR,sCACSsiC,EADT,gBAESv0M,KAAKsyM,mBAClBtjK,EAAWylK,YAAYF,EAAgBv0M,KAAKsyM,kBALpB,IAAA17K,MAAAC,KAAAC,QAAA,KAMxB,OAAAC,GAAAC,EAAoBgY,EAAWO,WAA/BrY,OAAAC,cAAAP,GAAAG,EAAAC,EAAAI,QAAAC,MAAAT,KAA2C,IAAhC+Y,GAAgC5Y,EAAA3rB,KACvC,IAAwB,QAApBukC,EAAMC,UAAqB,CAC3B,GAAMJ,GAAczuC,OAAA2yM,EAAAtjM,GAAiBu/B,GAC/Bw8I,EAAUprL,OAAA2yM,EAAAhzM,GAAmBivC,EAG/BH,KAAgB+kK,IAChB5kK,EAAMT,MACGlvC,KAAKsyM,kBADd,IACmCnmB,KAdvB,MAAA3lK,GAAAqQ,KAAAC,EAAAtQ,EAAA,aAAAoQ,GAAAI,EAAAS,QAAAT,EAAAS,SAAA,WAAAZ,EAAA,KAAAC,SAmBxB92B,MAAKsyM,kBAAoBiC,EACzB3xM,EAAOsB,KACAlE,KAAKiyK,UAAR,wCACSjyK,KAAKsyM,kBAGtBtyM,MAAKs0M,kBAGT,MAAOb,GAAelG,sFC1H9B7tM,EAAA0pM,QAAAlpM,EAAA,eAAAD,EAAA4B,EAAAT,GAAA,YCQA,SAAAgoM,KASAppM,KAAA00M,OACAC,YACAC,aAdA,GAAAjqH,GAAAzqF,EAAA,KACAy8K,EAAAz8K,EAAA,IAiBAP,GAAAD,QAAA0pM,EAKAA,EAAA3nM,UAAAozM,uBAAA,SAAAznK,GACA,GAAAS,GAAA,GAAA69C,iBAAAt+C,EAKA,OAHAS,GAAA0hD,cAAAvvF,KAAA00M,MAAAC,SAAA9mK,EAAA0hD,eAGA1hD,GAMAu7J,EAAA3nM,UAAAqzM,iBAAA,SAAA1nK,GACA,GAAAS,GAAA,GAAA69C,iBAAAt+C,EAEA,QAAAS,EAAAwhD,OAAAtqF,QAAA,SACA8oC,EAAAwhD,OAAA,YACK,QAAAxhD,EAAAwhD,OAAAtqF,QAAA,SAGL,SAAA2G,OAAA,kBAAAmiC,EAAAwhD,OAAA,eAFAxhD,GAAAwhD,OAAA,QAOA,MAFAxhD,GAAA0hD,cAAAvvF,KAAA00M,MAAAE,SAAA/mK,EAAA0hD,eAEA1hD,GAWAu7J,EAAA3nM,UAAAszM,+BAAA,SAAA/2L,GACA,IAAAhe,KAAA00M,MAAA/uF,OACA,WAGA,IAAAr4F,GAAAq9D,EAAAp9D,MAAAvtB,KAAA00M,MAAA/uF,OACA,IAAAr4F,KAAA8e,OAAA5+B,MAAAG,QAAA2f,EAAA8e,OACA,OAAA/rC,GAAA,EAAuBA,EAAAitB,EAAA8e,MAAAppC,OAA0B3C,IACjD,GAAAitB,EAAA8e,MAAA/rC,GAAA2d,WACAsP,EAAA8e,MAAA/rC,GAAAiuC,WACA,aAAAhhB,EAAA8e,MAAA/rC,GAAAiuC,WACA,aAAAhhB,EAAA8e,MAAA/rC,GAAAiuC,WACA,MAAAjuC,EAKA,cAWA+oM,EAAA3nM,UAAAsrM,QAAA,SAAA/+J,GACA,GAAAjuC,GAAAC,IAGA,oBAAAguC,IAAA,OAAAA,GACA,gBAAAA,GAAAyC,IAEA,MADA3qC,SAAAsC,KAAA,mDACA4lC,CAIA,IAAA1gB,GAAAq9D,EAAAp9D,MAAAygB,EAAAyC,IAGA,aAAAnjB,EAAA8e,QACA5+B,MAAAG,QAAA2f,EAAA8e,QAAA,IAAA9e,EAAA8e,MAAAppC,OAEA,MADA8C,SAAAsC,KAAA,iCACA4lC,CAKA,IAAA1gB,EAAA8e,MAAAppC,QAAA,GAAAsqB,EAAA8e,MAAAwtD,MAAA,SAAAn5F,GACA,oCAAAsE,QAAAtE,EAAA2zF,OAGA,MADAtuF,SAAAsC,KAAA,qDACA4lC,CAQA,QAFAyC,GAAAzC,EAAAyC,IACAukK,KACA30M,EAAA,EAAmBA,EAAAitB,EAAA8e,MAAAppC,OAA0B3C,IAC7CitB,EAAA8e,MAAA/rC,GACA2wC,IAAA3iC,QAAA,SAAA2iC,GACA,YAAAA,EAAAC,MACA,CACA+jK,IACA,IAAAhiC,GAAAroF,EAAAp9D,MAAAxtB,EAAA20M,MAAA1hC,MACAhiI,GAAAC,MAAA+hI,EAAA5mI,MAAA/rC,GAAA2wC,IAAA,GAAAC,QAIA+jK,KACAvkK,EAAAk6C,EAAA14C,MAAA3kB,IAKAttB,KAAA00M,MAAA1mK,EAAAhwB,MAAAyyB,CAKA,IAAArE,GAAA9e,EAAA8e,KACA9e,GAAA8e,QAKA,IAAA6oK,MAIA1qG,IAEAn+D,GAAA/9B,QAAA,SAAA6mM,GAEA,oBAAAA,GAAA9oB,SACA,aAAA8oB,EAAA9oB,UACA,aAAA8oB,EAAA5mK,UACA,SAAA5iC,OAAA,gGAMAupM,EAAAC,EAAAl3L,OACA,aAAAi3L,EAAAC,EAAAl3L,MAAAswB,YACA2mK,EAAAC,EAAAl3L,MAAAk3L,KAKA9oK,EAAA/9B,QAAA,SAAA6mM,GACA,mBAAAA,EAAAl3L,KAGA,MAFAsP,GAAA8e,MAAAvpC,KAAAqyM,OACA3qG,GAAA1nG,KAAAqyM,EAAA9gH,IAKA,iBAAA8gH,GAAAnhI,SACAhzE,OAAAg3B,KAAAm9K,EAAAnhI,SAAA1lE,QAAA,SAAAmsB,GACA,gBAAAy6K,GAAAC,EAAAl3L,MAAA+1D,UACAkhI,EAAAC,EAAAl3L,MAAA+1D,YAGAkhI,EAAAC,EAAAl3L,MAAA+1D,QAAAv5C,GACA06K,EAAAnhI,QAAAv5C,YAEA06K,EAAAj6H,OAOAg6H,EAAAC,EAAAl3L,MAAA+1D,QAAAv5C,GAAAygD,KACAi6H,EAAAj6H,iBAQAi6H,EAAA3lK,YACA/hC,MAAAG,QAAAunM,EAAA3lK,uBAGA0lK,EAAAC,EAAAl3L,MAAAuxB,YACA/hC,MAAAG,QAAAsnM,EAAAC,EAAAl3L,MAAAuxB,cACA0lK,EAAAC,EAAAl3L,MAAAuxB,eAGA0lK,EAAAC,EAAAl3L,MAAAuxB,WACA0lK,EAAAC,EAAAl3L,MAAAuxB,WAAAhlC,OACA2qM,EAAA3lK,aAGA0lK,EAAAC,EAAAl3L,QAAAk3L,IAEAA,EAAA9gH,IAAA8gH,EAAAl3L,WAGAk3L,GAAAC,iBAGAD,GAAAj6H,KAEA,aAAAi6H,EAAA5mK,WAEAi8D,EAAA1nG,KAAAqyM,EAAAl3L,MAIAsP,EAAA8e,MAAAvpC,KAAAqyM,MAKA5nL,EAAAwiF,OAAAxtC,KAAA,SAAA3yB,GACA,cAAAA,EAAA3xB,KAEA,MADA2xB,GAAAo9I,KAAAxiF,EAAA9/F,KAAA,UAMA6iB,EAAAu/J,cACAC,SAAA,MACA9nF,MAAA,IAGA,IAAAuqG,GAAA5kH,EAAA14C,MAAA3kB,EAEA,WAAAm+D,wBACAztE,KAAAgwB,EAAAhwB,KACAyyB,IAAA8+J,KAcAnG,EAAA3nM,UAAAwtM,cAAA,SAAAjhK,GACA,GAAAjuC,GAAAC,IAGA,oBAAAguC,IAAA,OAAAA,GACA,gBAAAA,GAAAyC,IAEA,MADA3qC,SAAAsC,KAAA,mDACA4lC,CAGA,IAAA1gB,GAAAq9D,EAAAp9D,MAAAygB,EAAAyC,IAGA,aAAAnjB,EAAA8e,QACA5+B,MAAAG,QAAA2f,EAAA8e,QAAA,IAAA9e,EAAA8e,MAAAppC,OAEA,MADA8C,SAAAsC,KAAA,iCACA4lC,CAKA,IAAA1gB,EAAA8e,MAAAppC,OAAA,IAAAsqB,EAAA8e,MAAAwtD,MAAA,SAAAn5F,GACA,oCAAAsE,QAAAtE,EAAA2zF,OAGA,MADAtuF,SAAAsC,KAAA,+CACA4lC,CAIA,IAAA++I,KACAz/J,GAAA8e,MAAA/9B,QAAA,SAAA5N,GACAssL,EAAAlqL,KAAApC,EAAA2zF,MAGA,IAAAghH,KASA,aARA9nL,EAAAwiF,QACAtiG,MAAAG,QAAA2f,EAAAwiF,UACAslG,EAAA9nL,EAAAwiF,OAAAlW,MAAA,SAAA54D,GACA,iBAAAA,EAAAhjB,MACA2+J,EAAA1xK,MAAA+1B,EAAA+rJ,KAAArzK,QAAAqzK,EAAArzK,aAIA07L,EACA,SAAA1pM,OAAA,kFA6BA,IAAA2pM,YACAr1M,KAAA00M,MAAA1mK,EAAAhwB,QACAq3L,EAAA1qH,EAAAp9D,MAAAvtB,KAAA00M,MAAA1mK,EAAAhwB,OAGA,IAAAs3L,IACArmI,SACAllC,UAKAwrK,KACAC,EAAA,EACAC,EAAA,CAwMA,IAtMAnoL,EAAA8e,MAAA/9B,QAAA,SAAAqnM,GACA,oBAAAA,GAAAtpB,SACA,aAAAspB,EAAAtpB,UACA,aAAAspB,EAAApnK,UACA,SAAA5iC,OAAA,4FAIA,oBAAAgqM,EAAA13L,KAAA,CAOA,GAAA+1D,GAAA2hI,EAAA3hI,QACAxkC,EAAAmmK,EAAAnmK,WACAy/H,EAAA0mC,EAAA1mC,WACA8b,EAAA4qB,EAAA5qB,SACAE,EAAA0qB,EAAA1qB,OACA/9I,EAAAyoK,EAAAzoK,YACAX,EAAAopK,EAAAppK,WAIAopK,GAAA3hI,cACA2hI,GAAAnmK,iBACAmmK,GAAA1mC,iBACA0mC,GAAA5qB,eACA4qB,GAAA1qB,aACA0qB,GAAAzoK,kBACAyoK,GAAAppK,WACAopK,GAAAthH,GAGA,IAAAuhH,eACApmK,GAAA/hC,MAAAG,QAAA4hC,IACAA,EAAAlhC,QAAA,SAAAiiC,GAIA,QAAAA,EAAAV,oBAMAU,EAAApB,OACA1hC,MAAAG,QAAA2iC,EAAApB,QACAoB,EAAApB,MAAA7gC,QAAA,SAAAmsB,YACAm7K,EAAAn7K,KACAm7K,EAAAn7K,OAGAm7K,EAAAn7K,GAAA33B,KAAAytC,MAOA,IAAAslK,KAEA,iBAAA7hI,IAGAhzE,OAAAg3B,KAAAg8C,GAAA1lE,QAAA,SAAAmsB,GAMA,GAAA06K,EAOA,cAAAlnK,EAAAhwB,MAQA+1D,EAAAv5C,GAAAygD,KAsBA,YAdA06H,EAAAn7K,IACAhtB,MAAAG,QAAAgoM,EAAAn7K,KACAm7K,EAAAn7K,GAAA8nC,KAAA,SAAAhyB,GAGA,MAAAA,GAAApB,MAAAozB,KAAA,SAAAuzI,GACA,mBAAAD,GAAAC,GAEA,MADAX,GAAAU,EAAAC,UAOA,gBAAAX,GAEAA,EAAAnhI,QAAAv5C,GAAAu5C,EAAAv5C,SACAu5C,GAAAv5C,GAAAygD,SACiB,CAqCjB,GAnCAi6H,EAAAn0M,OAAAkqC,OAAAyqK,GACAE,EAAAp7K,GAAA06K,WAEAnhI,EAAAv5C,GAAAygD,OAMAi6H,EAAAj6H,KAAAlH,EAAAv5C,GAAAygD,WACAlH,GAAAv5C,GAAAygD,MAIAi6H,EAAAnhI,WACAmhI,EAAAnhI,QAAAv5C,GAAAu5C,EAAAv5C,GACA06K,EAAA3lK,WAAAomK,EAAAn7K,YAIA66K,YACAA,EAAAjpK,OACA5+B,MAAAG,QAAA0nM,EAAAjpK,QAEAipK,EAAAjpK,MAAA/9B,QAAA,SAAA5N,GACA,gBAAAA,GAAAszE,SACAhzE,OAAAg3B,KAAAt3B,EAAAszE,SAAA1lE,QAAA,SAAAzM,GACAA,IAAA44B,IACA06K,EAAA9gH,IAAA3zF,EAAA2zF,kBAOA8gH,EAAA9gH,IAAA,CAeA,cAAApmD,EAAAhwB,KACA,SAAAtS,OAAA,8BAGAwpM,GAAA9gH,KAAAshH,EAAA13L,KAAA,IAAAwc,GAAA/vB,KAAA,IAIAyqM,EAAAlmC,aACAkmC,EAAApqB,WACAoqB,EAAAlqB,SACAkqB,EAAAjoK,cACAioK,EAAA5oK,OAEAipK,EAAAL,EAAA9gH,KAAA8gH,EAEAn1M,EAAA20M,MAAAE,SAAAa,GAAAD,WACAz1M,EAAA20M,MAAAC,SAAAa,KACAz1M,EAAA20M,MAAAC,SAAAa,GAAAC,GAEAA,QAjGAH,GAAAI,EAAA13L,MAAAwc,GAAAu5C,EAAAv5C,KAsGAg7K,QArLAD,GAAAG,EAAAthH,KAAAshH,IA0LApoL,EAAA8e,SACA2gJ,KAEA,WAAA/+I,EAAAhwB,KAcA,OAAA3d,GAAA,EAAuBA,EAAAg1M,EAAAjpK,MAAAppC,OAAyB3C,IAAA,CAChD,GAAA60M,GAAAG,EAAAjpK,MAAA/rC,YAEAk1M,EAAAL,EAAA9gH,aAaA8gH,GAAAj6H,WACAi6H,GAAAnhI,cACAmhI,GAAA3lK,WACA2lK,EAAA5mK,WACA,aAAA4mK,EAAA5mK,UAEA,aAAA4mK,EAAA5mK,YACA4mK,EAAA5mK,UAAA,YAFA4mK,EAAA5mK,UAAA,YAWAhhB,EAAA8e,MAAAvpC,KAAAqyM,GAEA,gBAAAA,GAAA9gH,KAEA24F,EAAAlqL,KAAAqyM,EAAA9gH,mBAaAihH,YACAA,EAAAjpK,OACA5+B,MAAAG,QAAA0nM,EAAAjpK,QACAipK,EAAAjpK,MAAA/9B,QAAA,SAAA6mM,GACAnoB,EAAAlqL,KAAAqyM,EAAA9gH,cACAmhH,EAAAL,EAAA9gH,KACA9mE,EAAA8e,MAAAvpC,KAAA0yM,EAAAL,EAAA9gH,aAEA8gH,GAAAj6H,WACAi6H,GAAAnhI,cACAmhI,GAAA3lK,WACA2lK,EAAA5mK,WACA,aAAA4mK,EAAA5mK,YACA4mK,EAAA5mK,UAAA,YACA4mK,EAAA5mK,WACA,aAAA4mK,EAAA5mK,YACA4mK,EAAA5mK,UAAA,YACAhhB,EAAA8e,MAAAvpC,KAAAqyM,MAMAn0M,OAAAg3B,KAAAw9K,GAAAlnM,QAAA,SAAA+lF,IACA,IAAA24F,EAAAhoL,QAAAqvF,KACA24F,EAAAlqL,KAAAuxF,GACA,aAAAmhH,EAAAnhH,GAAA9lD,UAMAhhB,EAAA8e,MAAAk2B,KAAA,SAAA4yI,GACA,iBAAAA,EAAA5mK,WACA,aAAA4mK,EAAA5mK,YACA4mK,EAAAl3L,OAAAu3L,EAAAnhH,GAAAp2E,KASA,MANAjd,QAAAg3B,KAAAw9K,EAAAnhH,GAAArgB,SAAA1lE,QACA,SAAAmsB,GACA06K,EAAAnhI,QAAAv5C,GACA+6K,EAAAnhH,GAAArgB,QAAAv5C,UAOAlN,EAAA8e,MAAAvpC,KAAA0yM,EAAAnhH,QAWA,iBAAA/lF,QAAA,SAAA2P,GACA,GAAAsP,KAAA8e,OAAA5+B,MAAAG,QAAA2f,EAAA8e,OAAA,CAGA,GAAA8tD,GAAA,IACA,IAAAn5F,OAAAg3B,KAAAu9K,EAAAt3L,IAAAhb,OAAA,GAEA,QADAk3F,EAAAn6F,EAAAg1M,+BAAA/2L,IAMA,OAAA3d,GAAA,EAA+BA,EAAAitB,EAAA8e,MAAAppC,OAA0B3C,IACzD,GAAAitB,EAAA8e,MAAA/rC,GAAA2d,SAAA,CACAk8E,EAAA75F,CACA,OAMA,GAAA65F,GAAA5sE,EAAA8e,MAAAppC,OAAAk3F,EAAA,CACA,GAAAhqD,GAAA5iB,EAAA8e,MAAA8tD,EACAn5F,QAAAg3B,KAAAu9K,EAAAt3L,IAAA3P,QAAA,SAAAmsB,GACA0V,EAAA6jC,SAAA7jC,EAAA6jC,QAAAv5C,IACA10B,QAAAsC,KAAA,+BAEA8nC,EAAA6jC,UACA7jC,EAAA6jC,YAGA7jC,EAAA6jC,QAAAv5C,GAAA86K,EAAAt3L,GAAAwc,SAMAlN,EAAAwiF,OAAAxtC,KAAA,SAAA3yB,GACA,cAAAA,EAAA3xB,KAEA,MADA2xB,GAAAo9I,OAAAtiL,KAAA,UAMA6iB,EAAAu/J,cACAC,SAAA,MACA9nF,MAAA,IAGA,IAAAuqG,GAAA5kH,EAAA14C,MAAA3kB,EAMA,OAFAttB,MAAA00M,MAAA1mK,EAAAhwB,MAAAuxL,EAEA,GAAA9jH,wBACAztE,KAAAgwB,EAAAhwB,KACAyyB,IAAA8+J,sBCxuBA,GAAA5kH,GAAAzqF,EAAA,GAEAR,GAAAuyC,MAAA,SAAA3kB,EAAA07B,GAgDA,gBA9CA17B,YACAA,EAAA8e,OACA5+B,MAAAG,QAAA2f,EAAA8e,QAEA9e,EAAA8e,MAAA/9B,QAAA,SAAA6hC,YAEAA,EAAA6jC,SACA,IAAAhzE,OAAAg3B,KAAAmY,EAAA6jC,SAAA/wE,SACAktC,EAAAhB,SACAnuC,OAAAg3B,KAAAmY,EAAA6jC,SAAA1lE,QAAA,SAAAmsB,GACA,GAAAy5C,GAAA/jC,EAAA6jC,QAAAv5C,EACAz5B,QAAAg3B,KAAAk8C,GAAA5lE,QAAA,SAAAiI,GACA45B,EAAAhB,MAAArsC,MACAJ,GAAA+3B,EACAlkB,YACAlL,MAAA6oE,EAAA39D,eAIA45B,GAAA6jC,kBAIA7jC,EAAAX,YACA/hC,MAAAG,QAAAuiC,EAAAX,aACAW,EAAAX,WAAAlhC,QAAA,SAAAiiC,YACAA,EAAApB,OACA1hC,MAAAG,QAAA2iC,EAAApB,SACAoB,EAAApB,MAAAoB,EAAApB,MAAAzkC,KAAA,mBAQA6iB,YACAA,EAAAwiF,QAAAtiG,MAAAG,QAAA2f,EAAAwiF,SAEAxiF,EAAAwiF,OAAAzhG,QAAA,SAAA2yB,YACAA,EAAA+rJ,MAAAv/K,MAAAG,QAAAqzB,EAAA+rJ,QACA/rJ,EAAA+rJ,KAAA/rJ,EAAA+rJ,KAAAtiL,KAAA,QAKAkgF,EAAA14C,MAAA3kB,EAAA07B,IAGAtpD,EAAA6tB,MAAA,SAAAkjB,GACA,GAAAnjB,GAAAq9D,EAAAp9D,MAAAkjB,EAwCA,iBAtCAnjB,cAAA8e,OACA5+B,MAAAG,QAAA2f,EAAA8e,QAEA9e,EAAA8e,MAAA/9B,QAAA,SAAA6hC,YAEAA,EAAAhB,OAAA1hC,MAAAG,QAAAuiC,EAAAhB,SACAgB,EAAA6jC,WACA7jC,EAAAhB,MAAA7gC,QAAA,SAAAmsB,GACA0V,EAAA6jC,QAAAv5C,EAAA/3B,MACAytC,EAAA6jC,QAAAv5C,EAAA/3B,QACAytC,EAAA6jC,QAAAv5C,EAAA/3B,IAAA+3B,EAAAlkB,WAAAkkB,EAAApvB,cAGA8kC,GAAAhB,gBAIAgB,EAAAX,YACA/hC,MAAAG,QAAAuiC,EAAAX,aACAW,EAAAX,WAAAlhC,QAAA,SAAAiiC,GACA,gBAAAA,GAAApB,QACAoB,EAAApB,MAAAoB,EAAApB,MAAA1oC,MAAA,mBAOA8mB,YACAA,EAAAwiF,QAAAtiG,MAAAG,QAAA2f,EAAAwiF,SAEAxiF,EAAAwiF,OAAAzhG,QAAA,SAAA2yB,GACA,gBAAAA,GAAA+rJ,OACA/rJ,EAAA+rJ,KAAA/rJ,EAAA+rJ,KAAAvmL,MAAA,QAKA8mB,kBC9FA3tB,EAAAD,QAAA,QAAAi9K,GAAAttI,GAEA,IAAAA,EACA,QAGA,IAAArvC,KAAAgD,QAAAqsC,EAAArsC,OACA,QAEA,QAAA3C,GAAA,EAAAC,EAAAN,KAAAgD,OAAoC3C,EAAAC,EAAOD,IAE3C,GAAAL,KAAAK,YAAAmN,QAAA6hC,EAAAhvC,YAAAmN,QAEA,IAAAmvK,EAAA1xK,MAAAjL,KAAAK,IAAAgvC,EAAAhvC,KACA,aACS,IAAAL,KAAAK,IAAAgvC,EAAAhvC,GAGT,QAGA,qBAAAJ,EAAA4B,EAAAT,GCVA,QAAA6uC,GAAAC,EAAA1V,EAAA2V,GACA,MAAAD,GACAhB,MACAE,OAAA,SAAAD,GAAoC,MAAAA,GAAA1sC,KAAA+3B,IACpC4U,OAAA,SAAAD,GAAoC,MAAAA,GAAA74B,YAAA65B,IACpCpmC,IAAA,SAAAolC,GAAiC,MAAAA,GAAA/jC,QAAyB,GAK1D,QAAAk+L,GAAArrL,GAEAje,KAAAie,cAEAje,KAAAie,QAAAsrL,cACAvpM,KAAAie,QAAAsrL,YAAAuM,GAEAhwM,QAAAhC,IAAA,uBAAA9D,KAAAie,QAAAsrL,YAAA,WAMAvpM,KAAAqyM,aAiBA,QAAA0D,GAAAzoL,EAAA+9E,GACA,MAAA/9E,GAAA9f,MAAAG,QAAA2f,EAAA8e,QAIA9e,EAAA8e,MAAA/9B,QAAA,SAAA6hC,GACA,UAAAA,EAAAlyB,MACAqtF,EAAAn7D,KAKA,QAAA8lK,GAAAhoK,GAEA,MAAAA,IAAA,MAAAA,GACAA,EAAAhwB,MAAA,IAAAgwB,EAAAhwB,MACAgwB,EAAAyC,KAAA,IAAAzC,EAAAyC,IAnEA,GAAAk6C,GAAAzqF,EAAA,IACA+1M,EAAA/1M,EAAA,KACAg2M,EAAAD,EAAAC,WACAC,EAAAF,EAAAE,WAIAL,EAAA,CAmNAxM,GAAA7nM,UAAA20M,eAAA,WACAp2M,KAAAqyM,cAWA/I,EAAA7nM,UAAAksM,aAAA,SAAAz+J,GACAlvC,KAAAqyM,UAAAnjK,GAYAo6J,EAAA7nM,UAAA40M,gBAAA,SAAAnmK,GACA,GAAAL,GAAAK,EAAAX,YACAW,EAAAX,WAAAG,KAAA,SAAAC,GAA+C,cAAAA,EAAAC,WAC/C,OAAAC,GACAA,EAAAX,MACA1oC,MAAA,KACAuD,IAAA,SAAAwmC,GAAoC,MAAA1sC,UAAA0sC,MAEpCL,EAAAhB,MAAA,GAAAzsC,KAIA6mM,EAAA7nM,UAAA60M,sBAAA,SAAAC,EAAAC,GAEA,OADA9nG,MACAruG,EAAA,EAAmBA,EAAAk2M,EAAAvzM,SAAwB3C,EAAA,CAC3C,GAAAo2M,GAAAF,EAAAl2M,GACAq2M,EAAAF,EAAAn2M,IAAA,IACAquG,GAAA+nG,GAAAC,EAEA,MAAAhoG,IAGA46F,EAAA7nM,UAAAk1M,2BAAA,SAAAzmK,GACApqC,QAAAhC,IAAA,sCAAA9D,KAAAqyM,UACA,IAAAuE,GAAA52M,KAAAq2M,gBAAAnmK,EACApqC,SAAAhC,IAAA,sCAAA8yM,EACA,IAAAC,GAAA5mK,EAAAC,EAAA0mK,EAAA,WACAE,EAAA7mK,EAAAC,EAAA0mK,EAAA,YACAG,EAAA/2M,KAAAs2M,sBAAAM,EAAA52M,KAAAqyM,UACAvsM,SAAAhC,IAAA,uCAAAizM,EAGA,IAAAC,GAAAh3M,KAAAqyM,UACAjjK,OAAA,SAAA5U,GAAgC,WAAAz5B,OAAAk2B,OAAA8/K,GAAAhyM,QAAAy1B,IA2BhC,OA1BA10B,SAAAhC,IAAA,oCAAAkzM,GAGA9mK,EAAAhB,MAAA7gC,QAAA,SAAAmsB,GACAu8K,EAAAv8K,EAAA/3B,MACA+3B,EAAA/3B,GAAAs0M,EAAAv8K,EAAA/3B,OAIAu0M,EAAA3oM,QAAA,SAAAmsB,GACA0V,EAAAhB,MAAArsC,MACAJ,GAAA+3B,EACAlkB,UAAA,OACAlL,MAAAyrM,IAEA3mK,EAAAhB,MAAArsC,MACAJ,GAAA+3B,EACAlkB,UAAA,QACAlL,MAAA0rM,MAGA5mK,EAAAX,WAAAW,EAAAX,eACAW,EAAAX,WAAA1sC,MACA+sC,UAAA,MACAV,MAAAlvC,KAAAqyM,UAAA5nM,KAAA,OAEAylC,GAGAo5J,EAAA7nM,UAAAw1M,oBAAA,SAAA/mK,EAAAV,GAkBA,OALAwjK,GAAA/iK,EAAAC,EAAAV,EAAA,QACAyjK,EAAAhjK,EAAAC,EAAAV,EAAA,SAGA0nK,KACA72M,EAAA,EAAmBA,EAAAL,KAAAie,QAAAsrL,YAAA,IAAkClpM,EAAA,CACrD,GAAA82M,GArRAjpM,KAAAE,MAAA,WAAAF,KAAA+T,UADA,CAoQAuY,GAmBA28K,GAnBAjnK,EAmBAA,GAlBAhB,MAAArsC,MACAJ,GAAA+3B,EACAlkB,UAAA,QACAlL,MAAA6nM,IAEA/iK,EAAAhB,MAAArsC,MACAJ,GAAA+3B,EACAlkB,UAAA,OACAlL,MAAA4nM,IAWAkE,EAAAr0M,KAAAs0M,GApBA,GAAAjnK,GAAA1V,CA2BA,OALA0V,GAAAX,WAAAW,EAAAX,eACAW,EAAAX,WAAA1sC,MACA+sC,UAAA,MACAV,MAAAM,EAAA,IAAA0nK,EAAAzsM,KAAA,OAEAylC,GAoBAo5J,EAAA7nM,UAAA21M,kBAAA,SAAAlnK,GAGA,GAAAV,GACAP,EAAAiB,EAAAhB,OAAAgB,EAAAhB,MACAnlC,IAAA,SAAAolC,GAAiC,MAAAA,GAAA1sC,KACjC2sC,OAAA,SAAA5U,EAAA3uB,EAAAwjC,GACA,MAAAA,GAAAtqC,QAAAy1B,KAAA3uB,IAEA7I,QAAA,EACAssC,EAAAY,EAAAX,YAAAW,EAAAX,WAAAvsC,QAAA,CAEA,QAAAisC,KAAA,EAEA,MAAAiB,EAEA,OAAAjB,GAAA,IAAAK,EAEA,MAAAY,EAGA,QAAAjB,EACAO,EAAAU,EAAAhB,MAAA,GAAAzsC,OACK,CAGL,GAAAgtC,GAAAS,EAAAX,WAAAH,OAAA,SAAAO,GAAgE,cAAAA,EAAAC,YAAoC,EACpG,KAAAH,EAIA,MAAAS,EAHAV,GAAA3rC,SAAA4rC,EAAAP,MAAA1oC,MAAA,SAsBA,MAhBAV,SAAAhC,IAAA,qCAAA9D,KAAAqyM,WACAvsM,QAAAhC,IAAA,qCAAA0rC,IAEA,IAAAxvC,KAAAqyM,UAAAttM,QAAAyqC,IAGA1pC,QAAAhC,IAAA,2EAEAosC,EAAAlwC,KAAA22M,2BAAAzmK,KAEApqC,QAAAhC,IAAA,2EAEAosC,EAAAlwC,KAAAi3M,oBAAA/mK,EAAAV,IAGAxvC,KAAAqyM,UAAAryM,KAAAq2M,gBAAAnmK,GACAA,GAYAo5J,EAAA7nM,UAAA0tM,uBAAA,SAAAnhK,GAEA,IAAAgoK,EAAAhoK,GACA,MAAAA,EAGA,IAAA1gB,GAAAq9D,EAAAp9D,MAAAygB,EAAAyC,KAEA1wC,EAAAC,IAmBA,OAlBA+1M,GAAAzoL,EAAA,SAAA4iB,GAGAnwC,EAAAke,QAAAwrL,uBAtWA,SAAAv5J,GAEA,GAAAA,GAAA1iC,MAAAG,QAAAuiC,EAAAX,YASA,IALA,GAAAwkC,GAAAmiI,EAAAhmK,GACAsvC,KAGA51E,EAAAsmC,EAAAX,WAAAvsC,OACA4G,KAEA,WAAAsmC,EAAAX,WAAA3lC,GAAAgmC,UAAA,CAMA,OAFAynK,GAAAnnK,EAAAX,WAAA3lC,GAAAslC,MAAA1oC,MAAA,KAEAnG,EAAA,EAAuBA,EAAAg3M,EAAAr0M,OAA2B3C,IAAA,CAElD,GAAAm6B,GAAA68K,EAAAh3M,EACAm/E,GAAA38E,KAAA23B,EAEA,IAAAruB,GAAA4nE,EAAAv5C,GAAAygD,KAAAz0E,MAAA,IACAutE,GAAAv5C,GAAAygD,MAAA9uE,EAAA,OAAA9L,EAAA,IAAA8L,EAAA,OAAA9L,GAAAoK,KAAA,IACAspE,EAAAv5C,GAAAmhE,OAAA5nB,EAAAv5C,GAAAmhE,MAAA,IAAAt7F,GAAAoK,KAAA,IAGAylC,EAAAX,WAAAlhC,QAAA,SAAAipM,GACA,WAAAA,EAAA1nK,UAAA,CAIA,GAAA2nK,GAAAD,EAAApoK,MAAA1oC,MAAA,MACA,IAAA+wM,EAAAxyM,QAAAy1B,IAKA+8K,EAAAlpM,QAAA,SAAAmpM,GACAzjI,EAAAyjI,GAAAv8H,KAAAlH,EAAAv5C,GAAAygD,KACAlH,EAAAyjI,GAAA77G,MAAA5nB,EAAAv5C,GAAAmhE,MACA67G,IAAAh9K,GACAglD,EAAA38E,KAAA20M,QAQAtnK,EAAAhB,MAAAinK,EAAApiI,EAAAyL,GACAtvC,EAAAX,WAAA/kC,OAAAZ,EAAA,KAkTAsmC,GA9SA,SAAAA,GAEA,GAAAA,GAAA1iC,MAAAG,QAAAuiC,EAAAX,YAAA,CAMA,GAAAwkC,GAAAmiI,EAAAhmK,EAGAA,GAAAX,WAAAlhC,QAAA,SAAA0jI,GACA,WAAAA,EAAAniG,UAAA,CAIA9pC,QAAA5B,KAAA,wBAAA6tI,EAAA7iG,OAEA6iG,EAAA0lE,OAKA,QAHAJ,GAAAtlE,EAAA7iG,MAAA1oC,MAAA,KAGAnG,EAAA,EAAuBA,EAAAg3M,EAAAr0M,OAA2B3C,IAAA,CAElD,GAAAm6B,GAAA68K,EAAAh3M,SACA0zE,GAAAv5C,GAGA0V,EAAAX,WAAAlhC,QAAA,SAAAipM,GACA,WAAAA,EAAA1nK,UAAA,CAIA,GAAA2nK,GAAAD,EAAApoK,MAAA1oC,MAAA,MACA,IAAA+wM,EAAAxyM,QAAAy1B,KAKA+8K,EAAAlpM,QAAA,SAAAmpM,SACAzjI,GAAAyjI,KAIAF,EAAAG,gBAOAvnK,EAAAhB,MAAAinK,EAAApiI,EAIA,KADA,GAAA1zE,GAAA6vC,EAAAX,WAAAvsC,OACA3C,KACA6vC,EAAAX,WAAAlvC,GAAAo3M,MACAvnK,EAAAX,WAAA/kC,OAAAnK,EAAA,OAvDAyF,SAAA5B,KAAA,8DA6SAgsC,GAKAnwC,EAAAsyM,UAAArvM,OAAA,EAtPA,SAAAktC,GACA,GAAAA,GAAA1iC,MAAAG,QAAAuiC,EAAAwnK,SAKA,IADA,GAAAr3M,GAAA6vC,EAAAwnK,QAAA10M,OACA3C,KACA,4BAAA6vC,EAAAwnK,QAAAr3M,GAAA+K,OACA8kC,EAAAwnK,QAAAltM,OAAAnK,EAAA,IA+OA6vC,IA1OAA,EA4OAA,KAvOA1iC,MAAAG,QAAAuiC,EAAAwnK,WACAxnK,EAAAwnK,YAGAxnK,EAAAwnK,QAAAp1I,KACA,SAAAjiE,GAA0B,mCAAAA,EAAA+K,SAC1B8kC,EAAAwnK,QAAA70M,MAA4BuI,MAAA,6BAX5B,IAAA8kC,KAgPA,GAAAu7C,wBACAztE,KAAAgwB,EAAAhwB,KACAyyB,IAAAk6C,EAAA14C,MAAA3kB,MAWAg8K,EAAA7nM,UAAA8uM,sBAAA,SAAAviK,GAEA,IAAAgoK,EAAAhoK,GACA,MAAAA,EAGA,IAAA1gB,GAAAq9D,EAAAp9D,MAAAygB,EAAAyC,KAEA1wC,EAAAC,IASA,OARA+1M,GAAAzoL,EAAA,SAAA4iB,GACA,YAAAA,EAAA5B,WAAA,YAAA4B,EAAA5B,WAIAvuC,EAAAq3M,kBAAAlnK,KAGA,GAAAu7C,wBACAztE,KAAAgwB,EAAAhwB,KACAyyB,IAAAk6C,EAAA14C,MAAA3kB,MAMA3tB,EAAAD,QAAA4pM,iBCxdA5pM,EAAAy2M,WAAA,SAAApiI,EAAAyL,GACA,GAAAtwC,KAGA,aAAA6kC,GACA,IAAAhzE,OAAAg3B,KAAAg8C,GAAA/wE,OAAA,CAEAwK,MAAAG,QAAA6xE,KACAA,KAIA,QAAAn/E,GAAA,EAAmBA,EAAAm/E,EAAAx8E,OAAkB3C,IAAA,CACrC,GAAAm6B,GAAAglD,EAAAn/E,GACA4zE,EAAAF,EAAAv5C,EACAz5B,QAAAg3B,KAAAk8C,GAAA5lE,QAAA,SAAAiI,GACA44B,EAAArsC,MACAJ,GAAA+3B,EACAlkB,YACAlL,MAAA6oE,EAAA39D,OAMAvV,OAAAg3B,KAAAg8C,GAAA1lE,QAAA,SAAAmsB,GAEA,GADAA,EAAA32B,SAAA22B,KACAglD,EAAAz6E,QAAAy1B,IAAA,IAKA,GAAAy5C,GAAAF,EAAAv5C,EACAz5B,QAAAg3B,KAAAk8C,GAAA5lE,QAAA,SAAAiI,GACA44B,EAAArsC,MACAJ,GAAA+3B,EACAlkB,YACAlL,MAAA6oE,EAAA39D,UAMA,MAAA44B,IAGAxvC,EAAAw2M,WAAA,SAAAhmK,GACA,GAAA6jC,KASA,iBAPA7jC,EAAAhB,OAAA1hC,MAAAG,QAAAuiC,EAAAhB,QACAgB,EAAAhB,MAAA7gC,QAAA,SAAAmsB,GACAu5C,EAAAv5C,EAAA/3B,MACAsxE,EAAAv5C,EAAA/3B,QACAsxE,EAAAv5C,EAAA/3B,IAAA+3B,EAAAlkB,WAAAkkB,EAAApvB,QAGA2oE,iSCpEqB4jI,aAQjB,QAAAA,GAAYnwI,EAAY/6D,iGAAUzM,KAAA23M,GAO9B33M,KAAKonB,UAAY3a,EASjBzM,KAAK43M,eAYLpwI,EAAWruC,WAAWtD,sBAClB71B,KAAK8jL,YAAYz2K,KAAKrN,OAE1BwnE,EAAWzxC,GACP8tJ,EAAAnjJ,mBACA1gC,KAAK63M,kBAAkBxqM,KAAKrN,OAChCwnE,EAAWzxC,GACP8tJ,EAAArjJ,YACAxgC,KAAK83M,YAAYzqM,KAAKrN,qDAclBw3B,EAAKgD,EAAMoxC,EAAY/vC,GAG1BA,GAAY77B,KAAKqrE,aAAcrrE,KAAK43M,aAIrC53M,KAAKqrE,WAAWyZ,WACblZ,EAvEiB,KAwEpB5rE,KAAK43M,eACL53M,KAAKonB,wDAeMqjD,GACf,MAAOA,GAAMqB,gBAAkBrB,EAAM5uC,8CAW7B4uC,GACJzqE,KAAK+3M,mBAAmBttI,KACxBzqE,KAAKqrE,WAAaZ,6CAYRA,GACVzqE,KAAK+3M,mBAAmBttI,IAAUA,EAAMqa,YACxC9kF,KAAK43M,oBAAc33M,IAAA4B,GAAAyG,EAAAxH,GAAA,SAAAb,EAAA4B,EAAAT,GCxG/B,QAAS42M,KAELh4M,KAAKi4M,cAAgB,GAAI7jG,GAGzBp0G,KAAKk4M,qBAAuB,GAAIC,GAGhCn4M,KAAK47K,QAAU,KAIf57K,KAAK6zG,UAAY,KAGjB7zG,KAAKo4M,cAAgB,KAIrBp4M,KAAKyM,SAAW,KAIhBzM,KAAK69F,WAGL79F,KAAK65F,MAAQw+G,EAIbr4M,KAAKs4M,WAAa,EAwNtB,QAASC,GAAmBC,GACxB,IAAK,GAAIn4M,GAAI,EAAGA,EAAIm4M,EAAoBx1M,OAAQ3C,IACN,IAAlCm4M,EAAoBn4M,GAAG2C,QACvBw1M,EAAoBhuM,OAAOnK,EAAG,EAItC,OAAOm4M,GAAoBx1M,OAAS,EAhRxC,GAAMoxG,GAAgBl0G,EAAQ,IACxBi4M,EAAgBj4M,EAClB,KAEEm4M,EAAe,QAqDrBL,GAAYv2M,UAAUmwB,MAAQ,WAC1B,GAAI5xB,KAAK65F,QAAUw+G,EACf,KAAM,IAAI3sM,OAAJ,uDAEE2sM,EAFF,oCAGEr4M,KAAK65F,MAHP,UAKV75F,MAAK65F,MA3De,YA4DpB75F,KAAKi4M,cAAcrmL,QACnB5xB,KAAK6zG,UAAY,GAAI50F,OASzB+4L,EAAYv2M,UAAU42B,KAAO,SAAc5rB,GAAU,GAAAspC,GAAA/1C,IACjD,IAvEoB,cAuEhBA,KAAK65F,MACL,KAAM,IAAInuF,OAAJ,gGAGE1L,KAAK65F,MAHP,UAOV/zF,SAAQhC,IAAI,8CACZ9D,KAAKi4M,cAAc5/K,MAGnB,IAAMogL,GAwBV,SAAsBv3F,EAAayE,GAO/B,GANA7/G,QAAQhC,IACJ,0FAC2B6hH,EAAO+yF,UAAU11M,QAI5C2iH,EAAO+yF,UAAU11M,OAAS,EAAG,CAC7B,GAAI21M,GAAShzF,EAAO9R,UAAU+kG,qBACxB13F,EAAYrN,UAAU+kG,oBAIxBD,GAAS,IACTA,EAAS,EAGb,IAAItpK,GAAQ,GAEZs2E,GAAO+yF,UAAUrqM,QAAQ,SAAAwqM,GACrBA,EAAWC,OAASH,EACpBE,EAAW39G,KAAOy9G,EAClBtpK,GAAYwpK,EAAWE,KAAvB,MAEJ1pK,GAAS,IACTvpC,QAAQhC,IAAIurC,GAKZs2E,EAAO+yF,UAAU93M,KAAO+kH,EAAO/kH,KAInCsgH,EAAYrjB,QAAQh7F,KAAK8iH,EAAO+yF,WAChCx3F,EAAY06D,UACZ91K,QAAQhC,IAAR,oBAAgCo9G,EAAY06D,SAG5C16D,EAAY83F,cA/DkB3rM,KAAK,KAAMrN,KAEzCA,MAAKi4M,cAAcxiG,sBAAsBpnG,QAAQ,SAAA4qM,GAC7CljK,EAAKmiK,qBAAqBl0L,KAAKi1L,EAAiBR,GAChD1iK,EAAK6lI,YAIT57K,KAAK65F,MA1FkB,eA6FvB75F,KAAKyM,SAAWA,GA2DpBurM,EAAYv2M,UAAUu3M,WAAa,WAxJR,iBAyJnBh5M,KAAK65F,OAAiD,IAAjB75F,KAAK47K,SAG1C57K,KAAKk5M,SAQblB,EAAYv2M,UAAUy3M,MAAQ,WAAW,GAAAtwI,GAAA5oE,IACrC8F,SAAQhC,IAAR,sDAEQ9D,KAAK69F,QAAQ76F,QACrBhD,KAAKo4M,cAAgB,EAOrB,IAAMe,GAASn5M,KAAK69F,QAGdu7G,IAGNb,GAAmBY,GAGnBA,EAAO9qM,QAAQ,SAAAghC,GAAA,MA6FnB,UAA+BA,EAAO0pK,GAClC,GAAqB,IAAjB1pK,EAAMrsC,OACNqsC,EAAMxsC,KAAKk2M,OACR,CACH,GAAI1pK,EAAMA,EAAMrsC,OAAS,GAAG81M,OAASC,EAAKD,MAGtC,WAFAzpK,GAAMxsC,KAAKk2M,EAKf,KAAK,GAAI14M,GAAI,EAAGA,EAAIgvC,EAAMrsC,OAAQ3C,IAC9B,GAAI04M,EAAKD,MAAQzpK,EAAMhvC,GAAGy4M,MAGtB,WAFAzpK,GAAM7kC,OAAOnK,EAAG,EAAG04M,EAK3B1pK,GAAMxsC,KAAKk2M,KA9G+BK,EAAgB/pK,IAG9D,MAAOkpK,EAAmBY,KAvBW,WAyBjC,GAAIE,GAAkBF,EAAO,EAE7BA,GAAO9qM,QAAQ,SAAAqqM,GACPA,EAAU,GAAGI,MAAQO,EAAgB,GAAGP,QACxCO,EAAkBX,IAK1B,IAAIY,GAAYD,EAAgBhtK,OAEhCu8B,GAAK2wI,oBAAoBD,EAAWD,EAAgBz4M,KAIpD,MAAOy4M,EAAgBr2M,OAAS,GAAG,UAxCF,WAyC7B,GAAIw2M,MACEC,EAAgBJ,EAAgB,GAAGP,KASzC,IAPAK,EAAO9qM,QAAQ,SAAAqqM,GACPA,EAAU,GAAGI,MAAQW,IACrBD,QAKJA,EACA,aAGJF,GAAYD,EAAgBhtK,QAC5Bu8B,EAAK2wI,oBAAoBD,EAAW,cAM5Ct5M,MAAK65F,MAjOc,WAkOf75F,KAAKyM,UACLzM,KAAKyM,SAASzM,KAAKo4M,gBAU3BJ,EAAYv2M,UAAU83M,oBAAsB,SAASR,EAAMn4M,YACnDA,GAA+B,OAATA,IACtBZ,KAAKo4M,eAAL,KAA2Bx3M,EAA3B,IACAZ,KAAKs4M,WAAa13M,EAAKoC,OAAS,GAEhChD,KAAKs4M,WAAaS,EAAKA,KAAK/1M,OA/OJ,KAgPxBhD,KAAKo4M,eAAiB,SACtBp4M,KAAKs4M,WAAa,GAEtBt4M,KAAKo4M,eAAL,IAA0BW,EAAKA,KAC/B/4M,KAAKs4M,YAAcS,EAAKA,KAAK/1M,OAAS,GAwD1Cg1M,EAAYv2M,UAAUo3E,SAAW,SAASpO,GACtCzqE,KAAKi4M,cAAcp/H,SAASpO,IAOhCutI,EAAYv2M,UAAUwzG,YAAc,SAASxqC,GACzCzqE,KAAKi4M,cAAchjG,YAAYxqC,IAQnCutI,EAAYv2M,UAAUi4M,iBAAmB,WACrC,GAjUmB,aAiUf15M,KAAK65F,MACL,KAAM,IAAInuF,OAAJ,uGAGE1L,KAAK65F,MAHP,UAMV,OAAO75F,MAAKo4M,eAMhBJ,EAAYv2M,UAAUkrG,SAAW,WAC7B,MAAO3sG,MAAK65F,OAOhBm+G,EAAYv2M,UAAU0d,MAAQ,WAC1Bnf,KAAK65F,MAAQw+G,EACbr4M,KAAK47K,QAAU,KACf57K,KAAKo4M,cAAgB,KACrBp4M,KAAK6zG,UAAY,KACjB7zG,KAAKyM,SAAW,KAChBzM,KAAK69F,WACL79F,KAAKs4M,WAAa,GAGtB34M,EAAOD,QAAUs4M,iBClVjBr4M,EAAOD,QATiB,SAASswF,EAAMpvF,EAAMizG,EAAW6kG,GACpD14M,KAAKgwF,KAAOA,EACZhwF,KAAKY,KAAOA,EACZZ,KAAK6zG,UAAYA,EACjB7zG,KAAK04M,UAAYA,oBCdrB,GAAMiB,GAAuBz5M,EAAQ,KAC/B05M,EAAO15M,EAAQ,KACf+3M,EAAgB/3M,EAAQ,IAKxBi4M,EAAgB,WAElBn4M,KAAKm6E,IAiHT,WACI,GAAMl+D,GAAU,0DAEhB,aAAIjS,OAAO6vM,UACP/zM,QAAQhC,IAAImY,OACT,CACH,GAAM69L,GAAW9vM,OAAO6vM,SAExB,aAAIC,EAAS11E,UAA0B01E,EAAS11E,SAAS,YACrD,MAAO01E,EAEXh0M,SAAQhC,IAAImY,OAtHpBk8L,GAAc12M,UAAYV,OAAOkqC,OAAO0uK,EAAqBl4M,WAK7D02M,EAAcjtK,YAAcitK,EAS5BA,EAAc12M,UAAUs4M,YAAc,SAASC,EAAevtM,GAC1D3G,QAAQhC,IAAR,6BAAyC9D,KAAKm6E,KAC9Cr0E,QAAQhC,IAAR,8BAA0Ck2M,EAC1C,IAAMxkC,GAAU,GAAIjpJ,eAEpBipJ,GAAQ/oJ,mBAAqB,WACzB,GAAI+oJ,EAAQpnJ,aAAe7B,eAAe0tL,MAChB,MAAnBzkC,EAAQnvJ,OACX5Z,EAAS+oK,EAAQ3qJ,kBACd,IAAI2qJ,EAAQpnJ,aAAe7B,eAAe0tL,KAC7C,KAAM,IAAIvuM,OAAJ,yDAEE8pK,EAAQnvJ,SAKxBmvJ,EAAQzmJ,KAAK,OAAQ/uB,KAAKm6E,KAC1Bq7F,EAAQvmJ,iBAAiB,eACrBgpL,EAAclkG,4BAClByhE,EAAQxxJ,KAAKg2L,GACbl0M,QAAQhC,IAAR,QAAoBk2M,IASxB7B,EAAc12M,UAAUy4M,eAAiB,SAASzxL,GAC9C,GAAMjM,GAAS+G,KAAKgK,MAAM9E,GAAU0xL,OAKpC39L,GAAO6vB,OACP,IAAMgD,KAON,OALA7yB,GAAOnO,QACH,SAAA0qM,GAAA,MACIA,GAAKqB,QACE/qK,EAAMxsC,KAAK,GAAI+2M,GAAKb,EAAKA,KAAMA,EAAKnnL,MAAOmnL,EAAK79G,QAExD7rD,GAQX8oK,EAAc12M,UAAU44M,OAAS,SAAS5xL,GAItC,GAHA3iB,QAAQhC,IAAR,wBAAoC2kB,EAAS5a,YAGrB,gBAAb4a,GACP,QAIJ,IAAI49I,SAEJ,KACIA,EAAO9iJ,KAAKgK,MAAM9E,GACpB,MAAOnM,GAGL,MAFAxW,SAAQhC,IAAIwY,MAMhB,YAAI+pJ,EAAK8zC,QACL,QAIJ,IAAM9qK,GAAQg3H,EAAK8zC,OAEnB,UAAM9qK,EAAM,KAAMA,EAAM,GAAG,gBA8B/B1vC,EAAOD,QAAUy4M,iBCxIjB,GAAMwB,GAAuB,WACzB,KAAM,IAAIjuM,OAAM,yDAapBiuM,GAAqBl4M,UAAUuiB,KAAO,SAAci1L,EAAiBxsM,GAAU,GAAAspC,GAAA/1C,IAC3EA,MAAK+5M,YAAYd,EAAgBjpH,KAAM,SAAAvnE,GAC/BstB,EAAKskK,OAAO5xL,GACZwwL,EAAgBP,UAAY3iK,EAAKmkK,eAAezxL,IAEhD3iB,QAAQhC,IAAI,wDACZm1M,EAAgBP,cAEpBjsM,EAASwsM,MAcjBU,EAAqBl4M,UAAUs4M,YAAc,SAASO,EAAW7tM,GAC7D,KAAM,IAAIf,OAAM,iDAmBpBiuM,EAAqBl4M,UAAUy4M,eAAiB,SAASzxL,GACrD,KAAM,IAAI/c,OAAM,4CAUpBiuM,EAAqBl4M,UAAU44M,OAAS,SAAS5xL,GAC7C,KAAM,IAAI/c,OAAM,4CAGpB/L,EAAOD,QAAUi6M,iBCrEjB,GAAMC,GAAO,SAASb,EAAMD,EAAO59G,GAC/Bl7F,KAAK+4M,KAAOA,EACZ/4M,KAAK84M,MAAQA,EACb94M,KAAKk7F,IAAMA,EAOf0+G,GAAKn4M,UAAU84M,QAAU,WACrB,MAAOv6M,MAAK+4M,MAOhBa,EAAKn4M,UAAU+4M,aAAe,WAC1B,MAAOx6M,MAAK84M,OAOhBc,EAAKn4M,UAAUg5M,WAAa,WACxB,MAAOz6M,MAAKk7F,KAGhBv7F,EAAOD,QAAUk6M,uVCnCXh3M,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GASJy0M,aAOjB,QAAAA,GAAYz8B,iGAAUj+K,KAAA06M,GAClB16M,KAAKi+K,SAAWA,EAChBj+K,KAAK4zB,aAAeqqJ,EAASrqJ,aAC7BhxB,EAAOyZ,MAAM,uBACbrc,KAAK+oG,YAEL/oG,KAAK26M,2BAA6B36M,KAAK46M,oBAAoBvtM,KAAKrN,MAKhEi+K,EAAS79D,oBAAoB,mBACzBpgH,KAAK66M,qBAAqBxtM,KAAKrN,OACnCi+K,EAAS79D,oBAAoB,uBACzBpgH,KAAK86M,oBAAoBztM,KAAKrN,8DASjBwZ,GACjB,GAAMlE,GAAakE,EAAKlE,UAExB,IAAKA,EAAL,CAIA1S,EAAOyZ,MAAM,gCAAiC/G,EAC9C,IAAM0tE,GAAY1tE,EAAW+Q,MAGzB28D,KAAchjF,KAAKqmB,QACf28D,IAAc+3H,EAAA5+H,kBACX6G,IAAc+3H,EAAA7+H,kBACd8G,IAAc+3H,EAAA3+H,cACrBp8E,KAAKqmB,OAAS28D,EACdhjF,KAAK4zB,aAAa+C,KACdy0I,EAAA9iK,EAAW23B,kCAAmCjgC,KAAKqmB,sDAU3C7M,GAChB,GAAMlE,GAAakE,EAAKlE,UAExB,IAAKA,EAAL,CAIA1S,EAAOyZ,MAAM,+BAAgC/G,EAE7C,IAAMgvE,GAAWhvE,EAAWukF,KAE5B,IAAIvV,IAAatkF,KAAK65F,MAItB,OAAQvV,GACR,IAAKy2H,GAAA1+H,SACL,IAAK0+H,GAAAz+H,UACL,IAAKy+H,GAAAx+H,cACL,IAAKw+H,GAAAv+H,eACL,IAAKu+H,GAAAt+H,aACD,GAAM21B,GAAU98F,EAAW0lM,UAE3B,KAAK5oG,EACD,MAIJ,IAAM9kF,GAAUttB,KAAK+oG,SAASqJ,EAE1B9kF,GACAA,EAAQ2tL,SAAS32H,GAEjB1hF,EAAOwF,KAAK,kCAAmCgqG,qDAcnCib,EAAY9P,GAChC,GAAIv9G,KAAK+oG,SAASskB,GAId,MAHAzqH,GAAOwF,KAAK,uDACRilH,GAEG,GAAI3hH,OAAMqvM,EAAA9+H,qBAGrB,IAAM3uD,GAAU,GAAI4tL,GAAA5yM,EAChB+kH,EAAY9P,EAAav9G,KAAKi+K,SAMlC,OAJA3wJ,GAAQ6tL,iBAAiBn7M,KAAK26M,4BAE9B36M,KAAK+oG,SAASskB,GAAc//F,EAErBA,8CASS6E,GAChB,GAAMigF,GAAUjgF,EAAMigF,OAEtB,IAAIjgF,EAAMmyD,WAAay2H,EAAAz+H,WAChBnqD,EAAMmyD,WAAay2H,EAAAt+H,aAAwB,CAC9C,GAAMnvD,GAAUttB,KAAK+oG,SAASqJ,EAE9B,KAAK9kF,EAID,WAHA1qB,GAAO0Z,MAAM,6CACT81F,EAKR9kF,GAAQ8tL,oBAAoBp7M,KAAK26M,kCAC1B36M,MAAK+oG,SAASqJ,GAGzBpyG,KAAK4zB,aAAa+C,KACdy0I,EAAA9iK,EAAW43B,mCACX/N,mZCvJNvvB,EAAS7B,OAAAiF,EAAAxD,WAAUyD,GAMnBo1M,EAAgB,gBAMDC,cAWjB,QAAAA,GAAYjuF,EAAY9P,EAAa0gE,iGAAUj+K,KAAAs7M,EAAA,IAAAvlK,qKAAA/1C,MAAAs7M,EAAAtlK,WAAAj1C,OAAAk1C,eAAAqlK,IAAA96M,KAAAR,MAAA,OAG3C+1C,GAAKs3E,WAAaA,EAClBt3E,EAAKwnE,YAAcA,EACnBxnE,EAAKkoI,SAAWA,EAShBloI,EAAK8jD,aAdsC9jD,QAX9BulK,6TAA+B36B,EAAA,GAWD5qI,kCAqBvC/1C,KAAK65F,QAAU0hH,EAAAj/H,WACZt8E,KAAK65F,QAAU0hH,EAAA9+H,aAMtBz8E,KAAKw7M,aAAa,QALd54M,EAAOwF,KAAK,sDAAAqI,IAAA,QAAArF,MAAA,WAcZpL,KAAK65F,QAAU0hH,EAAAl/H,UACZr8E,KAAK65F,QAAU0hH,EAAAj/H,WACft8E,KAAK65F,QAAU0hH,EAAAh/H,eACfv8E,KAAK65F,QAAU0hH,EAAA/+H,eAMtBx8E,KAAKw7M,aAAa,SALd54M,EAAOwF,KAAK,4CAAAqI,IAAA,WAAArF,MAAA,SAaXk5E,GACL,GAAIA,IAAatkF,KAAK65F,MAAtB,CAIA,GAAM0S,GAAWvsG,KAAK65F,KAEtB75F,MAAK65F,MAAQvV,EACbtkF,KAAK4zB,aAAa+C,KAAK0kL,GAEfjpG,QAASpyG,KAAKqtH,WACd9gB,WACAjoB,SAAUtkF,KAAK65F,MACf0jB,YAAav9G,KAAKu9G,wDAWbznF,GACb91B,KAAKmoC,YAAYkzK,EAAevlL,+CAQhBA,GAChB91B,KAAKk2B,eAAemlL,EAAevlL,wCAS1Bu1E,GAAQ,GAAAziC,GAAA5oE,KACXsV,GACFyH,MAAS,kCACTsuF,OAAUA,EACV2vG,WAAYh7M,KAAKqtH,WAGrB/3G,GAAWmmM,YAAcz7M,KAAKu9G,WAE9B,IAAMx0F,GAAKhoB,OAAAwkG,EAAA3xF,MACPiV,GAAI7oB,KAAKi+K,SAAS7zE,YAClBpsF,KAAM,QACLtd,EAAE,QAAS4U,GACX2H,IAELra,GAAOyZ,MAASgvF,EAAhB,wBAA+CtiF,EAAG/L,UAClDhd,KAAKi+K,SAASl0J,WAAWjF,OACrBiE,EACA,aACA,SAAAzM,GACI1Z,EAAO0Z,MAAP,aACiB+uF,EADjB,iCACyD/uF,GACzDssD,EAAKqyI,SAASM,EAAA9+H,oBAAA56E,OAAAyG,EAAAhI,IAAAE,KAAAqB,EAAA,0DAAA5B,EAAA4B,EAAAT,GAAA,gBAAAmH,GAAAnH,EAAA,GAAAf,EAAAe,EAAA,KAAAN,EAAAM,IAAAf,GAAAiI,EAAA,mBAAArI,KAAA4B,GAAA,OAAAT,GAAA,EAAAA,EAAAS,EAAAmB,OAAA5B,IAAA,IAAAmH,GAAA1G,EAAAT,EAAAmH,GAAArH,WAAAqH,EAAArH,aAAA,EAAAqH,EAAAtH,cAAA,WAAAsH,OAAAy/B,UAAA,GAAAjnC,OAAAC,eAAAf,EAAAsI,EAAAkI,IAAAlI,IAAA,gBAAA1G,EAAAT,EAAAmH,GAAA,MAAAnH,IAAAnB,EAAA4B,EAAAJ,UAAAL,GAAAmH,GAAAtI,EAAA4B,EAAA0G,GAAA1G,MC9IT65M,aAQjB,QAAAA,GAAYl0I,iGAAYxnE,KAAA07M,GACpB17M,KAAKu9B,OACDo+K,SAIAC,kBAAmB,KAGvB,IAAM9/K,GAAS0rC,EAAWqb,UAE1B7iF,MAAKu9B,MAAMo+K,MAAM7/K,GAAU,GAAI+/K,GAAAvzM,EAAawzB,EAAQ,SAEpD0rC,EAAWt/B,iBACP27I,EAAA1kJ,yBACAn/B,KAAK87M,mBAAmBzuM,KAAKrN,OACjCwnE,EAAWt/B,iBACP27I,EAAAhjJ,YACA7gC,KAAK+7M,YAAY1uM,KAAKrN,OAC1BwnE,EAAWt/B,iBACP27I,EAAA/iJ,UACA9gC,KAAKg8M,aAAa3uM,KAAKrN,OAC3BwnE,EAAWt/B,iBACP27I,EAAA3kJ,qBACAl/B,KAAKi8M,qBAAqB5uM,KAAKrN,4DAYpB47M,GACf,GAAMM,GACAl8M,KAAKu9B,MAAMo+K,MAAM37M,KAAKu9B,MAAMq+K,mBAC5BO,EAAoBn8M,KAAKu9B,MAAMo+K,MAAMC,EAE3CM,IAAsBA,EAAmBE,yBACzCD,GAAqBA,EAAkBC,yBACvCp8M,KAAKu9B,MAAMq+K,kBAAoBA,sCAWvB9/K,EAAQinD,GAChB,GAAIs5H,GAAYr8M,KAAKu9B,MAAMo+K,MAAM7/K,EAE5BugL,KACDA,EAAYr8M,KAAKu9B,MAAMo+K,MAAM7/K,GACvB,GAAI+/K,GAAAvzM,EAAawzB,EAAQinD,EAAYqyB,wDAYtCt5E,GACT,GAAMugL,GAAYr8M,KAAKu9B,MAAMo+K,MAAM7/K,EAE/BugL,IACAA,EAAUC,6DAYGxgL,EAAQq5E,GACzB,GAAMknG,GAAYr8M,KAAKu9B,MAAMo+K,MAAM7/K,EAE/BugL,IACAA,EAAUx7F,eAAe1L,sCAY7B,MAAOn1G,MAAKu9B,MAAMo+K,6RC/GpBY,aAWF,QAAAA,GAAYzgL,EAAQyhF,EAAai/F,iGAAcx8M,KAAAu8M,GAC3Cv8M,KAAKy8M,QAAU3gL,EACf97B,KAAK6gH,eAAetD,GACpBv9G,KAAK08M,cAAgBF,MACrBx8M,KAAKo8M,yBACLp8M,KAAK28M,yBAA2B,EAChC38M,KAAK48M,sBAAwB,KAC7B58M,KAAK68M,YAAW,MAAAz7M,GAAAnB,IAAAwQ,IAAA,YAAArF,MAAA,WAShB,MAAOpL,MAAKy8M,iDASZ,MAAOz8M,MAAKu9G,mDASDpI,GACXn1G,KAAKu9G,YAAcpI,yCASnB,MAAOn1G,MAAK08M,0DASZ,MAAO18M,MAAK88M,gEAWKC,GACjB,IAAK/8M,KAAK88M,oBAAsBC,EAC5B/8M,KAAK48M,sBAAwB39L,KAAK4K,UAC/B,IAAI7pB,KAAK88M,qBAAuBC,EAAsB,CACzD,GACMC,GADM/9L,KAAK4K,OACU7pB,KAAK48M,uBAAyB,EAEzD58M,MAAK28M,0BAA4BK,EACjCh9M,KAAK48M,sBAAwB,KAGjC58M,KAAK88M,mBAAqBC,wDAS1B,GAAIhrF,GAAQ/xH,KAAK28M,wBAMjB,OAJI38M,MAAK88M,qBACL/qF,GAAS9yG,KAAK4K,MAAQ7pB,KAAK48M,uBAGxB7qF,oCASP,MAAO/xH,MAAK68M,iDASZ78M,KAAK68M,YACL78M,KAAKo8M,6BAAqBn8M,IAIlCN,GAAOD,QAAU68M,+BCpHjB,SAASU,GAAgB1/E,EAAU/zF,GAC/B,GAAM8kC,GACA9kC,EAAQkG,KACN,SAAA/uC,GAAA,MAAgB,gBAAXA,EAAEosE,MAA0BpsE,EAAE4nE,WAAag1D,GAEpDjvD,IACA4uI,EAAA50M,EAAW8yB,0BACP+hL,EAAA70M,EAAIimE,4BAA4BD,ID6G3BiuI,0EC3HX3oL,EAAe,GAAIC,GAAAvrB,EAkBnB80M,GAKFzuI,iBALsB,SAKLliE,GACb0wM,EAAA70M,EAAIqmE,iBAAiBliE,IASzB0hE,sBAfsB,WAgBlB,MAAOgvI,GAAA70M,EAAI6lE,yBAUf9F,wBA1BsB,SA0BE+F,GACpB,MAAO+uI,GAAA70M,EAAI+/D,wBAAwB+F,IASvCivI,0BApCsB,SAoCIr/L,GACtB,GAAMs/L,GAAcH,EAAA70M,EAAIulE,uBAExB,QAAQ7vD,GACR,IAAKu/L,GAAAntM,EACD,WAAOktM,EAAYvzK,KACvB,KAAKwzK,GAAAj1M,EACD,WAAOg1M,EAAYruI,KACvB,SACI,WAAOquI,EAAYvzK,YAAkBuzK,EAAYruI,QAUzD6pC,8BAvDsB,WAwDlB,OAAQ0kG,EAAAl1M,EAAenC,aAQ3BsiE,qBAhEsB,WAiElB,MAAO00I,GAAA70M,EAAImgE,wBAWf+F,qBA5EsB,SA4EDjG,GAEjB,GAAMizC,GAAmB2hG,EAAA70M,EAAI+lE,mCAS7B,OAPImtC,IAAoBA,EAAiBx4G,OAAS,GAI9Ci6M,EAAgB10I,EAAU40I,EAAA70M,EAAI+lE,qCAG3B8uI,EAAA70M,EAAIkmE,qBAAqBjG,IAQpCrgC,iBA/FsB,SA+FL/V,EAAOpW,GACpB6X,EAAauU,YAAYhW,EAAOpW,IAQpCqsB,oBAxGsB,SAwGFjW,EAAOpW,GACvB6X,EAAasC,eAAe/D,EAAOpW,IAOvCs8F,UAhHsB,SAgHZlmF,GAAgB,OAAAF,GAAAlnB,UAAA/H,OAAN6H,EAAM2C,MAAAykB,EAAA,EAAAA,EAAA,KAAAC,EAAA,EAAAA,EAAAD,EAAAC,IAANrnB,EAAMqnB,EAAA,GAAAnnB,UAAAmnB,EACtB0B,GAAa+C,KAAb1rB,MAAA2oB,GAAkBzB,GAAlB5nB,8HAA4BM,MAShC3C,cA1HsB,WA6HlB,MAAOs1M,GAAAl1M,EAAeJ,iBAK9Bi1M,GAAA70M,EAAI6/B,YACAs5C,EAAAn5E,EAAUs/B,oBACV,SAAA4B,GAAA,MACI5V,GAAa+C,KACT8mL,EAAA71K,oBACA4B,KACZ2zK,EAAA70M,EAAI6/B,YACAs5C,EAAAn5E,EAAUu/B,sBACV,SAAA2B,GAAA,MACIyzK,GACIG,EAAkB30I,uBAClBj/B,KAEZnhC,EAAAC,EAAA+D,GAAA,SAAApM,EAAA4B,EAAAT,GAAA,uBAAAnB,GCzKA,GAAAy9M,GAAAx9M,EAAA,GAIM0C,EAAS1C,EAAQ,GAAqBsC,UAAUyD,GAEhDszG,GAOFokG,oBAPgB,WAQZ,MAAOD,GAAAp1M,EAAepB,sBAAwB,SAAW,SAU7D02M,iBAlBgB,SAkBCC,GACb,GAAMC,GAAgBvkG,EAAYokG,qBAElC,KAAKD,EAAAp1M,EAAepB,sBAChB,MAAO6vE,GAAE8mI,GAAkBnuK,KAAKouK,GAAe,EAEnD,IAAMC,GACAhnI,EAAE8mI,GAAkBnuK,KAApB,IACMouK,EADN,wBAGN,OAAIC,GAAS/6M,QACL+6M,EAAS/6M,OAAS,GAClBJ,EAAOwF,KACH,gDACAy1M,GAGDE,EAAS9+J,SAAS,YAWjC++J,uBA9CgB,WA+CZ,OAAQN,EAAAp1M,EAAepB,uBAS3B+2M,UAxDgB,SAwDNC,EAAeC,GAChBT,EAAAp1M,EAAe3B,gBAChBu3M,EAAcC,OAASA,IAU/BC,YApEgB,SAoEJF,EAAeG,GAClBX,EAAAp1M,EAAe3B,gBAChBu3M,EAAcI,SAAWD,IAKrCh2M,GAAAC,EAAAxH,IAAAN,KAAAqB,EAAA","file":"lib-jitsi-meet.min.js","sourcesContent":["(function webpackUniversalModuleDefinition(root, factory) {\n\tif(typeof exports === 'object' && typeof module === 'object')\n\t\tmodule.exports = factory();\n\telse if(typeof define === 'function' && define.amd)\n\t\tdefine([], factory);\n\telse if(typeof exports === 'object')\n\t\texports[\"JitsiMeetJS\"] = factory();\n\telse\n\t\troot[\"JitsiMeetJS\"] = factory();\n})(typeof self !== 'undefined' ? self : this, function() {\nreturn \n\n\n// WEBPACK FOOTER //\n// webpack/universalModuleDefinition"," \t// The module cache\n \tvar installedModules = {};\n\n \t// The require function\n \tfunction __webpack_require__(moduleId) {\n\n \t\t// Check if module is in cache\n \t\tif(installedModules[moduleId]) {\n \t\t\treturn installedModules[moduleId].exports;\n \t\t}\n \t\t// Create a new module (and put it into the cache)\n \t\tvar module = installedModules[moduleId] = {\n \t\t\ti: moduleId,\n \t\t\tl: false,\n \t\t\texports: {}\n \t\t};\n\n \t\t// Execute the module function\n \t\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\n\n \t\t// Flag the module as loaded\n \t\tmodule.l = true;\n\n \t\t// Return the exports of the module\n \t\treturn module.exports;\n \t}\n\n\n \t// expose the modules object (__webpack_modules__)\n \t__webpack_require__.m = modules;\n\n \t// expose the module cache\n \t__webpack_require__.c = installedModules;\n\n \t// define getter function for harmony exports\n \t__webpack_require__.d = function(exports, name, getter) {\n \t\tif(!__webpack_require__.o(exports, name)) {\n \t\t\tObject.defineProperty(exports, name, {\n \t\t\t\tconfigurable: false,\n \t\t\t\tenumerable: true,\n \t\t\t\tget: getter\n \t\t\t});\n \t\t}\n \t};\n\n \t// getDefaultExport function for compatibility with non-harmony modules\n \t__webpack_require__.n = function(module) {\n \t\tvar getter = module && module.__esModule ?\n \t\t\tfunction getDefault() { return module['default']; } :\n \t\t\tfunction getModuleExports() { return module; };\n \t\t__webpack_require__.d(getter, 'a', getter);\n \t\treturn getter;\n \t};\n\n \t// Object.prototype.hasOwnProperty.call\n \t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\n\n \t// __webpack_public_path__\n \t__webpack_require__.p = \"\";\n\n \t// Load entry module and return exports\n \treturn __webpack_require__(__webpack_require__.s = 60);\n\n\n\n// WEBPACK FOOTER //\n// webpack/bootstrap 257a7d9a32a1225f93b7","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Logger = require(\"./Logger\");\nvar LogCollector = require(\"./LogCollector\");\n\n/**\n * Definition of the log method\n * @name log_method\n * @function\n * @param {...*} log_args the arguments to be logged\n */\n/**\n * The logger's transport type definition.\n *\n * @typedef {object} LoggerTransport\n *\n * @property {log_method} trace method called to log on {@link Logger.levels.TRACE} logging level\n * @property {log_method} debug method called to log on {@link Logger.levels.DEBUG} logging level\n * @property {log_method} info method called to log on {@link Logger.levels.INFO} logging level\n * @property {log_method} log method called to log on {@link Logger.levels.LOG} logging level\n * @property {log_method} warn method called to log on {@link Logger.levels.WARN} logging level\n * @property {log_method} error method called to log on {@link Logger.levels.ERROR} logging level\n */\n\n/**\n * Map with the created loggers with ID.\n */\nvar idLoggers = {};\n\n/**\n * Array with the loggers without id.\n */\nvar loggers = [];\n\n/**\n * Log level for the lbrary.\n */\nvar curLevel = Logger.levels.TRACE;\n\n\nmodule.exports = {\n    /**\n     * Adds given {@link LoggerTransport} instance to the list of global\n     * transports which means that it'll be used by all {@link Logger}s\n     * @param {LoggerTransport} transport\n     */\n    addGlobalTransport: function(transport) {\n        Logger.addGlobalTransport(transport);\n    },\n    /**\n     * Removes given {@link LoggerTransport} instance from the list of global\n     * transports\n     * @param {LoggerTransport} transport\n     */\n    removeGlobalTransport: function(transport) {\n        Logger.removeGlobalTransport(transport);\n    },\n    /**\n     * Creates new logger.\n     * @arguments the same as Logger constructor\n     */\n    getLogger: function(id, transports, format) {\n        var logger = new Logger(curLevel, id, transports, format);\n        if(id) {\n            idLoggers[id] = idLoggers[id] || [];\n            idLoggers[id].push(logger);\n        } else {\n            loggers.push(logger);\n        }\n        return logger;\n    },\n    /**\n     * Changes the log level for the existing loggers by id.\n     * @param level the new log level.\n     * @param id if specified the level will be changed only for loggers with the\n     * same id. Otherwise the operation will affect all loggers that don't\n     * have id.\n     */\n    setLogLevelById: function(level, id) {\n        var l = id? (idLoggers[id] || []) : loggers;\n        for(var i = 0; i < l.length; i++) {\n            l[i].setLevel(level);\n        }\n    },\n    /**\n     * Changes the log level for all existing loggers.\n     * @param level the new log level.\n     */\n    setLogLevel: function (level) {\n        curLevel = level;\n        var i = 0;\n        for(; i < loggers.length; i++) {\n            loggers[i].setLevel(level);\n        }\n\n        for(var id in idLoggers) {\n            var l = idLoggers[id] || [];\n            for(i = 0; i < l.length; i++) {\n                l[i].setLevel(level);\n            }\n        }\n    },\n    /**\n     * The supported log levels.\n     */\n    levels: Logger.levels,\n    /**\n     * Exports the <tt>LogCollector</tt>.\n     */\n    LogCollector: LogCollector\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jitsi-meet-logger/lib/index.js\n// module id = 0\n// module chunks = 0","import { getLogger } from 'jitsi-meet-logger';\n\nlet browserVersion; // eslint-disable-line prefer-const\n\nlet currentBrowser;\n\nconst logger = getLogger(__filename);\n\nconst RTCBrowserType = {\n\n    RTC_BROWSER_CHROME: 'rtc_browser.chrome',\n\n    RTC_BROWSER_OPERA: 'rtc_browser.opera',\n\n    RTC_BROWSER_FIREFOX: 'rtc_browser.firefox',\n\n    RTC_BROWSER_IEXPLORER: 'rtc_browser.iexplorer',\n\n    RTC_BROWSER_EDGE: 'rtc_browser.edge',\n\n    RTC_BROWSER_SAFARI: 'rtc_browser.safari',\n\n    RTC_BROWSER_NWJS: 'rtc_browser.nwjs',\n\n    RTC_BROWSER_ELECTRON: 'rtc_browser.electron',\n\n    RTC_BROWSER_REACT_NATIVE: 'rtc_browser.react-native',\n\n    /**\n     * Tells whether or not the <tt>MediaStream/tt> is removed from\n     * the <tt>PeerConnection</tt> and disposed on video mute (in order to turn\n     * off the camera device).\n     * @return {boolean} <tt>true</tt> if the current browser supports this\n     * strategy or <tt>false</tt> otherwise.\n     */\n    doesVideoMuteByStreamRemove() {\n        return !(\n            RTCBrowserType.isFirefox()\n            || RTCBrowserType.isEdge()\n            || RTCBrowserType.isSafariWithWebrtc()\n        );\n    },\n\n    /**\n     * Gets current browser type.\n     * @returns {string}\n     */\n    getBrowserType() {\n        return currentBrowser;\n    },\n\n    /**\n     * Gets current browser name, split from the type.\n     * @returns {string}\n     */\n    getBrowserName() {\n        const isAndroid = navigator.userAgent.indexOf('Android') !== -1;\n\n        if (isAndroid) {\n            return 'android';\n        }\n\n        return currentBrowser.split('rtc_browser.')[1];\n    },\n\n    /**\n     * Checks if current browser is Chrome.\n     * @returns {boolean}\n     */\n    isChrome() {\n        return currentBrowser === RTCBrowserType.RTC_BROWSER_CHROME;\n    },\n\n    /**\n     * Checks if current browser is Opera.\n     * @returns {boolean}\n     */\n    isOpera() {\n        return currentBrowser === RTCBrowserType.RTC_BROWSER_OPERA;\n    },\n\n    /**\n     * Checks if current browser is Firefox.\n     * @returns {boolean}\n     */\n    isFirefox() {\n        return currentBrowser === RTCBrowserType.RTC_BROWSER_FIREFOX;\n    },\n\n    /**\n     * Checks if current browser is Internet Explorer.\n     * @returns {boolean}\n     */\n    isIExplorer() {\n        return currentBrowser === RTCBrowserType.RTC_BROWSER_IEXPLORER;\n    },\n\n    /**\n     * Checks if current browser is Microsoft Edge.\n     * @returns {boolean}\n     */\n    isEdge() {\n        return currentBrowser === RTCBrowserType.RTC_BROWSER_EDGE;\n    },\n\n    /**\n     * Checks if current browser is Safari.\n     * @returns {boolean}\n     */\n    isSafari() {\n        return currentBrowser === RTCBrowserType.RTC_BROWSER_SAFARI;\n    },\n\n    /**\n     * Checks if current browser is a Safari and a version of Safari that\n     * supports native webrtc.\n     *\n     * @returns {boolean}\n     */\n    isSafariWithWebrtc() {\n        return RTCBrowserType.isSafari()\n            && RTCBrowserType.getSafariVersion() >= 11;\n    },\n\n    /**\n     * Checks if current environment is NWJS.\n     * @returns {boolean}\n     */\n    isNWJS() {\n        return currentBrowser === RTCBrowserType.RTC_BROWSER_NWJS;\n    },\n\n    /**\n     * Checks if current environment is Electron.\n     * @returns {boolean}\n     */\n    isElectron() {\n        return currentBrowser === RTCBrowserType.RTC_BROWSER_ELECTRON;\n    },\n\n    /**\n     * Check whether or not the current browser support peer to peer connections\n     * @return {boolean} <tt>true</tt> if p2p is supported or <tt>false</tt>\n     * otherwise.\n     */\n    isP2PSupported() {\n        return !RTCBrowserType.isEdge();\n    },\n\n    /**\n     * Checks if current environment is React Native.\n     * @returns {boolean}\n     */\n    isReactNative() {\n        return currentBrowser === RTCBrowserType.RTC_BROWSER_REACT_NATIVE;\n    },\n\n    /**\n     * Checks if Temasys RTC plugin is used.\n     * @returns {boolean}\n     */\n    isTemasysPluginUsed() {\n        // Temasys do not support Microsoft Edge:\n        // http://support.temasys.com.sg/support/solutions/articles/\n        // 5000654345-can-the-temasys-webrtc-plugin-be-used-with-microsoft-edge-\n        return (\n            (RTCBrowserType.isSafari()\n                && !RTCBrowserType.isSafariWithWebrtc())\n            || (RTCBrowserType.isIExplorer()\n                && RTCBrowserType.getIExplorerVersion() < 12)\n        );\n    },\n\n    /**\n     * Returns whether or not the current browser should be using the new\n     * getUserMedia flow, which utilizes the adapter shim. This method should\n     * be temporary and used while migrating all browsers to use adapter and\n     * the new getUserMedia.\n     *\n     * @returns {boolean}\n     */\n    usesNewGumFlow() {\n        return (RTCBrowserType.isChrome()\n                && RTCBrowserType.getChromeVersion() >= 61)\n            || RTCBrowserType.isFirefox()\n            || RTCBrowserType.isSafariWithWebrtc();\n\n    },\n\n    /**\n     * Checks if the current browser triggers 'onmute'/'onunmute' events when\n     * user's connection is interrupted and the video stops playback.\n     * @returns {*|boolean} 'true' if the event is supported or 'false'\n     * otherwise.\n     */\n    isVideoMuteOnConnInterruptedSupported() {\n        return RTCBrowserType.isChrome() || RTCBrowserType.isElectron();\n    },\n\n    /**\n     * Returns Firefox version.\n     * @returns {number|null}\n     */\n    getFirefoxVersion() {\n        return RTCBrowserType.isFirefox() ? browserVersion : null;\n    },\n\n    /**\n     * Returns Chrome version.\n     * @returns {number|null}\n     */\n    getChromeVersion() {\n        return RTCBrowserType.isChrome() ? browserVersion : null;\n    },\n\n    /**\n     * Returns Opera version.\n     * @returns {number|null}\n     */\n    getOperaVersion() {\n        return RTCBrowserType.isOpera() ? browserVersion : null;\n    },\n\n    /**\n     * Returns Internet Explorer version.\n     *\n     * @returns {number|null}\n     */\n    getIExplorerVersion() {\n        return RTCBrowserType.isIExplorer() ? browserVersion : null;\n    },\n\n    /**\n     * Returns Edge version.\n     *\n     * @returns {number|null}\n     */\n    getEdgeVersion() {\n        return RTCBrowserType.isEdge() ? browserVersion : null;\n    },\n\n    /**\n     * Returns Safari version.\n     *\n     * @returns {number|null}\n     */\n    getSafariVersion() {\n        return RTCBrowserType.isSafari ? browserVersion : null;\n    },\n\n    usesPlanB() {\n        return !RTCBrowserType.usesUnifiedPlan();\n    },\n\n    usesUnifiedPlan() {\n        return RTCBrowserType.isFirefox();\n    },\n\n    /**\n     * Checks if the current browser reports upload and download bandwidth\n     * statistics.\n     * @return {boolean}\n     */\n    supportsBandwidthStatistics() {\n        // FIXME bandwidth stats are currently not implemented for FF on our\n        // side, but not sure if not possible ?\n        return !RTCBrowserType.isFirefox() && !RTCBrowserType.isEdge();\n    },\n\n    /**\n     * Checks if the current browser supports WebRTC datachannels.\n     * @return {boolean}\n     */\n    supportsDataChannels() {\n        // NOTE: Edge does not yet implement DataChannel.\n        return !RTCBrowserType.isEdge();\n    },\n\n    /**\n     * Checks if the current browser reports round trip time statistics for\n     * the ICE candidate pair.\n     * @return {boolean}\n     */\n    supportsRTTStatistics() {\n        // Firefox does not seem to report RTT for ICE candidate pair:\n        // eslint-disable-next-line max-len\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcicecandidatepairstats-currentroundtriptime\n        // It does report mozRTT for RTP streams, but at the time of this\n        // writing it's value does not make sense most of the time\n        // (is reported as 1):\n        // https://bugzilla.mozilla.org/show_bug.cgi?id=1241066\n        // For Chrome and others we rely on 'googRtt'.\n        return !RTCBrowserType.isFirefox() && !RTCBrowserType.isEdge();\n    },\n\n    /**\n     * Whether jitsi-meet supports simulcast on the current browser.\n     * @returns {boolean}\n     */\n    supportsSimulcast() {\n        return RTCBrowserType.isChrome()\n            || RTCBrowserType.isFirefox()\n            || RTCBrowserType.isElectron()\n            || RTCBrowserType.isNWJS()\n            || RTCBrowserType.isReactNative();\n    },\n\n    supportsRtx() {\n        return !RTCBrowserType.isFirefox();\n    },\n\n    supportsRtpSender() {\n        return RTCBrowserType.isFirefox();\n    },\n\n    /**\n     * Returns whether or not the current browser can support capturing video,\n     * be it camera or desktop, and displaying received video.\n     *\n     * @returns {boolean}\n     */\n    supportsVideo() {\n        // Currently Safari using webrtc/adapter does not support video due in\n        // part to Safari only supporting H264 and the bridge sending VP8.\n        return !RTCBrowserType.isSafariWithWebrtc();\n    }\n};\n\n/**\n * detectOpera() must be called before detectChrome() !!!\n * otherwise Opera wil be detected as Chrome\n */\nfunction detectChrome() {\n    if (navigator.webkitGetUserMedia) {\n        currentBrowser = RTCBrowserType.RTC_BROWSER_CHROME;\n\n        // We can assume that user agent is chrome, because it's enforced when\n        // 'ext' streaming method is set.\n        const verMatch = navigator.userAgent.match(/chrome\\/(\\d+)\\./i);\n        const ver = verMatch ? parseInt(verMatch[1], 10) : 'undefined';\n\n        logger.log(`This appears to be Chrome, ver: ${ver}`);\n\n        return ver;\n    }\n\n    return null;\n}\n\n/**\n *\n */\nfunction detectOpera() {\n    const userAgent = navigator.userAgent;\n\n    if (userAgent.match(/Opera|OPR/)) {\n        currentBrowser = RTCBrowserType.RTC_BROWSER_OPERA;\n        const version = userAgent.match(/(Opera|OPR) ?\\/?(\\d+)\\.?/)[2];\n\n        logger.info(`This appears to be Opera, ver: ${version}`);\n\n        return version;\n    }\n\n    return null;\n}\n\n/**\n *\n */\nfunction detectFirefox() {\n    if (navigator.mozGetUserMedia) {\n        currentBrowser = RTCBrowserType.RTC_BROWSER_FIREFOX;\n        const version = parseInt(\n            navigator.userAgent.match(/Firefox\\/([0-9]+)\\./)[1], 10);\n\n        logger.log(`This appears to be Firefox, ver: ${version}`);\n\n        return version;\n    }\n\n    return null;\n}\n\n/**\n *\n */\nfunction detectSafari() {\n    if (/^((?!chrome).)*safari/i.test(navigator.userAgent)) {\n        currentBrowser = RTCBrowserType.RTC_BROWSER_SAFARI;\n\n        const matchedVersionParts\n            = navigator.userAgent.match(/version\\/(\\d+(\\.\\d+)?)/i);\n        const versionString = matchedVersionParts && matchedVersionParts[1];\n        const version = versionString ? parseInt(versionString, 10) : -1;\n\n        logger.info(`This appears to be Safari, ver: ${version}`);\n\n        return version;\n    }\n\n    return null;\n}\n\n/**\n * Detects IE.\n */\nfunction detectIE() {\n    let version;\n    const ua = window.navigator.userAgent;\n\n    const msie = ua.indexOf('MSIE ');\n\n    if (msie > 0) {\n        // IE 10 or older => return version number\n        version = parseInt(ua.substring(msie + 5, ua.indexOf('.', msie)), 10);\n    }\n\n    const trident = ua.indexOf('Trident/');\n\n    if (!version && trident > 0) {\n        // IE 11 => return version number\n        const rv = ua.indexOf('rv:');\n\n        version = parseInt(ua.substring(rv + 3, ua.indexOf('.', rv)), 10);\n    }\n\n    if (version) {\n        currentBrowser = RTCBrowserType.RTC_BROWSER_IEXPLORER;\n        logger.info(`This appears to be IExplorer, ver: ${version}`);\n    }\n\n    return version;\n}\n\n/**\n * Detects Edge.\n */\nfunction detectEdge() {\n    let version;\n    const ua = window.navigator.userAgent;\n\n    const edge = ua.indexOf('Edge/');\n\n    if (!version && edge > 0) {\n        version = parseInt(ua.substring(edge + 5, ua.indexOf('.', edge)), 10);\n    }\n\n    if (version) {\n        currentBrowser = RTCBrowserType.RTC_BROWSER_EDGE;\n        logger.info(`This appears to be Edge, ver: ${version}`);\n    }\n\n    return version;\n}\n\n/**\n * Detects Electron environment.\n */\nfunction detectElectron() {\n    const userAgent = navigator.userAgent;\n\n    if (userAgent.match(/Electron/)) {\n        currentBrowser = RTCBrowserType.RTC_BROWSER_ELECTRON;\n        const version = userAgent.match(/Electron\\/([\\d.]+)/)[1];\n\n        logger.info(`This appears to be Electron, ver: ${version}`);\n\n        return version;\n    }\n\n    return null;\n}\n\n/**\n *\n */\nfunction detectNWJS() {\n    const userAgent = navigator.userAgent;\n\n    if (userAgent.match(/JitsiMeetNW/)) {\n        currentBrowser = RTCBrowserType.RTC_BROWSER_NWJS;\n        const version = userAgent.match(/JitsiMeetNW\\/([\\d.]+)/)[1];\n\n        logger.info(`This appears to be JitsiMeetNW, ver: ${version}`);\n\n        return version;\n    }\n\n    return null;\n}\n\n/**\n *\n */\nfunction detectReactNative() {\n    const match\n        = navigator.userAgent.match(/\\b(react[ \\t_-]*native)(?:\\/(\\S+))?/i);\n    let version;\n\n    // If we're remote debugging a React Native app, it may be treated as\n    // Chrome. Check navigator.product as well and always return some version\n    // even if we can't get the real one.\n\n    if (match || navigator.product === 'ReactNative') {\n        currentBrowser = RTCBrowserType.RTC_BROWSER_REACT_NATIVE;\n        let name;\n\n        if (match && match.length > 2) {\n            name = match[1];\n            version = match[2];\n        }\n        name || (name = 'react-native');\n        version || (version = 'unknown');\n        console.info(`This appears to be ${name}, ver: ${version}`);\n    } else {\n        // We're not running in a React Native environment.\n        version = null;\n    }\n\n    return version;\n}\n\n/**\n *\n */\nfunction detectBrowser() {\n    let version;\n    const detectors = [\n        detectReactNative,\n        detectElectron,\n        detectNWJS,\n        detectOpera,\n        detectChrome,\n        detectFirefox,\n        detectEdge,\n        detectIE,\n        detectSafari\n    ];\n\n    // Try all browser detectors\n\n    for (let i = 0; i < detectors.length; i++) {\n        version = detectors[i]();\n        if (version) {\n            return version;\n        }\n    }\n    logger.warn('Browser type defaults to Safari ver 1');\n    currentBrowser = RTCBrowserType.RTC_BROWSER_SAFARI;\n\n    return 1;\n}\n\nbrowserVersion = detectBrowser();\n\nexport default RTCBrowserType;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/RTCBrowserType.js","/** File: strophe.js\n *  A JavaScript library for writing XMPP clients.\n *\n *  This library uses either Bidirectional-streams Over Synchronous HTTP (BOSH)\n *  to emulate a persistent, stateful, two-way connection to an XMPP server or\n *  alternatively WebSockets.\n *\n *  More information on BOSH can be found in XEP 124.\n *  For more information on XMPP-over WebSocket see this RFC:\n *  http://tools.ietf.org/html/rfc7395\n */\n\n/* All of the Strophe globals are defined in this special function below so\n * that references to the globals become closures.  This will ensure that\n * on page reload, these references will still be available to callbacks\n * that are still executing.\n */\n\n/* jshint ignore:start */\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        //Allow using this built library as an AMD module\n        //in another project. That other project will only\n        //see this AMD call, not the internal modules in\n        //the closure below.\n        define([], factory);\n    } else {\n        //Browser globals case.\n        var wrapper = factory();\n        root.Strophe        = wrapper.Strophe;\n        root.$build         = wrapper.$build;\n        root.$iq            = wrapper.$iq;\n        root.$msg           = wrapper.$msg;\n        root.$pres          = wrapper.$pres;\n        root.SHA1           = wrapper.SHA1;\n        root.MD5            = wrapper.MD5;\n        root.b64_hmac_sha1  = wrapper.b64_hmac_sha1;\n        root.b64_sha1       = wrapper.b64_sha1;\n        root.str_hmac_sha1  = wrapper.str_hmac_sha1;\n        root.str_sha1       = wrapper.str_sha1;\n    }\n}(this, function () {\n    //almond, and your modules will be inlined here\n/* jshint ignore:end */\n/**\n * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.\n * Released under MIT license, http://github.com/requirejs/almond/LICENSE\n */\n//Going sloppy to avoid 'use strict' string cost, but strict practices should\n//be followed.\n/*global setTimeout: false */\n\nvar requirejs, require, define;\n(function (undef) {\n    var main, req, makeMap, handlers,\n        defined = {},\n        waiting = {},\n        config = {},\n        defining = {},\n        hasOwn = Object.prototype.hasOwnProperty,\n        aps = [].slice,\n        jsSuffixRegExp = /\\.js$/;\n\n    function hasProp(obj, prop) {\n        return hasOwn.call(obj, prop);\n    }\n\n    /**\n     * Given a relative module name, like ./something, normalize it to\n     * a real name that can be mapped to a path.\n     * @param {String} name the relative name\n     * @param {String} baseName a real name that the name arg is relative\n     * to.\n     * @returns {String} normalized name\n     */\n    function normalize(name, baseName) {\n        var nameParts, nameSegment, mapValue, foundMap, lastIndex,\n            foundI, foundStarMap, starI, i, j, part, normalizedBaseParts,\n            baseParts = baseName && baseName.split(\"/\"),\n            map = config.map,\n            starMap = (map && map['*']) || {};\n\n        //Adjust any relative paths.\n        if (name) {\n            name = name.split('/');\n            lastIndex = name.length - 1;\n\n            // If wanting node ID compatibility, strip .js from end\n            // of IDs. Have to do this here, and not in nameToUrl\n            // because node allows either .js or non .js to map\n            // to same file.\n            if (config.nodeIdCompat && jsSuffixRegExp.test(name[lastIndex])) {\n                name[lastIndex] = name[lastIndex].replace(jsSuffixRegExp, '');\n            }\n\n            // Starts with a '.' so need the baseName\n            if (name[0].charAt(0) === '.' && baseParts) {\n                //Convert baseName to array, and lop off the last part,\n                //so that . matches that 'directory' and not name of the baseName's\n                //module. For instance, baseName of 'one/two/three', maps to\n                //'one/two/three.js', but we want the directory, 'one/two' for\n                //this normalization.\n                normalizedBaseParts = baseParts.slice(0, baseParts.length - 1);\n                name = normalizedBaseParts.concat(name);\n            }\n\n            //start trimDots\n            for (i = 0; i < name.length; i++) {\n                part = name[i];\n                if (part === '.') {\n                    name.splice(i, 1);\n                    i -= 1;\n                } else if (part === '..') {\n                    // If at the start, or previous value is still ..,\n                    // keep them so that when converted to a path it may\n                    // still work when converted to a path, even though\n                    // as an ID it is less than ideal. In larger point\n                    // releases, may be better to just kick out an error.\n                    if (i === 0 || (i === 1 && name[2] === '..') || name[i - 1] === '..') {\n                        continue;\n                    } else if (i > 0) {\n                        name.splice(i - 1, 2);\n                        i -= 2;\n                    }\n                }\n            }\n            //end trimDots\n\n            name = name.join('/');\n        }\n\n        //Apply map config if available.\n        if ((baseParts || starMap) && map) {\n            nameParts = name.split('/');\n\n            for (i = nameParts.length; i > 0; i -= 1) {\n                nameSegment = nameParts.slice(0, i).join(\"/\");\n\n                if (baseParts) {\n                    //Find the longest baseName segment match in the config.\n                    //So, do joins on the biggest to smallest lengths of baseParts.\n                    for (j = baseParts.length; j > 0; j -= 1) {\n                        mapValue = map[baseParts.slice(0, j).join('/')];\n\n                        //baseName segment has  config, find if it has one for\n                        //this name.\n                        if (mapValue) {\n                            mapValue = mapValue[nameSegment];\n                            if (mapValue) {\n                                //Match, update name to the new value.\n                                foundMap = mapValue;\n                                foundI = i;\n                                break;\n                            }\n                        }\n                    }\n                }\n\n                if (foundMap) {\n                    break;\n                }\n\n                //Check for a star map match, but just hold on to it,\n                //if there is a shorter segment match later in a matching\n                //config, then favor over this star map.\n                if (!foundStarMap && starMap && starMap[nameSegment]) {\n                    foundStarMap = starMap[nameSegment];\n                    starI = i;\n                }\n            }\n\n            if (!foundMap && foundStarMap) {\n                foundMap = foundStarMap;\n                foundI = starI;\n            }\n\n            if (foundMap) {\n                nameParts.splice(0, foundI, foundMap);\n                name = nameParts.join('/');\n            }\n        }\n\n        return name;\n    }\n\n    function makeRequire(relName, forceSync) {\n        return function () {\n            //A version of a require function that passes a moduleName\n            //value for items that may need to\n            //look up paths relative to the moduleName\n            var args = aps.call(arguments, 0);\n\n            //If first arg is not require('string'), and there is only\n            //one arg, it is the array form without a callback. Insert\n            //a null so that the following concat is correct.\n            if (typeof args[0] !== 'string' && args.length === 1) {\n                args.push(null);\n            }\n            return req.apply(undef, args.concat([relName, forceSync]));\n        };\n    }\n\n    function makeNormalize(relName) {\n        return function (name) {\n            return normalize(name, relName);\n        };\n    }\n\n    function makeLoad(depName) {\n        return function (value) {\n            defined[depName] = value;\n        };\n    }\n\n    function callDep(name) {\n        if (hasProp(waiting, name)) {\n            var args = waiting[name];\n            delete waiting[name];\n            defining[name] = true;\n            main.apply(undef, args);\n        }\n\n        if (!hasProp(defined, name) && !hasProp(defining, name)) {\n            throw new Error('No ' + name);\n        }\n        return defined[name];\n    }\n\n    //Turns a plugin!resource to [plugin, resource]\n    //with the plugin being undefined if the name\n    //did not have a plugin prefix.\n    function splitPrefix(name) {\n        var prefix,\n            index = name ? name.indexOf('!') : -1;\n        if (index > -1) {\n            prefix = name.substring(0, index);\n            name = name.substring(index + 1, name.length);\n        }\n        return [prefix, name];\n    }\n\n    //Creates a parts array for a relName where first part is plugin ID,\n    //second part is resource ID. Assumes relName has already been normalized.\n    function makeRelParts(relName) {\n        return relName ? splitPrefix(relName) : [];\n    }\n\n    /**\n     * Makes a name map, normalizing the name, and using a plugin\n     * for normalization if necessary. Grabs a ref to plugin\n     * too, as an optimization.\n     */\n    makeMap = function (name, relParts) {\n        var plugin,\n            parts = splitPrefix(name),\n            prefix = parts[0],\n            relResourceName = relParts[1];\n\n        name = parts[1];\n\n        if (prefix) {\n            prefix = normalize(prefix, relResourceName);\n            plugin = callDep(prefix);\n        }\n\n        //Normalize according\n        if (prefix) {\n            if (plugin && plugin.normalize) {\n                name = plugin.normalize(name, makeNormalize(relResourceName));\n            } else {\n                name = normalize(name, relResourceName);\n            }\n        } else {\n            name = normalize(name, relResourceName);\n            parts = splitPrefix(name);\n            prefix = parts[0];\n            name = parts[1];\n            if (prefix) {\n                plugin = callDep(prefix);\n            }\n        }\n\n        //Using ridiculous property names for space reasons\n        return {\n            f: prefix ? prefix + '!' + name : name, //fullName\n            n: name,\n            pr: prefix,\n            p: plugin\n        };\n    };\n\n    function makeConfig(name) {\n        return function () {\n            return (config && config.config && config.config[name]) || {};\n        };\n    }\n\n    handlers = {\n        require: function (name) {\n            return makeRequire(name);\n        },\n        exports: function (name) {\n            var e = defined[name];\n            if (typeof e !== 'undefined') {\n                return e;\n            } else {\n                return (defined[name] = {});\n            }\n        },\n        module: function (name) {\n            return {\n                id: name,\n                uri: '',\n                exports: defined[name],\n                config: makeConfig(name)\n            };\n        }\n    };\n\n    main = function (name, deps, callback, relName) {\n        var cjsModule, depName, ret, map, i, relParts,\n            args = [],\n            callbackType = typeof callback,\n            usingExports;\n\n        //Use name if no relName\n        relName = relName || name;\n        relParts = makeRelParts(relName);\n\n        //Call the callback to define the module, if necessary.\n        if (callbackType === 'undefined' || callbackType === 'function') {\n            //Pull out the defined dependencies and pass the ordered\n            //values to the callback.\n            //Default to [require, exports, module] if no deps\n            deps = !deps.length && callback.length ? ['require', 'exports', 'module'] : deps;\n            for (i = 0; i < deps.length; i += 1) {\n                map = makeMap(deps[i], relParts);\n                depName = map.f;\n\n                //Fast path CommonJS standard dependencies.\n                if (depName === \"require\") {\n                    args[i] = handlers.require(name);\n                } else if (depName === \"exports\") {\n                    //CommonJS module spec 1.1\n                    args[i] = handlers.exports(name);\n                    usingExports = true;\n                } else if (depName === \"module\") {\n                    //CommonJS module spec 1.1\n                    cjsModule = args[i] = handlers.module(name);\n                } else if (hasProp(defined, depName) ||\n                           hasProp(waiting, depName) ||\n                           hasProp(defining, depName)) {\n                    args[i] = callDep(depName);\n                } else if (map.p) {\n                    map.p.load(map.n, makeRequire(relName, true), makeLoad(depName), {});\n                    args[i] = defined[depName];\n                } else {\n                    throw new Error(name + ' missing ' + depName);\n                }\n            }\n\n            ret = callback ? callback.apply(defined[name], args) : undefined;\n\n            if (name) {\n                //If setting exports via \"module\" is in play,\n                //favor that over return value and exports. After that,\n                //favor a non-undefined return value over exports use.\n                if (cjsModule && cjsModule.exports !== undef &&\n                        cjsModule.exports !== defined[name]) {\n                    defined[name] = cjsModule.exports;\n                } else if (ret !== undef || !usingExports) {\n                    //Use the return value from the function.\n                    defined[name] = ret;\n                }\n            }\n        } else if (name) {\n            //May just be an object definition for the module. Only\n            //worry about defining if have a module name.\n            defined[name] = callback;\n        }\n    };\n\n    requirejs = require = req = function (deps, callback, relName, forceSync, alt) {\n        if (typeof deps === \"string\") {\n            if (handlers[deps]) {\n                //callback in this case is really relName\n                return handlers[deps](callback);\n            }\n            //Just return the module wanted. In this scenario, the\n            //deps arg is the module name, and second arg (if passed)\n            //is just the relName.\n            //Normalize module name, if it contains . or ..\n            return callDep(makeMap(deps, makeRelParts(callback)).f);\n        } else if (!deps.splice) {\n            //deps is a config object, not an array.\n            config = deps;\n            if (config.deps) {\n                req(config.deps, config.callback);\n            }\n            if (!callback) {\n                return;\n            }\n\n            if (callback.splice) {\n                //callback is an array, which means it is a dependency list.\n                //Adjust args if there are dependencies\n                deps = callback;\n                callback = relName;\n                relName = null;\n            } else {\n                deps = undef;\n            }\n        }\n\n        //Support require(['a'])\n        callback = callback || function () {};\n\n        //If relName is a function, it is an errback handler,\n        //so remove it.\n        if (typeof relName === 'function') {\n            relName = forceSync;\n            forceSync = alt;\n        }\n\n        //Simulate async callback;\n        if (forceSync) {\n            main(undef, deps, callback, relName);\n        } else {\n            //Using a non-zero value because of concern for what old browsers\n            //do, and latest browsers \"upgrade\" to 4 if lower value is used:\n            //http://www.whatwg.org/specs/web-apps/current-work/multipage/timers.html#dom-windowtimers-settimeout:\n            //If want a value immediately, use require('id') instead -- something\n            //that works in almond on the global level, but not guaranteed and\n            //unlikely to work in other AMD implementations.\n            setTimeout(function () {\n                main(undef, deps, callback, relName);\n            }, 4);\n        }\n\n        return req;\n    };\n\n    /**\n     * Just drops the config on the floor, but returns req in case\n     * the config return value is used.\n     */\n    req.config = function (cfg) {\n        return req(cfg);\n    };\n\n    /**\n     * Expose module registry for debugging and tooling\n     */\n    requirejs._defined = defined;\n\n    define = function (name, deps, callback) {\n        if (typeof name !== 'string') {\n            throw new Error('See almond README: incorrect module build, no module name');\n        }\n\n        //This module may not have dependencies\n        if (!deps.splice) {\n            //deps is not an array, so probably means\n            //an object literal or factory function for\n            //the value. Adjust args.\n            callback = deps;\n            deps = [];\n        }\n\n        if (!hasProp(defined, name) && !hasProp(waiting, name)) {\n            waiting[name] = [name, deps, callback];\n        }\n    };\n\n    define.amd = {\n        jQuery: true\n    };\n}());\n\ndefine(\"node_modules/almond/almond.js\", function(){});\n\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\n/* global define */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-polyfill',[], function () {\n            return factory(root);\n        });\n    } else {\n        // Browser globals\n        return factory(root);\n    }\n}(this, function (root) {\n\n/** Function: Function.prototype.bind\n *  Bind a function to an instance.\n *\n *  This Function object extension method creates a bound method similar\n *  to those in Python.  This means that the 'this' object will point\n *  to the instance you want.  See <MDC's bind() documentation at https://developer.mozilla.org/en/JavaScript/Reference/Global_Objects/Function/bind>\n *  and <Bound Functions and Function Imports in JavaScript at http://benjamin.smedbergs.us/blog/2007-01-03/bound-functions-and-function-imports-in-javascript/>\n *  for a complete explanation.\n *\n *  This extension already exists in some browsers (namely, Firefox 3), but\n *  we provide it to support those that don't.\n *\n *  Parameters:\n *    (Object) obj - The object that will become 'this' in the bound function.\n *    (Object) argN - An option argument that will be prepended to the\n *      arguments given for the function call\n *\n *  Returns:\n *    The bound function.\n */\nif (!Function.prototype.bind) {\n    Function.prototype.bind = function (obj /*, arg1, arg2, ... */) {\n        var func = this;\n        var _slice = Array.prototype.slice;\n        var _concat = Array.prototype.concat;\n        var _args = _slice.call(arguments, 1);\n        return function () {\n            return func.apply(obj ? obj : this, _concat.call(_args, _slice.call(arguments, 0)));\n        };\n    };\n}\n\n/** Function: Array.isArray\n *  This is a polyfill for the ES5 Array.isArray method.\n */\nif (!Array.isArray) {\n    Array.isArray = function(arg) {\n        return Object.prototype.toString.call(arg) === '[object Array]';\n    };\n}\n\n/** Function: Array.prototype.indexOf\n *  Return the index of an object in an array.\n *\n *  This function is not supplied by some JavaScript implementations, so\n *  we provide it if it is missing.  This code is from:\n *  http://developer.mozilla.org/En/Core_JavaScript_1.5_Reference:Objects:Array:indexOf\n *\n *  Parameters:\n *    (Object) elt - The object to look for.\n *    (Integer) from - The index from which to start looking. (optional).\n *\n *  Returns:\n *    The index of elt in the array or -1 if not found.\n */\nif (!Array.prototype.indexOf) {\n    Array.prototype.indexOf = function(elt /*, from*/) {\n        var len = this.length;\n        var from = Number(arguments[1]) || 0;\n        from = (from < 0) ? Math.ceil(from) : Math.floor(from);\n        if (from < 0) {\n            from += len;\n        }\n\n        for (; from < len; from++) {\n            if (from in this && this[from] === elt) {\n                return from;\n            }\n        }\n        return -1;\n    };\n}\n\n/** Function: Array.prototype.forEach\n *\n *  This function is not available in IE < 9\n *\n *  See <forEach on developer.mozilla.org at https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/forEach>\n */\nif (!Array.prototype.forEach) {\n    Array.prototype.forEach = function(callback, thisArg) {\n        var T, k;\n        if (this === null) {\n            throw new TypeError(' this is null or not defined');\n        }\n        // 1. Let O be the result of calling toObject() passing the\n        // |this| value as the argument.\n        var O = Object(this);\n        // 2. Let lenValue be the result of calling the Get() internal\n        // method of O with the argument \"length\".\n        // 3. Let len be toUint32(lenValue).\n        var len = O.length >>> 0;\n        // 4. If isCallable(callback) is false, throw a TypeError exception.\n        // See: http://es5.github.com/#x9.11\n        if (typeof callback !== \"function\") {\n            throw new TypeError(callback + ' is not a function');\n        }\n        // 5. If thisArg was supplied, let T be thisArg; else let\n        // T be undefined.\n        if (arguments.length > 1) {\n            T = thisArg;\n        }\n        // 6. Let k be 0\n        k = 0;\n        // 7. Repeat, while k < len\n        while (k < len) {\n            var kValue;\n            // a. Let Pk be ToString(k).\n            //        This is implicit for LHS operands of the in operator\n            // b. Let kPresent be the result of calling the HasProperty\n            //        internal method of O with argument Pk.\n            //        This step can be combined with c\n            // c. If kPresent is true, then\n            if (k in O) {\n                // i. Let kValue be the result of calling the Get internal\n                // method of O with argument Pk.\n                kValue = O[k];\n                // ii. Call the Call internal method of callback with T as\n                // the this value and argument list containing kValue, k, and O.\n                callback.call(T, kValue, k, O);\n            }\n            // d. Increase k by 1.\n            k++;\n        }\n        // 8. return undefined\n    };\n}\n\n// This code was written by Tyler Akins and has been placed in the\n// public domain.  It would be nice if you left this header intact.\n// Base64 code from Tyler Akins -- http://rumkin.com\nvar keyStr = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/=\";\nif (!root.btoa) {\n    root.btoa = function (input) {\n        /**\n         * Encodes a string in base64\n         * @param {String} input The string to encode in base64.\n         */\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        do {\n            chr1 = input.charCodeAt(i++);\n            chr2 = input.charCodeAt(i++);\n            chr3 = input.charCodeAt(i++);\n\n            enc1 = chr1 >> 2;\n            enc2 = ((chr1 & 3) << 4) | (chr2 >> 4);\n            enc3 = ((chr2 & 15) << 2) | (chr3 >> 6);\n            enc4 = chr3 & 63;\n\n            if (isNaN(chr2)) {\n                enc2 = ((chr1 & 3) << 4);\n                enc3 = enc4 = 64;\n            } else if (isNaN(chr3)) {\n                enc4 = 64;\n            }\n            output = output + keyStr.charAt(enc1) + keyStr.charAt(enc2) +\n                keyStr.charAt(enc3) + keyStr.charAt(enc4);\n        } while (i < input.length);\n        return output;\n    };\n}\n\nif (!root.atob) {\n    root.atob = function (input) {\n        /**\n         * Decodes a base64 string.\n         * @param {String} input The string to decode.\n         */\n        var output = \"\";\n        var chr1, chr2, chr3;\n        var enc1, enc2, enc3, enc4;\n        var i = 0;\n        // remove all characters that are not A-Z, a-z, 0-9, +, /, or =\n        input = input.replace(/[^A-Za-z0-9\\+\\/\\=]/g, \"\");\n        do {\n            enc1 = keyStr.indexOf(input.charAt(i++));\n            enc2 = keyStr.indexOf(input.charAt(i++));\n            enc3 = keyStr.indexOf(input.charAt(i++));\n            enc4 = keyStr.indexOf(input.charAt(i++));\n\n            chr1 = (enc1 << 2) | (enc2 >> 4);\n            chr2 = ((enc2 & 15) << 4) | (enc3 >> 2);\n            chr3 = ((enc3 & 3) << 6) | enc4;\n\n            output = output + String.fromCharCode(chr1);\n\n            if (enc3 !== 64) {\n                output = output + String.fromCharCode(chr2);\n            }\n            if (enc4 !== 64) {\n                output = output + String.fromCharCode(chr3);\n            }\n        } while (i < input.length);\n        return output;\n    };\n}\n}));\n\n/*\n * A JavaScript implementation of the Secure Hash Algorithm, SHA-1, as defined\n * in FIPS PUB 180-1\n * Version 2.1a Copyright Paul Johnston 2000 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for details.\n */\n\n/* jshint undef: true, unused: true:, noarg: true, latedef: false */\n/* global define */\n\n/* Some functions and variables have been stripped for use with Strophe */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-sha1', [],function () {\n            return factory();\n        });\n    } else {\n        // Browser globals\n        root.SHA1 = factory();\n    }\n}(this, function () {\n\n/*\n * Calculate the SHA-1 of an array of big-endian words, and a bit length\n */\nfunction core_sha1(x, len)\n{\n  /* append padding */\n  x[len >> 5] |= 0x80 << (24 - len % 32);\n  x[((len + 64 >> 9) << 4) + 15] = len;\n\n  var w = new Array(80);\n  var a =  1732584193;\n  var b = -271733879;\n  var c = -1732584194;\n  var d =  271733878;\n  var e = -1009589776;\n\n  var i, j, t, olda, oldb, oldc, oldd, olde;\n  for (i = 0; i < x.length; i += 16)\n  {\n    olda = a;\n    oldb = b;\n    oldc = c;\n    oldd = d;\n    olde = e;\n\n    for (j = 0; j < 80; j++)\n    {\n      if (j < 16) { w[j] = x[i + j]; }\n      else { w[j] = rol(w[j-3] ^ w[j-8] ^ w[j-14] ^ w[j-16], 1); }\n      t = safe_add(safe_add(rol(a, 5), sha1_ft(j, b, c, d)),\n                       safe_add(safe_add(e, w[j]), sha1_kt(j)));\n      e = d;\n      d = c;\n      c = rol(b, 30);\n      b = a;\n      a = t;\n    }\n\n    a = safe_add(a, olda);\n    b = safe_add(b, oldb);\n    c = safe_add(c, oldc);\n    d = safe_add(d, oldd);\n    e = safe_add(e, olde);\n  }\n  return [a, b, c, d, e];\n}\n\n/*\n * Perform the appropriate triplet combination function for the current\n * iteration\n */\nfunction sha1_ft(t, b, c, d)\n{\n  if (t < 20) { return (b & c) | ((~b) & d); }\n  if (t < 40) { return b ^ c ^ d; }\n  if (t < 60) { return (b & c) | (b & d) | (c & d); }\n  return b ^ c ^ d;\n}\n\n/*\n * Determine the appropriate additive constant for the current iteration\n */\nfunction sha1_kt(t)\n{\n  return (t < 20) ?  1518500249 : (t < 40) ?  1859775393 :\n         (t < 60) ? -1894007588 : -899497514;\n}\n\n/*\n * Calculate the HMAC-SHA1 of a key and some data\n */\nfunction core_hmac_sha1(key, data)\n{\n  var bkey = str2binb(key);\n  if (bkey.length > 16) { bkey = core_sha1(bkey, key.length * 8); }\n\n  var ipad = new Array(16), opad = new Array(16);\n  for (var i = 0; i < 16; i++)\n  {\n    ipad[i] = bkey[i] ^ 0x36363636;\n    opad[i] = bkey[i] ^ 0x5C5C5C5C;\n  }\n\n  var hash = core_sha1(ipad.concat(str2binb(data)), 512 + data.length * 8);\n  return core_sha1(opad.concat(hash), 512 + 160);\n}\n\n/*\n * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n * to work around bugs in some JS interpreters.\n */\nfunction safe_add(x, y)\n{\n  var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n  var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n  return (msw << 16) | (lsw & 0xFFFF);\n}\n\n/*\n * Bitwise rotate a 32-bit number to the left.\n */\nfunction rol(num, cnt)\n{\n  return (num << cnt) | (num >>> (32 - cnt));\n}\n\n/*\n * Convert an 8-bit or 16-bit string to an array of big-endian words\n * In 8-bit function, characters >255 have their hi-byte silently ignored.\n */\nfunction str2binb(str)\n{\n  var bin = [];\n  var mask = 255;\n  for (var i = 0; i < str.length * 8; i += 8)\n  {\n    bin[i>>5] |= (str.charCodeAt(i / 8) & mask) << (24 - i%32);\n  }\n  return bin;\n}\n\n/*\n * Convert an array of big-endian words to a string\n */\nfunction binb2str(bin)\n{\n  var str = \"\";\n  var mask = 255;\n  for (var i = 0; i < bin.length * 32; i += 8)\n  {\n    str += String.fromCharCode((bin[i>>5] >>> (24 - i%32)) & mask);\n  }\n  return str;\n}\n\n/*\n * Convert an array of big-endian words to a base-64 string\n */\nfunction binb2b64(binarray)\n{\n  var tab = \"ABCDEFGHIJKLMNOPQRSTUVWXYZabcdefghijklmnopqrstuvwxyz0123456789+/\";\n  var str = \"\";\n  var triplet, j;\n  for (var i = 0; i < binarray.length * 4; i += 3)\n  {\n    triplet = (((binarray[i   >> 2] >> 8 * (3 -  i   %4)) & 0xFF) << 16) |\n              (((binarray[i+1 >> 2] >> 8 * (3 - (i+1)%4)) & 0xFF) << 8 ) |\n               ((binarray[i+2 >> 2] >> 8 * (3 - (i+2)%4)) & 0xFF);\n    for (j = 0; j < 4; j++)\n    {\n      if (i * 8 + j * 6 > binarray.length * 32) { str += \"=\"; }\n      else { str += tab.charAt((triplet >> 6*(3-j)) & 0x3F); }\n    }\n  }\n  return str;\n}\n\n/*\n * These are the functions you'll usually want to call\n * They take string arguments and return either hex or base-64 encoded strings\n */\nreturn {\n    b64_hmac_sha1:  function (key, data){ return binb2b64(core_hmac_sha1(key, data)); },\n    b64_sha1:       function (s) { return binb2b64(core_sha1(str2binb(s),s.length * 8)); },\n    binb2str:       binb2str,\n    core_hmac_sha1: core_hmac_sha1,\n    str_hmac_sha1:  function (key, data){ return binb2str(core_hmac_sha1(key, data)); },\n    str_sha1:       function (s) { return binb2str(core_sha1(str2binb(s),s.length * 8)); },\n};\n}));\n\n/*\n * A JavaScript implementation of the RSA Data Security, Inc. MD5 Message\n * Digest Algorithm, as defined in RFC 1321.\n * Version 2.1 Copyright (C) Paul Johnston 1999 - 2002.\n * Other contributors: Greg Holt, Andrew Kepert, Ydnar, Lostinet\n * Distributed under the BSD License\n * See http://pajhome.org.uk/crypt/md5 for more info.\n */\n/*\n * Everything that isn't used by Strophe has been stripped here!\n */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-md5',[], function () {\n            return factory();\n        });\n    } else {\n        // Browser globals\n        root.MD5 = factory();\n    }\n}(this, function () {\n    /*\n     * Add integers, wrapping at 2^32. This uses 16-bit operations internally\n     * to work around bugs in some JS interpreters.\n     */\n    var safe_add = function (x, y) {\n        var lsw = (x & 0xFFFF) + (y & 0xFFFF);\n        var msw = (x >> 16) + (y >> 16) + (lsw >> 16);\n        return (msw << 16) | (lsw & 0xFFFF);\n    };\n\n    /*\n     * Bitwise rotate a 32-bit number to the left.\n     */\n    var bit_rol = function (num, cnt) {\n        return (num << cnt) | (num >>> (32 - cnt));\n    };\n\n    /*\n     * Convert a string to an array of little-endian words\n     */\n    var str2binl = function (str) {\n        var bin = [];\n        for(var i = 0; i < str.length * 8; i += 8)\n        {\n            bin[i>>5] |= (str.charCodeAt(i / 8) & 255) << (i%32);\n        }\n        return bin;\n    };\n\n    /*\n     * Convert an array of little-endian words to a string\n     */\n    var binl2str = function (bin) {\n        var str = \"\";\n        for(var i = 0; i < bin.length * 32; i += 8)\n        {\n            str += String.fromCharCode((bin[i>>5] >>> (i % 32)) & 255);\n        }\n        return str;\n    };\n\n    /*\n     * Convert an array of little-endian words to a hex string.\n     */\n    var binl2hex = function (binarray) {\n        var hex_tab = \"0123456789abcdef\";\n        var str = \"\";\n        for(var i = 0; i < binarray.length * 4; i++)\n        {\n            str += hex_tab.charAt((binarray[i>>2] >> ((i%4)*8+4)) & 0xF) +\n                hex_tab.charAt((binarray[i>>2] >> ((i%4)*8  )) & 0xF);\n        }\n        return str;\n    };\n\n    /*\n     * These functions implement the four basic operations the algorithm uses.\n     */\n    var md5_cmn = function (q, a, b, x, s, t) {\n        return safe_add(bit_rol(safe_add(safe_add(a, q),safe_add(x, t)), s),b);\n    };\n\n    var md5_ff = function (a, b, c, d, x, s, t) {\n        return md5_cmn((b & c) | ((~b) & d), a, b, x, s, t);\n    };\n\n    var md5_gg = function (a, b, c, d, x, s, t) {\n        return md5_cmn((b & d) | (c & (~d)), a, b, x, s, t);\n    };\n\n    var md5_hh = function (a, b, c, d, x, s, t) {\n        return md5_cmn(b ^ c ^ d, a, b, x, s, t);\n    };\n\n    var md5_ii = function (a, b, c, d, x, s, t) {\n        return md5_cmn(c ^ (b | (~d)), a, b, x, s, t);\n    };\n\n    /*\n     * Calculate the MD5 of an array of little-endian words, and a bit length\n     */\n    var core_md5 = function (x, len) {\n        /* append padding */\n        x[len >> 5] |= 0x80 << ((len) % 32);\n        x[(((len + 64) >>> 9) << 4) + 14] = len;\n\n        var a =  1732584193;\n        var b = -271733879;\n        var c = -1732584194;\n        var d =  271733878;\n\n        var olda, oldb, oldc, oldd;\n        for (var i = 0; i < x.length; i += 16)\n        {\n            olda = a;\n            oldb = b;\n            oldc = c;\n            oldd = d;\n\n            a = md5_ff(a, b, c, d, x[i+ 0], 7 , -680876936);\n            d = md5_ff(d, a, b, c, x[i+ 1], 12, -389564586);\n            c = md5_ff(c, d, a, b, x[i+ 2], 17,  606105819);\n            b = md5_ff(b, c, d, a, x[i+ 3], 22, -1044525330);\n            a = md5_ff(a, b, c, d, x[i+ 4], 7 , -176418897);\n            d = md5_ff(d, a, b, c, x[i+ 5], 12,  1200080426);\n            c = md5_ff(c, d, a, b, x[i+ 6], 17, -1473231341);\n            b = md5_ff(b, c, d, a, x[i+ 7], 22, -45705983);\n            a = md5_ff(a, b, c, d, x[i+ 8], 7 ,  1770035416);\n            d = md5_ff(d, a, b, c, x[i+ 9], 12, -1958414417);\n            c = md5_ff(c, d, a, b, x[i+10], 17, -42063);\n            b = md5_ff(b, c, d, a, x[i+11], 22, -1990404162);\n            a = md5_ff(a, b, c, d, x[i+12], 7 ,  1804603682);\n            d = md5_ff(d, a, b, c, x[i+13], 12, -40341101);\n            c = md5_ff(c, d, a, b, x[i+14], 17, -1502002290);\n            b = md5_ff(b, c, d, a, x[i+15], 22,  1236535329);\n\n            a = md5_gg(a, b, c, d, x[i+ 1], 5 , -165796510);\n            d = md5_gg(d, a, b, c, x[i+ 6], 9 , -1069501632);\n            c = md5_gg(c, d, a, b, x[i+11], 14,  643717713);\n            b = md5_gg(b, c, d, a, x[i+ 0], 20, -373897302);\n            a = md5_gg(a, b, c, d, x[i+ 5], 5 , -701558691);\n            d = md5_gg(d, a, b, c, x[i+10], 9 ,  38016083);\n            c = md5_gg(c, d, a, b, x[i+15], 14, -660478335);\n            b = md5_gg(b, c, d, a, x[i+ 4], 20, -405537848);\n            a = md5_gg(a, b, c, d, x[i+ 9], 5 ,  568446438);\n            d = md5_gg(d, a, b, c, x[i+14], 9 , -1019803690);\n            c = md5_gg(c, d, a, b, x[i+ 3], 14, -187363961);\n            b = md5_gg(b, c, d, a, x[i+ 8], 20,  1163531501);\n            a = md5_gg(a, b, c, d, x[i+13], 5 , -1444681467);\n            d = md5_gg(d, a, b, c, x[i+ 2], 9 , -51403784);\n            c = md5_gg(c, d, a, b, x[i+ 7], 14,  1735328473);\n            b = md5_gg(b, c, d, a, x[i+12], 20, -1926607734);\n\n            a = md5_hh(a, b, c, d, x[i+ 5], 4 , -378558);\n            d = md5_hh(d, a, b, c, x[i+ 8], 11, -2022574463);\n            c = md5_hh(c, d, a, b, x[i+11], 16,  1839030562);\n            b = md5_hh(b, c, d, a, x[i+14], 23, -35309556);\n            a = md5_hh(a, b, c, d, x[i+ 1], 4 , -1530992060);\n            d = md5_hh(d, a, b, c, x[i+ 4], 11,  1272893353);\n            c = md5_hh(c, d, a, b, x[i+ 7], 16, -155497632);\n            b = md5_hh(b, c, d, a, x[i+10], 23, -1094730640);\n            a = md5_hh(a, b, c, d, x[i+13], 4 ,  681279174);\n            d = md5_hh(d, a, b, c, x[i+ 0], 11, -358537222);\n            c = md5_hh(c, d, a, b, x[i+ 3], 16, -722521979);\n            b = md5_hh(b, c, d, a, x[i+ 6], 23,  76029189);\n            a = md5_hh(a, b, c, d, x[i+ 9], 4 , -640364487);\n            d = md5_hh(d, a, b, c, x[i+12], 11, -421815835);\n            c = md5_hh(c, d, a, b, x[i+15], 16,  530742520);\n            b = md5_hh(b, c, d, a, x[i+ 2], 23, -995338651);\n\n            a = md5_ii(a, b, c, d, x[i+ 0], 6 , -198630844);\n            d = md5_ii(d, a, b, c, x[i+ 7], 10,  1126891415);\n            c = md5_ii(c, d, a, b, x[i+14], 15, -1416354905);\n            b = md5_ii(b, c, d, a, x[i+ 5], 21, -57434055);\n            a = md5_ii(a, b, c, d, x[i+12], 6 ,  1700485571);\n            d = md5_ii(d, a, b, c, x[i+ 3], 10, -1894986606);\n            c = md5_ii(c, d, a, b, x[i+10], 15, -1051523);\n            b = md5_ii(b, c, d, a, x[i+ 1], 21, -2054922799);\n            a = md5_ii(a, b, c, d, x[i+ 8], 6 ,  1873313359);\n            d = md5_ii(d, a, b, c, x[i+15], 10, -30611744);\n            c = md5_ii(c, d, a, b, x[i+ 6], 15, -1560198380);\n            b = md5_ii(b, c, d, a, x[i+13], 21,  1309151649);\n            a = md5_ii(a, b, c, d, x[i+ 4], 6 , -145523070);\n            d = md5_ii(d, a, b, c, x[i+11], 10, -1120210379);\n            c = md5_ii(c, d, a, b, x[i+ 2], 15,  718787259);\n            b = md5_ii(b, c, d, a, x[i+ 9], 21, -343485551);\n\n            a = safe_add(a, olda);\n            b = safe_add(b, oldb);\n            c = safe_add(c, oldc);\n            d = safe_add(d, oldd);\n        }\n        return [a, b, c, d];\n    };\n\n    var obj = {\n        /*\n         * These are the functions you'll usually want to call.\n         * They take string arguments and return either hex or base-64 encoded\n         * strings.\n         */\n        hexdigest: function (s) {\n            return binl2hex(core_md5(str2binl(s), s.length * 8));\n        },\n\n        hash: function (s) {\n            return binl2str(core_md5(str2binl(s), s.length * 8));\n        }\n    };\n    return obj;\n}));\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-utils',[], function () {\n            return factory();\n        });\n    } else {\n        // Browser globals\n        root.stropheUtils = factory();\n    }\n}(this, function () {\n\n    var utils = {\n\n        utf16to8: function (str) {\n            var i, c;\n            var out = \"\";\n            var len = str.length;\n            for (i = 0; i < len; i++) {\n                c = str.charCodeAt(i);\n                if ((c >= 0x0000) && (c <= 0x007F)) {\n                    out += str.charAt(i);\n                } else if (c > 0x07FF) {\n                    out += String.fromCharCode(0xE0 | ((c >> 12) & 0x0F));\n                    out += String.fromCharCode(0x80 | ((c >>  6) & 0x3F));\n                    out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n                } else {\n                    out += String.fromCharCode(0xC0 | ((c >>  6) & 0x1F));\n                    out += String.fromCharCode(0x80 | ((c >>  0) & 0x3F));\n                }\n            }\n            return out;\n        },\n\n        addCookies: function (cookies) {\n            /* Parameters:\n             *  (Object) cookies - either a map of cookie names\n             *    to string values or to maps of cookie values.\n             *\n             * For example:\n             * { \"myCookie\": \"1234\" }\n             *\n             * or:\n             * { \"myCookie\": {\n             *      \"value\": \"1234\",\n             *      \"domain\": \".example.org\",\n             *      \"path\": \"/\",\n             *      \"expires\": expirationDate\n             *      }\n             *  }\n             *\n             *  These values get passed to Strophe.Connection via\n             *   options.cookies\n             */\n            var cookieName, cookieObj, isObj, cookieValue, expires, domain, path;\n            for (cookieName in (cookies || {})) {\n                expires = '';\n                domain = '';\n                path = '';\n                cookieObj = cookies[cookieName];\n                isObj = typeof cookieObj === \"object\";\n                cookieValue = escape(unescape(isObj ? cookieObj.value : cookieObj));\n                if (isObj) {\n                    expires = cookieObj.expires ? \";expires=\"+cookieObj.expires : '';\n                    domain = cookieObj.domain ? \";domain=\"+cookieObj.domain : '';\n                    path = cookieObj.path ? \";path=\"+cookieObj.path : '';\n                }\n                document.cookie =\n                    cookieName+'='+cookieValue + expires + domain + path;\n            }\n        }\n    };\n    return utils;\n}));\n\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\n/*global define, document, sessionStorage, setTimeout, clearTimeout, ActiveXObject, DOMParser, btoa, atob */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-core',[\n            'strophe-sha1',\n            'strophe-md5',\n            'strophe-utils'\n        ], function () {\n            return factory.apply(this, arguments);\n        });\n    } else {\n        // Browser globals\n        var o = factory(root.SHA1, root.MD5, root.stropheUtils);\n        root.Strophe =        o.Strophe;\n        root.$build =         o.$build;\n        root.$iq =            o.$iq;\n        root.$msg =           o.$msg;\n        root.$pres =          o.$pres;\n        root.SHA1 =           o.SHA1;\n        root.MD5 =            o.MD5;\n        root.b64_hmac_sha1 =  o.SHA1.b64_hmac_sha1;\n        root.b64_sha1 =       o.SHA1.b64_sha1;\n        root.str_hmac_sha1 =  o.SHA1.str_hmac_sha1;\n        root.str_sha1 =       o.SHA1.str_sha1;\n    }\n}(this, function (SHA1, MD5, utils) {\n\nvar Strophe;\n\n/** Function: $build\n *  Create a Strophe.Builder.\n *  This is an alias for 'new Strophe.Builder(name, attrs)'.\n *\n *  Parameters:\n *    (String) name - The root element name.\n *    (Object) attrs - The attributes for the root element in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $build(name, attrs) { return new Strophe.Builder(name, attrs); }\n\n/** Function: $msg\n *  Create a Strophe.Builder with a <message/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <message/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $msg(attrs) { return new Strophe.Builder(\"message\", attrs); }\n\n/** Function: $iq\n *  Create a Strophe.Builder with an <iq/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <iq/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $iq(attrs) { return new Strophe.Builder(\"iq\", attrs); }\n\n/** Function: $pres\n *  Create a Strophe.Builder with a <presence/> element as the root.\n *\n *  Parameters:\n *    (Object) attrs - The <presence/> element attributes in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder object.\n */\nfunction $pres(attrs) { return new Strophe.Builder(\"presence\", attrs); }\n\n/** Class: Strophe\n *  An object container for all Strophe library functions.\n *\n *  This class is just a container for all the objects and constants\n *  used in the library.  It is not meant to be instantiated, but to\n *  provide a namespace for library objects, constants, and functions.\n */\nStrophe = {\n    /** Constant: VERSION */\n    VERSION: \"1.2.14\",\n\n    /** Constants: XMPP Namespace Constants\n     *  Common namespace constants from the XMPP RFCs and XEPs.\n     *\n     *  NS.HTTPBIND - HTTP BIND namespace from XEP 124.\n     *  NS.BOSH - BOSH namespace from XEP 206.\n     *  NS.CLIENT - Main XMPP client namespace.\n     *  NS.AUTH - Legacy authentication namespace.\n     *  NS.ROSTER - Roster operations namespace.\n     *  NS.PROFILE - Profile namespace.\n     *  NS.DISCO_INFO - Service discovery info namespace from XEP 30.\n     *  NS.DISCO_ITEMS - Service discovery items namespace from XEP 30.\n     *  NS.MUC - Multi-User Chat namespace from XEP 45.\n     *  NS.SASL - XMPP SASL namespace from RFC 3920.\n     *  NS.STREAM - XMPP Streams namespace from RFC 3920.\n     *  NS.BIND - XMPP Binding namespace from RFC 3920.\n     *  NS.SESSION - XMPP Session namespace from RFC 3920.\n     *  NS.XHTML_IM - XHTML-IM namespace from XEP 71.\n     *  NS.XHTML - XHTML body namespace from XEP 71.\n     */\n    NS: {\n        HTTPBIND: \"http://jabber.org/protocol/httpbind\",\n        BOSH: \"urn:xmpp:xbosh\",\n        CLIENT: \"jabber:client\",\n        AUTH: \"jabber:iq:auth\",\n        ROSTER: \"jabber:iq:roster\",\n        PROFILE: \"jabber:iq:profile\",\n        DISCO_INFO: \"http://jabber.org/protocol/disco#info\",\n        DISCO_ITEMS: \"http://jabber.org/protocol/disco#items\",\n        MUC: \"http://jabber.org/protocol/muc\",\n        SASL: \"urn:ietf:params:xml:ns:xmpp-sasl\",\n        STREAM: \"http://etherx.jabber.org/streams\",\n        FRAMING: \"urn:ietf:params:xml:ns:xmpp-framing\",\n        BIND: \"urn:ietf:params:xml:ns:xmpp-bind\",\n        SESSION: \"urn:ietf:params:xml:ns:xmpp-session\",\n        VERSION: \"jabber:iq:version\",\n        STANZAS: \"urn:ietf:params:xml:ns:xmpp-stanzas\",\n        XHTML_IM: \"http://jabber.org/protocol/xhtml-im\",\n        XHTML: \"http://www.w3.org/1999/xhtml\"\n    },\n\n    /** Constants: XHTML_IM Namespace\n     *  contains allowed tags, tag attributes, and css properties.\n     *  Used in the createHtml function to filter incoming html into the allowed XHTML-IM subset.\n     *  See http://xmpp.org/extensions/xep-0071.html#profile-summary for the list of recommended\n     *  allowed tags and their attributes.\n     */\n    XHTML: {\n        tags: ['a','blockquote','br','cite','em','img','li','ol','p','span','strong','ul','body'],\n        attributes: {\n            'a':          ['href'],\n            'blockquote': ['style'],\n            'br':         [],\n            'cite':       ['style'],\n            'em':         [],\n            'img':        ['src', 'alt', 'style', 'height', 'width'],\n            'li':         ['style'],\n            'ol':         ['style'],\n            'p':          ['style'],\n            'span':       ['style'],\n            'strong':     [],\n            'ul':         ['style'],\n            'body':       []\n        },\n        css: ['background-color','color','font-family','font-size','font-style','font-weight','margin-left','margin-right','text-align','text-decoration'],\n        /** Function: XHTML.validTag\n         *\n         * Utility method to determine whether a tag is allowed\n         * in the XHTML_IM namespace.\n         *\n         * XHTML tag names are case sensitive and must be lower case.\n         */\n        validTag: function(tag) {\n            for (var i = 0; i < Strophe.XHTML.tags.length; i++) {\n                if (tag === Strophe.XHTML.tags[i]) {\n                    return true;\n                }\n            }\n            return false;\n        },\n        /** Function: XHTML.validAttribute\n         *\n         * Utility method to determine whether an attribute is allowed\n         * as recommended per XEP-0071\n         *\n         * XHTML attribute names are case sensitive and must be lower case.\n         */\n        validAttribute: function(tag, attribute) {\n            if (typeof Strophe.XHTML.attributes[tag] !== 'undefined' && Strophe.XHTML.attributes[tag].length > 0) {\n                for (var i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                    if (attribute === Strophe.XHTML.attributes[tag][i]) {\n                        return true;\n                    }\n                }\n            }\n        return false;\n        },\n        validCSS: function(style) {\n            for (var i = 0; i < Strophe.XHTML.css.length; i++) {\n                if (style === Strophe.XHTML.css[i]) {\n                    return true;\n                }\n            }\n            return false;\n        }\n    },\n\n    /** Constants: Connection Status Constants\n     *  Connection status constants for use by the connection handler\n     *  callback.\n     *\n     *  Status.ERROR - An error has occurred\n     *  Status.CONNECTING - The connection is currently being made\n     *  Status.CONNFAIL - The connection attempt failed\n     *  Status.AUTHENTICATING - The connection is authenticating\n     *  Status.AUTHFAIL - The authentication attempt failed\n     *  Status.CONNECTED - The connection has succeeded\n     *  Status.DISCONNECTED - The connection has been terminated\n     *  Status.DISCONNECTING - The connection is currently being terminated\n     *  Status.ATTACHED - The connection has been attached\n     *  Status.REDIRECT - The connection has been redirected\n     *  Status.CONNTIMEOUT - The connection has timed out\n     */\n    Status: {\n        ERROR: 0,\n        CONNECTING: 1,\n        CONNFAIL: 2,\n        AUTHENTICATING: 3,\n        AUTHFAIL: 4,\n        CONNECTED: 5,\n        DISCONNECTED: 6,\n        DISCONNECTING: 7,\n        ATTACHED: 8,\n        REDIRECT: 9,\n        CONNTIMEOUT: 10\n    },\n\n    /** Constants: Log Level Constants\n     *  Logging level indicators.\n     *\n     *  LogLevel.DEBUG - Debug output\n     *  LogLevel.INFO - Informational output\n     *  LogLevel.WARN - Warnings\n     *  LogLevel.ERROR - Errors\n     *  LogLevel.FATAL - Fatal errors\n     */\n    LogLevel: {\n        DEBUG: 0,\n        INFO: 1,\n        WARN: 2,\n        ERROR: 3,\n        FATAL: 4\n    },\n\n    /** PrivateConstants: DOM Element Type Constants\n     *  DOM element types.\n     *\n     *  ElementType.NORMAL - Normal element.\n     *  ElementType.TEXT - Text data element.\n     *  ElementType.FRAGMENT - XHTML fragment element.\n     */\n    ElementType: {\n        NORMAL: 1,\n        TEXT: 3,\n        CDATA: 4,\n        FRAGMENT: 11\n    },\n\n    /** PrivateConstants: Timeout Values\n     *  Timeout values for error states.  These values are in seconds.\n     *  These should not be changed unless you know exactly what you are\n     *  doing.\n     *\n     *  TIMEOUT - Timeout multiplier. A waiting request will be considered\n     *      failed after Math.floor(TIMEOUT * wait) seconds have elapsed.\n     *      This defaults to 1.1, and with default wait, 66 seconds.\n     *  SECONDARY_TIMEOUT - Secondary timeout multiplier. In cases where\n     *      Strophe can detect early failure, it will consider the request\n     *      failed if it doesn't return after\n     *      Math.floor(SECONDARY_TIMEOUT * wait) seconds have elapsed.\n     *      This defaults to 0.1, and with default wait, 6 seconds.\n     */\n    TIMEOUT: 1.1,\n    SECONDARY_TIMEOUT: 0.1,\n\n    /** Function: addNamespace\n     *  This function is used to extend the current namespaces in\n     *  Strophe.NS.  It takes a key and a value with the key being the\n     *  name of the new namespace, with its actual value.\n     *  For example:\n     *  Strophe.addNamespace('PUBSUB', \"http://jabber.org/protocol/pubsub\");\n     *\n     *  Parameters:\n     *    (String) name - The name under which the namespace will be\n     *      referenced under Strophe.NS\n     *    (String) value - The actual namespace.\n     */\n    addNamespace: function (name, value) {\n        Strophe.NS[name] = value;\n    },\n\n    /** Function: forEachChild\n     *  Map a function over some or all child elements of a given element.\n     *\n     *  This is a small convenience function for mapping a function over\n     *  some or all of the children of an element.  If elemName is null, all\n     *  children will be passed to the function, otherwise only children\n     *  whose tag names match elemName will be passed.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The element to operate on.\n     *    (String) elemName - The child element tag name filter.\n     *    (Function) func - The function to apply to each child.  This\n     *      function should take a single argument, a DOM element.\n     */\n    forEachChild: function (elem, elemName, func) {\n        var i, childNode;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            childNode = elem.childNodes[i];\n            if (childNode.nodeType === Strophe.ElementType.NORMAL &&\n                (!elemName || this.isTagEqual(childNode, elemName))) {\n                func(childNode);\n            }\n        }\n    },\n\n    /** Function: isTagEqual\n     *  Compare an element's tag name with a string.\n     *\n     *  This function is case sensitive.\n     *\n     *  Parameters:\n     *    (XMLElement) el - A DOM element.\n     *    (String) name - The element name.\n     *\n     *  Returns:\n     *    true if the element's tag name matches _el_, and false\n     *    otherwise.\n     */\n    isTagEqual: function (el, name) {\n        return el.tagName === name;\n    },\n\n    /** PrivateVariable: _xmlGenerator\n     *  _Private_ variable that caches a DOM document to\n     *  generate elements.\n     */\n    _xmlGenerator: null,\n\n    /** PrivateFunction: _makeGenerator\n     *  _Private_ function that creates a dummy XML DOM document to serve as\n     *  an element and text node generator.\n     */\n    _makeGenerator: function () {\n        var doc;\n        // IE9 does implement createDocument(); however, using it will cause the browser to leak memory on page unload.\n        // Here, we test for presence of createDocument() plus IE's proprietary documentMode attribute, which would be\n                // less than 10 in the case of IE9 and below.\n        if (document.implementation.createDocument === undefined ||\n                        document.implementation.createDocument && document.documentMode && document.documentMode < 10) {\n            doc = this._getIEXmlDom();\n            doc.appendChild(doc.createElement('strophe'));\n        } else {\n            doc = document.implementation\n                .createDocument('jabber:client', 'strophe', null);\n        }\n        return doc;\n    },\n\n    /** Function: xmlGenerator\n     *  Get the DOM document to generate elements.\n     *\n     *  Returns:\n     *    The currently used DOM document.\n     */\n    xmlGenerator: function () {\n        if (!Strophe._xmlGenerator) {\n            Strophe._xmlGenerator = Strophe._makeGenerator();\n        }\n        return Strophe._xmlGenerator;\n    },\n\n    /** PrivateFunction: _getIEXmlDom\n     *  Gets IE xml doc object\n     *\n     *  Returns:\n     *    A Microsoft XML DOM Object\n     *  See Also:\n     *    http://msdn.microsoft.com/en-us/library/ms757837%28VS.85%29.aspx\n     */\n    _getIEXmlDom : function() {\n        var doc = null;\n        var docStrings = [\n            \"Msxml2.DOMDocument.6.0\",\n            \"Msxml2.DOMDocument.5.0\",\n            \"Msxml2.DOMDocument.4.0\",\n            \"MSXML2.DOMDocument.3.0\",\n            \"MSXML2.DOMDocument\",\n            \"MSXML.DOMDocument\",\n            \"Microsoft.XMLDOM\"\n        ];\n\n        for (var d = 0; d < docStrings.length; d++) {\n            if (doc === null) {\n                try {\n                    doc = new ActiveXObject(docStrings[d]);\n                } catch (e) {\n                    doc = null;\n                }\n            } else {\n                break;\n            }\n        }\n        return doc;\n    },\n\n    /** Function: xmlElement\n     *  Create an XML DOM element.\n     *\n     *  This function creates an XML DOM element correctly across all\n     *  implementations. Note that these are not HTML DOM elements, which\n     *  aren't appropriate for XMPP stanzas.\n     *\n     *  Parameters:\n     *    (String) name - The name for the element.\n     *    (Array|Object) attrs - An optional array or object containing\n     *      key/value pairs to use as element attributes. The object should\n     *      be in the format {'key': 'value'} or {key: 'value'}. The array\n     *      should have the format [['key1', 'value1'], ['key2', 'value2']].\n     *    (String) text - The text child data for the element.\n     *\n     *  Returns:\n     *    A new XML DOM element.\n     */\n    xmlElement: function (name) {\n        if (!name) { return null; }\n\n        var node = Strophe.xmlGenerator().createElement(name);\n        // FIXME: this should throw errors if args are the wrong type or\n        // there are more than two optional args\n        var a, i, k;\n        for (a = 1; a < arguments.length; a++) {\n            var arg = arguments[a];\n            if (!arg) { continue; }\n            if (typeof(arg) === \"string\" ||\n                typeof(arg) === \"number\") {\n                node.appendChild(Strophe.xmlTextNode(arg));\n            } else if (typeof(arg) === \"object\" &&\n                       typeof(arg.sort) === \"function\") {\n                for (i = 0; i < arg.length; i++) {\n                    var attr = arg[i];\n                    if (typeof(attr) === \"object\" &&\n                        typeof(attr.sort) === \"function\" &&\n                        attr[1] !== undefined &&\n                        attr[1] !== null) {\n                        node.setAttribute(attr[0], attr[1]);\n                    }\n                }\n            } else if (typeof(arg) === \"object\") {\n                for (k in arg) {\n                    if (arg.hasOwnProperty(k)) {\n                        if (arg[k] !== undefined &&\n                            arg[k] !== null) {\n                            node.setAttribute(k, arg[k]);\n                        }\n                    }\n                }\n            }\n        }\n\n        return node;\n    },\n\n    /*  Function: xmlescape\n     *  Excapes invalid xml characters.\n     *\n     *  Parameters:\n     *     (String) text - text to escape.\n     *\n     *  Returns:\n     *      Escaped text.\n     */\n    xmlescape: function(text) {\n        text = text.replace(/\\&/g, \"&amp;\");\n        text = text.replace(/</g,  \"&lt;\");\n        text = text.replace(/>/g,  \"&gt;\");\n        text = text.replace(/'/g,  \"&apos;\");\n        text = text.replace(/\"/g,  \"&quot;\");\n        return text;\n    },\n\n    /*  Function: xmlunescape\n    *  Unexcapes invalid xml characters.\n    *\n    *  Parameters:\n    *     (String) text - text to unescape.\n    *\n    *  Returns:\n    *      Unescaped text.\n    */\n    xmlunescape: function(text) {\n        text = text.replace(/\\&amp;/g, \"&\");\n        text = text.replace(/&lt;/g,  \"<\");\n        text = text.replace(/&gt;/g,  \">\");\n        text = text.replace(/&apos;/g,  \"'\");\n        text = text.replace(/&quot;/g,  \"\\\"\");\n        return text;\n    },\n\n    /** Function: xmlTextNode\n     *  Creates an XML DOM text node.\n     *\n     *  Provides a cross implementation version of document.createTextNode.\n     *\n     *  Parameters:\n     *    (String) text - The content of the text node.\n     *\n     *  Returns:\n     *    A new XML DOM text node.\n     */\n    xmlTextNode: function (text) {\n        return Strophe.xmlGenerator().createTextNode(text);\n    },\n\n    /** Function: xmlHtmlNode\n     *  Creates an XML DOM html node.\n     *\n     *  Parameters:\n     *    (String) html - The content of the html node.\n     *\n     *  Returns:\n     *    A new XML DOM text node.\n     */\n    xmlHtmlNode: function (html) {\n        var node;\n        //ensure text is escaped\n        if (DOMParser) {\n            var parser = new DOMParser();\n            node = parser.parseFromString(html, \"text/xml\");\n        } else {\n            node = new ActiveXObject(\"Microsoft.XMLDOM\");\n            node.async=\"false\";\n            node.loadXML(html);\n        }\n        return node;\n    },\n\n    /** Function: getText\n     *  Get the concatenation of all text children of an element.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    A String with the concatenated text of all text element children.\n     */\n    getText: function (elem) {\n        if (!elem) { return null; }\n\n        var str = \"\";\n        if (elem.childNodes.length === 0 && elem.nodeType === Strophe.ElementType.TEXT) {\n            str += elem.nodeValue;\n        }\n\n        for (var i = 0; i < elem.childNodes.length; i++) {\n            if (elem.childNodes[i].nodeType === Strophe.ElementType.TEXT) {\n                str += elem.childNodes[i].nodeValue;\n            }\n        }\n\n        return Strophe.xmlescape(str);\n    },\n\n    /** Function: copyElement\n     *  Copy an XML DOM element.\n     *\n     *  This function copies a DOM element and all its descendants and returns\n     *  the new copy.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    A new, copied DOM element tree.\n     */\n    copyElement: function (elem) {\n        var i, el;\n        if (elem.nodeType === Strophe.ElementType.NORMAL) {\n            el = Strophe.xmlElement(elem.tagName);\n\n            for (i = 0; i < elem.attributes.length; i++) {\n                el.setAttribute(elem.attributes[i].nodeName,\n                                elem.attributes[i].value);\n            }\n\n            for (i = 0; i < elem.childNodes.length; i++) {\n                el.appendChild(Strophe.copyElement(elem.childNodes[i]));\n            }\n        } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n            el = Strophe.xmlGenerator().createTextNode(elem.nodeValue);\n        }\n        return el;\n    },\n\n\n    /** Function: createHtml\n     *  Copy an HTML DOM element into an XML DOM.\n     *\n     *  This function copies a DOM element and all its descendants and returns\n     *  the new copy.\n     *\n     *  Parameters:\n     *    (HTMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    A new, copied DOM element tree.\n     */\n    createHtml: function (elem) {\n        var i, el, j, tag, attribute, value, css, cssAttrs, attr, cssName, cssValue;\n        if (elem.nodeType === Strophe.ElementType.NORMAL) {\n            tag = elem.nodeName.toLowerCase(); // XHTML tags must be lower case.\n            if(Strophe.XHTML.validTag(tag)) {\n                try {\n                    el = Strophe.xmlElement(tag);\n                    for(i = 0; i < Strophe.XHTML.attributes[tag].length; i++) {\n                        attribute = Strophe.XHTML.attributes[tag][i];\n                        value = elem.getAttribute(attribute);\n                        if(typeof value === 'undefined' || value === null || value === '' || value === false || value === 0) {\n                            continue;\n                        }\n                        if(attribute === 'style' && typeof value === 'object') {\n                            if(typeof value.cssText !== 'undefined') {\n                                value = value.cssText; // we're dealing with IE, need to get CSS out\n                            }\n                        }\n                        // filter out invalid css styles\n                        if(attribute === 'style') {\n                            css = [];\n                            cssAttrs = value.split(';');\n                            for(j = 0; j < cssAttrs.length; j++) {\n                                attr = cssAttrs[j].split(':');\n                                cssName = attr[0].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\").toLowerCase();\n                                if(Strophe.XHTML.validCSS(cssName)) {\n                                    cssValue = attr[1].replace(/^\\s*/, \"\").replace(/\\s*$/, \"\");\n                                    css.push(cssName + ': ' + cssValue);\n                                }\n                            }\n                            if(css.length > 0) {\n                                value = css.join('; ');\n                                el.setAttribute(attribute, value);\n                            }\n                        } else {\n                            el.setAttribute(attribute, value);\n                        }\n                    }\n\n                    for (i = 0; i < elem.childNodes.length; i++) {\n                        el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n                    }\n                } catch(e) { // invalid elements\n                  el = Strophe.xmlTextNode('');\n                }\n            } else {\n                el = Strophe.xmlGenerator().createDocumentFragment();\n                for (i = 0; i < elem.childNodes.length; i++) {\n                    el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n                }\n            }\n        } else if (elem.nodeType === Strophe.ElementType.FRAGMENT) {\n            el = Strophe.xmlGenerator().createDocumentFragment();\n            for (i = 0; i < elem.childNodes.length; i++) {\n                el.appendChild(Strophe.createHtml(elem.childNodes[i]));\n            }\n        } else if (elem.nodeType === Strophe.ElementType.TEXT) {\n            el = Strophe.xmlTextNode(elem.nodeValue);\n        }\n        return el;\n    },\n\n    /** Function: escapeNode\n     *  Escape the node part (also called local part) of a JID.\n     *\n     *  Parameters:\n     *    (String) node - A node (or local part).\n     *\n     *  Returns:\n     *    An escaped node (or local part).\n     */\n    escapeNode: function (node) {\n        if (typeof node !== \"string\") { return node; }\n        return node.replace(/^\\s+|\\s+$/g, '')\n            .replace(/\\\\/g,  \"\\\\5c\")\n            .replace(/ /g,   \"\\\\20\")\n            .replace(/\\\"/g,  \"\\\\22\")\n            .replace(/\\&/g,  \"\\\\26\")\n            .replace(/\\'/g,  \"\\\\27\")\n            .replace(/\\//g,  \"\\\\2f\")\n            .replace(/:/g,   \"\\\\3a\")\n            .replace(/</g,   \"\\\\3c\")\n            .replace(/>/g,   \"\\\\3e\")\n            .replace(/@/g,   \"\\\\40\");\n    },\n\n    /** Function: unescapeNode\n     *  Unescape a node part (also called local part) of a JID.\n     *\n     *  Parameters:\n     *    (String) node - A node (or local part).\n     *\n     *  Returns:\n     *    An unescaped node (or local part).\n     */\n    unescapeNode: function (node) {\n        if (typeof node !== \"string\") { return node; }\n        return node.replace(/\\\\20/g, \" \")\n            .replace(/\\\\22/g, '\"')\n            .replace(/\\\\26/g, \"&\")\n            .replace(/\\\\27/g, \"'\")\n            .replace(/\\\\2f/g, \"/\")\n            .replace(/\\\\3a/g, \":\")\n            .replace(/\\\\3c/g, \"<\")\n            .replace(/\\\\3e/g, \">\")\n            .replace(/\\\\40/g, \"@\")\n            .replace(/\\\\5c/g, \"\\\\\");\n    },\n\n    /** Function: getNodeFromJid\n     *  Get the node portion of a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the node.\n     */\n    getNodeFromJid: function (jid) {\n        if (jid.indexOf(\"@\") < 0) { return null; }\n        return jid.split(\"@\")[0];\n    },\n\n    /** Function: getDomainFromJid\n     *  Get the domain portion of a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the domain.\n     */\n    getDomainFromJid: function (jid) {\n        var bare = Strophe.getBareJidFromJid(jid);\n        if (bare.indexOf(\"@\") < 0) {\n            return bare;\n        } else {\n            var parts = bare.split(\"@\");\n            parts.splice(0, 1);\n            return parts.join('@');\n        }\n    },\n\n    /** Function: getResourceFromJid\n     *  Get the resource portion of a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the resource.\n     */\n    getResourceFromJid: function (jid) {\n        var s = jid.split(\"/\");\n        if (s.length < 2) { return null; }\n        s.splice(0, 1);\n        return s.join('/');\n    },\n\n    /** Function: getBareJidFromJid\n     *  Get the bare JID from a JID String.\n     *\n     *  Parameters:\n     *    (String) jid - A JID.\n     *\n     *  Returns:\n     *    A String containing the bare JID.\n     */\n    getBareJidFromJid: function (jid) {\n        return jid ? jid.split(\"/\")[0] : null;\n    },\n\n    /** PrivateFunction: _handleError\n     *  _Private_ function that properly logs an error to the console\n     */\n    _handleError: function (e) {\n        if (typeof e.stack !== \"undefined\") {\n            Strophe.fatal(e.stack);\n        }\n        if (e.sourceURL) {\n            Strophe.fatal(\"error: \" + this.handler + \" \" + e.sourceURL + \":\" +\n                          e.line + \" - \" + e.name + \": \" + e.message);\n        } else if (e.fileName) {\n            Strophe.fatal(\"error: \" + this.handler + \" \" +\n                          e.fileName + \":\" + e.lineNumber + \" - \" +\n                          e.name + \": \" + e.message);\n        } else {\n            Strophe.fatal(\"error: \" + e.message);\n        }\n    },\n\n    /** Function: log\n     *  User overrideable logging function.\n     *\n     *  This function is called whenever the Strophe library calls any\n     *  of the logging functions.  The default implementation of this\n     *  function does nothing.  If client code wishes to handle the logging\n     *  messages, it should override this with\n     *  > Strophe.log = function (level, msg) {\n     *  >   (user code here)\n     *  > };\n     *\n     *  Please note that data sent and received over the wire is logged\n     *  via Strophe.Connection.rawInput() and Strophe.Connection.rawOutput().\n     *\n     *  The different levels and their meanings are\n     *\n     *    DEBUG - Messages useful for debugging purposes.\n     *    INFO - Informational messages.  This is mostly information like\n     *      'disconnect was called' or 'SASL auth succeeded'.\n     *    WARN - Warnings about potential problems.  This is mostly used\n     *      to report transient connection errors like request timeouts.\n     *    ERROR - Some error occurred.\n     *    FATAL - A non-recoverable fatal error occurred.\n     *\n     *  Parameters:\n     *    (Integer) level - The log level of the log message.  This will\n     *      be one of the values in Strophe.LogLevel.\n     *    (String) msg - The log message.\n     */\n    /* jshint ignore:start */\n    log: function (level, msg) {\n        return;\n    },\n    /* jshint ignore:end */\n\n    /** Function: debug\n     *  Log a message at the Strophe.LogLevel.DEBUG level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    debug: function(msg) {\n        this.log(this.LogLevel.DEBUG, msg);\n    },\n\n    /** Function: info\n     *  Log a message at the Strophe.LogLevel.INFO level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    info: function (msg) {\n        this.log(this.LogLevel.INFO, msg);\n    },\n\n    /** Function: warn\n     *  Log a message at the Strophe.LogLevel.WARN level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    warn: function (msg) {\n        this.log(this.LogLevel.WARN, msg);\n    },\n\n    /** Function: error\n     *  Log a message at the Strophe.LogLevel.ERROR level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    error: function (msg) {\n        this.log(this.LogLevel.ERROR, msg);\n    },\n\n    /** Function: fatal\n     *  Log a message at the Strophe.LogLevel.FATAL level.\n     *\n     *  Parameters:\n     *    (String) msg - The log message.\n     */\n    fatal: function (msg) {\n        this.log(this.LogLevel.FATAL, msg);\n    },\n\n    /** Function: serialize\n     *  Render a DOM element and all descendants to a String.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    The serialized element tree as a String.\n     */\n    serialize: function (elem) {\n        var result;\n\n        if (!elem) { return null; }\n\n        if (typeof(elem.tree) === \"function\") {\n            elem = elem.tree();\n        }\n\n        var nodeName = elem.nodeName;\n        var i, child;\n\n        if (elem.getAttribute(\"_realname\")) {\n            nodeName = elem.getAttribute(\"_realname\");\n        }\n\n        result = \"<\" + nodeName;\n        for (i = 0; i < elem.attributes.length; i++) {\n             if(elem.attributes[i].nodeName !== \"_realname\") {\n               result += \" \" + elem.attributes[i].nodeName +\n                   \"='\" + Strophe.xmlescape(elem.attributes[i].value) + \"'\";\n             }\n        }\n\n        if (elem.childNodes.length > 0) {\n            result += \">\";\n            for (i = 0; i < elem.childNodes.length; i++) {\n                child = elem.childNodes[i];\n                switch( child.nodeType ){\n                  case Strophe.ElementType.NORMAL:\n                    // normal element, so recurse\n                    result += Strophe.serialize(child);\n                    break;\n                  case Strophe.ElementType.TEXT:\n                    // text element to escape values\n                    result += Strophe.xmlescape(child.nodeValue);\n                    break;\n                  case Strophe.ElementType.CDATA:\n                    // cdata section so don't escape values\n                    result += \"<![CDATA[\"+child.nodeValue+\"]]>\";\n                }\n            }\n            result += \"</\" + nodeName + \">\";\n        } else {\n            result += \"/>\";\n        }\n\n        return result;\n    },\n\n    /** PrivateVariable: _requestId\n     *  _Private_ variable that keeps track of the request ids for\n     *  connections.\n     */\n    _requestId: 0,\n\n    /** PrivateVariable: Strophe.connectionPlugins\n     *  _Private_ variable Used to store plugin names that need\n     *  initialization on Strophe.Connection construction.\n     */\n    _connectionPlugins: {},\n\n    /** Function: addConnectionPlugin\n     *  Extends the Strophe.Connection object with the given plugin.\n     *\n     *  Parameters:\n     *    (String) name - The name of the extension.\n     *    (Object) ptype - The plugin's prototype.\n     */\n    addConnectionPlugin: function (name, ptype) {\n        Strophe._connectionPlugins[name] = ptype;\n    }\n};\n\n/** Class: Strophe.Builder\n *  XML DOM builder.\n *\n *  This object provides an interface similar to JQuery but for building\n *  DOM elements easily and rapidly.  All the functions except for toString()\n *  and tree() return the object, so calls can be chained.  Here's an\n *  example using the $iq() builder helper.\n *  > $iq({to: 'you', from: 'me', type: 'get', id: '1'})\n *  >     .c('query', {xmlns: 'strophe:example'})\n *  >     .c('example')\n *  >     .toString()\n *\n *  The above generates this XML fragment\n *  > <iq to='you' from='me' type='get' id='1'>\n *  >   <query xmlns='strophe:example'>\n *  >     <example/>\n *  >   </query>\n *  > </iq>\n *  The corresponding DOM manipulations to get a similar fragment would be\n *  a lot more tedious and probably involve several helper variables.\n *\n *  Since adding children makes new operations operate on the child, up()\n *  is provided to traverse up the tree.  To add two children, do\n *  > builder.c('child1', ...).up().c('child2', ...)\n *  The next operation on the Builder will be relative to the second child.\n */\n\n/** Constructor: Strophe.Builder\n *  Create a Strophe.Builder object.\n *\n *  The attributes should be passed in object notation.  For example\n *  > var b = new Builder('message', {to: 'you', from: 'me'});\n *  or\n *  > var b = new Builder('messsage', {'xml:lang': 'en'});\n *\n *  Parameters:\n *    (String) name - The name of the root element.\n *    (Object) attrs - The attributes for the root element in object notation.\n *\n *  Returns:\n *    A new Strophe.Builder.\n */\nStrophe.Builder = function (name, attrs) {\n    // Set correct namespace for jabber:client elements\n    if (name === \"presence\" || name === \"message\" || name === \"iq\") {\n        if (attrs && !attrs.xmlns) {\n            attrs.xmlns = Strophe.NS.CLIENT;\n        } else if (!attrs) {\n            attrs = {xmlns: Strophe.NS.CLIENT};\n        }\n    }\n\n    // Holds the tree being built.\n    this.nodeTree = Strophe.xmlElement(name, attrs);\n\n    // Points to the current operation node.\n    this.node = this.nodeTree;\n};\n\nStrophe.Builder.prototype = {\n    /** Function: tree\n     *  Return the DOM tree.\n     *\n     *  This function returns the current DOM tree as an element object.  This\n     *  is suitable for passing to functions like Strophe.Connection.send().\n     *\n     *  Returns:\n     *    The DOM tree as a element object.\n     */\n    tree: function () {\n        return this.nodeTree;\n    },\n\n    /** Function: toString\n     *  Serialize the DOM tree to a String.\n     *\n     *  This function returns a string serialization of the current DOM\n     *  tree.  It is often used internally to pass data to a\n     *  Strophe.Request object.\n     *\n     *  Returns:\n     *    The serialized DOM tree in a String.\n     */\n    toString: function () {\n        return Strophe.serialize(this.nodeTree);\n    },\n\n    /** Function: up\n     *  Make the current parent element the new current element.\n     *\n     *  This function is often used after c() to traverse back up the tree.\n     *  For example, to add two children to the same element\n     *  > builder.c('child1', {}).up().c('child2', {});\n     *\n     *  Returns:\n     *    The Stophe.Builder object.\n     */\n    up: function () {\n        this.node = this.node.parentNode;\n        return this;\n    },\n\n    /** Function: root\n     *  Make the root element the new current element.\n     *\n     *  When at a deeply nested element in the tree, this function can be used\n     *  to jump back to the root of the tree, instead of having to repeatedly\n     *  call up().\n     *\n     *  Returns:\n     *    The Stophe.Builder object.\n     */\n    root: function () {\n        this.node = this.nodeTree;\n        return this;\n    },\n\n    /** Function: attrs\n     *  Add or modify attributes of the current element.\n     *\n     *  The attributes should be passed in object notation.  This function\n     *  does not move the current element pointer.\n     *\n     *  Parameters:\n     *    (Object) moreattrs - The attributes to add/modify in object notation.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    attrs: function (moreattrs) {\n        for (var k in moreattrs) {\n            if (moreattrs.hasOwnProperty(k)) {\n                if (moreattrs[k] === undefined) {\n                    this.node.removeAttribute(k);\n                } else {\n                    this.node.setAttribute(k, moreattrs[k]);\n                }\n            }\n        }\n        return this;\n    },\n\n    /** Function: c\n     *  Add a child to the current element and make it the new current\n     *  element.\n     *\n     *  This function moves the current element pointer to the child,\n     *  unless text is provided.  If you need to add another child, it\n     *  is necessary to use up() to go back to the parent in the tree.\n     *\n     *  Parameters:\n     *    (String) name - The name of the child.\n     *    (Object) attrs - The attributes of the child in object notation.\n     *    (String) text - The text to add to the child.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    c: function (name, attrs, text) {\n        var child = Strophe.xmlElement(name, attrs, text);\n        this.node.appendChild(child);\n        if (typeof text !== \"string\" && typeof text !==\"number\") {\n            this.node = child;\n        }\n        return this;\n    },\n\n    /** Function: cnode\n     *  Add a child to the current element and make it the new current\n     *  element.\n     *\n     *  This function is the same as c() except that instead of using a\n     *  name and an attributes object to create the child it uses an\n     *  existing DOM element object.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - A DOM element.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    cnode: function (elem) {\n        var impNode;\n        var xmlGen = Strophe.xmlGenerator();\n        try {\n            impNode = (xmlGen.importNode !== undefined);\n        } catch (e) {\n            impNode = false;\n        }\n        var newElem = impNode ?\n                      xmlGen.importNode(elem, true) :\n                      Strophe.copyElement(elem);\n        this.node.appendChild(newElem);\n        this.node = newElem;\n        return this;\n    },\n\n    /** Function: t\n     *  Add a child text element.\n     *\n     *  This *does not* make the child the new current element since there\n     *  are no children of text elements.\n     *\n     *  Parameters:\n     *    (String) text - The text data to append to the current element.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    t: function (text) {\n        var child = Strophe.xmlTextNode(text);\n        this.node.appendChild(child);\n        return this;\n    },\n\n    /** Function: h\n     *  Replace current element contents with the HTML passed in.\n     *\n     *  This *does not* make the child the new current element\n     *\n     *  Parameters:\n     *    (String) html - The html to insert as contents of current element.\n     *\n     *  Returns:\n     *    The Strophe.Builder object.\n     */\n    h: function (html) {\n        var fragment = document.createElement('body');\n\n        // force the browser to try and fix any invalid HTML tags\n        fragment.innerHTML = html;\n\n        // copy cleaned html into an xml dom\n        var xhtml = Strophe.createHtml(fragment);\n\n        while(xhtml.childNodes.length > 0) {\n            this.node.appendChild(xhtml.childNodes[0]);\n        }\n        return this;\n    }\n};\n\n/** PrivateClass: Strophe.Handler\n *  _Private_ helper class for managing stanza handlers.\n *\n *  A Strophe.Handler encapsulates a user provided callback function to be\n *  executed when matching stanzas are received by the connection.\n *  Handlers can be either one-off or persistant depending on their\n *  return value. Returning true will cause a Handler to remain active, and\n *  returning false will remove the Handler.\n *\n *  Users will not use Strophe.Handler objects directly, but instead they\n *  will use Strophe.Connection.addHandler() and\n *  Strophe.Connection.deleteHandler().\n */\n\n/** PrivateConstructor: Strophe.Handler\n *  Create and initialize a new Strophe.Handler.\n *\n *  Parameters:\n *    (Function) handler - A function to be executed when the handler is run.\n *    (String) ns - The namespace to match.\n *    (String) name - The element name to match.\n *    (String) type - The element type to match.\n *    (String) id - The element id attribute to match.\n *    (String) from - The element from attribute to match.\n *    (Object) options - Handler options\n *\n *  Returns:\n *    A new Strophe.Handler object.\n */\nStrophe.Handler = function (handler, ns, name, type, id, from, options) {\n    this.handler = handler;\n    this.ns = ns;\n    this.name = name;\n    this.type = type;\n    this.id = id;\n    this.options = options || {'matchBareFromJid': false, 'ignoreNamespaceFragment': false};\n    // BBB: Maintain backward compatibility with old `matchBare` option\n    if (this.options.matchBare) {\n        Strophe.warn('The \"matchBare\" option is deprecated, use \"matchBareFromJid\" instead.');\n        this.options.matchBareFromJid = this.options.matchBare;\n        delete this.options.matchBare;\n    }\n\n    if (this.options.matchBareFromJid) {\n        this.from = from ? Strophe.getBareJidFromJid(from) : null;\n    } else {\n        this.from = from;\n    }\n    // whether the handler is a user handler or a system handler\n    this.user = true;\n};\n\nStrophe.Handler.prototype = {\n    /** PrivateFunction: getNamespace\n     *  Returns the XML namespace attribute on an element.\n     *  If `ignoreNamespaceFragment` was passed in for this handler, then the\n     *  URL fragment will be stripped.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML element with the namespace.\n     *\n     *  Returns:\n     *    The namespace, with optionally the fragment stripped.\n     */\n    getNamespace: function (elem) {\n        var elNamespace = elem.getAttribute(\"xmlns\");\n        if (elNamespace && this.options.ignoreNamespaceFragment) {\n            elNamespace = elNamespace.split('#')[0];\n        }\n        return elNamespace;\n    },\n\n    /** PrivateFunction: namespaceMatch\n     *  Tests if a stanza matches the namespace set for this Strophe.Handler.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML element to test.\n     *\n     *  Returns:\n     *    true if the stanza matches and false otherwise.\n     */\n    namespaceMatch: function (elem) {\n        var nsMatch = false;\n        if (!this.ns) {\n            return true;\n        } else {\n            var that = this;\n            Strophe.forEachChild(elem, null, function (elem) {\n                if (that.getNamespace(elem) === that.ns) {\n                    nsMatch = true;\n                }\n            });\n            nsMatch = nsMatch || this.getNamespace(elem) === this.ns;\n        }\n        return nsMatch;\n    },\n\n    /** PrivateFunction: isMatch\n     *  Tests if a stanza matches the Strophe.Handler.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML element to test.\n     *\n     *  Returns:\n     *    true if the stanza matches and false otherwise.\n     */\n    isMatch: function (elem) {\n        var from = elem.getAttribute('from');\n        if (this.options.matchBareFromJid) {\n            from = Strophe.getBareJidFromJid(from);\n        }\n        var elem_type = elem.getAttribute(\"type\");\n        if (this.namespaceMatch(elem) &&\n            (!this.name || Strophe.isTagEqual(elem, this.name)) &&\n            (!this.type || (Array.isArray(this.type) ? this.type.indexOf(elem_type) !== -1 : elem_type === this.type)) &&\n            (!this.id || elem.getAttribute(\"id\") === this.id) &&\n            (!this.from || from === this.from)) {\n                return true;\n        }\n        return false;\n    },\n\n    /** PrivateFunction: run\n     *  Run the callback on a matching stanza.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The DOM element that triggered the\n     *      Strophe.Handler.\n     *\n     *  Returns:\n     *    A boolean indicating if the handler should remain active.\n     */\n    run: function (elem) {\n        var result = null;\n        try {\n            result = this.handler(elem);\n        } catch (e) {\n            Strophe._handleError(e);\n            throw e;\n        }\n        return result;\n    },\n\n    /** PrivateFunction: toString\n     *  Get a String representation of the Strophe.Handler object.\n     *\n     *  Returns:\n     *    A String.\n     */\n    toString: function () {\n        return \"{Handler: \" + this.handler + \"(\" + this.name + \",\" +\n            this.id + \",\" + this.ns + \")}\";\n    }\n};\n\n/** PrivateClass: Strophe.TimedHandler\n *  _Private_ helper class for managing timed handlers.\n *\n *  A Strophe.TimedHandler encapsulates a user provided callback that\n *  should be called after a certain period of time or at regular\n *  intervals.  The return value of the callback determines whether the\n *  Strophe.TimedHandler will continue to fire.\n *\n *  Users will not use Strophe.TimedHandler objects directly, but instead\n *  they will use Strophe.Connection.addTimedHandler() and\n *  Strophe.Connection.deleteTimedHandler().\n */\n\n/** PrivateConstructor: Strophe.TimedHandler\n *  Create and initialize a new Strophe.TimedHandler object.\n *\n *  Parameters:\n *    (Integer) period - The number of milliseconds to wait before the\n *      handler is called.\n *    (Function) handler - The callback to run when the handler fires.  This\n *      function should take no arguments.\n *\n *  Returns:\n *    A new Strophe.TimedHandler object.\n */\nStrophe.TimedHandler = function (period, handler) {\n    this.period = period;\n    this.handler = handler;\n    this.lastCalled = new Date().getTime();\n    this.user = true;\n};\n\nStrophe.TimedHandler.prototype = {\n    /** PrivateFunction: run\n     *  Run the callback for the Strophe.TimedHandler.\n     *\n     *  Returns:\n     *    true if the Strophe.TimedHandler should be called again, and false\n     *      otherwise.\n     */\n    run: function () {\n        this.lastCalled = new Date().getTime();\n        return this.handler();\n    },\n\n    /** PrivateFunction: reset\n     *  Reset the last called time for the Strophe.TimedHandler.\n     */\n    reset: function () {\n        this.lastCalled = new Date().getTime();\n    },\n\n    /** PrivateFunction: toString\n     *  Get a string representation of the Strophe.TimedHandler object.\n     *\n     *  Returns:\n     *    The string representation.\n     */\n    toString: function () {\n        return \"{TimedHandler: \" + this.handler + \"(\" + this.period +\")}\";\n    }\n};\n\n/** Class: Strophe.Connection\n *  XMPP Connection manager.\n *\n *  This class is the main part of Strophe.  It manages a BOSH or websocket\n *  connection to an XMPP server and dispatches events to the user callbacks\n *  as data arrives. It supports SASL PLAIN, SASL DIGEST-MD5, SASL SCRAM-SHA1\n *  and legacy authentication.\n *\n *  After creating a Strophe.Connection object, the user will typically\n *  call connect() with a user supplied callback to handle connection level\n *  events like authentication failure, disconnection, or connection\n *  complete.\n *\n *  The user will also have several event handlers defined by using\n *  addHandler() and addTimedHandler().  These will allow the user code to\n *  respond to interesting stanzas or do something periodically with the\n *  connection. These handlers will be active once authentication is\n *  finished.\n *\n *  To send data to the connection, use send().\n */\n\n/** Constructor: Strophe.Connection\n *  Create and initialize a Strophe.Connection object.\n *\n *  The transport-protocol for this connection will be chosen automatically\n *  based on the given service parameter. URLs starting with \"ws://\" or\n *  \"wss://\" will use WebSockets, URLs starting with \"http://\", \"https://\"\n *  or without a protocol will use BOSH.\n *\n *  To make Strophe connect to the current host you can leave out the protocol\n *  and host part and just pass the path, e.g.\n *\n *  > var conn = new Strophe.Connection(\"/http-bind/\");\n *\n *  Options common to both Websocket and BOSH:\n *  ------------------------------------------\n *\n *  cookies:\n *\n *  The *cookies* option allows you to pass in cookies to be added to the\n *  document. These cookies will then be included in the BOSH XMLHttpRequest\n *  or in the websocket connection.\n *\n *  The passed in value must be a map of cookie names and string values.\n *\n *  > { \"myCookie\": {\n *  >     \"value\": \"1234\",\n *  >     \"domain\": \".example.org\",\n *  >     \"path\": \"/\",\n *  >     \"expires\": expirationDate\n *  >     }\n *  > }\n *\n *  Note that cookies can't be set in this way for other domains (i.e. cross-domain).\n *  Those cookies need to be set under those domains, for example they can be\n *  set server-side by making a XHR call to that domain to ask it to set any\n *  necessary cookies.\n *\n *  mechanisms:\n *\n *  The *mechanisms* option allows you to specify the SASL mechanisms that this\n *  instance of Strophe.Connection (and therefore your XMPP client) will\n *  support.\n *\n *  The value must be an array of objects with Strophe.SASLMechanism\n *  prototypes.\n *\n *  If nothing is specified, then the following mechanisms (and their\n *  priorities) are registered:\n *\n *      OAUTHBEARER - 60\n *      SCRAM-SHA1 - 50\n *      DIGEST-MD5 - 40\n *      PLAIN - 30\n *      ANONYMOUS - 20\n *      EXTERNAL - 10\n *\n *  WebSocket options:\n *  ------------------\n *\n *  If you want to connect to the current host with a WebSocket connection you\n *  can tell Strophe to use WebSockets through a \"protocol\" attribute in the\n *  optional options parameter. Valid values are \"ws\" for WebSocket and \"wss\"\n *  for Secure WebSocket.\n *  So to connect to \"wss://CURRENT_HOSTNAME/xmpp-websocket\" you would call\n *\n *  > var conn = new Strophe.Connection(\"/xmpp-websocket/\", {protocol: \"wss\"});\n *\n *  Note that relative URLs _NOT_ starting with a \"/\" will also include the path\n *  of the current site.\n *\n *  Also because downgrading security is not permitted by browsers, when using\n *  relative URLs both BOSH and WebSocket connections will use their secure\n *  variants if the current connection to the site is also secure (https).\n *\n *  BOSH options:\n *  -------------\n *\n *  By adding \"sync\" to the options, you can control if requests will\n *  be made synchronously or not. The default behaviour is asynchronous.\n *  If you want to make requests synchronous, make \"sync\" evaluate to true.\n *  > var conn = new Strophe.Connection(\"/http-bind/\", {sync: true});\n *\n *  You can also toggle this on an already established connection.\n *  > conn.options.sync = true;\n *\n *  The *customHeaders* option can be used to provide custom HTTP headers to be\n *  included in the XMLHttpRequests made.\n *\n *  The *keepalive* option can be used to instruct Strophe to maintain the\n *  current BOSH session across interruptions such as webpage reloads.\n *\n *  It will do this by caching the sessions tokens in sessionStorage, and when\n *  \"restore\" is called it will check whether there are cached tokens with\n *  which it can resume an existing session.\n *\n *  The *withCredentials* option should receive a Boolean value and is used to\n *  indicate wether cookies should be included in ajax requests (by default\n *  they're not).\n *  Set this value to true if you are connecting to a BOSH service\n *  and for some reason need to send cookies to it.\n *  In order for this to work cross-domain, the server must also enable\n *  credentials by setting the Access-Control-Allow-Credentials response header\n *  to \"true\". For most usecases however this setting should be false (which\n *  is the default).\n *  Additionally, when using Access-Control-Allow-Credentials, the\n *  Access-Control-Allow-Origin header can't be set to the wildcard \"*\", but\n *  instead must be restricted to actual domains.\n *\n *  The *contentType* option can be set to change the default Content-Type\n *  of \"text/xml; charset=utf-8\", which can be useful to reduce the amount of\n *  CORS preflight requests that are sent to the server.\n *\n *  Parameters:\n *    (String) service - The BOSH or WebSocket service URL.\n *    (Object) options - A hash of configuration options\n *\n *  Returns:\n *    A new Strophe.Connection object.\n */\nStrophe.Connection = function (service, options) {\n    // The service URL\n    this.service = service;\n    // Configuration options\n    this.options = options || {};\n    var proto = this.options.protocol || \"\";\n\n    // Select protocal based on service or options\n    if (service.indexOf(\"ws:\") === 0 || service.indexOf(\"wss:\") === 0 ||\n            proto.indexOf(\"ws\") === 0) {\n        this._proto = new Strophe.Websocket(this);\n    } else {\n        this._proto = new Strophe.Bosh(this);\n    }\n\n    /* The connected JID. */\n    this.jid = \"\";\n    /* the JIDs domain */\n    this.domain = null;\n    /* stream:features */\n    this.features = null;\n\n    // SASL\n    this._sasl_data = {};\n    this.do_session = false;\n    this.do_bind = false;\n\n    // handler lists\n    this.timedHandlers = [];\n    this.handlers = [];\n    this.removeTimeds = [];\n    this.removeHandlers = [];\n    this.addTimeds = [];\n    this.addHandlers = [];\n    this.protocolErrorHandlers = {\n        'HTTP': {},\n        'websocket': {}\n    };\n\n    this._idleTimeout = null;\n    this._disconnectTimeout = null;\n\n    this.authenticated = false;\n    this.connected = false;\n    this.disconnecting = false;\n    this.do_authentication = true;\n    this.paused = false;\n    this.restored = false;\n\n    this._data = [];\n    this._uniqueId = 0;\n\n    this._sasl_success_handler = null;\n    this._sasl_failure_handler = null;\n    this._sasl_challenge_handler = null;\n\n    // Max retries before disconnecting\n    this.maxRetries = 5;\n\n    // Call onIdle callback every 1/10th of a second\n    // XXX: setTimeout should be called only with function expressions (23974bc1)\n    this._idleTimeout = setTimeout(function() {\n        this._onIdle();\n    }.bind(this), 100);\n\n    utils.addCookies(this.options.cookies);\n    this.registerSASLMechanisms(this.options.mechanisms);\n\n    // initialize plugins\n    for (var k in Strophe._connectionPlugins) {\n        if (Strophe._connectionPlugins.hasOwnProperty(k)) {\n            var ptype = Strophe._connectionPlugins[k];\n            // jslint complaints about the below line, but this is fine\n            var F = function () {}; // jshint ignore:line\n            F.prototype = ptype;\n            this[k] = new F();\n            this[k].init(this);\n        }\n    }\n};\n\nStrophe.Connection.prototype = {\n    /** Function: reset\n     *  Reset the connection.\n     *\n     *  This function should be called after a connection is disconnected\n     *  before that connection is reused.\n     */\n    reset: function () {\n        this._proto._reset();\n\n        // SASL\n        this.do_session = false;\n        this.do_bind = false;\n\n        // handler lists\n        this.timedHandlers = [];\n        this.handlers = [];\n        this.removeTimeds = [];\n        this.removeHandlers = [];\n        this.addTimeds = [];\n        this.addHandlers = [];\n\n        this.authenticated = false;\n        this.connected = false;\n        this.disconnecting = false;\n        this.restored = false;\n\n        this._data = [];\n        this._requests = [];\n        this._uniqueId = 0;\n    },\n\n    /** Function: pause\n     *  Pause the request manager.\n     *\n     *  This will prevent Strophe from sending any more requests to the\n     *  server.  This is very useful for temporarily pausing\n     *  BOSH-Connections while a lot of send() calls are happening quickly.\n     *  This causes Strophe to send the data in a single request, saving\n     *  many request trips.\n     */\n    pause: function () {\n        this.paused = true;\n    },\n\n    /** Function: resume\n     *  Resume the request manager.\n     *\n     *  This resumes after pause() has been called.\n     */\n    resume: function () {\n        this.paused = false;\n    },\n\n    /** Function: getUniqueId\n     *  Generate a unique ID for use in <iq/> elements.\n     *\n     *  All <iq/> stanzas are required to have unique id attributes.  This\n     *  function makes creating these easy.  Each connection instance has\n     *  a counter which starts from zero, and the value of this counter\n     *  plus a colon followed by the suffix becomes the unique id. If no\n     *  suffix is supplied, the counter is used as the unique id.\n     *\n     *  Suffixes are used to make debugging easier when reading the stream\n     *  data, and their use is recommended.  The counter resets to 0 for\n     *  every new connection for the same reason.  For connections to the\n     *  same server that authenticate the same way, all the ids should be\n     *  the same, which makes it easy to see changes.  This is useful for\n     *  automated testing as well.\n     *\n     *  Parameters:\n     *    (String) suffix - A optional suffix to append to the id.\n     *\n     *  Returns:\n     *    A unique string to be used for the id attribute.\n     */\n    getUniqueId: function(suffix) {\n        var uuid = 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function(c) {\n            var r = Math.random() * 16 | 0,\n                v = c === 'x' ? r : r & 0x3 | 0x8;\n            return v.toString(16);\n        });\n        if (typeof(suffix) === \"string\" || typeof(suffix) === \"number\") {\n            return uuid + \":\" + suffix;\n        } else {\n            return uuid + \"\";\n        }\n    },\n\n    /** Function: addProtocolErrorHandler\n     *  Register a handler function for when a protocol (websocker or HTTP)\n     *  error occurs.\n     *\n     *  NOTE: Currently only HTTP errors for BOSH requests are handled.\n     *  Patches that handle websocket errors would be very welcome.\n     *\n     *  Parameters:\n     *    (String) protocol - 'HTTP' or 'websocket'\n     *    (Integer) status_code - Error status code (e.g 500, 400 or 404)\n     *    (Function) callback - Function that will fire on Http error\n     *\n     *  Example:\n     *  function onError(err_code){\n     *    //do stuff\n     *  }\n     *\n     *  var conn = Strophe.connect('http://example.com/http-bind');\n     *  conn.addProtocolErrorHandler('HTTP', 500, onError);\n     *  // Triggers HTTP 500 error and onError handler will be called\n     *  conn.connect('user_jid@incorrect_jabber_host', 'secret', onConnect);\n     */\n    addProtocolErrorHandler: function(protocol, status_code, callback){\n        this.protocolErrorHandlers[protocol][status_code] = callback;\n    },\n\n\n    /** Function: connect\n     *  Starts the connection process.\n     *\n     *  As the connection process proceeds, the user supplied callback will\n     *  be triggered multiple times with status updates.  The callback\n     *  should take two arguments - the status code and the error condition.\n     *\n     *  The status code will be one of the values in the Strophe.Status\n     *  constants.  The error condition will be one of the conditions\n     *  defined in RFC 3920 or the condition 'strophe-parsererror'.\n     *\n     *  The Parameters _wait_, _hold_ and _route_ are optional and only relevant\n     *  for BOSH connections. Please see XEP 124 for a more detailed explanation\n     *  of the optional parameters.\n     *\n     *  Parameters:\n     *    (String) jid - The user's JID.  This may be a bare JID,\n     *      or a full JID.  If a node is not supplied, SASL OAUTHBEARER or\n     *      SASL ANONYMOUS authentication will be attempted (OAUTHBEARER will\n     *      process the provided password value as an access token).\n     *    (String) pass - The user's password.\n     *    (Function) callback - The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (String) route - The optional route value.\n     *    (String) authcid - The optional alternative authentication identity\n     *      (username) if intending to impersonate another user.\n     *      When using the SASL-EXTERNAL authentication mechanism, for example\n     *      with client certificates, then the authcid value is used to\n     *      determine whether an authorization JID (authzid) should be sent to\n     *      the server. The authzid should not be sent to the server if the\n     *      authzid and authcid are the same. So to prevent it from being sent\n     *      (for example when the JID is already contained in the client\n     *      certificate), set authcid to that same JID. See XEP-178 for more\n     *      details.\n     */\n    connect: function (jid, pass, callback, wait, hold, route, authcid) {\n        this.jid = jid;\n        /** Variable: authzid\n         *  Authorization identity.\n         */\n        this.authzid = Strophe.getBareJidFromJid(this.jid);\n\n        /** Variable: authcid\n         *  Authentication identity (User name).\n         */\n        this.authcid = authcid || Strophe.getNodeFromJid(this.jid);\n\n        /** Variable: pass\n         *  Authentication identity (User password).\n         */\n        this.pass = pass;\n\n        /** Variable: servtype\n         *  Digest MD5 compatibility.\n         */\n        this.servtype = \"xmpp\";\n\n        this.connect_callback = callback;\n        this.disconnecting = false;\n        this.connected = false;\n        this.authenticated = false;\n        this.restored = false;\n\n        // parse jid for domain\n        this.domain = Strophe.getDomainFromJid(this.jid);\n\n        this._changeConnectStatus(Strophe.Status.CONNECTING, null);\n\n        this._proto._connect(wait, hold, route);\n    },\n\n    /** Function: attach\n     *  Attach to an already created and authenticated BOSH session.\n     *\n     *  This function is provided to allow Strophe to attach to BOSH\n     *  sessions which have been created externally, perhaps by a Web\n     *  application.  This is often used to support auto-login type features\n     *  without putting user credentials into the page.\n     *\n     *  Parameters:\n     *    (String) jid - The full JID that is bound by the session.\n     *    (String) sid - The SID of the BOSH session.\n     *    (String) rid - The current RID of the BOSH session.  This RID\n     *      will be used by the next request.\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    attach: function (jid, sid, rid, callback, wait, hold, wind) {\n        if (this._proto instanceof Strophe.Bosh) {\n            this._proto._attach(jid, sid, rid, callback, wait, hold, wind);\n        } else {\n            throw {\n                name: 'StropheSessionError',\n                message: 'The \"attach\" method can only be used with a BOSH connection.'\n            };\n        }\n    },\n\n    /** Function: restore\n     *  Attempt to restore a cached BOSH session.\n     *\n     *  This function is only useful in conjunction with providing the\n     *  \"keepalive\":true option when instantiating a new Strophe.Connection.\n     *\n     *  When \"keepalive\" is set to true, Strophe will cache the BOSH tokens\n     *  RID (Request ID) and SID (Session ID) and then when this function is\n     *  called, it will attempt to restore the session from those cached\n     *  tokens.\n     *\n     *  This function must therefore be called instead of connect or attach.\n     *\n     *  For an example on how to use it, please see examples/restore.js\n     *\n     *  Parameters:\n     *    (String) jid - The user's JID.  This may be a bare JID or a full JID.\n     *    (Function) callback - The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    restore: function (jid, callback, wait, hold, wind) {\n        if (this._sessionCachingSupported()) {\n            this._proto._restore(jid, callback, wait, hold, wind);\n        } else {\n            throw {\n                name: 'StropheSessionError',\n                message: 'The \"restore\" method can only be used with a BOSH connection.'\n            };\n        }\n    },\n\n    /** PrivateFunction: _sessionCachingSupported\n     * Checks whether sessionStorage and JSON are supported and whether we're\n     * using BOSH.\n     */\n    _sessionCachingSupported: function () {\n        if (this._proto instanceof Strophe.Bosh) {\n            if (!JSON) { return false; }\n            try {\n                sessionStorage.setItem('_strophe_', '_strophe_');\n                sessionStorage.removeItem('_strophe_');\n            } catch (e) {\n                return false;\n            }\n            return true;\n        }\n        return false;\n    },\n\n    /** Function: xmlInput\n     *  User overrideable function that receives XML data coming into the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.xmlInput = function (elem) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n     *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n     *\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n     *  <Strophe.Bosh.strip> if you want to strip this tag.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XML data received by the connection.\n     */\n    /* jshint unused:false */\n    xmlInput: function (elem) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: xmlOutput\n     *  User overrideable function that receives XML data sent to the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.xmlOutput = function (elem) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Due to limitations of current Browsers' XML-Parsers the opening and closing\n     *  <stream> tag for WebSocket-Connoctions will be passed as selfclosing here.\n     *\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag. See\n     *  <Strophe.Bosh.strip> if you want to strip this tag.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The XMLdata sent by the connection.\n     */\n    /* jshint unused:false */\n    xmlOutput: function (elem) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: rawInput\n     *  User overrideable function that receives raw data coming into the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.rawInput = function (data) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Parameters:\n     *    (String) data - The data received by the connection.\n     */\n    /* jshint unused:false */\n    rawInput: function (data) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: rawOutput\n     *  User overrideable function that receives raw data sent to the\n     *  connection.\n     *\n     *  The default function does nothing.  User code can override this with\n     *  > Strophe.Connection.rawOutput = function (data) {\n     *  >   (user code)\n     *  > };\n     *\n     *  Parameters:\n     *    (String) data - The data sent by the connection.\n     */\n    /* jshint unused:false */\n    rawOutput: function (data) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: nextValidRid\n     *  User overrideable function that receives the new valid rid.\n     *\n     *  The default function does nothing. User code can override this with\n     *  > Strophe.Connection.nextValidRid = function (rid) {\n     *  >    (user code)\n     *  > };\n     *\n     *  Parameters:\n     *    (Number) rid - The next valid rid\n     */\n    /* jshint unused:false */\n    nextValidRid: function (rid) {\n        return;\n    },\n    /* jshint unused:true */\n\n    /** Function: send\n     *  Send a stanza.\n     *\n     *  This function is called to push data onto the send queue to\n     *  go out over the wire.  Whenever a request is sent to the BOSH\n     *  server, all pending data is sent and the queue is flushed.\n     *\n     *  Parameters:\n     *    (XMLElement |\n     *     [XMLElement] |\n     *     Strophe.Builder) elem - The stanza to send.\n     */\n    send: function (elem) {\n        if (elem === null) { return ; }\n        if (typeof(elem.sort) === \"function\") {\n            for (var i = 0; i < elem.length; i++) {\n                this._queueData(elem[i]);\n            }\n        } else if (typeof(elem.tree) === \"function\") {\n            this._queueData(elem.tree());\n        } else {\n            this._queueData(elem);\n        }\n\n        this._proto._send();\n    },\n\n    /** Function: flush\n     *  Immediately send any pending outgoing data.\n     *\n     *  Normally send() queues outgoing data until the next idle period\n     *  (100ms), which optimizes network use in the common cases when\n     *  several send()s are called in succession. flush() can be used to\n     *  immediately send all pending data.\n     */\n    flush: function () {\n        // cancel the pending idle period and run the idle function\n        // immediately\n        clearTimeout(this._idleTimeout);\n        this._onIdle();\n    },\n\n    /** Function: sendPresence\n     *  Helper function to send presence stanzas. The main benefit is for\n     *  sending presence stanzas for which you expect a responding presence\n     *  stanza with the same id (for example when leaving a chat room).\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza to send.\n     *    (Function) callback - The callback function for a successful request.\n     *    (Function) errback - The callback function for a failed or timed\n     *      out request.  On timeout, the stanza will be null.\n     *    (Integer) timeout - The time specified in milliseconds for a\n     *      timeout to occur.\n     *\n     *  Returns:\n     *    The id used to send the presence.\n     */\n    sendPresence: function(elem, callback, errback, timeout) {\n        var timeoutHandler = null;\n        var that = this;\n        if (typeof(elem.tree) === \"function\") {\n            elem = elem.tree();\n        }\n        var id = elem.getAttribute('id');\n        if (!id) { // inject id if not found\n            id = this.getUniqueId(\"sendPresence\");\n            elem.setAttribute(\"id\", id);\n        }\n\n        if (typeof callback === \"function\" || typeof errback === \"function\") {\n            var handler = this.addHandler(function (stanza) {\n                // remove timeout handler if there is one\n                if (timeoutHandler) {\n                    that.deleteTimedHandler(timeoutHandler);\n                }\n                var type = stanza.getAttribute('type');\n                if (type === 'error') {\n                    if (errback) {\n                        errback(stanza);\n                    }\n                } else if (callback) {\n                    callback(stanza);\n                }\n            }, null, 'presence', null, id);\n\n            // if timeout specified, set up a timeout handler.\n            if (timeout) {\n                timeoutHandler = this.addTimedHandler(timeout, function () {\n                    // get rid of normal handler\n                    that.deleteHandler(handler);\n                    // call errback on timeout with null stanza\n                    if (errback) {\n                        errback(null);\n                    }\n                    return false;\n                });\n            }\n        }\n        this.send(elem);\n        return id;\n    },\n\n    /** Function: sendIQ\n     *  Helper function to send IQ stanzas.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza to send.\n     *    (Function) callback - The callback function for a successful request.\n     *    (Function) errback - The callback function for a failed or timed\n     *      out request.  On timeout, the stanza will be null.\n     *    (Integer) timeout - The time specified in milliseconds for a\n     *      timeout to occur.\n     *\n     *  Returns:\n     *    The id used to send the IQ.\n    */\n    sendIQ: function(elem, callback, errback, timeout) {\n        var timeoutHandler = null;\n        var that = this;\n        if (typeof(elem.tree) === \"function\") {\n            elem = elem.tree();\n        }\n        var id = elem.getAttribute('id');\n        if (!id) { // inject id if not found\n            id = this.getUniqueId(\"sendIQ\");\n            elem.setAttribute(\"id\", id);\n        }\n\n        if (typeof callback === \"function\" || typeof errback === \"function\") {\n            var handler = this.addHandler(function (stanza) {\n                // remove timeout handler if there is one\n                if (timeoutHandler) {\n                    that.deleteTimedHandler(timeoutHandler);\n                }\n                var iqtype = stanza.getAttribute('type');\n                if (iqtype === 'result') {\n                    if (callback) {\n                        callback(stanza);\n                    }\n                } else if (iqtype === 'error') {\n                    if (errback) {\n                        errback(stanza);\n                    }\n                } else {\n                    throw {\n                        name: \"StropheError\",\n                        message: \"Got bad IQ type of \" + iqtype\n                    };\n                }\n            }, null, 'iq', ['error', 'result'], id);\n\n            // if timeout specified, set up a timeout handler.\n            if (timeout) {\n                timeoutHandler = this.addTimedHandler(timeout, function () {\n                    // get rid of normal handler\n                    that.deleteHandler(handler);\n                    // call errback on timeout with null stanza\n                    if (errback) {\n                        errback(null);\n                    }\n                    return false;\n                });\n            }\n        }\n        this.send(elem);\n        return id;\n    },\n\n    /** PrivateFunction: _queueData\n     *  Queue outgoing data for later sending.  Also ensures that the data\n     *  is a DOMElement.\n     */\n    _queueData: function (element) {\n        if (element === null ||\n            !element.tagName ||\n            !element.childNodes) {\n            throw {\n                name: \"StropheError\",\n                message: \"Cannot queue non-DOMElement.\"\n            };\n        }\n        this._data.push(element);\n    },\n\n    /** PrivateFunction: _sendRestart\n     *  Send an xmpp:restart stanza.\n     */\n    _sendRestart: function () {\n        this._data.push(\"restart\");\n        this._proto._sendRestart();\n        // XXX: setTimeout should be called only with function expressions (23974bc1)\n        this._idleTimeout = setTimeout(function() {\n            this._onIdle();\n        }.bind(this), 100);\n    },\n\n    /** Function: addTimedHandler\n     *  Add a timed handler to the connection.\n     *\n     *  This function adds a timed handler.  The provided handler will\n     *  be called every period milliseconds until it returns false,\n     *  the connection is terminated, or the handler is removed.  Handlers\n     *  that wish to continue being invoked should return true.\n     *\n     *  Because of method binding it is necessary to save the result of\n     *  this function if you wish to remove a handler with\n     *  deleteTimedHandler().\n     *\n     *  Note that user handlers are not active until authentication is\n     *  successful.\n     *\n     *  Parameters:\n     *    (Integer) period - The period of the handler.\n     *    (Function) handler - The callback function.\n     *\n     *  Returns:\n     *    A reference to the handler that can be used to remove it.\n     */\n    addTimedHandler: function (period, handler) {\n        var thand = new Strophe.TimedHandler(period, handler);\n        this.addTimeds.push(thand);\n        return thand;\n    },\n\n    /** Function: deleteTimedHandler\n     *  Delete a timed handler for a connection.\n     *\n     *  This function removes a timed handler from the connection.  The\n     *  handRef parameter is *not* the function passed to addTimedHandler(),\n     *  but is the reference returned from addTimedHandler().\n     *\n     *  Parameters:\n     *    (Strophe.TimedHandler) handRef - The handler reference.\n     */\n    deleteTimedHandler: function (handRef) {\n        // this must be done in the Idle loop so that we don't change\n        // the handlers during iteration\n        this.removeTimeds.push(handRef);\n    },\n\n    /** Function: addHandler\n     *  Add a stanza handler for the connection.\n     *\n     *  This function adds a stanza handler to the connection.  The\n     *  handler callback will be called for any stanza that matches\n     *  the parameters.  Note that if multiple parameters are supplied,\n     *  they must all match for the handler to be invoked.\n     *\n     *  The handler will receive the stanza that triggered it as its argument.\n     *  *The handler should return true if it is to be invoked again;\n     *  returning false will remove the handler after it returns.*\n     *\n     *  As a convenience, the ns parameters applies to the top level element\n     *  and also any of its immediate children.  This is primarily to make\n     *  matching /iq/query elements easy.\n     *\n     *  Options\n     *  ~~~~~~~\n     *  With the options argument, you can specify boolean flags that affect how\n     *  matches are being done.\n     *\n     *  Currently two flags exist:\n     *\n     *  - matchBareFromJid:\n     *      When set to true, the from parameter and the\n     *      from attribute on the stanza will be matched as bare JIDs instead\n     *      of full JIDs. To use this, pass {matchBareFromJid: true} as the\n     *      value of options. The default value for matchBareFromJid is false.\n     *\n     *  - ignoreNamespaceFragment:\n     *      When set to true, a fragment specified on the stanza's namespace\n     *      URL will be ignored when it's matched with the one configured for\n     *      the handler.\n     *\n     *      This means that if you register like this:\n     *      >   connection.addHandler(\n     *      >       handler,\n     *      >       'http://jabber.org/protocol/muc',\n     *      >       null, null, null, null,\n     *      >       {'ignoreNamespaceFragment': true}\n     *      >   );\n     *\n     *      Then a stanza with XML namespace of\n     *      'http://jabber.org/protocol/muc#user' will also be matched. If\n     *      'ignoreNamespaceFragment' is false, then only stanzas with\n     *      'http://jabber.org/protocol/muc' will be matched.\n     *\n     *  Deleting the handler\n     *  ~~~~~~~~~~~~~~~~~~~~\n     *  The return value should be saved if you wish to remove the handler\n     *  with deleteHandler().\n     *\n     *  Parameters:\n     *    (Function) handler - The user callback.\n     *    (String) ns - The namespace to match.\n     *    (String) name - The stanza name to match.\n     *    (String|Array) type - The stanza type (or types if an array) to match.\n     *    (String) id - The stanza id attribute to match.\n     *    (String) from - The stanza from attribute to match.\n     *    (String) options - The handler options\n     *\n     *  Returns:\n     *    A reference to the handler that can be used to remove it.\n     */\n    addHandler: function (handler, ns, name, type, id, from, options) {\n        var hand = new Strophe.Handler(handler, ns, name, type, id, from, options);\n        this.addHandlers.push(hand);\n        return hand;\n    },\n\n    /** Function: deleteHandler\n     *  Delete a stanza handler for a connection.\n     *\n     *  This function removes a stanza handler from the connection.  The\n     *  handRef parameter is *not* the function passed to addHandler(),\n     *  but is the reference returned from addHandler().\n     *\n     *  Parameters:\n     *    (Strophe.Handler) handRef - The handler reference.\n     */\n    deleteHandler: function (handRef) {\n        // this must be done in the Idle loop so that we don't change\n        // the handlers during iteration\n        this.removeHandlers.push(handRef);\n        // If a handler is being deleted while it is being added,\n        // prevent it from getting added\n        var i = this.addHandlers.indexOf(handRef);\n        if (i >= 0) {\n            this.addHandlers.splice(i, 1);\n        }\n    },\n\n    /** Function: registerSASLMechanisms\n     *\n     * Register the SASL mechanisms which will be supported by this instance of\n     * Strophe.Connection (i.e. which this XMPP client will support).\n     *\n     *  Parameters:\n     *    (Array) mechanisms - Array of objects with Strophe.SASLMechanism prototypes\n     *\n     */\n    registerSASLMechanisms: function (mechanisms) {\n        this.mechanisms = {};\n        mechanisms = mechanisms || [\n            Strophe.SASLAnonymous,\n            Strophe.SASLExternal,\n            Strophe.SASLMD5,\n            Strophe.SASLOAuthBearer,\n            Strophe.SASLPlain,\n            Strophe.SASLSHA1\n        ];\n        mechanisms.forEach(this.registerSASLMechanism.bind(this));\n    },\n\n    /** Function: registerSASLMechanism\n     *\n     * Register a single SASL mechanism, to be supported by this client.\n     *\n     *  Parameters:\n     *    (Object) mechanism - Object with a Strophe.SASLMechanism prototype\n     *\n     */\n    registerSASLMechanism: function (mechanism) {\n        this.mechanisms[mechanism.prototype.name] = mechanism;\n    },\n\n    /** Function: disconnect\n     *  Start the graceful disconnection process.\n     *\n     *  This function starts the disconnection process.  This process starts\n     *  by sending unavailable presence and sending BOSH body of type\n     *  terminate.  A timeout handler makes sure that disconnection happens\n     *  even if the BOSH server does not respond.\n     *  If the Connection object isn't connected, at least tries to abort all pending requests\n     *  so the connection object won't generate successful requests (which were already opened).\n     *\n     *  The user supplied connection callback will be notified of the\n     *  progress as this process happens.\n     *\n     *  Parameters:\n     *    (String) reason - The reason the disconnect is occuring.\n     */\n    disconnect: function (reason) {\n        this._changeConnectStatus(Strophe.Status.DISCONNECTING, reason);\n\n        Strophe.info(\"Disconnect was called because: \" + reason);\n        if (this.connected) {\n            var pres = false;\n            this.disconnecting = true;\n            if (this.authenticated) {\n                pres = $pres({\n                    xmlns: Strophe.NS.CLIENT,\n                    type: 'unavailable'\n                });\n            }\n            // setup timeout handler\n            this._disconnectTimeout = this._addSysTimedHandler(\n                3000, this._onDisconnectTimeout.bind(this));\n            this._proto._disconnect(pres);\n        } else {\n            Strophe.info(\"Disconnect was called before Strophe connected to the server\");\n            this._proto._abortAllRequests();\n            this._doDisconnect();\n        }\n    },\n\n    /** PrivateFunction: _changeConnectStatus\n     *  _Private_ helper function that makes sure plugins and the user's\n     *  callback are notified of connection status changes.\n     *\n     *  Parameters:\n     *    (Integer) status - the new connection status, one of the values\n     *      in Strophe.Status\n     *    (String) condition - the error condition or null\n     */\n    _changeConnectStatus: function (status, condition) {\n        // notify all plugins listening for status changes\n        for (var k in Strophe._connectionPlugins) {\n            if (Strophe._connectionPlugins.hasOwnProperty(k)) {\n                var plugin = this[k];\n                if (plugin.statusChanged) {\n                    try {\n                        plugin.statusChanged(status, condition);\n                    } catch (err) {\n                        Strophe.error(\"\" + k + \" plugin caused an exception \" +\n                                      \"changing status: \" + err);\n                    }\n                }\n            }\n        }\n\n        // notify the user's callback\n        if (this.connect_callback) {\n            try {\n                this.connect_callback(status, condition);\n            } catch (e) {\n                Strophe._handleError(e);\n                Strophe.error(\n                    \"User connection callback caused an \"+\"exception: \"+e);\n            }\n        }\n    },\n\n    /** PrivateFunction: _doDisconnect\n     *  _Private_ function to disconnect.\n     *\n     *  This is the last piece of the disconnection logic.  This resets the\n     *  connection and alerts the user's connection callback.\n     */\n    _doDisconnect: function (condition) {\n        if (typeof this._idleTimeout === \"number\") {\n            clearTimeout(this._idleTimeout);\n        }\n\n        // Cancel Disconnect Timeout\n        if (this._disconnectTimeout !== null) {\n            this.deleteTimedHandler(this._disconnectTimeout);\n            this._disconnectTimeout = null;\n        }\n\n        Strophe.info(\"_doDisconnect was called\");\n        this._proto._doDisconnect();\n\n        this.authenticated = false;\n        this.disconnecting = false;\n        this.restored = false;\n\n        // delete handlers\n        this.handlers = [];\n        this.timedHandlers = [];\n        this.removeTimeds = [];\n        this.removeHandlers = [];\n        this.addTimeds = [];\n        this.addHandlers = [];\n\n        // tell the parent we disconnected\n        this._changeConnectStatus(Strophe.Status.DISCONNECTED, condition);\n        this.connected = false;\n    },\n\n    /** PrivateFunction: _dataRecv\n     *  _Private_ handler to processes incoming data from the the connection.\n     *\n     *  Except for _connect_cb handling the initial connection request,\n     *  this function handles the incoming data for all requests.  This\n     *  function also fires stanza handlers that match each incoming\n     *  stanza.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The request that has data ready.\n     *    (string) req - The stanza a raw string (optiona).\n     */\n    _dataRecv: function (req, raw) {\n        Strophe.info(\"_dataRecv called\");\n        var elem = this._proto._reqToData(req);\n        if (elem === null) { return; }\n\n        if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (elem.nodeName === this._proto.strip && elem.childNodes.length) {\n                this.xmlInput(elem.childNodes[0]);\n            } else {\n                this.xmlInput(elem);\n            }\n        }\n        if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                this.rawInput(raw);\n            } else {\n                this.rawInput(Strophe.serialize(elem));\n            }\n        }\n\n        // remove handlers scheduled for deletion\n        var i, hand;\n        while (this.removeHandlers.length > 0) {\n            hand = this.removeHandlers.pop();\n            i = this.handlers.indexOf(hand);\n            if (i >= 0) {\n                this.handlers.splice(i, 1);\n            }\n        }\n\n        // add handlers scheduled for addition\n        while (this.addHandlers.length > 0) {\n            this.handlers.push(this.addHandlers.pop());\n        }\n\n        // handle graceful disconnect\n        if (this.disconnecting && this._proto._emptyQueue()) {\n            this._doDisconnect();\n            return;\n        }\n\n        var type = elem.getAttribute(\"type\");\n        var cond, conflict;\n        if (type !== null && type === \"terminate\") {\n            // Don't process stanzas that come in after disconnect\n            if (this.disconnecting) {\n                return;\n            }\n\n            // an error occurred\n            cond = elem.getAttribute(\"condition\");\n            conflict = elem.getElementsByTagName(\"conflict\");\n            if (cond !== null) {\n                if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                    cond = \"conflict\";\n                }\n                this._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n            } else {\n                this._changeConnectStatus(Strophe.Status.CONNFAIL, \"unknown\");\n            }\n            this._doDisconnect(cond);\n            return;\n        }\n\n        // send each incoming stanza through the handler chain\n        var that = this;\n        Strophe.forEachChild(elem, null, function (child) {\n            var i, newList;\n            // process handlers\n            newList = that.handlers;\n            that.handlers = [];\n            for (i = 0; i < newList.length; i++) {\n                var hand = newList[i];\n                // encapsulate 'handler.run' not to lose the whole handler list if\n                // one of the handlers throws an exception\n                try {\n                    if (hand.isMatch(child) &&\n                        (that.authenticated || !hand.user)) {\n                        if (hand.run(child)) {\n                            that.handlers.push(hand);\n                        }\n                    } else {\n                        that.handlers.push(hand);\n                    }\n                } catch(e) {\n                    // if the handler throws an exception, we consider it as false\n                    Strophe.warn('Removing Strophe handlers due to uncaught exception: '+e.message);\n                }\n            }\n        });\n    },\n\n\n    /** Attribute: mechanisms\n     *  SASL Mechanisms available for Connection.\n     */\n    mechanisms: {},\n\n    /** PrivateFunction: _connect_cb\n     *  _Private_ handler for initial connection request.\n     *\n     *  This handler is used to process the initial connection request\n     *  response from the BOSH server. It is used to set up authentication\n     *  handlers and start the authentication process.\n     *\n     *  SASL authentication will be attempted if available, otherwise\n     *  the code will fall back to legacy authentication.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The current request.\n     *    (Function) _callback - low level (xmpp) connect callback function.\n     *      Useful for plugins with their own xmpp connect callback (when their)\n     *      want to do something special).\n     */\n    _connect_cb: function (req, _callback, raw) {\n        Strophe.info(\"_connect_cb was called\");\n        this.connected = true;\n\n        var bodyWrap;\n        try {\n            bodyWrap = this._proto._reqToData(req);\n        } catch (e) {\n            if (e !== \"badformat\") { throw e; }\n            this._changeConnectStatus(Strophe.Status.CONNFAIL, 'bad-format');\n            this._doDisconnect('bad-format');\n        }\n        if (!bodyWrap) { return; }\n\n        if (this.xmlInput !== Strophe.Connection.prototype.xmlInput) {\n            if (bodyWrap.nodeName === this._proto.strip && bodyWrap.childNodes.length) {\n                this.xmlInput(bodyWrap.childNodes[0]);\n            } else {\n                this.xmlInput(bodyWrap);\n            }\n        }\n        if (this.rawInput !== Strophe.Connection.prototype.rawInput) {\n            if (raw) {\n                this.rawInput(raw);\n            } else {\n                this.rawInput(Strophe.serialize(bodyWrap));\n            }\n        }\n\n        var conncheck = this._proto._connect_cb(bodyWrap);\n        if (conncheck === Strophe.Status.CONNFAIL) {\n            return;\n        }\n\n        // Check for the stream:features tag\n        var hasFeatures;\n        if (bodyWrap.getElementsByTagNameNS) {\n            hasFeatures = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"features\").length > 0;\n        } else {\n            hasFeatures = bodyWrap.getElementsByTagName(\"stream:features\").length > 0 ||\n                            bodyWrap.getElementsByTagName(\"features\").length > 0;\n        }\n        if (!hasFeatures) {\n            this._proto._no_auth_received(_callback);\n            return;\n        }\n\n        var matched = [], i, mech;\n        var mechanisms = bodyWrap.getElementsByTagName(\"mechanism\");\n        if (mechanisms.length > 0) {\n            for (i = 0; i < mechanisms.length; i++) {\n                mech = Strophe.getText(mechanisms[i]);\n                if (this.mechanisms[mech]) matched.push(this.mechanisms[mech]);\n            }\n        }\n        if (matched.length === 0) {\n            if (bodyWrap.getElementsByTagName(\"auth\").length === 0) {\n                // There are no matching SASL mechanisms and also no legacy\n                // auth available.\n                this._proto._no_auth_received(_callback);\n                return;\n            }\n        }\n        if (this.do_authentication !== false) {\n            this.authenticate(matched);\n        }\n    },\n\n    /** Function: sortMechanismsByPriority\n     *\n     *  Sorts an array of objects with prototype SASLMechanism according to\n     *  their priorities.\n     *\n     *  Parameters:\n     *    (Array) mechanisms - Array of SASL mechanisms.\n     *\n     */\n    sortMechanismsByPriority: function (mechanisms) {\n        // Sorting mechanisms according to priority.\n        var i, j, higher, swap;\n        for (i = 0; i < mechanisms.length - 1; ++i) {\n            higher = i;\n            for (j = i + 1; j < mechanisms.length; ++j) {\n                if (mechanisms[j].prototype.priority > mechanisms[higher].prototype.priority) {\n                    higher = j;\n                }\n            }\n            if (higher !== i) {\n                swap = mechanisms[i];\n                mechanisms[i] = mechanisms[higher];\n                mechanisms[higher] = swap;\n            }\n        }\n        return mechanisms;\n    },\n\n    /** PrivateFunction: _attemptSASLAuth\n     *\n     *  Iterate through an array of SASL mechanisms and attempt authentication\n     *  with the highest priority (enabled) mechanism.\n     *\n     *  Parameters:\n     *    (Array) mechanisms - Array of SASL mechanisms.\n     *\n     *  Returns:\n     *    (Boolean) mechanism_found - true or false, depending on whether a\n     *          valid SASL mechanism was found with which authentication could be\n     *          started.\n     */\n    _attemptSASLAuth: function (mechanisms) {\n        mechanisms = this.sortMechanismsByPriority(mechanisms || []);\n        var i = 0, mechanism_found = false;\n        for (i = 0; i < mechanisms.length; ++i) {\n            if (!mechanisms[i].prototype.test(this)) {\n                continue;\n            }\n            this._sasl_success_handler = this._addSysHandler(\n                this._sasl_success_cb.bind(this), null,\n                \"success\", null, null);\n            this._sasl_failure_handler = this._addSysHandler(\n                this._sasl_failure_cb.bind(this), null,\n                \"failure\", null, null);\n            this._sasl_challenge_handler = this._addSysHandler(\n                this._sasl_challenge_cb.bind(this), null,\n                \"challenge\", null, null);\n\n            this._sasl_mechanism = new mechanisms[i]();\n            this._sasl_mechanism.onStart(this);\n\n            var request_auth_exchange = $build(\"auth\", {\n                xmlns: Strophe.NS.SASL,\n                mechanism: this._sasl_mechanism.name\n            });\n            if (this._sasl_mechanism.isClientFirst) {\n                var response = this._sasl_mechanism.onChallenge(this, null);\n                request_auth_exchange.t(btoa(response));\n            }\n            this.send(request_auth_exchange.tree());\n            mechanism_found = true;\n            break;\n        }\n        return mechanism_found;\n    },\n\n    /** PrivateFunction: _attemptLegacyAuth\n     *\n     *  Attempt legacy (i.e. non-SASL) authentication.\n     *\n     */\n    _attemptLegacyAuth: function () {\n        if (Strophe.getNodeFromJid(this.jid) === null) {\n            // we don't have a node, which is required for non-anonymous\n            // client connections\n            this._changeConnectStatus(\n                Strophe.Status.CONNFAIL,\n                'x-strophe-bad-non-anon-jid'\n            );\n            this.disconnect('x-strophe-bad-non-anon-jid');\n        } else {\n            // Fall back to legacy authentication\n            this._changeConnectStatus(Strophe.Status.AUTHENTICATING, null);\n            this._addSysHandler(\n                this._auth1_cb.bind(this),\n                null, null, null, \"_auth_1\"\n            );\n            this.send($iq({\n                    'type': \"get\",\n                    'to': this.domain,\n                    'id': \"_auth_1\"\n                }).c(\"query\", {xmlns: Strophe.NS.AUTH})\n                .c(\"username\", {}).t(Strophe.getNodeFromJid(this.jid))\n                .tree());\n        }\n    },\n\n    /** Function: authenticate\n     * Set up authentication\n     *\n     *  Continues the initial connection request by setting up authentication\n     *  handlers and starting the authentication process.\n     *\n     *  SASL authentication will be attempted if available, otherwise\n     *  the code will fall back to legacy authentication.\n     *\n     *  Parameters:\n     *    (Array) matched - Array of SASL mechanisms supported.\n     *\n     */\n    authenticate: function (matched) {\n        if (!this._attemptSASLAuth(matched)) {\n            this._attemptLegacyAuth();\n        }\n    },\n\n    /** PrivateFunction: _sasl_challenge_cb\n     *  _Private_ handler for the SASL challenge\n     *\n     */\n    _sasl_challenge_cb: function(elem) {\n      var challenge = atob(Strophe.getText(elem));\n      var response = this._sasl_mechanism.onChallenge(this, challenge);\n      var stanza = $build('response', {\n          'xmlns': Strophe.NS.SASL\n      });\n      if (response !== \"\") {\n        stanza.t(btoa(response));\n      }\n      this.send(stanza.tree());\n      return true;\n    },\n\n    /** PrivateFunction: _auth1_cb\n     *  _Private_ handler for legacy authentication.\n     *\n     *  This handler is called in response to the initial <iq type='get'/>\n     *  for legacy authentication.  It builds an authentication <iq/> and\n     *  sends it, creating a handler (calling back to _auth2_cb()) to\n     *  handle the result\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza that triggered the callback.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    /* jshint unused:false */\n    _auth1_cb: function (elem) {\n        // build plaintext auth iq\n        var iq = $iq({type: \"set\", id: \"_auth_2\"})\n            .c('query', {xmlns: Strophe.NS.AUTH})\n            .c('username', {}).t(Strophe.getNodeFromJid(this.jid))\n            .up()\n            .c('password').t(this.pass);\n\n        if (!Strophe.getResourceFromJid(this.jid)) {\n            // since the user has not supplied a resource, we pick\n            // a default one here.  unlike other auth methods, the server\n            // cannot do this for us.\n            this.jid = Strophe.getBareJidFromJid(this.jid) + '/strophe';\n        }\n        iq.up().c('resource', {}).t(Strophe.getResourceFromJid(this.jid));\n\n        this._addSysHandler(this._auth2_cb.bind(this), null,\n                            null, null, \"_auth_2\");\n        this.send(iq.tree());\n        return false;\n    },\n    /* jshint unused:true */\n\n    /** PrivateFunction: _sasl_success_cb\n     *  _Private_ handler for succesful SASL authentication.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_success_cb: function (elem) {\n        if (this._sasl_data[\"server-signature\"]) {\n            var serverSignature;\n            var success = atob(Strophe.getText(elem));\n            var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n            var matches = success.match(attribMatch);\n            if (matches[1] === \"v\") {\n                serverSignature = matches[2];\n            }\n\n            if (serverSignature !== this._sasl_data[\"server-signature\"]) {\n              // remove old handlers\n              this.deleteHandler(this._sasl_failure_handler);\n              this._sasl_failure_handler = null;\n              if (this._sasl_challenge_handler) {\n                this.deleteHandler(this._sasl_challenge_handler);\n                this._sasl_challenge_handler = null;\n              }\n\n              this._sasl_data = {};\n              return this._sasl_failure_cb(null);\n            }\n        }\n        Strophe.info(\"SASL authentication succeeded.\");\n\n        if (this._sasl_mechanism) {\n          this._sasl_mechanism.onSuccess();\n        }\n\n        // remove old handlers\n        this.deleteHandler(this._sasl_failure_handler);\n        this._sasl_failure_handler = null;\n        if (this._sasl_challenge_handler) {\n            this.deleteHandler(this._sasl_challenge_handler);\n            this._sasl_challenge_handler = null;\n        }\n\n        var streamfeature_handlers = [];\n        var wrapper = function(handlers, elem) {\n            while (handlers.length) {\n                this.deleteHandler(handlers.pop());\n            }\n            this._sasl_auth1_cb.bind(this)(elem);\n            return false;\n        };\n        streamfeature_handlers.push(this._addSysHandler(function(elem) {\n            wrapper.bind(this)(streamfeature_handlers, elem);\n        }.bind(this), null, \"stream:features\", null, null));\n        streamfeature_handlers.push(this._addSysHandler(function(elem) {\n            wrapper.bind(this)(streamfeature_handlers, elem);\n        }.bind(this), Strophe.NS.STREAM, \"features\", null, null));\n\n        // we must send an xmpp:restart now\n        this._sendRestart();\n\n        return false;\n    },\n\n    /** PrivateFunction: _sasl_auth1_cb\n     *  _Private_ handler to start stream binding.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_auth1_cb: function (elem) {\n        // save stream:features for future usage\n        this.features = elem;\n        var i, child;\n        for (i = 0; i < elem.childNodes.length; i++) {\n            child = elem.childNodes[i];\n            if (child.nodeName === 'bind') {\n                this.do_bind = true;\n            }\n\n            if (child.nodeName === 'session') {\n                this.do_session = true;\n            }\n        }\n\n        if (!this.do_bind) {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        } else {\n            this._addSysHandler(this._sasl_bind_cb.bind(this), null, null,\n                                null, \"_bind_auth_2\");\n\n            var resource = Strophe.getResourceFromJid(this.jid);\n            if (resource) {\n                this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                          .c('bind', {xmlns: Strophe.NS.BIND})\n                          .c('resource', {}).t(resource).tree());\n            } else {\n                this.send($iq({type: \"set\", id: \"_bind_auth_2\"})\n                          .c('bind', {xmlns: Strophe.NS.BIND})\n                          .tree());\n            }\n        }\n        return false;\n    },\n\n    /** PrivateFunction: _sasl_bind_cb\n     *  _Private_ handler for binding result and session start.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_bind_cb: function (elem) {\n        if (elem.getAttribute(\"type\") === \"error\") {\n            Strophe.info(\"SASL binding failed.\");\n            var conflict = elem.getElementsByTagName(\"conflict\"), condition;\n            if (conflict.length > 0) {\n                condition = 'conflict';\n            }\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, condition);\n            return false;\n        }\n\n        // TODO - need to grab errors\n        var bind = elem.getElementsByTagName(\"bind\");\n        var jidNode;\n        if (bind.length > 0) {\n            // Grab jid\n            jidNode = bind[0].getElementsByTagName(\"jid\");\n            if (jidNode.length > 0) {\n                this.jid = Strophe.getText(jidNode[0]);\n\n                if (this.do_session) {\n                    this._addSysHandler(this._sasl_session_cb.bind(this),\n                                        null, null, null, \"_session_auth_2\");\n\n                    this.send($iq({type: \"set\", id: \"_session_auth_2\"})\n                                  .c('session', {xmlns: Strophe.NS.SESSION})\n                                  .tree());\n                } else {\n                    this.authenticated = true;\n                    this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n                }\n            }\n        } else {\n            Strophe.info(\"SASL binding failed.\");\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        }\n    },\n\n    /** PrivateFunction: _sasl_session_cb\n     *  _Private_ handler to finish successful SASL connection.\n     *\n     *  This sets Connection.authenticated to true on success, which\n     *  starts the processing of user handlers.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _sasl_session_cb: function (elem) {\n        if (elem.getAttribute(\"type\") === \"result\") {\n            this.authenticated = true;\n            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n        } else if (elem.getAttribute(\"type\") === \"error\") {\n            Strophe.info(\"Session creation failed.\");\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            return false;\n        }\n        return false;\n    },\n\n    /** PrivateFunction: _sasl_failure_cb\n     *  _Private_ handler for SASL authentication failure.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The matching stanza.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    /* jshint unused:false */\n    _sasl_failure_cb: function (elem) {\n        // delete unneeded handlers\n        if (this._sasl_success_handler) {\n            this.deleteHandler(this._sasl_success_handler);\n            this._sasl_success_handler = null;\n        }\n        if (this._sasl_challenge_handler) {\n            this.deleteHandler(this._sasl_challenge_handler);\n            this._sasl_challenge_handler = null;\n        }\n\n        if(this._sasl_mechanism)\n          this._sasl_mechanism.onFailure();\n        this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n        return false;\n    },\n    /* jshint unused:true */\n\n    /** PrivateFunction: _auth2_cb\n     *  _Private_ handler to finish legacy authentication.\n     *\n     *  This handler is called when the result from the jabber:iq:auth\n     *  <iq/> stanza is returned.\n     *\n     *  Parameters:\n     *    (XMLElement) elem - The stanza that triggered the callback.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _auth2_cb: function (elem) {\n        if (elem.getAttribute(\"type\") === \"result\") {\n            this.authenticated = true;\n            this._changeConnectStatus(Strophe.Status.CONNECTED, null);\n        } else if (elem.getAttribute(\"type\") === \"error\") {\n            this._changeConnectStatus(Strophe.Status.AUTHFAIL, null);\n            this.disconnect('authentication failed');\n        }\n        return false;\n    },\n\n    /** PrivateFunction: _addSysTimedHandler\n     *  _Private_ function to add a system level timed handler.\n     *\n     *  This function is used to add a Strophe.TimedHandler for the\n     *  library code.  System timed handlers are allowed to run before\n     *  authentication is complete.\n     *\n     *  Parameters:\n     *    (Integer) period - The period of the handler.\n     *    (Function) handler - The callback function.\n     */\n    _addSysTimedHandler: function (period, handler) {\n        var thand = new Strophe.TimedHandler(period, handler);\n        thand.user = false;\n        this.addTimeds.push(thand);\n        return thand;\n    },\n\n    /** PrivateFunction: _addSysHandler\n     *  _Private_ function to add a system level stanza handler.\n     *\n     *  This function is used to add a Strophe.Handler for the\n     *  library code.  System stanza handlers are allowed to run before\n     *  authentication is complete.\n     *\n     *  Parameters:\n     *    (Function) handler - The callback function.\n     *    (String) ns - The namespace to match.\n     *    (String) name - The stanza name to match.\n     *    (String) type - The stanza type attribute to match.\n     *    (String) id - The stanza id attribute to match.\n     */\n    _addSysHandler: function (handler, ns, name, type, id) {\n        var hand = new Strophe.Handler(handler, ns, name, type, id);\n        hand.user = false;\n        this.addHandlers.push(hand);\n        return hand;\n    },\n\n    /** PrivateFunction: _onDisconnectTimeout\n     *  _Private_ timeout handler for handling non-graceful disconnection.\n     *\n     *  If the graceful disconnect process does not complete within the\n     *  time allotted, this handler finishes the disconnect anyway.\n     *\n     *  Returns:\n     *    false to remove the handler.\n     */\n    _onDisconnectTimeout: function () {\n        Strophe.info(\"_onDisconnectTimeout was called\");\n        this._changeConnectStatus(Strophe.Status.CONNTIMEOUT, null);\n        this._proto._onDisconnectTimeout();\n        // actually disconnect\n        this._doDisconnect();\n        return false;\n    },\n\n    /** PrivateFunction: _onIdle\n     *  _Private_ handler to process events during idle cycle.\n     *\n     *  This handler is called every 100ms to fire timed handlers that\n     *  are ready and keep poll requests going.\n     */\n    _onIdle: function () {\n        var i, thand, since, newList;\n\n        // add timed handlers scheduled for addition\n        // NOTE: we add before remove in the case a timed handler is\n        // added and then deleted before the next _onIdle() call.\n        while (this.addTimeds.length > 0) {\n            this.timedHandlers.push(this.addTimeds.pop());\n        }\n\n        // remove timed handlers that have been scheduled for deletion\n        while (this.removeTimeds.length > 0) {\n            thand = this.removeTimeds.pop();\n            i = this.timedHandlers.indexOf(thand);\n            if (i >= 0) {\n                this.timedHandlers.splice(i, 1);\n            }\n        }\n\n        // call ready timed handlers\n        var now = new Date().getTime();\n        newList = [];\n        for (i = 0; i < this.timedHandlers.length; i++) {\n            thand = this.timedHandlers[i];\n            if (this.authenticated || !thand.user) {\n                since = thand.lastCalled + thand.period;\n                if (since - now <= 0) {\n                    if (thand.run()) {\n                        newList.push(thand);\n                    }\n                } else {\n                    newList.push(thand);\n                }\n            }\n        }\n        this.timedHandlers = newList;\n\n        clearTimeout(this._idleTimeout);\n\n        this._proto._onIdle();\n\n        // reactivate the timer only if connected\n        if (this.connected) {\n            // XXX: setTimeout should be called only with function expressions (23974bc1)\n            this._idleTimeout = setTimeout(function() {\n                this._onIdle();\n            }.bind(this), 100);\n        }\n    }\n};\n\n/** Class: Strophe.SASLMechanism\n *\n *  encapsulates SASL authentication mechanisms.\n *\n *  User code may override the priority for each mechanism or disable it completely.\n *  See <priority> for information about changing priority and <test> for informatian on\n *  how to disable a mechanism.\n *\n *  By default, all mechanisms are enabled and the priorities are\n *\n *      OAUTHBEARER - 60\n *      SCRAM-SHA1 - 50\n *      DIGEST-MD5 - 40\n *      PLAIN - 30\n *      ANONYMOUS - 20\n *      EXTERNAL - 10\n *\n *  See: Strophe.Connection.addSupportedSASLMechanisms\n */\n\n/**\n * PrivateConstructor: Strophe.SASLMechanism\n * SASL auth mechanism abstraction.\n *\n *  Parameters:\n *    (String) name - SASL Mechanism name.\n *    (Boolean) isClientFirst - If client should send response first without challenge.\n *    (Number) priority - Priority.\n *\n *  Returns:\n *    A new Strophe.SASLMechanism object.\n */\nStrophe.SASLMechanism = function(name, isClientFirst, priority) {\n  /** PrivateVariable: name\n   *  Mechanism name.\n   */\n  this.name = name;\n  /** PrivateVariable: isClientFirst\n   *  If client sends response without initial server challenge.\n   */\n  this.isClientFirst = isClientFirst;\n  /** Variable: priority\n   *  Determines which <SASLMechanism> is chosen for authentication (Higher is better).\n   *  Users may override this to prioritize mechanisms differently.\n   *\n   *  In the default configuration the priorities are\n   *\n   *  SCRAM-SHA1 - 40\n   *  DIGEST-MD5 - 30\n   *  Plain - 20\n   *\n   *  Example: (This will cause Strophe to choose the mechanism that the server sent first)\n   *\n   *  > Strophe.SASLMD5.priority = Strophe.SASLSHA1.priority;\n   *\n   *  See <SASL mechanisms> for a list of available mechanisms.\n   *\n   */\n  this.priority = priority;\n};\n\nStrophe.SASLMechanism.prototype = {\n  /**\n   *  Function: test\n   *  Checks if mechanism able to run.\n   *  To disable a mechanism, make this return false;\n   *\n   *  To disable plain authentication run\n   *  > Strophe.SASLPlain.test = function() {\n   *  >   return false;\n   *  > }\n   *\n   *  See <SASL mechanisms> for a list of available mechanisms.\n   *\n   *  Parameters:\n   *    (Strophe.Connection) connection - Target Connection.\n   *\n   *  Returns:\n   *    (Boolean) If mechanism was able to run.\n   */\n  /* jshint unused:false */\n  test: function(connection) {\n    return true;\n  },\n  /* jshint unused:true */\n\n  /** PrivateFunction: onStart\n   *  Called before starting mechanism on some connection.\n   *\n   *  Parameters:\n   *    (Strophe.Connection) connection - Target Connection.\n   */\n  onStart: function(connection) {\n    this._connection = connection;\n  },\n\n  /** PrivateFunction: onChallenge\n   *  Called by protocol implementation on incoming challenge. If client is\n   *  first (isClientFirst === true) challenge will be null on the first call.\n   *\n   *  Parameters:\n   *    (Strophe.Connection) connection - Target Connection.\n   *    (String) challenge - current challenge to handle.\n   *\n   *  Returns:\n   *    (String) Mechanism response.\n   */\n  /* jshint unused:false */\n  onChallenge: function(connection, challenge) {\n    throw new Error(\"You should implement challenge handling!\");\n  },\n  /* jshint unused:true */\n\n  /** PrivateFunction: onFailure\n   *  Protocol informs mechanism implementation about SASL failure.\n   */\n  onFailure: function() {\n    this._connection = null;\n  },\n\n  /** PrivateFunction: onSuccess\n   *  Protocol informs mechanism implementation about SASL success.\n   */\n  onSuccess: function() {\n    this._connection = null;\n  }\n};\n\n  /** Constants: SASL mechanisms\n   *  Available authentication mechanisms\n   *\n   *  Strophe.SASLAnonymous - SASL ANONYMOUS authentication.\n   *  Strophe.SASLPlain - SASL PLAIN authentication.\n   *  Strophe.SASLMD5 - SASL DIGEST-MD5 authentication\n   *  Strophe.SASLSHA1 - SASL SCRAM-SHA1 authentication\n   *  Strophe.SASLOAuthBearer - SASL OAuth Bearer authentication\n   *  Strophe.SASLExternal - SASL EXTERNAL authentication\n   */\n\n// Building SASL callbacks\n\n/** PrivateConstructor: SASLAnonymous\n *  SASL ANONYMOUS authentication.\n */\nStrophe.SASLAnonymous = function() {};\nStrophe.SASLAnonymous.prototype = new Strophe.SASLMechanism(\"ANONYMOUS\", false, 20);\n\nStrophe.SASLAnonymous.prototype.test = function(connection) {\n    return connection.authcid === null;\n};\n\n\n/** PrivateConstructor: SASLPlain\n *  SASL PLAIN authentication.\n */\nStrophe.SASLPlain = function() {};\nStrophe.SASLPlain.prototype = new Strophe.SASLMechanism(\"PLAIN\", true, 30);\n\nStrophe.SASLPlain.prototype.test = function(connection) {\n    return connection.authcid !== null;\n};\n\nStrophe.SASLPlain.prototype.onChallenge = function(connection) {\n    var auth_str = connection.authzid;\n    auth_str = auth_str + \"\\u0000\";\n    auth_str = auth_str + connection.authcid;\n    auth_str = auth_str + \"\\u0000\";\n    auth_str = auth_str + connection.pass;\n    return utils.utf16to8(auth_str);\n};\n\n\n/** PrivateConstructor: SASLSHA1\n *  SASL SCRAM SHA 1 authentication.\n */\nStrophe.SASLSHA1 = function() {};\nStrophe.SASLSHA1.prototype = new Strophe.SASLMechanism(\"SCRAM-SHA-1\", true, 50);\n\nStrophe.SASLSHA1.prototype.test = function(connection) {\n    return connection.authcid !== null;\n};\n\nStrophe.SASLSHA1.prototype.onChallenge = function(connection, challenge, test_cnonce) {\n  var cnonce = test_cnonce || MD5.hexdigest(Math.random() * 1234567890);\n  var auth_str = \"n=\" + utils.utf16to8(connection.authcid);\n  auth_str += \",r=\";\n  auth_str += cnonce;\n  connection._sasl_data.cnonce = cnonce;\n  connection._sasl_data[\"client-first-message-bare\"] = auth_str;\n\n  auth_str = \"n,,\" + auth_str;\n\n  this.onChallenge = function (connection, challenge) {\n    var nonce, salt, iter, Hi, U, U_old, i, k, pass;\n    var clientKey, serverKey, clientSignature;\n    var responseText = \"c=biws,\";\n    var authMessage = connection._sasl_data[\"client-first-message-bare\"] + \",\" +\n      challenge + \",\";\n    var cnonce = connection._sasl_data.cnonce;\n    var attribMatch = /([a-z]+)=([^,]+)(,|$)/;\n\n    while (challenge.match(attribMatch)) {\n      var matches = challenge.match(attribMatch);\n      challenge = challenge.replace(matches[0], \"\");\n      switch (matches[1]) {\n      case \"r\":\n        nonce = matches[2];\n        break;\n      case \"s\":\n        salt = matches[2];\n        break;\n      case \"i\":\n        iter = matches[2];\n        break;\n      }\n    }\n\n    if (nonce.substr(0, cnonce.length) !== cnonce) {\n      connection._sasl_data = {};\n      return connection._sasl_failure_cb();\n    }\n\n    responseText += \"r=\" + nonce;\n    authMessage += responseText;\n\n    salt = atob(salt);\n    salt += \"\\x00\\x00\\x00\\x01\";\n\n    pass = utils.utf16to8(connection.pass);\n    Hi = U_old = SHA1.core_hmac_sha1(pass, salt);\n    for (i = 1; i < iter; i++) {\n      U = SHA1.core_hmac_sha1(pass, SHA1.binb2str(U_old));\n      for (k = 0; k < 5; k++) {\n        Hi[k] ^= U[k];\n      }\n      U_old = U;\n    }\n    Hi = SHA1.binb2str(Hi);\n\n    clientKey = SHA1.core_hmac_sha1(Hi, \"Client Key\");\n    serverKey = SHA1.str_hmac_sha1(Hi, \"Server Key\");\n    clientSignature = SHA1.core_hmac_sha1(SHA1.str_sha1(SHA1.binb2str(clientKey)), authMessage);\n    connection._sasl_data[\"server-signature\"] = SHA1.b64_hmac_sha1(serverKey, authMessage);\n\n    for (k = 0; k < 5; k++) {\n      clientKey[k] ^= clientSignature[k];\n    }\n\n    responseText += \",p=\" + btoa(SHA1.binb2str(clientKey));\n    return responseText;\n  }.bind(this);\n\n  return auth_str;\n};\n\n\n/** PrivateConstructor: SASLMD5\n *  SASL DIGEST MD5 authentication.\n */\nStrophe.SASLMD5 = function() {};\nStrophe.SASLMD5.prototype = new Strophe.SASLMechanism(\"DIGEST-MD5\", false, 40);\n\nStrophe.SASLMD5.prototype.test = function(connection) {\n    return connection.authcid !== null;\n};\n\n/** PrivateFunction: _quote\n *  _Private_ utility function to backslash escape and quote strings.\n *\n *  Parameters:\n *    (String) str - The string to be quoted.\n *\n *  Returns:\n *    quoted string\n */\nStrophe.SASLMD5.prototype._quote = function (str) {\n    return '\"' + str.replace(/\\\\/g, \"\\\\\\\\\").replace(/\"/g, '\\\\\"') + '\"';\n    //\" end string workaround for emacs\n};\n\nStrophe.SASLMD5.prototype.onChallenge = function(connection, challenge, test_cnonce) {\n  var attribMatch = /([a-z]+)=(\"[^\"]+\"|[^,\"]+)(?:,|$)/;\n  var cnonce = test_cnonce || MD5.hexdigest(\"\" + (Math.random() * 1234567890));\n  var realm = \"\";\n  var host = null;\n  var nonce = \"\";\n  var qop = \"\";\n  var matches;\n\n  while (challenge.match(attribMatch)) {\n    matches = challenge.match(attribMatch);\n    challenge = challenge.replace(matches[0], \"\");\n    matches[2] = matches[2].replace(/^\"(.+)\"$/, \"$1\");\n    switch (matches[1]) {\n    case \"realm\":\n      realm = matches[2];\n      break;\n    case \"nonce\":\n      nonce = matches[2];\n      break;\n    case \"qop\":\n      qop = matches[2];\n      break;\n    case \"host\":\n      host = matches[2];\n      break;\n    }\n  }\n\n  var digest_uri = connection.servtype + \"/\" + connection.domain;\n  if (host !== null) {\n    digest_uri = digest_uri + \"/\" + host;\n  }\n\n  var cred = utils.utf16to8(connection.authcid + \":\" + realm + \":\" + this._connection.pass);\n  var A1 = MD5.hash(cred) + \":\" + nonce + \":\" + cnonce;\n  var A2 = 'AUTHENTICATE:' + digest_uri;\n\n  var responseText = \"\";\n  responseText += 'charset=utf-8,';\n  responseText += 'username=' + this._quote(utils.utf16to8(connection.authcid)) + ',';\n  responseText += 'realm=' + this._quote(realm) + ',';\n  responseText += 'nonce=' + this._quote(nonce) + ',';\n  responseText += 'nc=00000001,';\n  responseText += 'cnonce=' + this._quote(cnonce) + ',';\n  responseText += 'digest-uri=' + this._quote(digest_uri) + ',';\n  responseText += 'response=' + MD5.hexdigest(MD5.hexdigest(A1) + \":\" +\n                                              nonce + \":00000001:\" +\n                                              cnonce + \":auth:\" +\n                                              MD5.hexdigest(A2)) + \",\";\n  responseText += 'qop=auth';\n\n  this.onChallenge = function () {\n      return \"\";\n  };\n  return responseText;\n};\n\n\n/** PrivateConstructor: SASLOAuthBearer\n *  SASL OAuth Bearer authentication.\n */\nStrophe.SASLOAuthBearer = function() {};\nStrophe.SASLOAuthBearer.prototype = new Strophe.SASLMechanism(\"OAUTHBEARER\", true, 60);\n\nStrophe.SASLOAuthBearer.prototype.test = function(connection) {\n    return connection.pass !== null;\n};\n\nStrophe.SASLOAuthBearer.prototype.onChallenge = function(connection) {\n    var auth_str = 'n,';\n    if (connection.authcid !== null) {\n      auth_str = auth_str + 'a=' + connection.authzid;\n    }\n    auth_str = auth_str + ',';\n    auth_str = auth_str + \"\\u0001\";\n    auth_str = auth_str + 'auth=Bearer ';\n    auth_str = auth_str + connection.pass;\n    auth_str = auth_str + \"\\u0001\";\n    auth_str = auth_str + \"\\u0001\";\n\n    return utils.utf16to8(auth_str);\n};\n\n\n/** PrivateConstructor: SASLExternal\n *  SASL EXTERNAL authentication.\n *\n *  The EXTERNAL mechanism allows a client to request the server to use\n *  credentials established by means external to the mechanism to\n *  authenticate the client. The external means may be, for instance,\n *  TLS services.\n */\nStrophe.SASLExternal = function() {};\nStrophe.SASLExternal.prototype = new Strophe.SASLMechanism(\"EXTERNAL\", true, 10);\n\nStrophe.SASLExternal.prototype.onChallenge = function(connection) {\n    /** According to XEP-178, an authzid SHOULD NOT be presented when the\n     * authcid contained or implied in the client certificate is the JID (i.e.\n     * authzid) with which the user wants to log in as.\n     *\n     * To NOT send the authzid, the user should therefore set the authcid equal\n     * to the JID when instantiating a new Strophe.Connection object.\n     */\n    return connection.authcid === connection.authzid ? '' : connection.authzid;\n};\n\nreturn {\n    'Strophe':         Strophe,\n    '$build':          $build,\n    '$iq':             $iq,\n    '$msg':            $msg,\n    '$pres':           $pres,\n    'SHA1':            SHA1,\n    'MD5':             MD5,\n    'b64_hmac_sha1':   SHA1.b64_hmac_sha1,\n    'b64_sha1':        SHA1.b64_sha1,\n    'str_hmac_sha1':   SHA1.str_hmac_sha1,\n    'str_sha1':        SHA1.str_sha1\n};\n}));\n\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\n/* global define, window, setTimeout, clearTimeout, XMLHttpRequest, ActiveXObject, Strophe, $build */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-bosh',['strophe-core'], function (core) {\n            return factory(\n                core.Strophe,\n                core.$build\n            );\n        });\n    } else {\n        // Browser globals\n        return factory(Strophe, $build);\n    }\n}(this, function (Strophe, $build) {\n\n/** PrivateClass: Strophe.Request\n *  _Private_ helper class that provides a cross implementation abstraction\n *  for a BOSH related XMLHttpRequest.\n *\n *  The Strophe.Request class is used internally to encapsulate BOSH request\n *  information.  It is not meant to be used from user's code.\n */\n\n/** PrivateConstructor: Strophe.Request\n *  Create and initialize a new Strophe.Request object.\n *\n *  Parameters:\n *    (XMLElement) elem - The XML data to be sent in the request.\n *    (Function) func - The function that will be called when the\n *      XMLHttpRequest readyState changes.\n *    (Integer) rid - The BOSH rid attribute associated with this request.\n *    (Integer) sends - The number of times this same request has been sent.\n */\nStrophe.Request = function (elem, func, rid, sends) {\n    this.id = ++Strophe._requestId;\n    this.xmlData = elem;\n    this.data = Strophe.serialize(elem);\n    // save original function in case we need to make a new request\n    // from this one.\n    this.origFunc = func;\n    this.func = func;\n    this.rid = rid;\n    this.date = NaN;\n    this.sends = sends || 0;\n    this.abort = false;\n    this.dead = null;\n\n    this.age = function () {\n        if (!this.date) { return 0; }\n        var now = new Date();\n        return (now - this.date) / 1000;\n    };\n    this.timeDead = function () {\n        if (!this.dead) { return 0; }\n        var now = new Date();\n        return (now - this.dead) / 1000;\n    };\n    this.xhr = this._newXHR();\n};\n\nStrophe.Request.prototype = {\n    /** PrivateFunction: getResponse\n     *  Get a response from the underlying XMLHttpRequest.\n     *\n     *  This function attempts to get a response from the request and checks\n     *  for errors.\n     *\n     *  Throws:\n     *    \"parsererror\" - A parser error occured.\n     *    \"badformat\" - The entity has sent XML that cannot be processed.\n     *\n     *  Returns:\n     *    The DOM element tree of the response.\n     */\n    getResponse: function () {\n        var node = null;\n        if (this.xhr.responseXML && this.xhr.responseXML.documentElement) {\n            node = this.xhr.responseXML.documentElement;\n            if (node.tagName === \"parsererror\") {\n                Strophe.error(\"invalid response received\");\n                Strophe.error(\"responseText: \" + this.xhr.responseText);\n                Strophe.error(\"responseXML: \" +\n                              Strophe.serialize(this.xhr.responseXML));\n                throw \"parsererror\";\n            }\n        } else if (this.xhr.responseText) {\n            Strophe.error(\"invalid response received\");\n            Strophe.error(\"responseText: \" + this.xhr.responseText);\n            throw \"badformat\";\n        }\n\n        return node;\n    },\n\n    /** PrivateFunction: _newXHR\n     *  _Private_ helper function to create XMLHttpRequests.\n     *\n     *  This function creates XMLHttpRequests across all implementations.\n     *\n     *  Returns:\n     *    A new XMLHttpRequest.\n     */\n    _newXHR: function () {\n        var xhr = null;\n        if (window.XMLHttpRequest) {\n            xhr = new XMLHttpRequest();\n            if (xhr.overrideMimeType) {\n                xhr.overrideMimeType(\"text/xml; charset=utf-8\");\n            }\n        } else if (window.ActiveXObject) {\n            xhr = new ActiveXObject(\"Microsoft.XMLHTTP\");\n        }\n        // use Function.bind() to prepend ourselves as an argument\n        xhr.onreadystatechange = this.func.bind(null, this);\n        return xhr;\n    }\n};\n\n/** Class: Strophe.Bosh\n *  _Private_ helper class that handles BOSH Connections\n *\n *  The Strophe.Bosh class is used internally by Strophe.Connection\n *  to encapsulate BOSH sessions. It is not meant to be used from user's code.\n */\n\n/** File: bosh.js\n *  A JavaScript library to enable BOSH in Strophejs.\n *\n *  this library uses Bidirectional-streams Over Synchronous HTTP (BOSH)\n *  to emulate a persistent, stateful, two-way connection to an XMPP server.\n *  More information on BOSH can be found in XEP 124.\n */\n\n/** PrivateConstructor: Strophe.Bosh\n *  Create and initialize a Strophe.Bosh object.\n *\n *  Parameters:\n *    (Strophe.Connection) connection - The Strophe.Connection that will use BOSH.\n *\n *  Returns:\n *    A new Strophe.Bosh object.\n */\nStrophe.Bosh = function(connection) {\n    this._conn = connection;\n    /* request id for body tags */\n    this.rid = Math.floor(Math.random() * 4294967295);\n    /* The current session ID. */\n    this.sid = null;\n\n    // default BOSH values\n    this.hold = 1;\n    this.wait = 60;\n    this.window = 5;\n    this.errors = 0;\n    this.inactivity = null;\n\n    this._requests = [];\n};\n\nStrophe.Bosh.prototype = {\n    /** Variable: strip\n     *\n     *  BOSH-Connections will have all stanzas wrapped in a <body> tag when\n     *  passed to <Strophe.Connection.xmlInput> or <Strophe.Connection.xmlOutput>.\n     *  To strip this tag, User code can set <Strophe.Bosh.strip> to \"body\":\n     *\n     *  > Strophe.Bosh.prototype.strip = \"body\";\n     *\n     *  This will enable stripping of the body tag in both\n     *  <Strophe.Connection.xmlInput> and <Strophe.Connection.xmlOutput>.\n     */\n    strip: null,\n\n    /** PrivateFunction: _buildBody\n     *  _Private_ helper function to generate the <body/> wrapper for BOSH.\n     *\n     *  Returns:\n     *    A Strophe.Builder with a <body/> element.\n     */\n    _buildBody: function () {\n        var bodyWrap = $build('body', {\n            rid: this.rid++,\n            xmlns: Strophe.NS.HTTPBIND\n        });\n        if (this.sid !== null) {\n            bodyWrap.attrs({sid: this.sid});\n        }\n        if (this._conn.options.keepalive && this._conn._sessionCachingSupported()) {\n            this._cacheSession();\n        }\n        return bodyWrap;\n    },\n\n    /** PrivateFunction: _reset\n     *  Reset the connection.\n     *\n     *  This function is called by the reset function of the Strophe Connection\n     */\n    _reset: function () {\n        this.rid = Math.floor(Math.random() * 4294967295);\n        this.sid = null;\n        this.errors = 0;\n        if (this._conn._sessionCachingSupported()) {\n            window.sessionStorage.removeItem('strophe-bosh-session');\n        }\n\n        this._conn.nextValidRid(this.rid);\n    },\n\n    /** PrivateFunction: _connect\n     *  _Private_ function that initializes the BOSH connection.\n     *\n     *  Creates and sends the Request that initializes the BOSH connection.\n     */\n    _connect: function (wait, hold, route) {\n        this.wait = wait || this.wait;\n        this.hold = hold || this.hold;\n        this.errors = 0;\n\n        // build the body tag\n        var body = this._buildBody().attrs({\n            to: this._conn.domain,\n            \"xml:lang\": \"en\",\n            wait: this.wait,\n            hold: this.hold,\n            content: \"text/xml; charset=utf-8\",\n            ver: \"1.6\",\n            \"xmpp:version\": \"1.0\",\n            \"xmlns:xmpp\": Strophe.NS.BOSH\n        });\n\n        if(route){\n            body.attrs({\n                route: route\n            });\n        }\n\n        var _connect_cb = this._conn._connect_cb;\n\n        this._requests.push(\n            new Strophe.Request(body.tree(),\n                                this._onRequestStateChange.bind(\n                                    this, _connect_cb.bind(this._conn)),\n                                body.tree().getAttribute(\"rid\")));\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _attach\n     *  Attach to an already created and authenticated BOSH session.\n     *\n     *  This function is provided to allow Strophe to attach to BOSH\n     *  sessions which have been created externally, perhaps by a Web\n     *  application.  This is often used to support auto-login type features\n     *  without putting user credentials into the page.\n     *\n     *  Parameters:\n     *    (String) jid - The full JID that is bound by the session.\n     *    (String) sid - The SID of the BOSH session.\n     *    (String) rid - The current RID of the BOSH session.  This RID\n     *      will be used by the next request.\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    _attach: function (jid, sid, rid, callback, wait, hold, wind) {\n        this._conn.jid = jid;\n        this.sid = sid;\n        this.rid = rid;\n\n        this._conn.connect_callback = callback;\n\n        this._conn.domain = Strophe.getDomainFromJid(this._conn.jid);\n\n        this._conn.authenticated = true;\n        this._conn.connected = true;\n\n        this.wait = wait || this.wait;\n        this.hold = hold || this.hold;\n        this.window = wind || this.window;\n\n        this._conn._changeConnectStatus(Strophe.Status.ATTACHED, null);\n    },\n\n    /** PrivateFunction: _restore\n     *  Attempt to restore a cached BOSH session\n     *\n     *  Parameters:\n     *    (String) jid - The full JID that is bound by the session.\n     *      This parameter is optional but recommended, specifically in cases\n     *      where prebinded BOSH sessions are used where it's important to know\n     *      that the right session is being restored.\n     *    (Function) callback The connect callback function.\n     *    (Integer) wait - The optional HTTPBIND wait value.  This is the\n     *      time the server will wait before returning an empty result for\n     *      a request.  The default setting of 60 seconds is recommended.\n     *      Other settings will require tweaks to the Strophe.TIMEOUT value.\n     *    (Integer) hold - The optional HTTPBIND hold value.  This is the\n     *      number of connections the server will hold at one time.  This\n     *      should almost always be set to 1 (the default).\n     *    (Integer) wind - The optional HTTBIND window value.  This is the\n     *      allowed range of request ids that are valid.  The default is 5.\n     */\n    _restore: function (jid, callback, wait, hold, wind) {\n        var session = JSON.parse(window.sessionStorage.getItem('strophe-bosh-session'));\n        if (typeof session !== \"undefined\" &&\n                   session !== null &&\n                   session.rid &&\n                   session.sid &&\n                   session.jid &&\n                   (    typeof jid === \"undefined\" ||\n                        jid === null ||\n                        Strophe.getBareJidFromJid(session.jid) === Strophe.getBareJidFromJid(jid) ||\n                        // If authcid is null, then it's an anonymous login, so\n                        // we compare only the domains:\n                        ((Strophe.getNodeFromJid(jid) === null) && (Strophe.getDomainFromJid(session.jid) === jid))\n                    )\n        ) {\n            this._conn.restored = true;\n            this._attach(session.jid, session.sid, session.rid, callback, wait, hold, wind);\n        } else {\n            throw { name: \"StropheSessionError\", message: \"_restore: no restoreable session.\" };\n        }\n    },\n\n    /** PrivateFunction: _cacheSession\n     *  _Private_ handler for the beforeunload event.\n     *\n     *  This handler is used to process the Bosh-part of the initial request.\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     */\n    _cacheSession: function () {\n        if (this._conn.authenticated) {\n            if (this._conn.jid && this.rid && this.sid) {\n                window.sessionStorage.setItem('strophe-bosh-session', JSON.stringify({\n                    'jid': this._conn.jid,\n                    'rid': this.rid,\n                    'sid': this.sid\n                }));\n            }\n        } else {\n            window.sessionStorage.removeItem('strophe-bosh-session');\n        }\n    },\n\n    /** PrivateFunction: _connect_cb\n     *  _Private_ handler for initial connection request.\n     *\n     *  This handler is used to process the Bosh-part of the initial request.\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     */\n    _connect_cb: function (bodyWrap) {\n        var typ = bodyWrap.getAttribute(\"type\");\n        var cond, conflict;\n        if (typ !== null && typ === \"terminate\") {\n            // an error occurred\n            cond = bodyWrap.getAttribute(\"condition\");\n            Strophe.error(\"BOSH-Connection failed: \" + cond);\n            conflict = bodyWrap.getElementsByTagName(\"conflict\");\n            if (cond !== null) {\n                if (cond === \"remote-stream-error\" && conflict.length > 0) {\n                    cond = \"conflict\";\n                }\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, cond);\n            } else {\n                this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"unknown\");\n            }\n            this._conn._doDisconnect(cond);\n            return Strophe.Status.CONNFAIL;\n        }\n\n        // check to make sure we don't overwrite these if _connect_cb is\n        // called multiple times in the case of missing stream:features\n        if (!this.sid) {\n            this.sid = bodyWrap.getAttribute(\"sid\");\n        }\n        var wind = bodyWrap.getAttribute('requests');\n        if (wind) { this.window = parseInt(wind, 10); }\n        var hold = bodyWrap.getAttribute('hold');\n        if (hold) { this.hold = parseInt(hold, 10); }\n        var wait = bodyWrap.getAttribute('wait');\n        if (wait) { this.wait = parseInt(wait, 10); }\n        var inactivity = bodyWrap.getAttribute('inactivity');\n        if (inactivity) { this.inactivity = parseInt(inactivity, 10); }\n    },\n\n    /** PrivateFunction: _disconnect\n     *  _Private_ part of Connection.disconnect for Bosh\n     *\n     *  Parameters:\n     *    (Request) pres - This stanza will be sent before disconnecting.\n     */\n    _disconnect: function (pres) {\n        this._sendTerminate(pres);\n    },\n\n    /** PrivateFunction: _doDisconnect\n     *  _Private_ function to disconnect.\n     *\n     *  Resets the SID and RID.\n     */\n    _doDisconnect: function () {\n        this.sid = null;\n        this.rid = Math.floor(Math.random() * 4294967295);\n        if (this._conn._sessionCachingSupported()) {\n            window.sessionStorage.removeItem('strophe-bosh-session');\n        }\n\n        this._conn.nextValidRid(this.rid);\n    },\n\n    /** PrivateFunction: _emptyQueue\n     * _Private_ function to check if the Request queue is empty.\n     *\n     *  Returns:\n     *    True, if there are no Requests queued, False otherwise.\n     */\n    _emptyQueue: function () {\n        return this._requests.length === 0;\n    },\n\n    /** PrivateFunction: _callProtocolErrorHandlers\n     *  _Private_ function to call error handlers registered for HTTP errors.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The request that is changing readyState.\n     */\n    _callProtocolErrorHandlers: function (req) {\n        var reqStatus = this._getRequestStatus(req),\n            err_callback;\n        err_callback = this._conn.protocolErrorHandlers.HTTP[reqStatus];\n        if (err_callback) {\n            err_callback.call(this, reqStatus);\n        }\n    },\n\n    /** PrivateFunction: _hitError\n     *  _Private_ function to handle the error count.\n     *\n     *  Requests are resent automatically until their error count reaches\n     *  5.  Each time an error is encountered, this function is called to\n     *  increment the count and disconnect if the count is too high.\n     *\n     *  Parameters:\n     *    (Integer) reqStatus - The request status.\n     */\n    _hitError: function (reqStatus) {\n        this.errors++;\n        Strophe.warn(\"request errored, status: \" + reqStatus +\n                     \", number of errors: \" + this.errors);\n        if (this.errors > 4) {\n            this._conn._onDisconnectTimeout();\n        }\n    },\n\n    /** PrivateFunction: _no_auth_received\n     *\n     * Called on stream start/restart when no stream:features\n     * has been received and sends a blank poll request.\n     */\n    _no_auth_received: function (_callback) {\n        if (_callback) {\n            _callback = _callback.bind(this._conn);\n        } else {\n            _callback = this._conn._connect_cb.bind(this._conn);\n        }\n        var body = this._buildBody();\n        this._requests.push(\n                new Strophe.Request(body.tree(),\n                    this._onRequestStateChange.bind(\n                        this, _callback.bind(this._conn)),\n                    body.tree().getAttribute(\"rid\")));\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _onDisconnectTimeout\n     *  _Private_ timeout handler for handling non-graceful disconnection.\n     *\n     *  Cancels all remaining Requests and clears the queue.\n     */\n    _onDisconnectTimeout: function () {\n        this._abortAllRequests();\n    },\n\n    /** PrivateFunction: _abortAllRequests\n     *  _Private_ helper function that makes sure all pending requests are aborted.\n     */\n    _abortAllRequests: function _abortAllRequests() {\n        var req;\n        while (this._requests.length > 0) {\n            req = this._requests.pop();\n            req.abort = true;\n            req.xhr.abort();\n            // jslint complains, but this is fine. setting to empty func\n            // is necessary for IE6\n            req.xhr.onreadystatechange = function () {}; // jshint ignore:line\n        }\n    },\n\n    /** PrivateFunction: _onIdle\n     *  _Private_ handler called by Strophe.Connection._onIdle\n     *\n     *  Sends all queued Requests or polls with empty Request if there are none.\n     */\n    _onIdle: function () {\n        var data = this._conn._data;\n        // if no requests are in progress, poll\n        if (this._conn.authenticated && this._requests.length === 0 &&\n            data.length === 0 && !this._conn.disconnecting) {\n            Strophe.info(\"no requests during idle cycle, sending \" +\n                         \"blank request\");\n            data.push(null);\n        }\n\n        if (this._conn.paused) {\n            return;\n        }\n\n        if (this._requests.length < 2 && data.length > 0) {\n            var body = this._buildBody();\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    if (data[i] === \"restart\") {\n                        body.attrs({\n                            to: this._conn.domain,\n                            \"xml:lang\": \"en\",\n                            \"xmpp:restart\": \"true\",\n                            \"xmlns:xmpp\": Strophe.NS.BOSH\n                        });\n                    } else {\n                        body.cnode(data[i]).up();\n                    }\n                }\n            }\n            delete this._conn._data;\n            this._conn._data = [];\n            this._requests.push(\n                new Strophe.Request(body.tree(),\n                                    this._onRequestStateChange.bind(\n                                        this, this._conn._dataRecv.bind(this._conn)),\n                                    body.tree().getAttribute(\"rid\")));\n            this._throttledRequestHandler();\n        }\n\n        if (this._requests.length > 0) {\n            var time_elapsed = this._requests[0].age();\n            if (this._requests[0].dead !== null) {\n                if (this._requests[0].timeDead() >\n                    Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait)) {\n                    this._throttledRequestHandler();\n                }\n            }\n\n            if (time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait)) {\n                Strophe.warn(\"Request \" +\n                             this._requests[0].id +\n                             \" timed out, over \" + Math.floor(Strophe.TIMEOUT * this.wait) +\n                             \" seconds since last activity\");\n                this._throttledRequestHandler();\n            }\n        }\n    },\n\n    /** PrivateFunction: _getRequestStatus\n     *\n     *  Returns the HTTP status code from a Strophe.Request\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The Strophe.Request instance.\n     *    (Integer) def - The default value that should be returned if no\n     *          status value was found.\n     */\n    _getRequestStatus: function (req, def) {\n        var reqStatus;\n        if (req.xhr.readyState === 4) {\n            try {\n                reqStatus = req.xhr.status;\n            } catch (e) {\n                // ignore errors from undefined status attribute. Works\n                // around a browser bug\n                Strophe.error(\n                    \"Caught an error while retrieving a request's status, \" +\n                    \"reqStatus: \" + reqStatus);\n            }\n        }\n        if (typeof(reqStatus) === \"undefined\") {\n            reqStatus = typeof def === 'number' ? def : 0;\n        }\n        return reqStatus;\n    },\n\n    /** PrivateFunction: _onRequestStateChange\n     *  _Private_ handler for Strophe.Request state changes.\n     *\n     *  This function is called when the XMLHttpRequest readyState changes.\n     *  It contains a lot of error handling logic for the many ways that\n     *  requests can fail, and calls the request callback when requests\n     *  succeed.\n     *\n     *  Parameters:\n     *    (Function) func - The handler for the request.\n     *    (Strophe.Request) req - The request that is changing readyState.\n     */\n    _onRequestStateChange: function (func, req) {\n        Strophe.debug(\"request id \"+req.id+\".\"+req.sends+\n                      \" state changed to \"+req.xhr.readyState);\n        if (req.abort) {\n            req.abort = false;\n            return;\n        }\n        if (req.xhr.readyState !== 4) {\n            // The request is not yet complete\n            return;\n        }\n        var reqStatus = this._getRequestStatus(req);\n        if (this.disconnecting && reqStatus >= 400) {\n            this._hitError(reqStatus);\n            this._callProtocolErrorHandlers(req);\n            return;\n        }\n\n        var valid_request = reqStatus > 0 && reqStatus < 500;\n        var too_many_retries = req.sends > this._conn.maxRetries;\n        if (valid_request || too_many_retries) {\n            // remove from internal queue\n            this._removeRequest(req);\n            Strophe.debug(\"request id \"+req.id+\" should now be removed\");\n        }\n\n        if (reqStatus === 200) {\n            // request succeeded\n            var reqIs0 = (this._requests[0] === req);\n            var reqIs1 = (this._requests[1] === req);\n            // if request 1 finished, or request 0 finished and request\n            // 1 is over Strophe.SECONDARY_TIMEOUT seconds old, we need to\n            // restart the other - both will be in the first spot, as the\n            // completed request has been removed from the queue already\n            if (reqIs1 ||\n                (reqIs0 && this._requests.length > 0 &&\n                    this._requests[0].age() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait))) {\n                this._restartRequest(0);\n            }\n            this._conn.nextValidRid(Number(req.rid) + 1);\n            Strophe.debug(\"request id \"+req.id+\".\"+req.sends+\" got 200\");\n            func(req); // call handler\n            this.errors = 0;\n        } else if (reqStatus === 0 ||\n                   (reqStatus >= 400 && reqStatus < 600) ||\n                   reqStatus >= 12000) {\n            // request failed\n            Strophe.error(\"request id \"+req.id+\".\"+req.sends+\" error \"+reqStatus+\" happened\");\n            this._hitError(reqStatus);\n            this._callProtocolErrorHandlers(req);\n            if (reqStatus >= 400 && reqStatus < 500) {\n                this._conn._changeConnectStatus(Strophe.Status.DISCONNECTING, null);\n                this._conn._doDisconnect();\n            }\n        } else {\n            Strophe.error(\"request id \"+req.id+\".\"+req.sends+\" error \"+reqStatus+\" happened\");\n        }\n\n        if (!valid_request && !too_many_retries) {\n            this._throttledRequestHandler();\n        } else if (too_many_retries && !this._conn.connected) {\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, \"giving-up\");\n        }\n    },\n\n    /** PrivateFunction: _processRequest\n     *  _Private_ function to process a request in the queue.\n     *\n     *  This function takes requests off the queue and sends them and\n     *  restarts dead requests.\n     *\n     *  Parameters:\n     *    (Integer) i - The index of the request in the queue.\n     */\n    _processRequest: function (i) {\n        var self = this;\n        var req = this._requests[i];\n        var reqStatus = this._getRequestStatus(req, -1);\n\n        // make sure we limit the number of retries\n        if (req.sends > this._conn.maxRetries) {\n            this._conn._onDisconnectTimeout();\n            return;\n        }\n\n        var time_elapsed = req.age();\n        var primaryTimeout = (!isNaN(time_elapsed) &&\n                              time_elapsed > Math.floor(Strophe.TIMEOUT * this.wait));\n        var secondaryTimeout = (req.dead !== null &&\n                                req.timeDead() > Math.floor(Strophe.SECONDARY_TIMEOUT * this.wait));\n        var requestCompletedWithServerError = (req.xhr.readyState === 4 &&\n                                               (reqStatus < 1 || reqStatus >= 500));\n        if (primaryTimeout || secondaryTimeout ||\n            requestCompletedWithServerError) {\n            if (secondaryTimeout) {\n                Strophe.error(\"Request \" + this._requests[i].id +\n                              \" timed out (secondary), restarting\");\n            }\n            req.abort = true;\n            req.xhr.abort();\n            // setting to null fails on IE6, so set to empty function\n            req.xhr.onreadystatechange = function () {};\n            this._requests[i] = new Strophe.Request(req.xmlData,\n                                                    req.origFunc,\n                                                    req.rid,\n                                                    req.sends);\n            req = this._requests[i];\n        }\n\n        if (req.xhr.readyState === 0) {\n            Strophe.debug(\"request id \"+req.id+\".\"+req.sends+\" posting\");\n\n            try {\n                var contentType = this._conn.options.contentType || \"text/xml; charset=utf-8\";\n                req.xhr.open(\"POST\", this._conn.service, this._conn.options.sync ? false : true);\n                if (typeof req.xhr.setRequestHeader !== 'undefined') {\n                    // IE9 doesn't have setRequestHeader\n                    req.xhr.setRequestHeader(\"Content-Type\", contentType);\n                }\n                if (this._conn.options.withCredentials) {\n                    req.xhr.withCredentials = true;\n                }\n            } catch (e2) {\n                Strophe.error(\"XHR open failed: \" + e2.toString());\n                if (!this._conn.connected) {\n                    this._conn._changeConnectStatus(\n                            Strophe.Status.CONNFAIL, \"bad-service\");\n                }\n                this._conn.disconnect();\n                return;\n            }\n\n            // Fires the XHR request -- may be invoked immediately\n            // or on a gradually expanding retry window for reconnects\n            var sendFunc = function () {\n                req.date = new Date();\n                if (self._conn.options.customHeaders){\n                    var headers = self._conn.options.customHeaders;\n                    for (var header in headers) {\n                        if (headers.hasOwnProperty(header)) {\n                            req.xhr.setRequestHeader(header, headers[header]);\n                        }\n                    }\n                }\n                req.xhr.send(req.data);\n            };\n\n            // Implement progressive backoff for reconnects --\n            // First retry (send === 1) should also be instantaneous\n            if (req.sends > 1) {\n                // Using a cube of the retry number creates a nicely\n                // expanding retry window\n                var backoff = Math.min(Math.floor(Strophe.TIMEOUT * this.wait),\n                                       Math.pow(req.sends, 3)) * 1000;\n                setTimeout(function() {\n                    // XXX: setTimeout should be called only with function expressions (23974bc1)\n                    sendFunc();\n                }, backoff);\n            } else {\n                sendFunc();\n            }\n\n            req.sends++;\n\n            if (this._conn.xmlOutput !== Strophe.Connection.prototype.xmlOutput) {\n                if (req.xmlData.nodeName === this.strip && req.xmlData.childNodes.length) {\n                    this._conn.xmlOutput(req.xmlData.childNodes[0]);\n                } else {\n                    this._conn.xmlOutput(req.xmlData);\n                }\n            }\n            if (this._conn.rawOutput !== Strophe.Connection.prototype.rawOutput) {\n                this._conn.rawOutput(req.data);\n            }\n        } else {\n            Strophe.debug(\"_processRequest: \" +\n                          (i === 0 ? \"first\" : \"second\") +\n                          \" request has readyState of \" +\n                          req.xhr.readyState);\n        }\n    },\n\n    /** PrivateFunction: _removeRequest\n     *  _Private_ function to remove a request from the queue.\n     *\n     *  Parameters:\n     *    (Strophe.Request) req - The request to remove.\n     */\n    _removeRequest: function (req) {\n        Strophe.debug(\"removing request\");\n        var i;\n        for (i = this._requests.length - 1; i >= 0; i--) {\n            if (req === this._requests[i]) {\n                this._requests.splice(i, 1);\n            }\n        }\n        // IE6 fails on setting to null, so set to empty function\n        req.xhr.onreadystatechange = function () {};\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _restartRequest\n     *  _Private_ function to restart a request that is presumed dead.\n     *\n     *  Parameters:\n     *    (Integer) i - The index of the request in the queue.\n     */\n    _restartRequest: function (i) {\n        var req = this._requests[i];\n        if (req.dead === null) {\n            req.dead = new Date();\n        }\n\n        this._processRequest(i);\n    },\n\n    /** PrivateFunction: _reqToData\n     * _Private_ function to get a stanza out of a request.\n     *\n     * Tries to extract a stanza out of a Request Object.\n     * When this fails the current connection will be disconnected.\n     *\n     *  Parameters:\n     *    (Object) req - The Request.\n     *\n     *  Returns:\n     *    The stanza that was passed.\n     */\n    _reqToData: function (req) {\n        try {\n            return req.getResponse();\n        } catch (e) {\n            if (e !== \"parsererror\") { throw e; }\n            this._conn.disconnect(\"strophe-parsererror\");\n        }\n    },\n\n    /** PrivateFunction: _sendTerminate\n     *  _Private_ function to send initial disconnect sequence.\n     *\n     *  This is the first step in a graceful disconnect.  It sends\n     *  the BOSH server a terminate body and includes an unavailable\n     *  presence if authentication has completed.\n     */\n    _sendTerminate: function (pres) {\n        Strophe.info(\"_sendTerminate was called\");\n        var body = this._buildBody().attrs({type: \"terminate\"});\n        if (pres) {\n            body.cnode(pres.tree());\n        }\n        var req = new Strophe.Request(\n            body.tree(),\n            this._onRequestStateChange.bind(\n            this, this._conn._dataRecv.bind(this._conn)),\n            body.tree().getAttribute(\"rid\")\n        );\n        this._requests.push(req);\n        this._throttledRequestHandler();\n    },\n\n    /** PrivateFunction: _send\n     *  _Private_ part of the Connection.send function for BOSH\n     *\n     * Just triggers the RequestHandler to send the messages that are in the queue\n     */\n    _send: function () {\n        clearTimeout(this._conn._idleTimeout);\n        this._throttledRequestHandler();\n\n        // XXX: setTimeout should be called only with function expressions (23974bc1)\n        this._conn._idleTimeout = setTimeout(function() {\n            this._onIdle();\n        }.bind(this._conn), 100);\n    },\n\n    /** PrivateFunction: _sendRestart\n     *\n     *  Send an xmpp:restart stanza.\n     */\n    _sendRestart: function () {\n        this._throttledRequestHandler();\n        clearTimeout(this._conn._idleTimeout);\n    },\n\n    /** PrivateFunction: _throttledRequestHandler\n     *  _Private_ function to throttle requests to the connection window.\n     *\n     *  This function makes sure we don't send requests so fast that the\n     *  request ids overflow the connection window in the case that one\n     *  request died.\n     */\n    _throttledRequestHandler: function () {\n        if (!this._requests) {\n            Strophe.debug(\"_throttledRequestHandler called with \" +\n                          \"undefined requests\");\n        } else {\n            Strophe.debug(\"_throttledRequestHandler called with \" +\n                          this._requests.length + \" requests\");\n        }\n\n        if (!this._requests || this._requests.length === 0) {\n            return;\n        }\n\n        if (this._requests.length > 0) {\n            this._processRequest(0);\n        }\n\n        if (this._requests.length > 1 &&\n            Math.abs(this._requests[0].rid -\n                     this._requests[1].rid) < this.window) {\n            this._processRequest(1);\n        }\n    }\n};\nreturn Strophe;\n}));\n\n/*\n    This program is distributed under the terms of the MIT license.\n    Please see the LICENSE file for details.\n\n    Copyright 2006-2008, OGG, LLC\n*/\n\n/* jshint undef: true, unused: true:, noarg: true, latedef: true */\n/* global define, window, clearTimeout, WebSocket, DOMParser, Strophe, $build */\n\n(function (root, factory) {\n    if (typeof define === 'function' && define.amd) {\n        define('strophe-websocket',['strophe-core'], function (core) {\n            return factory(\n                core.Strophe,\n                core.$build\n            );\n        });\n    } else {\n        // Browser globals\n        return factory(Strophe, $build);\n    }\n}(this, function (Strophe, $build) {\n\n/** Class: Strophe.WebSocket\n *  _Private_ helper class that handles WebSocket Connections\n *\n *  The Strophe.WebSocket class is used internally by Strophe.Connection\n *  to encapsulate WebSocket sessions. It is not meant to be used from user's code.\n */\n\n/** File: websocket.js\n *  A JavaScript library to enable XMPP over Websocket in Strophejs.\n *\n *  This file implements XMPP over WebSockets for Strophejs.\n *  If a Connection is established with a Websocket url (ws://...)\n *  Strophe will use WebSockets.\n *  For more information on XMPP-over-WebSocket see RFC 7395:\n *  http://tools.ietf.org/html/rfc7395\n *\n *  WebSocket support implemented by Andreas Guth (andreas.guth@rwth-aachen.de)\n */\n\n/** PrivateConstructor: Strophe.Websocket\n *  Create and initialize a Strophe.WebSocket object.\n *  Currently only sets the connection Object.\n *\n *  Parameters:\n *    (Strophe.Connection) connection - The Strophe.Connection that will use WebSockets.\n *\n *  Returns:\n *    A new Strophe.WebSocket object.\n */\nStrophe.Websocket = function(connection) {\n    this._conn = connection;\n    this.strip = \"wrapper\";\n\n    var service = connection.service;\n    if (service.indexOf(\"ws:\") !== 0 && service.indexOf(\"wss:\") !== 0) {\n        // If the service is not an absolute URL, assume it is a path and put the absolute\n        // URL together from options, current URL and the path.\n        var new_service = \"\";\n\n        if (connection.options.protocol === \"ws\" && window.location.protocol !== \"https:\") {\n            new_service += \"ws\";\n        } else {\n            new_service += \"wss\";\n        }\n\n        new_service += \"://\" + window.location.host;\n\n        if (service.indexOf(\"/\") !== 0) {\n            new_service += window.location.pathname + service;\n        } else {\n            new_service += service;\n        }\n\n        connection.service = new_service;\n    }\n};\n\nStrophe.Websocket.prototype = {\n    /** PrivateFunction: _buildStream\n     *  _Private_ helper function to generate the <stream> start tag for WebSockets\n     *\n     *  Returns:\n     *    A Strophe.Builder with a <stream> element.\n     */\n    _buildStream: function () {\n        return $build(\"open\", {\n            \"xmlns\": Strophe.NS.FRAMING,\n            \"to\": this._conn.domain,\n            \"version\": '1.0'\n        });\n    },\n\n    /** PrivateFunction: _check_streamerror\n     * _Private_ checks a message for stream:error\n     *\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     *    connectstatus - The ConnectStatus that will be set on error.\n     *  Returns:\n     *     true if there was a streamerror, false otherwise.\n     */\n    _check_streamerror: function (bodyWrap, connectstatus) {\n        var errors;\n        if (bodyWrap.getElementsByTagNameNS) {\n            errors = bodyWrap.getElementsByTagNameNS(Strophe.NS.STREAM, \"error\");\n        } else {\n            errors = bodyWrap.getElementsByTagName(\"stream:error\");\n        }\n        if (errors.length === 0) {\n            return false;\n        }\n        var error = errors[0];\n\n        var condition = \"\";\n        var text = \"\";\n\n        var ns = \"urn:ietf:params:xml:ns:xmpp-streams\";\n        for (var i = 0; i < error.childNodes.length; i++) {\n            var e = error.childNodes[i];\n            if (e.getAttribute(\"xmlns\") !== ns) {\n                break;\n            } if (e.nodeName === \"text\") {\n                text = e.textContent;\n            } else {\n                condition = e.nodeName;\n            }\n        }\n\n        var errorString = \"WebSocket stream error: \";\n\n        if (condition) {\n            errorString += condition;\n        } else {\n            errorString += \"unknown\";\n        }\n\n        if (text) {\n            errorString += \" - \" + text;\n        }\n\n        Strophe.error(errorString);\n\n        // close the connection on stream_error\n        this._conn._changeConnectStatus(connectstatus, condition);\n        this._conn._doDisconnect();\n        return true;\n    },\n\n    /** PrivateFunction: _reset\n     *  Reset the connection.\n     *\n     *  This function is called by the reset function of the Strophe Connection.\n     *  Is not needed by WebSockets.\n     */\n    _reset: function () {\n        return;\n    },\n\n    /** PrivateFunction: _connect\n     *  _Private_ function called by Strophe.Connection.connect\n     *\n     *  Creates a WebSocket for a connection and assigns Callbacks to it.\n     *  Does nothing if there already is a WebSocket.\n     */\n    _connect: function () {\n        // Ensure that there is no open WebSocket from a previous Connection.\n        this._closeSocket();\n\n        // Create the new WobSocket\n        this.socket = new WebSocket(this._conn.service, \"xmpp\");\n        this.socket.onopen = this._onOpen.bind(this);\n        this.socket.onerror = this._onError.bind(this);\n        this.socket.onclose = this._onClose.bind(this);\n        this.socket.onmessage = this._connect_cb_wrapper.bind(this);\n    },\n\n    /** PrivateFunction: _connect_cb\n     *  _Private_ function called by Strophe.Connection._connect_cb\n     *\n     * checks for stream:error\n     *\n     *  Parameters:\n     *    (Strophe.Request) bodyWrap - The received stanza.\n     */\n    _connect_cb: function(bodyWrap) {\n        var error = this._check_streamerror(bodyWrap, Strophe.Status.CONNFAIL);\n        if (error) {\n            return Strophe.Status.CONNFAIL;\n        }\n    },\n\n    /** PrivateFunction: _handleStreamStart\n     * _Private_ function that checks the opening <open /> tag for errors.\n     *\n     * Disconnects if there is an error and returns false, true otherwise.\n     *\n     *  Parameters:\n     *    (Node) message - Stanza containing the <open /> tag.\n     */\n    _handleStreamStart: function(message) {\n        var error = false;\n\n        // Check for errors in the <open /> tag\n        var ns = message.getAttribute(\"xmlns\");\n        if (typeof ns !== \"string\") {\n            error = \"Missing xmlns in <open />\";\n        } else if (ns !== Strophe.NS.FRAMING) {\n            error = \"Wrong xmlns in <open />: \" + ns;\n        }\n\n        var ver = message.getAttribute(\"version\");\n        if (typeof ver !== \"string\") {\n            error = \"Missing version in <open />\";\n        } else if (ver !== \"1.0\") {\n            error = \"Wrong version in <open />: \" + ver;\n        }\n\n        if (error) {\n            this._conn._changeConnectStatus(Strophe.Status.CONNFAIL, error);\n            this._conn._doDisconnect();\n            return false;\n        }\n\n        return true;\n    },\n\n    /** PrivateFunction: _connect_cb_wrapper\n     * _Private_ function that handles the first connection messages.\n     *\n     * On receiving an opening stream tag this callback replaces itself with the real\n     * message handler. On receiving a stream error the connection is terminated.\n     */\n    _connect_cb_wrapper: function(message) {\n        if (message.data.indexOf(\"<open \") === 0 || message.data.indexOf(\"<?xml\") === 0) {\n            // Strip the XML Declaration, if there is one\n            var data = message.data.replace(/^(<\\?.*?\\?>\\s*)*/, \"\");\n            if (data === '') return;\n\n            var streamStart = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n            this._conn.xmlInput(streamStart);\n            this._conn.rawInput(message.data);\n\n            //_handleStreamSteart will check for XML errors and disconnect on error\n            if (this._handleStreamStart(streamStart)) {\n                //_connect_cb will check for stream:error and disconnect on error\n                this._connect_cb(streamStart);\n            }\n        } else if (message.data.indexOf(\"<close \") === 0) { // <close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing />\n            this._conn.rawInput(message.data);\n            this._conn.xmlInput(message);\n            var see_uri = message.getAttribute(\"see-other-uri\");\n            if (see_uri) {\n                this._conn._changeConnectStatus(\n                    Strophe.Status.REDIRECT,\n                    \"Received see-other-uri, resetting connection\"\n                );\n                this._conn.reset();\n                this._conn.service = see_uri;\n                this._connect();\n            } else {\n                this._conn._changeConnectStatus(\n                    Strophe.Status.CONNFAIL,\n                    \"Received closing stream\"\n                );\n                this._conn._doDisconnect();\n            }\n        } else {\n            var string = this._streamWrap(message.data);\n            var elem = new DOMParser().parseFromString(string, \"text/xml\").documentElement;\n            this.socket.onmessage = this._onMessage.bind(this);\n            this._conn._connect_cb(elem, null, message.data);\n        }\n    },\n\n    /** PrivateFunction: _disconnect\n     *  _Private_ function called by Strophe.Connection.disconnect\n     *\n     *  Disconnects and sends a last stanza if one is given\n     *\n     *  Parameters:\n     *    (Request) pres - This stanza will be sent before disconnecting.\n     */\n    _disconnect: function (pres) {\n        if (this.socket && this.socket.readyState !== WebSocket.CLOSED) {\n            if (pres) {\n                this._conn.send(pres);\n            }\n            var close = $build(\"close\", { \"xmlns\": Strophe.NS.FRAMING });\n            this._conn.xmlOutput(close);\n            var closeString = Strophe.serialize(close);\n            this._conn.rawOutput(closeString);\n            try {\n                this.socket.send(closeString);\n            } catch (e) {\n                Strophe.info(\"Couldn't send <close /> tag.\");\n            }\n        }\n        this._conn._doDisconnect();\n    },\n\n    /** PrivateFunction: _doDisconnect\n     *  _Private_ function to disconnect.\n     *\n     *  Just closes the Socket for WebSockets\n     */\n    _doDisconnect: function () {\n        Strophe.info(\"WebSockets _doDisconnect was called\");\n        this._closeSocket();\n    },\n\n    /** PrivateFunction _streamWrap\n     *  _Private_ helper function to wrap a stanza in a <stream> tag.\n     *  This is used so Strophe can process stanzas from WebSockets like BOSH\n     */\n    _streamWrap: function (stanza) {\n        return \"<wrapper>\" + stanza + '</wrapper>';\n    },\n\n\n    /** PrivateFunction: _closeSocket\n     *  _Private_ function to close the WebSocket.\n     *\n     *  Closes the socket if it is still open and deletes it\n     */\n    _closeSocket: function () {\n        if (this.socket) { try {\n            this.socket.close();\n        } catch (e) {} }\n        this.socket = null;\n    },\n\n    /** PrivateFunction: _emptyQueue\n     * _Private_ function to check if the message queue is empty.\n     *\n     *  Returns:\n     *    True, because WebSocket messages are send immediately after queueing.\n     */\n    _emptyQueue: function () {\n        return true;\n    },\n\n    /** PrivateFunction: _onClose\n     * _Private_ function to handle websockets closing.\n     *\n     * Nothing to do here for WebSockets\n     */\n    _onClose: function(e) {\n        if(this._conn.connected && !this._conn.disconnecting) {\n            Strophe.error(\"Websocket closed unexpectedly\");\n            this._conn._doDisconnect();\n        } else if (e && e.code === 1006 && !this._conn.connected && this.socket) {\n            // in case the onError callback was not called (Safari 10 does not\n            // call onerror when the initial connection fails) we need to\n            // dispatch a CONNFAIL status update to be consistent with the\n            // behavior on other browsers.\n            Strophe.error(\"Websocket closed unexcectedly\");\n            this._conn._changeConnectStatus(\n                Strophe.Status.CONNFAIL,\n                \"The WebSocket connection could not be established or was disconnected.\"\n            );\n            this._conn._doDisconnect();\n        } else {\n            Strophe.info(\"Websocket closed\");\n        }\n    },\n\n    /** PrivateFunction: _no_auth_received\n     *\n     * Called on stream start/restart when no stream:features\n     * has been received.\n     */\n    _no_auth_received: function (_callback) {\n        Strophe.error(\"Server did not send any auth methods\");\n        this._conn._changeConnectStatus(\n            Strophe.Status.CONNFAIL,\n            \"Server did not send any auth methods\"\n        );\n        if (_callback) {\n            _callback = _callback.bind(this._conn);\n            _callback();\n        }\n        this._conn._doDisconnect();\n    },\n\n    /** PrivateFunction: _onDisconnectTimeout\n     *  _Private_ timeout handler for handling non-graceful disconnection.\n     *\n     *  This does nothing for WebSockets\n     */\n    _onDisconnectTimeout: function () {},\n\n    /** PrivateFunction: _abortAllRequests\n     *  _Private_ helper function that makes sure all pending requests are aborted.\n     */\n    _abortAllRequests: function () {},\n\n    /** PrivateFunction: _onError\n     * _Private_ function to handle websockets errors.\n     *\n     * Parameters:\n     * (Object) error - The websocket error.\n     */\n    _onError: function(error) {\n        Strophe.error(\"Websocket error \" + error);\n        this._conn._changeConnectStatus(\n            Strophe.Status.CONNFAIL,\n            \"The WebSocket connection could not be established or was disconnected.\"\n        );\n        this._disconnect();\n    },\n\n    /** PrivateFunction: _onIdle\n     *  _Private_ function called by Strophe.Connection._onIdle\n     *\n     *  sends all queued stanzas\n     */\n    _onIdle: function () {\n        var data = this._conn._data;\n        if (data.length > 0 && !this._conn.paused) {\n            for (var i = 0; i < data.length; i++) {\n                if (data[i] !== null) {\n                    var stanza, rawStanza;\n                    if (data[i] === \"restart\") {\n                        stanza = this._buildStream().tree();\n                    } else {\n                        stanza = data[i];\n                    }\n                    rawStanza = Strophe.serialize(stanza);\n                    this._conn.xmlOutput(stanza);\n                    this._conn.rawOutput(rawStanza);\n                    this.socket.send(rawStanza);\n                }\n            }\n            this._conn._data = [];\n        }\n    },\n\n    /** PrivateFunction: _onMessage\n     * _Private_ function to handle websockets messages.\n     *\n     * This function parses each of the messages as if they are full documents.\n     * [TODO : We may actually want to use a SAX Push parser].\n     *\n     * Since all XMPP traffic starts with\n     *  <stream:stream version='1.0'\n     *                 xml:lang='en'\n     *                 xmlns='jabber:client'\n     *                 xmlns:stream='http://etherx.jabber.org/streams'\n     *                 id='3697395463'\n     *                 from='SERVER'>\n     *\n     * The first stanza will always fail to be parsed.\n     *\n     * Additionally, the seconds stanza will always be <stream:features> with\n     * the stream NS defined in the previous stanza, so we need to 'force'\n     * the inclusion of the NS in this stanza.\n     *\n     * Parameters:\n     * (string) message - The websocket message.\n     */\n    _onMessage: function(message) {\n        var elem, data;\n        // check for closing stream\n        var close = '<close xmlns=\"urn:ietf:params:xml:ns:xmpp-framing\" />';\n        if (message.data === close) {\n            this._conn.rawInput(close);\n            this._conn.xmlInput(message);\n            if (!this._conn.disconnecting) {\n                this._conn._doDisconnect();\n            }\n            return;\n        } else if (message.data.search(\"<open \") === 0) {\n            // This handles stream restarts\n            elem = new DOMParser().parseFromString(message.data, \"text/xml\").documentElement;\n            if (!this._handleStreamStart(elem)) {\n                return;\n            }\n        } else {\n            data = this._streamWrap(message.data);\n            elem = new DOMParser().parseFromString(data, \"text/xml\").documentElement;\n        }\n\n        if (this._check_streamerror(elem, Strophe.Status.ERROR)) {\n            return;\n        }\n\n        //handle unavailable presence stanza before disconnecting\n        if (this._conn.disconnecting &&\n                elem.firstChild.nodeName === \"presence\" &&\n                elem.firstChild.getAttribute(\"type\") === \"unavailable\") {\n            this._conn.xmlInput(elem);\n            this._conn.rawInput(Strophe.serialize(elem));\n            // if we are already disconnecting we will ignore the unavailable stanza and\n            // wait for the </stream:stream> tag before we close the connection\n            return;\n        }\n        this._conn._dataRecv(elem, message.data);\n    },\n\n    /** PrivateFunction: _onOpen\n     * _Private_ function to handle websockets connection setup.\n     *\n     * The opening stream tag is sent here.\n     */\n    _onOpen: function() {\n        Strophe.info(\"Websocket open\");\n        var start = this._buildStream();\n        this._conn.xmlOutput(start.tree());\n\n        var startString = Strophe.serialize(start);\n        this._conn.rawOutput(startString);\n        this.socket.send(startString);\n    },\n\n    /** PrivateFunction: _reqToData\n     * _Private_ function to get a stanza out of a request.\n     *\n     * WebSockets don't use requests, so the passed argument is just returned.\n     *\n     *  Parameters:\n     *    (Object) stanza - The stanza.\n     *\n     *  Returns:\n     *    The stanza that was passed.\n     */\n    _reqToData: function (stanza) {\n        return stanza;\n    },\n\n    /** PrivateFunction: _send\n     *  _Private_ part of the Connection.send function for WebSocket\n     *\n     * Just flushes the messages that are in the queue\n     */\n    _send: function () {\n        this._conn.flush();\n    },\n\n    /** PrivateFunction: _sendRestart\n     *\n     *  Send an xmpp:restart stanza.\n     */\n    _sendRestart: function () {\n        clearTimeout(this._conn._idleTimeout);\n        this._conn._onIdle.bind(this._conn)();\n    }\n};\nreturn Strophe;\n}));\n\n(function(root){\n    if(typeof define === 'function' && define.amd){\n        define('strophe',[\n            \"strophe-core\",\n            \"strophe-bosh\",\n            \"strophe-websocket\"\n        ], function (wrapper) {\n            return wrapper;\n        });\n    }\n})(this);\n\n\nrequire([\"strophe-polyfill\"]);\n/* jshint ignore:start */\n    //The modules for your project will be inlined above\n    //this snippet. Ask almond to synchronously require the\n    //module value for 'main' here and return it as the\n    //value to use for the public API for the built file.\n    return require('strophe');\n}));\n/* jshint ignore:end */\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/strophe.js/strophe.js\n// module id = 2\n// module chunks = 0","/**\n * This utility class defines custom onerror and onunhandledrejection functions.\n * The custom error handlers respect the previously-defined error handlers.\n * GlobalOnErrorHandler class provides utilities to add many custom error\n * handlers and to execute the error handlers directly.\n */\n\n\n/**\n * List with global error handlers that will be executed.\n */\nconst handlers = [];\n\n// If an old handler exists, also fire its events.\nconst oldOnErrorHandler = window.onerror;\n\n/**\n * Custom error handler that calls the old global error handler and executes\n * all handlers that were previously added.\n */\nfunction JitsiGlobalErrorHandler(...args) {\n    handlers.forEach(handler => handler(...args));\n    oldOnErrorHandler && oldOnErrorHandler(...args);\n}\n\n// If an old handler exists, also fire its events.\nconst oldOnUnhandledRejection = window.onunhandledrejection;\n\n/**\n * Custom handler that calls the old global handler and executes all handlers\n * that were previously added. This handler handles rejected Promises.\n */\nfunction JitsiGlobalUnhandledRejection(event) {\n    handlers.forEach(handler => handler(null, null, null, null, event.reason));\n    oldOnUnhandledRejection && oldOnUnhandledRejection(event);\n}\n\n// Setting the custom error handlers.\nwindow.onerror = JitsiGlobalErrorHandler;\nwindow.onunhandledrejection = JitsiGlobalUnhandledRejection;\n\nconst GlobalOnErrorHandler = {\n    /**\n     * Adds new error handlers.\n     * @param handler the new handler.\n     */\n    addHandler(handler) {\n        handlers.push(handler);\n    },\n\n    /**\n     * Calls the global error handler if there is one.\n     * @param error the error to pass to the error handler\n     */\n    callErrorHandler(error) {\n        const errHandler = window.onerror;\n\n        if (!errHandler) {\n            return;\n        }\n        errHandler(null, null, null, null, error);\n    },\n\n    /**\n     * Calls the global rejection handler if there is one.\n     * @param error the error to pass to the rejection handler.\n     */\n    callUnhandledRejectionHandler(error) {\n        const errHandler = window.onunhandledrejection;\n\n        if (!errHandler) {\n            return;\n        }\n        errHandler(error);\n    }\n};\n\n\nmodule.exports = GlobalOnErrorHandler;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/util/GlobalOnErrorHandler.js","/**\n * The audio type.\n */\nexport const AUDIO = 'audio';\n\n/**\n * The video type.\n */\nexport const VIDEO = 'video';\n\n\n\n// WEBPACK FOOTER //\n// ./service/RTC/MediaType.js","import EventEmitter from 'events';\n\nimport {\n    FEEDBACK,\n    ICE_FAILED\n} from '../../service/statistics/AnalyticsEvents';\nimport analytics from './AnalyticsAdapter';\nimport CallStats from './CallStats';\nimport LocalStats from './LocalStatsCollector';\nimport RTPStats from './RTPStatsCollector';\n\nimport RTCBrowserType from '../RTC/RTCBrowserType';\nimport Settings from '../settings/Settings';\nimport ScriptUtil from '../util/ScriptUtil';\nimport JitsiTrackError from '../../JitsiTrackError';\nimport * as StatisticsEvents from '../../service/statistics/Events';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * Stores all active {@link Statistics} instances.\n * @type {Set<Statistics>}\n */\nlet _instances;\n\n/**\n * True if callstats API is loaded\n */\nlet isCallstatsLoaded = false;\n\n/**\n * Since callstats.io is a third party, we cannot guarantee the quality of their\n * service. More specifically, their server may take noticeably long time to\n * respond. Consequently, it is in our best interest (in the sense that the\n * intergration of callstats.io is pretty important to us but not enough to\n * allow it to prevent people from joining a conference) to (1) start\n * downloading their API as soon as possible and (2) do the downloading\n * asynchronously.\n *\n * @param {StatisticsOptions} options - Options to use for downloading and\n * initializing callstats backend.\n */\nfunction loadCallStatsAPI(options) {\n    if (!isCallstatsLoaded) {\n        ScriptUtil.loadScript(\n            options.customScriptUrl\n                || 'https://api.callstats.io/static/callstats-ws.min.js',\n            /* async */ true,\n            /* prepend */ true,\n            /* relativeURL */ undefined,\n            /* loadCallback */ () => _initCallStatsBackend(options)\n        );\n        isCallstatsLoaded = true;\n    }\n}\n\n/**\n * Initializes Callstats backend.\n *\n * @param {StatisticsOptions} options - The options to use for initializing\n * callstats backend.\n * @private\n */\nfunction _initCallStatsBackend(options) {\n    if (CallStats.isBackendInitialized()) {\n        return;\n    }\n\n    const userName = Settings.callStatsUserName;\n\n    if (!CallStats.initBackend({\n        callStatsID: options.callStatsID,\n        callStatsSecret: options.callStatsSecret,\n        userName: options.swapUserNameAndAlias\n            ? options.callStatsAliasName : userName,\n        aliasName: options.swapUserNameAndAlias\n            ? userName : options.callStatsAliasName,\n        applicationName: options.applicationName,\n        getWiFiStatsMethod: options.getWiFiStatsMethod\n    })) {\n        logger.error('CallStats Backend initialization failed bad');\n    }\n}\n\n/**\n * callstats strips any additional fields from Error except for \"name\", \"stack\",\n * \"message\" and \"constraintName\". So we need to bundle additional information\n * from JitsiTrackError into error passed to callstats to preserve valuable\n * information about error.\n * @param {JitsiTrackError} error\n */\nfunction formatJitsiTrackErrorForCallStats(error) {\n    const err = new Error();\n\n    // Just copy original stack from error\n    err.stack = error.stack;\n\n    // Combine name from error's name plus (possibly) name of original GUM error\n    err.name = (error.name || 'Unknown error') + (error.gum && error.gum.error\n        && error.gum.error.name ? ` - ${error.gum.error.name}` : '');\n\n    // Put all constraints into this field. For constraint failed errors we will\n    // still know which exactly constraint failed as it will be a part of\n    // message.\n    err.constraintName = error.gum && error.gum.constraints\n        ? JSON.stringify(error.gum.constraints) : '';\n\n    // Just copy error's message.\n    err.message = error.message;\n\n    return err;\n}\n\n/**\n * Init statistic options\n * @param options\n */\nStatistics.init = function(options) {\n    Statistics.audioLevelsEnabled = !options.disableAudioLevels;\n\n    if (typeof options.audioLevelsInterval === 'number') {\n        Statistics.audioLevelsInterval = options.audioLevelsInterval;\n    }\n\n    Statistics.disableThirdPartyRequests = options.disableThirdPartyRequests;\n};\n\n/**\n * The options to configure Statistics.\n * @typedef {Object} StatisticsOptions\n * @property {string} applicationName - The application name to pass to\n * callstats.\n * @property {string} callStatsAliasName - The alias name to use when\n * initializing callstats.\n * @property {string} callStatsConfIDNamespace - A namespace to prepend the\n * callstats conference ID with.\n * @property {string} callStatsID - Callstats credentials - the id.\n * @property {string} callStatsSecret - Callstats credentials - the secret.\n * @property {string} customScriptUrl - A custom lib url to use when downloading\n * callstats library.\n * @property {string} roomName - The room name we are currently in.\n * @property {boolean} swapUserNameAndAlias - Whether to swap the places of\n * username and alias when initiating callstats.\n */\n/**\n *\n * @param xmpp\n * @param {StatisticsOptions} options - The options to use creating the\n * Statistics.\n */\nexport default function Statistics(xmpp, options) {\n    /**\n     * {@link RTPStats} mapped by {@link TraceablePeerConnection.id} which\n     * collect RTP statistics for each peerconnection.\n     * @type {Map<string, RTPStats}\n     */\n    this.rtpStatsMap = new Map();\n    this.eventEmitter = new EventEmitter();\n    this.xmpp = xmpp;\n    this.options = options || {};\n\n    this.callStatsIntegrationEnabled\n        = this.options.callStatsID && this.options.callStatsSecret\n\n            // Even though AppID and AppSecret may be specified, the integration\n            // of callstats.io may be disabled because of globally-disallowed\n            // requests to any third parties.\n            && (Statistics.disableThirdPartyRequests !== true);\n    if (this.callStatsIntegrationEnabled) {\n        if (RTCBrowserType.isReactNative()) {\n            _initCallStatsBackend(this.options);\n        } else {\n            loadCallStatsAPI(this.options);\n        }\n\n        if (!this.options.callStatsConfIDNamespace) {\n            logger.warn('\"callStatsConfIDNamespace\" is not defined');\n        }\n    }\n\n    /**\n     * Stores {@link CallStats} instances for each\n     * {@link TraceablePeerConnection} (one {@link CallStats} instance serves\n     * one TPC). The instances are mapped by {@link TraceablePeerConnection.id}.\n     * @type {Map<number, CallStats>}\n     */\n    this.callsStatsInstances = new Map();\n\n    Statistics.instances.add(this);\n}\nStatistics.audioLevelsEnabled = false;\nStatistics.audioLevelsInterval = 200;\nStatistics.disableThirdPartyRequests = false;\nStatistics.analytics = analytics;\n\nObject.defineProperty(Statistics, 'instances', {\n    /**\n     * Returns the Set holding all active {@link Statistics} instances. Lazily\n     * initializes the Set to allow any Set polyfills to be applied.\n     * @type {Set<Statistics>}\n     */\n    get() {\n        if (!_instances) {\n            _instances = new Set();\n        }\n\n        return _instances;\n    }\n});\n\n/**\n * Starts collecting RTP stats for given peerconnection.\n * @param {TraceablePeerConnection} peerconnection\n */\nStatistics.prototype.startRemoteStats = function(peerconnection) {\n    this.stopRemoteStats(peerconnection);\n\n    try {\n        const rtpStats\n            = new RTPStats(\n                peerconnection,\n                Statistics.audioLevelsInterval,\n                2000,\n                this.eventEmitter);\n\n        rtpStats.start(Statistics.audioLevelsEnabled);\n        this.rtpStatsMap.set(peerconnection.id, rtpStats);\n    } catch (e) {\n        logger.error(`Failed to start collecting remote statistics: ${e}`);\n    }\n};\n\nStatistics.localStats = [];\n\nStatistics.startLocalStats = function(stream, callback) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n    const localStats = new LocalStats(stream, Statistics.audioLevelsInterval,\n        callback);\n\n    this.localStats.push(localStats);\n    localStats.start();\n};\n\nStatistics.prototype.addAudioLevelListener = function(listener) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n    this.eventEmitter.on(StatisticsEvents.AUDIO_LEVEL, listener);\n};\n\nStatistics.prototype.removeAudioLevelListener = function(listener) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n    this.eventEmitter.removeListener(StatisticsEvents.AUDIO_LEVEL, listener);\n};\n\nStatistics.prototype.addBeforeDisposedListener = function(listener) {\n    this.eventEmitter.on(StatisticsEvents.BEFORE_DISPOSED, listener);\n};\n\nStatistics.prototype.removeBeforeDisposedListener = function(listener) {\n    this.eventEmitter.removeListener(\n        StatisticsEvents.BEFORE_DISPOSED, listener);\n};\n\nStatistics.prototype.addConnectionStatsListener = function(listener) {\n    this.eventEmitter.on(StatisticsEvents.CONNECTION_STATS, listener);\n};\n\nStatistics.prototype.removeConnectionStatsListener = function(listener) {\n    this.eventEmitter.removeListener(\n        StatisticsEvents.CONNECTION_STATS,\n        listener);\n};\n\nStatistics.prototype.addByteSentStatsListener = function(listener) {\n    this.eventEmitter.on(StatisticsEvents.BYTE_SENT_STATS, listener);\n};\n\nStatistics.prototype.removeByteSentStatsListener = function(listener) {\n    this.eventEmitter.removeListener(StatisticsEvents.BYTE_SENT_STATS,\n        listener);\n};\n\nStatistics.prototype.dispose = function() {\n    try {\n        // NOTE Before reading this please see the comment in stopCallStats...\n        //\n        // Here we prevent from emitting the event twice in case it will be\n        // triggered from stopCallStats.\n        // If the event is triggered from here it means that the logs will not\n        // be submitted anyway (because there is no CallStats instance), but\n        // we're doing that for the sake of some kind of consistency.\n        if (!this.callsStatsInstances.size) {\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\n        }\n        for (const callStats of this.callsStatsInstances.values()) {\n            this.stopCallStats(callStats.tpc);\n        }\n        for (const tpcId of this.rtpStatsMap.keys()) {\n            this._stopRemoteStats(tpcId);\n        }\n        if (this.eventEmitter) {\n            this.eventEmitter.removeAllListeners();\n        }\n    } finally {\n        Statistics.instances.delete(this);\n    }\n};\n\nStatistics.stopLocalStats = function(stream) {\n    if (!Statistics.audioLevelsEnabled) {\n        return;\n    }\n\n    for (let i = 0; i < Statistics.localStats.length; i++) {\n        if (Statistics.localStats[i].stream === stream) {\n            const localStats = Statistics.localStats.splice(i, 1);\n\n            localStats[0].stop();\n            break;\n        }\n    }\n};\n\n/**\n * Stops remote RTP stats for given peerconnection ID.\n * @param {string} tpcId {@link TraceablePeerConnection.id}\n * @private\n */\nStatistics.prototype._stopRemoteStats = function(tpcId) {\n    const rtpStats = this.rtpStatsMap.get(tpcId);\n\n    if (rtpStats) {\n        rtpStats.stop();\n        this.rtpStatsMap.delete(tpcId);\n    }\n};\n\n/**\n * Stops collecting RTP stats for given peerconnection\n * @param {TraceablePeerConnection} tpc\n */\nStatistics.prototype.stopRemoteStats = function(tpc) {\n    this._stopRemoteStats(tpc.id);\n};\n\n// CALSTATS METHODS\n\n/**\n * Initializes the callstats.io API.\n * @param {TraceablePeerConnection} tpc the {@link TraceablePeerConnection}\n * instance for which CalStats will be started.\n * @param {string} remoteUserID\n */\nStatistics.prototype.startCallStats = function(tpc, remoteUserID) {\n    if (!this.callStatsIntegrationEnabled) {\n        return;\n    } else if (this.callsStatsInstances.has(tpc.id)) {\n        logger.error('CallStats instance for ${tpc} exists already');\n\n        return;\n    }\n\n    logger.info(`Starting CallStats for ${tpc}...`);\n\n    const newInstance\n        = new CallStats(\n            tpc,\n            {\n                confID: this._getCallStatsConfID(),\n                remoteUserID\n            });\n\n    this.callsStatsInstances.set(tpc.id, newInstance);\n};\n\n/**\n * Obtains the list of *all* {@link CallStats} instances collected from every\n * valid {@link Statistics} instance.\n * @return {Set<CallStats>}\n * @private\n */\nStatistics._getAllCallStatsInstances = function() {\n    const csInstances = new Set();\n\n    for (const statistics of Statistics.instances) {\n        for (const cs of statistics.callsStatsInstances.values()) {\n            csInstances.add(cs);\n        }\n    }\n\n    return csInstances;\n};\n\n/**\n * Constructs the CallStats conference ID based on the options currently\n * configured in this instance.\n * @return {string}\n * @private\n */\nStatistics.prototype._getCallStatsConfID = function() {\n    // The conference ID is case sensitive!!!\n    return this.options.callStatsConfIDNamespace\n        ? `${this.options.callStatsConfIDNamespace}/${this.options.roomName}`\n        : this.options.roomName;\n};\n\n/**\n * Removes the callstats.io instances.\n */\nStatistics.prototype.stopCallStats = function(tpc) {\n    const callStatsInstance = this.callsStatsInstances.get(tpc.id);\n\n    if (callStatsInstance) {\n        // FIXME the original purpose of adding BEFORE_DISPOSED event was to be\n        // able to submit the last log batch from jitsi-meet to CallStats. After\n        // recent changes we dispose the CallStats earlier\n        // (before Statistics.dispose), so we need to emit this event here to\n        // give this last chance for final log batch submission.\n        //\n        // Eventually there should be a separate module called \"log storage\"\n        // which should emit proper events when it's underlying\n        // CallStats instance is going away.\n        if (this.callsStatsInstances.size === 1) {\n            this.eventEmitter.emit(StatisticsEvents.BEFORE_DISPOSED);\n        }\n        this.callsStatsInstances.delete(tpc.id);\n\n        // The fabric needs to be terminated when being stopped\n        callStatsInstance.sendTerminateEvent();\n    }\n};\n\n/**\n * Returns true if the callstats integration is enabled, otherwise returns\n * false.\n *\n * @returns true if the callstats integration is enabled, otherwise returns\n * false.\n */\nStatistics.prototype.isCallstatsEnabled = function() {\n    return this.callStatsIntegrationEnabled;\n};\n\n/**\n * Logs either resume or hold event for the given peer connection.\n * @param {TraceablePeerConnection} tpc the connection for which event will be\n * reported\n * @param {boolean} isResume true for resume or false for hold\n */\nStatistics.prototype.sendConnectionResumeOrHoldEvent = function(tpc, isResume) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendResumeOrHoldEvent(isResume);\n    }\n};\n\n/**\n * Notifies CallStats and analytics (if present) for ice connection failed\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendIceConnectionFailedEvent = function(tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendIceConnectionFailedEvent();\n    }\n    Statistics.analytics.sendEvent(ICE_FAILED);\n};\n\n/**\n * Notifies CallStats for mute events\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n * @param {boolean} muted true for muted and false for not muted\n * @param {String} type \"audio\"/\"video\"\n */\nStatistics.prototype.sendMuteEvent = function(tpc, muted, type) {\n    const instance = tpc && this.callsStatsInstances.get(tpc.id);\n\n    CallStats.sendMuteEvent(muted, type, instance);\n};\n\n/**\n * Notifies CallStats for screen sharing events\n * @param start {boolean} true for starting screen sharing and\n * false for not stopping\n * @param {string|null} ssrc - optional ssrc value, used only when\n * starting screen sharing.\n */\nStatistics.prototype.sendScreenSharingEvent\n    = function(start, ssrc) {\n        for (const cs of this.callsStatsInstances.values()) {\n            cs.sendScreenSharingEvent(start, ssrc);\n        }\n    };\n\n/**\n * Notifies the statistics module that we are now the dominant speaker of the\n * conference.\n */\nStatistics.prototype.sendDominantSpeakerEvent = function() {\n    for (const cs of this.callsStatsInstances.values()) {\n        cs.sendDominantSpeakerEvent();\n    }\n};\n\n/**\n * Notifies about active device.\n * @param {{deviceList: {String:String}}} devicesData - list of devices with\n *      their data\n */\nStatistics.sendActiveDeviceListEvent = function(devicesData) {\n    const globalSet = Statistics._getAllCallStatsInstances();\n\n    if (globalSet.size) {\n        for (const cs of globalSet) {\n            CallStats.sendActiveDeviceListEvent(devicesData, cs);\n        }\n    } else {\n        CallStats.sendActiveDeviceListEvent(devicesData, null);\n    }\n};\n\n/* eslint-disable max-params */\n\n/**\n * Lets the underlying statistics module know where is given SSRC rendered by\n * providing renderer tag ID.\n * @param {TraceablePeerConnection} tpc the connection to which the stream\n * belongs to\n * @param {number} ssrc the SSRC of the stream\n * @param {boolean} isLocal\n * @param {string} userId\n * @param {string} usageLabel  meaningful usage label of this stream like\n *        'microphone', 'camera' or 'screen'.\n * @param {string} containerId the id of media 'audio' or 'video' tag which\n *        renders the stream.\n */\nStatistics.prototype.associateStreamWithVideoTag = function(\n        tpc,\n        ssrc,\n        isLocal,\n        userId,\n        usageLabel,\n        containerId) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.associateStreamWithVideoTag(\n            ssrc,\n            isLocal,\n            userId,\n            usageLabel,\n            containerId);\n    }\n};\n\n/* eslint-enable max-params */\n\n/**\n * Notifies CallStats that getUserMedia failed.\n *\n * @param {Error} e error to send\n */\nStatistics.sendGetUserMediaFailed = function(e) {\n    const error\n        = e instanceof JitsiTrackError\n            ? formatJitsiTrackErrorForCallStats(e) : e;\n    const globalSet = Statistics._getAllCallStatsInstances();\n\n    if (globalSet.size) {\n        for (const cs of globalSet) {\n            CallStats.sendGetUserMediaFailed(error, cs);\n        }\n    } else {\n        CallStats.sendGetUserMediaFailed(error, null);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to create offer.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendCreateOfferFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendCreateOfferFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to create answer.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occured.\n */\nStatistics.prototype.sendCreateAnswerFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendCreateAnswerFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to set local description.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendSetLocalDescFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendSetLocalDescFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to set remote description.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendSetRemoteDescFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendSetRemoteDescFailed(e);\n    }\n};\n\n/**\n * Notifies CallStats that peer connection failed to add ICE candidate.\n *\n * @param {Error} e error to send\n * @param {TraceablePeerConnection} tpc connection on which failure occurred.\n */\nStatistics.prototype.sendAddIceCandidateFailed = function(e, tpc) {\n    const instance = this.callsStatsInstances.get(tpc.id);\n\n    if (instance) {\n        instance.sendAddIceCandidateFailed(e);\n    }\n};\n\n/**\n * Adds to CallStats an application log.\n *\n * @param {String} m a log message to send or an {Error} object to be reported\n */\nStatistics.sendLog = function(m) {\n    const globalSubSet = new Set();\n\n    // FIXME we don't want to duplicate logs over P2P instance, but\n    // here we should go over instances and call this method for each\n    // unique conference ID rather than selecting the first one.\n    // We don't have such use case though, so leaving as is for now.\n    for (const stats of Statistics.instances) {\n        if (stats.callsStatsInstances.size) {\n            globalSubSet.add(stats.callsStatsInstances.values().next().value);\n        }\n    }\n\n    if (globalSubSet.size) {\n        for (const csPerStats of globalSubSet) {\n            CallStats.sendApplicationLog(m, csPerStats);\n        }\n    } else {\n        CallStats.sendApplicationLog(m, null);\n    }\n};\n\n/**\n * Sends the given feedback through CallStats.\n *\n * @param overall an integer between 1 and 5 indicating the user feedback\n * @param detailed detailed feedback from the user. Not yet used\n */\nStatistics.prototype.sendFeedback = function(overall, detailed) {\n    CallStats.sendFeedback(this._getCallStatsConfID(), overall, detailed);\n    Statistics.analytics.sendEvent(\n        FEEDBACK,\n        {\n            value: overall,\n            detailed\n        });\n};\n\nStatistics.LOCAL_JID = require('../../service/statistics/constants').LOCAL_JID;\n\n/**\n * Reports global error to CallStats.\n *\n * @param {Error} error\n */\nStatistics.reportGlobalError = function(error) {\n    if (error instanceof JitsiTrackError && error.gum) {\n        Statistics.sendGetUserMediaFailed(error);\n    } else {\n        Statistics.sendLog(error);\n    }\n};\n\n/**\n * Sends event to analytics and callstats.\n * @param {string} eventName the event name.\n * @param {Object} data the data to be sent.\n */\nStatistics.sendEventToAll = function(eventName, data) {\n    this.analytics.sendEvent(eventName, data);\n    Statistics.sendLog(\n        JSON.stringify(\n            {\n                name: eventName,\n                data\n            }));\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/statistics/statistics.js","/**\n * The events for the conference.\n */\n\n/**\n * Indicates that authentication status changed.\n */\nexport const AUTH_STATUS_CHANGED = 'conference.auth_status_changed';\n\n/**\n * Indicates that available devices changed.\n */\nexport const AVAILABLE_DEVICES_CHANGED = 'conference.availableDevicesChanged';\n\n/**\n * A participant avatar has changed.\n */\nexport const AVATAR_CHANGED = 'conference.avatarChanged';\n\n/**\n * Fired just before the statistics module is disposed and it's the last chance\n * to submit some logs to the statistics service (ex. CallStats if enabled),\n * before it's disconnected.\n */\nexport const BEFORE_STATISTICS_DISPOSED = 'conference.beforeStatisticsDisposed';\n\n/**\n * Indicates that an error occured.\n */\nexport const CONFERENCE_ERROR = 'conference.error';\n\n/**\n * Indicates that conference failed.\n */\nexport const CONFERENCE_FAILED = 'conference.failed';\n\n/**\n * Indicates that conference has been joined. The event does NOT provide any\n * parameters to its listeners.\n */\nexport const CONFERENCE_JOINED = 'conference.joined';\n\n/**\n * Indicates that conference has been left.\n */\nexport const CONFERENCE_LEFT = 'conference.left';\n\n/**\n * Indicates that the connection to the conference has been interrupted for some\n * reason.\n */\nexport const CONNECTION_INTERRUPTED = 'conference.connectionInterrupted';\n\n/**\n * Indicates that the connection to the conference has been restored.\n */\nexport const CONNECTION_RESTORED = 'conference.connectionRestored';\n\n/**\n * A connection to the video bridge's data channel has been established.\n */\nexport const DATA_CHANNEL_OPENED = 'conference.dataChannelOpened';\n\n/**\n * A user has changed it display name\n */\nexport const DISPLAY_NAME_CHANGED = 'conference.displayNameChanged';\n\n/**\n * The dominant speaker was changed.\n */\nexport const DOMINANT_SPEAKER_CHANGED = 'conference.dominantSpeaker';\n\n/**\n * Indicates that DTMF support changed.\n */\nexport const DTMF_SUPPORT_CHANGED = 'conference.dtmfSupportChanged';\n\n/**\n * Indicates that a message from another participant is received on data\n * channel.\n */\nexport const ENDPOINT_MESSAGE_RECEIVED = 'conference.endpoint_message_received';\n\n/**\n * NOTE This is lib-jitsi-meet internal event and can be removed at any time !\n *\n * Event emitted when conference transits, between one to one and multiparty JVB\n * conference. If the conference switches to P2P it's neither one to one nor\n * a multiparty JVB conference, but P2P (the status argument of this event will\n * be <tt>false</tt>).\n *\n * The first argument is a boolean which carries the previous value and\n * the seconds argument is a boolean with the new status. The event is emitted\n * only if the previous and the new values are different.\n *\n * @type {string}\n */\nexport const JVB121_STATUS = 'conference.jvb121Status';\n\n/**\n * You are kicked from the conference.\n */\nexport const KICKED = 'conferenece.kicked';\n\n/**\n * The Last N set is changed.\n *\n * @param {Array<string>|null} leavingEndpointIds the ids of all the endpoints\n * which are leaving Last N\n * @param {Array<string>|null} enteringEndpointIds the ids of all the endpoints\n * which are entering Last N\n */\nexport const LAST_N_ENDPOINTS_CHANGED = 'conference.lastNEndpointsChanged';\n\n/**\n * Indicates that the room has been locked or unlocked.\n */\nexport const LOCK_STATE_CHANGED = 'conference.lock_state_changed';\n\n/**\n * New text message was received.\n */\nexport const MESSAGE_RECEIVED = 'conference.messageReceived';\n\n/**\n * Event fired when JVB sends notification about interrupted/restored user's\n * ICE connection status or we detect local problem with the video track.\n * First argument is the ID of the participant and\n * the seconds is a string indicating if the connection is currently\n * - active - the connection is active\n * - inactive - the connection is inactive, was intentionally interrupted by\n * the bridge\n * - interrupted - a network problem occurred\n * - restoring - the connection was inactive and is restoring now\n *\n * The current status value can be obtained by calling\n * JitsiParticipant.getConnectionStatus().\n */\nexport const PARTICIPANT_CONN_STATUS_CHANGED\n    = 'conference.participant_conn_status_changed';\n\n/**\n * Indicates that the features of the participant has been changed.\n */\nexport const PARTCIPANT_FEATURES_CHANGED\n    = 'conference.partcipant_features_changed';\n\n/**\n * Indicates that a the value of a specific property of a specific participant\n * has changed.\n */\nexport const PARTICIPANT_PROPERTY_CHANGED\n    = 'conference.participant_property_changed';\n\n/**\n * Indicates that the conference has switched between JVB and P2P connections.\n * The first argument of this event is a <tt>boolean</tt> which when set to\n * <tt>true</tt> means that the conference is running on the P2P connection.\n */\nexport const P2P_STATUS = 'conference.p2pStatus';\n\n/**\n * Indicates that phone number changed.\n */\nexport const PHONE_NUMBER_CHANGED = 'conference.phoneNumberChanged';\n\n/**\n * Indicates that recording state changed.\n */\nexport const RECORDER_STATE_CHANGED = 'conference.recorderStateChanged';\n\n/**\n * Indicates that video SIP GW state changed.\n * @param {VideoSIPGWConstants} status.\n */\nexport const VIDEO_SIP_GW_AVAILABILITY_CHANGED\n    = 'conference.videoSIPGWAvailabilityChanged';\n\n/**\n * Indicates that video SIP GW Session state changed.\n * @param {options} event - {\n *     {string} address,\n *     {VideoSIPGWConstants} oldState,\n *     {VideoSIPGWConstants} newState,\n *     {string} displayName}\n * }.\n */\nexport const VIDEO_SIP_GW_SESSION_STATE_CHANGED\n    = 'conference.videoSIPGWSessionStateChanged';\n\n/**\n * Indicates that start muted settings changed.\n */\nexport const START_MUTED_POLICY_CHANGED\n    = 'conference.start_muted_policy_changed';\n\n/**\n * Indicates that the local user has started muted.\n */\nexport const STARTED_MUTED = 'conference.started_muted';\n\n/**\n * Indicates that subject of the conference has changed.\n */\nexport const SUBJECT_CHANGED = 'conference.subjectChanged';\n\n/**\n * Indicates that DTMF support changed.\n */\nexport const SUSPEND_DETECTED = 'conference.suspendDetected';\n\n/**\n * Event indicates that local user is talking while he muted himself\n */\nexport const TALK_WHILE_MUTED = 'conference.talk_while_muted';\n\n/**\n * A new media track was added to the conference. The event provides the\n * following parameters to its listeners:\n *\n * @param {JitsiTrack} track the added JitsiTrack\n */\nexport const TRACK_ADDED = 'conference.trackAdded';\n\n/**\n * Audio levels of a media track ( attached to the conference) was changed.\n */\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'conference.audioLevelsChanged';\n\n/**\n * A media track ( attached to the conference) mute status was changed.\n */\nexport const TRACK_MUTE_CHANGED = 'conference.trackMuteChanged';\n\n/**\n * The media track was removed from the conference. The event provides the\n * following parameters to its listeners:\n *\n * @param {JitsiTrack} track the removed JitsiTrack\n */\nexport const TRACK_REMOVED = 'conference.trackRemoved';\n\n/**\n * Notifies for transcription status changes. The event provides the\n * following parameters to its listeners:\n *\n * @param {String} status - The new status.\n */\nexport const TRANSCRIPTION_STATUS_CHANGED\n    = 'conference.transcriptionStatusChanged';\n\n\n/**\n * A new user joinned the conference.\n */\nexport const USER_JOINED = 'conference.userJoined';\n\n/**\n * A user has left the conference.\n */\nexport const USER_LEFT = 'conference.userLeft';\n\n/**\n * User role changed.\n */\nexport const USER_ROLE_CHANGED = 'conference.roleChanged';\n\n/**\n * User status changed.\n */\nexport const USER_STATUS_CHANGED = 'conference.statusChanged';\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiConferenceEvents.js","/**\n * Note that an event's own properties and its permanent properties are\n * are merged in one object. Because of this an event should never use\n * properties with names that are already used by permanent properties\n * (unless the intention is to override a permanent property). Here is a\n * (non-exhaustive) list of currently know permanent properties:\n *\n * abtestSuspendVideo\n * browserName\n * callstatsname\n * crossRegion\n * forceJvb121\n * region\n * roomName\n * shard\n * size\n * userAgent\n * userRegion\n *\n * The naming convention for the constants below uses \"_\" as a prefix or\n * suffix to indicate that known usage of the constant prepends or appends\n * a string to the name of the event.\n */\n\n/**\n * Properties: value\n *\n * TODO: document, reformat\n *\n * Full event names (uncertain):\n * conference.muc.joined (???)\n * conference.sharingDesktop.start (???)\n * conference.sharingDesktop.stop (???)\n * xmpp.attached (???)\n * xmpp.attaching (???)\n * xmpp.connected (???)\n * xmpp.connecting (???)\n * xmpp.session-initiate (???)\n */\nexport const _CONNECTION_TIMES_ = '';\n\n/**\n * TODO: document, reformat (group together with other ICE events)\n *\n * Known full event names:\n * ice.initiator.checksDuration\n * ice.responder.checksDuration\n * p2p.ice.initiator.checksDuration\n * p2p.ice.responder.checksDuration\n *\n * Properties: value\n */\nexport const _ICE_CHECKING_DURATION = 'checksDuration';\n\n/**\n * TODO: document, reformat\n *\n * Known full event names:\n * ice.checking\n * ice.closed\n * ice.completed\n * ice.connected\n * ice.disconnected\n * ice.failed\n * p2p.ice.checking\n * p2p.ice.closed\n * p2p.ice.completed\n * p2p.ice.connected\n * p2p.ice.disconnected\n * p2p.ice.failed\n *\n * Properties: value\n */\nexport const _ICE_CONNECTION_STATE_ = 'ice';\n\n/**\n * TODO: document, reformat (group together with other ICE events)\n *\n * Known full event names:\n * ice.initiator.establishmentDuration\n * ice.responder.establishmentDuration\n * p2p.ice.initiator.establishmentDuration\n * p2p.ice.responder.establishmentDuration\n *\n * Properties: value\n */\nexport const _ICE_ESTABLISHMENT_DURATION = 'establishmentDuration';\n\n/**\n * TODO: document, reformat\n *\n * Known full event names:\n * ice.initiator.gatheringDuration\n * ice.responder.gatheringDuration\n * p2p.ice.initiator.gatheringDuration\n * p2p.ice.responder.gatheringDuration\n *\n * Properties: value\n */\nexport const _ICE_GATHERING_DURATION = 'gatheringDuration';\n\n/**\n * TODO: document, reformat\n *\n * Known full event names:\n * audio.no_data_from_source\n * video.no_data_from_source\n */\nexport const _NO_DATA_FROM_SOURCE = 'no_data_from_source';\n\n/**\n * TODO: document, reformat\n *\n * Known full event names:\n * audio.track_unmute\n * video.track_unmute\n */\nexport const _TRACK_UNMUTE = 'track_unmute';\n\n/**\n * TODO: document, reformat\n *\n * TTMF: Time To First Media\n *\n * Known full event names:\n * audio.ttfm\n * video.ttfm\n * audio.ttfm.muted\n * video.ttfm.muted\n */\nexport const _TTFM_ = 'ttfm';\n\n/**\n * All average RTP stats are currently reported under 1 event name, but with\n * different properties that allows to distinguish between a P2P call, a\n * call relayed through TURN or the JVB, and multiparty vs 1:1.\n * Example structure of an \"avg.rtp.stats\" analytics event:\n *\n * {\n     *   p2p: true,\n     *   conferenceSize: 2,\n     *   localCandidateType: \"relay\",\n     *   remoteCandidateType: \"relay\",\n     *   transportType: \"udp\",\n     *\n     *   \"stat_avg_rtt\": {\n     *     value: 200,\n     *     samples: [ 100, 200, 300 ]\n     *   },\n     *   \"stat_avg_packetloss_total\": {\n     *     value: 10,\n     *     samples: [ 5, 10, 15]\n     *   }\n     * }\n *\n * Note that the samples array is currently emitted for debug purposes only\n * and can be removed anytime soon from the structure.\n *\n * Also not all values are always present in \"avg.rtp.stats\", some of the\n * values are obtained and calculated as part of different process/event\n * pipe. For example {@link ConnectionAvgStats} instances are doing the\n * reports for each {@link TraceablePeerConnection} and work independently\n * from the main stats pipe.\n */\nexport const AVG_RTP_STATS = 'avg.rtp.stats';\n\n/**\n * Properties: none\n *\n * TODO: document, deprecate?\n */\nexport const BRIDGE_DOWN = 'conference.bridgeDown';\n\n/**\n * Properties: none\n *\n * Known full event names:\n * conference.error.p2pSessionAcceptTimeout\n * conference.error.sessionAcceptTimeout\n *\n * TODO: document, reformat\n */\nexport const CONFERENCE_ERROR_ = 'conference.error';\n\n/**\n * Properties: none\n *\n * TODO: document\n */\nexport const CONNECTION_INTERRUPTED = 'connection.interrupted';\n\n/**\n * Properties: none\n *\n * Known full event names: NONE\n *\n * TODO: document, reformat?, deprecate?\n */\nexport const CONNECTION_DISCONNECTED_ = 'connection.disconnected';\n\n/**\n * Properties: label\n *\n * Known full event names:\n * connection.failed.connection.droppedError\n * connection.failed.connection.otherError\n * connection.failed.connection.passwordRequired\n *\n * TODO: document, reformat\n */\nexport const CONNECTION_FAILED_ = 'connection.failed';\n\n/**\n * Properties: none\n *\n * TODO: document\n */\nexport const CONNECTION_RESTORED = 'connection.restored';\n\n/**\n * Properties: value\n *\n * TODO: document, deprecate (is it the same as the one which is part of\n * CONNECTION_TIMES?)\n */\nexport const DATA_CHANNEL_OPEN = 'conference.dataChannel.open';\n\n/**\n * TODO: document, reformat\n */\nexport const DEVICE_LIST = 'devices.deviceList';\n\n/**\n * User feedback event.\n * Properties: value, detailed\n *\n * TODO: document\n */\nexport const FEEDBACK = 'feedback.rating';\n\n/**\n * Properties: none\n *\n * TODO: document\n */\nexport const FOCUS_LEFT = 'conference.focusLeft';\n\n/**\n * Properties: none\n *\n * Known full event names:\n * getUserMedia.deviceNotFound.audio\n * getUserMedia.deviceNotFound.audio.video\n * getUserMedia.deviceNotFound.video\n * getUserMedia.deviceNotFound.screen\n *\n * TODO: document, reformat, merge with GET_USER_MEDIA_FAILED?\n */\nexport const GET_USER_MEDIA_DEVICE_NOT_FOUND_\n    = 'getUserMedia.deviceNotFound';\n\n/**\n * Properties: none\n *\n * Known full event names:\n * getUserMedia.fail.resolution.180\n * getUserMedia.fail.resolution.360\n * getUserMedia.fail.resolution.640\n * getUserMedia.fail.resolution.720\n * getUserMedia.fail.resolution.960\n *\n * TODO: reformat, merge with GET_USER_MEDIA_FAILED\n */\nexport const GET_USER_MEDIA_FAIL_ = 'getUserMedia.fail';\n\n/**\n * Properties: value\n *\n * Known full event names:\n * getUserMedia.failed.Error\n * getUserMedia.failed.TypeError\n * getUserMedia.failed.audio.TypeError\n * getUserMedia.failed.audio.gum.general\n * getUserMedia.failed.audio.gum.permission_denied\n * getUserMedia.failed.audio.track.no_data_from_source\n * getUserMedia.failed.audio.video.180.gum.general\n * getUserMedia.failed.audio.video.360.gum.general\n * getUserMedia.failed.audio.video.360.gum.permission_denied\n * getUserMedia.failed.audio.video.360.track.no_data_from_source\n * getUserMedia.failed.audio.video.720.TypeError\n * getUserMedia.failed.audio.video.720.gum.constraint_failed\n * getUserMedia.failed.audio.video.720.gum.general\n * getUserMedia.failed.audio.video.720.gum.permission_denied\n * getUserMedia.failed.audio.video.720.track.no_data_from_source\n * getUserMedia.failed.audio.video.960.gum.permission_denied\n * getUserMedia.failed.audio.video.undefined.gum.general\n * getUserMedia.failed.desktop.TypeError\n * getUserMedia.failed.desktop.gum.chrome_extension_generic_error\n * getUserMedia.failed.desktop.gum.chrome_extension_installation_error\n * getUserMedia.failed.desktop.gum.chrome_extension_user_gesture_required\n * getUserMedia.failed.desktop.gum.general\n * getUserMedia.failed.desktop.track.no_data_from_source\n * getUserMedia.failed.gum.chrome_extension_generic_error\n * getUserMedia.failed.gum.chrome_extension_installation_error\n * getUserMedia.failed.gum.constraint_failed\n * getUserMedia.failed.gum.firefox_extension_needed\n * getUserMedia.failed.gum.general\n * getUserMedia.failed.gum.permission_denied\n * getUserMedia.failed.undefined\n * getUserMedia.failed.video.360.gum.permission_denied\n * getUserMedia.failed.video.720.TypeError\n * getUserMedia.failed.video.720.gum.constraint_failed\n * getUserMedia.failed.video.720.gum.general\n * getUserMedia.failed.video.720.gum.permission_denied\n * getUserMedia.failed.video.720.track.no_data_from_source\n * getUserMedia.failed.video.undefined.TypeError\n * getUserMedia.failed.video.undefined.gum.general\n * getUserMedia.failed.video.undefined.track.no_data_from_source\n *\n * TODO: reformat\n */\nexport const GET_USER_MEDIA_FAILED_ = 'getUserMedia.failed';\n\n/**\n * Properties: value\n *\n * Known full event names:\n * getUserMedia.success\n * getUserMedia.success.audio\n * getUserMedia.success.audio.video.180\n * getUserMedia.success.audio.video.300\n * getUserMedia.success.audio.video.360\n * getUserMedia.success.audio.video.720\n * getUserMedia.success.audio.video.960\n * getUserMedia.success.audio.video.undefined\n * getUserMedia.success.desktop\n * getUserMedia.success.video.180\n * getUserMedia.success.video.360\n * getUserMedia.success.video.720\n * getUserMedia.success.video.960\n * getUserMedia.success.video.undefined\n *\n * TODO: document, reformat\n */\nexport const GET_USER_MEDIA_SUCCESS_ = 'getUserMedia.success';\n\n/**\n * Properties: none\n *\n * Known full event names:\n * getUserMedia.userCancel.extensionInstall\n *\n * TODO: document, reformat\n */\nexport const GET_USER_MEDIA_USER_CANCEL_ = 'getUserMedia.userCancel';\n\n/**\n * Properties: value\n *\n * The \"value\" property contains the difference in milliseconds between\n * the ICE establishment time for the P2P and JVB connections (e.g. a value\n * of 10 would indicate that the P2P was 10ms slower than JVB).\n */\nexport const ICE_ESTABLISHMENT_DURATION_DIFF\n    = 'ice.establishmentDurationDiff';\n\n/**\n * Properties: none\n *\n * TODO: document\n * TODO: do we need this in addition to _ICE_CONNECTION_STATE?\n */\nexport const ICE_FAILED = 'connection.ice_failed';\n\n/**\n * Properties: none\n *\n * TODO: document\n */\nexport const P2P_ESTABLISHED = 'p2p.established';\n\n/**\n * Properties: none\n *\n * TODO: document\n */\nexport const P2P_FAILED = 'p2p.failed';\n\n/**\n * Properties: none\n *\n * TODO: document\n */\nexport const P2P_SWITCH_TO_JVB = 'p2p.switch_to_jvb';\n\n/**\n * Properties: none\n *\n * TODO: document\n */\nexport const REMOTELY_MUTED = 'conference.remotelyMuted';\n\n/**\n * Properties: value\n *\n * TODO: document\n *\n * The \"value\" property contains the delay in milliseconds between joining\n * the MUC and receiving a Jingle session-initiate from Jicofo (but not\n * P2P).\n */\nexport const SESSION_INITIATE = 'session.initiate';\n\n/**\n * Properties: value\n *\n * TODO: document\n */\nexport const SESSION_INITIATE_RECEIVED = 'xmpp.session-initiate';\n\n/**\n * Properties: none\n *\n * TODO: document\n */\nexport const SESSION_TERMINATE = 'session.terminate';\n\n/**\n * Properties: none\n *\n * TODO: document\n */\nexport const SESSION_RESTART = 'session.restart';\n\n/**\n * Properties: value\n *\n * TODO: document\n */\nexport const TRANSPORT_REPLACE_START = 'xmpp.transport-replace.start';\n\n/**\n * Properties: value\n *\n * TODO: document\n */\nexport const TRANSPORT_REPLACE_SUCCESS = 'xmpp.transport-replace.success';\n\n\n\n// WEBPACK FOOTER //\n// ./service/statistics/AnalyticsEvents.js","const XMPPEvents = {\n    /**\n     * Indicates error while adding ice candidate.\n     */\n    ADD_ICE_CANDIDATE_FAILED: 'xmpp.add_ice_candidate_failed',\n\n    // Designates an event indicating that the focus has asked us to mute our\n    // audio.\n    AUDIO_MUTED_BY_FOCUS: 'xmpp.audio_muted_by_focus',\n    AUTHENTICATION_REQUIRED: 'xmpp.authentication_required',\n    BRIDGE_DOWN: 'xmpp.bridge_down',\n\n    /**\n     * Triggered when 'session-accept' is received from the responder.\n     */\n    CALL_ACCEPTED: 'xmpp.callaccepted.jingle',\n\n    // Designates an event indicating that an offer (e.g. Jingle\n    // session-initiate) was received.\n    CALL_INCOMING: 'xmpp.callincoming.jingle',\n\n    // Triggered when Jicofo kills our media session, this can happen while\n    // we're still in the MUC, when it decides to terminate the media session.\n    // For example when the session is idle for too long, because we're the only\n    // person in the conference room.\n    CALL_ENDED: 'xmpp.callended.jingle',\n    CHAT_ERROR_RECEIVED: 'xmpp.chat_error_received',\n    CONFERENCE_SETUP_FAILED: 'xmpp.conference_setup_failed',\n\n    /**\n     * This event is triggered when the ICE connects for the first time.\n     */\n    CONNECTION_ESTABLISHED: 'xmpp.connection.connected',\n\n    // Designates an event indicating that the connection to the XMPP server\n    // failed.\n    CONNECTION_FAILED: 'xmpp.connection.failed',\n\n    // Designates an event indicating that the media (ICE) connection was\n    // interrupted. This should go to the RTC module.\n    CONNECTION_INTERRUPTED: 'xmpp.connection.interrupted',\n\n    // Designates an event indicating that the media (ICE) connection was\n    // restored. This should go to the RTC module.\n    CONNECTION_RESTORED: 'xmpp.connection.restored',\n\n    // Designates an event indicating that the media (ICE) connection failed.\n    // This should go to the RTC module.\n    CONNECTION_ICE_FAILED: 'xmpp.connection.ice.failed',\n\n    // Designates an event indicating that the display name of a participant\n    // has changed.\n    DISPLAY_NAME_CHANGED: 'xmpp.display_name_changed',\n\n    /**\n     * Chat room instance have been added to Strophe.emuc plugin.\n     */\n    EMUC_ROOM_ADDED: 'xmpp.emuc_room_added',\n\n    /**\n     * Chat room instance have been removed from Strophe.emuc plugin.\n     */\n    EMUC_ROOM_REMOVED: 'xmpp.emuc_room_removed',\n    ETHERPAD: 'xmpp.etherpad',\n    FOCUS_DISCONNECTED: 'xmpp.focus_disconnected',\n    FOCUS_LEFT: 'xmpp.focus_left',\n    GRACEFUL_SHUTDOWN: 'xmpp.graceful_shutdown',\n\n    /**\n     * Event fired when 'transport-replace' Jingle message has been received,\n     * before the new offer is set on the PeerConnection.\n     */\n    ICE_RESTARTING: 'rtc.ice_restarting',\n\n    /* Event fired when XMPP error is returned to any request, it is meant to be\n     * used to report 'signaling' errors to CallStats\n     *\n     * {\n     *   code: {XMPP error code}\n     *   reason: {XMPP error condition}\n     *   source = request.tree()\n     *   session = {JingleSession instance}\n     * }\n     */\n    JINGLE_ERROR: 'xmpp.jingle_error',\n\n    // Event fired when we have failed to set initial offer\n    JINGLE_FATAL_ERROR: 'xmpp.jingle_fatal_error',\n\n    // Designates an event indicating that we were kicked from the XMPP MUC.\n    KICKED: 'xmpp.kicked',\n\n    // Designates an event indicating that our role in the XMPP MUC has changed.\n    LOCAL_ROLE_CHANGED: 'xmpp.localrole_changed',\n\n    // Designates an event indicating that an XMPP message in the MUC was\n    // received.\n    MESSAGE_RECEIVED: 'xmpp.message_received',\n\n    // Designates an event indicating that the XMPP MUC was destroyed.\n    MUC_DESTROYED: 'xmpp.muc_destroyed',\n\n    // Designates an event indicating that we have joined the XMPP MUC.\n    MUC_JOINED: 'xmpp.muc_joined',\n\n    // Designates an event indicating that a participant joined the XMPP MUC.\n    MUC_MEMBER_JOINED: 'xmpp.muc_member_joined',\n\n    // Designates an event indicating that a participant left the XMPP MUC.\n    MUC_MEMBER_LEFT: 'xmpp.muc_member_left',\n\n    // Designates an event indicating that local participant left the muc\n    MUC_LEFT: 'xmpp.muc_left',\n\n    // Designates an event indicating that the MUC role of a participant has\n    // changed.\n    MUC_ROLE_CHANGED: 'xmpp.muc_role_changed',\n\n    // Designates an event indicating that the MUC has been locked or unlocked.\n    MUC_LOCK_CHANGED: 'xmpp.muc_lock_changed',\n\n    // Designates an event indicating that a participant in the XMPP MUC has\n    // advertised that they have audio muted (or unmuted).\n    PARTICIPANT_AUDIO_MUTED: 'xmpp.audio_muted',\n\n    // Designates an event indicating that a participant in the XMPP MUC has\n    // advertised that they have video muted (or unmuted).\n    PARTICIPANT_VIDEO_MUTED: 'xmpp.video_muted',\n\n    // Designates an event indicating that the video type (e.g. 'camera' or\n    // 'screen') for a participant has changed.\n    // Note: currently this event fires every time we receive presence from\n    // someone (regardless of whether or not the \"video type\" changed).\n    PARTICIPANT_VIDEO_TYPE_CHANGED: 'xmpp.video_type',\n\n    /**\n     * Indicates that the features of the participant has been changed.\n     */\n    PARTCIPANT_FEATURES_CHANGED: 'xmpp.partcipant_features_changed',\n    PASSWORD_REQUIRED: 'xmpp.password_required',\n    PEERCONNECTION_READY: 'xmpp.peerconnection_ready',\n\n    /**\n     * Indicates that phone number changed.\n     */\n    PHONE_NUMBER_CHANGED: 'conference.phoneNumberChanged',\n    PRESENCE_STATUS: 'xmpp.presence_status',\n    PROMPT_FOR_LOGIN: 'xmpp.prompt_for_login',\n\n    // xmpp is connected and obtained user media\n    READY_TO_JOIN: 'xmpp.ready_to_join',\n\n    /**\n     * Indicates that recording state changed.\n     */\n    RECORDER_STATE_CHANGED: 'xmpp.recorderStateChanged',\n\n    // Designates an event indicating that we received statistics from a\n    // participant in the MUC.\n    REMOTE_STATS: 'xmpp.remote_stats',\n    RESERVATION_ERROR: 'xmpp.room_reservation_error',\n    ROOM_CONNECT_ERROR: 'xmpp.room_connect_error',\n    ROOM_CONNECT_NOT_ALLOWED_ERROR: 'xmpp.room_connect_error.not_allowed',\n    ROOM_JOIN_ERROR: 'xmpp.room_join_error',\n\n    /**\n     * Indicates that max users limit has been reached.\n     */\n    ROOM_MAX_USERS_ERROR: 'xmpp.room_max_users_error',\n\n    // Designates an event indicating that we sent an XMPP message to the MUC.\n    SENDING_CHAT_MESSAGE: 'xmpp.sending_chat_message',\n\n    /**\n     * Event fired when we do not get our 'session-accept' acknowledged by\n     * Jicofo. It most likely means that there is serious problem with our\n     * connection or XMPP server and we should reload the conference.\n     *\n     * We have seen that to happen in BOSH requests race condition when the BOSH\n     * request table containing the 'session-accept' was discarded by Prosody.\n     * Jicofo does send the RESULT immediately without any condition, so missing\n     * packets means that most likely it has never seen our IQ.\n     */\n    SESSION_ACCEPT_TIMEOUT: 'xmpp.session_accept_timeout',\n\n    // Designates an event indicating that we should join the conference with\n    // audio and/or video muted.\n    START_MUTED_FROM_FOCUS: 'xmpp.start_muted_from_focus',\n\n    // Designates an event indicating that the subject of the XMPP MUC has\n    // changed.\n    SUBJECT_CHANGED: 'xmpp.subject_changed',\n\n    // FIXME: how does it belong to XMPP ? - it's detected by the PeerConnection\n    // suspending detected\n    SUSPEND_DETECTED: 'xmpp.suspend_detected',\n\n    /**\n     * Notifies for transcription status changes. The event provides the\n     * following parameters to its listeners:\n     *\n     * @param {String} status - The new status.\n     */\n    TRANSCRIPTION_STATUS_CHANGED: 'xmpp.transcription_status_changed',\n\n    /**\n     * Event fired when 'transport-info' with new ICE candidates is received.\n     */\n    TRANSPORT_INFO: 'xmpp.transportinfo.jingle',\n\n    /**\n     * Indicates that video SIP GW state changed.\n     *\n     * @param {VideoSIPGWConstants} status - Any of the following statuses:\n     * STATUS_BUSY, STATUS_AVAILABLE or STATUS_UNDEFINED.\n     */\n    VIDEO_SIP_GW_AVAILABILITY_CHANGED: 'xmpp.videoSIPGWAvailabilityChanged',\n\n    /**\n     * Indicates that video SIP GW Session state changed.\n     * The statuses are any of the following statuses:\n     * STATE_ON, STATE_OFF, STATE_PENDING, STATE_RETRYING, STATE_FAILED.\n     * {@see VideoSIPGWConstants}\n     *\n     * @param {options} event - {address, oldState, newState, displayName}.\n     */\n    VIDEO_SIP_GW_SESSION_STATE_CHANGED:\n        'xmpp.videoSIPGWSessionStateChanged',\n\n    // Designates an event indicating that the local ICE connection state has\n    // changed.\n    ICE_CONNECTION_STATE_CHANGED: 'xmpp.ice_connection_state_changed',\n\n    /**\n     * Event which is emitted when the body in an XMPP message in the MUC\n     * contains JSON\n     */\n    JSON_MESSAGE_RECEIVED: 'xmmp.json_message_received'\n};\n\nmodule.exports = XMPPEvents;\n\n\n\n// WEBPACK FOOTER //\n// ./service/xmpp/XMPPEvents.js","const RTCEvents = {\n    /**\n     * Indicates error while create answer call.\n     */\n    CREATE_ANSWER_FAILED: 'rtc.create_answer_failed',\n\n    /**\n     * Indicates error while create offer call.\n     */\n    CREATE_OFFER_FAILED: 'rtc.create_offer_failed',\n    RTC_READY: 'rtc.ready',\n    DATA_CHANNEL_OPEN: 'rtc.data_channel_open',\n    ENDPOINT_CONN_STATUS_CHANGED: 'rtc.endpoint_conn_status_changed',\n    DOMINANT_SPEAKER_CHANGED: 'rtc.dominant_speaker_changed',\n    LASTN_ENDPOINT_CHANGED: 'rtc.lastn_endpoint_changed',\n\n    /**\n     * Event emitted when {@link RTC.setLastN} method is called to update with\n     * the new value set.\n     * The first argument is the value passed to {@link RTC.setLastN}.\n     */\n    LASTN_VALUE_CHANGED: 'rtc.lastn_value_changed',\n\n    /**\n     * Event emitted when ssrc for a local track is extracted and stored\n     * in {@link TraceablePeerConnection}.\n     * @param {JitsiLocalTrack} track which ssrc was updated\n     * @param {string} ssrc that was stored\n     */\n    LOCAL_TRACK_SSRC_UPDATED: 'rtc.local_track_ssrc_updated',\n\n    AVAILABLE_DEVICES_CHANGED: 'rtc.available_devices_changed',\n    TRACK_ATTACHED: 'rtc.track_attached',\n\n    /**\n     * Event fired when we remote track is added to the conference.\n     * 1st event argument is the added <tt>JitsiRemoteTrack</tt> instance.\n     **/\n    REMOTE_TRACK_ADDED: 'rtc.remote_track_added',\n\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\n    // (currently implemented for local tracks only)\n    REMOTE_TRACK_MUTE: 'rtc.remote_track_mute',\n\n    /**\n     * Indicates that the remote track has been removed from the conference.\n     * 1st event argument is the removed {@link JitsiRemoteTrack} instance.\n     */\n    REMOTE_TRACK_REMOVED: 'rtc.remote_track_removed',\n\n    // FIXME get rid of this event in favour of NO_DATA_FROM_SOURCE event\n    // (currently implemented for local tracks only)\n    REMOTE_TRACK_UNMUTE: 'rtc.remote_track_unmute',\n\n    /**\n     * Indicates error while set local description.\n     */\n    SET_LOCAL_DESCRIPTION_FAILED: 'rtc.set_local_description_failed',\n\n    /**\n     * Indicates error while set remote description.\n     */\n    SET_REMOTE_DESCRIPTION_FAILED: 'rtc.set_remote_description_failed',\n    AUDIO_OUTPUT_DEVICE_CHANGED: 'rtc.audio_output_device_changed',\n    DEVICE_LIST_CHANGED: 'rtc.device_list_changed',\n    DEVICE_LIST_AVAILABLE: 'rtc.device_list_available',\n\n    /**\n     * Indicates that a message from another participant is received on\n     * data channel.\n     */\n    ENDPOINT_MESSAGE_RECEIVED: 'rtc.endpoint_message_received',\n\n    /**\n     * Designates an event indicating that the local ICE username fragment of\n     * the jingle session has changed.\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\n     * is the source of the event.\n     * The second argument is the actual \"ufrag\" string.\n     */\n    LOCAL_UFRAG_CHANGED: 'rtc.local_ufrag_changed',\n\n    /**\n     * Designates an event indicating that the local ICE username fragment of\n     * the jingle session has changed.\n     * The first argument of the vent is <tt>TraceablePeerConnection</tt> which\n     * is the source of the event.\n     * The second argument is the actual \"ufrag\" string.\n     */\n    REMOTE_UFRAG_CHANGED: 'rtc.remote_ufrag_changed'\n};\n\nmodule.exports = RTCEvents;\n\n\n\n// WEBPACK FOOTER //\n// ./service/RTC/RTCEvents.js","import EventEmitter from 'events';\n\n/**\n * The class implements basic event operations - add/remove listener.\n * NOTE: The purpose of the class is to be extended in order to add\n * this functionality to other classes.\n */\nexport default class Listenable {\n    /**\n     * Creates new instance.\n     * @param {EventEmitter} eventEmitter\n     * @constructor\n     */\n    constructor(eventEmitter = new EventEmitter()) {\n        this.eventEmitter = eventEmitter;\n\n        // aliases for addListener/removeListener\n        this.addEventListener = this.on = this.addListener;\n        this.removeEventListener = this.off = this.removeListener;\n    }\n\n    /**\n     * Adds new listener.\n     * @param {String} eventName the name of the event\n     * @param {Function} listener the listener.\n     */\n    addListener(eventName, listener) {\n        this.eventEmitter.addListener(eventName, listener);\n    }\n\n    /**\n     * Removes listener.\n     * @param {String} eventName the name of the event that triggers the\n     * listener\n     * @param {Function} listener the listener.\n     */\n    removeListener(eventName, listener) {\n        this.eventEmitter.removeListener(eventName, listener);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/util/Listenable.js","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar logDisabled_ = true;\nvar deprecationWarnings_ = true;\n\n// Utility methods.\nvar utils = {\n  disableLog: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    logDisabled_ = bool;\n    return (bool) ? 'adapter.js logging disabled' :\n        'adapter.js logging enabled';\n  },\n\n  /**\n   * Disable or enable deprecation warnings\n   * @param {!boolean} bool set to true to disable warnings.\n   */\n  disableWarnings: function(bool) {\n    if (typeof bool !== 'boolean') {\n      return new Error('Argument type: ' + typeof bool +\n          '. Please use a boolean.');\n    }\n    deprecationWarnings_ = !bool;\n    return 'adapter.js deprecation warnings ' + (bool ? 'disabled' : 'enabled');\n  },\n\n  log: function() {\n    if (typeof window === 'object') {\n      if (logDisabled_) {\n        return;\n      }\n      if (typeof console !== 'undefined' && typeof console.log === 'function') {\n        console.log.apply(console, arguments);\n      }\n    }\n  },\n\n  /**\n   * Shows a deprecation warning suggesting the modern and spec-compatible API.\n   */\n  deprecated: function(oldMethod, newMethod) {\n    if (!deprecationWarnings_) {\n      return;\n    }\n    console.warn(oldMethod + ' is deprecated, please use ' + newMethod +\n        ' instead.');\n  },\n\n  /**\n   * Extract browser version out of the provided user agent string.\n   *\n   * @param {!string} uastring userAgent string.\n   * @param {!string} expr Regular expression used as match criteria.\n   * @param {!number} pos position in the version string to be returned.\n   * @return {!number} browser version.\n   */\n  extractVersion: function(uastring, expr, pos) {\n    var match = uastring.match(expr);\n    return match && match.length >= pos && parseInt(match[pos], 10);\n  },\n\n  /**\n   * Browser detector.\n   *\n   * @return {object} result containing browser and version\n   *     properties.\n   */\n  detectBrowser: function(window) {\n    var navigator = window && window.navigator;\n\n    // Returned result object.\n    var result = {};\n    result.browser = null;\n    result.version = null;\n\n    // Fail early if it's not a browser\n    if (typeof window === 'undefined' || !window.navigator) {\n      result.browser = 'Not a browser.';\n      return result;\n    }\n\n    // Firefox.\n    if (navigator.mozGetUserMedia) {\n      result.browser = 'firefox';\n      result.version = this.extractVersion(navigator.userAgent,\n          /Firefox\\/(\\d+)\\./, 1);\n    } else if (navigator.webkitGetUserMedia) {\n      // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\n      if (window.webkitRTCPeerConnection) {\n        result.browser = 'chrome';\n        result.version = this.extractVersion(navigator.userAgent,\n          /Chrom(e|ium)\\/(\\d+)\\./, 2);\n      } else { // Safari (in an unpublished version) or unknown webkit-based.\n        if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\n          result.browser = 'safari';\n          result.version = this.extractVersion(navigator.userAgent,\n            /AppleWebKit\\/(\\d+)\\./, 1);\n        } else { // unknown webkit-based browser.\n          result.browser = 'Unsupported webkit-based browser ' +\n              'with GUM support but no WebRTC support.';\n          return result;\n        }\n      }\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) { // Edge.\n      result.browser = 'edge';\n      result.version = this.extractVersion(navigator.userAgent,\n          /Edge\\/(\\d+).(\\d+)$/, 2);\n    } else if (navigator.mediaDevices &&\n        navigator.userAgent.match(/AppleWebKit\\/(\\d+)\\./)) {\n        // Safari, with webkitGetUserMedia removed.\n      result.browser = 'safari';\n      result.version = this.extractVersion(navigator.userAgent,\n          /AppleWebKit\\/(\\d+)\\./, 1);\n    } else { // Default fallthrough: not supported.\n      result.browser = 'Not a supported browser.';\n      return result;\n    }\n\n    return result;\n  },\n\n};\n\n// Export.\nmodule.exports = {\n  log: utils.log,\n  deprecated: utils.deprecated,\n  disableLog: utils.disableLog,\n  disableWarnings: utils.disableWarnings,\n  extractVersion: utils.extractVersion,\n  shimCreateObjectURL: utils.shimCreateObjectURL,\n  detectBrowser: utils.detectBrowser.bind(utils)\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/utils.js\n// module id = 11\n// module chunks = 0","import * as JitsiTrackErrors from './JitsiTrackErrors';\n\nconst TRACK_ERROR_TO_MESSAGE_MAP = {};\n\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.UNSUPPORTED_RESOLUTION]\n    = 'Video resolution is not supported: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.FIREFOX_EXTENSION_NEEDED]\n    = 'Firefox extension is not installed';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR]\n    = 'Failed to install Chrome extension';\nTRACK_ERROR_TO_MESSAGE_MAP[\n    JitsiTrackErrors.CHROME_EXTENSION_USER_GESTURE_REQUIRED]\n    = 'Failed to install Chrome extension - installations can only be initiated'\n        + ' by a user gesture.';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED]\n    = 'User canceled Chrome\\'s screen sharing prompt';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR]\n    = 'Unknown error from Chrome extension';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR]\n    = 'Unkown error from desktop picker';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND]\n    = 'Failed to detect desktop picker';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.GENERAL]\n    = 'Generic getUserMedia error';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.PERMISSION_DENIED]\n    = 'User denied permission to use device(s): ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.NOT_FOUND]\n    = 'Requested device(s) was/were not found: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.CONSTRAINT_FAILED]\n    = 'Constraint could not be satisfied: ';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_IS_DISPOSED]\n    = 'Track has been already disposed';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.TRACK_NO_STREAM_FOUND]\n    = 'Track does not have an associated Media Stream';\nTRACK_ERROR_TO_MESSAGE_MAP[JitsiTrackErrors.NO_DATA_FROM_SOURCE]\n    = 'The track has stopped receiving data from it\\'s source';\n\n\n// FIXME: Using prototype inheritance because otherwise instanceof is not\n// working properly (see https://github.com/babel/babel/issues/3083)\n\n/**\n *\n * Represents an error that occurred to a JitsiTrack. Can represent various\n * types of errors. For error descriptions (@see JitsiTrackErrors).\n *\n * @extends Error\n *\n *\n * @constructor\n * @param {Object|string} error - error object or error name\n * @param {Object|string} (options) - getUserMedia constraints object or\n * error message\n * @param {('audio'|'video'|'desktop'|'screen'|'audiooutput')[]} (devices) -\n * list of getUserMedia requested devices\n */\nfunction JitsiTrackError(error, options, devices) {\n    if (typeof error === 'object' && typeof error.name !== 'undefined') {\n        /**\n         * Additional information about original getUserMedia error\n         * and constraints.\n         * @type {{\n         *     error: Object,\n         *     constraints: Object,\n         *     devices: Array.<'audio'|'video'|'desktop'|'screen'>\n         * }}\n         */\n        this.gum = {\n            error,\n            constraints: options,\n            devices: devices && Array.isArray(devices)\n                ? devices.slice(0)\n                : undefined\n        };\n\n        switch (error.name) {\n        case 'NotAllowedError':\n        case 'PermissionDeniedError':\n        case 'SecurityError':\n            this.name = JitsiTrackErrors.PERMISSION_DENIED;\n            this.message\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                    + (this.gum.devices || []).join(', ');\n            break;\n        case 'DevicesNotFoundError':\n        case 'NotFoundError':\n            this.name = JitsiTrackErrors.NOT_FOUND;\n            this.message\n                = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                    + (this.gum.devices || []).join(', ');\n            break;\n        case 'ConstraintNotSatisfiedError':\n        case 'OverconstrainedError': {\n            const constraintName = error.constraintName || error.constraint;\n\n            if (options\n                    && options.video\n                    && (!devices || devices.indexOf('video') > -1)\n                    && (constraintName === 'minWidth'\n                        || constraintName === 'maxWidth'\n                        || constraintName === 'minHeight'\n                        || constraintName === 'maxHeight'\n                        || constraintName === 'width'\n                        || constraintName === 'height')) {\n                this.name = JitsiTrackErrors.UNSUPPORTED_RESOLUTION;\n                this.message\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                        + getResolutionFromFailedConstraint(\n                            constraintName,\n                            options);\n            } else {\n                this.name = JitsiTrackErrors.CONSTRAINT_FAILED;\n                this.message\n                    = TRACK_ERROR_TO_MESSAGE_MAP[this.name]\n                        + error.constraintName;\n            }\n            break;\n        }\n\n        default:\n            this.name = JitsiTrackErrors.GENERAL;\n            this.message\n                = error.message || TRACK_ERROR_TO_MESSAGE_MAP[this.name];\n            break;\n        }\n    } else if (typeof error === 'string') {\n        if (TRACK_ERROR_TO_MESSAGE_MAP[error]) {\n            this.name = error;\n            this.message = options || TRACK_ERROR_TO_MESSAGE_MAP[error];\n        } else {\n            // this is some generic error that do not fit any of our\n            // pre-defined errors, so don't give it any specific name, just\n            // store message\n            this.message = error;\n        }\n    } else {\n        throw new Error('Invalid arguments');\n    }\n\n    this.stack = error.stack || (new Error()).stack;\n}\n\nJitsiTrackError.prototype = Object.create(Error.prototype);\nJitsiTrackError.prototype.constructor = JitsiTrackError;\n\n/**\n * Gets failed resolution constraint from corresponding object.\n * @param {string} failedConstraintName\n * @param {Object} constraints\n * @returns {string|number}\n */\nfunction getResolutionFromFailedConstraint(failedConstraintName, constraints) {\n    if (constraints && constraints.video && constraints.video.mandatory) {\n        switch (failedConstraintName) {\n        case 'width':\n            return constraints.video.mandatory.minWidth;\n        case 'height':\n            return constraints.video.mandatory.minHeight;\n        default:\n            return constraints.video.mandatory[failedConstraintName] || '';\n        }\n    }\n\n    return '';\n}\n\nexport default JitsiTrackError;\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiTrackError.js","/* global module */\n/**\n * Enumeration of the video types\n * @type {{CAMERA: string, DESKTOP: string}}\n */\nconst VideoType = {\n    /**\n     * The camera video type.\n     */\n    CAMERA: 'camera',\n\n    /**\n     * The desktop video type.\n     */\n    DESKTOP: 'desktop'\n};\n\nmodule.exports = VideoType;\n\n\n\n// WEBPACK FOOTER //\n// ./service/RTC/VideoType.js","import { getLogger } from 'jitsi-meet-logger';\nconst logger = getLogger(__filename);\n\nimport RandomUtil from '../util/RandomUtil';\nimport RTCBrowserType from '../RTC/RTCBrowserType';\n\nconst SDPUtil = {\n    filterSpecialChars(text) {\n        // XXX Neither one of the falsy values (e.g. null, undefined, false,\n        // \"\", etc.) \"contain\" special chars.\n        // eslint-disable-next-line no-useless-escape\n        return text ? text.replace(/[\\\\\\/\\{,\\}\\+]/g, '') : text;\n    },\n    iceparams(mediadesc, sessiondesc) {\n        let data = null;\n        let pwd, ufrag;\n\n        if ((ufrag = SDPUtil.findLine(mediadesc, 'a=ice-ufrag:', sessiondesc))\n                && (pwd\n                    = SDPUtil.findLine(\n                        mediadesc,\n                        'a=ice-pwd:',\n                        sessiondesc))) {\n            data = {\n                ufrag: SDPUtil.parseICEUfrag(ufrag),\n                pwd: SDPUtil.parseICEPwd(pwd)\n            };\n        }\n\n        return data;\n    },\n    parseICEUfrag(line) {\n        return line.substring(12);\n    },\n    buildICEUfrag(frag) {\n        return `a=ice-ufrag:${frag}`;\n    },\n    parseICEPwd(line) {\n        return line.substring(10);\n    },\n    buildICEPwd(pwd) {\n        return `a=ice-pwd:${pwd}`;\n    },\n    parseMID(line) {\n        return line.substring(6);\n    },\n    parseMLine(line) {\n        const data = {};\n        const parts = line.substring(2).split(' ');\n\n        data.media = parts.shift();\n        data.port = parts.shift();\n        data.proto = parts.shift();\n        if (parts[parts.length - 1] === '') { // trailing whitespace\n            parts.pop();\n        }\n        data.fmt = parts;\n\n        return data;\n    },\n    buildMLine(mline) {\n        return (\n            `m=${mline.media} ${mline.port} ${mline.proto} ${\n                mline.fmt.join(' ')}`);\n    },\n    parseRTPMap(line) {\n        const data = {};\n        let parts = line.substring(9).split(' ');\n\n        data.id = parts.shift();\n        parts = parts[0].split('/');\n        data.name = parts.shift();\n        data.clockrate = parts.shift();\n        data.channels = parts.length ? parts.shift() : '1';\n\n        return data;\n    },\n\n    /**\n     * Parses SDP line \"a=sctpmap:...\" and extracts SCTP port from it.\n     * @param line eg. \"a=sctpmap:5000 webrtc-datachannel\"\n     * @returns [SCTP port number, protocol, streams]\n     */\n    parseSCTPMap(line) {\n        const parts = line.substring(10).split(' ');\n        const sctpPort = parts[0];\n        const protocol = parts[1];\n\n        // Stream count is optional\n        const streamCount = parts.length > 2 ? parts[2] : null;\n\n\n        return [ sctpPort, protocol, streamCount ];// SCTP port\n    },\n    buildRTPMap(el) {\n        let line\n            = `a=rtpmap:${el.getAttribute('id')} ${el.getAttribute('name')}/${\n                el.getAttribute('clockrate')}`;\n\n        if (el.getAttribute('channels')\n            && el.getAttribute('channels') !== '1') {\n            line += `/${el.getAttribute('channels')}`;\n        }\n\n        return line;\n    },\n    parseCrypto(line) {\n        const data = {};\n        const parts = line.substring(9).split(' ');\n\n        data.tag = parts.shift();\n        data['crypto-suite'] = parts.shift();\n        data['key-params'] = parts.shift();\n        if (parts.length) {\n            data['session-params'] = parts.join(' ');\n        }\n\n        return data;\n    },\n    parseFingerprint(line) { // RFC 4572\n        const data = {};\n        const parts = line.substring(14).split(' ');\n\n        data.hash = parts.shift();\n        data.fingerprint = parts.shift();\n\n        // TODO assert that fingerprint satisfies 2UHEX *(\":\" 2UHEX) ?\n        return data;\n    },\n    parseFmtp(line) {\n        const data = [];\n        let parts = line.split(' ');\n\n        parts.shift();\n        parts = parts.join(' ').split(';');\n        for (let i = 0; i < parts.length; i++) {\n            let key = parts[i].split('=')[0];\n\n            while (key.length && key[0] === ' ') {\n                key = key.substring(1);\n            }\n            const value = parts[i].split('=')[1];\n\n            if (key && value) {\n                data.push({ name: key,\n                    value });\n            } else if (key) {\n                // rfc 4733 (DTMF) style stuff\n                data.push({ name: '',\n                    value: key });\n            }\n        }\n\n        return data;\n    },\n    parseICECandidate(line) {\n        const candidate = {};\n        const elems = line.split(' ');\n\n        candidate.foundation = elems[0].substring(12);\n        candidate.component = elems[1];\n        candidate.protocol = elems[2].toLowerCase();\n        candidate.priority = elems[3];\n        candidate.ip = elems[4];\n        candidate.port = elems[5];\n\n        // elems[6] => \"typ\"\n        candidate.type = elems[7];\n        candidate.generation = 0; // default value, may be overwritten below\n        for (let i = 8; i < elems.length; i += 2) {\n            switch (elems[i]) {\n            case 'raddr':\n                candidate['rel-addr'] = elems[i + 1];\n                break;\n            case 'rport':\n                candidate['rel-port'] = elems[i + 1];\n                break;\n            case 'generation':\n                candidate.generation = elems[i + 1];\n                break;\n            case 'tcptype':\n                candidate.tcptype = elems[i + 1];\n                break;\n            default: // TODO\n                logger.log(\n                    `parseICECandidate not translating \"${\n                        elems[i]}\" = \"${elems[i + 1]}\"`);\n            }\n        }\n        candidate.network = '1';\n\n        // not applicable to SDP -- FIXME: should be unique, not just random\n        // eslint-disable-next-line newline-per-chained-call\n        candidate.id = Math.random().toString(36).substr(2, 10);\n\n        return candidate;\n    },\n    buildICECandidate(cand) {\n        let line = [\n            `a=candidate:${cand.foundation}`,\n            cand.component,\n            cand.protocol,\n            cand.priority,\n            cand.ip,\n            cand.port,\n            'typ',\n            cand.type\n        ].join(' ');\n\n        line += ' ';\n        switch (cand.type) {\n        case 'srflx':\n        case 'prflx':\n        case 'relay':\n            if (cand.hasOwnAttribute('rel-addr')\n                    && cand.hasOwnAttribute('rel-port')) {\n                line += 'raddr';\n                line += ' ';\n                line += cand['rel-addr'];\n                line += ' ';\n                line += 'rport';\n                line += ' ';\n                line += cand['rel-port'];\n                line += ' ';\n            }\n            break;\n        }\n        if (cand.hasOwnAttribute('tcptype')) {\n            line += 'tcptype';\n            line += ' ';\n            line += cand.tcptype;\n            line += ' ';\n        }\n        line += 'generation';\n        line += ' ';\n        line += cand.hasOwnAttribute('generation') ? cand.generation : '0';\n\n        return line;\n    },\n    parseSSRC(desc) {\n        // proprietary mapping of a=ssrc lines\n        // TODO: see \"Jingle RTP Source Description\" by Juberti and P. Thatcher\n        // on google docs and parse according to that\n        const data = new Map();\n        const lines = desc.split('\\r\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            if (lines[i].substring(0, 7) === 'a=ssrc:') {\n                // FIXME: Use regex to smartly find the ssrc.\n                const ssrc = lines[i].split('a=ssrc:')[1].split(' ')[0];\n\n                if (!data.get(ssrc)) {\n                    data.set(ssrc, []);\n                }\n\n                data.get(ssrc).push(lines[i]);\n            }\n        }\n\n        return data;\n    },\n    parseRTCPFB(line) {\n        const parts = line.substr(10).split(' ');\n        const data = {};\n\n        data.pt = parts.shift();\n        data.type = parts.shift();\n        data.params = parts;\n\n        return data;\n    },\n    parseExtmap(line) {\n        const parts = line.substr(9).split(' ');\n        const data = {};\n\n        data.value = parts.shift();\n        if (data.value.indexOf('/') === -1) {\n            data.direction = 'both';\n        } else {\n            data.direction = data.value.substr(data.value.indexOf('/') + 1);\n            data.value = data.value.substr(0, data.value.indexOf('/'));\n        }\n        data.uri = parts.shift();\n        data.params = parts;\n\n        return data;\n    },\n    findLine(haystack, needle, sessionpart) {\n        let lines = haystack.split('\\r\\n');\n\n        for (let i = 0; i < lines.length; i++) {\n            if (lines[i].substring(0, needle.length) === needle) {\n                return lines[i];\n            }\n        }\n        if (!sessionpart) {\n            return false;\n        }\n\n        // search session part\n        lines = sessionpart.split('\\r\\n');\n        for (let j = 0; j < lines.length; j++) {\n            if (lines[j].substring(0, needle.length) === needle) {\n                return lines[j];\n            }\n        }\n\n        return false;\n    },\n    findLines(haystack, needle, sessionpart) {\n        let lines = haystack.split('\\r\\n');\n        const needles = [];\n\n        for (let i = 0; i < lines.length; i++) {\n            if (lines[i].substring(0, needle.length) === needle) {\n                needles.push(lines[i]);\n            }\n        }\n        if (needles.length || !sessionpart) {\n            return needles;\n        }\n\n        // search session part\n        lines = sessionpart.split('\\r\\n');\n        for (let j = 0; j < lines.length; j++) {\n            if (lines[j].substring(0, needle.length) === needle) {\n                needles.push(lines[j]);\n            }\n        }\n\n        return needles;\n    },\n    candidateToJingle(line) {\n        // a=candidate:2979166662 1 udp 2113937151 192.168.2.100 57698 typ host\n        // generation 0\n        //      <candidate component=... foundation=... generation=... id=...\n        // ip=... network=... port=... priority=... protocol=... type=.../>\n        if (line.indexOf('candidate:') === 0) {\n            // eslint-disable-next-line no-param-reassign\n            line = `a=${line}`;\n        } else if (line.substring(0, 12) !== 'a=candidate:') {\n            logger.log(\n                'parseCandidate called with a line that is not a candidate'\n                    + ' line');\n            logger.log(line);\n\n            return null;\n        }\n        if (line.substring(line.length - 2) === '\\r\\n') { // chomp it\n            // eslint-disable-next-line no-param-reassign\n            line = line.substring(0, line.length - 2);\n        }\n        const candidate = {};\n        const elems = line.split(' ');\n\n        if (elems[6] !== 'typ') {\n            logger.log('did not find typ in the right place');\n            logger.log(line);\n\n            return null;\n        }\n        candidate.foundation = elems[0].substring(12);\n        candidate.component = elems[1];\n        candidate.protocol = elems[2].toLowerCase();\n        candidate.priority = elems[3];\n        candidate.ip = elems[4];\n        candidate.port = elems[5];\n\n        // elems[6] => \"typ\"\n        candidate.type = elems[7];\n\n        candidate.generation = '0'; // default, may be overwritten below\n        for (let i = 8; i < elems.length; i += 2) {\n            switch (elems[i]) {\n            case 'raddr':\n                candidate['rel-addr'] = elems[i + 1];\n                break;\n            case 'rport':\n                candidate['rel-port'] = elems[i + 1];\n                break;\n            case 'generation':\n                candidate.generation = elems[i + 1];\n                break;\n            case 'tcptype':\n                candidate.tcptype = elems[i + 1];\n                break;\n            default: // TODO\n                logger.log(`not translating \"${elems[i]}\" = \"${elems[i + 1]}\"`);\n            }\n        }\n        candidate.network = '1';\n\n        // not applicable to SDP -- FIXME: should be unique, not just random\n        // eslint-disable-next-line newline-per-chained-call\n        candidate.id = Math.random().toString(36).substr(2, 10);\n\n        return candidate;\n    },\n    candidateFromJingle(cand) {\n        let line = 'a=candidate:';\n\n        line += cand.getAttribute('foundation');\n        line += ' ';\n        line += cand.getAttribute('component');\n        line += ' ';\n\n        let protocol = cand.getAttribute('protocol');\n\n        // use tcp candidates for FF\n\n        if (RTCBrowserType.isFirefox() && protocol.toLowerCase() === 'ssltcp') {\n            protocol = 'tcp';\n        }\n\n        line += protocol; // .toUpperCase(); // chrome M23 doesn't like this\n        line += ' ';\n        line += cand.getAttribute('priority');\n        line += ' ';\n        line += cand.getAttribute('ip');\n        line += ' ';\n        line += cand.getAttribute('port');\n        line += ' ';\n        line += 'typ';\n        line += ` ${cand.getAttribute('type')}`;\n        line += ' ';\n        switch (cand.getAttribute('type')) {\n        case 'srflx':\n        case 'prflx':\n        case 'relay':\n            if (cand.getAttribute('rel-addr')\n                    && cand.getAttribute('rel-port')) {\n                line += 'raddr';\n                line += ' ';\n                line += cand.getAttribute('rel-addr');\n                line += ' ';\n                line += 'rport';\n                line += ' ';\n                line += cand.getAttribute('rel-port');\n                line += ' ';\n            }\n            break;\n        }\n        if (protocol.toLowerCase() === 'tcp') {\n            line += 'tcptype';\n            line += ' ';\n            line += cand.getAttribute('tcptype');\n            line += ' ';\n        }\n        line += 'generation';\n        line += ' ';\n        line += cand.getAttribute('generation') || '0';\n\n        return `${line}\\r\\n`;\n    },\n\n    /**\n     * Parse the 'most' primary video ssrc from the given m line\n     * @param {object} mLine object as parsed from transform.parse\n     * @return {number} the primary video ssrc from the given m line\n     */\n    parsePrimaryVideoSsrc(videoMLine) {\n        const numSsrcs = videoMLine.ssrcs\n            .map(ssrcInfo => ssrcInfo.id)\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\n            .length;\n        const numGroups\n            = (videoMLine.ssrcGroups && videoMLine.ssrcGroups.length) || 0;\n\n        if (numSsrcs > 1 && numGroups === 0) {\n            // Ambiguous, can't figure out the primary\n            return;\n        }\n        let primarySsrc = null;\n\n        if (numSsrcs === 1) {\n            primarySsrc = videoMLine.ssrcs[0].id;\n        } else if (numSsrcs === 2) {\n            // Can figure it out if there's an FID group\n            const fidGroup\n                = videoMLine.ssrcGroups.find(\n                    group => group.semantics === 'FID');\n\n            if (fidGroup) {\n                primarySsrc = fidGroup.ssrcs.split(' ')[0];\n            }\n        } else if (numSsrcs >= 3) {\n            // Can figure it out if there's a sim group\n            const simGroup\n                = videoMLine.ssrcGroups.find(\n                    group => group.semantics === 'SIM');\n\n            if (simGroup) {\n                primarySsrc = simGroup.ssrcs.split(' ')[0];\n            }\n        }\n\n        return primarySsrc;\n    },\n\n    /**\n     * Generate an ssrc\n     * @returns {number} an ssrc\n     */\n    generateSsrc() {\n        return RandomUtil.randomInt(1, 0xffffffff);\n    },\n\n    /**\n     * Get an attribute for the given ssrc with the given attributeName\n     *  from the given mline\n     * @param {object} mLine an mLine object as parsed from transform.parse\n     * @param {number} ssrc the ssrc for which an attribtue is desired\n     * @param {string} attributeName the name of the desired attribute\n     * @returns {string} the value corresponding to the given ssrc\n     *  and attributeName\n     */\n    getSsrcAttribute(mLine, ssrc, attributeName) {\n        for (let i = 0; i < mLine.ssrcs.length; ++i) {\n            const ssrcLine = mLine.ssrcs[i];\n\n            if (ssrcLine.id === ssrc\n                && ssrcLine.attribute === attributeName) {\n                return ssrcLine.value;\n            }\n        }\n    },\n\n    /**\n     * Parses the ssrcs from the group sdp line and\n     *  returns them as a list of numbers\n     * @param {object} the ssrcGroup object as parsed from\n     *  sdp-transform\n     * @returns {list<number>} a list of the ssrcs in the group\n     *  parsed as numbers\n     */\n    parseGroupSsrcs(ssrcGroup) {\n        return ssrcGroup\n            .ssrcs\n            .split(' ')\n            .map(ssrcStr => parseInt(ssrcStr, 10));\n    },\n\n    /**\n     * Get the mline of the given type from the given sdp\n     * @param {object} sdp sdp as parsed from transform.parse\n     * @param {string} type the type of the desired mline (e.g. \"video\")\n     * @returns {object} a media object\n     */\n    getMedia(sdp, type) {\n        return sdp.media.find(m => m.type === type);\n    },\n\n    /**\n     * Extracts the ICE username fragment from an SDP string.\n     * @param {string} sdp the SDP in raw text format\n     */\n    getUfrag(sdp) {\n        const ufragLines\n            = sdp.split('\\n').filter(line => line.startsWith('a=ice-ufrag:'));\n\n        if (ufragLines.length > 0) {\n            return ufragLines[0].substr('a=ice-ufrag:'.length);\n        }\n    },\n\n    /**\n     * Sets the given codecName as the preferred codec by\n     *  moving it to the beginning of the payload types\n     *  list (modifies the given mline in place).  If there\n     *  are multiple options within the same codec (multiple h264\n     *  profiles, for instance), this will prefer the first one\n     *  that is found.\n     * @param {object} videoMLine the video mline object from\n     *  an sdp as parsed by transform.parse\n     * @param {string} codecName the name of the preferred codec\n     */\n    preferVideoCodec(videoMLine, codecName) {\n        let payloadType = null;\n\n        if (!videoMLine || !codecName) {\n            return;\n        }\n\n        for (let i = 0; i < videoMLine.rtp.length; ++i) {\n            const rtp = videoMLine.rtp[i];\n\n            if (rtp.codec\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\n                payloadType = rtp.payload;\n                break;\n            }\n        }\n        if (payloadType) {\n            // Call toString() on payloads to get around an issue within\n            // SDPTransform that sets payloads as a number, instead of a string,\n            // when there is only one payload.\n            const payloadTypes\n                = videoMLine.payloads\n                    .toString()\n                    .split(' ')\n                    .map(p => parseInt(p, 10));\n            const payloadIndex = payloadTypes.indexOf(payloadType);\n\n            payloadTypes.splice(payloadIndex, 1);\n            payloadTypes.unshift(payloadType);\n            videoMLine.payloads = payloadTypes.join(' ');\n        }\n    },\n\n    /**\n     * Strips the given codec from the given mline. All related RTX payload\n     * types are also stripped. If the resulting mline would have no codecs,\n     * it's disabled.\n     *\n     * @param {object} videoMLine the video mline object from an sdp as parsed\n     * by transform.parse.\n     * @param {string} codecName the name of the codec which will be stripped.\n     */\n    stripVideoCodec(videoMLine, codecName) {\n        if (!videoMLine || !codecName) {\n            return;\n        }\n\n        const removePts = [];\n\n        for (const rtp of videoMLine.rtp) {\n            if (rtp.codec\n                && rtp.codec.toLowerCase() === codecName.toLowerCase()) {\n                removePts.push(rtp.payload);\n            }\n        }\n\n        if (removePts.length > 0) {\n            // We also need to remove the payload types that are related to RTX\n            // for the codecs we want to disable.\n            const rtxApts = removePts.map(item => `apt=${item}`);\n            const rtxPts = videoMLine.fmtp.filter(\n                item => rtxApts.indexOf(item.config) !== -1);\n\n            removePts.push(...rtxPts.map(item => item.payload));\n\n            // Call toString() on payloads to get around an issue within\n            // SDPTransform that sets payloads as a number, instead of a string,\n            // when there is only one payload.\n            const allPts = videoMLine.payloads\n                .toString()\n                .split(' ')\n                .map(Number);\n            const keepPts = allPts.filter(pt => removePts.indexOf(pt) === -1);\n\n            if (keepPts.length === 0) {\n                // There are no other video codecs, disable the stream.\n                videoMLine.port = 0;\n                videoMLine.direction = 'inactive';\n                videoMLine.payloads = '*';\n            } else {\n                videoMLine.payloads = keepPts.join(' ');\n            }\n\n            videoMLine.rtp = videoMLine.rtp.filter(\n                item => keepPts.indexOf(item.payload) !== -1);\n            videoMLine.fmtp = videoMLine.fmtp.filter(\n                item => keepPts.indexOf(item.payload) !== -1);\n            if (videoMLine.rtcpFb) {\n                videoMLine.rtcpFb = videoMLine.rtcpFb.filter(\n                    item => keepPts.indexOf(item.payload) !== -1);\n            }\n        }\n    }\n};\n\nexport default SDPUtil;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/SDPUtil.js","var parser = require('./parser');\nvar writer = require('./writer');\n\nexports.write = writer;\nexports.parse = parser.parse;\nexports.parseFmtpConfig = parser.parseFmtpConfig;\nexports.parseParams = parser.parseParams;\nexports.parsePayloads = parser.parsePayloads;\nexports.parseRemoteCandidates = parser.parseRemoteCandidates;\nexports.parseImageAttributes = parser.parseImageAttributes;\nexports.parseSimulcastStreamList = parser.parseSimulcastStreamList;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp-transform/lib/index.js\n// module id = 15\n// module chunks = 0","// Copyright Joyent, Inc. and other Node contributors.\n//\n// Permission is hereby granted, free of charge, to any person obtaining a\n// copy of this software and associated documentation files (the\n// \"Software\"), to deal in the Software without restriction, including\n// without limitation the rights to use, copy, modify, merge, publish,\n// distribute, sublicense, and/or sell copies of the Software, and to permit\n// persons to whom the Software is furnished to do so, subject to the\n// following conditions:\n//\n// The above copyright notice and this permission notice shall be included\n// in all copies or substantial portions of the Software.\n//\n// THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS\n// OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF\n// MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN\n// NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM,\n// DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR\n// OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE\n// USE OR OTHER DEALINGS IN THE SOFTWARE.\n\nfunction EventEmitter() {\n  this._events = this._events || {};\n  this._maxListeners = this._maxListeners || undefined;\n}\nmodule.exports = EventEmitter;\n\n// Backwards-compat with node 0.10.x\nEventEmitter.EventEmitter = EventEmitter;\n\nEventEmitter.prototype._events = undefined;\nEventEmitter.prototype._maxListeners = undefined;\n\n// By default EventEmitters will print a warning if more than 10 listeners are\n// added to it. This is a useful default which helps finding memory leaks.\nEventEmitter.defaultMaxListeners = 10;\n\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!isNumber(n) || n < 0 || isNaN(n))\n    throw TypeError('n must be a positive number');\n  this._maxListeners = n;\n  return this;\n};\n\nEventEmitter.prototype.emit = function(type) {\n  var er, handler, len, args, i, listeners;\n\n  if (!this._events)\n    this._events = {};\n\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events.error ||\n        (isObject(this._events.error) && !this._events.error.length)) {\n      er = arguments[1];\n      if (er instanceof Error) {\n        throw er; // Unhandled 'error' event\n      } else {\n        // At least give some kind of context to the user\n        var err = new Error('Uncaught, unspecified \"error\" event. (' + er + ')');\n        err.context = er;\n        throw err;\n      }\n    }\n  }\n\n  handler = this._events[type];\n\n  if (isUndefined(handler))\n    return false;\n\n  if (isFunction(handler)) {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n  } else if (isObject(handler)) {\n    args = Array.prototype.slice.call(arguments, 1);\n    listeners = handler.slice();\n    len = listeners.length;\n    for (i = 0; i < len; i++)\n      listeners[i].apply(this, args);\n  }\n\n  return true;\n};\n\nEventEmitter.prototype.addListener = function(type, listener) {\n  var m;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events)\n    this._events = {};\n\n  // To avoid recursion in the case that type === \"newListener\"! Before\n  // adding it to the listeners, first emit \"newListener\".\n  if (this._events.newListener)\n    this.emit('newListener', type,\n              isFunction(listener.listener) ?\n              listener.listener : listener);\n\n  if (!this._events[type])\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  else if (isObject(this._events[type]))\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  else\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n\n  // Check for listener leak\n  if (isObject(this._events[type]) && !this._events[type].warned) {\n    if (!isUndefined(this._maxListeners)) {\n      m = this._maxListeners;\n    } else {\n      m = EventEmitter.defaultMaxListeners;\n    }\n\n    if (m && m > 0 && this._events[type].length > m) {\n      this._events[type].warned = true;\n      console.error('(node) warning: possible EventEmitter memory ' +\n                    'leak detected. %d listeners added. ' +\n                    'Use emitter.setMaxListeners() to increase limit.',\n                    this._events[type].length);\n      if (typeof console.trace === 'function') {\n        // not supported in IE 10\n        console.trace();\n      }\n    }\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  var fired = false;\n\n  function g() {\n    this.removeListener(type, g);\n\n    if (!fired) {\n      fired = true;\n      listener.apply(this, arguments);\n    }\n  }\n\n  g.listener = listener;\n  this.on(type, g);\n\n  return this;\n};\n\n// emits a 'removeListener' event iff the listener was removed\nEventEmitter.prototype.removeListener = function(type, listener) {\n  var list, position, length, i;\n\n  if (!isFunction(listener))\n    throw TypeError('listener must be a function');\n\n  if (!this._events || !this._events[type])\n    return this;\n\n  list = this._events[type];\n  length = list.length;\n  position = -1;\n\n  if (list === listener ||\n      (isFunction(list.listener) && list.listener === listener)) {\n    delete this._events[type];\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n\n  } else if (isObject(list)) {\n    for (i = length; i-- > 0;) {\n      if (list[i] === listener ||\n          (list[i].listener && list[i].listener === listener)) {\n        position = i;\n        break;\n      }\n    }\n\n    if (position < 0)\n      return this;\n\n    if (list.length === 1) {\n      list.length = 0;\n      delete this._events[type];\n    } else {\n      list.splice(position, 1);\n    }\n\n    if (this._events.removeListener)\n      this.emit('removeListener', type, listener);\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  var key, listeners;\n\n  if (!this._events)\n    return this;\n\n  // not listening for removeListener, no need to emit\n  if (!this._events.removeListener) {\n    if (arguments.length === 0)\n      this._events = {};\n    else if (this._events[type])\n      delete this._events[type];\n    return this;\n  }\n\n  // emit removeListener for all listeners on all events\n  if (arguments.length === 0) {\n    for (key in this._events) {\n      if (key === 'removeListener') continue;\n      this.removeAllListeners(key);\n    }\n    this.removeAllListeners('removeListener');\n    this._events = {};\n    return this;\n  }\n\n  listeners = this._events[type];\n\n  if (isFunction(listeners)) {\n    this.removeListener(type, listeners);\n  } else if (listeners) {\n    // LIFO order\n    while (listeners.length)\n      this.removeListener(type, listeners[listeners.length - 1]);\n  }\n  delete this._events[type];\n\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  var ret;\n  if (!this._events || !this._events[type])\n    ret = [];\n  else if (isFunction(this._events[type]))\n    ret = [this._events[type]];\n  else\n    ret = this._events[type].slice();\n  return ret;\n};\n\nEventEmitter.prototype.listenerCount = function(type) {\n  if (this._events) {\n    var evlistener = this._events[type];\n\n    if (isFunction(evlistener))\n      return 1;\n    else if (evlistener)\n      return evlistener.length;\n  }\n  return 0;\n};\n\nEventEmitter.listenerCount = function(emitter, type) {\n  return emitter.listenerCount(type);\n};\n\nfunction isFunction(arg) {\n  return typeof arg === 'function';\n}\n\nfunction isNumber(arg) {\n  return typeof arg === 'number';\n}\n\nfunction isObject(arg) {\n  return typeof arg === 'object' && arg !== null;\n}\n\nfunction isUndefined(arg) {\n  return arg === void 0;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/events/events.js\n// module id = 16\n// module chunks = 0","/**\n * The errors for the JitsiTrack objects.\n */\n\n/**\n * Generic error for jidesha extension for Chrome.\n */\nexport const CHROME_EXTENSION_GENERIC_ERROR\n    = 'gum.chrome_extension_generic_error';\n\n/**\n * An error which indicates that the jidesha extension for Chrome is\n * failed to install.\n */\nexport const CHROME_EXTENSION_INSTALLATION_ERROR\n    = 'gum.chrome_extension_installation_error';\n\n/**\n * This error indicates that the attempt to start screensharing was initiated by\n * a script which did not originate in user gesture handler. It means that\n * you should to trigger the action again in response to a button click for\n * example.\n * @type {string}\n */\nexport const CHROME_EXTENSION_USER_GESTURE_REQUIRED\n    = 'gum.chrome_extension_user_gesture_required';\n\n/**\n * An error which indicates that user canceled screen sharing window\n * selection dialog in jidesha extension for Chrome.\n */\nexport const CHROME_EXTENSION_USER_CANCELED\n    = 'gum.chrome_extension_user_canceled';\n\n/**\n * An error which indicates that some of requested constraints in\n * getUserMedia call were not satisfied.\n */\nexport const CONSTRAINT_FAILED = 'gum.constraint_failed';\n\n/**\n * A generic error which indicates an error occurred while selecting\n * a DesktopCapturerSource from the electron app.\n */\nexport const ELECTRON_DESKTOP_PICKER_ERROR\n    = 'gum.electron_desktop_picker_error';\n\n/**\n * An error which indicates a custom desktop picker could not be detected\n * for the electron app.\n */\nexport const ELECTRON_DESKTOP_PICKER_NOT_FOUND\n    = 'gum.electron_desktop_picker_not_found';\n\n/**\n * An error which indicates that the jidesha extension for Firefox is\n * needed to proceed with screen sharing, and that it is not installed.\n */\nexport const FIREFOX_EXTENSION_NEEDED = 'gum.firefox_extension_needed';\n\n/**\n * Generic getUserMedia error.\n */\nexport const GENERAL = 'gum.general';\n\n/**\n * An error which indicates that requested device was not found.\n */\nexport const NOT_FOUND = 'gum.not_found';\n\n/**\n * An error which indicates that user denied permission to share requested\n * device.\n */\nexport const PERMISSION_DENIED = 'gum.permission_denied';\n\n/**\n * An error which indicates that track has been already disposed and cannot\n * be longer used.\n */\nexport const TRACK_IS_DISPOSED = 'track.track_is_disposed';\n\n/**\n * An error which indicates that track has no MediaStream associated.\n */\nexport const TRACK_NO_STREAM_FOUND = 'track.no_stream_found';\n\n/**\n * An error which indicates that requested video resolution is not supported\n * by a webcam.\n */\nexport const UNSUPPORTED_RESOLUTION = 'gum.unsupported_resolution';\n\n/**\n * Indicates that the track is no receiving any data without reason(the\n * stream was stopped, etc)\n */\nexport const NO_DATA_FROM_SOURCE = 'track.no_data_from_source';\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiTrackErrors.js","/**\n * The media track was removed to the conference.\n */\nexport const LOCAL_TRACK_STOPPED = 'track.stopped';\n\n/**\n * Audio levels of a this track was changed.\n * The first argument is a number with audio level value in range [0, 1].\n * The second argument is a <tt>TraceablePeerConnection</tt> which is the peer\n * connection which measured the audio level (one audio track can be added\n * to multiple peer connection at the same time). This argument is optional for\n * local tracks for which we can measure audio level without the peer\n * connection (the value will be <tt>undefined</tt>).\n *\n * NOTE The second argument should be treated as library internal and can be\n * removed at any time.\n */\nexport const TRACK_AUDIO_LEVEL_CHANGED = 'track.audioLevelsChanged';\n\n/**\n * The audio output of the track was changed.\n */\nexport const TRACK_AUDIO_OUTPUT_CHANGED = 'track.audioOutputChanged';\n\n/**\n * A media track mute status was changed.\n */\nexport const TRACK_MUTE_CHANGED = 'track.trackMuteChanged';\n\n/**\n * The video type(\"camera\" or \"desktop\") of the track was changed.\n */\nexport const TRACK_VIDEOTYPE_CHANGED = 'track.videoTypeChanged';\n\n/**\n * Indicates that the track is no receiving any data without reason(the\n * stream was stopped, etc)\n */\nexport const NO_DATA_FROM_SOURCE = 'track.no_data_from_source';\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiTrackEvents.js","import { getLogger } from 'jitsi-meet-logger';\nconst logger = getLogger(__filename);\n\nimport UsernameGenerator from '../util/UsernameGenerator';\n\nlet _callStatsUserName;\n\nlet _machineId;\n\n/**\n *\n */\nexport default {\n    /**\n     * Returns fake username for callstats\n     * @returns {string} fake username for callstats\n     */\n    get callStatsUserName() {\n        if (!_callStatsUserName) {\n            const localStorage = getLocalStorage();\n\n            if (localStorage) {\n                _callStatsUserName = localStorage.getItem('callStatsUserName');\n            }\n            if (!_callStatsUserName) {\n                _callStatsUserName = generateCallStatsUserName();\n                if (localStorage) {\n                    localStorage.setItem(\n                        'callStatsUserName',\n                        _callStatsUserName);\n                }\n            }\n        }\n\n        return _callStatsUserName;\n    },\n\n    /**\n     * Returns current machine id.\n     * @returns {string} machine id\n     */\n    get machineId() {\n        if (!_machineId) {\n            const localStorage = getLocalStorage();\n\n            if (localStorage) {\n                _machineId = localStorage.getItem('jitsiMeetId');\n            }\n            if (!_machineId) {\n                _machineId = generateJitsiMeetId();\n                if (localStorage) {\n                    localStorage.setItem('jitsiMeetId', _machineId);\n                }\n            }\n        }\n\n        return _machineId;\n    },\n\n    /**\n     * Returns current session id.\n     * @returns {string} current session id\n     */\n    get sessionId() {\n        // We may update sessionId in localStorage from another JitsiConference\n        // instance and that's why we should always re-read it.\n        const localStorage = getLocalStorage();\n\n        return localStorage ? localStorage.getItem('sessionId') : undefined;\n    },\n\n    /**\n     * Save current session id.\n     * @param {string} sessionId session id\n     */\n    set sessionId(sessionId) {\n        const localStorage = getLocalStorage();\n\n        if (localStorage) {\n            if (sessionId) {\n                localStorage.setItem('sessionId', sessionId);\n            } else {\n                localStorage.removeItem('sessionId');\n            }\n        }\n    }\n};\n\n/**\n * Generate fake username for callstats.\n * @returns {string} fake random username\n */\nfunction generateCallStatsUserName() {\n    const username = UsernameGenerator.generateUsername();\n\n    logger.log('generated callstats uid', username);\n\n    return username;\n}\n\n/**\n * Generate unique id.\n * @returns {string} random unique id\n */\nfunction generateJitsiMeetId() {\n    const jitsiMeetId = generateUniqueId();\n\n    logger.log('generated id', jitsiMeetId);\n\n    return jitsiMeetId;\n}\n\n/**\n * Gets the localStorage of the browser. (Technically, gets the localStorage of\n * the global object because there may be no browser but React Native for\n * example).\n * @returns {Storage} the local Storage object (if any)\n */\nfunction getLocalStorage() {\n    let storage;\n\n    try {\n        // eslint-disable-next-line no-invalid-this\n        storage = (window || this).localStorage;\n    } catch (error) {\n        logger.error(error);\n    }\n\n    return storage;\n}\n\n/**\n *\n */\nfunction generateUniqueId() {\n    return _p8() + _p8() + _p8() + _p8();\n}\n\n/**\n *\n */\nfunction _p8() {\n    return `${Math.random().toString(16)}000000000`.substr(2, 8);\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/settings/Settings.js","/**\n * @const\n */\nconst ALPHANUM\n    = '0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ';\n\n/**\n * Hexadecimal digits.\n * @const\n */\nconst HEX_DIGITS = '0123456789abcdef';\n\n/**\n * Generates random int within the range [min, max]\n * @param min the minimum value for the generated number\n * @param max the maximum value for the generated number\n * @returns random int number\n */\nfunction randomInt(min, max) {\n    return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\n/**\n * Get random element from array or string.\n * @param {Array|string} arr source\n * @returns array element or string character\n */\nfunction randomElement(arr) {\n    return arr[randomInt(0, arr.length - 1)];\n}\n\n/**\n * Generate random alphanumeric string.\n * @param {number} length expected string length\n * @returns {string} random string of specified length\n */\nfunction randomAlphanumStr(length) {\n    let result = '';\n\n    for (let i = 0; i < length; i += 1) {\n        result += randomElement(ALPHANUM);\n    }\n\n    return result;\n}\n\n/**\n * Exported interface.\n */\nconst RandomUtil = {\n    /**\n     * Returns a random hex digit.\n     * @returns {*}\n     */\n    randomHexDigit() {\n        return randomElement(HEX_DIGITS);\n    },\n\n    /**\n     * Returns a random string of hex digits with length 'len'.\n     * @param len the length.\n     */\n    randomHexString(len) {\n        let ret = '';\n\n        while (len--) { // eslint-disable-line no-param-reassign\n            ret += this.randomHexDigit();\n        }\n\n        return ret;\n    },\n    randomElement,\n    randomAlphanumStr,\n    randomInt\n};\n\nmodule.exports = RandomUtil;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/util/RandomUtil.js","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() {\r\n\treturn this;\r\n})();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 21\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function getCurrent(){return window&&window.performance&&window.performance.now&&window.performance.timing&&window.performance.timing.navigationStart?window.performance.now()+window.performance.timing.navigationStart:Date.now()}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.getCurrent=getCurrent;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/utility/timestamps.js\n// module id = 22\n// module chunks = 0","import Listenable from '../util/Listenable';\n\n/**\n * Creates ConnectionPlugin class that extends the passed class.\n * @param {Class} base the definition of the class that will be extended by\n * ConnectionPlugin\n */\nfunction getConnectionPluginDefinition(base = class {}) {\n    /**\n     * Base class for strophe connection plugins.\n     */\n    return class extends base {\n        /**\n         *\n         */\n        constructor(...args) {\n            super(...args);\n            this.connection = null;\n        }\n\n        /**\n         *\n         * @param connection\n         */\n        init(connection) {\n            this.connection = connection;\n        }\n    };\n}\n\n/**\n * ConnectionPlugin class.\n */\nexport default getConnectionPluginDefinition();\n\n/**\n * ConnectionPlugin class that extends Listenable.\n */\nexport const ConnectionPluginListenable\n    = getConnectionPluginDefinition(Listenable);\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/ConnectionPlugin.js","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function detect(){var s=Constants.browserName.chrome,e=null,o=null,n=null,i=Constants.codeBaseType.chrome;if(window&&(!window.navigator||!window.navigator.userAgent||window.csioReactNative))return window&&window.csioGetOsName&&(e=window.csioGetOsName()),window&&window.csioGetOsVer&&(o=window.csioGetOsVer()),window&&window.csioReactNative&&(n=\"react-native\"),{browserName:s,codeBase:i,os:e,osVersion:o,userAgent:n};var r=(n=navigator.userAgent).toLowerCase(),t=navigator.appVersion,a=\"\"+parseFloat(navigator.appVersion),d=void 0;-1!==(d=r.indexOf(\"opera\"))?(s=Constants.browserName.opera,a=r.substring(d+6),-1!==(d=r.indexOf(\"Version\"))&&(a=r.substring(d+8)),i=Constants.codeBaseType.chrome):-1!==(d=r.indexOf(\"opr\"))?(s=Constants.browserName.opera,a=r.substring(d+4),-1!==(d=r.indexOf(\"Version\"))&&(a=r.substring(d+8)),i=Constants.codeBaseType.chrome):-1!==(d=r.indexOf(\"msie\"))?(s=Constants.browserName.msie,a=r.substring(d+5),i=Constants.codeBaseType.chrome):-1!==(d=r.indexOf(\"edge\"))?(s=Constants.browserName.edge,a=r.substring(d+5),i=Constants.codeBaseType.edge):-1!==(d=r.indexOf(\"chrome\"))?(s=Constants.browserName.chrome,a=r.substring(d+7),i=Constants.codeBaseType.chrome):-1!==(d=r.indexOf(\"safari\"))?(s=Constants.browserName.safari,a=r.substring(d+7),-1!==(d=r.indexOf(\"Version\"))&&(a=r.substring(d+8)),i=Constants.codeBaseType.chrome):-1!==(d=r.indexOf(\"firefox\"))?(s=Constants.browserName.firefox,a=r.substring(d+8),i=Constants.codeBaseType.firefox):-1!==(d=r.indexOf(\"trident\"))&&(s=Constants.browserName.msie,d=r.indexOf(\"rv\"),a=r.substring(d+3,d+7),i=Constants.codeBaseType.chrome);var w=[{s:\"Windows 3.11\",r:/win16/},{s:\"Windows 95\",r:/(windows 95|win95|windows_95)/},{s:\"Windows ME\",r:/(win 9x 4.90|windows me)/},{s:\"Windows 98\",r:/(windows 98|win98)/},{s:\"Windows CE\",r:/windows ce/},{s:\"Windows 2000\",r:/(windows nt 5.0|windows 2000)/},{s:\"Windows XP\",r:/(windows nt 5.1|windows xp)/},{s:\"Windows Server 2003\",r:/windows nt 5.2/},{s:\"Windows Vista\",r:/windows nt 6.0/},{s:\"Windows 7\",r:/(windows 7|windows nt 6.1)/},{s:\"Windows 8.1\",r:/(windows 8.1|windows nt 6.3)/},{s:\"Windows 8\",r:/(windows 8|windows nt 6.2)/},{s:\"Windows 10\",r:/(windows 10|windows nt 10.0)/},{s:\"Windows NT 4.0\",r:/(windows nt 4.0|winnt4.0|winnt|windows nt)/},{s:\"Windows ME\",r:/windows me/},{s:\"Android\",r:/android/},{s:\"Open BSD\",r:/openbsd/},{s:\"Sun OS\",r:/sunos/},{s:\"Linux\",r:/(linux|x11)/},{s:\"iOS\",r:/(iphone|ipad|ipod)/},{s:\"Mac OS X\",r:/mac os x/},{s:\"Mac OS\",r:/(macppc|macintel|mac_powerpc|macintosh)/},{s:\"QNX\",r:/qnx/},{s:\"UNIX\",r:/unix/},{s:\"BeOS\",r:/beos/},{s:\"OS/2\",r:/os\\/2/},{s:\"Search Bot\",r:/(nuhk|googlebot|yammybot|openbot|slurp|msnbot|ask jeeves\\/teoma|ia_archiver)/}],c=void 0,m=void 0;for(c in w)if(w.hasOwnProperty(c)&&(m=w[c]).r.test(r)){e=m.s;break}switch(e&&/Windows/.test(e)&&(o=/Windows (.*)/.exec(e)[1],e=Constants.osName.windows),e){case Constants.osName.mac:o=/mac os x (10[\\.\\_\\d]+)/.exec(r)[1];break;case Constants.osName.android:o=/android ([\\.\\_\\d]+)/.exec(r)[1];break;case Constants.osName.ios:o=(o=/os (\\d+)_(\\d+)_?(\\d+)?/.exec(t))[1]+\".\"+o[2]+\".\"+(0|o[3])}return{browserName:s,browserVersion:a.toString(),os:e,osVersion:o,codeBase:i,userAgent:n}}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.detect=detect;var Constants=exports.Constants={codeBaseType:{chrome:\"Chrome\",firefox:\"Firefox\",edge:\"Edge\",plugin:\"Plugin\"},browserName:{chrome:\"Chrome\",firefox:\"Firefox\",edge:\"Edge\",msie:\"Microsoft Internet Explorer\",safari:\"Safari\"},osName:{windows:\"Windows\",mac:\"Mac OS X\",android:\"Android\",ios:\"iOS\"}};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/utility/stats/detectbrowser.js\n// module id = 24\n// module chunks = 0","/* @preserve\n * The MIT License (MIT)\n * \n * Copyright (c) 2013-2017 Petka Antonov\n * \n * Permission is hereby granted, free of charge, to any person obtaining a copy\n * of this software and associated documentation files (the \"Software\"), to deal\n * in the Software without restriction, including without limitation the rights\n * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell\n * copies of the Software, and to permit persons to whom the Software is\n * furnished to do so, subject to the following conditions:\n * \n * The above copyright notice and this permission notice shall be included in\n * all copies or substantial portions of the Software.\n * \n * THE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\n * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\n * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\n * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\n * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\n * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\n * THE SOFTWARE.\n * \n */\n/**\n * bluebird build version 3.5.1\n * Features enabled: core, race, call_get, generators, map, nodeify, promisify, props, reduce, settle, some, using, timers, filter, any, each\n*/\n!function(e){if(\"object\"==typeof exports&&\"undefined\"!=typeof module)module.exports=e();else if(\"function\"==typeof define&&define.amd)define([],e);else{var f;\"undefined\"!=typeof window?f=window:\"undefined\"!=typeof global?f=global:\"undefined\"!=typeof self&&(f=self),f.Promise=e()}}(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof _dereq_==\"function\"&&_dereq_;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof _dereq_==\"function\"&&_dereq_;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar SomePromiseArray = Promise._SomePromiseArray;\nfunction any(promises) {\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(1);\n    ret.setUnwrap();\n    ret.init();\n    return promise;\n}\n\nPromise.any = function (promises) {\n    return any(promises);\n};\n\nPromise.prototype.any = function () {\n    return any(this);\n};\n\n};\n\n},{}],2:[function(_dereq_,module,exports){\n\"use strict\";\nvar firstLineError;\ntry {throw new Error(); } catch (e) {firstLineError = e;}\nvar schedule = _dereq_(\"./schedule\");\nvar Queue = _dereq_(\"./queue\");\nvar util = _dereq_(\"./util\");\n\nfunction Async() {\n    this._customScheduler = false;\n    this._isTickUsed = false;\n    this._lateQueue = new Queue(16);\n    this._normalQueue = new Queue(16);\n    this._haveDrainedQueues = false;\n    this._trampolineEnabled = true;\n    var self = this;\n    this.drainQueues = function () {\n        self._drainQueues();\n    };\n    this._schedule = schedule;\n}\n\nAsync.prototype.setScheduler = function(fn) {\n    var prev = this._schedule;\n    this._schedule = fn;\n    this._customScheduler = true;\n    return prev;\n};\n\nAsync.prototype.hasCustomScheduler = function() {\n    return this._customScheduler;\n};\n\nAsync.prototype.enableTrampoline = function() {\n    this._trampolineEnabled = true;\n};\n\nAsync.prototype.disableTrampolineIfNecessary = function() {\n    if (util.hasDevTools) {\n        this._trampolineEnabled = false;\n    }\n};\n\nAsync.prototype.haveItemsQueued = function () {\n    return this._isTickUsed || this._haveDrainedQueues;\n};\n\n\nAsync.prototype.fatalError = function(e, isNode) {\n    if (isNode) {\n        process.stderr.write(\"Fatal \" + (e instanceof Error ? e.stack : e) +\n            \"\\n\");\n        process.exit(2);\n    } else {\n        this.throwLater(e);\n    }\n};\n\nAsync.prototype.throwLater = function(fn, arg) {\n    if (arguments.length === 1) {\n        arg = fn;\n        fn = function () { throw arg; };\n    }\n    if (typeof setTimeout !== \"undefined\") {\n        setTimeout(function() {\n            fn(arg);\n        }, 0);\n    } else try {\n        this._schedule(function() {\n            fn(arg);\n        });\n    } catch (e) {\n        throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n};\n\nfunction AsyncInvokeLater(fn, receiver, arg) {\n    this._lateQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncInvoke(fn, receiver, arg) {\n    this._normalQueue.push(fn, receiver, arg);\n    this._queueTick();\n}\n\nfunction AsyncSettlePromises(promise) {\n    this._normalQueue._pushOne(promise);\n    this._queueTick();\n}\n\nif (!util.hasDevTools) {\n    Async.prototype.invokeLater = AsyncInvokeLater;\n    Async.prototype.invoke = AsyncInvoke;\n    Async.prototype.settlePromises = AsyncSettlePromises;\n} else {\n    Async.prototype.invokeLater = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvokeLater.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                setTimeout(function() {\n                    fn.call(receiver, arg);\n                }, 100);\n            });\n        }\n    };\n\n    Async.prototype.invoke = function (fn, receiver, arg) {\n        if (this._trampolineEnabled) {\n            AsyncInvoke.call(this, fn, receiver, arg);\n        } else {\n            this._schedule(function() {\n                fn.call(receiver, arg);\n            });\n        }\n    };\n\n    Async.prototype.settlePromises = function(promise) {\n        if (this._trampolineEnabled) {\n            AsyncSettlePromises.call(this, promise);\n        } else {\n            this._schedule(function() {\n                promise._settlePromises();\n            });\n        }\n    };\n}\n\nAsync.prototype._drainQueue = function(queue) {\n    while (queue.length() > 0) {\n        var fn = queue.shift();\n        if (typeof fn !== \"function\") {\n            fn._settlePromises();\n            continue;\n        }\n        var receiver = queue.shift();\n        var arg = queue.shift();\n        fn.call(receiver, arg);\n    }\n};\n\nAsync.prototype._drainQueues = function () {\n    this._drainQueue(this._normalQueue);\n    this._reset();\n    this._haveDrainedQueues = true;\n    this._drainQueue(this._lateQueue);\n};\n\nAsync.prototype._queueTick = function () {\n    if (!this._isTickUsed) {\n        this._isTickUsed = true;\n        this._schedule(this.drainQueues);\n    }\n};\n\nAsync.prototype._reset = function () {\n    this._isTickUsed = false;\n};\n\nmodule.exports = Async;\nmodule.exports.firstLineError = firstLineError;\n\n},{\"./queue\":26,\"./schedule\":29,\"./util\":36}],3:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise, debug) {\nvar calledBind = false;\nvar rejectThis = function(_, e) {\n    this._reject(e);\n};\n\nvar targetRejected = function(e, context) {\n    context.promiseRejectionQueued = true;\n    context.bindingPromise._then(rejectThis, rejectThis, null, this, e);\n};\n\nvar bindingResolved = function(thisArg, context) {\n    if (((this._bitField & 50397184) === 0)) {\n        this._resolveCallback(context.target);\n    }\n};\n\nvar bindingRejected = function(e, context) {\n    if (!context.promiseRejectionQueued) this._reject(e);\n};\n\nPromise.prototype.bind = function (thisArg) {\n    if (!calledBind) {\n        calledBind = true;\n        Promise.prototype._propagateFrom = debug.propagateFromFunction();\n        Promise.prototype._boundValue = debug.boundValueFunction();\n    }\n    var maybePromise = tryConvertToPromise(thisArg);\n    var ret = new Promise(INTERNAL);\n    ret._propagateFrom(this, 1);\n    var target = this._target();\n    ret._setBoundTo(maybePromise);\n    if (maybePromise instanceof Promise) {\n        var context = {\n            promiseRejectionQueued: false,\n            promise: ret,\n            target: target,\n            bindingPromise: maybePromise\n        };\n        target._then(INTERNAL, targetRejected, undefined, ret, context);\n        maybePromise._then(\n            bindingResolved, bindingRejected, undefined, ret, context);\n        ret._setOnCancel(maybePromise);\n    } else {\n        ret._resolveCallback(target);\n    }\n    return ret;\n};\n\nPromise.prototype._setBoundTo = function (obj) {\n    if (obj !== undefined) {\n        this._bitField = this._bitField | 2097152;\n        this._boundTo = obj;\n    } else {\n        this._bitField = this._bitField & (~2097152);\n    }\n};\n\nPromise.prototype._isBound = function () {\n    return (this._bitField & 2097152) === 2097152;\n};\n\nPromise.bind = function (thisArg, value) {\n    return Promise.resolve(value).bind(thisArg);\n};\n};\n\n},{}],4:[function(_dereq_,module,exports){\n\"use strict\";\nvar old;\nif (typeof Promise !== \"undefined\") old = Promise;\nfunction noConflict() {\n    try { if (Promise === bluebird) Promise = old; }\n    catch (e) {}\n    return bluebird;\n}\nvar bluebird = _dereq_(\"./promise\")();\nbluebird.noConflict = noConflict;\nmodule.exports = bluebird;\n\n},{\"./promise\":22}],5:[function(_dereq_,module,exports){\n\"use strict\";\nvar cr = Object.create;\nif (cr) {\n    var callerCache = cr(null);\n    var getterCache = cr(null);\n    callerCache[\" size\"] = getterCache[\" size\"] = 0;\n}\n\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar isIdentifier = util.isIdentifier;\n\nvar getMethodCaller;\nvar getGetter;\nif (!true) {\nvar makeMethodCaller = function (methodName) {\n    return new Function(\"ensureMethod\", \"                                    \\n\\\n        return function(obj) {                                               \\n\\\n            'use strict'                                                     \\n\\\n            var len = this.length;                                           \\n\\\n            ensureMethod(obj, 'methodName');                                 \\n\\\n            switch(len) {                                                    \\n\\\n                case 1: return obj.methodName(this[0]);                      \\n\\\n                case 2: return obj.methodName(this[0], this[1]);             \\n\\\n                case 3: return obj.methodName(this[0], this[1], this[2]);    \\n\\\n                case 0: return obj.methodName();                             \\n\\\n                default:                                                     \\n\\\n                    return obj.methodName.apply(obj, this);                  \\n\\\n            }                                                                \\n\\\n        };                                                                   \\n\\\n        \".replace(/methodName/g, methodName))(ensureMethod);\n};\n\nvar makeGetter = function (propertyName) {\n    return new Function(\"obj\", \"                                             \\n\\\n        'use strict';                                                        \\n\\\n        return obj.propertyName;                                             \\n\\\n        \".replace(\"propertyName\", propertyName));\n};\n\nvar getCompiled = function(name, compiler, cache) {\n    var ret = cache[name];\n    if (typeof ret !== \"function\") {\n        if (!isIdentifier(name)) {\n            return null;\n        }\n        ret = compiler(name);\n        cache[name] = ret;\n        cache[\" size\"]++;\n        if (cache[\" size\"] > 512) {\n            var keys = Object.keys(cache);\n            for (var i = 0; i < 256; ++i) delete cache[keys[i]];\n            cache[\" size\"] = keys.length - 256;\n        }\n    }\n    return ret;\n};\n\ngetMethodCaller = function(name) {\n    return getCompiled(name, makeMethodCaller, callerCache);\n};\n\ngetGetter = function(name) {\n    return getCompiled(name, makeGetter, getterCache);\n};\n}\n\nfunction ensureMethod(obj, methodName) {\n    var fn;\n    if (obj != null) fn = obj[methodName];\n    if (typeof fn !== \"function\") {\n        var message = \"Object \" + util.classString(obj) + \" has no method '\" +\n            util.toString(methodName) + \"'\";\n        throw new Promise.TypeError(message);\n    }\n    return fn;\n}\n\nfunction caller(obj) {\n    var methodName = this.pop();\n    var fn = ensureMethod(obj, methodName);\n    return fn.apply(obj, this);\n}\nPromise.prototype.call = function (methodName) {\n    var args = [].slice.call(arguments, 1);;\n    if (!true) {\n        if (canEvaluate) {\n            var maybeCaller = getMethodCaller(methodName);\n            if (maybeCaller !== null) {\n                return this._then(\n                    maybeCaller, undefined, undefined, args, undefined);\n            }\n        }\n    }\n    args.push(methodName);\n    return this._then(caller, undefined, undefined, args, undefined);\n};\n\nfunction namedGetter(obj) {\n    return obj[this];\n}\nfunction indexedGetter(obj) {\n    var index = +this;\n    if (index < 0) index = Math.max(0, index + obj.length);\n    return obj[index];\n}\nPromise.prototype.get = function (propertyName) {\n    var isIndex = (typeof propertyName === \"number\");\n    var getter;\n    if (!isIndex) {\n        if (canEvaluate) {\n            var maybeGetter = getGetter(propertyName);\n            getter = maybeGetter !== null ? maybeGetter : namedGetter;\n        } else {\n            getter = namedGetter;\n        }\n    } else {\n        getter = indexedGetter;\n    }\n    return this._then(getter, undefined, undefined, propertyName, undefined);\n};\n};\n\n},{\"./util\":36}],6:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, PromiseArray, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nPromise.prototype[\"break\"] = Promise.prototype.cancel = function() {\n    if (!debug.cancellation()) return this._warn(\"cancellation is disabled\");\n\n    var promise = this;\n    var child = promise;\n    while (promise._isCancellable()) {\n        if (!promise._cancelBy(child)) {\n            if (child._isFollowing()) {\n                child._followee().cancel();\n            } else {\n                child._cancelBranched();\n            }\n            break;\n        }\n\n        var parent = promise._cancellationParent;\n        if (parent == null || !parent._isCancellable()) {\n            if (promise._isFollowing()) {\n                promise._followee().cancel();\n            } else {\n                promise._cancelBranched();\n            }\n            break;\n        } else {\n            if (promise._isFollowing()) promise._followee().cancel();\n            promise._setWillBeCancelled();\n            child = promise;\n            promise = parent;\n        }\n    }\n};\n\nPromise.prototype._branchHasCancelled = function() {\n    this._branchesRemainingToCancel--;\n};\n\nPromise.prototype._enoughBranchesHaveCancelled = function() {\n    return this._branchesRemainingToCancel === undefined ||\n           this._branchesRemainingToCancel <= 0;\n};\n\nPromise.prototype._cancelBy = function(canceller) {\n    if (canceller === this) {\n        this._branchesRemainingToCancel = 0;\n        this._invokeOnCancel();\n        return true;\n    } else {\n        this._branchHasCancelled();\n        if (this._enoughBranchesHaveCancelled()) {\n            this._invokeOnCancel();\n            return true;\n        }\n    }\n    return false;\n};\n\nPromise.prototype._cancelBranched = function() {\n    if (this._enoughBranchesHaveCancelled()) {\n        this._cancel();\n    }\n};\n\nPromise.prototype._cancel = function() {\n    if (!this._isCancellable()) return;\n    this._setCancelled();\n    async.invoke(this._cancelPromises, this, undefined);\n};\n\nPromise.prototype._cancelPromises = function() {\n    if (this._length() > 0) this._settlePromises();\n};\n\nPromise.prototype._unsetOnCancel = function() {\n    this._onCancelField = undefined;\n};\n\nPromise.prototype._isCancellable = function() {\n    return this.isPending() && !this._isCancelled();\n};\n\nPromise.prototype.isCancellable = function() {\n    return this.isPending() && !this.isCancelled();\n};\n\nPromise.prototype._doInvokeOnCancel = function(onCancelCallback, internalOnly) {\n    if (util.isArray(onCancelCallback)) {\n        for (var i = 0; i < onCancelCallback.length; ++i) {\n            this._doInvokeOnCancel(onCancelCallback[i], internalOnly);\n        }\n    } else if (onCancelCallback !== undefined) {\n        if (typeof onCancelCallback === \"function\") {\n            if (!internalOnly) {\n                var e = tryCatch(onCancelCallback).call(this._boundValue());\n                if (e === errorObj) {\n                    this._attachExtraTrace(e.e);\n                    async.throwLater(e.e);\n                }\n            }\n        } else {\n            onCancelCallback._resultCancelled(this);\n        }\n    }\n};\n\nPromise.prototype._invokeOnCancel = function() {\n    var onCancelCallback = this._onCancel();\n    this._unsetOnCancel();\n    async.invoke(this._doInvokeOnCancel, this, onCancelCallback);\n};\n\nPromise.prototype._invokeInternalOnCancel = function() {\n    if (this._isCancellable()) {\n        this._doInvokeOnCancel(this._onCancel(), true);\n        this._unsetOnCancel();\n    }\n};\n\nPromise.prototype._resultCancelled = function() {\n    this.cancel();\n};\n\n};\n\n},{\"./util\":36}],7:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar getKeys = _dereq_(\"./es5\").keys;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction catchFilter(instances, cb, promise) {\n    return function(e) {\n        var boundTo = promise._boundValue();\n        predicateLoop: for (var i = 0; i < instances.length; ++i) {\n            var item = instances[i];\n\n            if (item === Error ||\n                (item != null && item.prototype instanceof Error)) {\n                if (e instanceof item) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (typeof item === \"function\") {\n                var matchesPredicate = tryCatch(item).call(boundTo, e);\n                if (matchesPredicate === errorObj) {\n                    return matchesPredicate;\n                } else if (matchesPredicate) {\n                    return tryCatch(cb).call(boundTo, e);\n                }\n            } else if (util.isObject(e)) {\n                var keys = getKeys(item);\n                for (var j = 0; j < keys.length; ++j) {\n                    var key = keys[j];\n                    if (item[key] != e[key]) {\n                        continue predicateLoop;\n                    }\n                }\n                return tryCatch(cb).call(boundTo, e);\n            }\n        }\n        return NEXT_FILTER;\n    };\n}\n\nreturn catchFilter;\n};\n\n},{\"./es5\":13,\"./util\":36}],8:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar longStackTraces = false;\nvar contextStack = [];\n\nPromise.prototype._promiseCreated = function() {};\nPromise.prototype._pushContext = function() {};\nPromise.prototype._popContext = function() {return null;};\nPromise._peekContext = Promise.prototype._peekContext = function() {};\n\nfunction Context() {\n    this._trace = new Context.CapturedTrace(peekContext());\n}\nContext.prototype._pushContext = function () {\n    if (this._trace !== undefined) {\n        this._trace._promiseCreated = null;\n        contextStack.push(this._trace);\n    }\n};\n\nContext.prototype._popContext = function () {\n    if (this._trace !== undefined) {\n        var trace = contextStack.pop();\n        var ret = trace._promiseCreated;\n        trace._promiseCreated = null;\n        return ret;\n    }\n    return null;\n};\n\nfunction createContext() {\n    if (longStackTraces) return new Context();\n}\n\nfunction peekContext() {\n    var lastIndex = contextStack.length - 1;\n    if (lastIndex >= 0) {\n        return contextStack[lastIndex];\n    }\n    return undefined;\n}\nContext.CapturedTrace = null;\nContext.create = createContext;\nContext.deactivateLongStackTraces = function() {};\nContext.activateLongStackTraces = function() {\n    var Promise_pushContext = Promise.prototype._pushContext;\n    var Promise_popContext = Promise.prototype._popContext;\n    var Promise_PeekContext = Promise._peekContext;\n    var Promise_peekContext = Promise.prototype._peekContext;\n    var Promise_promiseCreated = Promise.prototype._promiseCreated;\n    Context.deactivateLongStackTraces = function() {\n        Promise.prototype._pushContext = Promise_pushContext;\n        Promise.prototype._popContext = Promise_popContext;\n        Promise._peekContext = Promise_PeekContext;\n        Promise.prototype._peekContext = Promise_peekContext;\n        Promise.prototype._promiseCreated = Promise_promiseCreated;\n        longStackTraces = false;\n    };\n    longStackTraces = true;\n    Promise.prototype._pushContext = Context.prototype._pushContext;\n    Promise.prototype._popContext = Context.prototype._popContext;\n    Promise._peekContext = Promise.prototype._peekContext = peekContext;\n    Promise.prototype._promiseCreated = function() {\n        var ctx = this._peekContext();\n        if (ctx && ctx._promiseCreated == null) ctx._promiseCreated = this;\n    };\n};\nreturn Context;\n};\n\n},{}],9:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, Context) {\nvar getDomain = Promise._getDomain;\nvar async = Promise._async;\nvar Warning = _dereq_(\"./errors\").Warning;\nvar util = _dereq_(\"./util\");\nvar canAttachTrace = util.canAttachTrace;\nvar unhandledRejectionHandled;\nvar possiblyUnhandledRejection;\nvar bluebirdFramePattern =\n    /[\\\\\\/]bluebird[\\\\\\/]js[\\\\\\/](release|debug|instrumented)/;\nvar nodeFramePattern = /\\((?:timers\\.js):\\d+:\\d+\\)/;\nvar parseLinePattern = /[\\/<\\(](.+?):(\\d+):(\\d+)\\)?\\s*$/;\nvar stackFramePattern = null;\nvar formatStack = null;\nvar indentStackFrames = false;\nvar printWarning;\nvar debugging = !!(util.env(\"BLUEBIRD_DEBUG\") != 0 &&\n                        (true ||\n                         util.env(\"BLUEBIRD_DEBUG\") ||\n                         util.env(\"NODE_ENV\") === \"development\"));\n\nvar warnings = !!(util.env(\"BLUEBIRD_WARNINGS\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_WARNINGS\")));\n\nvar longStackTraces = !!(util.env(\"BLUEBIRD_LONG_STACK_TRACES\") != 0 &&\n    (debugging || util.env(\"BLUEBIRD_LONG_STACK_TRACES\")));\n\nvar wForgottenReturn = util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\") != 0 &&\n    (warnings || !!util.env(\"BLUEBIRD_W_FORGOTTEN_RETURN\"));\n\nPromise.prototype.suppressUnhandledRejections = function() {\n    var target = this._target();\n    target._bitField = ((target._bitField & (~1048576)) |\n                      524288);\n};\n\nPromise.prototype._ensurePossibleRejectionHandled = function () {\n    if ((this._bitField & 524288) !== 0) return;\n    this._setRejectionIsUnhandled();\n    var self = this;\n    setTimeout(function() {\n        self._notifyUnhandledRejection();\n    }, 1);\n};\n\nPromise.prototype._notifyUnhandledRejectionIsHandled = function () {\n    fireRejectionEvent(\"rejectionHandled\",\n                                  unhandledRejectionHandled, undefined, this);\n};\n\nPromise.prototype._setReturnedNonUndefined = function() {\n    this._bitField = this._bitField | 268435456;\n};\n\nPromise.prototype._returnedNonUndefined = function() {\n    return (this._bitField & 268435456) !== 0;\n};\n\nPromise.prototype._notifyUnhandledRejection = function () {\n    if (this._isRejectionUnhandled()) {\n        var reason = this._settledValue();\n        this._setUnhandledRejectionIsNotified();\n        fireRejectionEvent(\"unhandledRejection\",\n                                      possiblyUnhandledRejection, reason, this);\n    }\n};\n\nPromise.prototype._setUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField | 262144;\n};\n\nPromise.prototype._unsetUnhandledRejectionIsNotified = function () {\n    this._bitField = this._bitField & (~262144);\n};\n\nPromise.prototype._isUnhandledRejectionNotified = function () {\n    return (this._bitField & 262144) > 0;\n};\n\nPromise.prototype._setRejectionIsUnhandled = function () {\n    this._bitField = this._bitField | 1048576;\n};\n\nPromise.prototype._unsetRejectionIsUnhandled = function () {\n    this._bitField = this._bitField & (~1048576);\n    if (this._isUnhandledRejectionNotified()) {\n        this._unsetUnhandledRejectionIsNotified();\n        this._notifyUnhandledRejectionIsHandled();\n    }\n};\n\nPromise.prototype._isRejectionUnhandled = function () {\n    return (this._bitField & 1048576) > 0;\n};\n\nPromise.prototype._warn = function(message, shouldUseOwnTrace, promise) {\n    return warn(message, shouldUseOwnTrace, promise || this);\n};\n\nPromise.onPossiblyUnhandledRejection = function (fn) {\n    var domain = getDomain();\n    possiblyUnhandledRejection =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nPromise.onUnhandledRejectionHandled = function (fn) {\n    var domain = getDomain();\n    unhandledRejectionHandled =\n        typeof fn === \"function\" ? (domain === null ?\n                                            fn : util.domainBind(domain, fn))\n                                 : undefined;\n};\n\nvar disableLongStackTraces = function() {};\nPromise.longStackTraces = function () {\n    if (async.haveItemsQueued() && !config.longStackTraces) {\n        throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (!config.longStackTraces && longStackTracesIsSupported()) {\n        var Promise_captureStackTrace = Promise.prototype._captureStackTrace;\n        var Promise_attachExtraTrace = Promise.prototype._attachExtraTrace;\n        config.longStackTraces = true;\n        disableLongStackTraces = function() {\n            if (async.haveItemsQueued() && !config.longStackTraces) {\n                throw new Error(\"cannot enable long stack traces after promises have been created\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n            }\n            Promise.prototype._captureStackTrace = Promise_captureStackTrace;\n            Promise.prototype._attachExtraTrace = Promise_attachExtraTrace;\n            Context.deactivateLongStackTraces();\n            async.enableTrampoline();\n            config.longStackTraces = false;\n        };\n        Promise.prototype._captureStackTrace = longStackTracesCaptureStackTrace;\n        Promise.prototype._attachExtraTrace = longStackTracesAttachExtraTrace;\n        Context.activateLongStackTraces();\n        async.disableTrampolineIfNecessary();\n    }\n};\n\nPromise.hasLongStackTraces = function () {\n    return config.longStackTraces && longStackTracesIsSupported();\n};\n\nvar fireDomEvent = (function() {\n    try {\n        if (typeof CustomEvent === \"function\") {\n            var event = new CustomEvent(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new CustomEvent(name.toLowerCase(), {\n                    detail: event,\n                    cancelable: true\n                });\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else if (typeof Event === \"function\") {\n            var event = new Event(\"CustomEvent\");\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = new Event(name.toLowerCase(), {\n                    cancelable: true\n                });\n                domEvent.detail = event;\n                return !util.global.dispatchEvent(domEvent);\n            };\n        } else {\n            var event = document.createEvent(\"CustomEvent\");\n            event.initCustomEvent(\"testingtheevent\", false, true, {});\n            util.global.dispatchEvent(event);\n            return function(name, event) {\n                var domEvent = document.createEvent(\"CustomEvent\");\n                domEvent.initCustomEvent(name.toLowerCase(), false, true,\n                    event);\n                return !util.global.dispatchEvent(domEvent);\n            };\n        }\n    } catch (e) {}\n    return function() {\n        return false;\n    };\n})();\n\nvar fireGlobalEvent = (function() {\n    if (util.isNode) {\n        return function() {\n            return process.emit.apply(process, arguments);\n        };\n    } else {\n        if (!util.global) {\n            return function() {\n                return false;\n            };\n        }\n        return function(name) {\n            var methodName = \"on\" + name.toLowerCase();\n            var method = util.global[methodName];\n            if (!method) return false;\n            method.apply(util.global, [].slice.call(arguments, 1));\n            return true;\n        };\n    }\n})();\n\nfunction generatePromiseLifecycleEventObject(name, promise) {\n    return {promise: promise};\n}\n\nvar eventToObjectGenerator = {\n    promiseCreated: generatePromiseLifecycleEventObject,\n    promiseFulfilled: generatePromiseLifecycleEventObject,\n    promiseRejected: generatePromiseLifecycleEventObject,\n    promiseResolved: generatePromiseLifecycleEventObject,\n    promiseCancelled: generatePromiseLifecycleEventObject,\n    promiseChained: function(name, promise, child) {\n        return {promise: promise, child: child};\n    },\n    warning: function(name, warning) {\n        return {warning: warning};\n    },\n    unhandledRejection: function (name, reason, promise) {\n        return {reason: reason, promise: promise};\n    },\n    rejectionHandled: generatePromiseLifecycleEventObject\n};\n\nvar activeFireEvent = function (name) {\n    var globalEventFired = false;\n    try {\n        globalEventFired = fireGlobalEvent.apply(null, arguments);\n    } catch (e) {\n        async.throwLater(e);\n        globalEventFired = true;\n    }\n\n    var domEventFired = false;\n    try {\n        domEventFired = fireDomEvent(name,\n                    eventToObjectGenerator[name].apply(null, arguments));\n    } catch (e) {\n        async.throwLater(e);\n        domEventFired = true;\n    }\n\n    return domEventFired || globalEventFired;\n};\n\nPromise.config = function(opts) {\n    opts = Object(opts);\n    if (\"longStackTraces\" in opts) {\n        if (opts.longStackTraces) {\n            Promise.longStackTraces();\n        } else if (!opts.longStackTraces && Promise.hasLongStackTraces()) {\n            disableLongStackTraces();\n        }\n    }\n    if (\"warnings\" in opts) {\n        var warningsOption = opts.warnings;\n        config.warnings = !!warningsOption;\n        wForgottenReturn = config.warnings;\n\n        if (util.isObject(warningsOption)) {\n            if (\"wForgottenReturn\" in warningsOption) {\n                wForgottenReturn = !!warningsOption.wForgottenReturn;\n            }\n        }\n    }\n    if (\"cancellation\" in opts && opts.cancellation && !config.cancellation) {\n        if (async.haveItemsQueued()) {\n            throw new Error(\n                \"cannot enable cancellation after promises are in use\");\n        }\n        Promise.prototype._clearCancellationData =\n            cancellationClearCancellationData;\n        Promise.prototype._propagateFrom = cancellationPropagateFrom;\n        Promise.prototype._onCancel = cancellationOnCancel;\n        Promise.prototype._setOnCancel = cancellationSetOnCancel;\n        Promise.prototype._attachCancellationCallback =\n            cancellationAttachCancellationCallback;\n        Promise.prototype._execute = cancellationExecute;\n        propagateFromFunction = cancellationPropagateFrom;\n        config.cancellation = true;\n    }\n    if (\"monitoring\" in opts) {\n        if (opts.monitoring && !config.monitoring) {\n            config.monitoring = true;\n            Promise.prototype._fireEvent = activeFireEvent;\n        } else if (!opts.monitoring && config.monitoring) {\n            config.monitoring = false;\n            Promise.prototype._fireEvent = defaultFireEvent;\n        }\n    }\n    return Promise;\n};\n\nfunction defaultFireEvent() { return false; }\n\nPromise.prototype._fireEvent = defaultFireEvent;\nPromise.prototype._execute = function(executor, resolve, reject) {\n    try {\n        executor(resolve, reject);\n    } catch (e) {\n        return e;\n    }\n};\nPromise.prototype._onCancel = function () {};\nPromise.prototype._setOnCancel = function (handler) { ; };\nPromise.prototype._attachCancellationCallback = function(onCancel) {\n    ;\n};\nPromise.prototype._captureStackTrace = function () {};\nPromise.prototype._attachExtraTrace = function () {};\nPromise.prototype._clearCancellationData = function() {};\nPromise.prototype._propagateFrom = function (parent, flags) {\n    ;\n    ;\n};\n\nfunction cancellationExecute(executor, resolve, reject) {\n    var promise = this;\n    try {\n        executor(resolve, reject, function(onCancel) {\n            if (typeof onCancel !== \"function\") {\n                throw new TypeError(\"onCancel must be a function, got: \" +\n                                    util.toString(onCancel));\n            }\n            promise._attachCancellationCallback(onCancel);\n        });\n    } catch (e) {\n        return e;\n    }\n}\n\nfunction cancellationAttachCancellationCallback(onCancel) {\n    if (!this._isCancellable()) return this;\n\n    var previousOnCancel = this._onCancel();\n    if (previousOnCancel !== undefined) {\n        if (util.isArray(previousOnCancel)) {\n            previousOnCancel.push(onCancel);\n        } else {\n            this._setOnCancel([previousOnCancel, onCancel]);\n        }\n    } else {\n        this._setOnCancel(onCancel);\n    }\n}\n\nfunction cancellationOnCancel() {\n    return this._onCancelField;\n}\n\nfunction cancellationSetOnCancel(onCancel) {\n    this._onCancelField = onCancel;\n}\n\nfunction cancellationClearCancellationData() {\n    this._cancellationParent = undefined;\n    this._onCancelField = undefined;\n}\n\nfunction cancellationPropagateFrom(parent, flags) {\n    if ((flags & 1) !== 0) {\n        this._cancellationParent = parent;\n        var branchesRemainingToCancel = parent._branchesRemainingToCancel;\n        if (branchesRemainingToCancel === undefined) {\n            branchesRemainingToCancel = 0;\n        }\n        parent._branchesRemainingToCancel = branchesRemainingToCancel + 1;\n    }\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\n\nfunction bindingPropagateFrom(parent, flags) {\n    if ((flags & 2) !== 0 && parent._isBound()) {\n        this._setBoundTo(parent._boundTo);\n    }\n}\nvar propagateFromFunction = bindingPropagateFrom;\n\nfunction boundValueFunction() {\n    var ret = this._boundTo;\n    if (ret !== undefined) {\n        if (ret instanceof Promise) {\n            if (ret.isFulfilled()) {\n                return ret.value();\n            } else {\n                return undefined;\n            }\n        }\n    }\n    return ret;\n}\n\nfunction longStackTracesCaptureStackTrace() {\n    this._trace = new CapturedTrace(this._peekContext());\n}\n\nfunction longStackTracesAttachExtraTrace(error, ignoreSelf) {\n    if (canAttachTrace(error)) {\n        var trace = this._trace;\n        if (trace !== undefined) {\n            if (ignoreSelf) trace = trace._parent;\n        }\n        if (trace !== undefined) {\n            trace.attachExtraTrace(error);\n        } else if (!error.__stackCleaned__) {\n            var parsed = parseStackAndMessage(error);\n            util.notEnumerableProp(error, \"stack\",\n                parsed.message + \"\\n\" + parsed.stack.join(\"\\n\"));\n            util.notEnumerableProp(error, \"__stackCleaned__\", true);\n        }\n    }\n}\n\nfunction checkForgottenReturns(returnValue, promiseCreated, name, promise,\n                               parent) {\n    if (returnValue === undefined && promiseCreated !== null &&\n        wForgottenReturn) {\n        if (parent !== undefined && parent._returnedNonUndefined()) return;\n        if ((promise._bitField & 65535) === 0) return;\n\n        if (name) name = name + \" \";\n        var handlerLine = \"\";\n        var creatorLine = \"\";\n        if (promiseCreated._trace) {\n            var traceLines = promiseCreated._trace.stack.split(\"\\n\");\n            var stack = cleanStack(traceLines);\n            for (var i = stack.length - 1; i >= 0; --i) {\n                var line = stack[i];\n                if (!nodeFramePattern.test(line)) {\n                    var lineMatches = line.match(parseLinePattern);\n                    if (lineMatches) {\n                        handlerLine  = \"at \" + lineMatches[1] +\n                            \":\" + lineMatches[2] + \":\" + lineMatches[3] + \" \";\n                    }\n                    break;\n                }\n            }\n\n            if (stack.length > 0) {\n                var firstUserLine = stack[0];\n                for (var i = 0; i < traceLines.length; ++i) {\n\n                    if (traceLines[i] === firstUserLine) {\n                        if (i > 0) {\n                            creatorLine = \"\\n\" + traceLines[i - 1];\n                        }\n                        break;\n                    }\n                }\n\n            }\n        }\n        var msg = \"a promise was created in a \" + name +\n            \"handler \" + handlerLine + \"but was not returned from it, \" +\n            \"see http://goo.gl/rRqMUw\" +\n            creatorLine;\n        promise._warn(msg, true, promiseCreated);\n    }\n}\n\nfunction deprecated(name, replacement) {\n    var message = name +\n        \" is deprecated and will be removed in a future version.\";\n    if (replacement) message += \" Use \" + replacement + \" instead.\";\n    return warn(message);\n}\n\nfunction warn(message, shouldUseOwnTrace, promise) {\n    if (!config.warnings) return;\n    var warning = new Warning(message);\n    var ctx;\n    if (shouldUseOwnTrace) {\n        promise._attachExtraTrace(warning);\n    } else if (config.longStackTraces && (ctx = Promise._peekContext())) {\n        ctx.attachExtraTrace(warning);\n    } else {\n        var parsed = parseStackAndMessage(warning);\n        warning.stack = parsed.message + \"\\n\" + parsed.stack.join(\"\\n\");\n    }\n\n    if (!activeFireEvent(\"warning\", warning)) {\n        formatAndLogError(warning, \"\", true);\n    }\n}\n\nfunction reconstructStack(message, stacks) {\n    for (var i = 0; i < stacks.length - 1; ++i) {\n        stacks[i].push(\"From previous event:\");\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    if (i < stacks.length) {\n        stacks[i] = stacks[i].join(\"\\n\");\n    }\n    return message + \"\\n\" + stacks.join(\"\\n\");\n}\n\nfunction removeDuplicateOrEmptyJumps(stacks) {\n    for (var i = 0; i < stacks.length; ++i) {\n        if (stacks[i].length === 0 ||\n            ((i + 1 < stacks.length) && stacks[i][0] === stacks[i+1][0])) {\n            stacks.splice(i, 1);\n            i--;\n        }\n    }\n}\n\nfunction removeCommonRoots(stacks) {\n    var current = stacks[0];\n    for (var i = 1; i < stacks.length; ++i) {\n        var prev = stacks[i];\n        var currentLastIndex = current.length - 1;\n        var currentLastLine = current[currentLastIndex];\n        var commonRootMeetPoint = -1;\n\n        for (var j = prev.length - 1; j >= 0; --j) {\n            if (prev[j] === currentLastLine) {\n                commonRootMeetPoint = j;\n                break;\n            }\n        }\n\n        for (var j = commonRootMeetPoint; j >= 0; --j) {\n            var line = prev[j];\n            if (current[currentLastIndex] === line) {\n                current.pop();\n                currentLastIndex--;\n            } else {\n                break;\n            }\n        }\n        current = prev;\n    }\n}\n\nfunction cleanStack(stack) {\n    var ret = [];\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        var isTraceLine = \"    (No stack trace)\" === line ||\n            stackFramePattern.test(line);\n        var isInternalFrame = isTraceLine && shouldIgnore(line);\n        if (isTraceLine && !isInternalFrame) {\n            if (indentStackFrames && line.charAt(0) !== \" \") {\n                line = \"    \" + line;\n            }\n            ret.push(line);\n        }\n    }\n    return ret;\n}\n\nfunction stackFramesAsArray(error) {\n    var stack = error.stack.replace(/\\s+$/g, \"\").split(\"\\n\");\n    for (var i = 0; i < stack.length; ++i) {\n        var line = stack[i];\n        if (\"    (No stack trace)\" === line || stackFramePattern.test(line)) {\n            break;\n        }\n    }\n    if (i > 0 && error.name != \"SyntaxError\") {\n        stack = stack.slice(i);\n    }\n    return stack;\n}\n\nfunction parseStackAndMessage(error) {\n    var stack = error.stack;\n    var message = error.toString();\n    stack = typeof stack === \"string\" && stack.length > 0\n                ? stackFramesAsArray(error) : [\"    (No stack trace)\"];\n    return {\n        message: message,\n        stack: error.name == \"SyntaxError\" ? stack : cleanStack(stack)\n    };\n}\n\nfunction formatAndLogError(error, title, isSoft) {\n    if (typeof console !== \"undefined\") {\n        var message;\n        if (util.isObject(error)) {\n            var stack = error.stack;\n            message = title + formatStack(stack, error);\n        } else {\n            message = title + String(error);\n        }\n        if (typeof printWarning === \"function\") {\n            printWarning(message, isSoft);\n        } else if (typeof console.log === \"function\" ||\n            typeof console.log === \"object\") {\n            console.log(message);\n        }\n    }\n}\n\nfunction fireRejectionEvent(name, localHandler, reason, promise) {\n    var localEventFired = false;\n    try {\n        if (typeof localHandler === \"function\") {\n            localEventFired = true;\n            if (name === \"rejectionHandled\") {\n                localHandler(promise);\n            } else {\n                localHandler(reason, promise);\n            }\n        }\n    } catch (e) {\n        async.throwLater(e);\n    }\n\n    if (name === \"unhandledRejection\") {\n        if (!activeFireEvent(name, reason, promise) && !localEventFired) {\n            formatAndLogError(reason, \"Unhandled rejection \");\n        }\n    } else {\n        activeFireEvent(name, promise);\n    }\n}\n\nfunction formatNonError(obj) {\n    var str;\n    if (typeof obj === \"function\") {\n        str = \"[function \" +\n            (obj.name || \"anonymous\") +\n            \"]\";\n    } else {\n        str = obj && typeof obj.toString === \"function\"\n            ? obj.toString() : util.toString(obj);\n        var ruselessToString = /\\[object [a-zA-Z0-9$_]+\\]/;\n        if (ruselessToString.test(str)) {\n            try {\n                var newStr = JSON.stringify(obj);\n                str = newStr;\n            }\n            catch(e) {\n\n            }\n        }\n        if (str.length === 0) {\n            str = \"(empty array)\";\n        }\n    }\n    return (\"(<\" + snip(str) + \">, no stack trace)\");\n}\n\nfunction snip(str) {\n    var maxChars = 41;\n    if (str.length < maxChars) {\n        return str;\n    }\n    return str.substr(0, maxChars - 3) + \"...\";\n}\n\nfunction longStackTracesIsSupported() {\n    return typeof captureStackTrace === \"function\";\n}\n\nvar shouldIgnore = function() { return false; };\nvar parseLineInfoRegex = /[\\/<\\(]([^:\\/]+):(\\d+):(?:\\d+)\\)?\\s*$/;\nfunction parseLineInfo(line) {\n    var matches = line.match(parseLineInfoRegex);\n    if (matches) {\n        return {\n            fileName: matches[1],\n            line: parseInt(matches[2], 10)\n        };\n    }\n}\n\nfunction setBounds(firstLineError, lastLineError) {\n    if (!longStackTracesIsSupported()) return;\n    var firstStackLines = firstLineError.stack.split(\"\\n\");\n    var lastStackLines = lastLineError.stack.split(\"\\n\");\n    var firstIndex = -1;\n    var lastIndex = -1;\n    var firstFileName;\n    var lastFileName;\n    for (var i = 0; i < firstStackLines.length; ++i) {\n        var result = parseLineInfo(firstStackLines[i]);\n        if (result) {\n            firstFileName = result.fileName;\n            firstIndex = result.line;\n            break;\n        }\n    }\n    for (var i = 0; i < lastStackLines.length; ++i) {\n        var result = parseLineInfo(lastStackLines[i]);\n        if (result) {\n            lastFileName = result.fileName;\n            lastIndex = result.line;\n            break;\n        }\n    }\n    if (firstIndex < 0 || lastIndex < 0 || !firstFileName || !lastFileName ||\n        firstFileName !== lastFileName || firstIndex >= lastIndex) {\n        return;\n    }\n\n    shouldIgnore = function(line) {\n        if (bluebirdFramePattern.test(line)) return true;\n        var info = parseLineInfo(line);\n        if (info) {\n            if (info.fileName === firstFileName &&\n                (firstIndex <= info.line && info.line <= lastIndex)) {\n                return true;\n            }\n        }\n        return false;\n    };\n}\n\nfunction CapturedTrace(parent) {\n    this._parent = parent;\n    this._promisesCreated = 0;\n    var length = this._length = 1 + (parent === undefined ? 0 : parent._length);\n    captureStackTrace(this, CapturedTrace);\n    if (length > 32) this.uncycle();\n}\nutil.inherits(CapturedTrace, Error);\nContext.CapturedTrace = CapturedTrace;\n\nCapturedTrace.prototype.uncycle = function() {\n    var length = this._length;\n    if (length < 2) return;\n    var nodes = [];\n    var stackToIndex = {};\n\n    for (var i = 0, node = this; node !== undefined; ++i) {\n        nodes.push(node);\n        node = node._parent;\n    }\n    length = this._length = i;\n    for (var i = length - 1; i >= 0; --i) {\n        var stack = nodes[i].stack;\n        if (stackToIndex[stack] === undefined) {\n            stackToIndex[stack] = i;\n        }\n    }\n    for (var i = 0; i < length; ++i) {\n        var currentStack = nodes[i].stack;\n        var index = stackToIndex[currentStack];\n        if (index !== undefined && index !== i) {\n            if (index > 0) {\n                nodes[index - 1]._parent = undefined;\n                nodes[index - 1]._length = 1;\n            }\n            nodes[i]._parent = undefined;\n            nodes[i]._length = 1;\n            var cycleEdgeNode = i > 0 ? nodes[i - 1] : this;\n\n            if (index < length - 1) {\n                cycleEdgeNode._parent = nodes[index + 1];\n                cycleEdgeNode._parent.uncycle();\n                cycleEdgeNode._length =\n                    cycleEdgeNode._parent._length + 1;\n            } else {\n                cycleEdgeNode._parent = undefined;\n                cycleEdgeNode._length = 1;\n            }\n            var currentChildLength = cycleEdgeNode._length + 1;\n            for (var j = i - 2; j >= 0; --j) {\n                nodes[j]._length = currentChildLength;\n                currentChildLength++;\n            }\n            return;\n        }\n    }\n};\n\nCapturedTrace.prototype.attachExtraTrace = function(error) {\n    if (error.__stackCleaned__) return;\n    this.uncycle();\n    var parsed = parseStackAndMessage(error);\n    var message = parsed.message;\n    var stacks = [parsed.stack];\n\n    var trace = this;\n    while (trace !== undefined) {\n        stacks.push(cleanStack(trace.stack.split(\"\\n\")));\n        trace = trace._parent;\n    }\n    removeCommonRoots(stacks);\n    removeDuplicateOrEmptyJumps(stacks);\n    util.notEnumerableProp(error, \"stack\", reconstructStack(message, stacks));\n    util.notEnumerableProp(error, \"__stackCleaned__\", true);\n};\n\nvar captureStackTrace = (function stackDetection() {\n    var v8stackFramePattern = /^\\s*at\\s*/;\n    var v8stackFormatter = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if (error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    if (typeof Error.stackTraceLimit === \"number\" &&\n        typeof Error.captureStackTrace === \"function\") {\n        Error.stackTraceLimit += 6;\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        var captureStackTrace = Error.captureStackTrace;\n\n        shouldIgnore = function(line) {\n            return bluebirdFramePattern.test(line);\n        };\n        return function(receiver, ignoreUntil) {\n            Error.stackTraceLimit += 6;\n            captureStackTrace(receiver, ignoreUntil);\n            Error.stackTraceLimit -= 6;\n        };\n    }\n    var err = new Error();\n\n    if (typeof err.stack === \"string\" &&\n        err.stack.split(\"\\n\")[0].indexOf(\"stackDetection@\") >= 0) {\n        stackFramePattern = /@/;\n        formatStack = v8stackFormatter;\n        indentStackFrames = true;\n        return function captureStackTrace(o) {\n            o.stack = new Error().stack;\n        };\n    }\n\n    var hasStackAfterThrow;\n    try { throw new Error(); }\n    catch(e) {\n        hasStackAfterThrow = (\"stack\" in e);\n    }\n    if (!(\"stack\" in err) && hasStackAfterThrow &&\n        typeof Error.stackTraceLimit === \"number\") {\n        stackFramePattern = v8stackFramePattern;\n        formatStack = v8stackFormatter;\n        return function captureStackTrace(o) {\n            Error.stackTraceLimit += 6;\n            try { throw new Error(); }\n            catch(e) { o.stack = e.stack; }\n            Error.stackTraceLimit -= 6;\n        };\n    }\n\n    formatStack = function(stack, error) {\n        if (typeof stack === \"string\") return stack;\n\n        if ((typeof error === \"object\" ||\n            typeof error === \"function\") &&\n            error.name !== undefined &&\n            error.message !== undefined) {\n            return error.toString();\n        }\n        return formatNonError(error);\n    };\n\n    return null;\n\n})([]);\n\nif (typeof console !== \"undefined\" && typeof console.warn !== \"undefined\") {\n    printWarning = function (message) {\n        console.warn(message);\n    };\n    if (util.isNode && process.stderr.isTTY) {\n        printWarning = function(message, isSoft) {\n            var color = isSoft ? \"\\u001b[33m\" : \"\\u001b[31m\";\n            console.warn(color + message + \"\\u001b[0m\\n\");\n        };\n    } else if (!util.isNode && typeof (new Error().stack) === \"string\") {\n        printWarning = function(message, isSoft) {\n            console.warn(\"%c\" + message,\n                        isSoft ? \"color: darkorange\" : \"color: red\");\n        };\n    }\n}\n\nvar config = {\n    warnings: warnings,\n    longStackTraces: false,\n    cancellation: false,\n    monitoring: false\n};\n\nif (longStackTraces) Promise.longStackTraces();\n\nreturn {\n    longStackTraces: function() {\n        return config.longStackTraces;\n    },\n    warnings: function() {\n        return config.warnings;\n    },\n    cancellation: function() {\n        return config.cancellation;\n    },\n    monitoring: function() {\n        return config.monitoring;\n    },\n    propagateFromFunction: function() {\n        return propagateFromFunction;\n    },\n    boundValueFunction: function() {\n        return boundValueFunction;\n    },\n    checkForgottenReturns: checkForgottenReturns,\n    setBounds: setBounds,\n    warn: warn,\n    deprecated: deprecated,\n    CapturedTrace: CapturedTrace,\n    fireDomEvent: fireDomEvent,\n    fireGlobalEvent: fireGlobalEvent\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],10:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction returner() {\n    return this.value;\n}\nfunction thrower() {\n    throw this.reason;\n}\n\nPromise.prototype[\"return\"] =\nPromise.prototype.thenReturn = function (value) {\n    if (value instanceof Promise) value.suppressUnhandledRejections();\n    return this._then(\n        returner, undefined, undefined, {value: value}, undefined);\n};\n\nPromise.prototype[\"throw\"] =\nPromise.prototype.thenThrow = function (reason) {\n    return this._then(\n        thrower, undefined, undefined, {reason: reason}, undefined);\n};\n\nPromise.prototype.catchThrow = function (reason) {\n    if (arguments.length <= 1) {\n        return this._then(\n            undefined, thrower, undefined, {reason: reason}, undefined);\n    } else {\n        var _reason = arguments[1];\n        var handler = function() {throw _reason;};\n        return this.caught(reason, handler);\n    }\n};\n\nPromise.prototype.catchReturn = function (value) {\n    if (arguments.length <= 1) {\n        if (value instanceof Promise) value.suppressUnhandledRejections();\n        return this._then(\n            undefined, returner, undefined, {value: value}, undefined);\n    } else {\n        var _value = arguments[1];\n        if (_value instanceof Promise) _value.suppressUnhandledRejections();\n        var handler = function() {return _value;};\n        return this.caught(value, handler);\n    }\n};\n};\n\n},{}],11:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseReduce = Promise.reduce;\nvar PromiseAll = Promise.all;\n\nfunction promiseAllThis() {\n    return PromiseAll(this);\n}\n\nfunction PromiseMapSeries(promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, INTERNAL);\n}\n\nPromise.prototype.each = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, this, undefined);\n};\n\nPromise.prototype.mapSeries = function (fn) {\n    return PromiseReduce(this, fn, INTERNAL, INTERNAL);\n};\n\nPromise.each = function (promises, fn) {\n    return PromiseReduce(promises, fn, INTERNAL, 0)\n              ._then(promiseAllThis, undefined, undefined, promises, undefined);\n};\n\nPromise.mapSeries = PromiseMapSeries;\n};\n\n\n},{}],12:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar Objectfreeze = es5.freeze;\nvar util = _dereq_(\"./util\");\nvar inherits = util.inherits;\nvar notEnumerableProp = util.notEnumerableProp;\n\nfunction subError(nameProperty, defaultMessage) {\n    function SubError(message) {\n        if (!(this instanceof SubError)) return new SubError(message);\n        notEnumerableProp(this, \"message\",\n            typeof message === \"string\" ? message : defaultMessage);\n        notEnumerableProp(this, \"name\", nameProperty);\n        if (Error.captureStackTrace) {\n            Error.captureStackTrace(this, this.constructor);\n        } else {\n            Error.call(this);\n        }\n    }\n    inherits(SubError, Error);\n    return SubError;\n}\n\nvar _TypeError, _RangeError;\nvar Warning = subError(\"Warning\", \"warning\");\nvar CancellationError = subError(\"CancellationError\", \"cancellation error\");\nvar TimeoutError = subError(\"TimeoutError\", \"timeout error\");\nvar AggregateError = subError(\"AggregateError\", \"aggregate error\");\ntry {\n    _TypeError = TypeError;\n    _RangeError = RangeError;\n} catch(e) {\n    _TypeError = subError(\"TypeError\", \"type error\");\n    _RangeError = subError(\"RangeError\", \"range error\");\n}\n\nvar methods = (\"join pop push shift unshift slice filter forEach some \" +\n    \"every map indexOf lastIndexOf reduce reduceRight sort reverse\").split(\" \");\n\nfor (var i = 0; i < methods.length; ++i) {\n    if (typeof Array.prototype[methods[i]] === \"function\") {\n        AggregateError.prototype[methods[i]] = Array.prototype[methods[i]];\n    }\n}\n\nes5.defineProperty(AggregateError.prototype, \"length\", {\n    value: 0,\n    configurable: false,\n    writable: true,\n    enumerable: true\n});\nAggregateError.prototype[\"isOperational\"] = true;\nvar level = 0;\nAggregateError.prototype.toString = function() {\n    var indent = Array(level * 4 + 1).join(\" \");\n    var ret = \"\\n\" + indent + \"AggregateError of:\" + \"\\n\";\n    level++;\n    indent = Array(level * 4 + 1).join(\" \");\n    for (var i = 0; i < this.length; ++i) {\n        var str = this[i] === this ? \"[Circular AggregateError]\" : this[i] + \"\";\n        var lines = str.split(\"\\n\");\n        for (var j = 0; j < lines.length; ++j) {\n            lines[j] = indent + lines[j];\n        }\n        str = lines.join(\"\\n\");\n        ret += str + \"\\n\";\n    }\n    level--;\n    return ret;\n};\n\nfunction OperationalError(message) {\n    if (!(this instanceof OperationalError))\n        return new OperationalError(message);\n    notEnumerableProp(this, \"name\", \"OperationalError\");\n    notEnumerableProp(this, \"message\", message);\n    this.cause = message;\n    this[\"isOperational\"] = true;\n\n    if (message instanceof Error) {\n        notEnumerableProp(this, \"message\", message.message);\n        notEnumerableProp(this, \"stack\", message.stack);\n    } else if (Error.captureStackTrace) {\n        Error.captureStackTrace(this, this.constructor);\n    }\n\n}\ninherits(OperationalError, Error);\n\nvar errorTypes = Error[\"__BluebirdErrorTypes__\"];\nif (!errorTypes) {\n    errorTypes = Objectfreeze({\n        CancellationError: CancellationError,\n        TimeoutError: TimeoutError,\n        OperationalError: OperationalError,\n        RejectionError: OperationalError,\n        AggregateError: AggregateError\n    });\n    es5.defineProperty(Error, \"__BluebirdErrorTypes__\", {\n        value: errorTypes,\n        writable: false,\n        enumerable: false,\n        configurable: false\n    });\n}\n\nmodule.exports = {\n    Error: Error,\n    TypeError: _TypeError,\n    RangeError: _RangeError,\n    CancellationError: errorTypes.CancellationError,\n    OperationalError: errorTypes.OperationalError,\n    TimeoutError: errorTypes.TimeoutError,\n    AggregateError: errorTypes.AggregateError,\n    Warning: Warning\n};\n\n},{\"./es5\":13,\"./util\":36}],13:[function(_dereq_,module,exports){\nvar isES5 = (function(){\n    \"use strict\";\n    return this === undefined;\n})();\n\nif (isES5) {\n    module.exports = {\n        freeze: Object.freeze,\n        defineProperty: Object.defineProperty,\n        getDescriptor: Object.getOwnPropertyDescriptor,\n        keys: Object.keys,\n        names: Object.getOwnPropertyNames,\n        getPrototypeOf: Object.getPrototypeOf,\n        isArray: Array.isArray,\n        isES5: isES5,\n        propertyIsWritable: function(obj, prop) {\n            var descriptor = Object.getOwnPropertyDescriptor(obj, prop);\n            return !!(!descriptor || descriptor.writable || descriptor.set);\n        }\n    };\n} else {\n    var has = {}.hasOwnProperty;\n    var str = {}.toString;\n    var proto = {}.constructor.prototype;\n\n    var ObjectKeys = function (o) {\n        var ret = [];\n        for (var key in o) {\n            if (has.call(o, key)) {\n                ret.push(key);\n            }\n        }\n        return ret;\n    };\n\n    var ObjectGetDescriptor = function(o, key) {\n        return {value: o[key]};\n    };\n\n    var ObjectDefineProperty = function (o, key, desc) {\n        o[key] = desc.value;\n        return o;\n    };\n\n    var ObjectFreeze = function (obj) {\n        return obj;\n    };\n\n    var ObjectGetPrototypeOf = function (obj) {\n        try {\n            return Object(obj).constructor.prototype;\n        }\n        catch (e) {\n            return proto;\n        }\n    };\n\n    var ArrayIsArray = function (obj) {\n        try {\n            return str.call(obj) === \"[object Array]\";\n        }\n        catch(e) {\n            return false;\n        }\n    };\n\n    module.exports = {\n        isArray: ArrayIsArray,\n        keys: ObjectKeys,\n        names: ObjectKeys,\n        defineProperty: ObjectDefineProperty,\n        getDescriptor: ObjectGetDescriptor,\n        freeze: ObjectFreeze,\n        getPrototypeOf: ObjectGetPrototypeOf,\n        isES5: isES5,\n        propertyIsWritable: function() {\n            return true;\n        }\n    };\n}\n\n},{}],14:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar PromiseMap = Promise.map;\n\nPromise.prototype.filter = function (fn, options) {\n    return PromiseMap(this, fn, options, INTERNAL);\n};\n\nPromise.filter = function (promises, fn, options) {\n    return PromiseMap(promises, fn, options, INTERNAL);\n};\n};\n\n},{}],15:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, tryConvertToPromise, NEXT_FILTER) {\nvar util = _dereq_(\"./util\");\nvar CancellationError = Promise.CancellationError;\nvar errorObj = util.errorObj;\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\n\nfunction PassThroughHandlerContext(promise, type, handler) {\n    this.promise = promise;\n    this.type = type;\n    this.handler = handler;\n    this.called = false;\n    this.cancelPromise = null;\n}\n\nPassThroughHandlerContext.prototype.isFinallyHandler = function() {\n    return this.type === 0;\n};\n\nfunction FinallyHandlerCancelReaction(finallyHandler) {\n    this.finallyHandler = finallyHandler;\n}\n\nFinallyHandlerCancelReaction.prototype._resultCancelled = function() {\n    checkCancel(this.finallyHandler);\n};\n\nfunction checkCancel(ctx, reason) {\n    if (ctx.cancelPromise != null) {\n        if (arguments.length > 1) {\n            ctx.cancelPromise._reject(reason);\n        } else {\n            ctx.cancelPromise._cancel();\n        }\n        ctx.cancelPromise = null;\n        return true;\n    }\n    return false;\n}\n\nfunction succeed() {\n    return finallyHandler.call(this, this.promise._target()._settledValue());\n}\nfunction fail(reason) {\n    if (checkCancel(this, reason)) return;\n    errorObj.e = reason;\n    return errorObj;\n}\nfunction finallyHandler(reasonOrValue) {\n    var promise = this.promise;\n    var handler = this.handler;\n\n    if (!this.called) {\n        this.called = true;\n        var ret = this.isFinallyHandler()\n            ? handler.call(promise._boundValue())\n            : handler.call(promise._boundValue(), reasonOrValue);\n        if (ret === NEXT_FILTER) {\n            return ret;\n        } else if (ret !== undefined) {\n            promise._setReturnedNonUndefined();\n            var maybePromise = tryConvertToPromise(ret, promise);\n            if (maybePromise instanceof Promise) {\n                if (this.cancelPromise != null) {\n                    if (maybePromise._isCancelled()) {\n                        var reason =\n                            new CancellationError(\"late cancellation observer\");\n                        promise._attachExtraTrace(reason);\n                        errorObj.e = reason;\n                        return errorObj;\n                    } else if (maybePromise.isPending()) {\n                        maybePromise._attachCancellationCallback(\n                            new FinallyHandlerCancelReaction(this));\n                    }\n                }\n                return maybePromise._then(\n                    succeed, fail, undefined, this, undefined);\n            }\n        }\n    }\n\n    if (promise.isRejected()) {\n        checkCancel(this);\n        errorObj.e = reasonOrValue;\n        return errorObj;\n    } else {\n        checkCancel(this);\n        return reasonOrValue;\n    }\n}\n\nPromise.prototype._passThrough = function(handler, type, success, fail) {\n    if (typeof handler !== \"function\") return this.then();\n    return this._then(success,\n                      fail,\n                      undefined,\n                      new PassThroughHandlerContext(this, type, handler),\n                      undefined);\n};\n\nPromise.prototype.lastly =\nPromise.prototype[\"finally\"] = function (handler) {\n    return this._passThrough(handler,\n                             0,\n                             finallyHandler,\n                             finallyHandler);\n};\n\n\nPromise.prototype.tap = function (handler) {\n    return this._passThrough(handler, 1, finallyHandler);\n};\n\nPromise.prototype.tapCatch = function (handlerOrPredicate) {\n    var len = arguments.length;\n    if(len === 1) {\n        return this._passThrough(handlerOrPredicate,\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    } else {\n         var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return Promise.reject(new TypeError(\n                    \"tapCatch statement predicate: \"\n                    + \"expecting an object but got \" + util.classString(item)\n                ));\n            }\n        }\n        catchInstances.length = j;\n        var handler = arguments[i];\n        return this._passThrough(catchFilter(catchInstances, handler, this),\n                                 1,\n                                 undefined,\n                                 finallyHandler);\n    }\n\n};\n\nreturn PassThroughHandlerContext;\n};\n\n},{\"./catch_filter\":7,\"./util\":36}],16:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          apiRejection,\n                          INTERNAL,\n                          tryConvertToPromise,\n                          Proxyable,\n                          debug) {\nvar errors = _dereq_(\"./errors\");\nvar TypeError = errors.TypeError;\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nvar yieldHandlers = [];\n\nfunction promiseFromYieldHandler(value, yieldHandlers, traceParent) {\n    for (var i = 0; i < yieldHandlers.length; ++i) {\n        traceParent._pushContext();\n        var result = tryCatch(yieldHandlers[i])(value);\n        traceParent._popContext();\n        if (result === errorObj) {\n            traceParent._pushContext();\n            var ret = Promise.reject(errorObj.e);\n            traceParent._popContext();\n            return ret;\n        }\n        var maybePromise = tryConvertToPromise(result, traceParent);\n        if (maybePromise instanceof Promise) return maybePromise;\n    }\n    return null;\n}\n\nfunction PromiseSpawn(generatorFunction, receiver, yieldHandler, stack) {\n    if (debug.cancellation()) {\n        var internal = new Promise(INTERNAL);\n        var _finallyPromise = this._finallyPromise = new Promise(INTERNAL);\n        this._promise = internal.lastly(function() {\n            return _finallyPromise;\n        });\n        internal._captureStackTrace();\n        internal._setOnCancel(this);\n    } else {\n        var promise = this._promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n    }\n    this._stack = stack;\n    this._generatorFunction = generatorFunction;\n    this._receiver = receiver;\n    this._generator = undefined;\n    this._yieldHandlers = typeof yieldHandler === \"function\"\n        ? [yieldHandler].concat(yieldHandlers)\n        : yieldHandlers;\n    this._yieldedPromise = null;\n    this._cancellationPhase = false;\n}\nutil.inherits(PromiseSpawn, Proxyable);\n\nPromiseSpawn.prototype._isResolved = function() {\n    return this._promise === null;\n};\n\nPromiseSpawn.prototype._cleanup = function() {\n    this._promise = this._generator = null;\n    if (debug.cancellation() && this._finallyPromise !== null) {\n        this._finallyPromise._fulfill();\n        this._finallyPromise = null;\n    }\n};\n\nPromiseSpawn.prototype._promiseCancelled = function() {\n    if (this._isResolved()) return;\n    var implementsReturn = typeof this._generator[\"return\"] !== \"undefined\";\n\n    var result;\n    if (!implementsReturn) {\n        var reason = new Promise.CancellationError(\n            \"generator .return() sentinel\");\n        Promise.coroutine.returnSentinel = reason;\n        this._promise._attachExtraTrace(reason);\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"throw\"]).call(this._generator,\n                                                         reason);\n        this._promise._popContext();\n    } else {\n        this._promise._pushContext();\n        result = tryCatch(this._generator[\"return\"]).call(this._generator,\n                                                          undefined);\n        this._promise._popContext();\n    }\n    this._cancellationPhase = true;\n    this._yieldedPromise = null;\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseFulfilled = function(value) {\n    this._yieldedPromise = null;\n    this._promise._pushContext();\n    var result = tryCatch(this._generator.next).call(this._generator, value);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._promiseRejected = function(reason) {\n    this._yieldedPromise = null;\n    this._promise._attachExtraTrace(reason);\n    this._promise._pushContext();\n    var result = tryCatch(this._generator[\"throw\"])\n        .call(this._generator, reason);\n    this._promise._popContext();\n    this._continue(result);\n};\n\nPromiseSpawn.prototype._resultCancelled = function() {\n    if (this._yieldedPromise instanceof Promise) {\n        var promise = this._yieldedPromise;\n        this._yieldedPromise = null;\n        promise.cancel();\n    }\n};\n\nPromiseSpawn.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseSpawn.prototype._run = function () {\n    this._generator = this._generatorFunction.call(this._receiver);\n    this._receiver =\n        this._generatorFunction = undefined;\n    this._promiseFulfilled(undefined);\n};\n\nPromiseSpawn.prototype._continue = function (result) {\n    var promise = this._promise;\n    if (result === errorObj) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._rejectCallback(result.e, false);\n        }\n    }\n\n    var value = result.value;\n    if (result.done === true) {\n        this._cleanup();\n        if (this._cancellationPhase) {\n            return promise.cancel();\n        } else {\n            return promise._resolveCallback(value);\n        }\n    } else {\n        var maybePromise = tryConvertToPromise(value, this._promise);\n        if (!(maybePromise instanceof Promise)) {\n            maybePromise =\n                promiseFromYieldHandler(maybePromise,\n                                        this._yieldHandlers,\n                                        this._promise);\n            if (maybePromise === null) {\n                this._promiseRejected(\n                    new TypeError(\n                        \"A value %s was yielded that could not be treated as a promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\\u000a\".replace(\"%s\", String(value)) +\n                        \"From coroutine:\\u000a\" +\n                        this._stack.split(\"\\n\").slice(1, -7).join(\"\\n\")\n                    )\n                );\n                return;\n            }\n        }\n        maybePromise = maybePromise._target();\n        var bitField = maybePromise._bitField;\n        ;\n        if (((bitField & 50397184) === 0)) {\n            this._yieldedPromise = maybePromise;\n            maybePromise._proxy(this, null);\n        } else if (((bitField & 33554432) !== 0)) {\n            Promise._async.invoke(\n                this._promiseFulfilled, this, maybePromise._value()\n            );\n        } else if (((bitField & 16777216) !== 0)) {\n            Promise._async.invoke(\n                this._promiseRejected, this, maybePromise._reason()\n            );\n        } else {\n            this._promiseCancelled();\n        }\n    }\n};\n\nPromise.coroutine = function (generatorFunction, options) {\n    if (typeof generatorFunction !== \"function\") {\n        throw new TypeError(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var yieldHandler = Object(options).yieldHandler;\n    var PromiseSpawn$ = PromiseSpawn;\n    var stack = new Error().stack;\n    return function () {\n        var generator = generatorFunction.apply(this, arguments);\n        var spawn = new PromiseSpawn$(undefined, undefined, yieldHandler,\n                                      stack);\n        var ret = spawn.promise();\n        spawn._generator = generator;\n        spawn._promiseFulfilled(undefined);\n        return ret;\n    };\n};\n\nPromise.coroutine.addYieldHandler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    yieldHandlers.push(fn);\n};\n\nPromise.spawn = function (generatorFunction) {\n    debug.deprecated(\"Promise.spawn()\", \"Promise.coroutine()\");\n    if (typeof generatorFunction !== \"function\") {\n        return apiRejection(\"generatorFunction must be a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var spawn = new PromiseSpawn(generatorFunction, this);\n    var ret = spawn.promise();\n    spawn._run(Promise.spawn);\n    return ret;\n};\n};\n\n},{\"./errors\":12,\"./util\":36}],17:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, tryConvertToPromise, INTERNAL, async,\n         getDomain) {\nvar util = _dereq_(\"./util\");\nvar canEvaluate = util.canEvaluate;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar reject;\n\nif (!true) {\nif (canEvaluate) {\n    var thenCallback = function(i) {\n        return new Function(\"value\", \"holder\", \"                             \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = value;                                           \\n\\\n            holder.checkFulfillment(this);                                   \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var promiseSetter = function(i) {\n        return new Function(\"promise\", \"holder\", \"                           \\n\\\n            'use strict';                                                    \\n\\\n            holder.pIndex = promise;                                         \\n\\\n            \".replace(/Index/g, i));\n    };\n\n    var generateHolderClass = function(total) {\n        var props = new Array(total);\n        for (var i = 0; i < props.length; ++i) {\n            props[i] = \"this.p\" + (i+1);\n        }\n        var assignment = props.join(\" = \") + \" = null;\";\n        var cancellationCode= \"var promise;\\n\" + props.map(function(prop) {\n            return \"                                                         \\n\\\n                promise = \" + prop + \";                                      \\n\\\n                if (promise instanceof Promise) {                            \\n\\\n                    promise.cancel();                                        \\n\\\n                }                                                            \\n\\\n            \";\n        }).join(\"\\n\");\n        var passedArguments = props.join(\", \");\n        var name = \"Holder$\" + total;\n\n\n        var code = \"return function(tryCatch, errorObj, Promise, async) {    \\n\\\n            'use strict';                                                    \\n\\\n            function [TheName](fn) {                                         \\n\\\n                [TheProperties]                                              \\n\\\n                this.fn = fn;                                                \\n\\\n                this.asyncNeeded = true;                                     \\n\\\n                this.now = 0;                                                \\n\\\n            }                                                                \\n\\\n                                                                             \\n\\\n            [TheName].prototype._callFunction = function(promise) {          \\n\\\n                promise._pushContext();                                      \\n\\\n                var ret = tryCatch(this.fn)([ThePassedArguments]);           \\n\\\n                promise._popContext();                                       \\n\\\n                if (ret === errorObj) {                                      \\n\\\n                    promise._rejectCallback(ret.e, false);                   \\n\\\n                } else {                                                     \\n\\\n                    promise._resolveCallback(ret);                           \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype.checkFulfillment = function(promise) {       \\n\\\n                var now = ++this.now;                                        \\n\\\n                if (now === [TheTotal]) {                                    \\n\\\n                    if (this.asyncNeeded) {                                  \\n\\\n                        async.invoke(this._callFunction, this, promise);     \\n\\\n                    } else {                                                 \\n\\\n                        this._callFunction(promise);                         \\n\\\n                    }                                                        \\n\\\n                                                                             \\n\\\n                }                                                            \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            [TheName].prototype._resultCancelled = function() {              \\n\\\n                [CancellationCode]                                           \\n\\\n            };                                                               \\n\\\n                                                                             \\n\\\n            return [TheName];                                                \\n\\\n        }(tryCatch, errorObj, Promise, async);                               \\n\\\n        \";\n\n        code = code.replace(/\\[TheName\\]/g, name)\n            .replace(/\\[TheTotal\\]/g, total)\n            .replace(/\\[ThePassedArguments\\]/g, passedArguments)\n            .replace(/\\[TheProperties\\]/g, assignment)\n            .replace(/\\[CancellationCode\\]/g, cancellationCode);\n\n        return new Function(\"tryCatch\", \"errorObj\", \"Promise\", \"async\", code)\n                           (tryCatch, errorObj, Promise, async);\n    };\n\n    var holderClasses = [];\n    var thenCallbacks = [];\n    var promiseSetters = [];\n\n    for (var i = 0; i < 8; ++i) {\n        holderClasses.push(generateHolderClass(i + 1));\n        thenCallbacks.push(thenCallback(i + 1));\n        promiseSetters.push(promiseSetter(i + 1));\n    }\n\n    reject = function (reason) {\n        this._reject(reason);\n    };\n}}\n\nPromise.join = function () {\n    var last = arguments.length - 1;\n    var fn;\n    if (last > 0 && typeof arguments[last] === \"function\") {\n        fn = arguments[last];\n        if (!true) {\n            if (last <= 8 && canEvaluate) {\n                var ret = new Promise(INTERNAL);\n                ret._captureStackTrace();\n                var HolderClass = holderClasses[last - 1];\n                var holder = new HolderClass(fn);\n                var callbacks = thenCallbacks;\n\n                for (var i = 0; i < last; ++i) {\n                    var maybePromise = tryConvertToPromise(arguments[i], ret);\n                    if (maybePromise instanceof Promise) {\n                        maybePromise = maybePromise._target();\n                        var bitField = maybePromise._bitField;\n                        ;\n                        if (((bitField & 50397184) === 0)) {\n                            maybePromise._then(callbacks[i], reject,\n                                               undefined, ret, holder);\n                            promiseSetters[i](maybePromise, holder);\n                            holder.asyncNeeded = false;\n                        } else if (((bitField & 33554432) !== 0)) {\n                            callbacks[i].call(ret,\n                                              maybePromise._value(), holder);\n                        } else if (((bitField & 16777216) !== 0)) {\n                            ret._reject(maybePromise._reason());\n                        } else {\n                            ret._cancel();\n                        }\n                    } else {\n                        callbacks[i].call(ret, maybePromise, holder);\n                    }\n                }\n\n                if (!ret._isFateSealed()) {\n                    if (holder.asyncNeeded) {\n                        var domain = getDomain();\n                        if (domain !== null) {\n                            holder.fn = util.domainBind(domain, holder.fn);\n                        }\n                    }\n                    ret._setAsyncGuaranteed();\n                    ret._setOnCancel(holder);\n                }\n                return ret;\n            }\n        }\n    }\n    var args = [].slice.call(arguments);;\n    if (fn) args.pop();\n    var ret = new PromiseArray(args).promise();\n    return fn !== undefined ? ret.spread(fn) : ret;\n};\n\n};\n\n},{\"./util\":36}],18:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\nvar async = Promise._async;\n\nfunction MappingPromiseArray(promises, fn, limit, _filter) {\n    this.constructor$(promises);\n    this._promise._captureStackTrace();\n    var domain = getDomain();\n    this._callback = domain === null ? fn : util.domainBind(domain, fn);\n    this._preservedValues = _filter === INTERNAL\n        ? new Array(this.length())\n        : null;\n    this._limit = limit;\n    this._inFlight = 0;\n    this._queue = [];\n    async.invoke(this._asyncInit, this, undefined);\n}\nutil.inherits(MappingPromiseArray, PromiseArray);\n\nMappingPromiseArray.prototype._asyncInit = function() {\n    this._init$(undefined, -2);\n};\n\nMappingPromiseArray.prototype._init = function () {};\n\nMappingPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var values = this._values;\n    var length = this.length();\n    var preservedValues = this._preservedValues;\n    var limit = this._limit;\n\n    if (index < 0) {\n        index = (index * -1) - 1;\n        values[index] = value;\n        if (limit >= 1) {\n            this._inFlight--;\n            this._drainQueue();\n            if (this._isResolved()) return true;\n        }\n    } else {\n        if (limit >= 1 && this._inFlight >= limit) {\n            values[index] = value;\n            this._queue.push(index);\n            return false;\n        }\n        if (preservedValues !== null) preservedValues[index] = value;\n\n        var promise = this._promise;\n        var callback = this._callback;\n        var receiver = promise._boundValue();\n        promise._pushContext();\n        var ret = tryCatch(callback).call(receiver, value, index, length);\n        var promiseCreated = promise._popContext();\n        debug.checkForgottenReturns(\n            ret,\n            promiseCreated,\n            preservedValues !== null ? \"Promise.filter\" : \"Promise.map\",\n            promise\n        );\n        if (ret === errorObj) {\n            this._reject(ret.e);\n            return true;\n        }\n\n        var maybePromise = tryConvertToPromise(ret, this._promise);\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            var bitField = maybePromise._bitField;\n            ;\n            if (((bitField & 50397184) === 0)) {\n                if (limit >= 1) this._inFlight++;\n                values[index] = maybePromise;\n                maybePromise._proxy(this, (index + 1) * -1);\n                return false;\n            } else if (((bitField & 33554432) !== 0)) {\n                ret = maybePromise._value();\n            } else if (((bitField & 16777216) !== 0)) {\n                this._reject(maybePromise._reason());\n                return true;\n            } else {\n                this._cancel();\n                return true;\n            }\n        }\n        values[index] = ret;\n    }\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= length) {\n        if (preservedValues !== null) {\n            this._filter(values, preservedValues);\n        } else {\n            this._resolve(values);\n        }\n        return true;\n    }\n    return false;\n};\n\nMappingPromiseArray.prototype._drainQueue = function () {\n    var queue = this._queue;\n    var limit = this._limit;\n    var values = this._values;\n    while (queue.length > 0 && this._inFlight < limit) {\n        if (this._isResolved()) return;\n        var index = queue.pop();\n        this._promiseFulfilled(values[index], index);\n    }\n};\n\nMappingPromiseArray.prototype._filter = function (booleans, values) {\n    var len = values.length;\n    var ret = new Array(len);\n    var j = 0;\n    for (var i = 0; i < len; ++i) {\n        if (booleans[i]) ret[j++] = values[i];\n    }\n    ret.length = j;\n    this._resolve(ret);\n};\n\nMappingPromiseArray.prototype.preservedValues = function () {\n    return this._preservedValues;\n};\n\nfunction map(promises, fn, options, _filter) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n\n    var limit = 0;\n    if (options !== undefined) {\n        if (typeof options === \"object\" && options !== null) {\n            if (typeof options.concurrency !== \"number\") {\n                return Promise.reject(\n                    new TypeError(\"'concurrency' must be a number but it is \" +\n                                    util.classString(options.concurrency)));\n            }\n            limit = options.concurrency;\n        } else {\n            return Promise.reject(new TypeError(\n                            \"options argument must be an object but it is \" +\n                             util.classString(options)));\n        }\n    }\n    limit = typeof limit === \"number\" &&\n        isFinite(limit) && limit >= 1 ? limit : 0;\n    return new MappingPromiseArray(promises, fn, limit, _filter).promise();\n}\n\nPromise.prototype.map = function (fn, options) {\n    return map(this, fn, options, null);\n};\n\nPromise.map = function (promises, fn, options, _filter) {\n    return map(promises, fn, options, _filter);\n};\n\n\n};\n\n},{\"./util\":36}],19:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, INTERNAL, tryConvertToPromise, apiRejection, debug) {\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nPromise.method = function (fn) {\n    if (typeof fn !== \"function\") {\n        throw new Promise.TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return function () {\n        var ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._pushContext();\n        var value = tryCatch(fn).apply(this, arguments);\n        var promiseCreated = ret._popContext();\n        debug.checkForgottenReturns(\n            value, promiseCreated, \"Promise.method\", ret);\n        ret._resolveFromSyncValue(value);\n        return ret;\n    };\n};\n\nPromise.attempt = Promise[\"try\"] = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._pushContext();\n    var value;\n    if (arguments.length > 1) {\n        debug.deprecated(\"calling Promise.try with more than 1 argument\");\n        var arg = arguments[1];\n        var ctx = arguments[2];\n        value = util.isArray(arg) ? tryCatch(fn).apply(ctx, arg)\n                                  : tryCatch(fn).call(ctx, arg);\n    } else {\n        value = tryCatch(fn)();\n    }\n    var promiseCreated = ret._popContext();\n    debug.checkForgottenReturns(\n        value, promiseCreated, \"Promise.try\", ret);\n    ret._resolveFromSyncValue(value);\n    return ret;\n};\n\nPromise.prototype._resolveFromSyncValue = function (value) {\n    if (value === util.errorObj) {\n        this._rejectCallback(value.e, false);\n    } else {\n        this._resolveCallback(value, true);\n    }\n};\n};\n\n},{\"./util\":36}],20:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar errors = _dereq_(\"./errors\");\nvar OperationalError = errors.OperationalError;\nvar es5 = _dereq_(\"./es5\");\n\nfunction isUntypedError(obj) {\n    return obj instanceof Error &&\n        es5.getPrototypeOf(obj) === Error.prototype;\n}\n\nvar rErrorKey = /^(?:name|message|stack|cause)$/;\nfunction wrapAsOperationalError(obj) {\n    var ret;\n    if (isUntypedError(obj)) {\n        ret = new OperationalError(obj);\n        ret.name = obj.name;\n        ret.message = obj.message;\n        ret.stack = obj.stack;\n        var keys = es5.keys(obj);\n        for (var i = 0; i < keys.length; ++i) {\n            var key = keys[i];\n            if (!rErrorKey.test(key)) {\n                ret[key] = obj[key];\n            }\n        }\n        return ret;\n    }\n    util.markAsOriginatingFromRejection(obj);\n    return obj;\n}\n\nfunction nodebackForPromise(promise, multiArgs) {\n    return function(err, value) {\n        if (promise === null) return;\n        if (err) {\n            var wrapped = wrapAsOperationalError(maybeWrapAsError(err));\n            promise._attachExtraTrace(wrapped);\n            promise._reject(wrapped);\n        } else if (!multiArgs) {\n            promise._fulfill(value);\n        } else {\n            var args = [].slice.call(arguments, 1);;\n            promise._fulfill(args);\n        }\n        promise = null;\n    };\n}\n\nmodule.exports = nodebackForPromise;\n\n},{\"./errors\":12,\"./es5\":13,\"./util\":36}],21:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nvar util = _dereq_(\"./util\");\nvar async = Promise._async;\nvar tryCatch = util.tryCatch;\nvar errorObj = util.errorObj;\n\nfunction spreadAdapter(val, nodeback) {\n    var promise = this;\n    if (!util.isArray(val)) return successAdapter.call(promise, val, nodeback);\n    var ret =\n        tryCatch(nodeback).apply(promise._boundValue(), [null].concat(val));\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nfunction successAdapter(val, nodeback) {\n    var promise = this;\n    var receiver = promise._boundValue();\n    var ret = val === undefined\n        ? tryCatch(nodeback).call(receiver, null)\n        : tryCatch(nodeback).call(receiver, null, val);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\nfunction errorAdapter(reason, nodeback) {\n    var promise = this;\n    if (!reason) {\n        var newReason = new Error(reason + \"\");\n        newReason.cause = reason;\n        reason = newReason;\n    }\n    var ret = tryCatch(nodeback).call(promise._boundValue(), reason);\n    if (ret === errorObj) {\n        async.throwLater(ret.e);\n    }\n}\n\nPromise.prototype.asCallback = Promise.prototype.nodeify = function (nodeback,\n                                                                     options) {\n    if (typeof nodeback == \"function\") {\n        var adapter = successAdapter;\n        if (options !== undefined && Object(options).spread) {\n            adapter = spreadAdapter;\n        }\n        this._then(\n            adapter,\n            errorAdapter,\n            undefined,\n            this,\n            nodeback\n        );\n    }\n    return this;\n};\n};\n\n},{\"./util\":36}],22:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function() {\nvar makeSelfResolutionError = function () {\n    return new TypeError(\"circular promise resolution chain\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar reflectHandler = function() {\n    return new Promise.PromiseInspection(this._target());\n};\nvar apiRejection = function(msg) {\n    return Promise.reject(new TypeError(msg));\n};\nfunction Proxyable() {}\nvar UNDEFINED_BINDING = {};\nvar util = _dereq_(\"./util\");\n\nvar getDomain;\nif (util.isNode) {\n    getDomain = function() {\n        var ret = process.domain;\n        if (ret === undefined) ret = null;\n        return ret;\n    };\n} else {\n    getDomain = function() {\n        return null;\n    };\n}\nutil.notEnumerableProp(Promise, \"_getDomain\", getDomain);\n\nvar es5 = _dereq_(\"./es5\");\nvar Async = _dereq_(\"./async\");\nvar async = new Async();\nes5.defineProperty(Promise, \"_async\", {value: async});\nvar errors = _dereq_(\"./errors\");\nvar TypeError = Promise.TypeError = errors.TypeError;\nPromise.RangeError = errors.RangeError;\nvar CancellationError = Promise.CancellationError = errors.CancellationError;\nPromise.TimeoutError = errors.TimeoutError;\nPromise.OperationalError = errors.OperationalError;\nPromise.RejectionError = errors.OperationalError;\nPromise.AggregateError = errors.AggregateError;\nvar INTERNAL = function(){};\nvar APPLY = {};\nvar NEXT_FILTER = {};\nvar tryConvertToPromise = _dereq_(\"./thenables\")(Promise, INTERNAL);\nvar PromiseArray =\n    _dereq_(\"./promise_array\")(Promise, INTERNAL,\n                               tryConvertToPromise, apiRejection, Proxyable);\nvar Context = _dereq_(\"./context\")(Promise);\n /*jshint unused:false*/\nvar createContext = Context.create;\nvar debug = _dereq_(\"./debuggability\")(Promise, Context);\nvar CapturedTrace = debug.CapturedTrace;\nvar PassThroughHandlerContext =\n    _dereq_(\"./finally\")(Promise, tryConvertToPromise, NEXT_FILTER);\nvar catchFilter = _dereq_(\"./catch_filter\")(NEXT_FILTER);\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar errorObj = util.errorObj;\nvar tryCatch = util.tryCatch;\nfunction check(self, executor) {\n    if (self == null || self.constructor !== Promise) {\n        throw new TypeError(\"the promise constructor cannot be invoked directly\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    if (typeof executor !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(executor));\n    }\n\n}\n\nfunction Promise(executor) {\n    if (executor !== INTERNAL) {\n        check(this, executor);\n    }\n    this._bitField = 0;\n    this._fulfillmentHandler0 = undefined;\n    this._rejectionHandler0 = undefined;\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._resolveFromExecutor(executor);\n    this._promiseCreated();\n    this._fireEvent(\"promiseCreated\", this);\n}\n\nPromise.prototype.toString = function () {\n    return \"[object Promise]\";\n};\n\nPromise.prototype.caught = Promise.prototype[\"catch\"] = function (fn) {\n    var len = arguments.length;\n    if (len > 1) {\n        var catchInstances = new Array(len - 1),\n            j = 0, i;\n        for (i = 0; i < len - 1; ++i) {\n            var item = arguments[i];\n            if (util.isObject(item)) {\n                catchInstances[j++] = item;\n            } else {\n                return apiRejection(\"Catch statement predicate: \" +\n                    \"expecting an object but got \" + util.classString(item));\n            }\n        }\n        catchInstances.length = j;\n        fn = arguments[i];\n        return this.then(undefined, catchFilter(catchInstances, fn, this));\n    }\n    return this.then(undefined, fn);\n};\n\nPromise.prototype.reflect = function () {\n    return this._then(reflectHandler,\n        reflectHandler, undefined, this, undefined);\n};\n\nPromise.prototype.then = function (didFulfill, didReject) {\n    if (debug.warnings() && arguments.length > 0 &&\n        typeof didFulfill !== \"function\" &&\n        typeof didReject !== \"function\") {\n        var msg = \".then() only accepts functions but was passed: \" +\n                util.classString(didFulfill);\n        if (arguments.length > 1) {\n            msg += \", \" + util.classString(didReject);\n        }\n        this._warn(msg);\n    }\n    return this._then(didFulfill, didReject, undefined, undefined, undefined);\n};\n\nPromise.prototype.done = function (didFulfill, didReject) {\n    var promise =\n        this._then(didFulfill, didReject, undefined, undefined, undefined);\n    promise._setIsFinal();\n};\n\nPromise.prototype.spread = function (fn) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    return this.all()._then(fn, undefined, undefined, APPLY, undefined);\n};\n\nPromise.prototype.toJSON = function () {\n    var ret = {\n        isFulfilled: false,\n        isRejected: false,\n        fulfillmentValue: undefined,\n        rejectionReason: undefined\n    };\n    if (this.isFulfilled()) {\n        ret.fulfillmentValue = this.value();\n        ret.isFulfilled = true;\n    } else if (this.isRejected()) {\n        ret.rejectionReason = this.reason();\n        ret.isRejected = true;\n    }\n    return ret;\n};\n\nPromise.prototype.all = function () {\n    if (arguments.length > 0) {\n        this._warn(\".all() was passed arguments but it does not take any\");\n    }\n    return new PromiseArray(this).promise();\n};\n\nPromise.prototype.error = function (fn) {\n    return this.caught(util.originatesFromRejection, fn);\n};\n\nPromise.getNewLibraryCopy = module.exports;\n\nPromise.is = function (val) {\n    return val instanceof Promise;\n};\n\nPromise.fromNode = Promise.fromCallback = function(fn) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    var multiArgs = arguments.length > 1 ? !!Object(arguments[1]).multiArgs\n                                         : false;\n    var result = tryCatch(fn)(nodebackForPromise(ret, multiArgs));\n    if (result === errorObj) {\n        ret._rejectCallback(result.e, true);\n    }\n    if (!ret._isFateSealed()) ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.all = function (promises) {\n    return new PromiseArray(promises).promise();\n};\n\nPromise.cast = function (obj) {\n    var ret = tryConvertToPromise(obj);\n    if (!(ret instanceof Promise)) {\n        ret = new Promise(INTERNAL);\n        ret._captureStackTrace();\n        ret._setFulfilled();\n        ret._rejectionHandler0 = obj;\n    }\n    return ret;\n};\n\nPromise.resolve = Promise.fulfilled = Promise.cast;\n\nPromise.reject = Promise.rejected = function (reason) {\n    var ret = new Promise(INTERNAL);\n    ret._captureStackTrace();\n    ret._rejectCallback(reason, true);\n    return ret;\n};\n\nPromise.setScheduler = function(fn) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    return async.setScheduler(fn);\n};\n\nPromise.prototype._then = function (\n    didFulfill,\n    didReject,\n    _,    receiver,\n    internalData\n) {\n    var haveInternalData = internalData !== undefined;\n    var promise = haveInternalData ? internalData : new Promise(INTERNAL);\n    var target = this._target();\n    var bitField = target._bitField;\n\n    if (!haveInternalData) {\n        promise._propagateFrom(this, 3);\n        promise._captureStackTrace();\n        if (receiver === undefined &&\n            ((this._bitField & 2097152) !== 0)) {\n            if (!((bitField & 50397184) === 0)) {\n                receiver = this._boundValue();\n            } else {\n                receiver = target === this ? undefined : this._boundTo;\n            }\n        }\n        this._fireEvent(\"promiseChained\", this, promise);\n    }\n\n    var domain = getDomain();\n    if (!((bitField & 50397184) === 0)) {\n        var handler, value, settler = target._settlePromiseCtx;\n        if (((bitField & 33554432) !== 0)) {\n            value = target._rejectionHandler0;\n            handler = didFulfill;\n        } else if (((bitField & 16777216) !== 0)) {\n            value = target._fulfillmentHandler0;\n            handler = didReject;\n            target._unsetRejectionIsUnhandled();\n        } else {\n            settler = target._settlePromiseLateCancellationObserver;\n            value = new CancellationError(\"late cancellation observer\");\n            target._attachExtraTrace(value);\n            handler = didReject;\n        }\n\n        async.invoke(settler, target, {\n            handler: domain === null ? handler\n                : (typeof handler === \"function\" &&\n                    util.domainBind(domain, handler)),\n            promise: promise,\n            receiver: receiver,\n            value: value\n        });\n    } else {\n        target._addCallbacks(didFulfill, didReject, promise, receiver, domain);\n    }\n\n    return promise;\n};\n\nPromise.prototype._length = function () {\n    return this._bitField & 65535;\n};\n\nPromise.prototype._isFateSealed = function () {\n    return (this._bitField & 117506048) !== 0;\n};\n\nPromise.prototype._isFollowing = function () {\n    return (this._bitField & 67108864) === 67108864;\n};\n\nPromise.prototype._setLength = function (len) {\n    this._bitField = (this._bitField & -65536) |\n        (len & 65535);\n};\n\nPromise.prototype._setFulfilled = function () {\n    this._bitField = this._bitField | 33554432;\n    this._fireEvent(\"promiseFulfilled\", this);\n};\n\nPromise.prototype._setRejected = function () {\n    this._bitField = this._bitField | 16777216;\n    this._fireEvent(\"promiseRejected\", this);\n};\n\nPromise.prototype._setFollowing = function () {\n    this._bitField = this._bitField | 67108864;\n    this._fireEvent(\"promiseResolved\", this);\n};\n\nPromise.prototype._setIsFinal = function () {\n    this._bitField = this._bitField | 4194304;\n};\n\nPromise.prototype._isFinal = function () {\n    return (this._bitField & 4194304) > 0;\n};\n\nPromise.prototype._unsetCancelled = function() {\n    this._bitField = this._bitField & (~65536);\n};\n\nPromise.prototype._setCancelled = function() {\n    this._bitField = this._bitField | 65536;\n    this._fireEvent(\"promiseCancelled\", this);\n};\n\nPromise.prototype._setWillBeCancelled = function() {\n    this._bitField = this._bitField | 8388608;\n};\n\nPromise.prototype._setAsyncGuaranteed = function() {\n    if (async.hasCustomScheduler()) return;\n    this._bitField = this._bitField | 134217728;\n};\n\nPromise.prototype._receiverAt = function (index) {\n    var ret = index === 0 ? this._receiver0 : this[\n            index * 4 - 4 + 3];\n    if (ret === UNDEFINED_BINDING) {\n        return undefined;\n    } else if (ret === undefined && this._isBound()) {\n        return this._boundValue();\n    }\n    return ret;\n};\n\nPromise.prototype._promiseAt = function (index) {\n    return this[\n            index * 4 - 4 + 2];\n};\n\nPromise.prototype._fulfillmentHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 0];\n};\n\nPromise.prototype._rejectionHandlerAt = function (index) {\n    return this[\n            index * 4 - 4 + 1];\n};\n\nPromise.prototype._boundValue = function() {};\n\nPromise.prototype._migrateCallback0 = function (follower) {\n    var bitField = follower._bitField;\n    var fulfill = follower._fulfillmentHandler0;\n    var reject = follower._rejectionHandler0;\n    var promise = follower._promise0;\n    var receiver = follower._receiverAt(0);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._migrateCallbackAt = function (follower, index) {\n    var fulfill = follower._fulfillmentHandlerAt(index);\n    var reject = follower._rejectionHandlerAt(index);\n    var promise = follower._promiseAt(index);\n    var receiver = follower._receiverAt(index);\n    if (receiver === undefined) receiver = UNDEFINED_BINDING;\n    this._addCallbacks(fulfill, reject, promise, receiver, null);\n};\n\nPromise.prototype._addCallbacks = function (\n    fulfill,\n    reject,\n    promise,\n    receiver,\n    domain\n) {\n    var index = this._length();\n\n    if (index >= 65535 - 4) {\n        index = 0;\n        this._setLength(0);\n    }\n\n    if (index === 0) {\n        this._promise0 = promise;\n        this._receiver0 = receiver;\n        if (typeof fulfill === \"function\") {\n            this._fulfillmentHandler0 =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this._rejectionHandler0 =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    } else {\n        var base = index * 4 - 4;\n        this[base + 2] = promise;\n        this[base + 3] = receiver;\n        if (typeof fulfill === \"function\") {\n            this[base + 0] =\n                domain === null ? fulfill : util.domainBind(domain, fulfill);\n        }\n        if (typeof reject === \"function\") {\n            this[base + 1] =\n                domain === null ? reject : util.domainBind(domain, reject);\n        }\n    }\n    this._setLength(index + 1);\n    return index;\n};\n\nPromise.prototype._proxy = function (proxyable, arg) {\n    this._addCallbacks(undefined, undefined, arg, proxyable, null);\n};\n\nPromise.prototype._resolveCallback = function(value, shouldBind) {\n    if (((this._bitField & 117506048) !== 0)) return;\n    if (value === this)\n        return this._rejectCallback(makeSelfResolutionError(), false);\n    var maybePromise = tryConvertToPromise(value, this);\n    if (!(maybePromise instanceof Promise)) return this._fulfill(value);\n\n    if (shouldBind) this._propagateFrom(maybePromise, 2);\n\n    var promise = maybePromise._target();\n\n    if (promise === this) {\n        this._reject(makeSelfResolutionError());\n        return;\n    }\n\n    var bitField = promise._bitField;\n    if (((bitField & 50397184) === 0)) {\n        var len = this._length();\n        if (len > 0) promise._migrateCallback0(this);\n        for (var i = 1; i < len; ++i) {\n            promise._migrateCallbackAt(this, i);\n        }\n        this._setFollowing();\n        this._setLength(0);\n        this._setFollowee(promise);\n    } else if (((bitField & 33554432) !== 0)) {\n        this._fulfill(promise._value());\n    } else if (((bitField & 16777216) !== 0)) {\n        this._reject(promise._reason());\n    } else {\n        var reason = new CancellationError(\"late cancellation observer\");\n        promise._attachExtraTrace(reason);\n        this._reject(reason);\n    }\n};\n\nPromise.prototype._rejectCallback =\nfunction(reason, synchronous, ignoreNonErrorWarnings) {\n    var trace = util.ensureErrorObject(reason);\n    var hasStack = trace === reason;\n    if (!hasStack && !ignoreNonErrorWarnings && debug.warnings()) {\n        var message = \"a promise was rejected with a non-error: \" +\n            util.classString(reason);\n        this._warn(message, true);\n    }\n    this._attachExtraTrace(trace, synchronous ? hasStack : false);\n    this._reject(reason);\n};\n\nPromise.prototype._resolveFromExecutor = function (executor) {\n    if (executor === INTERNAL) return;\n    var promise = this;\n    this._captureStackTrace();\n    this._pushContext();\n    var synchronous = true;\n    var r = this._execute(executor, function(value) {\n        promise._resolveCallback(value);\n    }, function (reason) {\n        promise._rejectCallback(reason, synchronous);\n    });\n    synchronous = false;\n    this._popContext();\n\n    if (r !== undefined) {\n        promise._rejectCallback(r, true);\n    }\n};\n\nPromise.prototype._settlePromiseFromHandler = function (\n    handler, receiver, value, promise\n) {\n    var bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n    promise._pushContext();\n    var x;\n    if (receiver === APPLY) {\n        if (!value || typeof value.length !== \"number\") {\n            x = errorObj;\n            x.e = new TypeError(\"cannot .spread() a non-array: \" +\n                                    util.classString(value));\n        } else {\n            x = tryCatch(handler).apply(this._boundValue(), value);\n        }\n    } else {\n        x = tryCatch(handler).call(receiver, value);\n    }\n    var promiseCreated = promise._popContext();\n    bitField = promise._bitField;\n    if (((bitField & 65536) !== 0)) return;\n\n    if (x === NEXT_FILTER) {\n        promise._reject(value);\n    } else if (x === errorObj) {\n        promise._rejectCallback(x.e, false);\n    } else {\n        debug.checkForgottenReturns(x, promiseCreated, \"\",  promise, this);\n        promise._resolveCallback(x);\n    }\n};\n\nPromise.prototype._target = function() {\n    var ret = this;\n    while (ret._isFollowing()) ret = ret._followee();\n    return ret;\n};\n\nPromise.prototype._followee = function() {\n    return this._rejectionHandler0;\n};\n\nPromise.prototype._setFollowee = function(promise) {\n    this._rejectionHandler0 = promise;\n};\n\nPromise.prototype._settlePromise = function(promise, handler, receiver, value) {\n    var isPromise = promise instanceof Promise;\n    var bitField = this._bitField;\n    var asyncGuaranteed = ((bitField & 134217728) !== 0);\n    if (((bitField & 65536) !== 0)) {\n        if (isPromise) promise._invokeInternalOnCancel();\n\n        if (receiver instanceof PassThroughHandlerContext &&\n            receiver.isFinallyHandler()) {\n            receiver.cancelPromise = promise;\n            if (tryCatch(handler).call(receiver, value) === errorObj) {\n                promise._reject(errorObj.e);\n            }\n        } else if (handler === reflectHandler) {\n            promise._fulfill(reflectHandler.call(receiver));\n        } else if (receiver instanceof Proxyable) {\n            receiver._promiseCancelled(promise);\n        } else if (isPromise || promise instanceof PromiseArray) {\n            promise._cancel();\n        } else {\n            receiver.cancel();\n        }\n    } else if (typeof handler === \"function\") {\n        if (!isPromise) {\n            handler.call(receiver, value, promise);\n        } else {\n            if (asyncGuaranteed) promise._setAsyncGuaranteed();\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (receiver instanceof Proxyable) {\n        if (!receiver._isResolved()) {\n            if (((bitField & 33554432) !== 0)) {\n                receiver._promiseFulfilled(value, promise);\n            } else {\n                receiver._promiseRejected(value, promise);\n            }\n        }\n    } else if (isPromise) {\n        if (asyncGuaranteed) promise._setAsyncGuaranteed();\n        if (((bitField & 33554432) !== 0)) {\n            promise._fulfill(value);\n        } else {\n            promise._reject(value);\n        }\n    }\n};\n\nPromise.prototype._settlePromiseLateCancellationObserver = function(ctx) {\n    var handler = ctx.handler;\n    var promise = ctx.promise;\n    var receiver = ctx.receiver;\n    var value = ctx.value;\n    if (typeof handler === \"function\") {\n        if (!(promise instanceof Promise)) {\n            handler.call(receiver, value, promise);\n        } else {\n            this._settlePromiseFromHandler(handler, receiver, value, promise);\n        }\n    } else if (promise instanceof Promise) {\n        promise._reject(value);\n    }\n};\n\nPromise.prototype._settlePromiseCtx = function(ctx) {\n    this._settlePromise(ctx.promise, ctx.handler, ctx.receiver, ctx.value);\n};\n\nPromise.prototype._settlePromise0 = function(handler, value, bitField) {\n    var promise = this._promise0;\n    var receiver = this._receiverAt(0);\n    this._promise0 = undefined;\n    this._receiver0 = undefined;\n    this._settlePromise(promise, handler, receiver, value);\n};\n\nPromise.prototype._clearCallbackDataAtIndex = function(index) {\n    var base = index * 4 - 4;\n    this[base + 2] =\n    this[base + 3] =\n    this[base + 0] =\n    this[base + 1] = undefined;\n};\n\nPromise.prototype._fulfill = function (value) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    if (value === this) {\n        var err = makeSelfResolutionError();\n        this._attachExtraTrace(err);\n        return this._reject(err);\n    }\n    this._setFulfilled();\n    this._rejectionHandler0 = value;\n\n    if ((bitField & 65535) > 0) {\n        if (((bitField & 134217728) !== 0)) {\n            this._settlePromises();\n        } else {\n            async.settlePromises(this);\n        }\n    }\n};\n\nPromise.prototype._reject = function (reason) {\n    var bitField = this._bitField;\n    if (((bitField & 117506048) >>> 16)) return;\n    this._setRejected();\n    this._fulfillmentHandler0 = reason;\n\n    if (this._isFinal()) {\n        return async.fatalError(reason, util.isNode);\n    }\n\n    if ((bitField & 65535) > 0) {\n        async.settlePromises(this);\n    } else {\n        this._ensurePossibleRejectionHandled();\n    }\n};\n\nPromise.prototype._fulfillPromises = function (len, value) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._fulfillmentHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, value);\n    }\n};\n\nPromise.prototype._rejectPromises = function (len, reason) {\n    for (var i = 1; i < len; i++) {\n        var handler = this._rejectionHandlerAt(i);\n        var promise = this._promiseAt(i);\n        var receiver = this._receiverAt(i);\n        this._clearCallbackDataAtIndex(i);\n        this._settlePromise(promise, handler, receiver, reason);\n    }\n};\n\nPromise.prototype._settlePromises = function () {\n    var bitField = this._bitField;\n    var len = (bitField & 65535);\n\n    if (len > 0) {\n        if (((bitField & 16842752) !== 0)) {\n            var reason = this._fulfillmentHandler0;\n            this._settlePromise0(this._rejectionHandler0, reason, bitField);\n            this._rejectPromises(len, reason);\n        } else {\n            var value = this._rejectionHandler0;\n            this._settlePromise0(this._fulfillmentHandler0, value, bitField);\n            this._fulfillPromises(len, value);\n        }\n        this._setLength(0);\n    }\n    this._clearCancellationData();\n};\n\nPromise.prototype._settledValue = function() {\n    var bitField = this._bitField;\n    if (((bitField & 33554432) !== 0)) {\n        return this._rejectionHandler0;\n    } else if (((bitField & 16777216) !== 0)) {\n        return this._fulfillmentHandler0;\n    }\n};\n\nfunction deferResolve(v) {this.promise._resolveCallback(v);}\nfunction deferReject(v) {this.promise._rejectCallback(v, false);}\n\nPromise.defer = Promise.pending = function() {\n    debug.deprecated(\"Promise.defer\", \"new Promise\");\n    var promise = new Promise(INTERNAL);\n    return {\n        promise: promise,\n        resolve: deferResolve,\n        reject: deferReject\n    };\n};\n\nutil.notEnumerableProp(Promise,\n                       \"_makeSelfResolutionError\",\n                       makeSelfResolutionError);\n\n_dereq_(\"./method\")(Promise, INTERNAL, tryConvertToPromise, apiRejection,\n    debug);\n_dereq_(\"./bind\")(Promise, INTERNAL, tryConvertToPromise, debug);\n_dereq_(\"./cancel\")(Promise, PromiseArray, apiRejection, debug);\n_dereq_(\"./direct_resolve\")(Promise);\n_dereq_(\"./synchronous_inspection\")(Promise);\n_dereq_(\"./join\")(\n    Promise, PromiseArray, tryConvertToPromise, INTERNAL, async, getDomain);\nPromise.Promise = Promise;\nPromise.version = \"3.5.1\";\n_dereq_('./map.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./call_get.js')(Promise);\n_dereq_('./using.js')(Promise, apiRejection, tryConvertToPromise, createContext, INTERNAL, debug);\n_dereq_('./timers.js')(Promise, INTERNAL, debug);\n_dereq_('./generators.js')(Promise, apiRejection, INTERNAL, tryConvertToPromise, Proxyable, debug);\n_dereq_('./nodeify.js')(Promise);\n_dereq_('./promisify.js')(Promise, INTERNAL);\n_dereq_('./props.js')(Promise, PromiseArray, tryConvertToPromise, apiRejection);\n_dereq_('./race.js')(Promise, INTERNAL, tryConvertToPromise, apiRejection);\n_dereq_('./reduce.js')(Promise, PromiseArray, apiRejection, tryConvertToPromise, INTERNAL, debug);\n_dereq_('./settle.js')(Promise, PromiseArray, debug);\n_dereq_('./some.js')(Promise, PromiseArray, apiRejection);\n_dereq_('./filter.js')(Promise, INTERNAL);\n_dereq_('./each.js')(Promise, INTERNAL);\n_dereq_('./any.js')(Promise);\n                                                         \n    util.toFastProperties(Promise);                                          \n    util.toFastProperties(Promise.prototype);                                \n    function fillTypes(value) {                                              \n        var p = new Promise(INTERNAL);                                       \n        p._fulfillmentHandler0 = value;                                      \n        p._rejectionHandler0 = value;                                        \n        p._promise0 = value;                                                 \n        p._receiver0 = value;                                                \n    }                                                                        \n    // Complete slack tracking, opt out of field-type tracking and           \n    // stabilize map                                                         \n    fillTypes({a: 1});                                                       \n    fillTypes({b: 2});                                                       \n    fillTypes({c: 3});                                                       \n    fillTypes(1);                                                            \n    fillTypes(function(){});                                                 \n    fillTypes(undefined);                                                    \n    fillTypes(false);                                                        \n    fillTypes(new Promise(INTERNAL));                                        \n    debug.setBounds(Async.firstLineError, util.lastLineError);               \n    return Promise;                                                          \n\n};\n\n},{\"./any.js\":1,\"./async\":2,\"./bind\":3,\"./call_get.js\":5,\"./cancel\":6,\"./catch_filter\":7,\"./context\":8,\"./debuggability\":9,\"./direct_resolve\":10,\"./each.js\":11,\"./errors\":12,\"./es5\":13,\"./filter.js\":14,\"./finally\":15,\"./generators.js\":16,\"./join\":17,\"./map.js\":18,\"./method\":19,\"./nodeback\":20,\"./nodeify.js\":21,\"./promise_array\":23,\"./promisify.js\":24,\"./props.js\":25,\"./race.js\":27,\"./reduce.js\":28,\"./settle.js\":30,\"./some.js\":31,\"./synchronous_inspection\":32,\"./thenables\":33,\"./timers.js\":34,\"./using.js\":35,\"./util\":36}],23:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, tryConvertToPromise,\n    apiRejection, Proxyable) {\nvar util = _dereq_(\"./util\");\nvar isArray = util.isArray;\n\nfunction toResolutionValue(val) {\n    switch(val) {\n    case -2: return [];\n    case -3: return {};\n    case -6: return new Map();\n    }\n}\n\nfunction PromiseArray(values) {\n    var promise = this._promise = new Promise(INTERNAL);\n    if (values instanceof Promise) {\n        promise._propagateFrom(values, 3);\n    }\n    promise._setOnCancel(this);\n    this._values = values;\n    this._length = 0;\n    this._totalResolved = 0;\n    this._init(undefined, -2);\n}\nutil.inherits(PromiseArray, Proxyable);\n\nPromiseArray.prototype.length = function () {\n    return this._length;\n};\n\nPromiseArray.prototype.promise = function () {\n    return this._promise;\n};\n\nPromiseArray.prototype._init = function init(_, resolveValueIfEmpty) {\n    var values = tryConvertToPromise(this._values, this._promise);\n    if (values instanceof Promise) {\n        values = values._target();\n        var bitField = values._bitField;\n        ;\n        this._values = values;\n\n        if (((bitField & 50397184) === 0)) {\n            this._promise._setAsyncGuaranteed();\n            return values._then(\n                init,\n                this._reject,\n                undefined,\n                this,\n                resolveValueIfEmpty\n           );\n        } else if (((bitField & 33554432) !== 0)) {\n            values = values._value();\n        } else if (((bitField & 16777216) !== 0)) {\n            return this._reject(values._reason());\n        } else {\n            return this._cancel();\n        }\n    }\n    values = util.asArray(values);\n    if (values === null) {\n        var err = apiRejection(\n            \"expecting an array or an iterable object but got \" + util.classString(values)).reason();\n        this._promise._rejectCallback(err, false);\n        return;\n    }\n\n    if (values.length === 0) {\n        if (resolveValueIfEmpty === -5) {\n            this._resolveEmptyArray();\n        }\n        else {\n            this._resolve(toResolutionValue(resolveValueIfEmpty));\n        }\n        return;\n    }\n    this._iterate(values);\n};\n\nPromiseArray.prototype._iterate = function(values) {\n    var len = this.getActualLength(values.length);\n    this._length = len;\n    this._values = this.shouldCopyValues() ? new Array(len) : this._values;\n    var result = this._promise;\n    var isResolved = false;\n    var bitField = null;\n    for (var i = 0; i < len; ++i) {\n        var maybePromise = tryConvertToPromise(values[i], result);\n\n        if (maybePromise instanceof Promise) {\n            maybePromise = maybePromise._target();\n            bitField = maybePromise._bitField;\n        } else {\n            bitField = null;\n        }\n\n        if (isResolved) {\n            if (bitField !== null) {\n                maybePromise.suppressUnhandledRejections();\n            }\n        } else if (bitField !== null) {\n            if (((bitField & 50397184) === 0)) {\n                maybePromise._proxy(this, i);\n                this._values[i] = maybePromise;\n            } else if (((bitField & 33554432) !== 0)) {\n                isResolved = this._promiseFulfilled(maybePromise._value(), i);\n            } else if (((bitField & 16777216) !== 0)) {\n                isResolved = this._promiseRejected(maybePromise._reason(), i);\n            } else {\n                isResolved = this._promiseCancelled(i);\n            }\n        } else {\n            isResolved = this._promiseFulfilled(maybePromise, i);\n        }\n    }\n    if (!isResolved) result._setAsyncGuaranteed();\n};\n\nPromiseArray.prototype._isResolved = function () {\n    return this._values === null;\n};\n\nPromiseArray.prototype._resolve = function (value) {\n    this._values = null;\n    this._promise._fulfill(value);\n};\n\nPromiseArray.prototype._cancel = function() {\n    if (this._isResolved() || !this._promise._isCancellable()) return;\n    this._values = null;\n    this._promise._cancel();\n};\n\nPromiseArray.prototype._reject = function (reason) {\n    this._values = null;\n    this._promise._rejectCallback(reason, false);\n};\n\nPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nPromiseArray.prototype._promiseCancelled = function() {\n    this._cancel();\n    return true;\n};\n\nPromiseArray.prototype._promiseRejected = function (reason) {\n    this._totalResolved++;\n    this._reject(reason);\n    return true;\n};\n\nPromiseArray.prototype._resultCancelled = function() {\n    if (this._isResolved()) return;\n    var values = this._values;\n    this._cancel();\n    if (values instanceof Promise) {\n        values.cancel();\n    } else {\n        for (var i = 0; i < values.length; ++i) {\n            if (values[i] instanceof Promise) {\n                values[i].cancel();\n            }\n        }\n    }\n};\n\nPromiseArray.prototype.shouldCopyValues = function () {\n    return true;\n};\n\nPromiseArray.prototype.getActualLength = function (len) {\n    return len;\n};\n\nreturn PromiseArray;\n};\n\n},{\"./util\":36}],24:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar THIS = {};\nvar util = _dereq_(\"./util\");\nvar nodebackForPromise = _dereq_(\"./nodeback\");\nvar withAppended = util.withAppended;\nvar maybeWrapAsError = util.maybeWrapAsError;\nvar canEvaluate = util.canEvaluate;\nvar TypeError = _dereq_(\"./errors\").TypeError;\nvar defaultSuffix = \"Async\";\nvar defaultPromisified = {__isPromisified__: true};\nvar noCopyProps = [\n    \"arity\",    \"length\",\n    \"name\",\n    \"arguments\",\n    \"caller\",\n    \"callee\",\n    \"prototype\",\n    \"__isPromisified__\"\n];\nvar noCopyPropsPattern = new RegExp(\"^(?:\" + noCopyProps.join(\"|\") + \")$\");\n\nvar defaultFilter = function(name) {\n    return util.isIdentifier(name) &&\n        name.charAt(0) !== \"_\" &&\n        name !== \"constructor\";\n};\n\nfunction propsFilter(key) {\n    return !noCopyPropsPattern.test(key);\n}\n\nfunction isPromisified(fn) {\n    try {\n        return fn.__isPromisified__ === true;\n    }\n    catch (e) {\n        return false;\n    }\n}\n\nfunction hasPromisified(obj, key, suffix) {\n    var val = util.getDataPropertyOrDefault(obj, key + suffix,\n                                            defaultPromisified);\n    return val ? isPromisified(val) : false;\n}\nfunction checkValid(ret, suffix, suffixRegexp) {\n    for (var i = 0; i < ret.length; i += 2) {\n        var key = ret[i];\n        if (suffixRegexp.test(key)) {\n            var keyWithoutAsyncSuffix = key.replace(suffixRegexp, \"\");\n            for (var j = 0; j < ret.length; j += 2) {\n                if (ret[j] === keyWithoutAsyncSuffix) {\n                    throw new TypeError(\"Cannot promisify an API that has normal methods with '%s'-suffix\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\"\n                        .replace(\"%s\", suffix));\n                }\n            }\n        }\n    }\n}\n\nfunction promisifiableMethods(obj, suffix, suffixRegexp, filter) {\n    var keys = util.inheritedDataKeys(obj);\n    var ret = [];\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        var value = obj[key];\n        var passesDefaultFilter = filter === defaultFilter\n            ? true : defaultFilter(key, value, obj);\n        if (typeof value === \"function\" &&\n            !isPromisified(value) &&\n            !hasPromisified(obj, key, suffix) &&\n            filter(key, value, obj, passesDefaultFilter)) {\n            ret.push(key, value);\n        }\n    }\n    checkValid(ret, suffix, suffixRegexp);\n    return ret;\n}\n\nvar escapeIdentRegex = function(str) {\n    return str.replace(/([$])/, \"\\\\$\");\n};\n\nvar makeNodePromisifiedEval;\nif (!true) {\nvar switchCaseArgumentOrder = function(likelyArgumentCount) {\n    var ret = [likelyArgumentCount];\n    var min = Math.max(0, likelyArgumentCount - 1 - 3);\n    for(var i = likelyArgumentCount - 1; i >= min; --i) {\n        ret.push(i);\n    }\n    for(var i = likelyArgumentCount + 1; i <= 3; ++i) {\n        ret.push(i);\n    }\n    return ret;\n};\n\nvar argumentSequence = function(argumentCount) {\n    return util.filledRange(argumentCount, \"_arg\", \"\");\n};\n\nvar parameterDeclaration = function(parameterCount) {\n    return util.filledRange(\n        Math.max(parameterCount, 3), \"_arg\", \"\");\n};\n\nvar parameterCount = function(fn) {\n    if (typeof fn.length === \"number\") {\n        return Math.max(Math.min(fn.length, 1023 + 1), 0);\n    }\n    return 0;\n};\n\nmakeNodePromisifiedEval =\nfunction(callback, receiver, originalName, fn, _, multiArgs) {\n    var newParameterCount = Math.max(0, parameterCount(fn) - 1);\n    var argumentOrder = switchCaseArgumentOrder(newParameterCount);\n    var shouldProxyThis = typeof callback === \"string\" || receiver === THIS;\n\n    function generateCallForArgumentCount(count) {\n        var args = argumentSequence(count).join(\", \");\n        var comma = count > 0 ? \", \" : \"\";\n        var ret;\n        if (shouldProxyThis) {\n            ret = \"ret = callback.call(this, {{args}}, nodeback); break;\\n\";\n        } else {\n            ret = receiver === undefined\n                ? \"ret = callback({{args}}, nodeback); break;\\n\"\n                : \"ret = callback.call(receiver, {{args}}, nodeback); break;\\n\";\n        }\n        return ret.replace(\"{{args}}\", args).replace(\", \", comma);\n    }\n\n    function generateArgumentSwitchCase() {\n        var ret = \"\";\n        for (var i = 0; i < argumentOrder.length; ++i) {\n            ret += \"case \" + argumentOrder[i] +\":\" +\n                generateCallForArgumentCount(argumentOrder[i]);\n        }\n\n        ret += \"                                                             \\n\\\n        default:                                                             \\n\\\n            var args = new Array(len + 1);                                   \\n\\\n            var i = 0;                                                       \\n\\\n            for (var i = 0; i < len; ++i) {                                  \\n\\\n               args[i] = arguments[i];                                       \\n\\\n            }                                                                \\n\\\n            args[i] = nodeback;                                              \\n\\\n            [CodeForCall]                                                    \\n\\\n            break;                                                           \\n\\\n        \".replace(\"[CodeForCall]\", (shouldProxyThis\n                                ? \"ret = callback.apply(this, args);\\n\"\n                                : \"ret = callback.apply(receiver, args);\\n\"));\n        return ret;\n    }\n\n    var getFunctionCode = typeof callback === \"string\"\n                                ? (\"this != null ? this['\"+callback+\"'] : fn\")\n                                : \"fn\";\n    var body = \"'use strict';                                                \\n\\\n        var ret = function (Parameters) {                                    \\n\\\n            'use strict';                                                    \\n\\\n            var len = arguments.length;                                      \\n\\\n            var promise = new Promise(INTERNAL);                             \\n\\\n            promise._captureStackTrace();                                    \\n\\\n            var nodeback = nodebackForPromise(promise, \" + multiArgs + \");   \\n\\\n            var ret;                                                         \\n\\\n            var callback = tryCatch([GetFunctionCode]);                      \\n\\\n            switch(len) {                                                    \\n\\\n                [CodeForSwitchCase]                                          \\n\\\n            }                                                                \\n\\\n            if (ret === errorObj) {                                          \\n\\\n                promise._rejectCallback(maybeWrapAsError(ret.e), true, true);\\n\\\n            }                                                                \\n\\\n            if (!promise._isFateSealed()) promise._setAsyncGuaranteed();     \\n\\\n            return promise;                                                  \\n\\\n        };                                                                   \\n\\\n        notEnumerableProp(ret, '__isPromisified__', true);                   \\n\\\n        return ret;                                                          \\n\\\n    \".replace(\"[CodeForSwitchCase]\", generateArgumentSwitchCase())\n        .replace(\"[GetFunctionCode]\", getFunctionCode);\n    body = body.replace(\"Parameters\", parameterDeclaration(newParameterCount));\n    return new Function(\"Promise\",\n                        \"fn\",\n                        \"receiver\",\n                        \"withAppended\",\n                        \"maybeWrapAsError\",\n                        \"nodebackForPromise\",\n                        \"tryCatch\",\n                        \"errorObj\",\n                        \"notEnumerableProp\",\n                        \"INTERNAL\",\n                        body)(\n                    Promise,\n                    fn,\n                    receiver,\n                    withAppended,\n                    maybeWrapAsError,\n                    nodebackForPromise,\n                    util.tryCatch,\n                    util.errorObj,\n                    util.notEnumerableProp,\n                    INTERNAL);\n};\n}\n\nfunction makeNodePromisifiedClosure(callback, receiver, _, fn, __, multiArgs) {\n    var defaultThis = (function() {return this;})();\n    var method = callback;\n    if (typeof method === \"string\") {\n        callback = fn;\n    }\n    function promisified() {\n        var _receiver = receiver;\n        if (receiver === THIS) _receiver = this;\n        var promise = new Promise(INTERNAL);\n        promise._captureStackTrace();\n        var cb = typeof method === \"string\" && this !== defaultThis\n            ? this[method] : callback;\n        var fn = nodebackForPromise(promise, multiArgs);\n        try {\n            cb.apply(_receiver, withAppended(arguments, fn));\n        } catch(e) {\n            promise._rejectCallback(maybeWrapAsError(e), true, true);\n        }\n        if (!promise._isFateSealed()) promise._setAsyncGuaranteed();\n        return promise;\n    }\n    util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n    return promisified;\n}\n\nvar makeNodePromisified = canEvaluate\n    ? makeNodePromisifiedEval\n    : makeNodePromisifiedClosure;\n\nfunction promisifyAll(obj, suffix, filter, promisifier, multiArgs) {\n    var suffixRegexp = new RegExp(escapeIdentRegex(suffix) + \"$\");\n    var methods =\n        promisifiableMethods(obj, suffix, suffixRegexp, filter);\n\n    for (var i = 0, len = methods.length; i < len; i+= 2) {\n        var key = methods[i];\n        var fn = methods[i+1];\n        var promisifiedKey = key + suffix;\n        if (promisifier === makeNodePromisified) {\n            obj[promisifiedKey] =\n                makeNodePromisified(key, THIS, key, fn, suffix, multiArgs);\n        } else {\n            var promisified = promisifier(fn, function() {\n                return makeNodePromisified(key, THIS, key,\n                                           fn, suffix, multiArgs);\n            });\n            util.notEnumerableProp(promisified, \"__isPromisified__\", true);\n            obj[promisifiedKey] = promisified;\n        }\n    }\n    util.toFastProperties(obj);\n    return obj;\n}\n\nfunction promisify(callback, receiver, multiArgs) {\n    return makeNodePromisified(callback, receiver, undefined,\n                                callback, null, multiArgs);\n}\n\nPromise.promisify = function (fn, options) {\n    if (typeof fn !== \"function\") {\n        throw new TypeError(\"expecting a function but got \" + util.classString(fn));\n    }\n    if (isPromisified(fn)) {\n        return fn;\n    }\n    options = Object(options);\n    var receiver = options.context === undefined ? THIS : options.context;\n    var multiArgs = !!options.multiArgs;\n    var ret = promisify(fn, receiver, multiArgs);\n    util.copyDescriptors(fn, ret, propsFilter);\n    return ret;\n};\n\nPromise.promisifyAll = function (target, options) {\n    if (typeof target !== \"function\" && typeof target !== \"object\") {\n        throw new TypeError(\"the target of promisifyAll must be an object or a function\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    options = Object(options);\n    var multiArgs = !!options.multiArgs;\n    var suffix = options.suffix;\n    if (typeof suffix !== \"string\") suffix = defaultSuffix;\n    var filter = options.filter;\n    if (typeof filter !== \"function\") filter = defaultFilter;\n    var promisifier = options.promisifier;\n    if (typeof promisifier !== \"function\") promisifier = makeNodePromisified;\n\n    if (!util.isIdentifier(suffix)) {\n        throw new RangeError(\"suffix must be a valid identifier\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n\n    var keys = util.inheritedDataKeys(target);\n    for (var i = 0; i < keys.length; ++i) {\n        var value = target[keys[i]];\n        if (keys[i] !== \"constructor\" &&\n            util.isClass(value)) {\n            promisifyAll(value.prototype, suffix, filter, promisifier,\n                multiArgs);\n            promisifyAll(value, suffix, filter, promisifier, multiArgs);\n        }\n    }\n\n    return promisifyAll(target, suffix, filter, promisifier, multiArgs);\n};\n};\n\n\n},{\"./errors\":12,\"./nodeback\":20,\"./util\":36}],25:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, PromiseArray, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar isObject = util.isObject;\nvar es5 = _dereq_(\"./es5\");\nvar Es6Map;\nif (typeof Map === \"function\") Es6Map = Map;\n\nvar mapToEntries = (function() {\n    var index = 0;\n    var size = 0;\n\n    function extractEntry(value, key) {\n        this[index] = value;\n        this[index + size] = key;\n        index++;\n    }\n\n    return function mapToEntries(map) {\n        size = map.size;\n        index = 0;\n        var ret = new Array(map.size * 2);\n        map.forEach(extractEntry, ret);\n        return ret;\n    };\n})();\n\nvar entriesToMap = function(entries) {\n    var ret = new Es6Map();\n    var length = entries.length / 2 | 0;\n    for (var i = 0; i < length; ++i) {\n        var key = entries[length + i];\n        var value = entries[i];\n        ret.set(key, value);\n    }\n    return ret;\n};\n\nfunction PropertiesPromiseArray(obj) {\n    var isMap = false;\n    var entries;\n    if (Es6Map !== undefined && obj instanceof Es6Map) {\n        entries = mapToEntries(obj);\n        isMap = true;\n    } else {\n        var keys = es5.keys(obj);\n        var len = keys.length;\n        entries = new Array(len * 2);\n        for (var i = 0; i < len; ++i) {\n            var key = keys[i];\n            entries[i] = obj[key];\n            entries[i + len] = key;\n        }\n    }\n    this.constructor$(entries);\n    this._isMap = isMap;\n    this._init$(undefined, isMap ? -6 : -3);\n}\nutil.inherits(PropertiesPromiseArray, PromiseArray);\n\nPropertiesPromiseArray.prototype._init = function () {};\n\nPropertiesPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    this._values[index] = value;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        var val;\n        if (this._isMap) {\n            val = entriesToMap(this._values);\n        } else {\n            val = {};\n            var keyOffset = this.length();\n            for (var i = 0, len = this.length(); i < len; ++i) {\n                val[this._values[i + keyOffset]] = this._values[i];\n            }\n        }\n        this._resolve(val);\n        return true;\n    }\n    return false;\n};\n\nPropertiesPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nPropertiesPromiseArray.prototype.getActualLength = function (len) {\n    return len >> 1;\n};\n\nfunction props(promises) {\n    var ret;\n    var castValue = tryConvertToPromise(promises);\n\n    if (!isObject(castValue)) {\n        return apiRejection(\"cannot await properties of a non-object\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    } else if (castValue instanceof Promise) {\n        ret = castValue._then(\n            Promise.props, undefined, undefined, undefined, undefined);\n    } else {\n        ret = new PropertiesPromiseArray(castValue).promise();\n    }\n\n    if (castValue instanceof Promise) {\n        ret._propagateFrom(castValue, 2);\n    }\n    return ret;\n}\n\nPromise.prototype.props = function () {\n    return props(this);\n};\n\nPromise.props = function (promises) {\n    return props(promises);\n};\n};\n\n},{\"./es5\":13,\"./util\":36}],26:[function(_dereq_,module,exports){\n\"use strict\";\nfunction arrayMove(src, srcIndex, dst, dstIndex, len) {\n    for (var j = 0; j < len; ++j) {\n        dst[j + dstIndex] = src[j + srcIndex];\n        src[j + srcIndex] = void 0;\n    }\n}\n\nfunction Queue(capacity) {\n    this._capacity = capacity;\n    this._length = 0;\n    this._front = 0;\n}\n\nQueue.prototype._willBeOverCapacity = function (size) {\n    return this._capacity < size;\n};\n\nQueue.prototype._pushOne = function (arg) {\n    var length = this.length();\n    this._checkCapacity(length + 1);\n    var i = (this._front + length) & (this._capacity - 1);\n    this[i] = arg;\n    this._length = length + 1;\n};\n\nQueue.prototype.push = function (fn, receiver, arg) {\n    var length = this.length() + 3;\n    if (this._willBeOverCapacity(length)) {\n        this._pushOne(fn);\n        this._pushOne(receiver);\n        this._pushOne(arg);\n        return;\n    }\n    var j = this._front + length - 3;\n    this._checkCapacity(length);\n    var wrapMask = this._capacity - 1;\n    this[(j + 0) & wrapMask] = fn;\n    this[(j + 1) & wrapMask] = receiver;\n    this[(j + 2) & wrapMask] = arg;\n    this._length = length;\n};\n\nQueue.prototype.shift = function () {\n    var front = this._front,\n        ret = this[front];\n\n    this[front] = undefined;\n    this._front = (front + 1) & (this._capacity - 1);\n    this._length--;\n    return ret;\n};\n\nQueue.prototype.length = function () {\n    return this._length;\n};\n\nQueue.prototype._checkCapacity = function (size) {\n    if (this._capacity < size) {\n        this._resizeTo(this._capacity << 1);\n    }\n};\n\nQueue.prototype._resizeTo = function (capacity) {\n    var oldCapacity = this._capacity;\n    this._capacity = capacity;\n    var front = this._front;\n    var length = this._length;\n    var moveItemsCount = (front + length) & (oldCapacity - 1);\n    arrayMove(this, 0, this, oldCapacity, moveItemsCount);\n};\n\nmodule.exports = Queue;\n\n},{}],27:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(\n    Promise, INTERNAL, tryConvertToPromise, apiRejection) {\nvar util = _dereq_(\"./util\");\n\nvar raceLater = function (promise) {\n    return promise.then(function(array) {\n        return race(array, promise);\n    });\n};\n\nfunction race(promises, parent) {\n    var maybePromise = tryConvertToPromise(promises);\n\n    if (maybePromise instanceof Promise) {\n        return raceLater(maybePromise);\n    } else {\n        promises = util.asArray(promises);\n        if (promises === null)\n            return apiRejection(\"expecting an array or an iterable object but got \" + util.classString(promises));\n    }\n\n    var ret = new Promise(INTERNAL);\n    if (parent !== undefined) {\n        ret._propagateFrom(parent, 3);\n    }\n    var fulfill = ret._fulfill;\n    var reject = ret._reject;\n    for (var i = 0, len = promises.length; i < len; ++i) {\n        var val = promises[i];\n\n        if (val === undefined && !(i in promises)) {\n            continue;\n        }\n\n        Promise.cast(val)._then(fulfill, reject, undefined, ret, null);\n    }\n    return ret;\n}\n\nPromise.race = function (promises) {\n    return race(promises, undefined);\n};\n\nPromise.prototype.race = function () {\n    return race(this, undefined);\n};\n\n};\n\n},{\"./util\":36}],28:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise,\n                          PromiseArray,\n                          apiRejection,\n                          tryConvertToPromise,\n                          INTERNAL,\n                          debug) {\nvar getDomain = Promise._getDomain;\nvar util = _dereq_(\"./util\");\nvar tryCatch = util.tryCatch;\n\nfunction ReductionPromiseArray(promises, fn, initialValue, _each) {\n    this.constructor$(promises);\n    var domain = getDomain();\n    this._fn = domain === null ? fn : util.domainBind(domain, fn);\n    if (initialValue !== undefined) {\n        initialValue = Promise.resolve(initialValue);\n        initialValue._attachCancellationCallback(this);\n    }\n    this._initialValue = initialValue;\n    this._currentCancellable = null;\n    if(_each === INTERNAL) {\n        this._eachValues = Array(this._length);\n    } else if (_each === 0) {\n        this._eachValues = null;\n    } else {\n        this._eachValues = undefined;\n    }\n    this._promise._captureStackTrace();\n    this._init$(undefined, -5);\n}\nutil.inherits(ReductionPromiseArray, PromiseArray);\n\nReductionPromiseArray.prototype._gotAccum = function(accum) {\n    if (this._eachValues !== undefined && \n        this._eachValues !== null && \n        accum !== INTERNAL) {\n        this._eachValues.push(accum);\n    }\n};\n\nReductionPromiseArray.prototype._eachComplete = function(value) {\n    if (this._eachValues !== null) {\n        this._eachValues.push(value);\n    }\n    return this._eachValues;\n};\n\nReductionPromiseArray.prototype._init = function() {};\n\nReductionPromiseArray.prototype._resolveEmptyArray = function() {\n    this._resolve(this._eachValues !== undefined ? this._eachValues\n                                                 : this._initialValue);\n};\n\nReductionPromiseArray.prototype.shouldCopyValues = function () {\n    return false;\n};\n\nReductionPromiseArray.prototype._resolve = function(value) {\n    this._promise._resolveCallback(value);\n    this._values = null;\n};\n\nReductionPromiseArray.prototype._resultCancelled = function(sender) {\n    if (sender === this._initialValue) return this._cancel();\n    if (this._isResolved()) return;\n    this._resultCancelled$();\n    if (this._currentCancellable instanceof Promise) {\n        this._currentCancellable.cancel();\n    }\n    if (this._initialValue instanceof Promise) {\n        this._initialValue.cancel();\n    }\n};\n\nReductionPromiseArray.prototype._iterate = function (values) {\n    this._values = values;\n    var value;\n    var i;\n    var length = values.length;\n    if (this._initialValue !== undefined) {\n        value = this._initialValue;\n        i = 0;\n    } else {\n        value = Promise.resolve(values[0]);\n        i = 1;\n    }\n\n    this._currentCancellable = value;\n\n    if (!value.isRejected()) {\n        for (; i < length; ++i) {\n            var ctx = {\n                accum: null,\n                value: values[i],\n                index: i,\n                length: length,\n                array: this\n            };\n            value = value._then(gotAccum, undefined, undefined, ctx, undefined);\n        }\n    }\n\n    if (this._eachValues !== undefined) {\n        value = value\n            ._then(this._eachComplete, undefined, undefined, this, undefined);\n    }\n    value._then(completed, completed, undefined, value, this);\n};\n\nPromise.prototype.reduce = function (fn, initialValue) {\n    return reduce(this, fn, initialValue, null);\n};\n\nPromise.reduce = function (promises, fn, initialValue, _each) {\n    return reduce(promises, fn, initialValue, _each);\n};\n\nfunction completed(valueOrReason, array) {\n    if (this.isFulfilled()) {\n        array._resolve(valueOrReason);\n    } else {\n        array._reject(valueOrReason);\n    }\n}\n\nfunction reduce(promises, fn, initialValue, _each) {\n    if (typeof fn !== \"function\") {\n        return apiRejection(\"expecting a function but got \" + util.classString(fn));\n    }\n    var array = new ReductionPromiseArray(promises, fn, initialValue, _each);\n    return array.promise();\n}\n\nfunction gotAccum(accum) {\n    this.accum = accum;\n    this.array._gotAccum(accum);\n    var value = tryConvertToPromise(this.value, this.array._promise);\n    if (value instanceof Promise) {\n        this.array._currentCancellable = value;\n        return value._then(gotValue, undefined, undefined, this, undefined);\n    } else {\n        return gotValue.call(this, value);\n    }\n}\n\nfunction gotValue(value) {\n    var array = this.array;\n    var promise = array._promise;\n    var fn = tryCatch(array._fn);\n    promise._pushContext();\n    var ret;\n    if (array._eachValues !== undefined) {\n        ret = fn.call(promise._boundValue(), value, this.index, this.length);\n    } else {\n        ret = fn.call(promise._boundValue(),\n                              this.accum, value, this.index, this.length);\n    }\n    if (ret instanceof Promise) {\n        array._currentCancellable = ret;\n    }\n    var promiseCreated = promise._popContext();\n    debug.checkForgottenReturns(\n        ret,\n        promiseCreated,\n        array._eachValues !== undefined ? \"Promise.each\" : \"Promise.reduce\",\n        promise\n    );\n    return ret;\n}\n};\n\n},{\"./util\":36}],29:[function(_dereq_,module,exports){\n\"use strict\";\nvar util = _dereq_(\"./util\");\nvar schedule;\nvar noAsyncScheduler = function() {\n    throw new Error(\"No async scheduler available\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n};\nvar NativePromise = util.getNativePromise();\nif (util.isNode && typeof MutationObserver === \"undefined\") {\n    var GlobalSetImmediate = global.setImmediate;\n    var ProcessNextTick = process.nextTick;\n    schedule = util.isRecentNode\n                ? function(fn) { GlobalSetImmediate.call(global, fn); }\n                : function(fn) { ProcessNextTick.call(process, fn); };\n} else if (typeof NativePromise === \"function\" &&\n           typeof NativePromise.resolve === \"function\") {\n    var nativePromise = NativePromise.resolve();\n    schedule = function(fn) {\n        nativePromise.then(fn);\n    };\n} else if ((typeof MutationObserver !== \"undefined\") &&\n          !(typeof window !== \"undefined\" &&\n            window.navigator &&\n            (window.navigator.standalone || window.cordova))) {\n    schedule = (function() {\n        var div = document.createElement(\"div\");\n        var opts = {attributes: true};\n        var toggleScheduled = false;\n        var div2 = document.createElement(\"div\");\n        var o2 = new MutationObserver(function() {\n            div.classList.toggle(\"foo\");\n            toggleScheduled = false;\n        });\n        o2.observe(div2, opts);\n\n        var scheduleToggle = function() {\n            if (toggleScheduled) return;\n            toggleScheduled = true;\n            div2.classList.toggle(\"foo\");\n        };\n\n        return function schedule(fn) {\n            var o = new MutationObserver(function() {\n                o.disconnect();\n                fn();\n            });\n            o.observe(div, opts);\n            scheduleToggle();\n        };\n    })();\n} else if (typeof setImmediate !== \"undefined\") {\n    schedule = function (fn) {\n        setImmediate(fn);\n    };\n} else if (typeof setTimeout !== \"undefined\") {\n    schedule = function (fn) {\n        setTimeout(fn, 0);\n    };\n} else {\n    schedule = noAsyncScheduler;\n}\nmodule.exports = schedule;\n\n},{\"./util\":36}],30:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\n    function(Promise, PromiseArray, debug) {\nvar PromiseInspection = Promise.PromiseInspection;\nvar util = _dereq_(\"./util\");\n\nfunction SettledPromiseArray(values) {\n    this.constructor$(values);\n}\nutil.inherits(SettledPromiseArray, PromiseArray);\n\nSettledPromiseArray.prototype._promiseResolved = function (index, inspection) {\n    this._values[index] = inspection;\n    var totalResolved = ++this._totalResolved;\n    if (totalResolved >= this._length) {\n        this._resolve(this._values);\n        return true;\n    }\n    return false;\n};\n\nSettledPromiseArray.prototype._promiseFulfilled = function (value, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 33554432;\n    ret._settledValueField = value;\n    return this._promiseResolved(index, ret);\n};\nSettledPromiseArray.prototype._promiseRejected = function (reason, index) {\n    var ret = new PromiseInspection();\n    ret._bitField = 16777216;\n    ret._settledValueField = reason;\n    return this._promiseResolved(index, ret);\n};\n\nPromise.settle = function (promises) {\n    debug.deprecated(\".settle()\", \".reflect()\");\n    return new SettledPromiseArray(promises).promise();\n};\n\nPromise.prototype.settle = function () {\n    return Promise.settle(this);\n};\n};\n\n},{\"./util\":36}],31:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports =\nfunction(Promise, PromiseArray, apiRejection) {\nvar util = _dereq_(\"./util\");\nvar RangeError = _dereq_(\"./errors\").RangeError;\nvar AggregateError = _dereq_(\"./errors\").AggregateError;\nvar isArray = util.isArray;\nvar CANCELLATION = {};\n\n\nfunction SomePromiseArray(values) {\n    this.constructor$(values);\n    this._howMany = 0;\n    this._unwrap = false;\n    this._initialized = false;\n}\nutil.inherits(SomePromiseArray, PromiseArray);\n\nSomePromiseArray.prototype._init = function () {\n    if (!this._initialized) {\n        return;\n    }\n    if (this._howMany === 0) {\n        this._resolve([]);\n        return;\n    }\n    this._init$(undefined, -5);\n    var isArrayResolved = isArray(this._values);\n    if (!this._isResolved() &&\n        isArrayResolved &&\n        this._howMany > this._canPossiblyFulfill()) {\n        this._reject(this._getRangeError(this.length()));\n    }\n};\n\nSomePromiseArray.prototype.init = function () {\n    this._initialized = true;\n    this._init();\n};\n\nSomePromiseArray.prototype.setUnwrap = function () {\n    this._unwrap = true;\n};\n\nSomePromiseArray.prototype.howMany = function () {\n    return this._howMany;\n};\n\nSomePromiseArray.prototype.setHowMany = function (count) {\n    this._howMany = count;\n};\n\nSomePromiseArray.prototype._promiseFulfilled = function (value) {\n    this._addFulfilled(value);\n    if (this._fulfilled() === this.howMany()) {\n        this._values.length = this.howMany();\n        if (this.howMany() === 1 && this._unwrap) {\n            this._resolve(this._values[0]);\n        } else {\n            this._resolve(this._values);\n        }\n        return true;\n    }\n    return false;\n\n};\nSomePromiseArray.prototype._promiseRejected = function (reason) {\n    this._addRejected(reason);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._promiseCancelled = function () {\n    if (this._values instanceof Promise || this._values == null) {\n        return this._cancel();\n    }\n    this._addRejected(CANCELLATION);\n    return this._checkOutcome();\n};\n\nSomePromiseArray.prototype._checkOutcome = function() {\n    if (this.howMany() > this._canPossiblyFulfill()) {\n        var e = new AggregateError();\n        for (var i = this.length(); i < this._values.length; ++i) {\n            if (this._values[i] !== CANCELLATION) {\n                e.push(this._values[i]);\n            }\n        }\n        if (e.length > 0) {\n            this._reject(e);\n        } else {\n            this._cancel();\n        }\n        return true;\n    }\n    return false;\n};\n\nSomePromiseArray.prototype._fulfilled = function () {\n    return this._totalResolved;\n};\n\nSomePromiseArray.prototype._rejected = function () {\n    return this._values.length - this.length();\n};\n\nSomePromiseArray.prototype._addRejected = function (reason) {\n    this._values.push(reason);\n};\n\nSomePromiseArray.prototype._addFulfilled = function (value) {\n    this._values[this._totalResolved++] = value;\n};\n\nSomePromiseArray.prototype._canPossiblyFulfill = function () {\n    return this.length() - this._rejected();\n};\n\nSomePromiseArray.prototype._getRangeError = function (count) {\n    var message = \"Input array must contain at least \" +\n            this._howMany + \" items but contains only \" + count + \" items\";\n    return new RangeError(message);\n};\n\nSomePromiseArray.prototype._resolveEmptyArray = function () {\n    this._reject(this._getRangeError(0));\n};\n\nfunction some(promises, howMany) {\n    if ((howMany | 0) !== howMany || howMany < 0) {\n        return apiRejection(\"expecting a positive integer\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    var ret = new SomePromiseArray(promises);\n    var promise = ret.promise();\n    ret.setHowMany(howMany);\n    ret.init();\n    return promise;\n}\n\nPromise.some = function (promises, howMany) {\n    return some(promises, howMany);\n};\n\nPromise.prototype.some = function (howMany) {\n    return some(this, howMany);\n};\n\nPromise._SomePromiseArray = SomePromiseArray;\n};\n\n},{\"./errors\":12,\"./util\":36}],32:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise) {\nfunction PromiseInspection(promise) {\n    if (promise !== undefined) {\n        promise = promise._target();\n        this._bitField = promise._bitField;\n        this._settledValueField = promise._isFateSealed()\n            ? promise._settledValue() : undefined;\n    }\n    else {\n        this._bitField = 0;\n        this._settledValueField = undefined;\n    }\n}\n\nPromiseInspection.prototype._settledValue = function() {\n    return this._settledValueField;\n};\n\nvar value = PromiseInspection.prototype.value = function () {\n    if (!this.isFulfilled()) {\n        throw new TypeError(\"cannot get fulfillment value of a non-fulfilled promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar reason = PromiseInspection.prototype.error =\nPromiseInspection.prototype.reason = function () {\n    if (!this.isRejected()) {\n        throw new TypeError(\"cannot get rejection reason of a non-rejected promise\\u000a\\u000a    See http://goo.gl/MqrFmX\\u000a\");\n    }\n    return this._settledValue();\n};\n\nvar isFulfilled = PromiseInspection.prototype.isFulfilled = function() {\n    return (this._bitField & 33554432) !== 0;\n};\n\nvar isRejected = PromiseInspection.prototype.isRejected = function () {\n    return (this._bitField & 16777216) !== 0;\n};\n\nvar isPending = PromiseInspection.prototype.isPending = function () {\n    return (this._bitField & 50397184) === 0;\n};\n\nvar isResolved = PromiseInspection.prototype.isResolved = function () {\n    return (this._bitField & 50331648) !== 0;\n};\n\nPromiseInspection.prototype.isCancelled = function() {\n    return (this._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.__isCancelled = function() {\n    return (this._bitField & 65536) === 65536;\n};\n\nPromise.prototype._isCancelled = function() {\n    return this._target().__isCancelled();\n};\n\nPromise.prototype.isCancelled = function() {\n    return (this._target()._bitField & 8454144) !== 0;\n};\n\nPromise.prototype.isPending = function() {\n    return isPending.call(this._target());\n};\n\nPromise.prototype.isRejected = function() {\n    return isRejected.call(this._target());\n};\n\nPromise.prototype.isFulfilled = function() {\n    return isFulfilled.call(this._target());\n};\n\nPromise.prototype.isResolved = function() {\n    return isResolved.call(this._target());\n};\n\nPromise.prototype.value = function() {\n    return value.call(this._target());\n};\n\nPromise.prototype.reason = function() {\n    var target = this._target();\n    target._unsetRejectionIsUnhandled();\n    return reason.call(target);\n};\n\nPromise.prototype._value = function() {\n    return this._settledValue();\n};\n\nPromise.prototype._reason = function() {\n    this._unsetRejectionIsUnhandled();\n    return this._settledValue();\n};\n\nPromise.PromiseInspection = PromiseInspection;\n};\n\n},{}],33:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL) {\nvar util = _dereq_(\"./util\");\nvar errorObj = util.errorObj;\nvar isObject = util.isObject;\n\nfunction tryConvertToPromise(obj, context) {\n    if (isObject(obj)) {\n        if (obj instanceof Promise) return obj;\n        var then = getThen(obj);\n        if (then === errorObj) {\n            if (context) context._pushContext();\n            var ret = Promise.reject(then.e);\n            if (context) context._popContext();\n            return ret;\n        } else if (typeof then === \"function\") {\n            if (isAnyBluebirdPromise(obj)) {\n                var ret = new Promise(INTERNAL);\n                obj._then(\n                    ret._fulfill,\n                    ret._reject,\n                    undefined,\n                    ret,\n                    null\n                );\n                return ret;\n            }\n            return doThenable(obj, then, context);\n        }\n    }\n    return obj;\n}\n\nfunction doGetThen(obj) {\n    return obj.then;\n}\n\nfunction getThen(obj) {\n    try {\n        return doGetThen(obj);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\n\nvar hasProp = {}.hasOwnProperty;\nfunction isAnyBluebirdPromise(obj) {\n    try {\n        return hasProp.call(obj, \"_promise0\");\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction doThenable(x, then, context) {\n    var promise = new Promise(INTERNAL);\n    var ret = promise;\n    if (context) context._pushContext();\n    promise._captureStackTrace();\n    if (context) context._popContext();\n    var synchronous = true;\n    var result = util.tryCatch(then).call(x, resolve, reject);\n    synchronous = false;\n\n    if (promise && result === errorObj) {\n        promise._rejectCallback(result.e, true, true);\n        promise = null;\n    }\n\n    function resolve(value) {\n        if (!promise) return;\n        promise._resolveCallback(value);\n        promise = null;\n    }\n\n    function reject(reason) {\n        if (!promise) return;\n        promise._rejectCallback(reason, synchronous, true);\n        promise = null;\n    }\n    return ret;\n}\n\nreturn tryConvertToPromise;\n};\n\n},{\"./util\":36}],34:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function(Promise, INTERNAL, debug) {\nvar util = _dereq_(\"./util\");\nvar TimeoutError = Promise.TimeoutError;\n\nfunction HandleWrapper(handle)  {\n    this.handle = handle;\n}\n\nHandleWrapper.prototype._resultCancelled = function() {\n    clearTimeout(this.handle);\n};\n\nvar afterValue = function(value) { return delay(+this).thenReturn(value); };\nvar delay = Promise.delay = function (ms, value) {\n    var ret;\n    var handle;\n    if (value !== undefined) {\n        ret = Promise.resolve(value)\n                ._then(afterValue, null, null, ms, undefined);\n        if (debug.cancellation() && value instanceof Promise) {\n            ret._setOnCancel(value);\n        }\n    } else {\n        ret = new Promise(INTERNAL);\n        handle = setTimeout(function() { ret._fulfill(); }, +ms);\n        if (debug.cancellation()) {\n            ret._setOnCancel(new HandleWrapper(handle));\n        }\n        ret._captureStackTrace();\n    }\n    ret._setAsyncGuaranteed();\n    return ret;\n};\n\nPromise.prototype.delay = function (ms) {\n    return delay(ms, this);\n};\n\nvar afterTimeout = function (promise, message, parent) {\n    var err;\n    if (typeof message !== \"string\") {\n        if (message instanceof Error) {\n            err = message;\n        } else {\n            err = new TimeoutError(\"operation timed out\");\n        }\n    } else {\n        err = new TimeoutError(message);\n    }\n    util.markAsOriginatingFromRejection(err);\n    promise._attachExtraTrace(err);\n    promise._reject(err);\n\n    if (parent != null) {\n        parent.cancel();\n    }\n};\n\nfunction successClear(value) {\n    clearTimeout(this.handle);\n    return value;\n}\n\nfunction failureClear(reason) {\n    clearTimeout(this.handle);\n    throw reason;\n}\n\nPromise.prototype.timeout = function (ms, message) {\n    ms = +ms;\n    var ret, parent;\n\n    var handleWrapper = new HandleWrapper(setTimeout(function timeoutTimeout() {\n        if (ret.isPending()) {\n            afterTimeout(ret, message, parent);\n        }\n    }, ms));\n\n    if (debug.cancellation()) {\n        parent = this.then();\n        ret = parent._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n        ret._setOnCancel(handleWrapper);\n    } else {\n        ret = this._then(successClear, failureClear,\n                            undefined, handleWrapper, undefined);\n    }\n\n    return ret;\n};\n\n};\n\n},{\"./util\":36}],35:[function(_dereq_,module,exports){\n\"use strict\";\nmodule.exports = function (Promise, apiRejection, tryConvertToPromise,\n    createContext, INTERNAL, debug) {\n    var util = _dereq_(\"./util\");\n    var TypeError = _dereq_(\"./errors\").TypeError;\n    var inherits = _dereq_(\"./util\").inherits;\n    var errorObj = util.errorObj;\n    var tryCatch = util.tryCatch;\n    var NULL = {};\n\n    function thrower(e) {\n        setTimeout(function(){throw e;}, 0);\n    }\n\n    function castPreservingDisposable(thenable) {\n        var maybePromise = tryConvertToPromise(thenable);\n        if (maybePromise !== thenable &&\n            typeof thenable._isDisposable === \"function\" &&\n            typeof thenable._getDisposer === \"function\" &&\n            thenable._isDisposable()) {\n            maybePromise._setDisposable(thenable._getDisposer());\n        }\n        return maybePromise;\n    }\n    function dispose(resources, inspection) {\n        var i = 0;\n        var len = resources.length;\n        var ret = new Promise(INTERNAL);\n        function iterator() {\n            if (i >= len) return ret._fulfill();\n            var maybePromise = castPreservingDisposable(resources[i++]);\n            if (maybePromise instanceof Promise &&\n                maybePromise._isDisposable()) {\n                try {\n                    maybePromise = tryConvertToPromise(\n                        maybePromise._getDisposer().tryDispose(inspection),\n                        resources.promise);\n                } catch (e) {\n                    return thrower(e);\n                }\n                if (maybePromise instanceof Promise) {\n                    return maybePromise._then(iterator, thrower,\n                                              null, null, null);\n                }\n            }\n            iterator();\n        }\n        iterator();\n        return ret;\n    }\n\n    function Disposer(data, promise, context) {\n        this._data = data;\n        this._promise = promise;\n        this._context = context;\n    }\n\n    Disposer.prototype.data = function () {\n        return this._data;\n    };\n\n    Disposer.prototype.promise = function () {\n        return this._promise;\n    };\n\n    Disposer.prototype.resource = function () {\n        if (this.promise().isFulfilled()) {\n            return this.promise().value();\n        }\n        return NULL;\n    };\n\n    Disposer.prototype.tryDispose = function(inspection) {\n        var resource = this.resource();\n        var context = this._context;\n        if (context !== undefined) context._pushContext();\n        var ret = resource !== NULL\n            ? this.doDispose(resource, inspection) : null;\n        if (context !== undefined) context._popContext();\n        this._promise._unsetDisposable();\n        this._data = null;\n        return ret;\n    };\n\n    Disposer.isDisposer = function (d) {\n        return (d != null &&\n                typeof d.resource === \"function\" &&\n                typeof d.tryDispose === \"function\");\n    };\n\n    function FunctionDisposer(fn, promise, context) {\n        this.constructor$(fn, promise, context);\n    }\n    inherits(FunctionDisposer, Disposer);\n\n    FunctionDisposer.prototype.doDispose = function (resource, inspection) {\n        var fn = this.data();\n        return fn.call(resource, resource, inspection);\n    };\n\n    function maybeUnwrapDisposer(value) {\n        if (Disposer.isDisposer(value)) {\n            this.resources[this.index]._setDisposable(value);\n            return value.promise();\n        }\n        return value;\n    }\n\n    function ResourceList(length) {\n        this.length = length;\n        this.promise = null;\n        this[length-1] = null;\n    }\n\n    ResourceList.prototype._resultCancelled = function() {\n        var len = this.length;\n        for (var i = 0; i < len; ++i) {\n            var item = this[i];\n            if (item instanceof Promise) {\n                item.cancel();\n            }\n        }\n    };\n\n    Promise.using = function () {\n        var len = arguments.length;\n        if (len < 2) return apiRejection(\n                        \"you must pass at least 2 arguments to Promise.using\");\n        var fn = arguments[len - 1];\n        if (typeof fn !== \"function\") {\n            return apiRejection(\"expecting a function but got \" + util.classString(fn));\n        }\n        var input;\n        var spreadArgs = true;\n        if (len === 2 && Array.isArray(arguments[0])) {\n            input = arguments[0];\n            len = input.length;\n            spreadArgs = false;\n        } else {\n            input = arguments;\n            len--;\n        }\n        var resources = new ResourceList(len);\n        for (var i = 0; i < len; ++i) {\n            var resource = input[i];\n            if (Disposer.isDisposer(resource)) {\n                var disposer = resource;\n                resource = resource.promise();\n                resource._setDisposable(disposer);\n            } else {\n                var maybePromise = tryConvertToPromise(resource);\n                if (maybePromise instanceof Promise) {\n                    resource =\n                        maybePromise._then(maybeUnwrapDisposer, null, null, {\n                            resources: resources,\n                            index: i\n                    }, undefined);\n                }\n            }\n            resources[i] = resource;\n        }\n\n        var reflectedResources = new Array(resources.length);\n        for (var i = 0; i < reflectedResources.length; ++i) {\n            reflectedResources[i] = Promise.resolve(resources[i]).reflect();\n        }\n\n        var resultPromise = Promise.all(reflectedResources)\n            .then(function(inspections) {\n                for (var i = 0; i < inspections.length; ++i) {\n                    var inspection = inspections[i];\n                    if (inspection.isRejected()) {\n                        errorObj.e = inspection.error();\n                        return errorObj;\n                    } else if (!inspection.isFulfilled()) {\n                        resultPromise.cancel();\n                        return;\n                    }\n                    inspections[i] = inspection.value();\n                }\n                promise._pushContext();\n\n                fn = tryCatch(fn);\n                var ret = spreadArgs\n                    ? fn.apply(undefined, inspections) : fn(inspections);\n                var promiseCreated = promise._popContext();\n                debug.checkForgottenReturns(\n                    ret, promiseCreated, \"Promise.using\", promise);\n                return ret;\n            });\n\n        var promise = resultPromise.lastly(function() {\n            var inspection = new Promise.PromiseInspection(resultPromise);\n            return dispose(resources, inspection);\n        });\n        resources.promise = promise;\n        promise._setOnCancel(resources);\n        return promise;\n    };\n\n    Promise.prototype._setDisposable = function (disposer) {\n        this._bitField = this._bitField | 131072;\n        this._disposer = disposer;\n    };\n\n    Promise.prototype._isDisposable = function () {\n        return (this._bitField & 131072) > 0;\n    };\n\n    Promise.prototype._getDisposer = function () {\n        return this._disposer;\n    };\n\n    Promise.prototype._unsetDisposable = function () {\n        this._bitField = this._bitField & (~131072);\n        this._disposer = undefined;\n    };\n\n    Promise.prototype.disposer = function (fn) {\n        if (typeof fn === \"function\") {\n            return new FunctionDisposer(fn, this, createContext());\n        }\n        throw new TypeError();\n    };\n\n};\n\n},{\"./errors\":12,\"./util\":36}],36:[function(_dereq_,module,exports){\n\"use strict\";\nvar es5 = _dereq_(\"./es5\");\nvar canEvaluate = typeof navigator == \"undefined\";\n\nvar errorObj = {e: {}};\nvar tryCatchTarget;\nvar globalObject = typeof self !== \"undefined\" ? self :\n    typeof window !== \"undefined\" ? window :\n    typeof global !== \"undefined\" ? global :\n    this !== undefined ? this : null;\n\nfunction tryCatcher() {\n    try {\n        var target = tryCatchTarget;\n        tryCatchTarget = null;\n        return target.apply(this, arguments);\n    } catch (e) {\n        errorObj.e = e;\n        return errorObj;\n    }\n}\nfunction tryCatch(fn) {\n    tryCatchTarget = fn;\n    return tryCatcher;\n}\n\nvar inherits = function(Child, Parent) {\n    var hasProp = {}.hasOwnProperty;\n\n    function T() {\n        this.constructor = Child;\n        this.constructor$ = Parent;\n        for (var propertyName in Parent.prototype) {\n            if (hasProp.call(Parent.prototype, propertyName) &&\n                propertyName.charAt(propertyName.length-1) !== \"$\"\n           ) {\n                this[propertyName + \"$\"] = Parent.prototype[propertyName];\n            }\n        }\n    }\n    T.prototype = Parent.prototype;\n    Child.prototype = new T();\n    return Child.prototype;\n};\n\n\nfunction isPrimitive(val) {\n    return val == null || val === true || val === false ||\n        typeof val === \"string\" || typeof val === \"number\";\n\n}\n\nfunction isObject(value) {\n    return typeof value === \"function\" ||\n           typeof value === \"object\" && value !== null;\n}\n\nfunction maybeWrapAsError(maybeError) {\n    if (!isPrimitive(maybeError)) return maybeError;\n\n    return new Error(safeToString(maybeError));\n}\n\nfunction withAppended(target, appendee) {\n    var len = target.length;\n    var ret = new Array(len + 1);\n    var i;\n    for (i = 0; i < len; ++i) {\n        ret[i] = target[i];\n    }\n    ret[i] = appendee;\n    return ret;\n}\n\nfunction getDataPropertyOrDefault(obj, key, defaultValue) {\n    if (es5.isES5) {\n        var desc = Object.getOwnPropertyDescriptor(obj, key);\n\n        if (desc != null) {\n            return desc.get == null && desc.set == null\n                    ? desc.value\n                    : defaultValue;\n        }\n    } else {\n        return {}.hasOwnProperty.call(obj, key) ? obj[key] : undefined;\n    }\n}\n\nfunction notEnumerableProp(obj, name, value) {\n    if (isPrimitive(obj)) return obj;\n    var descriptor = {\n        value: value,\n        configurable: true,\n        enumerable: false,\n        writable: true\n    };\n    es5.defineProperty(obj, name, descriptor);\n    return obj;\n}\n\nfunction thrower(r) {\n    throw r;\n}\n\nvar inheritedDataKeys = (function() {\n    var excludedPrototypes = [\n        Array.prototype,\n        Object.prototype,\n        Function.prototype\n    ];\n\n    var isExcludedProto = function(val) {\n        for (var i = 0; i < excludedPrototypes.length; ++i) {\n            if (excludedPrototypes[i] === val) {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    if (es5.isES5) {\n        var getKeys = Object.getOwnPropertyNames;\n        return function(obj) {\n            var ret = [];\n            var visitedKeys = Object.create(null);\n            while (obj != null && !isExcludedProto(obj)) {\n                var keys;\n                try {\n                    keys = getKeys(obj);\n                } catch (e) {\n                    return ret;\n                }\n                for (var i = 0; i < keys.length; ++i) {\n                    var key = keys[i];\n                    if (visitedKeys[key]) continue;\n                    visitedKeys[key] = true;\n                    var desc = Object.getOwnPropertyDescriptor(obj, key);\n                    if (desc != null && desc.get == null && desc.set == null) {\n                        ret.push(key);\n                    }\n                }\n                obj = es5.getPrototypeOf(obj);\n            }\n            return ret;\n        };\n    } else {\n        var hasProp = {}.hasOwnProperty;\n        return function(obj) {\n            if (isExcludedProto(obj)) return [];\n            var ret = [];\n\n            /*jshint forin:false */\n            enumeration: for (var key in obj) {\n                if (hasProp.call(obj, key)) {\n                    ret.push(key);\n                } else {\n                    for (var i = 0; i < excludedPrototypes.length; ++i) {\n                        if (hasProp.call(excludedPrototypes[i], key)) {\n                            continue enumeration;\n                        }\n                    }\n                    ret.push(key);\n                }\n            }\n            return ret;\n        };\n    }\n\n})();\n\nvar thisAssignmentPattern = /this\\s*\\.\\s*\\S+\\s*=/;\nfunction isClass(fn) {\n    try {\n        if (typeof fn === \"function\") {\n            var keys = es5.names(fn.prototype);\n\n            var hasMethods = es5.isES5 && keys.length > 1;\n            var hasMethodsOtherThanConstructor = keys.length > 0 &&\n                !(keys.length === 1 && keys[0] === \"constructor\");\n            var hasThisAssignmentAndStaticMethods =\n                thisAssignmentPattern.test(fn + \"\") && es5.names(fn).length > 0;\n\n            if (hasMethods || hasMethodsOtherThanConstructor ||\n                hasThisAssignmentAndStaticMethods) {\n                return true;\n            }\n        }\n        return false;\n    } catch (e) {\n        return false;\n    }\n}\n\nfunction toFastProperties(obj) {\n    /*jshint -W027,-W055,-W031*/\n    function FakeConstructor() {}\n    FakeConstructor.prototype = obj;\n    var l = 8;\n    while (l--) new FakeConstructor();\n    return obj;\n    eval(obj);\n}\n\nvar rident = /^[a-z$_][a-z$_0-9]*$/i;\nfunction isIdentifier(str) {\n    return rident.test(str);\n}\n\nfunction filledRange(count, prefix, suffix) {\n    var ret = new Array(count);\n    for(var i = 0; i < count; ++i) {\n        ret[i] = prefix + i + suffix;\n    }\n    return ret;\n}\n\nfunction safeToString(obj) {\n    try {\n        return obj + \"\";\n    } catch (e) {\n        return \"[no string representation]\";\n    }\n}\n\nfunction isError(obj) {\n    return obj instanceof Error ||\n        (obj !== null &&\n           typeof obj === \"object\" &&\n           typeof obj.message === \"string\" &&\n           typeof obj.name === \"string\");\n}\n\nfunction markAsOriginatingFromRejection(e) {\n    try {\n        notEnumerableProp(e, \"isOperational\", true);\n    }\n    catch(ignore) {}\n}\n\nfunction originatesFromRejection(e) {\n    if (e == null) return false;\n    return ((e instanceof Error[\"__BluebirdErrorTypes__\"].OperationalError) ||\n        e[\"isOperational\"] === true);\n}\n\nfunction canAttachTrace(obj) {\n    return isError(obj) && es5.propertyIsWritable(obj, \"stack\");\n}\n\nvar ensureErrorObject = (function() {\n    if (!(\"stack\" in new Error())) {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            try {throw new Error(safeToString(value));}\n            catch(err) {return err;}\n        };\n    } else {\n        return function(value) {\n            if (canAttachTrace(value)) return value;\n            return new Error(safeToString(value));\n        };\n    }\n})();\n\nfunction classString(obj) {\n    return {}.toString.call(obj);\n}\n\nfunction copyDescriptors(from, to, filter) {\n    var keys = es5.names(from);\n    for (var i = 0; i < keys.length; ++i) {\n        var key = keys[i];\n        if (filter(key)) {\n            try {\n                es5.defineProperty(to, key, es5.getDescriptor(from, key));\n            } catch (ignore) {}\n        }\n    }\n}\n\nvar asArray = function(v) {\n    if (es5.isArray(v)) {\n        return v;\n    }\n    return null;\n};\n\nif (typeof Symbol !== \"undefined\" && Symbol.iterator) {\n    var ArrayFrom = typeof Array.from === \"function\" ? function(v) {\n        return Array.from(v);\n    } : function(v) {\n        var ret = [];\n        var it = v[Symbol.iterator]();\n        var itResult;\n        while (!((itResult = it.next()).done)) {\n            ret.push(itResult.value);\n        }\n        return ret;\n    };\n\n    asArray = function(v) {\n        if (es5.isArray(v)) {\n            return v;\n        } else if (v != null && typeof v[Symbol.iterator] === \"function\") {\n            return ArrayFrom(v);\n        }\n        return null;\n    };\n}\n\nvar isNode = typeof process !== \"undefined\" &&\n        classString(process).toLowerCase() === \"[object process]\";\n\nvar hasEnvVariables = typeof process !== \"undefined\" &&\n    typeof process.env !== \"undefined\";\n\nfunction env(key) {\n    return hasEnvVariables ? process.env[key] : undefined;\n}\n\nfunction getNativePromise() {\n    if (typeof Promise === \"function\") {\n        try {\n            var promise = new Promise(function(){});\n            if ({}.toString.call(promise) === \"[object Promise]\") {\n                return Promise;\n            }\n        } catch (e) {}\n    }\n}\n\nfunction domainBind(self, cb) {\n    return self.bind(cb);\n}\n\nvar ret = {\n    isClass: isClass,\n    isIdentifier: isIdentifier,\n    inheritedDataKeys: inheritedDataKeys,\n    getDataPropertyOrDefault: getDataPropertyOrDefault,\n    thrower: thrower,\n    isArray: es5.isArray,\n    asArray: asArray,\n    notEnumerableProp: notEnumerableProp,\n    isPrimitive: isPrimitive,\n    isObject: isObject,\n    isError: isError,\n    canEvaluate: canEvaluate,\n    errorObj: errorObj,\n    tryCatch: tryCatch,\n    inherits: inherits,\n    withAppended: withAppended,\n    maybeWrapAsError: maybeWrapAsError,\n    toFastProperties: toFastProperties,\n    filledRange: filledRange,\n    toString: safeToString,\n    canAttachTrace: canAttachTrace,\n    ensureErrorObject: ensureErrorObject,\n    originatesFromRejection: originatesFromRejection,\n    markAsOriginatingFromRejection: markAsOriginatingFromRejection,\n    classString: classString,\n    copyDescriptors: copyDescriptors,\n    hasDevTools: typeof chrome !== \"undefined\" && chrome &&\n                 typeof chrome.loadTimes === \"function\",\n    isNode: isNode,\n    hasEnvVariables: hasEnvVariables,\n    env: env,\n    global: globalObject,\n    getNativePromise: getNativePromise,\n    domainBind: domainBind\n};\nret.isRecentNode = ret.isNode && (function() {\n    var version = process.versions.node.split(\".\").map(Number);\n    return (version[0] === 0 && version[1] > 10) || (version[0] > 0);\n})();\n\nif (ret.isNode) ret.toFastProperties(process);\n\ntry {throw new Error(); } catch (e) {ret.lastLineError = e;}\nmodule.exports = ret;\n\n},{\"./es5\":13}]},{},[4])(4)\n});                    ;if (typeof window !== 'undefined' && window !== null) {                               window.P = window.Promise;                                                     } else if (typeof self !== 'undefined' && self !== null) {                             self.P = self.Promise;                                                         }\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/bluebird/js/browser/bluebird.js\n// module id = 25\n// module chunks = 0","/**\n * The events for the connection.\n */\n\n/**\n * Indicates that the connection has been disconnected. The event provides\n * the following parameters to its listeners:\n *\n * @param msg {string} a message associated with the disconnect such as the\n * last (known) error message\n */\nexport const CONNECTION_DISCONNECTED = 'connection.connectionDisconnected';\n\n/**\n * Indicates that the connection has been established. The event provides\n * the following parameters to its listeners:\n *\n * @param id {string} the ID of the local endpoint/participant/peer (within\n * the context of the established connection)\n */\nexport const CONNECTION_ESTABLISHED = 'connection.connectionEstablished';\n\n/**\n * Indicates that the connection has been failed for some reason. The event\n * provides the following parameters to its listeners:\n *\n * @param err {string} the error (message) associated with the failure\n */\nexport const CONNECTION_FAILED = 'connection.connectionFailed';\n\n/**\n * Indicates that the performed action cannot be executed because the\n * connection is not in the correct state(connected, disconnected, etc.)\n */\nexport const WRONG_STATE = 'connection.wrongState';\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiConnectionEvents.js","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\n\nimport BridgeChannel from './BridgeChannel';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport JitsiLocalTrack from './JitsiLocalTrack';\nimport JitsiTrackError from '../../JitsiTrackError';\nimport * as JitsiTrackErrors from '../../JitsiTrackErrors';\nimport Listenable from '../util/Listenable';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCBrowserType from './RTCBrowserType';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport RTCUtils from './RTCUtils';\nimport Statistics from '../statistics/statistics';\nimport TraceablePeerConnection from './TraceablePeerConnection';\nimport VideoType from '../../service/RTC/VideoType';\n\nconst logger = getLogger(__filename);\n\nlet rtcTrackIdCounter = 0;\n\n/**\n *\n * @param tracksInfo\n * @param options\n */\nfunction createLocalTracks(tracksInfo, options) {\n    const newTracks = [];\n    let deviceId = null;\n\n    tracksInfo.forEach(trackInfo => {\n        if (trackInfo.mediaType === MediaType.AUDIO) {\n            deviceId = options.micDeviceId;\n        } else if (trackInfo.videoType === VideoType.CAMERA) {\n            deviceId = options.cameraDeviceId;\n        }\n        rtcTrackIdCounter += 1;\n        const localTrack = new JitsiLocalTrack({\n            ...trackInfo,\n            deviceId,\n            facingMode: options.facingMode,\n            rtcId: rtcTrackIdCounter\n        });\n\n        newTracks.push(localTrack);\n    });\n\n    return newTracks;\n}\n\n/**\n * Creates {@code JitsiLocalTrack} instances from the passed in meta information\n * about MedieaTracks.\n *\n * @param {Object[]} mediaStreamMetaData - An array of meta information with\n * MediaTrack instances. Each can look like:\n * {{\n *     stream: MediaStream instance that holds a track with audio or video,\n *     track: MediaTrack within the MediaStream,\n *     videoType: \"camera\" or \"desktop\" or falsy,\n *     sourceId: ID of the desktopsharing source,\n *     sourceType: The desktopsharing source type\n * }}\n */\nfunction _newCreateLocalTracks(mediaStreamMetaData = []) {\n    return mediaStreamMetaData.map(metaData => {\n        const {\n            sourceId,\n            sourceType,\n            stream,\n            track,\n            videoType\n        } = metaData;\n\n        const { deviceId, facingMode } = track.getSettings();\n\n        // FIXME Move rtcTrackIdCounter to a static method in JitsiLocalTrack\n        // so RTC does not need to handle ID management. This move would be\n        // safer to do once the old createLocalTracks is removed.\n        rtcTrackIdCounter += 1;\n\n        return new JitsiLocalTrack({\n            deviceId,\n            facingMode,\n            mediaType: track.kind,\n            rtcId: rtcTrackIdCounter,\n            sourceId,\n            sourceType,\n            stream,\n            track,\n            videoType: videoType || null\n        });\n    });\n}\n\n/**\n *\n */\nexport default class RTC extends Listenable {\n    /**\n     *\n     * @param conference\n     * @param options\n     */\n    constructor(conference, options = {}) {\n        super();\n        this.conference = conference;\n\n        /**\n         * A map of active <tt>TraceablePeerConnection</tt>.\n         * @type {Map.<number, TraceablePeerConnection>}\n         */\n        this.peerConnections = new Map();\n\n        /**\n         * The counter used to generated id numbers assigned to peer connections\n         * @type {number}\n         */\n        this.peerConnectionIdCounter = 1;\n\n        this.localTracks = [];\n\n        this.options = options;\n\n        // BridgeChannel instance.\n        // @private\n        // @type {BridgeChannel}\n        this._channel = null;\n\n        // A flag whether we had received that the channel had opened we can\n        // get this flag out of sync if for some reason channel got closed\n        // from server, a desired behaviour so we can see errors when this\n        // happen.\n        // @private\n        // @type {boolean}\n        this._channelOpen = false;\n\n        /**\n         * The value specified to the last invocation of setLastN before the\n         * channel completed opening. If non-null, the value will be sent\n         * through a channel (once) as soon as it opens and will then be\n         * discarded.\n         * @private\n         * @type {number}\n         */\n        this._lastN = -1;\n\n        /**\n         * Defines the last N endpoints list. It can be null or an array once\n         * initialised with a channel last N event.\n         * @type {Array<string>|null}\n         * @private\n         */\n        this._lastNEndpoints = null;\n\n        /**\n         * The endpoint ID of currently pinned participant or <tt>null</tt> if\n         * no user is pinned.\n         * @type {string|null}\n         * @private\n         */\n        this._pinnedEndpoint = null;\n\n        /**\n         * The endpoint ID of currently selected participant or <tt>null</tt> if\n         * no user is selected.\n         * @type {string|null}\n         * @private\n         */\n        this._selectedEndpoint = null;\n\n        // The last N change listener.\n        this._lastNChangeListener = this._onLastNChanged.bind(this);\n\n        // Switch audio output device on all remote audio tracks. Local audio\n        // tracks handle this event by themselves.\n        if (RTCUtils.isDeviceChangeAvailable('output')) {\n            RTCUtils.addListener(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                deviceId => this._updateAudioOutputForAudioTracks(deviceId));\n\n            RTCUtils.addListener(\n                RTCEvents.DEVICE_LIST_CHANGED,\n                () => this._updateAudioOutputForAudioTracks(\n                    RTCUtils.getAudioOutputDevice()));\n        }\n    }\n\n    /**\n     * Creates the local MediaStreams.\n     * @param {object} [options] Optional parameters.\n     * @param {array} options.devices The devices that will be requested.\n     * @param {string} options.resolution Resolution constraints.\n     * @param {bool} options.dontCreateJitsiTrack If <tt>true</tt> objects with\n     *     the following structure {stream: the Media Stream, type: \"audio\" or\n     *     \"video\", videoType: \"camera\" or \"desktop\"} will be returned trough\n     *     the Promise, otherwise JitsiTrack objects will be returned.\n     * @param {string} options.cameraDeviceId\n     * @param {string} options.micDeviceId\n     * @returns {*} Promise object that will receive the new JitsiTracks\n     */\n    static obtainAudioAndVideoPermissions(options) {\n        const usesNewGumFlow = RTCBrowserType.usesNewGumFlow();\n        const obtainMediaPromise = usesNewGumFlow\n            ? RTCUtils.newObtainAudioAndVideoPermissions(options)\n            : RTCUtils.obtainAudioAndVideoPermissions(options);\n\n        return obtainMediaPromise.then(\n            tracksInfo => {\n                const tracks = usesNewGumFlow\n                    ? _newCreateLocalTracks(tracksInfo)\n                    : createLocalTracks(tracksInfo, options);\n\n                return tracks.some(track => !track._isReceivingData())\n                    ? Promise.reject(\n                        new JitsiTrackError(\n                            JitsiTrackErrors.NO_DATA_FROM_SOURCE))\n                    : tracks;\n            });\n    }\n\n    /**\n     * Initializes the bridge channel of this instance.\n     * At least one of both, peerconnection or wsUrl parameters, must be\n     * given.\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\n     * instance.\n     * @param {string} [wsUrl] WebSocket URL.\n     */\n    initializeBridgeChannel(peerconnection, wsUrl) {\n        this._channel = new BridgeChannel(\n            peerconnection, wsUrl, this.eventEmitter);\n\n        this._channelOpenListener = () => {\n            // Mark that channel as opened.\n            this._channelOpen = true;\n\n            // When the channel becomes available, tell the bridge about\n            // video selections so that it can do adaptive simulcast,\n            // we want the notification to trigger even if userJid\n            // is undefined, or null.\n            try {\n                this._channel.sendPinnedEndpointMessage(\n                    this._pinnedEndpoint);\n                this._channel.sendSelectedEndpointMessage(\n                    this._selectedEndpoint);\n            } catch (error) {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error(\n                    `Cannot send selected(${this._selectedEndpoint})`\n                    + `pinned(${this._pinnedEndpoint}) endpoint message.`,\n                    error);\n            }\n\n            this.removeListener(RTCEvents.DATA_CHANNEL_OPEN,\n                this._channelOpenListener);\n            this._channelOpenListener = null;\n\n            // If setLastN was invoked before the bridge channel completed\n            // opening, apply the specified value now that the channel\n            // is open. NOTE that -1 is the default value assumed by both\n            // RTC module and the JVB.\n            if (this._lastN !== -1) {\n                this._channel.sendSetLastNMessage(this._lastN);\n            }\n        };\n\n        this.addListener(RTCEvents.DATA_CHANNEL_OPEN,\n            this._channelOpenListener);\n\n        // Add Last N change listener.\n        this.addListener(RTCEvents.LASTN_ENDPOINT_CHANGED,\n            this._lastNChangeListener);\n    }\n\n    /**\n     * Receives events when Last N had changed.\n     * @param {array} lastNEndpoints The new Last N endpoints.\n     * @private\n     */\n    _onLastNChanged(lastNEndpoints = []) {\n        const oldLastNEndpoints = this._lastNEndpoints || [];\n        let leavingLastNEndpoints = [];\n        let enteringLastNEndpoints = [];\n\n        this._lastNEndpoints = lastNEndpoints;\n\n        leavingLastNEndpoints = oldLastNEndpoints.filter(\n            id => !this.isInLastN(id));\n\n        enteringLastNEndpoints = lastNEndpoints.filter(\n            id => oldLastNEndpoints.indexOf(id) === -1);\n\n        this.conference.eventEmitter.emit(\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\n            leavingLastNEndpoints,\n            enteringLastNEndpoints);\n    }\n\n    /**\n     * Should be called when current media session ends and after the\n     * PeerConnection has been closed using PeerConnection.close() method.\n     */\n    onCallEnded() {\n        if (this._channel) {\n            // The BridgeChannel is not explicitly closed as the PeerConnection\n            // is closed on call ended which triggers datachannel onclose\n            // events. If using a WebSocket, the channel must be closed since\n            // it is not managed by the PeerConnection.\n            // The reference is cleared to disable any logic related to the\n            // channel.\n            if (this._channel && this._channel.mode === 'websocket') {\n                this._channel.close();\n            }\n\n            this._channel = null;\n            this._channelOpen = false;\n        }\n    }\n\n    /**\n     * Sets the maximum video size the local participant should receive from\n     * remote participants. Will no-op if no data channel has been established.\n     *\n     * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\n     * this receiver is willing to receive.\n     * @returns {void}\n     */\n    setReceiverVideoConstraint(maxFrameHeight) {\n        if (this._channel) {\n            this._channel.sendReceiverVideoConstraintMessage(maxFrameHeight);\n        }\n    }\n\n    /**\n     * Elects the participant with the given id to be the selected participant\n     * in order to always receive video for this participant (even when last n\n     * is enabled).\n     * If there is no channel we store it and send it through the channel once\n     * it is created.\n     * @param {string} id The user id.\n     * @throws NetworkError or InvalidStateError or Error if the operation\n     * fails.\n     */\n    selectEndpoint(id) {\n        // Cache the value if channel is missing, till we open it.\n        this._selectedEndpoint = id;\n        if (this._channel && this._channelOpen) {\n            this._channel.sendSelectedEndpointMessage(id);\n        }\n    }\n\n    /**\n     * Elects the participant with the given id to be the pinned participant in\n     * order to always receive video for this participant (even when last n is\n     * enabled).\n     * @param {stirng} id The user id.\n     * @throws NetworkError or InvalidStateError or Error if the operation\n     * fails.\n     */\n    pinEndpoint(id) {\n        // Cache the value if channel is missing, till we open it.\n        this._pinnedEndpoint = id;\n        if (this._channel && this._channelOpen) {\n            this._channel.sendPinnedEndpointMessage(id);\n        }\n    }\n\n    /**\n     *\n     * @param eventType\n     * @param listener\n     */\n    static addListener(eventType, listener) {\n        RTCUtils.addListener(eventType, listener);\n    }\n\n    /**\n     *\n     * @param eventType\n     * @param listener\n     */\n    static removeListener(eventType, listener) {\n        RTCUtils.removeListener(eventType, listener);\n    }\n\n    /**\n     *\n     */\n    static isRTCReady() {\n        return RTCUtils.isRTCReady();\n    }\n\n    /**\n     *\n     * @param options\n     */\n    static init(options = {}) {\n        this.options = options;\n\n        return RTCUtils.init(this.options);\n    }\n\n    /**\n     *\n     */\n    static getDeviceAvailability() {\n        return RTCUtils.getDeviceAvailability();\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Creates new <tt>TraceablePeerConnection</tt>\n     * @param {SignalingLayer} signaling The signaling layer that will\n     *      provide information about the media or participants which is not\n     *      carried over SDP.\n     * @param {object} iceConfig An object describing the ICE config like\n     *      defined in the WebRTC specification.\n     * @param {boolean} isP2P Indicates whether or not the new TPC will be used\n     *      in a peer to peer type of session.\n     * @param {object} options The config options.\n     * @param {boolean} options.disableSimulcast If set to 'true' will disable\n     *      the simulcast.\n     * @param {boolean} options.disableRtx If set to 'true' will disable the\n     *      RTX.\n     * @param {boolean} options.disableH264 If set to 'true' H264 will be\n     *      disabled by removing it from the SDP.\n     * @param {boolean} options.preferH264 If set to 'true' H264 will be\n     *      preferred over other video codecs.\n     * @return {TraceablePeerConnection}\n     */\n    createPeerConnection(signaling, iceConfig, isP2P, options) {\n        const pcConstraints = RTC.getPCConstraints(isP2P);\n\n        if (typeof options.abtestSuspendVideo !== 'undefined') {\n            RTCUtils.setSuspendVideo(pcConstraints, options.abtestSuspendVideo);\n\n            Statistics.analytics.addPermanentProperties(\n                { abtestSuspendVideo: options.abtestSuspendVideo });\n        }\n\n        const newConnection\n            = new TraceablePeerConnection(\n                this,\n                this.peerConnectionIdCounter,\n                signaling,\n                iceConfig, pcConstraints,\n                isP2P, options);\n\n        this.peerConnections.set(newConnection.id, newConnection);\n        this.peerConnectionIdCounter += 1;\n\n        return newConnection;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Removed given peer connection from this RTC module instance.\n     * @param {TraceablePeerConnection} traceablePeerConnection\n     * @return {boolean} <tt>true</tt> if the given peer connection was removed\n     * successfully or <tt>false</tt> if there was no peer connection mapped in\n     * this RTC instance.\n     */\n    _removePeerConnection(traceablePeerConnection) {\n        const id = traceablePeerConnection.id;\n\n        if (this.peerConnections.has(id)) {\n            // NOTE Remote tracks are not removed here.\n            this.peerConnections.delete(id);\n\n            return true;\n        }\n\n        return false;\n\n    }\n\n    /**\n     *\n     * @param track\n     */\n    addLocalTrack(track) {\n        if (!track) {\n            throw new Error('track must not be null nor undefined');\n        }\n\n        this.localTracks.push(track);\n\n        track.conference = this.conference;\n    }\n\n    /**\n     * Returns the current value for \"lastN\" - the amount of videos are going\n     * to be delivered. When set to -1 for unlimited or all available videos.\n     * @return {number}\n     */\n    getLastN() {\n        return this._lastN;\n    }\n\n    /**\n     * Get local video track.\n     * @returns {JitsiLocalTrack|undefined}\n     */\n    getLocalVideoTrack() {\n        const localVideo = this.getLocalTracks(MediaType.VIDEO);\n\n\n        return localVideo.length ? localVideo[0] : undefined;\n    }\n\n    /**\n     * Get local audio track.\n     * @returns {JitsiLocalTrack|undefined}\n     */\n    getLocalAudioTrack() {\n        const localAudio = this.getLocalTracks(MediaType.AUDIO);\n\n\n        return localAudio.length ? localAudio[0] : undefined;\n    }\n\n    /**\n     * Returns the local tracks of the given media type, or all local tracks if\n     * no specific type is given.\n     * @param {MediaType} [mediaType] Optional media type filter.\n     * (audio or video).\n     */\n    getLocalTracks(mediaType) {\n        let tracks = this.localTracks.slice();\n\n        if (mediaType !== undefined) {\n            tracks = tracks.filter(\n                track => track.getType() === mediaType);\n        }\n\n        return tracks;\n    }\n\n    /**\n     * Obtains all remote tracks currently known to this RTC module instance.\n     * @param {MediaType} [mediaType] The remote tracks will be filtered\n     *      by their media type if this argument is specified.\n     * @return {Array<JitsiRemoteTrack>}\n     */\n    getRemoteTracks(mediaType) {\n        let remoteTracks = [];\n\n        for (const tpc of this.peerConnections.values()) {\n            const pcRemoteTracks = tpc.getRemoteTracks(undefined, mediaType);\n\n            if (pcRemoteTracks) {\n                remoteTracks = remoteTracks.concat(pcRemoteTracks);\n            }\n        }\n\n        return remoteTracks;\n    }\n\n    /**\n     * Set mute for all local audio streams attached to the conference.\n     * @param value The mute value.\n     * @returns {Promise}\n     */\n    setAudioMute(value) {\n        const mutePromises = [];\n\n        this.getLocalTracks(MediaType.AUDIO).forEach(audioTrack => {\n            // this is a Promise\n            mutePromises.push(value ? audioTrack.mute() : audioTrack.unmute());\n        });\n\n        // We return a Promise from all Promises so we can wait for their\n        // execution.\n        return Promise.all(mutePromises);\n    }\n\n    /**\n     *\n     * @param track\n     */\n    removeLocalTrack(track) {\n        const pos = this.localTracks.indexOf(track);\n\n        if (pos === -1) {\n            return;\n        }\n\n        this.localTracks.splice(pos, 1);\n    }\n\n    /**\n     * Removes all JitsiRemoteTracks associated with given MUC nickname\n     * (resource part of the JID). Returns array of removed tracks.\n     *\n     * @param {string} Owner The resource part of the MUC JID.\n     * @returns {JitsiRemoteTrack[]}\n     */\n    removeRemoteTracks(owner) {\n        let removedTracks = [];\n\n        for (const tpc of this.peerConnections.values()) {\n            const pcRemovedTracks = tpc.removeRemoteTracks(owner);\n\n            removedTracks = removedTracks.concat(pcRemovedTracks);\n        }\n\n        logger.debug(\n            `Removed remote tracks for ${owner}`\n                + ` count: ${removedTracks.length}`);\n\n        return removedTracks;\n    }\n\n    /**\n     *\n     */\n    static getPCConstraints(isP2P) {\n        const pcConstraints\n            = isP2P ? RTCUtils.p2pPcConstraints : RTCUtils.pcConstraints;\n\n        if (!pcConstraints) {\n            return {};\n        }\n\n        return JSON.parse(JSON.stringify(pcConstraints));\n    }\n\n    /**\n     *\n     * @param elSelector\n     * @param stream\n     */\n    static attachMediaStream(elSelector, stream) {\n        return RTCUtils.attachMediaStream(elSelector, stream);\n    }\n\n    /**\n     * Returns the id of the given stream.\n     * @param {MediaStream} stream\n     */\n    static getStreamID(stream) {\n        return RTCUtils.getStreamID(stream);\n    }\n\n    /**\n     * Returns the id of the given track.\n     * @param {MediaStreamTrack} track\n     */\n    static getTrackID(track) {\n        return RTCUtils.getTrackID(track);\n    }\n\n    /**\n     * Returns true if retrieving the the list of input devices is supported\n     * and false if not.\n     */\n    static isDeviceListAvailable() {\n        return RTCUtils.isDeviceListAvailable();\n    }\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @param {string} [deviceType] Type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     */\n    static isDeviceChangeAvailable(deviceType) {\n        return RTCUtils.isDeviceChangeAvailable(deviceType);\n    }\n\n    /**\n     * Returns currently used audio output device id, '' stands for default\n     * device\n     * @returns {string}\n     */\n    static getAudioOutputDevice() {\n        return RTCUtils.getAudioOutputDevice();\n    }\n\n    /**\n     * Returns list of available media devices if its obtained, otherwise an\n     * empty array is returned/\n     * @returns {array} list of available media devices.\n     */\n    static getCurrentlyAvailableMediaDevices() {\n        return RTCUtils.getCurrentlyAvailableMediaDevices();\n    }\n\n    /**\n     * Returns event data for device to be reported to stats.\n     * @returns {MediaDeviceInfo} device.\n     */\n    static getEventDataForActiveDevice(device) {\n        return RTCUtils.getEventDataForActiveDevice(device);\n    }\n\n    /**\n     * Sets current audio output device.\n     * @param {string} deviceId Id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices().\n     * @returns {Promise} resolves when audio output is changed, is rejected\n     *      otherwise\n     */\n    static setAudioOutputDevice(deviceId) {\n        return RTCUtils.setAudioOutputDevice(deviceId);\n    }\n\n    /**\n     * Returns <tt>true<tt/> if given WebRTC MediaStream is considered a valid\n     * \"user\" stream which means that it's not a \"receive only\" stream nor a\n     * \"mixed\" JVB stream.\n     *\n     * Clients that implement Unified Plan, such as Firefox use recvonly\n     * \"streams/channels/tracks\" for receiving remote stream/tracks, as opposed\n     * to Plan B where there are only 3 channels: audio, video and data.\n     *\n     * @param {MediaStream} stream The WebRTC MediaStream instance.\n     * @returns {boolean}\n     */\n    static isUserStream(stream) {\n        return RTC.isUserStreamById(RTCUtils.getStreamID(stream));\n    }\n\n    /**\n     * Returns <tt>true<tt/> if a WebRTC MediaStream identified by given stream\n     * ID is considered a valid \"user\" stream which means that it's not a\n     * \"receive only\" stream nor a \"mixed\" JVB stream.\n     *\n     * Clients that implement Unified Plan, such as Firefox use recvonly\n     * \"streams/channels/tracks\" for receiving remote stream/tracks, as opposed\n     * to Plan B where there are only 3 channels: audio, video and data.\n     *\n     * @param {string} streamId The id of WebRTC MediaStream.\n     * @returns {boolean}\n     */\n    static isUserStreamById(streamId) {\n        return streamId && streamId !== 'mixedmslabel'\n            && streamId !== 'default';\n    }\n\n    /**\n     * Allows to receive list of available cameras/microphones.\n     * @param {function} callback Would receive array of devices as an\n     *      argument.\n     */\n    static enumerateDevices(callback) {\n        RTCUtils.enumerateDevices(callback);\n    }\n\n    /**\n     * A method to handle stopping of the stream.\n     * One point to handle the differences in various implementations.\n     * @param {MediaStream} mediaStream MediaStream object to stop.\n     */\n    static stopMediaStream(mediaStream) {\n        RTCUtils.stopMediaStream(mediaStream);\n    }\n\n    /**\n     * Returns whether the desktop sharing is enabled or not.\n     * @returns {boolean}\n     */\n    static isDesktopSharingEnabled() {\n        return RTCUtils.isDesktopSharingEnabled();\n    }\n\n    /**\n     * Closes the currently opened bridge channel.\n     */\n    closeBridgeChannel() {\n        if (this._channel) {\n            this._channel.close();\n            this._channelOpen = false;\n\n            this.removeListener(RTCEvents.LASTN_ENDPOINT_CHANGED,\n                this._lastNChangeListener);\n        }\n    }\n\n    /* eslint-disable max-params */\n    /**\n     *\n     * @param {TraceablePeerConnection} tpc\n     * @param {number} ssrc\n     * @param {number} audioLevel\n     * @param {boolean} isLocal\n     */\n    setAudioLevel(tpc, ssrc, audioLevel, isLocal) {\n        const track = tpc.getTrackBySSRC(ssrc);\n\n        if (!track) {\n            return;\n        } else if (!track.isAudioTrack()) {\n            logger.warn(`Received audio level for non-audio track: ${ssrc}`);\n\n            return;\n        } else if (track.isLocal() !== isLocal) {\n            logger.error(\n                `${track} was expected to ${isLocal ? 'be' : 'not be'} local`);\n        }\n\n        track.setAudioLevel(audioLevel, tpc);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Sends message via the bridge channel.\n     * @param {string} to The id of the endpoint that should receive the\n     *      message. If \"\" the message will be sent to all participants.\n     * @param {object} payload The payload of the message.\n     * @throws NetworkError or InvalidStateError or Error if the operation\n     * fails or there is no data channel created.\n     */\n    sendChannelMessage(to, payload) {\n        if (this._channel) {\n            this._channel.sendMessage(to, payload);\n        } else {\n            throw new Error('Channel support is disabled!');\n        }\n    }\n\n    /**\n     * Selects a new value for \"lastN\". The requested amount of videos are going\n     * to be delivered after the value is in effect. Set to -1 for unlimited or\n     * all available videos.\n     * @param {number} value the new value for lastN.\n     */\n    setLastN(value) {\n        if (this._lastN !== value) {\n            this._lastN = value;\n            if (this._channel && this._channelOpen) {\n                this._channel.sendSetLastNMessage(value);\n            }\n            this.eventEmitter.emit(RTCEvents.LASTN_VALUE_CHANGED, value);\n        }\n    }\n\n    /**\n     * Indicates if the endpoint id is currently included in the last N.\n     * @param {string} id The endpoint id that we check for last N.\n     * @returns {boolean} true if the endpoint id is in the last N or if we\n     * don't have bridge channel support, otherwise we return false.\n     */\n    isInLastN(id) {\n        return !this._lastNEndpoints // lastNEndpoints not initialised yet.\n            || this._lastNEndpoints.indexOf(id) > -1;\n    }\n\n    /**\n     * Updates the target audio output device for all remote audio tracks.\n     *\n     * @param {string} deviceId - The device id of the audio ouput device to\n     * use for all remote tracks.\n     * @private\n     * @returns {void}\n     */\n    _updateAudioOutputForAudioTracks(deviceId) {\n        const remoteAudioTracks = this.getRemoteTracks(MediaType.AUDIO);\n\n        for (const track of remoteAudioTracks) {\n            track.setAudioOutput(deviceId);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/RTC.js","/* global $,\n          __filename,\n          attachMediaStream,\n          MediaStreamTrack,\n          RTCIceCandidate: true,\n          RTCPeerConnection,\n          RTCSessionDescription: true,\n          webkitMediaStream,\n          webkitRTCPeerConnection,\n          webkitURL\n*/\nimport { DEVICE_LIST } from '../../service/statistics/AnalyticsEvents';\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\nimport EventEmitter from 'events';\nimport { getLogger } from 'jitsi-meet-logger';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport JitsiTrackError from '../../JitsiTrackError';\nimport Listenable from '../util/Listenable';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport Resolutions from '../../service/RTC/Resolutions';\nimport RTCBrowserType from './RTCBrowserType';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport ortcRTCPeerConnection from './ortc/RTCPeerConnection';\nimport screenObtainer from './ScreenObtainer';\nimport SDPUtil from '../xmpp/SDPUtil';\nimport Statistics from '../statistics/statistics';\nimport VideoType from '../../service/RTC/VideoType';\n\nconst logger = getLogger(__filename);\n\n// XXX Don't require Temasys unless it's to be used because it doesn't run on\n// React Native, for example.\nconst AdapterJS\n    = RTCBrowserType.isTemasysPluginUsed()\n        ? require('./adapter.screenshare')\n        : undefined;\n\n// Require adapter only for certain browsers. This is being done for\n// react-native, which has its own shims, and while browsers are being migrated\n// over to use adapter's shims.\nif (RTCBrowserType.usesNewGumFlow()) {\n    require('webrtc-adapter');\n}\n\nconst eventEmitter = new EventEmitter();\n\nconst AVAILABLE_DEVICES_POLL_INTERVAL_TIME = 3000; // ms\n\n// TODO (brian): Move this devices hash, maybe to a model, so RTCUtils remains\n// stateless.\nconst devices = {\n    audio: false,\n    video: false\n};\n\n// Currently audio output device change is supported only in Chrome and\n// default output always has 'default' device ID\nlet audioOutputDeviceId = 'default'; // default device\n// whether user has explicitly set a device to use\nlet audioOutputChanged = false;\n\n// Disables all audio processing\nlet disableAP = false;\n\n// Disables Acoustic Echo Cancellation\nlet disableAEC = false;\n\n// Disables Noise Suppression\nlet disableNS = false;\n\n// Disables Automatic Gain Control\nlet disableAGC = false;\n\n// Disables Highpass Filter\nlet disableHPF = false;\n\nconst featureDetectionAudioEl = document.createElement('audio');\nconst isAudioOutputDeviceChangeAvailable\n    = typeof featureDetectionAudioEl.setSinkId !== 'undefined';\n\nlet currentlyAvailableMediaDevices;\n\n/**\n * \"rawEnumerateDevicesWithCallback\" will be initialized only after WebRTC is\n * ready. Otherwise it is too early to assume that the devices listing is not\n * supported.\n */\nlet rawEnumerateDevicesWithCallback;\n\n/**\n *\n */\nfunction initRawEnumerateDevicesWithCallback() {\n    rawEnumerateDevicesWithCallback\n        = navigator.mediaDevices && navigator.mediaDevices.enumerateDevices\n            ? function(callback) {\n                navigator.mediaDevices.enumerateDevices().then(\n                    callback,\n                    () => callback([]));\n            }\n\n            // Safari:\n            // \"ReferenceError: Can't find variable: MediaStreamTrack\" when\n            // Temasys plugin is not installed yet, have to delay this call\n            // until WebRTC is ready.\n            : MediaStreamTrack && MediaStreamTrack.getSources\n                ? function(callback) {\n                    MediaStreamTrack.getSources(\n                        sources =>\n                            callback(\n                                sources.map(convertMediaStreamTrackSource)));\n                }\n                : undefined;\n}\n\n// TODO: currently no browser supports 'devicechange' event even in nightly\n// builds so no feature/browser detection is used at all. However in future this\n// should be changed to some expression. Progress on 'devicechange' event\n// implementation for Chrome/Opera/NWJS can be tracked at\n// https://bugs.chromium.org/p/chromium/issues/detail?id=388648, for Firefox -\n// at https://bugzilla.mozilla.org/show_bug.cgi?id=1152383. More information on\n// 'devicechange' event can be found in spec -\n// http://w3c.github.io/mediacapture-main/#event-mediadevices-devicechange\n// TODO: check MS Edge\nconst isDeviceChangeEventSupported = false;\n\nlet rtcReady = false;\n\n/**\n *\n * @param constraints\n * @param isNewStyleConstraintsSupported\n * @param resolution\n */\nfunction setResolutionConstraints(\n        constraints,\n        isNewStyleConstraintsSupported,\n        resolution) {\n    if (Resolutions[resolution]) {\n        if (isNewStyleConstraintsSupported) {\n            constraints.video.width = {\n                ideal: Resolutions[resolution].width\n            };\n            constraints.video.height = {\n                ideal: Resolutions[resolution].height\n            };\n        }\n\n        constraints.video.mandatory.minWidth = Resolutions[resolution].width;\n        constraints.video.mandatory.minHeight = Resolutions[resolution].height;\n    }\n\n    if (constraints.video.mandatory.minWidth) {\n        constraints.video.mandatory.maxWidth\n            = constraints.video.mandatory.minWidth;\n    }\n\n    if (constraints.video.mandatory.minHeight) {\n        constraints.video.mandatory.maxHeight\n            = constraints.video.mandatory.minHeight;\n    }\n}\n\n/**\n * @param {string[]} um required user media types\n *\n * @param {Object} [options={}] optional parameters\n * @param {string} options.resolution\n * @param {number} options.bandwidth\n * @param {number} options.fps\n * @param {string} options.desktopStream\n * @param {string} options.cameraDeviceId\n * @param {string} options.micDeviceId\n * @param {CameraFacingMode} options.facingMode\n * @param {bool} firefox_fake_device\n */\nfunction getConstraints(um, options) {\n    const constraints = { audio: false,\n        video: false };\n\n    // Don't mix new and old style settings for Chromium as this leads\n    // to TypeError in new Chromium versions. @see\n    // https://bugs.chromium.org/p/chromium/issues/detail?id=614716\n    // This is a temporary solution, in future we will fully split old and\n    // new style constraints when new versions of Chromium and Firefox will\n    // have stable support of new constraints format. For more information\n    // @see https://github.com/jitsi/lib-jitsi-meet/pull/136\n    const isNewStyleConstraintsSupported\n        = RTCBrowserType.isFirefox()\n        || RTCBrowserType.isEdge()\n        || RTCBrowserType.isReactNative()\n        || RTCBrowserType.isTemasysPluginUsed();\n\n    if (um.indexOf('video') >= 0) {\n        // same behaviour as true\n        constraints.video = { mandatory: {},\n            optional: [] };\n\n        if (options.cameraDeviceId) {\n            if (isNewStyleConstraintsSupported) {\n                // New style of setting device id.\n                constraints.video.deviceId = options.cameraDeviceId;\n            }\n\n            // Old style.\n            constraints.video.optional.push({\n                sourceId: options.cameraDeviceId\n            });\n        } else {\n            // Prefer the front i.e. user-facing camera (to the back i.e.\n            // environment-facing camera, for example).\n            // TODO: Maybe use \"exact\" syntax if options.facingMode is defined,\n            // but this probably needs to be decided when updating other\n            // constraints, as we currently don't use \"exact\" syntax anywhere.\n            const facingMode = options.facingMode || CameraFacingMode.USER;\n\n            if (isNewStyleConstraintsSupported) {\n                constraints.video.facingMode = facingMode;\n            }\n            constraints.video.optional.push({\n                facingMode\n            });\n        }\n\n        if (options.minFps || options.maxFps || options.fps) {\n            // for some cameras it might be necessary to request 30fps\n            // so they choose 30fps mjpg over 10fps yuy2\n            if (options.minFps || options.fps) {\n                // Fall back to options.fps for backwards compatibility\n                options.minFps = options.minFps || options.fps;\n                constraints.video.mandatory.minFrameRate = options.minFps;\n            }\n            if (options.maxFps) {\n                constraints.video.mandatory.maxFrameRate = options.maxFps;\n            }\n        }\n\n        setResolutionConstraints(\n            constraints, isNewStyleConstraintsSupported, options.resolution);\n    }\n    if (um.indexOf('audio') >= 0) {\n        if (RTCBrowserType.isReactNative()) {\n            // The react-native-webrtc project that we're currently using\n            // expects the audio constraint to be a boolean.\n            constraints.audio = true;\n        } else if (RTCBrowserType.isFirefox()) {\n            if (options.micDeviceId) {\n                constraints.audio = {\n                    mandatory: {},\n                    deviceId: options.micDeviceId, // new style\n                    optional: [ {\n                        sourceId: options.micDeviceId // old style\n                    } ] };\n            } else {\n                constraints.audio = true;\n            }\n        } else {\n            // same behaviour as true\n            constraints.audio = { mandatory: {},\n                optional: [] };\n            if (options.micDeviceId) {\n                if (isNewStyleConstraintsSupported) {\n                    // New style of setting device id.\n                    constraints.audio.deviceId = options.micDeviceId;\n                }\n\n                // Old style.\n                constraints.audio.optional.push({\n                    sourceId: options.micDeviceId\n                });\n            }\n\n            // if it is good enough for hangouts...\n            constraints.audio.optional.push(\n                { echoCancellation: !disableAEC && !disableAP },\n                { googEchoCancellation: !disableAEC && !disableAP },\n                { googAutoGainControl: !disableAGC && !disableAP },\n                { googNoiseSuppression: !disableNS && !disableAP },\n                { googHighpassFilter: !disableHPF && !disableAP },\n                { googNoiseSuppression2: !disableNS && !disableAP },\n                { googEchoCancellation2: !disableAEC && !disableAP },\n                { googAutoGainControl2: !disableAGC && !disableAP }\n            );\n        }\n    }\n    if (um.indexOf('screen') >= 0) {\n        if (RTCBrowserType.isChrome()) {\n            constraints.video = {\n                mandatory: {\n                    chromeMediaSource: 'screen',\n                    maxWidth: window.screen.width,\n                    maxHeight: window.screen.height,\n                    maxFrameRate: 3\n                },\n                optional: []\n            };\n        } else if (RTCBrowserType.isTemasysPluginUsed()) {\n            constraints.video = {\n                optional: [\n                    {\n                        sourceId: AdapterJS.WebRTCPlugin.plugin.screensharingKey\n                    }\n                ]\n            };\n        } else if (RTCBrowserType.isFirefox()) {\n            constraints.video = {\n                mozMediaSource: 'window',\n                mediaSource: 'window'\n            };\n\n        } else {\n            const errmsg\n                = '\\'screen\\' WebRTC media source is supported only in Chrome'\n                    + ' and with Temasys plugin';\n\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n            logger.error(errmsg);\n        }\n    }\n    if (um.indexOf('desktop') >= 0) {\n        constraints.video = {\n            mandatory: {\n                chromeMediaSource: 'desktop',\n                chromeMediaSourceId: options.desktopStream,\n                maxWidth: window.screen.width,\n                maxHeight: window.screen.height,\n                maxFrameRate: 3\n            },\n            optional: []\n        };\n    }\n\n    if (options.bandwidth) {\n        if (!constraints.video) {\n            // same behaviour as true\n            constraints.video = { mandatory: {},\n                optional: [] };\n        }\n        constraints.video.optional.push({ bandwidth: options.bandwidth });\n    }\n\n    // we turn audio for both audio and video tracks, the fake audio & video\n    // seems to work only when enabled in one getUserMedia call, we cannot get\n    // fake audio separate by fake video this later can be a problem with some\n    // of the tests\n    if (RTCBrowserType.isFirefox() && options.firefox_fake_device) {\n        // seems to be fixed now, removing this experimental fix, as having\n        // multiple audio tracks brake the tests\n        // constraints.audio = true;\n        constraints.fake = true;\n    }\n\n    return constraints;\n}\n\n/**\n * Default MediaStreamConstraints to use for calls to getUserMedia.\n *\n * @private\n */\nconst DEFAULT_CONSTRAINTS = {\n    video: {\n        aspectRatio: 16 / 9,\n        height: {\n            ideal: 1080,\n            max: 1080,\n            min: 240\n        }\n    }\n};\n\n/**\n * Creates a constraints object to be passed into a call to getUserMedia.\n *\n * @param {Array} um - An array of user media types to get. The accepted\n * types are \"video\", \"audio\", and \"desktop.\"\n * @param {Object} options - Various values to be added to the constraints.\n * @param {string} options.cameraDeviceId - The device id for the video\n * capture device to get video from.\n * @param {Object} options.constraints - Default constraints object to use\n * as a base for the returned constraints.\n * @param {Object} options.desktopStream - The desktop source id from which\n * to capture a desktop sharing video.\n * @param {string} options.facingMode - Which direction the camera is\n * pointing to.\n * @param {string} options.micDeviceId - The device id for the audio capture\n * device to get audio from.\n * @private\n * @returns {Object}\n */\nfunction newGetConstraints(um = [], options = {}) {\n    // Create a deep copy of the constraints to avoid any modification of\n    // the passed in constraints object.\n    const constraints = JSON.parse(JSON.stringify(\n        options.constraints || DEFAULT_CONSTRAINTS));\n\n    if (um.indexOf('video') >= 0) {\n        if (!constraints.video) {\n            constraints.video = {};\n        }\n\n        if (options.cameraDeviceId) {\n            constraints.video.deviceId = options.cameraDeviceId;\n        } else {\n            const facingMode = options.facingMode || CameraFacingMode.USER;\n\n            constraints.video.facingMode = facingMode;\n        }\n    } else {\n        constraints.video = false;\n    }\n\n    if (um.indexOf('audio') >= 0) {\n        if (!constraints.audio || typeof constraints.audio === 'boolean') {\n            constraints.audio = {};\n        }\n\n        // NOTE(brian): the new-style ('advanced' instead of 'optional')\n        // doesn't seem to carry through the googXXX constraints\n        // Changing back to 'optional' here (even with video using\n        // the 'advanced' style) allows them to be passed through\n        // but also requires the device id to capture to be set in optional\n        // as sourceId otherwise the constraints are considered malformed.\n        if (!constraints.audio.optional) {\n            constraints.audio.optional = [];\n        }\n\n        constraints.audio.optional.push(\n            { sourceId: options.micDeviceId },\n            { echoCancellation: !disableAEC && !disableAP },\n            { googEchoCancellation: !disableAEC && !disableAP },\n            { googAutoGainControl: !disableAGC && !disableAP },\n            { googNoiseSuppression: !disableNS && !disableAP },\n            { googHighpassFilter: !disableHPF && !disableAP },\n            { googNoiseSuppression2: !disableNS && !disableAP },\n            { googEchoCancellation2: !disableAEC && !disableAP },\n            { googAutoGainControl2: !disableAGC && !disableAP }\n        );\n    } else {\n        constraints.audio = false;\n    }\n\n    if (um.indexOf('desktop') >= 0) {\n        if (!constraints.video || typeof constraints.video === 'boolean') {\n            constraints.video = {};\n        }\n\n        constraints.video = {\n            mandatory: {\n                chromeMediaSource: 'desktop',\n                chromeMediaSourceId: options.desktopStream,\n                maxWidth: window.screen.width,\n                maxHeight: window.screen.height,\n                maxFrameRate: 3\n            }\n        };\n    }\n\n    return constraints;\n}\n\n/**\n * Sets the availbale devices based on the options we requested and the\n * streams we received.\n * @param um the options we requested to getUserMedia.\n * @param stream the stream we received from calling getUserMedia.\n */\nfunction setAvailableDevices(um, stream) {\n    const audioTracksReceived = stream && stream.getAudioTracks().length > 0;\n    const videoTracksReceived = stream && stream.getVideoTracks().length > 0;\n\n    if (um.indexOf('video') !== -1) {\n        devices.video = videoTracksReceived;\n    }\n    if (um.indexOf('audio') !== -1) {\n        devices.audio = audioTracksReceived;\n    }\n\n    eventEmitter.emit(RTCEvents.AVAILABLE_DEVICES_CHANGED, devices);\n}\n\n/**\n * Checks if new list of available media devices differs from previous one.\n * @param {MediaDeviceInfo[]} newDevices - list of new devices.\n * @returns {boolean} - true if list is different, false otherwise.\n */\nfunction compareAvailableMediaDevices(newDevices) {\n    if (newDevices.length !== currentlyAvailableMediaDevices.length) {\n        return true;\n    }\n\n    /* eslint-disable newline-per-chained-call */\n\n    return (\n        newDevices.map(mediaDeviceInfoToJSON).sort().join('')\n            !== currentlyAvailableMediaDevices\n                .map(mediaDeviceInfoToJSON).sort().join(''));\n\n    /* eslint-enable newline-per-chained-call */\n\n    /**\n     *\n     * @param info\n     */\n    function mediaDeviceInfoToJSON(info) {\n        return JSON.stringify({\n            kind: info.kind,\n            deviceId: info.deviceId,\n            groupId: info.groupId,\n            label: info.label,\n            facing: info.facing\n        });\n    }\n}\n\n/**\n * Periodically polls enumerateDevices() method to check if list of media\n * devices has changed. This is temporary workaround until 'devicechange' event\n * will be supported by browsers.\n */\nfunction pollForAvailableMediaDevices() {\n    // Here we use plain navigator.mediaDevices.enumerateDevices instead of\n    // wrapped because we just need to know the fact the devices changed, labels\n    // do not matter. This fixes situation when we have no devices initially,\n    // and then plug in a new one.\n    if (rawEnumerateDevicesWithCallback) {\n        rawEnumerateDevicesWithCallback(ds => {\n            // We don't fire RTCEvents.DEVICE_LIST_CHANGED for the first time\n            // we call enumerateDevices(). This is the initial step.\n            if (typeof currentlyAvailableMediaDevices === 'undefined') {\n                currentlyAvailableMediaDevices = ds.slice(0);\n            } else if (compareAvailableMediaDevices(ds)) {\n                onMediaDevicesListChanged(ds);\n            }\n\n            window.setTimeout(pollForAvailableMediaDevices,\n                AVAILABLE_DEVICES_POLL_INTERVAL_TIME);\n        });\n    }\n}\n\n/**\n * Sends analytics event with the passed device list.\n *\n * @param {Array<MediaDeviceInfo>} deviceList - List with info about the\n * available devices.\n * @returns {void}\n */\nfunction sendDeviceListToAnalytics(deviceList) {\n    const devicesPropsArray\n        = deviceList.map(\n            ({ deviceId, groupId, kind, label }) => {\n                // Filter the props of the device object.\n                return {\n                    deviceId,\n                    groupId,\n                    kind,\n                    label\n                };\n            });\n\n    Statistics.analytics.sendEvent(DEVICE_LIST, { devices: devicesPropsArray });\n}\n\n/**\n * Event handler for the 'devicechange' event.\n *\n * @param {MediaDeviceInfo[]} devices - list of media devices.\n * @emits RTCEvents.DEVICE_LIST_CHANGED\n */\nfunction onMediaDevicesListChanged(devicesReceived) {\n    currentlyAvailableMediaDevices = devicesReceived.slice(0);\n    logger.info(\n        'list of media devices has changed:',\n        currentlyAvailableMediaDevices);\n\n    sendDeviceListToAnalytics(currentlyAvailableMediaDevices);\n\n    const videoInputDevices\n        = currentlyAvailableMediaDevices.filter(d => d.kind === 'videoinput');\n    const audioInputDevices\n        = currentlyAvailableMediaDevices.filter(d => d.kind === 'audioinput');\n    const videoInputDevicesWithEmptyLabels\n        = videoInputDevices.filter(d => d.label === '');\n    const audioInputDevicesWithEmptyLabels\n        = audioInputDevices.filter(d => d.label === '');\n\n    if (videoInputDevices.length\n            && videoInputDevices.length\n                === videoInputDevicesWithEmptyLabels.length) {\n        devices.video = false;\n    }\n\n    if (audioInputDevices.length\n            && audioInputDevices.length\n                === audioInputDevicesWithEmptyLabels.length) {\n        devices.audio = false;\n    }\n\n    eventEmitter.emit(RTCEvents.DEVICE_LIST_CHANGED, devicesReceived);\n}\n\n/**\n * Apply function with arguments if function exists.\n * Do nothing if function not provided.\n * @param {function} [fn] function to apply\n * @param {Array} [args=[]] arguments for function\n */\nfunction maybeApply(fn, args) {\n    fn && fn(...args);\n}\n\n/**\n * Wrap `getUserMedia` in order to convert between callback and Promise based\n * APIs.\n * @param {Function} getUserMedia native function\n * @returns {Function} wrapped function\n */\nfunction wrapGetUserMedia(getUserMedia, usePromises = false) {\n    let gUM;\n\n    if (usePromises) {\n        gUM = function(constraints, successCallback, errorCallback) {\n            return getUserMedia(constraints)\n                .then(stream => {\n                    maybeApply(successCallback, [ stream ]);\n\n                    return stream;\n                })\n                .catch(error => {\n                    maybeApply(errorCallback, [ error ]);\n\n                    throw error;\n                });\n        };\n    } else {\n        gUM = function(constraints, successCallback, errorCallback) {\n            getUserMedia(constraints, stream => {\n                maybeApply(successCallback, [ stream ]);\n            }, error => {\n                maybeApply(errorCallback, [ error ]);\n            });\n        };\n    }\n\n    return gUM;\n}\n\n/**\n * Use old MediaStreamTrack to get devices list and\n * convert it to enumerateDevices format.\n * @param {Function} callback function to call when received devices list.\n */\nfunction enumerateDevicesThroughMediaStreamTrack(callback) {\n    MediaStreamTrack.getSources(\n        sources => callback(sources.map(convertMediaStreamTrackSource)));\n}\n\n/**\n * Converts MediaStreamTrack Source to enumerateDevices format.\n * @param {Object} source\n */\nfunction convertMediaStreamTrackSource(source) {\n    const kind = (source.kind || '').toLowerCase();\n\n    return {\n        facing: source.facing || null,\n        label: source.label,\n\n        // theoretically deprecated MediaStreamTrack.getSources should\n        // not return 'audiooutput' devices but let's handle it in any\n        // case\n        kind: kind\n            ? kind === 'audiooutput' ? kind : `${kind}input`\n            : null,\n        deviceId: source.id,\n        groupId: source.groupId || null\n    };\n}\n\n/**\n * Handles the newly created Media Streams.\n * @param streams the new Media Streams\n * @param resolution the resolution of the video streams\n * @returns {*[]} object that describes the new streams\n */\nfunction handleLocalStream(streams, resolution) {\n    let audioStream, desktopStream, videoStream;\n    const res = [];\n\n    // XXX The function obtainAudioAndVideoPermissions has examined the type of\n    // the browser, its capabilities, etc. and has taken the decision whether to\n    // invoke getUserMedia per device (e.g. Firefox) or once for both audio and\n    // video (e.g. Chrome). In order to not duplicate the logic here, examine\n    // the specified streams and figure out what we've received based on\n    // obtainAudioAndVideoPermissions' decision.\n    if (streams) {\n        // As mentioned above, certian types of browser (e.g. Chrome) support\n        // (with a result which meets our requirements expressed bellow) calling\n        // getUserMedia once for both audio and video.\n        const audioVideo = streams.audioVideo;\n\n        if (audioVideo) {\n            const NativeMediaStream\n                 = window.webkitMediaStream || window.MediaStream;\n            const audioTracks = audioVideo.getAudioTracks();\n\n            if (audioTracks.length) {\n                // eslint-disable-next-line new-cap\n                audioStream = new NativeMediaStream();\n                for (let i = 0; i < audioTracks.length; i++) {\n                    audioStream.addTrack(audioTracks[i]);\n                }\n            }\n\n            const videoTracks = audioVideo.getVideoTracks();\n\n            if (videoTracks.length) {\n                // eslint-disable-next-line new-cap\n                videoStream = new NativeMediaStream();\n                for (let j = 0; j < videoTracks.length; j++) {\n                    videoStream.addTrack(videoTracks[j]);\n                }\n            }\n        } else {\n            // On other types of browser (e.g. Firefox) we choose (namely,\n            // obtainAudioAndVideoPermissions) to call getUserMedia per device\n            // (type).\n            audioStream = streams.audio;\n            videoStream = streams.video;\n        }\n\n        desktopStream = streams.desktop;\n    }\n\n    if (desktopStream) {\n        const { stream, sourceId, sourceType } = desktopStream;\n\n        res.push({\n            stream,\n            sourceId,\n            sourceType,\n            track: stream.getVideoTracks()[0],\n            mediaType: MediaType.VIDEO,\n            videoType: VideoType.DESKTOP\n        });\n    }\n    if (audioStream) {\n        res.push({\n            stream: audioStream,\n            track: audioStream.getAudioTracks()[0],\n            mediaType: MediaType.AUDIO,\n            videoType: null\n        });\n    }\n    if (videoStream) {\n        res.push({\n            stream: videoStream,\n            track: videoStream.getVideoTracks()[0],\n            mediaType: MediaType.VIDEO,\n            videoType: VideoType.CAMERA,\n            resolution\n        });\n    }\n\n    return res;\n}\n\n/**\n * Represents a default implementation of setting a <tt>MediaStream</tt> as the\n * source of a video element that tries to be browser-agnostic through feature\n * checking. Note though that it was not completely clear from the predating\n * browser-specific implementations what &quot;videoSrc&quot; was because one\n * implementation of {@link RTCUtils#getVideoSrc} would return\n * <tt>MediaStream</tt> (e.g. Firefox), another a <tt>string</tt> representation\n * of the <tt>URL</tt> of the <tt>MediaStream</tt> (e.g. Chrome) and the return\n * value was only used by {@link RTCUIHelper#getVideoId} which itself did not\n * appear to be used anywhere. Generally, the implementation will try to follow\n * the related standards i.e. work with the <tt>srcObject</tt> and <tt>src</tt>\n * properties of the specified <tt>element</tt> taking into account vender\n * prefixes.\n *\n * @param element the element whose video source/src is to be set to the\n * specified <tt>stream</tt>\n * @param {MediaStream} stream the <tt>MediaStream</tt> to set as the video\n * source/src of <tt>element</tt>\n */\nfunction defaultSetVideoSrc(element, stream) {\n    // srcObject\n    let srcObjectPropertyName = 'srcObject';\n\n    if (!(srcObjectPropertyName in element)) {\n        srcObjectPropertyName = 'mozSrcObject';\n        if (!(srcObjectPropertyName in element)) {\n            srcObjectPropertyName = null;\n        }\n    }\n    if (srcObjectPropertyName) {\n        element[srcObjectPropertyName] = stream;\n\n        return;\n    }\n\n    // src\n    let src;\n\n    if (stream) {\n        src = stream.jitsiObjectURL;\n\n        // Save the created URL for stream so we can reuse it and not keep\n        // creating URLs.\n        if (!src) {\n            stream.jitsiObjectURL\n                = src\n                    = (URL || webkitURL).createObjectURL(stream);\n        }\n    }\n    element.src = src || '';\n}\n\n/**\n *\n */\nclass RTCUtils extends Listenable {\n    /**\n     *\n     */\n    constructor() {\n        super(eventEmitter);\n    }\n\n    /**\n     * Depending on the browser, sets difference instance methods for\n     * interacting with user media and adds methods to native webrtc related\n     * objects. Also creates an instance variable for peer connection\n     * constraints.\n     *\n     * @param {Object} options\n     * @returns {void}\n     */\n    init(options = {}) {\n        if (typeof options.disableAEC === 'boolean') {\n            disableAEC = options.disableAEC;\n            logger.info(`Disable AEC: ${disableAEC}`);\n        }\n        if (typeof options.disableNS === 'boolean') {\n            disableNS = options.disableNS;\n            logger.info(`Disable NS: ${disableNS}`);\n        }\n        if (typeof options.disableAP === 'boolean') {\n            disableAP = options.disableAP;\n            logger.info(`Disable AP: ${disableAP}`);\n        }\n        if (typeof options.disableAGC === 'boolean') {\n            disableAGC = options.disableAGC;\n            logger.info(`Disable AGC: ${disableAGC}`);\n        }\n        if (typeof options.disableHPF === 'boolean') {\n            disableHPF = options.disableHPF;\n            logger.info(`Disable HPF: ${disableHPF}`);\n        }\n\n        // Initialize rawEnumerateDevicesWithCallback\n        initRawEnumerateDevicesWithCallback();\n\n        return new Promise((resolve, reject) => {\n            if (RTCBrowserType.usesNewGumFlow()) {\n                this.RTCPeerConnectionType = window.RTCPeerConnection;\n\n                this.getUserMedia\n                    = (constraints, successCallback, errorCallback) =>\n                        window.navigator.mediaDevices\n                            .getUserMedia(constraints)\n                            .then(stream => {\n                                successCallback && successCallback(stream);\n\n                                return stream;\n                            })\n                            .catch(err => {\n                                errorCallback && errorCallback(err);\n\n                                return Promise.reject(err);\n                            });\n\n                this.enumerateDevices = callback =>\n                    window.navigator.mediaDevices.enumerateDevices()\n                        .then(foundDevices => {\n                            callback(foundDevices);\n\n                            return foundDevices;\n                        })\n                        .catch(err => {\n                            logger.error(`Error enumerating devices: ${err}`);\n\n                            callback([]);\n\n                            return [];\n                        });\n\n                this.attachMediaStream\n                    = wrapAttachMediaStream((element, stream) => {\n                        if (element) {\n                            element.srcObject = stream;\n                        }\n\n                        return element;\n                    });\n\n                this.getStreamID = stream => stream.id;\n                this.getTrackID = track => track.id;\n            } else if (RTCBrowserType.isChrome() // this is chrome < 61\n                    || RTCBrowserType.isOpera()\n                    || RTCBrowserType.isNWJS()\n                    || RTCBrowserType.isElectron()\n                    || RTCBrowserType.isReactNative()) {\n\n                this.RTCPeerConnectionType = webkitRTCPeerConnection;\n                const getUserMedia\n                    = navigator.webkitGetUserMedia.bind(navigator);\n\n                this.getUserMedia = wrapGetUserMedia(getUserMedia);\n                this.enumerateDevices = rawEnumerateDevicesWithCallback;\n\n                this.attachMediaStream\n                    = wrapAttachMediaStream((element, stream) => {\n                        defaultSetVideoSrc(element, stream);\n\n                        return element;\n                    });\n                this.getStreamID = function(stream) {\n                    // A. MediaStreams from FF endpoints have the characters '{'\n                    // and '}' that make jQuery choke.\n                    // B. The react-native-webrtc implementation that we use on\n                    // React Native at the time of this writing returns a number\n                    // for the id of MediaStream. Let's just say that a number\n                    // contains no special characters.\n                    const id = stream.id;\n\n                    // XXX The return statement is affected by automatic\n                    // semicolon insertion (ASI). No line terminator is allowed\n                    // between the return keyword and the expression.\n                    return (\n                        typeof id === 'number'\n                            ? id\n                            : SDPUtil.filterSpecialChars(id));\n                };\n                this.getTrackID = function(track) {\n                    return track.id;\n                };\n\n                if (!webkitMediaStream.prototype.getVideoTracks) {\n                    webkitMediaStream.prototype.getVideoTracks = function() {\n                        return this.videoTracks;\n                    };\n                }\n                if (!webkitMediaStream.prototype.getAudioTracks) {\n                    webkitMediaStream.prototype.getAudioTracks = function() {\n                        return this.audioTracks;\n                    };\n                }\n            } else if (RTCBrowserType.isEdge()) {\n                this.RTCPeerConnectionType = ortcRTCPeerConnection;\n                this.getUserMedia\n                    = wrapGetUserMedia(\n                        navigator.mediaDevices.getUserMedia.bind(\n                            navigator.mediaDevices),\n                        true);\n                this.enumerateDevices = rawEnumerateDevicesWithCallback;\n                this.attachMediaStream\n                    = wrapAttachMediaStream((element, stream) => {\n                        defaultSetVideoSrc(element, stream);\n\n                        return element;\n                    });\n\n                // ORTC does not generate remote MediaStreams so those are\n                // manually created by the ORTC shim. This means that their\n                // id (internally generated) does not match the stream id\n                // signaled into the remote SDP. Therefore, the shim adds a\n                // custom jitsiRemoteId property with the original stream id.\n                this.getStreamID = function(stream) {\n                    const id = stream.jitsiRemoteId || stream.id;\n\n                    return SDPUtil.filterSpecialChars(id);\n                };\n\n                // Remote MediaStreamTracks generated by ORTC (within a\n                // RTCRtpReceiver) have an internally/random id which does not\n                // match the track id signaled in the remote SDP. The shim adds\n                // a custom jitsi-id property with the original track id.\n                this.getTrackID = function(track) {\n                    return track.jitsiRemoteId || track.id;\n                };\n            } else if (RTCBrowserType.isTemasysPluginUsed()) {\n                // Detect IE/Safari\n                const webRTCReadyCb = () => {\n                    this.RTCPeerConnectionType = RTCPeerConnection;\n                    this.getUserMedia = window.getUserMedia;\n                    this.enumerateDevices\n                        = enumerateDevicesThroughMediaStreamTrack;\n                    this.attachMediaStream\n                        = wrapAttachMediaStream((element, stream) => {\n                            if (stream) {\n                                if (stream.id === 'dummyAudio'\n                                        || stream.id === 'dummyVideo') {\n                                    return;\n                                }\n\n                                // The container must be visible in order to\n                                // play or attach the stream when Temasys plugin\n                                // is in use\n                                const containerSel = $(element);\n\n                                if (RTCBrowserType.isTemasysPluginUsed()\n                                        && !containerSel.is(':visible')) {\n                                    containerSel.show();\n                                }\n                                const video\n                                    = stream.getVideoTracks().length > 0;\n\n                                if (video && !$(element).is(':visible')) {\n                                    throw new Error(\n                                        'video element must be visible to'\n                                            + ' attach video stream');\n                                }\n                            }\n\n                            return attachMediaStream(element, stream);\n                        });\n                    this.getStreamID\n                        = stream => SDPUtil.filterSpecialChars(stream.label);\n                    this.getTrackID\n                        = track => track.id;\n\n                    onReady(\n                        options,\n                        this.getUserMediaWithConstraints.bind(this));\n                };\n                const webRTCReadyPromise\n                    = new Promise(r => AdapterJS.webRTCReady(r));\n\n                // Resolve or reject depending on whether the Temasys plugin is\n                // installed.\n                AdapterJS.WebRTCPlugin.isPluginInstalled(\n                    AdapterJS.WebRTCPlugin.pluginInfo.prefix,\n                    AdapterJS.WebRTCPlugin.pluginInfo.plugName,\n                    AdapterJS.WebRTCPlugin.pluginInfo.type,\n                    /* installed */ () => {\n                        webRTCReadyPromise.then(() => {\n                            webRTCReadyCb();\n                            resolve();\n                        });\n                    },\n                    /* not installed */ () => {\n                        const error\n                            = new Error('Temasys plugin is not installed');\n\n                        error.name = 'WEBRTC_NOT_READY';\n                        error.webRTCReadyPromise = webRTCReadyPromise;\n\n                        reject(error);\n                    });\n            } else {\n                rejectWithWebRTCNotSupported(\n                    'Browser does not appear to be WebRTC-capable',\n                    reject);\n\n                return;\n            }\n\n            this._initPCConstraints(options);\n\n            // Call onReady() if Temasys plugin is not used\n            if (!RTCBrowserType.isTemasysPluginUsed()) {\n                onReady(options, this.getUserMediaWithConstraints.bind(this));\n                resolve();\n            }\n        });\n    }\n\n    /**\n     * Creates instance objects for peer connection constraints both for p2p\n     * and outside of p2p.\n     *\n     * @params {Object} options - Configuration for setting RTCUtil's instance\n     * objects for peer connection constraints.\n     * @params {boolean} options.useIPv6 - Set to true if IPv6 should be used.\n     * @params {boolean} options.disableSuspendVideo - Whether or not video\n     * should become suspended if bandwidth estimation becomes low.\n     * @params {Object} options.testing - Additional configuration for work in\n     * development.\n     * @params {Object} options.testing.forceP2PSuspendVideoRatio - True if\n     * video should become suspended if bandwidth estimation becomes low while\n     * in peer to peer connection mode.\n     */\n    _initPCConstraints(options) {\n        if (RTCBrowserType.isFirefox()) {\n            this.pcConstraints = {};\n        } else if (RTCBrowserType.isChrome()\n            || RTCBrowserType.isOpera()\n            || RTCBrowserType.isNWJS()\n            || RTCBrowserType.isElectron()\n            || RTCBrowserType.isReactNative()) {\n            this.pcConstraints = { optional: [\n                { googHighStartBitrate: 0 },\n                { googPayloadPadding: true },\n                { googScreencastMinBitrate: 400 },\n                { googCpuOveruseDetection: true },\n                { googCpuOveruseEncodeUsage: true },\n                { googCpuUnderuseThreshold: 55 },\n                { googCpuOveruseThreshold: 85 }\n            ] };\n\n            if (options.useIPv6) {\n                // https://code.google.com/p/webrtc/issues/detail?id=2828\n                this.pcConstraints.optional.push({ googIPv6: true });\n            }\n\n            this.p2pPcConstraints\n                = JSON.parse(JSON.stringify(this.pcConstraints));\n\n            // Allows sending of video to be suspended if the bandwidth\n            // estimation is too low.\n            if (!options.disableSuspendVideo) {\n                this.pcConstraints.optional.push(\n                    { googSuspendBelowMinBitrate: true });\n            }\n\n            // There's no reason not to use this for p2p\n            this.p2pPcConstraints.optional.push({\n                googSuspendBelowMinBitrate: true\n            });\n        }\n\n        this.p2pPcConstraints = this.p2pPcConstraints || this.pcConstraints;\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n    * @param {string[]} um required user media types\n    * @param {function} successCallback\n    * @param {Function} failureCallback\n    * @param {Object} [options] optional parameters\n    * @param {string} options.resolution\n    * @param {number} options.bandwidth\n    * @param {number} options.fps\n    * @param {string} options.desktopStream\n    * @param {string} options.cameraDeviceId\n    * @param {string} options.micDeviceId\n    **/\n    getUserMediaWithConstraints(\n            um,\n            successCallback,\n            failureCallback,\n            options = {}) {\n        const constraints = getConstraints(um, options);\n\n        logger.info('Get media constraints', constraints);\n\n        try {\n            this.getUserMedia(\n                constraints,\n                stream => {\n                    logger.log('onUserMediaSuccess');\n                    setAvailableDevices(um, stream);\n                    successCallback(stream);\n                },\n                error => {\n                    setAvailableDevices(um, undefined);\n                    logger.warn('Failed to get access to local media. Error ',\n                        error, constraints);\n\n                    if (failureCallback) {\n                        failureCallback(\n                            new JitsiTrackError(error, constraints, um));\n                    }\n                });\n        } catch (e) {\n            logger.error('GUM failed: ', e);\n\n            if (failureCallback) {\n                failureCallback(new JitsiTrackError(e, constraints, um));\n            }\n        }\n    }\n\n    /**\n     * Acquires a media stream via getUserMedia that\n     * matches the given constraints\n     *\n     * @param {array} umDevices which devices to acquire (e.g. audio, video)\n     * @param {Object} constraints - Stream specifications to use.\n     * @returns {Promise}\n     */\n    _newGetUserMediaWithConstraints(umDevices, constraints = {}) {\n        return new Promise((resolve, reject) => {\n            try {\n                this.getUserMedia(constraints)\n                    .then(stream => {\n                        logger.log('onUserMediaSuccess');\n\n                        // TODO(brian): Is this call needed? Why is this\n                        // happening at gUM time? Isn't there an event listener\n                        // for this?\n                        setAvailableDevices(umDevices, stream);\n\n                        resolve(stream);\n                    })\n                    .catch(error => {\n                        logger.warn('Failed to get access to local media. '\n                            + ` ${error} ${constraints} `);\n\n                        // TODO(brian): Is this call needed? Why is this\n                        // happening at gUM time? Isn't there an event listener\n                        // for this?\n                        setAvailableDevices(umDevices, undefined);\n                        reject(new JitsiTrackError(\n                            error, constraints, umDevices));\n                    });\n            } catch (error) {\n                logger.error(`GUM failed: ${error}`);\n                reject(new JitsiTrackError(error, constraints, umDevices));\n            }\n        });\n    }\n\n    /**\n     * Acquire a display stream via the screenObtainer. This requires extra\n     * logic compared to use screenObtainer versus normal device capture logic\n     * in RTCUtils#_newGetUserMediaWithConstraints.\n     *\n     * @param {Object} desktopSharingExtensionExternalInstallation\n     * @param {string[]} desktopSharingSources\n     * @returns {Promise} A promise which will be resolved with an object whic\n     * contains the acquired display stream. If desktop sharing is not supported\n     * then a rejected promise will be returned.\n     */\n    _newGetDesktopMedia(\n            desktopSharingExtensionExternalInstallation,\n            desktopSharingSources) {\n        if (!screenObtainer.isSupported() || !RTCBrowserType.supportsVideo()) {\n            return Promise.reject(\n                new Error('Desktop sharing is not supported!'));\n        }\n\n        const desktopSharingOptions = {\n            ...desktopSharingExtensionExternalInstallation,\n            desktopSharingSources\n        };\n\n        return new Promise((resolve, reject) => {\n            screenObtainer.obtainStream(\n                desktopSharingOptions,\n                stream => {\n                    resolve(stream);\n                },\n                error => {\n                    reject(error);\n                });\n        });\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Creates the local MediaStreams.\n     * @param {Object} [options] optional parameters\n     * @param {Array} options.devices the devices that will be requested\n     * @param {string} options.resolution resolution constraints\n     * @param {bool} options.dontCreateJitsiTrack if <tt>true</tt> objects with\n     * the following structure {stream: the Media Stream, type: \"audio\" or\n     * \"video\", videoType: \"camera\" or \"desktop\"} will be returned trough the\n     * Promise, otherwise JitsiTrack objects will be returned.\n     * @param {string} options.cameraDeviceId\n     * @param {string} options.micDeviceId\n     * @returns {*} Promise object that will receive the new JitsiTracks\n     */\n    obtainAudioAndVideoPermissions(options = {}) {\n        const self = this;\n\n        const dsOptions = {\n            ...options.desktopSharingExtensionExternalInstallation,\n            desktopSharingSources: options.desktopSharingSources\n        };\n\n        return new Promise((resolve, reject) => {\n            const successCallback = function(stream) {\n                resolve(handleLocalStream(stream, options.resolution));\n            };\n\n            options.devices = options.devices || [ 'audio', 'video' ];\n            options.resolution = options.resolution || '720';\n\n            if (!screenObtainer.isSupported()\n                && options.devices.indexOf('desktop') !== -1) {\n                reject(new Error('Desktop sharing is not supported!'));\n            }\n            if (RTCBrowserType.isFirefox()\n\n                    // XXX The react-native-webrtc implementation that we\n                    // utilize on React Native at the time of this writing does\n                    // not support the MediaStream constructors defined by\n                    // https://www.w3.org/TR/mediacapture-streams/#constructors\n                    // and instead has a single constructor which expects (an\n                    // NSNumber as) a MediaStream ID.\n                    || RTCBrowserType.isReactNative()\n                    || RTCBrowserType.isTemasysPluginUsed()) {\n                const GUM = function(device, s, e) {\n                    this.getUserMediaWithConstraints(device, s, e, options);\n                };\n\n                const deviceGUM = {\n                    'audio': GUM.bind(self, [ 'audio' ]),\n                    'video': GUM.bind(self, [ 'video' ])\n                };\n\n                if (screenObtainer.isSupported()) {\n                    deviceGUM.desktop = screenObtainer.obtainStream.bind(\n                        screenObtainer,\n                        dsOptions);\n                }\n\n                // With FF/IE we can't split the stream into audio and video\n                // because FF doesn't support media stream constructors. So, we\n                // need to get the audio stream separately from the video stream\n                // using two distinct GUM calls. Not very user friendly :-( but\n                // we don't have many other options neither.\n                //\n                // Note that we pack those 2 streams in a single object and pass\n                // it to the successCallback method.\n                obtainDevices({\n                    devices: options.devices,\n                    streams: [],\n                    successCallback,\n                    errorCallback: reject,\n                    deviceGUM\n                });\n            } else {\n                const hasDesktop = options.devices.indexOf('desktop') > -1;\n\n                if (hasDesktop) {\n                    options.devices.splice(\n                        options.devices.indexOf('desktop'),\n                        1);\n                }\n\n                if (options.devices.length) {\n                    this.getUserMediaWithConstraints(\n                        options.devices,\n                        stream => {\n                            const audioDeviceRequested\n                                = options.devices.indexOf('audio') !== -1;\n                            const videoDeviceRequested\n                                = options.devices.indexOf('video') !== -1;\n                            const audioTracksReceived\n                                = stream.getAudioTracks().length > 0;\n                            const videoTracksReceived\n                                = stream.getVideoTracks().length > 0;\n\n                            if ((audioDeviceRequested && !audioTracksReceived)\n                                    || (videoDeviceRequested\n                                        && !videoTracksReceived)) {\n                                self.stopMediaStream(stream);\n\n                                // We are getting here in case if we requested\n                                // 'audio' or 'video' devices or both, but\n                                // didn't get corresponding MediaStreamTrack in\n                                // response stream. We don't know the reason why\n                                // this happened, so reject with general error.\n                                // eslint-disable-next-line no-shadow\n                                const devices = [];\n\n                                if (audioDeviceRequested\n                                        && !audioTracksReceived) {\n                                    devices.push('audio');\n                                }\n\n                                if (videoDeviceRequested\n                                        && !videoTracksReceived) {\n                                    devices.push('video');\n                                }\n\n                                // we are missing one of the media we requested\n                                // in order to get the actual error that caused\n                                // this missing media we will call one more time\n                                // getUserMedia so we can obtain the actual\n                                // error (Example usecases are requesting\n                                // audio and video and video device is missing\n                                // or device is denied to be used and chrome is\n                                // set to not ask for permissions)\n                                self.getUserMediaWithConstraints(\n                                    devices,\n                                    () => {\n                                        // we already failed to obtain this\n                                        // media, so we are not supposed in any\n                                        // way to receive success for this call\n                                        // any way we will throw an error to be\n                                        // sure the promise will finish\n                                        reject(new JitsiTrackError(\n                                            { name: 'UnknownError' },\n                                            getConstraints(\n                                                options.devices,\n                                                options),\n                                            devices)\n                                        );\n                                    },\n                                    error => {\n                                        // rejects with real error for not\n                                        // obtaining the media\n                                        reject(error);\n                                    }, options);\n\n                                return;\n                            }\n                            if (hasDesktop) {\n                                screenObtainer.obtainStream(\n                                    dsOptions,\n                                    desktop => {\n                                        successCallback({ audioVideo: stream,\n                                            desktop });\n                                    }, error => {\n                                        self.stopMediaStream(stream);\n\n                                        reject(error);\n                                    });\n                            } else {\n                                successCallback({ audioVideo: stream });\n                            }\n                        },\n                        error => reject(error),\n                        options);\n                } else if (hasDesktop) {\n                    screenObtainer.obtainStream(\n                        dsOptions,\n                        desktop => successCallback({ desktop }),\n                        error => reject(error));\n                }\n            }\n        });\n    }\n\n    /**\n     * Gets streams from specified device types. This function intentionally\n     * ignores errors for upstream to catch and handle instead.\n     *\n     * @param {Object} options - A hash describing what devices to get and\n     * relevant constraints.\n     * @param {string[]} options.devices - The types of media to capture. Valid\n     * values are \"desktop\", \"audio\", and \"video\".\n     * @returns {Promise} The promise, when successful, will return an array of\n     * meta data for the requested device type, which includes the stream and\n     * track. If an error occurs, it will be deferred to the caller for\n     * handling.\n     */\n    newObtainAudioAndVideoPermissions(options) {\n        logger.info('Using the new gUM flow');\n\n        const mediaStreamsMetaData = [];\n\n        // Declare private functions to be used in the promise chain below.\n        // These functions are declared in the scope of this function because\n        // they are not being used anywhere else, so only this function needs to\n        // know about them.\n\n        /**\n         * Executes a request for desktop media if specified in options.\n         *\n         * @returns {Promise}\n         */\n        const maybeRequestDesktopDevice = function() {\n            const umDevices = options.devices || [];\n            const isDesktopDeviceRequsted = umDevices.indexOf('desktop') !== -1;\n\n            return isDesktopDeviceRequsted\n                ? this._newGetDesktopMedia(\n                    options.desktopSharingExtensionExternalInstallation,\n                    options.desktopSharingSources)\n                : Promise.resolve();\n        }.bind(this);\n\n        /**\n         * Creates a meta data object about the passed in desktopStream and\n         * pushes the meta data to the internal array mediaStreamsMetaData to be\n         * returned later.\n         *\n         * @param {MediaStreamTrack} desktopStream - A track for a desktop\n         * capture.\n         * @returns {void}\n         */\n        const maybeCreateAndAddDesktopTrack = function(desktopStream) {\n            if (!desktopStream) {\n                return;\n            }\n\n            const { stream, sourceId, sourceType } = desktopStream;\n\n            mediaStreamsMetaData.push({\n                stream,\n                sourceId,\n                sourceType,\n                track: stream.getVideoTracks()[0],\n                videoType: VideoType.DESKTOP\n            });\n        };\n\n        /**\n         * Executes a request for audio and/or video, as specified in options.\n         * By default both audio and video will be captured if options.devices\n         * is not defined.\n         *\n         * @returns {Promise}\n         */\n        const maybeRequestCaptureDevices = function() {\n            const umDevices = options.devices || [ 'audio', 'video' ];\n            const requestedCaptureDevices = umDevices.filter(device =>\n                device === 'audio'\n                || (device === 'video' && RTCBrowserType.supportsVideo()));\n\n            if (!requestedCaptureDevices.length) {\n                return Promise.resolve();\n            }\n\n            const constraints = newGetConstraints(\n                requestedCaptureDevices, options);\n\n            logger.info('Got media constraints: ', constraints);\n\n            return this._newGetUserMediaWithConstraints(\n                requestedCaptureDevices, constraints);\n        }.bind(this);\n\n        /**\n         * Splits the passed in media stream into separate audio and video\n         * streams and creates meta data objects for each and pushes them to the\n         * internal array mediaStreamsMetaData to be returned later.\n         *\n         * @param {MediaStreamTrack} avStream - A track for with audio and/or\n         * video track.\n         * @returns {void}\n         */\n        const maybeCreateAndAddAVTracks = function(avStream) {\n            if (!avStream) {\n                return;\n            }\n\n            const audioTracks = avStream.getAudioTracks();\n\n            if (audioTracks.length) {\n                const audioStream = new MediaStream(audioTracks);\n\n                mediaStreamsMetaData.push({\n                    stream: audioStream,\n                    track: audioStream.getAudioTracks()[0]\n                });\n            }\n\n            const videoTracks = avStream.getVideoTracks();\n\n            if (videoTracks.length) {\n                const videoStream = new MediaStream(videoTracks);\n\n                mediaStreamsMetaData.push({\n                    stream: videoStream,\n                    track: videoStream.getVideoTracks()[0],\n                    videoType: VideoType.CAMERA\n                });\n            }\n        };\n\n        return maybeRequestDesktopDevice()\n            .then(maybeCreateAndAddDesktopTrack)\n            .then(maybeRequestCaptureDevices)\n            .then(maybeCreateAndAddAVTracks)\n            .then(() => mediaStreamsMetaData);\n    }\n\n    /**\n     *\n     */\n    getDeviceAvailability() {\n        return devices;\n    }\n\n    /**\n     *\n     */\n    isRTCReady() {\n        return rtcReady;\n    }\n\n    /**\n     *\n     */\n    _isDeviceListAvailable() {\n        if (!rtcReady) {\n            throw new Error('WebRTC not ready yet');\n        }\n\n        return Boolean(\n            (navigator.mediaDevices\n                && navigator.mediaDevices.enumerateDevices)\n            || (typeof MediaStreamTrack !== 'undefined'\n                && MediaStreamTrack.getSources));\n    }\n\n    /**\n     * Returns a promise which can be used to make sure that the WebRTC stack\n     * has been initialized.\n     *\n     * @returns {Promise} which is resolved only if the WebRTC stack is ready.\n     * Note that currently we do not detect stack initialization failure and\n     * the promise is never rejected(unless unexpected error occurs).\n     */\n    onRTCReady() {\n        if (rtcReady) {\n            return Promise.resolve();\n        }\n\n        return new Promise(resolve => {\n            const listener = () => {\n                eventEmitter.removeListener(RTCEvents.RTC_READY, listener);\n                resolve();\n            };\n\n            eventEmitter.addListener(RTCEvents.RTC_READY, listener);\n\n            // We have no failed event, so... it either resolves or nothing\n            // happens.\n        });\n\n    }\n\n    /**\n     * Checks if its possible to enumerate available cameras/microphones.\n     *\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\n     * the WebRTC stack is ready, either with true if the device listing is\n     * available available or with false otherwise.\n     */\n    isDeviceListAvailable() {\n        return this.onRTCReady().then(this._isDeviceListAvailable.bind(this));\n    }\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @params {string} [deviceType] - type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     */\n    isDeviceChangeAvailable(deviceType) {\n        return deviceType === 'output' || deviceType === 'audiooutput'\n            ? isAudioOutputDeviceChangeAvailable\n            : RTCBrowserType.isChrome()\n                || RTCBrowserType.isFirefox()\n                || RTCBrowserType.isOpera()\n                || RTCBrowserType.isTemasysPluginUsed()\n                || RTCBrowserType.isNWJS()\n                || RTCBrowserType.isElectron()\n                || RTCBrowserType.isEdge();\n    }\n\n    /**\n     * A method to handle stopping of the stream.\n     * One point to handle the differences in various implementations.\n     * @param mediaStream MediaStream object to stop.\n     */\n    stopMediaStream(mediaStream) {\n        mediaStream.getTracks().forEach(track => {\n            // stop() not supported with IE\n            if (!RTCBrowserType.isTemasysPluginUsed() && track.stop) {\n                track.stop();\n            }\n        });\n\n        // leave stop for implementation still using it\n        if (mediaStream.stop) {\n            mediaStream.stop();\n        }\n\n        // The MediaStream implementation of the react-native-webrtc project has\n        // an explicit release method that is to be invoked in order to release\n        // used resources such as memory.\n        if (mediaStream.release) {\n            mediaStream.release();\n        }\n\n        // if we have done createObjectURL, lets clean it\n        const url = mediaStream.jitsiObjectURL;\n\n        if (url) {\n            delete mediaStream.jitsiObjectURL;\n            (URL || webkitURL).revokeObjectURL(url);\n        }\n    }\n\n    /**\n     * Returns whether the desktop sharing is enabled or not.\n     * @returns {boolean}\n     */\n    isDesktopSharingEnabled() {\n        return screenObtainer.isSupported();\n    }\n\n    /**\n     * Sets current audio output device.\n     * @param {string} deviceId - id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices(), 'default' for default\n     *      device\n     * @returns {Promise} - resolves when audio output is changed, is rejected\n     *      otherwise\n     */\n    setAudioOutputDevice(deviceId) {\n        if (!this.isDeviceChangeAvailable('output')) {\n            Promise.reject(\n                new Error('Audio output device change is not supported'));\n        }\n\n        return featureDetectionAudioEl.setSinkId(deviceId)\n            .then(() => {\n                audioOutputDeviceId = deviceId;\n                audioOutputChanged = true;\n\n                logger.log(`Audio output device set to ${deviceId}`);\n\n                eventEmitter.emit(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                    deviceId);\n            });\n    }\n\n    /**\n     * Returns currently used audio output device id, '' stands for default\n     * device\n     * @returns {string}\n     */\n    getAudioOutputDevice() {\n        return audioOutputDeviceId;\n    }\n\n    /**\n     * Returns list of available media devices if its obtained, otherwise an\n     * empty array is returned/\n     * @returns {Array} list of available media devices.\n     */\n    getCurrentlyAvailableMediaDevices() {\n        return currentlyAvailableMediaDevices;\n    }\n\n    /**\n     * Returns event data for device to be reported to stats.\n     * @returns {MediaDeviceInfo} device.\n     */\n    getEventDataForActiveDevice(device) {\n        const deviceList = [];\n        const deviceData = {\n            'deviceId': device.deviceId,\n            'kind': device.kind,\n            'label': device.label,\n            'groupId': device.groupId\n        };\n\n        deviceList.push(deviceData);\n\n        return { deviceList };\n    }\n\n    /**\n     * Configures the given PeerConnection constraints to either enable or\n     * disable (according to the value of the 'enable' parameter) the\n     * 'googSuspendBelowMinBitrate' option.\n     * @param constraints the constraints on which to operate.\n     * @param enable {boolean} whether to enable or disable the suspend video\n     * option.\n     */\n    setSuspendVideo(constraints, enable) {\n        if (!constraints.optional) {\n            constraints.optional = [];\n        }\n\n        // Get rid of all \"googSuspendBelowMinBitrate\" constraints (we assume\n        // that the elements of constraints.optional contain a single property).\n        constraints.optional\n            = constraints.optional.filter(\n                c => !c.hasOwnProperty('googSuspendBelowMinBitrate'));\n\n        if (enable) {\n            constraints.optional.push({ googSuspendBelowMinBitrate: 'true' });\n        }\n    }\n}\n\n/**\n * Rejects a Promise because WebRTC is not supported.\n *\n * @param {string} errorMessage - The human-readable message of the Error which\n * is the reason for the rejection.\n * @param {Function} reject - The reject function of the Promise.\n * @returns {void}\n */\nfunction rejectWithWebRTCNotSupported(errorMessage, reject) {\n    const error = new Error(errorMessage);\n\n    // WebRTC is not supported either natively or via a known plugin such as\n    // Temasys.\n    // XXX The Error class already has a property name which is commonly used to\n    // detail the represented error in a non-human-readable way (in contrast to\n    // the human-readable property message). I explicitly did not want to\n    // introduce a new specific property.\n    // FIXME None of the existing JitsiXXXErrors seemed to be appropriate\n    // recipients of the constant WEBRTC_NOT_SUPPORTED so I explicitly chose to\n    // leave it as a magic string at the time of this writing.\n    error.name = 'WEBRTC_NOT_SUPPORTED';\n\n    logger.error(errorMessage);\n    reject(error);\n}\n\nconst rtcUtils = new RTCUtils();\n\n/**\n *\n * @param options\n */\nfunction obtainDevices(options) {\n    if (!options.devices || options.devices.length === 0) {\n        return options.successCallback(options.streams || {});\n    }\n\n    const device = options.devices.splice(0, 1);\n\n    options.deviceGUM[device](\n        stream => {\n            options.streams = options.streams || {};\n            options.streams[device] = stream;\n            obtainDevices(options);\n        },\n        error => {\n            Object.keys(options.streams).forEach(\n                d => rtcUtils.stopMediaStream(options.streams[d]));\n            logger.error(\n                `failed to obtain ${device} stream - stop`, error);\n\n            options.errorCallback(error);\n        });\n}\n\n/**\n * In case of IE we continue from 'onReady' callback passed to RTCUtils\n * constructor. It will be invoked by Temasys plugin once it is initialized.\n *\n * @param options\n * @param GUM\n */\nfunction onReady(options, GUM) {\n    rtcReady = true;\n    eventEmitter.emit(RTCEvents.RTC_READY, true);\n    screenObtainer.init(options, GUM);\n\n    if (rtcUtils.isDeviceListAvailable() && rawEnumerateDevicesWithCallback) {\n        rawEnumerateDevicesWithCallback(ds => {\n            currentlyAvailableMediaDevices = ds.splice(0);\n\n            logger.info('Available devices: ', currentlyAvailableMediaDevices);\n            sendDeviceListToAnalytics(currentlyAvailableMediaDevices);\n\n            eventEmitter.emit(RTCEvents.DEVICE_LIST_AVAILABLE,\n                currentlyAvailableMediaDevices);\n\n            if (isDeviceChangeEventSupported) {\n                navigator.mediaDevices.addEventListener(\n                    'devicechange',\n                    () => rtcUtils.enumerateDevices(onMediaDevicesListChanged));\n            } else {\n                pollForAvailableMediaDevices();\n            }\n        });\n    }\n}\n\n/**\n * Wraps original attachMediaStream function to set current audio output device\n * if this is supported.\n * @param {Function} origAttachMediaStream\n * @returns {Function}\n */\nfunction wrapAttachMediaStream(origAttachMediaStream) {\n    return function(element, stream) {\n        // eslint-disable-next-line prefer-rest-params\n        const res = origAttachMediaStream.apply(rtcUtils, arguments);\n\n        if (stream\n                && rtcUtils.isDeviceChangeAvailable('output')\n                && stream.getAudioTracks\n                && stream.getAudioTracks().length\n\n                // we skip setting audio output if there was no explicit change\n                && audioOutputChanged) {\n            element.setSinkId(rtcUtils.getAudioOutputDevice())\n                .catch(function(ex) {\n                    const err\n                        = new JitsiTrackError(ex, null, [ 'audiooutput' ]);\n\n                    GlobalOnErrorHandler.callUnhandledRejectionHandler({\n                        promise: this, // eslint-disable-line no-invalid-this\n                        reason: err\n                    });\n\n                    logger.warn(\n                        'Failed to set audio output device for the element.'\n                            + ' Default audio output device will be used'\n                            + ' instead',\n                        element,\n                        err);\n                });\n        }\n\n        return res;\n    };\n}\n\nexport default rtcUtils;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/RTCUtils.js","import * as transform from 'sdp-transform';\n\n/**\n * Parses the primary SSRC of given SSRC group.\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\n * @return {Number} the primary SSRC number\n */\nexport function parsePrimarySSRC(group) {\n    return parseInt(group.ssrcs.split(' ')[0], 10);\n}\n\n/**\n * Parses the secondary SSRC of given SSRC group.\n * @param {object} group the SSRC group object as defined by the 'sdp-transform'\n * @return {Number} the secondary SSRC number\n */\nexport function parseSecondarySSRC(group) {\n    return parseInt(group.ssrcs.split(' ')[1], 10);\n}\n\n/**\n * Tells how many distinct SSRCs are contained in given media line.\n * @param {Object} mLine the media line object as defined by 'sdp-transform' lib\n * @return {number}\n */\nfunction _getSSRCCount(mLine) {\n    if (!mLine.ssrcs) {\n        return 0;\n    }\n\n    return mLine.ssrcs\n        .map(ssrcInfo => ssrcInfo.id)\n        .filter((ssrc, index, array) => array.indexOf(ssrc) === index)\n        .length;\n}\n\n/**\n * A wrapper around 'sdp-transform' media description object which provides\n * utility methods for common SDP/SSRC related operations.\n */\nclass MLineWrap {\n\n    /**\n     * Creates new <tt>MLineWrap</t>>\n     * @param {Object} mLine the media line object as defined by 'sdp-transform'\n     * lib.\n     */\n    constructor(mLine) {\n        if (!mLine) {\n            throw new Error('mLine is undefined');\n        }\n\n        this.mLine = mLine;\n    }\n\n    /**\n     * Getter for the mLine's \"ssrcs\" array. If the array was undefined an empty\n     * one will be preassigned.\n     *\n     * @return {Array<Object>} an array of 'sdp-transform' SSRC attributes\n     * objects.\n     */\n    get ssrcs() {\n        if (!this.mLine.ssrcs) {\n            this.mLine.ssrcs = [];\n        }\n\n        return this.mLine.ssrcs;\n    }\n\n    /**\n     * Setter for the mLine's \"ssrcs\" array.\n     *\n     * @param {Array<Object>} ssrcs an array of 'sdp-transform' SSRC attributes\n     * objects.\n     */\n    set ssrcs(ssrcs) {\n        this.mLine.ssrcs = ssrcs;\n    }\n\n    /**\n     * Returns the direction of the underlying media description.\n     * @return {string} the media direction name as defined in the SDP.\n     */\n    get direction() {\n        return this.mLine.direction;\n    }\n\n    /**\n     * Modifies the direction of the underlying media description.\n     * @param {string} direction the new direction to be set\n     */\n    set direction(direction) {\n        this.mLine.direction = direction;\n    }\n\n    /**\n     * Exposes the SSRC group array of the underlying media description object.\n     * @return {Array.<Object>}\n     */\n    get ssrcGroups() {\n        if (!this.mLine.ssrcGroups) {\n            this.mLine.ssrcGroups = [];\n        }\n\n        return this.mLine.ssrcGroups;\n    }\n\n    /**\n     * Modifies the SSRC groups array of the underlying media description\n     * object.\n     * @param {Array.<Object>} ssrcGroups\n     */\n    set ssrcGroups(ssrcGroups) {\n        this.mLine.ssrcGroups = ssrcGroups;\n    }\n\n    /**\n     * Obtains value from SSRC attribute.\n     * @param {number} ssrcNumber the SSRC number for which attribute is to be\n     * found\n     * @param {string} attrName the name of the SSRC attribute to be found.\n     * @return {string|undefined} the value of SSRC attribute or\n     * <tt>undefined</tt> if no such attribute exists.\n     */\n    getSSRCAttrValue(ssrcNumber, attrName) {\n        const attribute = this.ssrcs.find(\n            ssrcObj => ssrcObj.id === ssrcNumber\n            && ssrcObj.attribute === attrName);\n\n\n        return attribute && attribute.value;\n    }\n\n    /**\n     * Removes all attributes for given SSRC number.\n     * @param {number} ssrcNum the SSRC number for which all attributes will be\n     * removed.\n     */\n    removeSSRC(ssrcNum) {\n        if (!this.mLine.ssrcs || !this.mLine.ssrcs.length) {\n            return;\n        }\n\n        this.mLine.ssrcs\n            = this.mLine.ssrcs.filter(ssrcObj => ssrcObj.id !== ssrcNum);\n    }\n\n    /**\n     * Adds SSRC attribute\n     * @param {object} ssrcObj the SSRC attribute object as defined in\n     * the 'sdp-transform' lib.\n     */\n    addSSRCAttribute(ssrcObj) {\n        this.ssrcs.push(ssrcObj);\n    }\n\n    /**\n     * Finds a SSRC group matching both semantics and SSRCs in order.\n     * @param {string} semantics the name of the semantics\n     * @param {string} [ssrcs] group SSRCs as a string (like it's defined in\n     * SSRC group object of the 'sdp-transform' lib) e.g. \"1232546 342344 25434\"\n     * @return {object|undefined} the SSRC group object or <tt>undefined</tt> if\n     * not found.\n     */\n    findGroup(semantics, ssrcs) {\n        return this.ssrcGroups.find(\n            group =>\n                group.semantics === semantics\n                    && (!ssrcs || ssrcs === group.ssrcs));\n    }\n\n    /**\n     * Finds all groups matching given semantic's name.\n     * @param {string} semantics the name of the semantics\n     * @return {Array.<object>} an array of SSRC group objects as defined by\n     * the 'sdp-transform' lib.\n     */\n    findGroups(semantics) {\n        return this.ssrcGroups.filter(\n            group => group.semantics === semantics);\n    }\n\n    /**\n     * Finds all groups matching given semantic's name and group's primary SSRC.\n     * @param {string} semantics the name of the semantics\n     * @param {number} primarySSRC the primary SSRC number to be matched\n     * @return {Object} SSRC group object as defined by the 'sdp-transform' lib.\n     */\n    findGroupByPrimarySSRC(semantics, primarySSRC) {\n        return this.ssrcGroups.find(\n            group => group.semantics === semantics\n                && parsePrimarySSRC(group) === primarySSRC);\n    }\n\n    /**\n     * @param {string|null} msid the media stream id or <tt>null</tt> to match\n     * the first SSRC object with any 'msid' value.\n     * @return {Object|undefined} the SSRC object as defined by 'sdp-transform'\n     * lib.\n     */\n    findSSRCByMSID(msid) {\n        return this.ssrcs.find(\n            ssrcObj => ssrcObj.attribute === 'msid'\n                && (msid === null || ssrcObj.value === msid));\n    }\n\n    /**\n     * Gets the SSRC count for the underlying media description.\n     * @return {number}\n     */\n    getSSRCCount() {\n        return _getSSRCCount(this.mLine);\n    }\n\n    /**\n     * Checks whether the underlying media description contains any SSRC groups.\n     * @return {boolean} <tt>true</tt> if there are any SSRC groups or\n     * <tt>false</tt> otherwise.\n     */\n    containsAnySSRCGroups() {\n        return this.mLine.ssrcGroups !== undefined;\n    }\n\n    /**\n     * Finds the primary video SSRC.\n     * @returns {number|undefined} the primary video ssrc\n     * @throws Error if the underlying media description is not a video\n     */\n    getPrimaryVideoSsrc() {\n        const mediaType = this.mLine.type;\n\n        if (mediaType !== 'video') {\n            throw new Error(\n                `getPrimarySsrc doesn't work with '${mediaType}'`);\n        }\n\n        const numSsrcs = _getSSRCCount(this.mLine);\n\n        if (numSsrcs === 1) {\n            // Not using \"ssrcs\" getter on purpose here\n            return this.mLine.ssrcs[0].id;\n        }\n\n        // Look for a SIM, FID, or FEC-FR group\n        if (this.mLine.ssrcGroups) {\n            const simGroup = this.findGroup('SIM');\n\n            if (simGroup) {\n                return parsePrimarySSRC(simGroup);\n            }\n            const fidGroup = this.findGroup('FID');\n\n            if (fidGroup) {\n                return parsePrimarySSRC(fidGroup);\n            }\n            const fecGroup = this.findGroup('FEC-FR');\n\n            if (fecGroup) {\n                return parsePrimarySSRC(fecGroup);\n            }\n        }\n\n    }\n\n    /**\n     * Obtains RTX SSRC from the underlying video description (the\n     * secondary SSRC of the first \"FID\" group found)\n     * @param {number} primarySsrc the video ssrc for which to find the\n     * corresponding rtx ssrc\n     * @returns {number|undefined} the rtx ssrc (or undefined if there isn't\n     * one)\n     */\n    getRtxSSRC(primarySsrc) {\n        const fidGroup = this.findGroupByPrimarySSRC('FID', primarySsrc);\n\n\n        return fidGroup && parseSecondarySSRC(fidGroup);\n    }\n\n    /**\n     * Obtains all SSRCs contained in the underlying media description.\n     * @return {Array.<number>} an array with all SSRC as numbers.\n     */\n    getSSRCs() {\n        return this.ssrcs\n            .map(ssrcInfo => ssrcInfo.id)\n            .filter((ssrc, index, array) => array.indexOf(ssrc) === index);\n    }\n\n    /**\n     * Obtains primary video SSRCs.\n     * @return {Array.<number>} an array of all primary video SSRCs as numbers.\n     * @throws Error if the wrapped media description is not a video.\n     */\n    getPrimaryVideoSSRCs() {\n        const mediaType = this.mLine.type;\n\n        if (mediaType !== 'video') {\n            throw new Error(\n                `getPrimaryVideoSSRCs doesn't work with ${mediaType}`);\n        }\n\n        const videoSSRCs = this.getSSRCs();\n\n        for (const ssrcGroupInfo of this.ssrcGroups) {\n            // Right now, FID and FEC-FR groups are the only ones we parse to\n            // disqualify streams.  If/when others arise we'll\n            // need to add support for them here\n            if (ssrcGroupInfo.semantics === 'FID'\n                    || ssrcGroupInfo.semantics === 'FEC-FR') {\n                // secondary streams should be filtered out\n                const secondarySsrc = parseSecondarySSRC(ssrcGroupInfo);\n\n                videoSSRCs.splice(\n                    videoSSRCs.indexOf(secondarySsrc), 1);\n            }\n        }\n\n        return videoSSRCs;\n    }\n\n    /**\n     * Dumps all SSRC groups of this media description to JSON.\n     */\n    dumpSSRCGroups() {\n        return JSON.stringify(this.mLine.ssrcGroups);\n    }\n\n    /**\n     * Removes all SSRC groups which contain given SSRC number at any position.\n     * @param {number} ssrc the SSRC for which all matching groups are to be\n     * removed.\n     */\n    removeGroupsWithSSRC(ssrc) {\n        if (!this.mLine.ssrcGroups) {\n            return;\n        }\n\n        this.mLine.ssrcGroups = this.mLine.ssrcGroups\n            .filter(groupInfo => groupInfo.ssrcs.indexOf(`${ssrc}`) === -1);\n    }\n\n    /**\n     * Removes groups that match given semantics.\n     * @param {string} semantics e.g. \"SIM\" or \"FID\"\n     */\n    removeGroupsBySemantics(semantics) {\n        if (!this.mLine.ssrcGroups) {\n            return;\n        }\n\n        this.mLine.ssrcGroups\n            = this.mLine.ssrcGroups\n                .filter(groupInfo => groupInfo.semantics !== semantics);\n    }\n\n    /**\n     * Replaces SSRC (does not affect SSRC groups, but only attributes).\n     * @param {number} oldSSRC the old SSRC number\n     * @param {number} newSSRC the new SSRC number\n     */\n    replaceSSRC(oldSSRC, newSSRC) {\n        if (this.mLine.ssrcs) {\n            this.mLine.ssrcs.forEach(ssrcInfo => {\n                if (ssrcInfo.id === oldSSRC) {\n                    ssrcInfo.id = newSSRC;\n                }\n            });\n        }\n    }\n\n    /**\n     * Adds given SSRC group to this media description.\n     * @param {object} group the SSRC group object as defined by\n     * the 'sdp-transform' lib.\n     */\n    addSSRCGroup(group) {\n        this.ssrcGroups.push(group);\n    }\n}\n\n/**\n * Utility class for SDP manipulation using the 'sdp-transform' library.\n *\n * Typical use usage scenario:\n *\n * const transformer = new SdpTransformWrap(rawSdp);\n * const videoMLine = transformer.selectMedia('video);\n * if (videoMLine) {\n *     videoMLiner.addSSRCAttribute({\n *         id: 2342343,\n *         attribute: \"cname\",\n *         value: \"someCname\"\n *     });\n *     rawSdp = transformer.toRawSdp();\n * }\n */\nexport class SdpTransformWrap {\n\n    /**\n     * Creates new instance and parses the raw SDP into objects using\n     * 'sdp-transform' lib.\n     * @param {string} rawSDP the SDP in raw text format.\n     */\n    constructor(rawSDP) {\n        this.parsedSDP = transform.parse(rawSDP);\n    }\n\n    /**\n     * Selects the first media SDP of given name.\n     * @param {string} mediaType the name of the media e.g. 'audio', 'video',\n     * 'data'.\n     * @return {MLineWrap|null} return {@link MLineWrap} instance for the media\n     * line or <tt>null</tt> if not found. The object returned references\n     * the underlying SDP state held by this <tt>SdpTransformWrap</tt> instance\n     * (it's not a copy).\n     */\n    selectMedia(mediaType) {\n        const selectedMLine\n            = this.parsedSDP.media.find(mLine => mLine.type === mediaType);\n\n        return selectedMLine ? new MLineWrap(selectedMLine) : null;\n    }\n\n    /**\n     * Converts the currently stored SDP state in this instance to raw text SDP\n     * format.\n     * @return {string}\n     */\n    toRawSDP() {\n        return transform.write(this.parsedSDP);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/SdpTransformUtil.js","/**\n * Status that video SIP GW service is available.\n * @type {string}\n */\nexport const STATUS_AVAILABLE = 'available';\n\n/**\n * Status that video SIP GW service is not available.\n * @type {string}\n */\nexport const STATUS_UNDEFINED = 'undefined';\n\n/**\n * Status that video SIP GW service is available but there are no free nodes\n * at the moment to serve new requests.\n * @type {string}\n */\nexport const STATUS_BUSY = 'busy';\n\n/**\n * Video SIP GW session state, currently running.\n * @type {string}\n */\nexport const STATE_ON = 'on';\n\n/**\n * Video SIP GW session state, currently stopped and not running.\n * @type {string}\n */\nexport const STATE_OFF = 'off';\n\n/**\n * Video SIP GW session state, currently is starting.\n * @type {string}\n */\nexport const STATE_PENDING = 'pending';\n\n/**\n * Video SIP GW session state, has observed some issues and is retrying at the\n * moment.\n * @type {string}\n */\nexport const STATE_RETRYING = 'retrying';\n\n/**\n * Video SIP GW session state, tried to start but it failed.\n * @type {string}\n */\nexport const STATE_FAILED = 'failed';\n\n/**\n * Error on trying to create video SIP GW session in conference where\n * there is no room connection (hasn't joined or has left the room).\n * @type {string}\n */\nexport const ERROR_NO_CONNECTION = 'error_no_connection';\n\n/**\n * Error on trying to create video SIP GW session with address for which\n * there is an already created session.\n * @type {string}\n */\nexport const ERROR_SESSION_EXISTS = 'error_session_already_exists';\n\n\n\n// WEBPACK FOOTER //\n// ./modules/videosipgw/VideoSIPGWConstants.js","/**\n * Indicates that the local connection statistics were updated.\n */\nexport const LOCAL_STATS_UPDATED = 'cq.local_stats_updated';\n\n/**\n * Indicates that the connection statistics for a particular remote participant\n * were updated.\n */\nexport const REMOTE_STATS_UPDATED = 'cq.remote_stats_updated';\n\n\n\n// WEBPACK FOOTER //\n// ./service/connectivity/ConnectionQualityEvents.js","/**\n * The errors for the conference.\n */\n\n/**\n * Indicates that client must be authenticated to create the conference.\n */\nexport const AUTHENTICATION_REQUIRED = 'conference.authenticationRequired';\n\n/**\n * Indicates that chat error occurred.\n */\nexport const CHAT_ERROR = 'conference.chatError';\n\n/**\n * Indicates that conference has been destroyed.\n */\nexport const CONFERENCE_DESTROYED = 'conference.destroyed';\n\n/**\n * Indicates that max users limit has been reached.\n */\nexport const CONFERENCE_MAX_USERS = 'conference.max_users';\n\n/**\n * Indicates that a connection error occurred when trying to join a conference.\n */\nexport const CONNECTION_ERROR = 'conference.connectionError';\n\n/**\n * Indicates that a connection error is due to not allowed,\n * occurred when trying to join a conference.\n */\nexport const NOT_ALLOWED_ERROR = 'conference.connectionError.notAllowed';\n\n/**\n * Indicates that focus error happened.\n */\nexport const FOCUS_DISCONNECTED = 'conference.focusDisconnected';\n\n/**\n * Indicates that focus left the conference.\n */\nexport const FOCUS_LEFT = 'conference.focusLeft';\n\n/**\n * Indicates that graceful shutdown happened.\n */\nexport const GRACEFUL_SHUTDOWN = 'conference.gracefulShutdown';\n\n/**\n * Indicates that the versions of the server side components are incompatible\n * with the client side.\n */\nexport const INCOMPATIBLE_SERVER_VERSIONS\n    = 'conference.incompatible_server_versions';\n\n/**\n * Indicates that jingle fatal error happened.\n */\nexport const JINGLE_FATAL_ERROR = 'conference.jingleFatalError';\n\n/**\n * Indicates that password cannot be set for this conference.\n */\nexport const PASSWORD_NOT_SUPPORTED = 'conference.passwordNotSupported';\n\n/**\n * Indicates that a password is required in order to join the conference.\n */\nexport const PASSWORD_REQUIRED = 'conference.passwordRequired';\n\n/**\n * Indicates that reservation system returned error.\n */\nexport const RESERVATION_ERROR = 'conference.reservationError';\n\n/**\n * Indicates that the conference setup failed.\n */\nexport const SETUP_FAILED = 'conference.setup_failed';\n\n/**\n * Indicates that there is no available videobridge.\n */\nexport const VIDEOBRIDGE_NOT_AVAILABLE = 'conference.videobridgeNotAvailable';\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiConferenceErrors.js","/*! callstats.js  version = 3.27.0 2017-12-14 */\nfunction SWPlugin(){this.attaches=[],this.signalListeners=[],this.mapFnc=null}SWPlugin.prototype={constructor:SWPlugin,add:function(a){console.log(\"Abstract method is called width value: \"+a)},remove:function(a){console.log(\"Abstract method is called with value: \"+a)},attach:function(a,b){this.attaches.push({cb:a,that:\"undefined\"==typeof b?null:b})},notify:function(a){for(var b=0;b<this.attaches.length;++b){var c=this.attaches[b];c.cb?c.cb.call(c.that,a):c.cb(a)}},addMapFnc:function(a){this.mapFnc=a},map:function(){},mapping:function(a,b){null!==this.mapFnc&&this.mapFnc(a,b)},addSignalListener:function(a,b,c){this.signalListeners.push({signalName:a,cb:b,that:\"undefined\"==typeof c?null:c})},signalize:function(a,b){for(var c=0;c<this.signalListeners.length;++c){var d=this.signalListeners[c];d.signalName===a&&null!==d.cb&&void 0!==d.cb&&(d.that?d.cb.call(d.that,b):d.cb(b))}}},module.exports=SWPlugin;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/swPlugin.js\n// module id = 33\n// module chunks = 0","// shim for using process in browser\nvar process = module.exports = {};\n\n// cached from whatever global is present so that test runners that stub it\n// don't break things.  But we need to wrap it in a try catch in case it is\n// wrapped in strict mode code which doesn't define any globals.  It's inside a\n// function because try/catches deoptimize in certain engines.\n\nvar cachedSetTimeout;\nvar cachedClearTimeout;\n\nfunction defaultSetTimout() {\n    throw new Error('setTimeout has not been defined');\n}\nfunction defaultClearTimeout () {\n    throw new Error('clearTimeout has not been defined');\n}\n(function () {\n    try {\n        if (typeof setTimeout === 'function') {\n            cachedSetTimeout = setTimeout;\n        } else {\n            cachedSetTimeout = defaultSetTimout;\n        }\n    } catch (e) {\n        cachedSetTimeout = defaultSetTimout;\n    }\n    try {\n        if (typeof clearTimeout === 'function') {\n            cachedClearTimeout = clearTimeout;\n        } else {\n            cachedClearTimeout = defaultClearTimeout;\n        }\n    } catch (e) {\n        cachedClearTimeout = defaultClearTimeout;\n    }\n} ())\nfunction runTimeout(fun) {\n    if (cachedSetTimeout === setTimeout) {\n        //normal enviroments in sane situations\n        return setTimeout(fun, 0);\n    }\n    // if setTimeout wasn't available but was latter defined\n    if ((cachedSetTimeout === defaultSetTimout || !cachedSetTimeout) && setTimeout) {\n        cachedSetTimeout = setTimeout;\n        return setTimeout(fun, 0);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedSetTimeout(fun, 0);\n    } catch(e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't trust the global object when called normally\n            return cachedSetTimeout.call(null, fun, 0);\n        } catch(e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error\n            return cachedSetTimeout.call(this, fun, 0);\n        }\n    }\n\n\n}\nfunction runClearTimeout(marker) {\n    if (cachedClearTimeout === clearTimeout) {\n        //normal enviroments in sane situations\n        return clearTimeout(marker);\n    }\n    // if clearTimeout wasn't available but was latter defined\n    if ((cachedClearTimeout === defaultClearTimeout || !cachedClearTimeout) && clearTimeout) {\n        cachedClearTimeout = clearTimeout;\n        return clearTimeout(marker);\n    }\n    try {\n        // when when somebody has screwed with setTimeout but no I.E. maddness\n        return cachedClearTimeout(marker);\n    } catch (e){\n        try {\n            // When we are in I.E. but the script has been evaled so I.E. doesn't  trust the global object when called normally\n            return cachedClearTimeout.call(null, marker);\n        } catch (e){\n            // same as above but when it's a version of I.E. that must have the global object for 'this', hopfully our context correct otherwise it will throw a global error.\n            // Some versions of I.E. have different rules for clearTimeout vs setTimeout\n            return cachedClearTimeout.call(this, marker);\n        }\n    }\n\n\n\n}\nvar queue = [];\nvar draining = false;\nvar currentQueue;\nvar queueIndex = -1;\n\nfunction cleanUpNextTick() {\n    if (!draining || !currentQueue) {\n        return;\n    }\n    draining = false;\n    if (currentQueue.length) {\n        queue = currentQueue.concat(queue);\n    } else {\n        queueIndex = -1;\n    }\n    if (queue.length) {\n        drainQueue();\n    }\n}\n\nfunction drainQueue() {\n    if (draining) {\n        return;\n    }\n    var timeout = runTimeout(cleanUpNextTick);\n    draining = true;\n\n    var len = queue.length;\n    while(len) {\n        currentQueue = queue;\n        queue = [];\n        while (++queueIndex < len) {\n            if (currentQueue) {\n                currentQueue[queueIndex].run();\n            }\n        }\n        queueIndex = -1;\n        len = queue.length;\n    }\n    currentQueue = null;\n    draining = false;\n    runClearTimeout(timeout);\n}\n\nprocess.nextTick = function (fun) {\n    var args = new Array(arguments.length - 1);\n    if (arguments.length > 1) {\n        for (var i = 1; i < arguments.length; i++) {\n            args[i - 1] = arguments[i];\n        }\n    }\n    queue.push(new Item(fun, args));\n    if (queue.length === 1 && !draining) {\n        runTimeout(drainQueue);\n    }\n};\n\n// v8 likes predictible objects\nfunction Item(fun, array) {\n    this.fun = fun;\n    this.array = array;\n}\nItem.prototype.run = function () {\n    this.fun.apply(null, this.array);\n};\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\nprocess.version = ''; // empty string to avoid regexp issues\nprocess.versions = {};\n\nfunction noop() {}\n\nprocess.on = noop;\nprocess.addListener = noop;\nprocess.once = noop;\nprocess.off = noop;\nprocess.removeListener = noop;\nprocess.removeAllListeners = noop;\nprocess.emit = noop;\nprocess.prependListener = noop;\nprocess.prependOnceListener = noop;\n\nprocess.listeners = function (name) { return [] }\n\nprocess.binding = function (name) {\n    throw new Error('process.binding is not supported');\n};\n\nprocess.cwd = function () { return '/' };\nprocess.chdir = function (dir) {\n    throw new Error('process.chdir is not supported');\n};\nprocess.umask = function() { return 0; };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/process/browser.js\n// module id = 34\n// module chunks = 0","const Resolutions = {\n    '1080': {\n        width: 1920,\n        height: 1080,\n        order: 7\n    },\n    'fullhd': {\n        width: 1920,\n        height: 1080,\n        order: 7\n    },\n    '720': {\n        width: 1280,\n        height: 720,\n        order: 6\n    },\n    'hd': {\n        width: 1280,\n        height: 720,\n        order: 6\n    },\n    '960': {\n        width: 960,\n        height: 720,\n        order: 5\n    },\n\n    // 16:9 resolution first.\n    '360': {\n        width: 640,\n        height: 360,\n        order: 4\n    },\n    '640': {\n        width: 640,\n        height: 480,\n        order: 3\n    },\n    'vga': {\n        width: 640,\n        height: 480,\n        order: 3\n    },\n\n    // 16:9 resolution first.\n    '180': {\n        width: 320,\n        height: 180,\n        order: 2\n    },\n    '320': {\n        width: 320,\n        height: 240,\n        order: 1\n    }\n};\n\nmodule.exports = Resolutions;\n\n\n\n// WEBPACK FOOTER //\n// ./service/RTC/Resolutions.js","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCBrowserType from '../RTC/RTCBrowserType';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport Statistics from '../statistics/statistics';\n\nconst logger = getLogger(__filename);\n\n/**\n * Default value of 500 milliseconds for\n * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\n *\n * @type {number}\n */\nconst DEFAULT_NOT_IN_LAST_N_TIMEOUT = 500;\n\n/**\n * Default value of 2000 milliseconds for\n * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\n *\n * @type {number}\n */\nconst DEFAULT_RTC_MUTE_TIMEOUT = 2000;\n\n/**\n * The time to wait a track to be restored. Track which was out of lastN\n * should be inactive and when entering lastN it becomes restoring and when\n * data is received from bridge it will become active, but if no data is\n * received for some time we set status of that participant connection to\n * interrupted.\n * @type {number}\n */\nconst DEFAULT_RESTORING_TIMEOUT = 5000;\n\n/**\n * Participant connection statuses.\n *\n * @type {{\n *      ACTIVE: string,\n *      INACTIVE: string,\n *      INTERRUPTED: string,\n *      RESTORING: string\n * }}\n */\nexport const ParticipantConnectionStatus = {\n    /**\n     * Status indicating that connection is currently active.\n     */\n    ACTIVE: 'active',\n\n    /**\n     * Status indicating that connection is currently inactive.\n     * Inactive means the connection was stopped on purpose from the bridge,\n     * like exiting lastN or adaptivity decided to drop video because of not\n     * enough bandwidth.\n     */\n    INACTIVE: 'inactive',\n\n    /**\n     * Status indicating that connection is currently interrupted.\n     */\n    INTERRUPTED: 'interrupted',\n\n    /**\n     * Status indicating that connection is currently restoring.\n     */\n    RESTORING: 'restoring'\n};\n\n/**\n * Class is responsible for emitting\n * JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED events.\n */\nexport default class ParticipantConnectionStatusHandler {\n    /* eslint-disable max-params*/\n    /**\n     * Calculates the new {@link ParticipantConnectionStatus} based on\n     * the values given for some specific remote user. It is assumed that\n     * the conference is currently in the JVB mode (in contrary to the P2P mode)\n     * @param {boolean} isConnectionActiveByJvb true if the JVB did not get any\n     * data from the user for the last 15 seconds.\n     * @param {boolean} isInLastN indicates whether the user is in the last N\n     * set. When set to false it means that JVB is not sending any video for\n     * the user.\n     * @param {boolean} isRestoringTimedout if true it means that the user has\n     * been outside of last N too long to be considered\n     * {@link ParticipantConnectionStatus.RESTORING}.\n     * @param {boolean} isVideoMuted true if the user is video muted and we\n     * should not expect to receive any video.\n     * @param {boolean} isVideoTrackFrozen if the current browser support video\n     * frozen detection then it will be set to true when the video track is\n     * frozen. If the current browser does not support frozen detection the it's\n     * always false.\n     * @return {ParticipantConnectionStatus} the new connection status for\n     * the user for whom the values above were provided.\n     * @private\n     */\n    static _getNewStateForJvbMode(\n            isConnectionActiveByJvb,\n            isInLastN,\n            isRestoringTimedout,\n            isVideoMuted,\n            isVideoTrackFrozen) {\n        if (!isConnectionActiveByJvb) {\n            // when there is a connection problem signaled from jvb\n            // it means no media was flowing for at least 15secs, so both audio\n            // and video are most likely interrupted\n            return ParticipantConnectionStatus.INTERRUPTED;\n        } else if (isVideoMuted) {\n            // If the connection is active according to JVB and the user is\n            // video muted there is no way for the connection to be inactive,\n            // because the detection logic below only makes sense for video.\n            return ParticipantConnectionStatus.ACTIVE;\n        }\n\n        // Logic when isVideoTrackFrozen is supported\n        if (RTCBrowserType.isVideoMuteOnConnInterruptedSupported()) {\n            if (!isVideoTrackFrozen) {\n                // If the video is playing we're good\n                return ParticipantConnectionStatus.ACTIVE;\n            } else if (isInLastN) {\n                return isRestoringTimedout\n                    ? ParticipantConnectionStatus.INTERRUPTED\n                    : ParticipantConnectionStatus.RESTORING;\n            }\n\n            return ParticipantConnectionStatus.INACTIVE;\n        }\n\n        // Because this browser is incapable of detecting frozen video we must\n        // rely on the lastN value\n        return isInLastN\n            ? ParticipantConnectionStatus.ACTIVE\n            : ParticipantConnectionStatus.INACTIVE;\n    }\n\n    /* eslint-enable max-params*/\n\n    /**\n     * In P2P mode we don't care about any values coming from the JVB and\n     * the connection status can be only active or interrupted.\n     * @param {boolean} isVideoMuted the user if video muted\n     * @param {boolean} isVideoTrackFrozen true if the video track for\n     * the remote user is currently frozen. If the current browser does not\n     * support video frozen detection then it's always false.\n     * @return {ParticipantConnectionStatus}\n     * @private\n     */\n    static _getNewStateForP2PMode(isVideoMuted, isVideoTrackFrozen) {\n        if (!RTCBrowserType.isVideoMuteOnConnInterruptedSupported()) {\n            // There's no way to detect problems in P2P when there's no video\n            // track frozen detection...\n            return ParticipantConnectionStatus.ACTIVE;\n        }\n\n        return isVideoMuted || !isVideoTrackFrozen\n            ? ParticipantConnectionStatus.ACTIVE\n            : ParticipantConnectionStatus.INTERRUPTED;\n    }\n\n    /**\n     * Creates new instance of <tt>ParticipantConnectionStatus</tt>.\n     *\n     * @constructor\n     * @param {RTC} rtc the RTC service instance\n     * @param {JitsiConference} conference parent conference instance\n     * @param {Object} options\n     * @param {number} [options.rtcMuteTimeout=2000] custom value for\n     * {@link ParticipantConnectionStatus.rtcMuteTimeout}.\n     * @param {number} [options.outOfLastNTimeout=500] custom value for\n     * {@link ParticipantConnectionStatus.outOfLastNTimeout}.\n     */\n    constructor(rtc, conference, options) {\n        this.rtc = rtc;\n        this.conference = conference;\n\n        /**\n         * A map of the \"endpoint ID\"(which corresponds to the resource part\n         * of MUC JID(nickname)) to the timeout callback IDs scheduled using\n         * window.setTimeout.\n         * @type {Object.<string, number>}\n         */\n        this.trackTimers = {};\n\n        /**\n         * This map holds the endpoint connection status received from the JVB\n         * (as it might be different than the one stored in JitsiParticipant).\n         * Required for getting back in sync when remote video track is removed.\n         * @type {Object.<string, boolean>}\n         */\n        this.connStatusFromJvb = { };\n\n        /**\n         * If video track frozen detection through RTC mute event is supported,\n         * we wait some time until video track is considered frozen. But because\n         * when the user falls out of last N it is expected for the video to\n         * freeze this timeout must be significantly reduced in \"out of last N\"\n         * case.\n         *\n         * Basically this value is used instead of {@link rtcMuteTimeout} when\n         * user is not in last N.\n         * @type {number}\n         */\n        this.outOfLastNTimeout\n            = typeof options.outOfLastNTimeout === 'number'\n                ? options.outOfLastNTimeout : DEFAULT_NOT_IN_LAST_N_TIMEOUT;\n\n        /**\n         * How long we're going to wait after the RTC video track muted event\n         * for the corresponding signalling mute event, before the connection\n         * interrupted is fired. The default value is\n         * {@link DEFAULT_RTC_MUTE_TIMEOUT}.\n         *\n         * @type {number} amount of time in milliseconds\n         */\n        this.rtcMuteTimeout\n            = typeof options.rtcMuteTimeout === 'number'\n                ? options.rtcMuteTimeout : DEFAULT_RTC_MUTE_TIMEOUT;\n\n        /**\n         * This map holds a timestamp indicating  when participant's video track\n         * was RTC muted (it is assumed that each participant can have only 1\n         * video track at a time). The purpose of storing the timestamp is to\n         * avoid the transition to disconnected status in case of legitimate\n         * video mute operation where the signalling video muted event can\n         * arrive shortly after RTC muted event.\n         *\n         * The key is participant's ID which is the same as endpoint id in\n         * the Colibri conference allocated on the JVB.\n         *\n         * The value is a timestamp measured in milliseconds obtained with\n         * <tt>Date.now()</tt>.\n         *\n         * FIXME merge this logic with NO_DATA_FROM_SOURCE event\n         *       implemented in JitsiLocalTrack by extending the event to\n         *       the remote track and allowing to set different timeout for\n         *       local and remote tracks.\n         *\n         * @type {Object.<string, number>}\n         */\n        this.rtcMutedTimestamp = { };\n        logger.info(`RtcMuteTimeout set to: ${this.rtcMuteTimeout}`);\n\n        /**\n         * This map holds the timestamps indicating when participant's video\n         * entered lastN set. Participants entering lastN will have connection\n         * status restoring and when we start receiving video will become\n         * active, but if video is not received for certain time\n         * {@link DEFAULT_RESTORING_TIMEOUT} that participant connection status\n         * will become interrupted.\n         *\n         * @type {Map<string, number>}\n         */\n        this.enteredLastNTimestamp = new Map();\n\n        /**\n         * A map of the \"endpoint ID\"(which corresponds to the resource part\n         * of MUC JID(nickname)) to the restoring timeout callback IDs\n         * scheduled using window.setTimeout.\n         *\n         * @type {Map<string, number>}\n         */\n        this.restoringTimers = new Map();\n    }\n\n    /**\n     * Gets the video frozen timeout for given user.\n     * @param {string} id endpoint/participant ID\n     * @return {number} how long are we going to wait since RTC video muted\n     * even, before a video track is considered frozen.\n     * @private\n     */\n    _getVideoFrozenTimeout(id) {\n        return this.rtc.isInLastN(id)\n            ? this.rtcMuteTimeout : this.outOfLastNTimeout;\n    }\n\n    /**\n     * Initializes <tt>ParticipantConnectionStatus</tt> and bind required event\n     * listeners.\n     */\n    init() {\n\n        this._onEndpointConnStatusChanged\n            = this.onEndpointConnStatusChanged.bind(this);\n\n        this.rtc.addListener(\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\n            this._onEndpointConnStatusChanged);\n\n        // Handles P2P status changes\n        this._onP2PStatus = this.refreshConnectionStatusForAll.bind(this);\n        this.conference.on(JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\n\n        // On some browsers MediaStreamTrack trigger \"onmute\"/\"onunmute\"\n        // events for video type tracks when they stop receiving data which is\n        // often a sign that remote user is having connectivity issues\n        if (RTCBrowserType.isVideoMuteOnConnInterruptedSupported()) {\n\n            this._onTrackRtcMuted = this.onTrackRtcMuted.bind(this);\n            this.rtc.addListener(\n                RTCEvents.REMOTE_TRACK_MUTE, this._onTrackRtcMuted);\n\n            this._onTrackRtcUnmuted = this.onTrackRtcUnmuted.bind(this);\n            this.rtc.addListener(\n                RTCEvents.REMOTE_TRACK_UNMUTE, this._onTrackRtcUnmuted);\n\n            // Track added/removed listeners are used to bind \"mute\"/\"unmute\"\n            // event handlers\n            this._onRemoteTrackAdded = this.onRemoteTrackAdded.bind(this);\n            this.conference.on(\n                JitsiConferenceEvents.TRACK_ADDED,\n                this._onRemoteTrackAdded);\n\n            this._onRemoteTrackRemoved = this.onRemoteTrackRemoved.bind(this);\n            this.conference.on(\n                JitsiConferenceEvents.TRACK_REMOVED,\n                this._onRemoteTrackRemoved);\n\n            // Listened which will be bound to JitsiRemoteTrack to listen for\n            // signalling mute/unmute events.\n            this._onSignallingMuteChanged\n                = this.onSignallingMuteChanged.bind(this);\n        }\n\n        this._onLastNChanged = this._onLastNChanged.bind(this);\n        this.conference.on(\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\n            this._onLastNChanged);\n\n        this._onLastNValueChanged\n            = this.refreshConnectionStatusForAll.bind(this);\n        this.rtc.on(\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\n    }\n\n    /**\n     * Removes all event listeners and disposes of all resources held by this\n     * instance.\n     */\n    dispose() {\n\n        this.rtc.removeListener(\n            RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\n            this._onEndpointConnStatusChanged);\n\n        if (RTCBrowserType.isVideoMuteOnConnInterruptedSupported()) {\n            this.rtc.removeListener(\n                RTCEvents.REMOTE_TRACK_MUTE,\n                this._onTrackRtcMuted);\n            this.rtc.removeListener(\n                RTCEvents.REMOTE_TRACK_UNMUTE,\n                this._onTrackRtcUnmuted);\n\n            this.conference.off(\n                JitsiConferenceEvents.TRACK_ADDED,\n                this._onRemoteTrackAdded);\n            this.conference.off(\n                JitsiConferenceEvents.TRACK_REMOVED,\n                this._onRemoteTrackRemoved);\n        }\n\n        this.conference.off(\n            JitsiConferenceEvents.LAST_N_ENDPOINTS_CHANGED,\n            this._onLastNChanged);\n\n        this.rtc.removeListener(\n            RTCEvents.LASTN_VALUE_CHANGED, this._onLastNValueChanged);\n\n        this.conference.off(\n            JitsiConferenceEvents.P2P_STATUS, this._onP2PStatus);\n\n        const participantIds = Object.keys(this.trackTimers);\n\n        for (const participantId of participantIds) {\n            this.clearTimeout(participantId);\n            this.clearRtcMutedTimestamp(participantId);\n        }\n\n        // Clear RTC connection status cache\n        this.connStatusFromJvb = {};\n    }\n\n    /**\n     * Handles RTCEvents.ENDPOINT_CONN_STATUS_CHANGED triggered when we receive\n     * notification over the data channel from the bridge about endpoint's\n     * connection status update.\n     * @param {string} endpointId the endpoint ID(MUC nickname/resource JID)\n     * @param {boolean} isActive true if the connection is OK or false otherwise\n     */\n    onEndpointConnStatusChanged(endpointId, isActive) {\n\n        logger.debug(\n            `Detector RTCEvents.ENDPOINT_CONN_STATUS_CHANGED(${Date.now()}): ${\n                endpointId}: ${isActive}`);\n\n        // Filter out events for the local JID for now\n        if (endpointId !== this.conference.myUserId()) {\n            // Store the status received over the data channels\n            this.connStatusFromJvb[endpointId] = isActive;\n            this.figureOutConnectionStatus(endpointId);\n        }\n    }\n\n    /**\n     * Changes connection status.\n     * @param {JitsiParticipant} participant\n     * @param newStatus\n     */\n    _changeConnectionStatus(participant, newStatus) {\n        if (participant.getConnectionStatus() !== newStatus) {\n\n            const endpointId = participant.getId();\n\n            participant._setConnectionStatus(newStatus);\n\n            logger.debug(\n                `Emit endpoint conn status(${Date.now()}) ${endpointId}: ${\n                    newStatus}`);\n\n            // Log the event on CallStats\n            Statistics.sendLog(\n                JSON.stringify({\n                    id: 'peer.conn.status',\n                    participant: endpointId,\n                    status: newStatus\n                }));\n\n            this.conference.eventEmitter.emit(\n                JitsiConferenceEvents.PARTICIPANT_CONN_STATUS_CHANGED,\n                endpointId, newStatus);\n        }\n    }\n\n    /**\n     * Reset the postponed \"connection interrupted\" event which was previously\n     * scheduled as a timeout on RTC 'onmute' event.\n     *\n     * @param {string} participantId the participant for which the \"connection\n     * interrupted\" timeout was scheduled\n     */\n    clearTimeout(participantId) {\n        if (this.trackTimers[participantId]) {\n            window.clearTimeout(this.trackTimers[participantId]);\n            this.trackTimers[participantId] = null;\n        }\n    }\n\n    /**\n     * Clears the timestamp of the RTC muted event for participant's video track\n     * @param {string} participantId the id of the conference participant which\n     * is the same as the Colibri endpoint ID of the video channel allocated for\n     * the user on the videobridge.\n     */\n    clearRtcMutedTimestamp(participantId) {\n        this.rtcMutedTimestamp[participantId] = null;\n    }\n\n    /**\n     * Bind signalling mute event listeners for video {JitsiRemoteTrack} when\n     * a new one is added to the conference.\n     *\n     * @param {JitsiTrack} remoteTrack the {JitsiTrack} which is being added to\n     * the conference.\n     */\n    onRemoteTrackAdded(remoteTrack) {\n        if (!remoteTrack.isLocal()\n                && remoteTrack.getType() === MediaType.VIDEO) {\n\n            logger.debug(\n                `Detector on remote track added for: ${\n                    remoteTrack.getParticipantId()}`);\n\n            remoteTrack.on(\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\n                this._onSignallingMuteChanged);\n        }\n    }\n\n    /**\n     * Removes all event listeners bound to the remote video track and clears\n     * any related timeouts.\n     *\n     * @param {JitsiRemoteTrack} remoteTrack the remote track which is being\n     * removed from the conference.\n     */\n    onRemoteTrackRemoved(remoteTrack) {\n        if (!remoteTrack.isLocal()\n                && remoteTrack.getType() === MediaType.VIDEO) {\n\n            const endpointId = remoteTrack.getParticipantId();\n\n            logger.debug(`Detector on remote track removed: ${endpointId}`);\n\n            remoteTrack.off(\n                JitsiTrackEvents.TRACK_MUTE_CHANGED,\n                this._onSignallingMuteChanged);\n\n            this.clearTimeout(endpointId);\n            this.clearRtcMutedTimestamp(endpointId);\n\n            this.figureOutConnectionStatus(endpointId);\n        }\n    }\n\n    /**\n     * Checks if given participant's video is considered frozen.\n     * @param {JitsiParticipant} participant\n     * @return {boolean} <tt>true</tt> if the video has frozen for given\n     * participant or <tt>false</tt> when it's either not considered frozen\n     * (yet) or if freeze detection is not supported by the current browser.\n     *\n     * FIXME merge this logic with NO_DATA_FROM_SOURCE event\n     *       implemented in JitsiLocalTrack by extending the event to\n     *       the remote track and allowing to set different timeout for\n     *       local and remote tracks.\n     *\n     */\n    isVideoTrackFrozen(participant) {\n        if (!RTCBrowserType.isVideoMuteOnConnInterruptedSupported()) {\n            return false;\n        }\n\n        const id = participant.getId();\n        const hasAnyVideoRTCMuted = participant.hasAnyVideoTrackWebRTCMuted();\n        const rtcMutedTimestamp = this.rtcMutedTimestamp[id];\n        const timeout = this._getVideoFrozenTimeout(id);\n\n        return hasAnyVideoRTCMuted\n            && typeof rtcMutedTimestamp === 'number'\n            && (Date.now() - rtcMutedTimestamp) >= timeout;\n    }\n\n    /**\n     * Goes over every participant and updates connectivity status.\n     * Should be called when a parameter which affects all of the participants\n     * is changed (P2P for example).\n     */\n    refreshConnectionStatusForAll() {\n        const participants = this.conference.getParticipants();\n\n        for (const participant of participants) {\n            this.figureOutConnectionStatus(participant.getId());\n        }\n    }\n\n    /**\n     * Figures out (and updates) the current connectivity status for\n     * the participant identified by the given id.\n     *\n     * @param {string} id the participant's id (MUC nickname or Colibri endpoint\n     * ID).\n     */\n    figureOutConnectionStatus(id) {\n        const participant = this.conference.getParticipantById(id);\n\n        if (!participant) {\n            // Probably the participant is no longer in the conference\n            // (at the time of writing this code, participant is\n            // detached from the conference and TRACK_REMOVED events are\n            // fired),\n            // so we don't care, but let's print the warning for\n            // debugging purpose\n            logger.warn(`figure out conn status - no participant for: ${id}`);\n\n            return;\n        }\n\n        const inP2PMode = this.conference.isP2PActive();\n        const isRestoringTimedOut = this._isRestoringTimedout(id);\n        const audioOnlyMode = this.rtc.getLastN() === 0;\n\n        // NOTE Overriding videoMuted to true for audioOnlyMode should disable\n        // any detection based on video playback or the last N.\n        const isVideoMuted = participant.isVideoMuted() || audioOnlyMode;\n        const isVideoTrackFrozen = this.isVideoTrackFrozen(participant);\n        const isInLastN = this.rtc.isInLastN(id);\n        let isConnActiveByJvb = this.connStatusFromJvb[id];\n\n        if (typeof isConnActiveByJvb !== 'boolean') {\n            // If no status was received from the JVB it means that it's active\n            // (the bridge does not send notification unless there is a problem)\n            logger.debug('Assuming connection active by JVB - no notification');\n            isConnActiveByJvb = true;\n        }\n\n        const newState\n            = inP2PMode\n                ? ParticipantConnectionStatusHandler._getNewStateForP2PMode(\n                    isVideoMuted,\n                    isVideoTrackFrozen)\n                : ParticipantConnectionStatusHandler._getNewStateForJvbMode(\n                    isConnActiveByJvb,\n                    isInLastN,\n                    isRestoringTimedOut,\n                    isVideoMuted,\n                    isVideoTrackFrozen);\n\n        // if the new state is not restoring clear timers and timestamps\n        // that we use to track the restoring state\n        if (newState !== ParticipantConnectionStatus.RESTORING) {\n            this._clearRestoringTimer(id);\n        }\n\n        logger.debug(\n            `Figure out conn status for ${id}, is video muted: ${\n                isVideoMuted} is active(jvb): ${\n                isConnActiveByJvb} video track frozen: ${\n                isVideoTrackFrozen} p2p mode: ${\n                inP2PMode} is in last N: ${\n                isInLastN} currentStatus => newStatus: ${\n                participant.getConnectionStatus()} => ${newState}`);\n\n        this._changeConnectionStatus(participant, newState);\n    }\n\n    /**\n     * On change in Last N set check all leaving and entering participants to\n     * change their corresponding statuses.\n     *\n     * @param {Array<string>} leavingLastN array of ids leaving lastN.\n     * @param {Array<string>} enteringLastN array of ids entering lastN.\n     * @private\n     */\n    _onLastNChanged(leavingLastN = [], enteringLastN = []) {\n        const now = Date.now();\n\n        logger.debug(\n            'leaving/entering lastN', leavingLastN, enteringLastN, now);\n\n        for (const id of leavingLastN) {\n            this.enteredLastNTimestamp.delete(id);\n            this._clearRestoringTimer(id);\n            this.figureOutConnectionStatus(id);\n        }\n        for (const id of enteringLastN) {\n            // store the timestamp this id is entering lastN\n            this.enteredLastNTimestamp.set(id, now);\n            this.figureOutConnectionStatus(id);\n        }\n    }\n\n    /**\n     * Clears the restoring timer for participant's video track and the\n     * timestamp for entering lastN.\n     *\n     * @param {string} participantId the id of the conference participant which\n     * is the same as the Colibri endpoint ID of the video channel allocated for\n     * the user on the videobridge.\n     */\n    _clearRestoringTimer(participantId) {\n        const rTimer = this.restoringTimers.get(participantId);\n\n        if (rTimer) {\n            clearTimeout(rTimer);\n            this.restoringTimers.delete(participantId);\n        }\n    }\n\n    /**\n     * Checks whether a track had stayed enough in restoring state, compares\n     * current time and the time the track entered in lastN. If it hasn't\n     * timedout and there is no timer added, add new timer in order to give it\n     * more time to become active or mark it as interrupted on next check.\n     *\n     * @param {string} participantId the id of the conference participant which\n     * is the same as the Colibri endpoint ID of the video channel allocated for\n     * the user on the videobridge.\n     * @returns {boolean} <tt>true</tt> if the track was in restoring state\n     * more than the timeout ({@link DEFAULT_RESTORING_TIMEOUT}.) in order to\n     * set its status to interrupted.\n     * @private\n     */\n    _isRestoringTimedout(participantId) {\n        const enteredLastNTimestamp\n            = this.enteredLastNTimestamp.get(participantId);\n\n        if (enteredLastNTimestamp\n            && (Date.now() - enteredLastNTimestamp)\n                >= DEFAULT_RESTORING_TIMEOUT) {\n            return true;\n        }\n\n        // still haven't reached timeout, if there is no timer scheduled,\n        // schedule one so we can track the restoring state and change it after\n        // reaching the timeout\n        const rTimer = this.restoringTimers.get(participantId);\n\n        if (!rTimer) {\n            this.restoringTimers.set(participantId, setTimeout(\n                () => this.figureOutConnectionStatus(participantId),\n                DEFAULT_RESTORING_TIMEOUT));\n        }\n\n        return false;\n    }\n\n    /**\n     * Handles RTC 'onmute' event for the video track.\n     *\n     * @param {JitsiRemoteTrack} track the video track for which 'onmute' event\n     * will be processed.\n     */\n    onTrackRtcMuted(track) {\n        const participantId = track.getParticipantId();\n        const participant = this.conference.getParticipantById(participantId);\n\n        logger.debug(`Detector track RTC muted: ${participantId}`, Date.now());\n        if (!participant) {\n            logger.error(`No participant for id: ${participantId}`);\n\n            return;\n        }\n        this.rtcMutedTimestamp[participantId] = Date.now();\n        if (!participant.isVideoMuted()) {\n            // If the user is not muted according to the signalling we'll give\n            // it some time, before the connection interrupted event is\n            // triggered.\n            this.clearTimeout(participantId);\n\n            // The timeout is reduced when user is not in the last N\n            const timeout = this._getVideoFrozenTimeout(participantId);\n\n            this.trackTimers[participantId] = window.setTimeout(() => {\n                logger.debug(\n                    `Set RTC mute timeout for: ${participantId}\\\n                     of ${timeout} ms`);\n                this.clearTimeout(participantId);\n                this.figureOutConnectionStatus(participantId);\n            }, timeout);\n        }\n    }\n\n    /**\n     * Handles RTC 'onunmute' event for the video track.\n     *\n     * @param {JitsiRemoteTrack} track the video track for which 'onunmute'\n     * event will be processed.\n     */\n    onTrackRtcUnmuted(track) {\n        const participantId = track.getParticipantId();\n\n        logger.debug(\n            `Detector track RTC unmuted: ${participantId}`, Date.now());\n\n        this.clearTimeout(participantId);\n        this.clearRtcMutedTimestamp(participantId);\n\n        this.figureOutConnectionStatus(participantId);\n    }\n\n    /**\n     * Here the signalling \"mute\"/\"unmute\" events are processed.\n     *\n     * @param {JitsiRemoteTrack} track the remote video track for which\n     * the signalling mute/unmute event will be processed.\n     */\n    onSignallingMuteChanged(track) {\n        const participantId = track.getParticipantId();\n\n        logger.debug(\n            `Detector on track signalling mute changed: ${participantId}`,\n            track.isMuted());\n\n        this.figureOutConnectionStatus(participantId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/connectivity/ParticipantConnectionStatus.js","/*! adapterjs - v0.14.0 - 2016-10-03 */\nvar console = require(\"jitsi-meet-logger\").getLogger(__filename);\n// Adapter's interface.\nvar AdapterJS = AdapterJS || {};\n\n// Browserify compatibility\nif(typeof exports !== 'undefined') {\n  module.exports = AdapterJS;\n}\n\nAdapterJS.options = AdapterJS.options || {};\n\n// uncomment to get virtual webcams\n// AdapterJS.options.getAllCams = true;\n\n// uncomment to prevent the install prompt when the plugin in not yet installed\n// AdapterJS.options.hidePluginInstallPrompt = true;\n\n// AdapterJS version\nAdapterJS.VERSION = '0.14.0';\n\n// This function will be called when the WebRTC API is ready to be used\n// Whether it is the native implementation (Chrome, Firefox, Opera) or\n// the plugin\n// You may Override this function to synchronise the start of your application\n// with the WebRTC API being ready.\n// If you decide not to override use this synchronisation, it may result in\n// an extensive CPU usage on the plugin start (once per tab loaded)\n// Params:\n//    - isUsingPlugin: true is the WebRTC plugin is being used, false otherwise\n//\nAdapterJS.onwebrtcready = AdapterJS.onwebrtcready || function(isUsingPlugin) {\n  // The WebRTC API is ready.\n  // Override me and do whatever you want here\n};\n\n// New interface to store multiple callbacks, private\nAdapterJS._onwebrtcreadies = [];\n\n// Sets a callback function to be called when the WebRTC interface is ready.\n// The first argument is the function to callback.\\\n// Throws an error if the first argument is not a function\nAdapterJS.webRTCReady = function (callback) {\n  if (typeof callback !== 'function') {\n    throw new Error('Callback provided is not a function');\n  }\n\n  if (true === AdapterJS.onwebrtcreadyDone) {\n    // All WebRTC interfaces are ready, just call the callback\n    callback(null !== AdapterJS.WebRTCPlugin.plugin);\n  } else {\n    // will be triggered automatically when your browser/plugin is ready.\n    AdapterJS._onwebrtcreadies.push(callback);\n  }\n};\n\n// Plugin namespace\nAdapterJS.WebRTCPlugin = AdapterJS.WebRTCPlugin || {};\n\n// The object to store plugin information\n/* jshint ignore:start */\nAdapterJS.WebRTCPlugin.pluginInfo = AdapterJS.WebRTCPlugin.pluginInfo || {\n  prefix : 'Tem',\n  plugName : 'TemWebRTCPlugin',\n  pluginId : 'plugin0',\n  type : 'application/x-temwebrtcplugin',\n  onload : '__TemWebRTCReady0',\n  portalLink : 'http://skylink.io/plugin/',\n  downloadLink : null, //set below\n  companyName: 'Temasys',\n  downloadLinks : {\n    mac: 'http://bit.ly/webrtcpluginpkg',\n    win: 'http://bit.ly/webrtcpluginmsi'\n  }\n};\nif(typeof AdapterJS.WebRTCPlugin.pluginInfo.downloadLinks !== \"undefined\" && AdapterJS.WebRTCPlugin.pluginInfo.downloadLinks !== null) {\n  if(!!navigator.platform.match(/^Mac/i)) {\n    AdapterJS.WebRTCPlugin.pluginInfo.downloadLink = AdapterJS.WebRTCPlugin.pluginInfo.downloadLinks.mac;\n  }\n  else if(!!navigator.platform.match(/^Win/i)) {\n    AdapterJS.WebRTCPlugin.pluginInfo.downloadLink = AdapterJS.WebRTCPlugin.pluginInfo.downloadLinks.win;\n  }\n}\n\n/* jshint ignore:end */\n\nAdapterJS.WebRTCPlugin.TAGS = {\n  NONE  : 'none',\n  AUDIO : 'audio',\n  VIDEO : 'video'\n};\n\n// Unique identifier of each opened page\nAdapterJS.WebRTCPlugin.pageId = Math.random().toString(36).slice(2);\n\n// Use this whenever you want to call the plugin.\nAdapterJS.WebRTCPlugin.plugin = null;\n\n// Set log level for the plugin once it is ready.\n// The different values are\n// This is an asynchronous function that will run when the plugin is ready\nAdapterJS.WebRTCPlugin.setLogLevel = null;\n\n// Defines webrtc's JS interface according to the plugin's implementation.\n// Define plugin Browsers as WebRTC Interface.\nAdapterJS.WebRTCPlugin.defineWebRTCInterface = null;\n\n// This function detects whether or not a plugin is installed.\n// Checks if Not IE (firefox, for example), else if it's IE,\n// we're running IE and do something. If not it is not supported.\nAdapterJS.WebRTCPlugin.isPluginInstalled = null;\n\n // Lets adapter.js wait until the the document is ready before injecting the plugin\nAdapterJS.WebRTCPlugin.pluginInjectionInterval = null;\n\n// Inject the HTML DOM object element into the page.\nAdapterJS.WebRTCPlugin.injectPlugin = null;\n\n// States of readiness that the plugin goes through when\n// being injected and stated\nAdapterJS.WebRTCPlugin.PLUGIN_STATES = {\n  NONE : 0,           // no plugin use\n  INITIALIZING : 1,   // Detected need for plugin\n  INJECTING : 2,      // Injecting plugin\n  INJECTED: 3,        // Plugin element injected but not usable yet\n  READY: 4            // Plugin ready to be used\n};\n\n// Current state of the plugin. You cannot use the plugin before this is\n// equal to AdapterJS.WebRTCPlugin.PLUGIN_STATES.READY\nAdapterJS.WebRTCPlugin.pluginState = AdapterJS.WebRTCPlugin.PLUGIN_STATES.NONE;\n\n// True is AdapterJS.onwebrtcready was already called, false otherwise\n// Used to make sure AdapterJS.onwebrtcready is only called once\nAdapterJS.onwebrtcreadyDone = false;\n\n// Log levels for the plugin.\n// To be set by calling AdapterJS.WebRTCPlugin.setLogLevel\n/*\nLog outputs are prefixed in some cases.\n  INFO: Information reported by the plugin.\n  ERROR: Errors originating from within the plugin.\n  WEBRTC: Error originating from within the libWebRTC library\n*/\n// From the least verbose to the most verbose\nAdapterJS.WebRTCPlugin.PLUGIN_LOG_LEVELS = {\n  NONE : 'NONE',\n  ERROR : 'ERROR',\n  WARNING : 'WARNING',\n  INFO: 'INFO',\n  VERBOSE: 'VERBOSE',\n  SENSITIVE: 'SENSITIVE'\n};\n\n// Does a waiting check before proceeding to load the plugin.\nAdapterJS.WebRTCPlugin.WaitForPluginReady = null;\n\n// This methid will use an interval to wait for the plugin to be ready.\nAdapterJS.WebRTCPlugin.callWhenPluginReady = null;\n\n// !!!! WARNING: DO NOT OVERRIDE THIS FUNCTION. !!!\n// This function will be called when plugin is ready. It sends necessary\n// details to the plugin.\n// The function will wait for the document to be ready and the set the\n// plugin state to AdapterJS.WebRTCPlugin.PLUGIN_STATES.READY,\n// indicating that it can start being requested.\n// This function is not in the IE/Safari condition brackets so that\n// TemPluginLoaded function might be called on Chrome/Firefox.\n// This function is the only private function that is not encapsulated to\n// allow the plugin method to be called.\n__TemWebRTCReady0 = function () {\n  if (document.readyState === 'complete') {\n    AdapterJS.WebRTCPlugin.pluginState = AdapterJS.WebRTCPlugin.PLUGIN_STATES.READY;\n    AdapterJS.maybeThroughWebRTCReady();\n  } else {\n    var timer = setInterval(function () {\n      if (document.readyState === 'complete') {\n        // TODO: update comments, we wait for the document to be ready\n        clearInterval(timer);\n        AdapterJS.WebRTCPlugin.pluginState = AdapterJS.WebRTCPlugin.PLUGIN_STATES.READY;\n        AdapterJS.maybeThroughWebRTCReady();\n      }\n    }, 100);\n  }\n};\n\nAdapterJS.maybeThroughWebRTCReady = function() {\n  if (!AdapterJS.onwebrtcreadyDone) {\n    AdapterJS.onwebrtcreadyDone = true;\n\n    // If new interface for multiple callbacks used\n    if (AdapterJS._onwebrtcreadies.length) {\n      AdapterJS._onwebrtcreadies.forEach(function (callback) {\n        if (typeof(callback) === 'function') {\n          callback(AdapterJS.WebRTCPlugin.plugin !== null);\n        }\n      });\n    // Else if no callbacks on new interface assuming user used old(deprecated) way to set callback through AdapterJS.onwebrtcready = ...\n    } else if (typeof(AdapterJS.onwebrtcready) === 'function') {\n      AdapterJS.onwebrtcready(AdapterJS.WebRTCPlugin.plugin !== null);\n    }\n  }\n};\n\n// Text namespace\nAdapterJS.TEXT = {\n  PLUGIN: {\n    REQUIRE_INSTALLATION: 'This website requires you to install a WebRTC-enabling plugin ' +\n      'to work on this browser.',\n    NOT_SUPPORTED: 'Your browser does not support WebRTC.',\n    BUTTON: 'Install Now'\n  },\n  REFRESH: {\n    REQUIRE_REFRESH: 'Please refresh page',\n    BUTTON: 'Refresh Page'\n  }\n};\n\n// The result of ice connection states.\n// - starting: Ice connection is starting.\n// - checking: Ice connection is checking.\n// - connected Ice connection is connected.\n// - completed Ice connection is connected.\n// - done Ice connection has been completed.\n// - disconnected Ice connection has been disconnected.\n// - failed Ice connection has failed.\n// - closed Ice connection is closed.\nAdapterJS._iceConnectionStates = {\n  starting : 'starting',\n  checking : 'checking',\n  connected : 'connected',\n  completed : 'connected',\n  done : 'completed',\n  disconnected : 'disconnected',\n  failed : 'failed',\n  closed : 'closed'\n};\n\n//The IceConnection states that has been fired for each peer.\nAdapterJS._iceConnectionFiredStates = [];\n\n\n// Check if WebRTC Interface is defined.\nAdapterJS.isDefined = null;\n\n// This function helps to retrieve the webrtc detected browser information.\n// This sets:\n// - webrtcDetectedBrowser: The browser agent name.\n// - webrtcDetectedVersion: The browser version.\n// - webrtcMinimumVersion: The minimum browser version still supported by AJS.\n// - webrtcDetectedType: The types of webRTC support.\n//   - 'moz': Mozilla implementation of webRTC.\n//   - 'webkit': WebKit implementation of webRTC.\n//   - 'plugin': Using the plugin implementation.\nAdapterJS.parseWebrtcDetectedBrowser = function () {\n  var hasMatch = null;\n\n  // Detect Opera (8.0+)\n  if ((!!window.opr && !!opr.addons) || !!window.opera || navigator.userAgent.indexOf(' OPR/') >= 0) {\n    hasMatch = navigator.userAgent.match(/OPR\\/(\\d+)/i) || [];\n\n    webrtcDetectedBrowser   = 'opera';\n    webrtcDetectedVersion   = parseInt(hasMatch[1] || '0', 10);\n    webrtcMinimumVersion    = 26;\n    webrtcDetectedType      = 'webkit';\n    webrtcDetectedDCSupport = 'SCTP'; // Opera 20+ uses Chrome 33\n\n  // Detect Bowser on iOS\n  } else if (navigator.userAgent.match(/Bowser\\/[0-9.]*/g)) {\n    hasMatch = navigator.userAgent.match(/Bowser\\/[0-9.]*/g) || [];\n\n    var chromiumVersion = parseInt((navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./i) || [])[2] || '0', 10);\n\n    webrtcDetectedBrowser   = 'bowser';\n    webrtcDetectedVersion   = parseFloat((hasMatch[0] || '0/0').split('/')[1], 10);\n    webrtcMinimumVersion    = 0;\n    webrtcDetectedType      = 'webkit';\n    webrtcDetectedDCSupport = chromiumVersion > 30 ? 'SCTP' : 'RTP';\n\n\n  // Detect Opera on iOS (does not support WebRTC yet)\n  } else if (navigator.userAgent.indexOf('OPiOS') > 0) {\n    hasMatch = navigator.userAgent.match(/OPiOS\\/([0-9]+)\\./);\n\n    // Browser which do not support webrtc yet\n    webrtcDetectedBrowser   = 'opera';\n    webrtcDetectedVersion   = parseInt(hasMatch[1] || '0', 10);\n    webrtcMinimumVersion    = 0;\n    webrtcDetectedType      = null;\n    webrtcDetectedDCSupport = null;\n\n  // Detect Chrome on iOS (does not support WebRTC yet)\n  } else if (navigator.userAgent.indexOf('CriOS') > 0) {\n    hasMatch = navigator.userAgent.match(/CriOS\\/([0-9]+)\\./) || [];\n\n    webrtcDetectedBrowser   = 'chrome';\n    webrtcDetectedVersion   = parseInt(hasMatch[1] || '0', 10);\n    webrtcMinimumVersion    = 0;\n    webrtcDetectedType      = null;\n    webrtcDetectedDCSupport = null;\n\n  // Detect Firefox on iOS (does not support WebRTC yet)\n  } else if (navigator.userAgent.indexOf('FxiOS') > 0) {\n    hasMatch = navigator.userAgent.match(/FxiOS\\/([0-9]+)\\./) || [];\n\n    // Browser which do not support webrtc yet\n    webrtcDetectedBrowser   = 'firefox';\n    webrtcDetectedVersion   = parseInt(hasMatch[1] || '0', 10);\n    webrtcMinimumVersion    = 0;\n    webrtcDetectedType      = null;\n    webrtcDetectedDCSupport = null;\n\n  // Detect IE (6-11)\n  } else if (/*@cc_on!@*/false || !!document.documentMode) {\n    hasMatch = /\\brv[ :]+(\\d+)/g.exec(navigator.userAgent) || [];\n\n    webrtcDetectedBrowser   = 'IE';\n    webrtcDetectedVersion   = parseInt(hasMatch[1], 10);\n    webrtcMinimumVersion    = 9;\n    webrtcDetectedType      = 'plugin';\n    webrtcDetectedDCSupport = 'SCTP';\n\n    if (!webrtcDetectedVersion) {\n      hasMatch = /\\bMSIE[ :]+(\\d+)/g.exec(navigator.userAgent) || [];\n\n      webrtcDetectedVersion = parseInt(hasMatch[1] || '0', 10);\n    }\n\n  // Detect Edge (20+)\n  } else if (!!window.StyleMedia || navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n    hasMatch = navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/) || [];\n\n    // Previous webrtc/adapter uses minimum version as 10547 but checking in the Edge release history,\n    // It's close to 13.10547 and ObjectRTC API is fully supported in that version\n\n    webrtcDetectedBrowser   = 'edge';\n    webrtcDetectedVersion   = parseFloat((hasMatch[0] || '0/0').split('/')[1], 10);\n    webrtcMinimumVersion    = 13.10547;\n    webrtcDetectedType      = 'ms';\n    webrtcDetectedDCSupport = null;\n\n  // Detect Firefox (1.0+)\n  // Placed before Safari check to ensure Firefox on Android is detected\n  } else if (typeof InstallTrigger !== 'undefined' || navigator.userAgent.indexOf('irefox') > 0) {\n    hasMatch = navigator.userAgent.match(/Firefox\\/([0-9]+)\\./) || [];\n\n    webrtcDetectedBrowser   = 'firefox';\n    webrtcDetectedVersion   = parseInt(hasMatch[1] || '0', 10);\n    webrtcMinimumVersion    = 31;\n    webrtcDetectedType      = 'moz';\n    webrtcDetectedDCSupport = 'SCTP';\n\n  // Detect Chrome (1+ and mobile)\n  // Placed before Safari check to ensure Chrome on Android is detected\n  } else if ((!!window.chrome && !!window.chrome.webstore) || navigator.userAgent.indexOf('Chrom') > 0) {\n    hasMatch = navigator.userAgent.match(/Chrom(e|ium)\\/([0-9]+)\\./i) || [];\n\n    webrtcDetectedBrowser   = 'chrome';\n    webrtcDetectedVersion   = parseInt(hasMatch[2] || '0', 10);\n    webrtcMinimumVersion    = 38;\n    webrtcDetectedType      = 'webkit';\n    webrtcDetectedDCSupport = webrtcDetectedVersion > 30 ? 'SCTP' : 'RTP'; // Chrome 31+ supports SCTP without flags\n\n  // Detect Safari\n  } else if (/^((?!chrome|android).)*safari/i.test(navigator.userAgent)) {\n    hasMatch = navigator.userAgent.match(/version\\/(\\d+)/i) || [];\n\n    var isMobile = navigator.userAgent.match(/(iPhone|iPad)/gi) || [];\n\n    webrtcDetectedBrowser   = 'safari';\n    webrtcDetectedVersion   = parseInt(hasMatch[1] || '0', 10);\n    webrtcMinimumVersion    = 7;\n    webrtcDetectedType      = isMobile.length === 0 ? 'plugin' : null;\n    webrtcDetectedDCSupport = isMobile.length === 0 ? 'SCTP' : null;\n\n  // Detect WebView on iOS (does not support WebRTC yet)\n  } else if (/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/i.test(navigator.userAgent)) {\n    hasMatch = navigator.userAgent.match(/AppleWebKit\\/([0-9]+)\\./) || [];\n\n    webrtcDetectedBrowser   = 'safari';\n    webrtcDetectedVersion   = parseInt(hasMatch[1] || '0', 10);\n    webrtcMinimumVersion    = 0;\n    webrtcDetectedType      = null;\n    webrtcDetectedDCSupport = null;\n\n  }\n\n  window.webrtcDetectedBrowser   = webrtcDetectedBrowser;\n  window.webrtcDetectedVersion   = webrtcDetectedVersion;\n  window.webrtcMinimumVersion    = webrtcMinimumVersion;\n  window.webrtcDetectedType      = webrtcDetectedType; // Scope it to window for better consistency\n  window.webrtcDetectedDCSupport = webrtcDetectedDCSupport; // Scope it to window for better consistency\n};\n\nAdapterJS.addEvent = function(elem, evnt, func) {\n  if (elem.addEventListener) { // W3C DOM\n    elem.addEventListener(evnt, func, false);\n  } else if (elem.attachEvent) {// OLD IE DOM\n    elem.attachEvent('on'+evnt, func);\n  } else { // No much to do\n    elem[evnt] = func;\n  }\n};\n\nAdapterJS.renderNotificationBar = function (text, buttonText, buttonLink, openNewTab, displayRefreshBar) {\n  // only inject once the page is ready\n  if (document.readyState !== 'complete') {\n    return;\n  }\n\n  var w = window;\n  var i = document.createElement('iframe');\n  i.name = 'adapterjs-alert';\n  i.style.position = 'fixed';\n  i.style.top = '-41px';\n  i.style.left = 0;\n  i.style.right = 0;\n  i.style.width = '100%';\n  i.style.height = '40px';\n  i.style.backgroundColor = '#ffffe1';\n  i.style.border = 'none';\n  i.style.borderBottom = '1px solid #888888';\n  i.style.zIndex = '9999999';\n  if(typeof i.style.webkitTransition === 'string') {\n    i.style.webkitTransition = 'all .5s ease-out';\n  } else if(typeof i.style.transition === 'string') {\n    i.style.transition = 'all .5s ease-out';\n  }\n  document.body.appendChild(i);\n  var c = (i.contentWindow) ? i.contentWindow :\n    (i.contentDocument.document) ? i.contentDocument.document : i.contentDocument;\n  c.document.open();\n  c.document.write('<span style=\"display: inline-block; font-family: Helvetica, Arial,' +\n    'sans-serif; font-size: .9rem; padding: 4px; vertical-align: ' +\n    'middle; cursor: default;\">' + text + '</span>');\n  if(buttonText && buttonLink) {\n    c.document.write('<button id=\"okay\">' + buttonText + '</button><button id=\"cancel\">Cancel</button>');\n    c.document.close();\n\n    // On click on okay\n    AdapterJS.addEvent(c.document.getElementById('okay'), 'click', function(e) {\n      if (!!displayRefreshBar) {\n        AdapterJS.renderNotificationBar(AdapterJS.TEXT.EXTENSION ?\n          AdapterJS.TEXT.EXTENSION.REQUIRE_REFRESH : AdapterJS.TEXT.REFRESH.REQUIRE_REFRESH,\n          AdapterJS.TEXT.REFRESH.BUTTON, 'javascript:location.reload()'); // jshint ignore:line\n      }\n      window.open(buttonLink, !!openNewTab ? '_blank' : '_top');\n\n      e.preventDefault();\n      try {\n        e.cancelBubble = true;\n      } catch(error) { }\n\n      var pluginInstallInterval = setInterval(function(){\n        if(! isIE) {\n          navigator.plugins.refresh(false);\n        }\n        AdapterJS.WebRTCPlugin.isPluginInstalled(\n          AdapterJS.WebRTCPlugin.pluginInfo.prefix,\n          AdapterJS.WebRTCPlugin.pluginInfo.plugName,\n          AdapterJS.WebRTCPlugin.pluginInfo.type,\n          function() { // plugin now installed\n            clearInterval(pluginInstallInterval);\n            AdapterJS.WebRTCPlugin.defineWebRTCInterface();\n          },\n          function() {\n            // still no plugin detected, nothing to do\n          });\n      } , 500);\n    });\n\n    // On click on Cancel\n    AdapterJS.addEvent(c.document.getElementById('cancel'), 'click', function(e) {\n      w.document.body.removeChild(i);\n    });\n  } else {\n    c.document.close();\n  }\n  setTimeout(function() {\n    if(typeof i.style.webkitTransform === 'string') {\n      i.style.webkitTransform = 'translateY(40px)';\n    } else if(typeof i.style.transform === 'string') {\n      i.style.transform = 'translateY(40px)';\n    } else {\n      i.style.top = '0px';\n    }\n  }, 300);\n};\n\n// -----------------------------------------------------------\n// Detected webrtc implementation. Types are:\n// - 'moz': Mozilla implementation of webRTC.\n// - 'webkit': WebKit implementation of webRTC.\n// - 'plugin': Using the plugin implementation.\nwebrtcDetectedType = null;\n\n// Set the settings for creating DataChannels, MediaStream for\n// Cross-browser compability.\n// - This is only for SCTP based support browsers.\n// the 'urls' attribute.\ncheckMediaDataChannelSettings =\n  function (peerBrowserAgent, peerBrowserVersion, callback, constraints) {\n  if (typeof callback !== 'function') {\n    return;\n  }\n  var beOfferer = true;\n  var isLocalFirefox = webrtcDetectedBrowser === 'firefox';\n  // Nightly version does not require MozDontOfferDataChannel for interop\n  var isLocalFirefoxInterop = webrtcDetectedType === 'moz' && webrtcDetectedVersion > 30;\n  var isPeerFirefox = peerBrowserAgent === 'firefox';\n  var isPeerFirefoxInterop = peerBrowserAgent === 'firefox' &&\n    ((peerBrowserVersion) ? (peerBrowserVersion > 30) : false);\n\n  // Resends an updated version of constraints for MozDataChannel to work\n  // If other userAgent is firefox and user is firefox, remove MozDataChannel\n  if ((isLocalFirefox && isPeerFirefox) || (isLocalFirefoxInterop)) {\n    try {\n      delete constraints.mandatory.MozDontOfferDataChannel;\n    } catch (error) {\n      console.error('Failed deleting MozDontOfferDataChannel');\n      console.error(error);\n    }\n  } else if ((isLocalFirefox && !isPeerFirefox)) {\n    constraints.mandatory.MozDontOfferDataChannel = true;\n  }\n  if (!isLocalFirefox) {\n    // temporary measure to remove Moz* constraints in non Firefox browsers\n    for (var prop in constraints.mandatory) {\n      if (constraints.mandatory.hasOwnProperty(prop)) {\n        if (prop.indexOf('Moz') !== -1) {\n          delete constraints.mandatory[prop];\n        }\n      }\n    }\n  }\n  // Firefox (not interopable) cannot offer DataChannel as it will cause problems to the\n  // interopability of the media stream\n  if (isLocalFirefox && !isPeerFirefox && !isLocalFirefoxInterop) {\n    beOfferer = false;\n  }\n  callback(beOfferer, constraints);\n};\n\n// Handles the differences for all browsers ice connection state output.\n// - Tested outcomes are:\n//   - Chrome (offerer)  : 'checking' > 'completed' > 'completed'\n//   - Chrome (answerer) : 'checking' > 'connected'\n//   - Firefox (offerer) : 'checking' > 'connected'\n//   - Firefox (answerer): 'checking' > 'connected'\ncheckIceConnectionState = function (peerId, iceConnectionState, callback) {\n  if (typeof callback !== 'function') {\n    console.warn('No callback specified in checkIceConnectionState. Aborted.');\n    return;\n  }\n  peerId = (peerId) ? peerId : 'peer';\n\n  if (!AdapterJS._iceConnectionFiredStates[peerId] ||\n    iceConnectionState === AdapterJS._iceConnectionStates.disconnected ||\n    iceConnectionState === AdapterJS._iceConnectionStates.failed ||\n    iceConnectionState === AdapterJS._iceConnectionStates.closed) {\n    AdapterJS._iceConnectionFiredStates[peerId] = [];\n  }\n  iceConnectionState = AdapterJS._iceConnectionStates[iceConnectionState];\n  if (AdapterJS._iceConnectionFiredStates[peerId].indexOf(iceConnectionState) < 0) {\n    AdapterJS._iceConnectionFiredStates[peerId].push(iceConnectionState);\n    if (iceConnectionState === AdapterJS._iceConnectionStates.connected) {\n      setTimeout(function () {\n        AdapterJS._iceConnectionFiredStates[peerId]\n          .push(AdapterJS._iceConnectionStates.done);\n        callback(AdapterJS._iceConnectionStates.done);\n      }, 1000);\n    }\n    callback(iceConnectionState);\n  }\n  return;\n};\n\n// Firefox:\n// - Creates iceServer from the url for Firefox.\n// - Create iceServer with stun url.\n// - Create iceServer with turn url.\n//   - Ignore the transport parameter from TURN url for FF version <=27.\n//   - Return null for createIceServer if transport=tcp.\n// - FF 27 and above supports transport parameters in TURN url,\n// - So passing in the full url to create iceServer.\n// Chrome:\n// - Creates iceServer from the url for Chrome M33 and earlier.\n//   - Create iceServer with stun url.\n//   - Chrome M28 & above uses below TURN format.\n// Plugin:\n// - Creates Ice Server for Plugin Browsers\n//   - If Stun - Create iceServer with stun url.\n//   - Else - Create iceServer with turn url\n//   - This is a WebRTC Function\ncreateIceServer = null;\n\n// Firefox:\n// - Creates IceServers for Firefox\n//   - Use .url for FireFox.\n//   - Multiple Urls support\n// Chrome:\n// - Creates iceServers from the urls for Chrome M34 and above.\n//   - .urls is supported since Chrome M34.\n//   - Multiple Urls support\n// Plugin:\n// - Creates Ice Servers for Plugin Browsers\n//   - Multiple Urls support\n//   - This is a WebRTC Function\ncreateIceServers = null;\n//------------------------------------------------------------\n\n//The RTCPeerConnection object.\nRTCPeerConnection = null;\n\n// Creates RTCSessionDescription object for Plugin Browsers\nRTCSessionDescription = (typeof RTCSessionDescription === 'function') ?\n  RTCSessionDescription : null;\n\n// Creates RTCIceCandidate object for Plugin Browsers\nRTCIceCandidate = (typeof RTCIceCandidate === 'function') ?\n  RTCIceCandidate : null;\n\n// Get UserMedia (only difference is the prefix).\n// Code from Adam Barth.\ngetUserMedia = null;\n\n// Attach a media stream to an element.\nattachMediaStream = null;\n\n// Re-attach a media stream to an element.\nreattachMediaStream = null;\n\n\n// Detected browser agent name. Types are:\n// - 'firefox': Firefox browser.\n// - 'chrome': Chrome browser.\n// - 'opera': Opera browser.\n// - 'safari': Safari browser.\n// - 'IE' - Internet Explorer browser.\nwebrtcDetectedBrowser = null;\n\n// Detected browser version.\nwebrtcDetectedVersion = null;\n\n// The minimum browser version still supported by AJS.\nwebrtcMinimumVersion  = null;\n\n// Check for browser types and react accordingly\nif ( (navigator.mozGetUserMedia ||\n      navigator.webkitGetUserMedia ||\n      (navigator.mediaDevices &&\n       navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)))\n    && !((navigator.userAgent.match(/android/ig) || []).length === 0 &&\n          (navigator.userAgent.match(/chrome/ig) || []).length === 0 && navigator.userAgent.indexOf('Safari/') > 0)) {\n\n  ///////////////////////////////////////////////////////////////////\n  // INJECTION OF GOOGLE'S ADAPTER.JS CONTENT\n\n/* jshint ignore:start */\n  (function(f){if(typeof exports===\"object\"&&typeof module!==\"undefined\"){module.exports=f()}else if(typeof define===\"function\"&&define.amd){define([],f)}else{var g;if(typeof window!==\"undefined\"){g=window}else if(typeof global!==\"undefined\"){g=global}else if(typeof self!==\"undefined\"){g=self}else{g=this}g.adapter = f()}})(function(){var define,module,exports;return (function e(t,n,r){function s(o,u){if(!n[o]){if(!t[o]){var a=typeof require==\"function\"&&require;if(!u&&a)return a(o,!0);if(i)return i(o,!0);var f=new Error(\"Cannot find module '\"+o+\"'\");throw f.code=\"MODULE_NOT_FOUND\",f}var l=n[o]={exports:{}};t[o][0].call(l.exports,function(e){var n=t[o][1][e];return s(n?n:e)},l,l.exports,e,t,n,r)}return n[o].exports}var i=typeof require==\"function\"&&require;for(var o=0;o<r.length;o++)s(r[o]);return s})({1:[function(require,module,exports){\n   /* eslint-env node */\n  'use strict';\n\n  // SDP helpers.\n  var SDPUtils = {};\n\n  // Generate an alphanumeric identifier for cname or mids.\n  // TODO: use UUIDs instead? https://gist.github.com/jed/982883\n  SDPUtils.generateIdentifier = function() {\n    return Math.random().toString(36).substr(2, 10);\n  };\n\n  // The RTCP CNAME used by all peerconnections from the same JS.\n  SDPUtils.localCName = SDPUtils.generateIdentifier();\n\n  // Splits SDP into lines, dealing with both CRLF and LF.\n  SDPUtils.splitLines = function(blob) {\n    return blob.trim().split('\\n').map(function(line) {\n      return line.trim();\n    });\n  };\n  // Splits SDP into sessionpart and mediasections. Ensures CRLF.\n  SDPUtils.splitSections = function(blob) {\n    var parts = blob.split('\\nm=');\n    return parts.map(function(part, index) {\n      return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n    });\n  };\n\n  // Returns lines that start with a certain prefix.\n  SDPUtils.matchPrefix = function(blob, prefix) {\n    return SDPUtils.splitLines(blob).filter(function(line) {\n      return line.indexOf(prefix) === 0;\n    });\n  };\n\n  // Parses an ICE candidate line. Sample input:\n  // candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n  // rport 55996\"\n  SDPUtils.parseCandidate = function(line) {\n    var parts;\n    // Parse both variants.\n    if (line.indexOf('a=candidate:') === 0) {\n      parts = line.substring(12).split(' ');\n    } else {\n      parts = line.substring(10).split(' ');\n    }\n\n    var candidate = {\n      foundation: parts[0],\n      component: parts[1],\n      protocol: parts[2].toLowerCase(),\n      priority: parseInt(parts[3], 10),\n      ip: parts[4],\n      port: parseInt(parts[5], 10),\n      // skip parts[6] == 'typ'\n      type: parts[7]\n    };\n\n    for (var i = 8; i < parts.length; i += 2) {\n      switch (parts[i]) {\n        case 'raddr':\n          candidate.relatedAddress = parts[i + 1];\n          break;\n        case 'rport':\n          candidate.relatedPort = parseInt(parts[i + 1], 10);\n          break;\n        case 'tcptype':\n          candidate.tcpType = parts[i + 1];\n          break;\n        default: // Unknown extensions are silently ignored.\n          break;\n      }\n    }\n    return candidate;\n  };\n\n  // Translates a candidate object into SDP candidate attribute.\n  SDPUtils.writeCandidate = function(candidate) {\n    var sdp = [];\n    sdp.push(candidate.foundation);\n    sdp.push(candidate.component);\n    sdp.push(candidate.protocol.toUpperCase());\n    sdp.push(candidate.priority);\n    sdp.push(candidate.ip);\n    sdp.push(candidate.port);\n\n    var type = candidate.type;\n    sdp.push('typ');\n    sdp.push(type);\n    if (type !== 'host' && candidate.relatedAddress &&\n        candidate.relatedPort) {\n      sdp.push('raddr');\n      sdp.push(candidate.relatedAddress); // was: relAddr\n      sdp.push('rport');\n      sdp.push(candidate.relatedPort); // was: relPort\n    }\n    if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n      sdp.push('tcptype');\n      sdp.push(candidate.tcpType);\n    }\n    return 'candidate:' + sdp.join(' ');\n  };\n\n  // Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n  // a=rtpmap:111 opus/48000/2\n  SDPUtils.parseRtpMap = function(line) {\n    var parts = line.substr(9).split(' ');\n    var parsed = {\n      payloadType: parseInt(parts.shift(), 10) // was: id\n    };\n\n    parts = parts[0].split('/');\n\n    parsed.name = parts[0];\n    parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n    // was: channels\n    parsed.numChannels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n    return parsed;\n  };\n\n  // Generate an a=rtpmap line from RTCRtpCodecCapability or\n  // RTCRtpCodecParameters.\n  SDPUtils.writeRtpMap = function(codec) {\n    var pt = codec.payloadType;\n    if (codec.preferredPayloadType !== undefined) {\n      pt = codec.preferredPayloadType;\n    }\n    return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n        (codec.numChannels !== 1 ? '/' + codec.numChannels : '') + '\\r\\n';\n  };\n\n  // Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n  // a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n  SDPUtils.parseExtmap = function(line) {\n    var parts = line.substr(9).split(' ');\n    return {\n      id: parseInt(parts[0], 10),\n      uri: parts[1]\n    };\n  };\n\n  // Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n  // RTCRtpHeaderExtension.\n  SDPUtils.writeExtmap = function(headerExtension) {\n    return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n         ' ' + headerExtension.uri + '\\r\\n';\n  };\n\n  // Parses an ftmp line, returns dictionary. Sample input:\n  // a=fmtp:96 vbr=on;cng=on\n  // Also deals with vbr=on; cng=on\n  SDPUtils.parseFmtp = function(line) {\n    var parsed = {};\n    var kv;\n    var parts = line.substr(line.indexOf(' ') + 1).split(';');\n    for (var j = 0; j < parts.length; j++) {\n      kv = parts[j].trim().split('=');\n      parsed[kv[0].trim()] = kv[1];\n    }\n    return parsed;\n  };\n\n  // Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\n  SDPUtils.writeFmtp = function(codec) {\n    var line = '';\n    var pt = codec.payloadType;\n    if (codec.preferredPayloadType !== undefined) {\n      pt = codec.preferredPayloadType;\n    }\n    if (codec.parameters && Object.keys(codec.parameters).length) {\n      var params = [];\n      Object.keys(codec.parameters).forEach(function(param) {\n        params.push(param + '=' + codec.parameters[param]);\n      });\n      line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n    }\n    return line;\n  };\n\n  // Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n  // a=rtcp-fb:98 nack rpsi\n  SDPUtils.parseRtcpFb = function(line) {\n    var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n    return {\n      type: parts.shift(),\n      parameter: parts.join(' ')\n    };\n  };\n  // Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\n  SDPUtils.writeRtcpFb = function(codec) {\n    var lines = '';\n    var pt = codec.payloadType;\n    if (codec.preferredPayloadType !== undefined) {\n      pt = codec.preferredPayloadType;\n    }\n    if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n      // FIXME: special handling for trr-int?\n      codec.rtcpFeedback.forEach(function(fb) {\n        lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n        (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n            '\\r\\n';\n      });\n    }\n    return lines;\n  };\n\n  // Parses an RFC 5576 ssrc media attribute. Sample input:\n  // a=ssrc:3735928559 cname:something\n  SDPUtils.parseSsrcMedia = function(line) {\n    var sp = line.indexOf(' ');\n    var parts = {\n      ssrc: parseInt(line.substr(7, sp - 7), 10)\n    };\n    var colon = line.indexOf(':', sp);\n    if (colon > -1) {\n      parts.attribute = line.substr(sp + 1, colon - sp - 1);\n      parts.value = line.substr(colon + 1);\n    } else {\n      parts.attribute = line.substr(sp + 1);\n    }\n    return parts;\n  };\n\n  // Extracts DTLS parameters from SDP media section or sessionpart.\n  // FIXME: for consistency with other functions this should only\n  //   get the fingerprint line as input. See also getIceParameters.\n  SDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n    var lines = SDPUtils.splitLines(mediaSection);\n    // Search in session part, too.\n    lines = lines.concat(SDPUtils.splitLines(sessionpart));\n    var fpLine = lines.filter(function(line) {\n      return line.indexOf('a=fingerprint:') === 0;\n    })[0].substr(14);\n    // Note: a=setup line is ignored since we use the 'auto' role.\n    var dtlsParameters = {\n      role: 'auto',\n      fingerprints: [{\n        algorithm: fpLine.split(' ')[0],\n        value: fpLine.split(' ')[1]\n      }]\n    };\n    return dtlsParameters;\n  };\n\n  // Serializes DTLS parameters to SDP.\n  SDPUtils.writeDtlsParameters = function(params, setupType) {\n    var sdp = 'a=setup:' + setupType + '\\r\\n';\n    params.fingerprints.forEach(function(fp) {\n      sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n    });\n    return sdp;\n  };\n  // Parses ICE information from SDP media section or sessionpart.\n  // FIXME: for consistency with other functions this should only\n  //   get the ice-ufrag and ice-pwd lines as input.\n  SDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n    var lines = SDPUtils.splitLines(mediaSection);\n    // Search in session part, too.\n    lines = lines.concat(SDPUtils.splitLines(sessionpart));\n    var iceParameters = {\n      usernameFragment: lines.filter(function(line) {\n        return line.indexOf('a=ice-ufrag:') === 0;\n      })[0].substr(12),\n      password: lines.filter(function(line) {\n        return line.indexOf('a=ice-pwd:') === 0;\n      })[0].substr(10)\n    };\n    return iceParameters;\n  };\n\n  // Serializes ICE parameters to SDP.\n  SDPUtils.writeIceParameters = function(params) {\n    return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n        'a=ice-pwd:' + params.password + '\\r\\n';\n  };\n\n  // Parses the SDP media section and returns RTCRtpParameters.\n  SDPUtils.parseRtpParameters = function(mediaSection) {\n    var description = {\n      codecs: [],\n      headerExtensions: [],\n      fecMechanisms: [],\n      rtcp: []\n    };\n    var lines = SDPUtils.splitLines(mediaSection);\n    var mline = lines[0].split(' ');\n    for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n      var pt = mline[i];\n      var rtpmapline = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n      if (rtpmapline) {\n        var codec = SDPUtils.parseRtpMap(rtpmapline);\n        var fmtps = SDPUtils.matchPrefix(\n            mediaSection, 'a=fmtp:' + pt + ' ');\n        // Only the first a=fmtp:<pt> is considered.\n        codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n        codec.rtcpFeedback = SDPUtils.matchPrefix(\n            mediaSection, 'a=rtcp-fb:' + pt + ' ')\n          .map(SDPUtils.parseRtcpFb);\n        description.codecs.push(codec);\n        // parse FEC mechanisms from rtpmap lines.\n        switch (codec.name.toUpperCase()) {\n          case 'RED':\n          case 'ULPFEC':\n            description.fecMechanisms.push(codec.name.toUpperCase());\n            break;\n          default: // only RED and ULPFEC are recognized as FEC mechanisms.\n            break;\n        }\n      }\n    }\n    SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n      description.headerExtensions.push(SDPUtils.parseExtmap(line));\n    });\n    // FIXME: parse rtcp.\n    return description;\n  };\n\n  // Generates parts of the SDP media section describing the capabilities /\n  // parameters.\n  SDPUtils.writeRtpDescription = function(kind, caps) {\n    var sdp = '';\n\n    // Build the mline.\n    sdp += 'm=' + kind + ' ';\n    sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n    sdp += ' UDP/TLS/RTP/SAVPF ';\n    sdp += caps.codecs.map(function(codec) {\n      if (codec.preferredPayloadType !== undefined) {\n        return codec.preferredPayloadType;\n      }\n      return codec.payloadType;\n    }).join(' ') + '\\r\\n';\n\n    sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n    sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n    // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n    caps.codecs.forEach(function(codec) {\n      sdp += SDPUtils.writeRtpMap(codec);\n      sdp += SDPUtils.writeFmtp(codec);\n      sdp += SDPUtils.writeRtcpFb(codec);\n    });\n    // FIXME: add headerExtensions, fecMechanismş and rtcp.\n    sdp += 'a=rtcp-mux\\r\\n';\n    return sdp;\n  };\n\n  // Parses the SDP media section and returns an array of\n  // RTCRtpEncodingParameters.\n  SDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n    var encodingParameters = [];\n    var description = SDPUtils.parseRtpParameters(mediaSection);\n    var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n    var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n    // filter a=ssrc:... cname:, ignore PlanB-msid\n    var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n    .map(function(line) {\n      return SDPUtils.parseSsrcMedia(line);\n    })\n    .filter(function(parts) {\n      return parts.attribute === 'cname';\n    });\n    var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n    var secondarySsrc;\n\n    var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n    .map(function(line) {\n      var parts = line.split(' ');\n      parts.shift();\n      return parts.map(function(part) {\n        return parseInt(part, 10);\n      });\n    });\n    if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n      secondarySsrc = flows[0][1];\n    }\n\n    description.codecs.forEach(function(codec) {\n      if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n        var encParam = {\n          ssrc: primarySsrc,\n          codecPayloadType: parseInt(codec.parameters.apt, 10),\n          rtx: {\n            payloadType: codec.payloadType,\n            ssrc: secondarySsrc\n          }\n        };\n        encodingParameters.push(encParam);\n        if (hasRed) {\n          encParam = JSON.parse(JSON.stringify(encParam));\n          encParam.fec = {\n            ssrc: secondarySsrc,\n            mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n          };\n          encodingParameters.push(encParam);\n        }\n      }\n    });\n    if (encodingParameters.length === 0 && primarySsrc) {\n      encodingParameters.push({\n        ssrc: primarySsrc\n      });\n    }\n\n    // we support both b=AS and b=TIAS but interpret AS as TIAS.\n    var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n    if (bandwidth.length) {\n      if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n        bandwidth = parseInt(bandwidth[0].substr(7), 10);\n      } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n        bandwidth = parseInt(bandwidth[0].substr(5), 10);\n      }\n      encodingParameters.forEach(function(params) {\n        params.maxBitrate = bandwidth;\n      });\n    }\n    return encodingParameters;\n  };\n\n  SDPUtils.writeSessionBoilerplate = function() {\n    // FIXME: sess-id should be an NTP timestamp.\n    return 'v=0\\r\\n' +\n        'o=thisisadapterortc 8169639915646943137 2 IN IP4 127.0.0.1\\r\\n' +\n        's=-\\r\\n' +\n        't=0 0\\r\\n';\n  };\n\n  SDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n    var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n    // Map ICE parameters (ufrag, pwd) to SDP.\n    sdp += SDPUtils.writeIceParameters(\n        transceiver.iceGatherer.getLocalParameters());\n\n    // Map DTLS parameters to SDP.\n    sdp += SDPUtils.writeDtlsParameters(\n        transceiver.dtlsTransport.getLocalParameters(),\n        type === 'offer' ? 'actpass' : 'active');\n\n    sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n    if (transceiver.rtpSender && transceiver.rtpReceiver) {\n      sdp += 'a=sendrecv\\r\\n';\n    } else if (transceiver.rtpSender) {\n      sdp += 'a=sendonly\\r\\n';\n    } else if (transceiver.rtpReceiver) {\n      sdp += 'a=recvonly\\r\\n';\n    } else {\n      sdp += 'a=inactive\\r\\n';\n    }\n\n    // FIXME: for RTX there might be multiple SSRCs. Not implemented in Edge yet.\n    if (transceiver.rtpSender) {\n      var msid = 'msid:' + stream.id + ' ' +\n          transceiver.rtpSender.track.id + '\\r\\n';\n      sdp += 'a=' + msid;\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n          ' ' + msid;\n    }\n    // FIXME: this should be written by writeRtpDescription.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n    return sdp;\n  };\n\n  // Gets the direction from the mediaSection or the sessionpart.\n  SDPUtils.getDirection = function(mediaSection, sessionpart) {\n    // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n    var lines = SDPUtils.splitLines(mediaSection);\n    for (var i = 0; i < lines.length; i++) {\n      switch (lines[i]) {\n        case 'a=sendrecv':\n        case 'a=sendonly':\n        case 'a=recvonly':\n        case 'a=inactive':\n          return lines[i].substr(2);\n        default:\n          // FIXME: What should happen here?\n      }\n    }\n    if (sessionpart) {\n      return SDPUtils.getDirection(sessionpart);\n    }\n    return 'sendrecv';\n  };\n\n  // Expose public methods.\n  module.exports = SDPUtils;\n\n  },{}],2:[function(require,module,exports){\n  /*\n   *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n   *\n   *  Use of this source code is governed by a BSD-style license\n   *  that can be found in the LICENSE file in the root of the source\n   *  tree.\n   */\n   /* eslint-env node */\n\n  'use strict';\n\n  // Shimming starts here.\n  (function() {\n    // Utils.\n    var logging = require('./utils').log;\n    var browserDetails = require('./utils').browserDetails;\n    // Export to the adapter global object visible in the browser.\n    module.exports.browserDetails = browserDetails;\n    module.exports.extractVersion = require('./utils').extractVersion;\n    module.exports.disableLog = require('./utils').disableLog;\n\n    // Uncomment the line below if you want logging to occur, including logging\n    // for the switch statement below. Can also be turned on in the browser via\n    // adapter.disableLog(false), but then logging from the switch statement below\n    // will not appear.\n    // require('./utils').disableLog(false);\n\n    // Browser shims.\n    var chromeShim = require('./chrome/chrome_shim') || null;\n    var edgeShim = require('./edge/edge_shim') || null;\n    var firefoxShim = require('./firefox/firefox_shim') || null;\n    var safariShim = require('./safari/safari_shim') || null;\n\n    // Shim browser if found.\n    switch (browserDetails.browser) {\n      case 'opera': // fallthrough as it uses chrome shims\n      case 'chrome':\n        if (!chromeShim || !chromeShim.shimPeerConnection) {\n          logging('Chrome shim is not included in this adapter release.');\n          return;\n        }\n        logging('adapter.js shimming chrome.');\n        // Export to the adapter global object visible in the browser.\n        module.exports.browserShim = chromeShim;\n\n        chromeShim.shimGetUserMedia();\n        chromeShim.shimMediaStream();\n        chromeShim.shimSourceObject();\n        chromeShim.shimPeerConnection();\n        chromeShim.shimOnTrack();\n        break;\n      case 'firefox':\n        if (!firefoxShim || !firefoxShim.shimPeerConnection) {\n          logging('Firefox shim is not included in this adapter release.');\n          return;\n        }\n        logging('adapter.js shimming firefox.');\n        // Export to the adapter global object visible in the browser.\n        module.exports.browserShim = firefoxShim;\n\n        firefoxShim.shimGetUserMedia();\n        firefoxShim.shimSourceObject();\n        firefoxShim.shimPeerConnection();\n        firefoxShim.shimOnTrack();\n        break;\n      case 'edge':\n        if (!edgeShim || !edgeShim.shimPeerConnection) {\n          logging('MS edge shim is not included in this adapter release.');\n          return;\n        }\n        logging('adapter.js shimming edge.');\n        // Export to the adapter global object visible in the browser.\n        module.exports.browserShim = edgeShim;\n\n        edgeShim.shimGetUserMedia();\n        edgeShim.shimPeerConnection();\n        break;\n      case 'safari':\n        if (!safariShim) {\n          logging('Safari shim is not included in this adapter release.');\n          return;\n        }\n        logging('adapter.js shimming safari.');\n        // Export to the adapter global object visible in the browser.\n        module.exports.browserShim = safariShim;\n\n        safariShim.shimGetUserMedia();\n        break;\n      default:\n        logging('Unsupported browser!');\n    }\n  })();\n\n  },{\"./chrome/chrome_shim\":3,\"./edge/edge_shim\":5,\"./firefox/firefox_shim\":7,\"./safari/safari_shim\":9,\"./utils\":10}],3:[function(require,module,exports){\n\n  /*\n   *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n   *\n   *  Use of this source code is governed by a BSD-style license\n   *  that can be found in the LICENSE file in the root of the source\n   *  tree.\n   */\n   /* eslint-env node */\n  'use strict';\n  var logging = require('../utils.js').log;\n  var browserDetails = require('../utils.js').browserDetails;\n\n  var chromeShim = {\n    shimMediaStream: function() {\n      window.MediaStream = window.MediaStream || window.webkitMediaStream;\n    },\n\n    shimOnTrack: function() {\n      if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n          window.RTCPeerConnection.prototype)) {\n        Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n          get: function() {\n            return this._ontrack;\n          },\n          set: function(f) {\n            var self = this;\n            if (this._ontrack) {\n              this.removeEventListener('track', this._ontrack);\n              this.removeEventListener('addstream', this._ontrackpoly);\n            }\n            this.addEventListener('track', this._ontrack = f);\n            this.addEventListener('addstream', this._ontrackpoly = function(e) {\n              // onaddstream does not fire when a track is added to an existing\n              // stream. But stream.onaddtrack is implemented so we use that.\n              e.stream.addEventListener('addtrack', function(te) {\n                var event = new Event('track');\n                event.track = te.track;\n                event.receiver = {track: te.track};\n                event.streams = [e.stream];\n                self.dispatchEvent(event);\n              });\n              e.stream.getTracks().forEach(function(track) {\n                var event = new Event('track');\n                event.track = track;\n                event.receiver = {track: track};\n                event.streams = [e.stream];\n                this.dispatchEvent(event);\n              }.bind(this));\n            }.bind(this));\n          }\n        });\n      }\n    },\n\n    shimSourceObject: function() {\n      if (typeof window === 'object') {\n        if (window.HTMLMediaElement &&\n          !('srcObject' in window.HTMLMediaElement.prototype)) {\n          // Shim the srcObject property, once, when HTMLMediaElement is found.\n          Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n            get: function() {\n              return this._srcObject;\n            },\n            set: function(stream) {\n              var self = this;\n              // Use _srcObject as a private property for this shim\n              this._srcObject = stream;\n              if (this.src) {\n                URL.revokeObjectURL(this.src);\n              }\n\n              if (!stream) {\n                this.src = '';\n                return;\n              }\n              this.src = URL.createObjectURL(stream);\n              // We need to recreate the blob url when a track is added or\n              // removed. Doing it manually since we want to avoid a recursion.\n              stream.addEventListener('addtrack', function() {\n                if (self.src) {\n                  URL.revokeObjectURL(self.src);\n                }\n                self.src = URL.createObjectURL(stream);\n              });\n              stream.addEventListener('removetrack', function() {\n                if (self.src) {\n                  URL.revokeObjectURL(self.src);\n                }\n                self.src = URL.createObjectURL(stream);\n              });\n            }\n          });\n        }\n      }\n    },\n\n    shimPeerConnection: function() {\n      // The RTCPeerConnection object.\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        logging('PeerConnection');\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        var pc = new webkitRTCPeerConnection(pcConfig, pcConstraints);\n        var origGetStats = pc.getStats.bind(pc);\n        pc.getStats = function(selector, successCallback, errorCallback) {\n          var self = this;\n          var args = arguments;\n\n          // If selector is a function then we are in the old style stats so just\n          // pass back the original getStats format to avoid breaking old users.\n          if (arguments.length > 0 && typeof selector === 'function') {\n            return origGetStats(selector, successCallback);\n          }\n\n          var fixChromeStats_ = function(response) {\n            var standardReport = {};\n            var reports = response.result();\n            reports.forEach(function(report) {\n              var standardStats = {\n                id: report.id,\n                timestamp: report.timestamp,\n                type: report.type\n              };\n              report.names().forEach(function(name) {\n                standardStats[name] = report.stat(name);\n              });\n              standardReport[standardStats.id] = standardStats;\n            });\n\n            return standardReport;\n          };\n\n          // shim getStats with maplike support\n          var makeMapStats = function(stats, legacyStats) {\n            var map = new Map(Object.keys(stats).map(function(key) {\n              return[key, stats[key]];\n            }));\n            legacyStats = legacyStats || stats;\n            Object.keys(legacyStats).forEach(function(key) {\n              map[key] = legacyStats[key];\n            });\n            return map;\n          };\n\n          if (arguments.length >= 2) {\n            var successCallbackWrapper_ = function(response) {\n              args[1](makeMapStats(fixChromeStats_(response)));\n            };\n\n            return origGetStats.apply(this, [successCallbackWrapper_,\n                arguments[0]]);\n          }\n\n          // promise-support\n          return new Promise(function(resolve, reject) {\n            if (args.length === 1 && typeof selector === 'object') {\n              origGetStats.apply(self, [\n                function(response) {\n                  resolve(makeMapStats(fixChromeStats_(response)));\n                }, reject]);\n            } else {\n              // Preserve legacy chrome stats only on legacy access of stats obj\n              origGetStats.apply(self, [\n                function(response) {\n                  resolve(makeMapStats(fixChromeStats_(response),\n                      response.result()));\n                }, reject]);\n            }\n          }).then(successCallback, errorCallback);\n        };\n\n        return pc;\n      };\n      window.RTCPeerConnection.prototype = webkitRTCPeerConnection.prototype;\n\n      // wrap static methods. Currently just generateCertificate.\n      if (webkitRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return webkitRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      ['createOffer', 'createAnswer'].forEach(function(method) {\n        var nativeMethod = webkitRTCPeerConnection.prototype[method];\n        webkitRTCPeerConnection.prototype[method] = function() {\n          var self = this;\n          if (arguments.length < 1 || (arguments.length === 1 &&\n              typeof arguments[0] === 'object')) {\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\n            return new Promise(function(resolve, reject) {\n              nativeMethod.apply(self, [resolve, reject, opts]);\n            });\n          }\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n\n      // add promise support -- natively available in Chrome 51\n      if (browserDetails.version < 51) {\n        ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n            .forEach(function(method) {\n              var nativeMethod = webkitRTCPeerConnection.prototype[method];\n              webkitRTCPeerConnection.prototype[method] = function() {\n                var args = arguments;\n                var self = this;\n                var promise = new Promise(function(resolve, reject) {\n                  nativeMethod.apply(self, [args[0], resolve, reject]);\n                });\n                if (args.length < 2) {\n                  return promise;\n                }\n                return promise.then(function() {\n                  args[1].apply(null, []);\n                },\n                function(err) {\n                  if (args.length >= 3) {\n                    args[2].apply(null, [err]);\n                  }\n                });\n              };\n            });\n      }\n\n      // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = webkitRTCPeerConnection.prototype[method];\n            webkitRTCPeerConnection.prototype[method] = function() {\n              arguments[0] = new ((method === 'addIceCandidate') ?\n                  RTCIceCandidate : RTCSessionDescription)(arguments[0]);\n              return nativeMethod.apply(this, arguments);\n            };\n          });\n\n      // support for addIceCandidate(null)\n      var nativeAddIceCandidate =\n          RTCPeerConnection.prototype.addIceCandidate;\n      RTCPeerConnection.prototype.addIceCandidate = function() {\n        return arguments[0] === null ? Promise.resolve()\n            : nativeAddIceCandidate.apply(this, arguments);\n      };\n    }\n  };\n\n\n  // Expose public methods.\n  module.exports = {\n    shimMediaStream: chromeShim.shimMediaStream,\n    shimOnTrack: chromeShim.shimOnTrack,\n    shimSourceObject: chromeShim.shimSourceObject,\n    shimPeerConnection: chromeShim.shimPeerConnection,\n    shimGetUserMedia: require('./getusermedia')\n  };\n\n  },{\"../utils.js\":10,\"./getusermedia\":4}],4:[function(require,module,exports){\n  /*\n   *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n   *\n   *  Use of this source code is governed by a BSD-style license\n   *  that can be found in the LICENSE file in the root of the source\n   *  tree.\n   */\n   /* eslint-env node */\n  'use strict';\n  var logging = require('../utils.js').log;\n\n  // Expose public methods.\n  module.exports = function() {\n    var constraintsToChrome_ = function(c) {\n      if (typeof c !== 'object' || c.mandatory || c.optional) {\n        return c;\n      }\n      var cc = {};\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n        if (r.exact !== undefined && typeof r.exact === 'number') {\n          r.min = r.max = r.exact;\n        }\n        var oldname_ = function(prefix, name) {\n          if (prefix) {\n            return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n          }\n          return (name === 'deviceId') ? 'sourceId' : name;\n        };\n        if (r.ideal !== undefined) {\n          cc.optional = cc.optional || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[oldname_('min', key)] = r.ideal;\n            cc.optional.push(oc);\n            oc = {};\n            oc[oldname_('max', key)] = r.ideal;\n            cc.optional.push(oc);\n          } else {\n            oc[oldname_('', key)] = r.ideal;\n            cc.optional.push(oc);\n          }\n        }\n        if (r.exact !== undefined && typeof r.exact !== 'number') {\n          cc.mandatory = cc.mandatory || {};\n          cc.mandatory[oldname_('', key)] = r.exact;\n        } else {\n          ['min', 'max'].forEach(function(mix) {\n            if (r[mix] !== undefined) {\n              cc.mandatory = cc.mandatory || {};\n              cc.mandatory[oldname_(mix, key)] = r[mix];\n            }\n          });\n        }\n      });\n      if (c.advanced) {\n        cc.optional = (cc.optional || []).concat(c.advanced);\n      }\n      return cc;\n    };\n\n    var shimConstraints_ = function(constraints, func) {\n      constraints = JSON.parse(JSON.stringify(constraints));\n      if (constraints && constraints.audio) {\n        constraints.audio = constraintsToChrome_(constraints.audio);\n      }\n      if (constraints && typeof constraints.video === 'object') {\n        // Shim facingMode for mobile, where it defaults to \"user\".\n        var face = constraints.video.facingMode;\n        face = face && ((typeof face === 'object') ? face : {ideal: face});\n\n        if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                      face.ideal === 'user' || face.ideal === 'environment')) &&\n            !(navigator.mediaDevices.getSupportedConstraints &&\n              navigator.mediaDevices.getSupportedConstraints().facingMode)) {\n          delete constraints.video.facingMode;\n          if (face.exact === 'environment' || face.ideal === 'environment') {\n            // Look for \"back\" in label, or use last cam (typically back cam).\n            return navigator.mediaDevices.enumerateDevices()\n            .then(function(devices) {\n              devices = devices.filter(function(d) {\n                return d.kind === 'videoinput';\n              });\n              var back = devices.find(function(d) {\n                return d.label.toLowerCase().indexOf('back') !== -1;\n              }) || (devices.length && devices[devices.length - 1]);\n              if (back) {\n                constraints.video.deviceId = face.exact ? {exact: back.deviceId} :\n                                                          {ideal: back.deviceId};\n              }\n              constraints.video = constraintsToChrome_(constraints.video);\n              logging('chrome: ' + JSON.stringify(constraints));\n              return func(constraints);\n            });\n          }\n        }\n        constraints.video = constraintsToChrome_(constraints.video);\n      }\n      logging('chrome: ' + JSON.stringify(constraints));\n      return func(constraints);\n    };\n\n    var shimError_ = function(e) {\n      return {\n        name: {\n          PermissionDeniedError: 'NotAllowedError',\n          ConstraintNotSatisfiedError: 'OverconstrainedError'\n        }[e.name] || e.name,\n        message: e.message,\n        constraint: e.constraintName,\n        toString: function() {\n          return this.name + (this.message && ': ') + this.message;\n        }\n      };\n    };\n\n    var getUserMedia_ = function(constraints, onSuccess, onError) {\n      shimConstraints_(constraints, function(c) {\n        navigator.webkitGetUserMedia(c, onSuccess, function(e) {\n          onError(shimError_(e));\n        });\n      });\n    };\n\n    navigator.getUserMedia = getUserMedia_;\n\n    // Returns the result of getUserMedia as a Promise.\n    var getUserMediaPromise_ = function(constraints) {\n      return new Promise(function(resolve, reject) {\n        navigator.getUserMedia(constraints, resolve, reject);\n      });\n    };\n\n    if (!navigator.mediaDevices) {\n      navigator.mediaDevices = {\n        getUserMedia: getUserMediaPromise_,\n        enumerateDevices: function() {\n          return new Promise(function(resolve) {\n            var kinds = {audio: 'audioinput', video: 'videoinput'};\n            return MediaStreamTrack.getSources(function(devices) {\n              resolve(devices.map(function(device) {\n                return {label: device.label,\n                        kind: kinds[device.kind],\n                        deviceId: device.id,\n                        groupId: ''};\n              }));\n            });\n          });\n        }\n      };\n    }\n\n    // A shim for getUserMedia method on the mediaDevices object.\n    // TODO(KaptenJansson) remove once implemented in Chrome stable.\n    if (!navigator.mediaDevices.getUserMedia) {\n      navigator.mediaDevices.getUserMedia = function(constraints) {\n        return getUserMediaPromise_(constraints);\n      };\n    } else {\n      // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n      // function which returns a Promise, it does not accept spec-style\n      // constraints.\n      var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n          bind(navigator.mediaDevices);\n      navigator.mediaDevices.getUserMedia = function(cs) {\n        return shimConstraints_(cs, function(c) {\n          return origGetUserMedia(c).catch(function(e) {\n            return Promise.reject(shimError_(e));\n          });\n        });\n      };\n    }\n\n    // Dummy devicechange event methods.\n    // TODO(KaptenJansson) remove once implemented in Chrome stable.\n    if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n      navigator.mediaDevices.addEventListener = function() {\n        logging('Dummy mediaDevices.addEventListener called.');\n      };\n    }\n    if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n      navigator.mediaDevices.removeEventListener = function() {\n        logging('Dummy mediaDevices.removeEventListener called.');\n      };\n    }\n  };\n\n  },{\"../utils.js\":10}],5:[function(require,module,exports){\n  /*\n   *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n   *\n   *  Use of this source code is governed by a BSD-style license\n   *  that can be found in the LICENSE file in the root of the source\n   *  tree.\n   */\n   /* eslint-env node */\n  'use strict';\n\n  var SDPUtils = require('sdp');\n  var browserDetails = require('../utils').browserDetails;\n\n  var edgeShim = {\n    shimPeerConnection: function() {\n      if (window.RTCIceGatherer) {\n        // ORTC defines an RTCIceCandidate object but no constructor.\n        // Not implemented in Edge.\n        if (!window.RTCIceCandidate) {\n          window.RTCIceCandidate = function(args) {\n            return args;\n          };\n        }\n        // ORTC does not have a session description object but\n        // other browsers (i.e. Chrome) that will support both PC and ORTC\n        // in the future might have this defined already.\n        if (!window.RTCSessionDescription) {\n          window.RTCSessionDescription = function(args) {\n            return args;\n          };\n        }\n      }\n\n      window.RTCPeerConnection = function(config) {\n        var self = this;\n\n        var _eventTarget = document.createDocumentFragment();\n        ['addEventListener', 'removeEventListener', 'dispatchEvent']\n            .forEach(function(method) {\n              self[method] = _eventTarget[method].bind(_eventTarget);\n            });\n\n        this.onicecandidate = null;\n        this.onaddstream = null;\n        this.ontrack = null;\n        this.onremovestream = null;\n        this.onsignalingstatechange = null;\n        this.oniceconnectionstatechange = null;\n        this.onnegotiationneeded = null;\n        this.ondatachannel = null;\n\n        this.localStreams = [];\n        this.remoteStreams = [];\n        this.getLocalStreams = function() {\n          return self.localStreams;\n        };\n        this.getRemoteStreams = function() {\n          return self.remoteStreams;\n        };\n\n        this.localDescription = new RTCSessionDescription({\n          type: '',\n          sdp: ''\n        });\n        this.remoteDescription = new RTCSessionDescription({\n          type: '',\n          sdp: ''\n        });\n        this.signalingState = 'stable';\n        this.iceConnectionState = 'new';\n        this.iceGatheringState = 'new';\n\n        this.iceOptions = {\n          gatherPolicy: 'all',\n          iceServers: []\n        };\n        if (config && config.iceTransportPolicy) {\n          switch (config.iceTransportPolicy) {\n            case 'all':\n            case 'relay':\n              this.iceOptions.gatherPolicy = config.iceTransportPolicy;\n              break;\n            case 'none':\n              // FIXME: remove once implementation and spec have added this.\n              throw new TypeError('iceTransportPolicy \"none\" not supported');\n            default:\n              // don't set iceTransportPolicy.\n              break;\n          }\n        }\n        this.usingBundle = config && config.bundlePolicy === 'max-bundle';\n\n        if (config && config.iceServers) {\n          // Edge does not like\n          // 1) stun:\n          // 2) turn: that does not have all of turn:host:port?transport=udp\n          // 3) turn: with ipv6 addresses\n          var iceServers = JSON.parse(JSON.stringify(config.iceServers));\n          this.iceOptions.iceServers = iceServers.filter(function(server) {\n            if (server && server.urls) {\n              var urls = server.urls;\n              if (typeof urls === 'string') {\n                urls = [urls];\n              }\n              urls = urls.filter(function(url) {\n                return (url.indexOf('turn:') === 0 &&\n                    url.indexOf('transport=udp') !== -1 &&\n                    url.indexOf('turn:[') === -1) ||\n                    (url.indexOf('stun:') === 0 &&\n                      browserDetails.version >= 14393);\n              })[0];\n              return !!urls;\n            }\n            return false;\n          });\n        }\n\n        // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n        // everything that is needed to describe a SDP m-line.\n        this.transceivers = [];\n\n        // since the iceGatherer is currently created in createOffer but we\n        // must not emit candidates until after setLocalDescription we buffer\n        // them in this array.\n        this._localIceCandidatesBuffer = [];\n      };\n\n      window.RTCPeerConnection.prototype._emitBufferedCandidates = function() {\n        var self = this;\n        var sections = SDPUtils.splitSections(self.localDescription.sdp);\n        // FIXME: need to apply ice candidates in a way which is async but\n        // in-order\n        this._localIceCandidatesBuffer.forEach(function(event) {\n          var end = !event.candidate || Object.keys(event.candidate).length === 0;\n          if (end) {\n            for (var j = 1; j < sections.length; j++) {\n              if (sections[j].indexOf('\\r\\na=end-of-candidates\\r\\n') === -1) {\n                sections[j] += 'a=end-of-candidates\\r\\n';\n              }\n            }\n          } else if (event.candidate.candidate.indexOf('typ endOfCandidates')\n              === -1) {\n            sections[event.candidate.sdpMLineIndex + 1] +=\n                'a=' + event.candidate.candidate + '\\r\\n';\n          }\n          self.localDescription.sdp = sections.join('');\n          self.dispatchEvent(event);\n          if (self.onicecandidate !== null) {\n            self.onicecandidate(event);\n          }\n          if (!event.candidate && self.iceGatheringState !== 'complete') {\n            var complete = self.transceivers.every(function(transceiver) {\n              return transceiver.iceGatherer &&\n                  transceiver.iceGatherer.state === 'completed';\n            });\n            if (complete) {\n              self.iceGatheringState = 'complete';\n            }\n          }\n        });\n        this._localIceCandidatesBuffer = [];\n      };\n\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        // Clone is necessary for local demos mostly, attaching directly\n        // to two different senders does not work (build 10547).\n        this.localStreams.push(stream.clone());\n        this._maybeFireNegotiationNeeded();\n      };\n\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        var idx = this.localStreams.indexOf(stream);\n        if (idx > -1) {\n          this.localStreams.splice(idx, 1);\n          this._maybeFireNegotiationNeeded();\n        }\n      };\n\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        return this.transceivers.filter(function(transceiver) {\n          return !!transceiver.rtpSender;\n        })\n        .map(function(transceiver) {\n          return transceiver.rtpSender;\n        });\n      };\n\n      window.RTCPeerConnection.prototype.getReceivers = function() {\n        return this.transceivers.filter(function(transceiver) {\n          return !!transceiver.rtpReceiver;\n        })\n        .map(function(transceiver) {\n          return transceiver.rtpReceiver;\n        });\n      };\n\n      // Determines the intersection of local and remote capabilities.\n      window.RTCPeerConnection.prototype._getCommonCapabilities =\n          function(localCapabilities, remoteCapabilities) {\n            var commonCapabilities = {\n              codecs: [],\n              headerExtensions: [],\n              fecMechanisms: []\n            };\n            localCapabilities.codecs.forEach(function(lCodec) {\n              for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n                var rCodec = remoteCapabilities.codecs[i];\n                if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n                    lCodec.clockRate === rCodec.clockRate &&\n                    lCodec.numChannels === rCodec.numChannels) {\n                  // push rCodec so we reply with offerer payload type\n                  commonCapabilities.codecs.push(rCodec);\n\n                  // determine common feedback mechanisms\n                  rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n                    for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n                      if (lCodec.rtcpFeedback[j].type === fb.type &&\n                          lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n                        return true;\n                      }\n                    }\n                    return false;\n                  });\n                  // FIXME: also need to determine .parameters\n                  //  see https://github.com/openpeer/ortc/issues/569\n                  break;\n                }\n              }\n            });\n\n            localCapabilities.headerExtensions\n                .forEach(function(lHeaderExtension) {\n                  for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n                       i++) {\n                    var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n                    if (lHeaderExtension.uri === rHeaderExtension.uri) {\n                      commonCapabilities.headerExtensions.push(rHeaderExtension);\n                      break;\n                    }\n                  }\n                });\n\n            // FIXME: fecMechanisms\n            return commonCapabilities;\n          };\n\n      // Create ICE gatherer, ICE transport and DTLS transport.\n      window.RTCPeerConnection.prototype._createIceAndDtlsTransports =\n          function(mid, sdpMLineIndex) {\n            var self = this;\n            var iceGatherer = new RTCIceGatherer(self.iceOptions);\n            var iceTransport = new RTCIceTransport(iceGatherer);\n            iceGatherer.onlocalcandidate = function(evt) {\n              var event = new Event('icecandidate');\n              event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n              var cand = evt.candidate;\n              var end = !cand || Object.keys(cand).length === 0;\n              // Edge emits an empty object for RTCIceCandidateComplete‥\n              if (end) {\n                // polyfill since RTCIceGatherer.state is not implemented in\n                // Edge 10547 yet.\n                if (iceGatherer.state === undefined) {\n                  iceGatherer.state = 'completed';\n                }\n\n                // Emit a candidate with type endOfCandidates to make the samples\n                // work. Edge requires addIceCandidate with this empty candidate\n                // to start checking. The real solution is to signal\n                // end-of-candidates to the other side when getting the null\n                // candidate but some apps (like the samples) don't do that.\n                event.candidate.candidate =\n                    'candidate:1 1 udp 1 0.0.0.0 9 typ endOfCandidates';\n              } else {\n                // RTCIceCandidate doesn't have a component, needs to be added\n                cand.component = iceTransport.component === 'RTCP' ? 2 : 1;\n                event.candidate.candidate = SDPUtils.writeCandidate(cand);\n              }\n\n              // update local description.\n              var sections = SDPUtils.splitSections(self.localDescription.sdp);\n              if (event.candidate.candidate.indexOf('typ endOfCandidates')\n                  === -1) {\n                sections[event.candidate.sdpMLineIndex + 1] +=\n                    'a=' + event.candidate.candidate + '\\r\\n';\n              } else {\n                sections[event.candidate.sdpMLineIndex + 1] +=\n                    'a=end-of-candidates\\r\\n';\n              }\n              self.localDescription.sdp = sections.join('');\n\n              var complete = self.transceivers.every(function(transceiver) {\n                return transceiver.iceGatherer &&\n                    transceiver.iceGatherer.state === 'completed';\n              });\n\n              // Emit candidate if localDescription is set.\n              // Also emits null candidate when all gatherers are complete.\n              switch (self.iceGatheringState) {\n                case 'new':\n                  self._localIceCandidatesBuffer.push(event);\n                  if (end && complete) {\n                    self._localIceCandidatesBuffer.push(\n                        new Event('icecandidate'));\n                  }\n                  break;\n                case 'gathering':\n                  self._emitBufferedCandidates();\n                  self.dispatchEvent(event);\n                  if (self.onicecandidate !== null) {\n                    self.onicecandidate(event);\n                  }\n                  if (complete) {\n                    self.dispatchEvent(new Event('icecandidate'));\n                    if (self.onicecandidate !== null) {\n                      self.onicecandidate(new Event('icecandidate'));\n                    }\n                    self.iceGatheringState = 'complete';\n                  }\n                  break;\n                case 'complete':\n                  // should not happen... currently!\n                  break;\n                default: // no-op.\n                  break;\n              }\n            };\n            iceTransport.onicestatechange = function() {\n              self._updateConnectionState();\n            };\n\n            var dtlsTransport = new RTCDtlsTransport(iceTransport);\n            dtlsTransport.ondtlsstatechange = function() {\n              self._updateConnectionState();\n            };\n            dtlsTransport.onerror = function() {\n              // onerror does not set state to failed by itself.\n              dtlsTransport.state = 'failed';\n              self._updateConnectionState();\n            };\n\n            return {\n              iceGatherer: iceGatherer,\n              iceTransport: iceTransport,\n              dtlsTransport: dtlsTransport\n            };\n          };\n\n      // Start the RTP Sender and Receiver for a transceiver.\n      window.RTCPeerConnection.prototype._transceive = function(transceiver,\n          send, recv) {\n        var params = this._getCommonCapabilities(transceiver.localCapabilities,\n            transceiver.remoteCapabilities);\n        if (send && transceiver.rtpSender) {\n          params.encodings = transceiver.sendEncodingParameters;\n          params.rtcp = {\n            cname: SDPUtils.localCName\n          };\n          if (transceiver.recvEncodingParameters.length) {\n            params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n          }\n          transceiver.rtpSender.send(params);\n        }\n        if (recv && transceiver.rtpReceiver) {\n          params.encodings = transceiver.recvEncodingParameters;\n          params.rtcp = {\n            cname: transceiver.cname\n          };\n          if (transceiver.sendEncodingParameters.length) {\n            params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n          }\n          transceiver.rtpReceiver.receive(params);\n        }\n      };\n\n      window.RTCPeerConnection.prototype.setLocalDescription =\n          function(description) {\n            var self = this;\n            var sections;\n            var sessionpart;\n            if (description.type === 'offer') {\n              // FIXME: What was the purpose of this empty if statement?\n              // if (!this._pendingOffer) {\n              // } else {\n              if (this._pendingOffer) {\n                // VERY limited support for SDP munging. Limited to:\n                // * changing the order of codecs\n                sections = SDPUtils.splitSections(description.sdp);\n                sessionpart = sections.shift();\n                sections.forEach(function(mediaSection, sdpMLineIndex) {\n                  var caps = SDPUtils.parseRtpParameters(mediaSection);\n                  self._pendingOffer[sdpMLineIndex].localCapabilities = caps;\n                });\n                this.transceivers = this._pendingOffer;\n                delete this._pendingOffer;\n              }\n            } else if (description.type === 'answer') {\n              sections = SDPUtils.splitSections(self.remoteDescription.sdp);\n              sessionpart = sections.shift();\n              var isIceLite = SDPUtils.matchPrefix(sessionpart,\n                  'a=ice-lite').length > 0;\n              sections.forEach(function(mediaSection, sdpMLineIndex) {\n                var transceiver = self.transceivers[sdpMLineIndex];\n                var iceGatherer = transceiver.iceGatherer;\n                var iceTransport = transceiver.iceTransport;\n                var dtlsTransport = transceiver.dtlsTransport;\n                var localCapabilities = transceiver.localCapabilities;\n                var remoteCapabilities = transceiver.remoteCapabilities;\n\n                var rejected = mediaSection.split('\\n', 1)[0]\n                    .split(' ', 2)[1] === '0';\n\n                if (!rejected && !transceiver.isDatachannel) {\n                  var remoteIceParameters = SDPUtils.getIceParameters(\n                      mediaSection, sessionpart);\n                  if (isIceLite) {\n                    var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n                    .map(function(cand) {\n                      return SDPUtils.parseCandidate(cand);\n                    })\n                    .filter(function(cand) {\n                      return cand.component === '1';\n                    });\n                    // ice-lite only includes host candidates in the SDP so we can\n                    // use setRemoteCandidates (which implies an\n                    // RTCIceCandidateComplete)\n                    if (cands.length) {\n                      iceTransport.setRemoteCandidates(cands);\n                    }\n                  }\n                  var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n                      mediaSection, sessionpart);\n                  if (isIceLite) {\n                    remoteDtlsParameters.role = 'server';\n                  }\n\n                  if (!self.usingBundle || sdpMLineIndex === 0) {\n                    iceTransport.start(iceGatherer, remoteIceParameters,\n                        isIceLite ? 'controlling' : 'controlled');\n                    dtlsTransport.start(remoteDtlsParameters);\n                  }\n\n                  // Calculate intersection of capabilities.\n                  var params = self._getCommonCapabilities(localCapabilities,\n                      remoteCapabilities);\n\n                  // Start the RTCRtpSender. The RTCRtpReceiver for this\n                  // transceiver has already been started in setRemoteDescription.\n                  self._transceive(transceiver,\n                      params.codecs.length > 0,\n                      false);\n                }\n              });\n            }\n\n            this.localDescription = {\n              type: description.type,\n              sdp: description.sdp\n            };\n            switch (description.type) {\n              case 'offer':\n                this._updateSignalingState('have-local-offer');\n                break;\n              case 'answer':\n                this._updateSignalingState('stable');\n                break;\n              default:\n                throw new TypeError('unsupported type \"' + description.type +\n                    '\"');\n            }\n\n            // If a success callback was provided, emit ICE candidates after it\n            // has been executed. Otherwise, emit callback after the Promise is\n            // resolved.\n            var hasCallback = arguments.length > 1 &&\n              typeof arguments[1] === 'function';\n            if (hasCallback) {\n              var cb = arguments[1];\n              window.setTimeout(function() {\n                cb();\n                if (self.iceGatheringState === 'new') {\n                  self.iceGatheringState = 'gathering';\n                }\n                self._emitBufferedCandidates();\n              }, 0);\n            }\n            var p = Promise.resolve();\n            p.then(function() {\n              if (!hasCallback) {\n                if (self.iceGatheringState === 'new') {\n                  self.iceGatheringState = 'gathering';\n                }\n                // Usually candidates will be emitted earlier.\n                window.setTimeout(self._emitBufferedCandidates.bind(self), 500);\n              }\n            });\n            return p;\n          };\n\n      window.RTCPeerConnection.prototype.setRemoteDescription =\n          function(description) {\n            var self = this;\n            var stream = new MediaStream();\n            var receiverList = [];\n            var sections = SDPUtils.splitSections(description.sdp);\n            var sessionpart = sections.shift();\n            var isIceLite = SDPUtils.matchPrefix(sessionpart,\n                'a=ice-lite').length > 0;\n            this.usingBundle = SDPUtils.matchPrefix(sessionpart,\n                'a=group:BUNDLE ').length > 0;\n            sections.forEach(function(mediaSection, sdpMLineIndex) {\n              var lines = SDPUtils.splitLines(mediaSection);\n              var mline = lines[0].substr(2).split(' ');\n              var kind = mline[0];\n              var rejected = mline[1] === '0';\n              var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n\n              var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:');\n              if (mid.length) {\n                mid = mid[0].substr(6);\n              } else {\n                mid = SDPUtils.generateIdentifier();\n              }\n\n              // Reject datachannels which are not implemented yet.\n              if (kind === 'application' && mline[2] === 'DTLS/SCTP') {\n                self.transceivers[sdpMLineIndex] = {\n                  mid: mid,\n                  isDatachannel: true\n                };\n                return;\n              }\n\n              var transceiver;\n              var iceGatherer;\n              var iceTransport;\n              var dtlsTransport;\n              var rtpSender;\n              var rtpReceiver;\n              var sendEncodingParameters;\n              var recvEncodingParameters;\n              var localCapabilities;\n\n              var track;\n              // FIXME: ensure the mediaSection has rtcp-mux set.\n              var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n              var remoteIceParameters;\n              var remoteDtlsParameters;\n              if (!rejected) {\n                remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n                    sessionpart);\n                remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n                    sessionpart);\n                remoteDtlsParameters.role = 'client';\n              }\n              recvEncodingParameters =\n                  SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n              var cname;\n              // Gets the first SSRC. Note that with RTX there might be multiple\n              // SSRCs.\n              var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n                  .map(function(line) {\n                    return SDPUtils.parseSsrcMedia(line);\n                  })\n                  .filter(function(obj) {\n                    return obj.attribute === 'cname';\n                  })[0];\n              if (remoteSsrc) {\n                cname = remoteSsrc.value;\n              }\n\n              var isComplete = SDPUtils.matchPrefix(mediaSection,\n                  'a=end-of-candidates', sessionpart).length > 0;\n              var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n                  .map(function(cand) {\n                    return SDPUtils.parseCandidate(cand);\n                  })\n                  .filter(function(cand) {\n                    return cand.component === '1';\n                  });\n              if (description.type === 'offer' && !rejected) {\n                var transports = self.usingBundle && sdpMLineIndex > 0 ? {\n                  iceGatherer: self.transceivers[0].iceGatherer,\n                  iceTransport: self.transceivers[0].iceTransport,\n                  dtlsTransport: self.transceivers[0].dtlsTransport\n                } : self._createIceAndDtlsTransports(mid, sdpMLineIndex);\n\n                if (isComplete) {\n                  transports.iceTransport.setRemoteCandidates(cands);\n                }\n\n                localCapabilities = RTCRtpReceiver.getCapabilities(kind);\n                sendEncodingParameters = [{\n                  ssrc: (2 * sdpMLineIndex + 2) * 1001\n                }];\n\n                rtpReceiver = new RTCRtpReceiver(transports.dtlsTransport, kind);\n\n                track = rtpReceiver.track;\n                receiverList.push([track, rtpReceiver]);\n                // FIXME: not correct when there are multiple streams but that is\n                // not currently supported in this shim.\n                stream.addTrack(track);\n\n                // FIXME: look at direction.\n                if (self.localStreams.length > 0 &&\n                    self.localStreams[0].getTracks().length >= sdpMLineIndex) {\n                  var localTrack;\n                  if (kind === 'audio') {\n                    localTrack = self.localStreams[0].getAudioTracks()[0];\n                  } else if (kind === 'video') {\n                    localTrack = self.localStreams[0].getVideoTracks()[0];\n                  }\n                  if (localTrack) {\n                    rtpSender = new RTCRtpSender(localTrack,\n                        transports.dtlsTransport);\n                  }\n                }\n\n                self.transceivers[sdpMLineIndex] = {\n                  iceGatherer: transports.iceGatherer,\n                  iceTransport: transports.iceTransport,\n                  dtlsTransport: transports.dtlsTransport,\n                  localCapabilities: localCapabilities,\n                  remoteCapabilities: remoteCapabilities,\n                  rtpSender: rtpSender,\n                  rtpReceiver: rtpReceiver,\n                  kind: kind,\n                  mid: mid,\n                  cname: cname,\n                  sendEncodingParameters: sendEncodingParameters,\n                  recvEncodingParameters: recvEncodingParameters\n                };\n                // Start the RTCRtpReceiver now. The RTPSender is started in\n                // setLocalDescription.\n                self._transceive(self.transceivers[sdpMLineIndex],\n                    false,\n                    direction === 'sendrecv' || direction === 'sendonly');\n              } else if (description.type === 'answer' && !rejected) {\n                transceiver = self.transceivers[sdpMLineIndex];\n                iceGatherer = transceiver.iceGatherer;\n                iceTransport = transceiver.iceTransport;\n                dtlsTransport = transceiver.dtlsTransport;\n                rtpSender = transceiver.rtpSender;\n                rtpReceiver = transceiver.rtpReceiver;\n                sendEncodingParameters = transceiver.sendEncodingParameters;\n                localCapabilities = transceiver.localCapabilities;\n\n                self.transceivers[sdpMLineIndex].recvEncodingParameters =\n                    recvEncodingParameters;\n                self.transceivers[sdpMLineIndex].remoteCapabilities =\n                    remoteCapabilities;\n                self.transceivers[sdpMLineIndex].cname = cname;\n\n                if ((isIceLite || isComplete) && cands.length) {\n                  iceTransport.setRemoteCandidates(cands);\n                }\n                if (!self.usingBundle || sdpMLineIndex === 0) {\n                  iceTransport.start(iceGatherer, remoteIceParameters,\n                      'controlling');\n                  dtlsTransport.start(remoteDtlsParameters);\n                }\n\n                self._transceive(transceiver,\n                    direction === 'sendrecv' || direction === 'recvonly',\n                    direction === 'sendrecv' || direction === 'sendonly');\n\n                if (rtpReceiver &&\n                    (direction === 'sendrecv' || direction === 'sendonly')) {\n                  track = rtpReceiver.track;\n                  receiverList.push([track, rtpReceiver]);\n                  stream.addTrack(track);\n                } else {\n                  // FIXME: actually the receiver should be created later.\n                  delete transceiver.rtpReceiver;\n                }\n              }\n            });\n\n            this.remoteDescription = {\n              type: description.type,\n              sdp: description.sdp\n            };\n            switch (description.type) {\n              case 'offer':\n                this._updateSignalingState('have-remote-offer');\n                break;\n              case 'answer':\n                this._updateSignalingState('stable');\n                break;\n              default:\n                throw new TypeError('unsupported type \"' + description.type +\n                    '\"');\n            }\n            if (stream.getTracks().length) {\n              self.remoteStreams.push(stream);\n              window.setTimeout(function() {\n                var event = new Event('addstream');\n                event.stream = stream;\n                self.dispatchEvent(event);\n                if (self.onaddstream !== null) {\n                  window.setTimeout(function() {\n                    self.onaddstream(event);\n                  }, 0);\n                }\n\n                receiverList.forEach(function(item) {\n                  var track = item[0];\n                  var receiver = item[1];\n                  var trackEvent = new Event('track');\n                  trackEvent.track = track;\n                  trackEvent.receiver = receiver;\n                  trackEvent.streams = [stream];\n                  self.dispatchEvent(event);\n                  if (self.ontrack !== null) {\n                    window.setTimeout(function() {\n                      self.ontrack(trackEvent);\n                    }, 0);\n                  }\n                });\n              }, 0);\n            }\n            if (arguments.length > 1 && typeof arguments[1] === 'function') {\n              window.setTimeout(arguments[1], 0);\n            }\n            return Promise.resolve();\n          };\n\n      window.RTCPeerConnection.prototype.close = function() {\n        this.transceivers.forEach(function(transceiver) {\n          /* not yet\n          if (transceiver.iceGatherer) {\n            transceiver.iceGatherer.close();\n          }\n          */\n          if (transceiver.iceTransport) {\n            transceiver.iceTransport.stop();\n          }\n          if (transceiver.dtlsTransport) {\n            transceiver.dtlsTransport.stop();\n          }\n          if (transceiver.rtpSender) {\n            transceiver.rtpSender.stop();\n          }\n          if (transceiver.rtpReceiver) {\n            transceiver.rtpReceiver.stop();\n          }\n        });\n        // FIXME: clean up tracks, local streams, remote streams, etc\n        this._updateSignalingState('closed');\n      };\n\n      // Update the signaling state.\n      window.RTCPeerConnection.prototype._updateSignalingState =\n          function(newState) {\n            this.signalingState = newState;\n            var event = new Event('signalingstatechange');\n            this.dispatchEvent(event);\n            if (this.onsignalingstatechange !== null) {\n              this.onsignalingstatechange(event);\n            }\n          };\n\n      // Determine whether to fire the negotiationneeded event.\n      window.RTCPeerConnection.prototype._maybeFireNegotiationNeeded =\n          function() {\n            // Fire away (for now).\n            var event = new Event('negotiationneeded');\n            this.dispatchEvent(event);\n            if (this.onnegotiationneeded !== null) {\n              this.onnegotiationneeded(event);\n            }\n          };\n\n      // Update the connection state.\n      window.RTCPeerConnection.prototype._updateConnectionState = function() {\n        var self = this;\n        var newState;\n        var states = {\n          'new': 0,\n          closed: 0,\n          connecting: 0,\n          checking: 0,\n          connected: 0,\n          completed: 0,\n          failed: 0\n        };\n        this.transceivers.forEach(function(transceiver) {\n          states[transceiver.iceTransport.state]++;\n          states[transceiver.dtlsTransport.state]++;\n        });\n        // ICETransport.completed and connected are the same for this purpose.\n        states.connected += states.completed;\n\n        newState = 'new';\n        if (states.failed > 0) {\n          newState = 'failed';\n        } else if (states.connecting > 0 || states.checking > 0) {\n          newState = 'connecting';\n        } else if (states.disconnected > 0) {\n          newState = 'disconnected';\n        } else if (states.new > 0) {\n          newState = 'new';\n        } else if (states.connected > 0 || states.completed > 0) {\n          newState = 'connected';\n        }\n\n        if (newState !== self.iceConnectionState) {\n          self.iceConnectionState = newState;\n          var event = new Event('iceconnectionstatechange');\n          this.dispatchEvent(event);\n          if (this.oniceconnectionstatechange !== null) {\n            this.oniceconnectionstatechange(event);\n          }\n        }\n      };\n\n      window.RTCPeerConnection.prototype.createOffer = function() {\n        var self = this;\n        if (this._pendingOffer) {\n          throw new Error('createOffer called while there is a pending offer.');\n        }\n        var offerOptions;\n        if (arguments.length === 1 && typeof arguments[0] !== 'function') {\n          offerOptions = arguments[0];\n        } else if (arguments.length === 3) {\n          offerOptions = arguments[2];\n        }\n\n        var tracks = [];\n        var numAudioTracks = 0;\n        var numVideoTracks = 0;\n        // Default to sendrecv.\n        if (this.localStreams.length) {\n          numAudioTracks = this.localStreams[0].getAudioTracks().length;\n          numVideoTracks = this.localStreams[0].getVideoTracks().length;\n        }\n        // Determine number of audio and video tracks we need to send/recv.\n        if (offerOptions) {\n          // Reject Chrome legacy constraints.\n          if (offerOptions.mandatory || offerOptions.optional) {\n            throw new TypeError(\n                'Legacy mandatory/optional constraints not supported.');\n          }\n          if (offerOptions.offerToReceiveAudio !== undefined) {\n            numAudioTracks = offerOptions.offerToReceiveAudio;\n          }\n          if (offerOptions.offerToReceiveVideo !== undefined) {\n            numVideoTracks = offerOptions.offerToReceiveVideo;\n          }\n        }\n        if (this.localStreams.length) {\n          // Push local streams.\n          this.localStreams[0].getTracks().forEach(function(track) {\n            tracks.push({\n              kind: track.kind,\n              track: track,\n              wantReceive: track.kind === 'audio' ?\n                  numAudioTracks > 0 : numVideoTracks > 0\n            });\n            if (track.kind === 'audio') {\n              numAudioTracks--;\n            } else if (track.kind === 'video') {\n              numVideoTracks--;\n            }\n          });\n        }\n        // Create M-lines for recvonly streams.\n        while (numAudioTracks > 0 || numVideoTracks > 0) {\n          if (numAudioTracks > 0) {\n            tracks.push({\n              kind: 'audio',\n              wantReceive: true\n            });\n            numAudioTracks--;\n          }\n          if (numVideoTracks > 0) {\n            tracks.push({\n              kind: 'video',\n              wantReceive: true\n            });\n            numVideoTracks--;\n          }\n        }\n\n        var sdp = SDPUtils.writeSessionBoilerplate();\n        var transceivers = [];\n        tracks.forEach(function(mline, sdpMLineIndex) {\n          // For each track, create an ice gatherer, ice transport,\n          // dtls transport, potentially rtpsender and rtpreceiver.\n          var track = mline.track;\n          var kind = mline.kind;\n          var mid = SDPUtils.generateIdentifier();\n\n          var transports = self.usingBundle && sdpMLineIndex > 0 ? {\n            iceGatherer: transceivers[0].iceGatherer,\n            iceTransport: transceivers[0].iceTransport,\n            dtlsTransport: transceivers[0].dtlsTransport\n          } : self._createIceAndDtlsTransports(mid, sdpMLineIndex);\n\n          var localCapabilities = RTCRtpSender.getCapabilities(kind);\n          var rtpSender;\n          var rtpReceiver;\n\n          // generate an ssrc now, to be used later in rtpSender.send\n          var sendEncodingParameters = [{\n            ssrc: (2 * sdpMLineIndex + 1) * 1001\n          }];\n          if (track) {\n            rtpSender = new RTCRtpSender(track, transports.dtlsTransport);\n          }\n\n          if (mline.wantReceive) {\n            rtpReceiver = new RTCRtpReceiver(transports.dtlsTransport, kind);\n          }\n\n          transceivers[sdpMLineIndex] = {\n            iceGatherer: transports.iceGatherer,\n            iceTransport: transports.iceTransport,\n            dtlsTransport: transports.dtlsTransport,\n            localCapabilities: localCapabilities,\n            remoteCapabilities: null,\n            rtpSender: rtpSender,\n            rtpReceiver: rtpReceiver,\n            kind: kind,\n            mid: mid,\n            sendEncodingParameters: sendEncodingParameters,\n            recvEncodingParameters: null\n          };\n        });\n        if (this.usingBundle) {\n          sdp += 'a=group:BUNDLE ' + transceivers.map(function(t) {\n            return t.mid;\n          }).join(' ') + '\\r\\n';\n        }\n        tracks.forEach(function(mline, sdpMLineIndex) {\n          var transceiver = transceivers[sdpMLineIndex];\n          sdp += SDPUtils.writeMediaSection(transceiver,\n              transceiver.localCapabilities, 'offer', self.localStreams[0]);\n        });\n\n        this._pendingOffer = transceivers;\n        var desc = new RTCSessionDescription({\n          type: 'offer',\n          sdp: sdp\n        });\n        if (arguments.length && typeof arguments[0] === 'function') {\n          window.setTimeout(arguments[0], 0, desc);\n        }\n        return Promise.resolve(desc);\n      };\n\n      window.RTCPeerConnection.prototype.createAnswer = function() {\n        var self = this;\n\n        var sdp = SDPUtils.writeSessionBoilerplate();\n        if (this.usingBundle) {\n          sdp += 'a=group:BUNDLE ' + this.transceivers.map(function(t) {\n            return t.mid;\n          }).join(' ') + '\\r\\n';\n        }\n        this.transceivers.forEach(function(transceiver) {\n          if (transceiver.isDatachannel) {\n            sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' +\n                'c=IN IP4 0.0.0.0\\r\\n' +\n                'a=mid:' + transceiver.mid + '\\r\\n';\n            return;\n          }\n          // Calculate intersection of capabilities.\n          var commonCapabilities = self._getCommonCapabilities(\n              transceiver.localCapabilities,\n              transceiver.remoteCapabilities);\n\n          sdp += SDPUtils.writeMediaSection(transceiver, commonCapabilities,\n              'answer', self.localStreams[0]);\n        });\n\n        var desc = new RTCSessionDescription({\n          type: 'answer',\n          sdp: sdp\n        });\n        if (arguments.length && typeof arguments[0] === 'function') {\n          window.setTimeout(arguments[0], 0, desc);\n        }\n        return Promise.resolve(desc);\n      };\n\n      window.RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n        if (candidate === null) {\n          this.transceivers.forEach(function(transceiver) {\n            transceiver.iceTransport.addRemoteCandidate({});\n          });\n        } else {\n          var mLineIndex = candidate.sdpMLineIndex;\n          if (candidate.sdpMid) {\n            for (var i = 0; i < this.transceivers.length; i++) {\n              if (this.transceivers[i].mid === candidate.sdpMid) {\n                mLineIndex = i;\n                break;\n              }\n            }\n          }\n          var transceiver = this.transceivers[mLineIndex];\n          if (transceiver) {\n            var cand = Object.keys(candidate.candidate).length > 0 ?\n                SDPUtils.parseCandidate(candidate.candidate) : {};\n            // Ignore Chrome's invalid candidates since Edge does not like them.\n            if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n              return;\n            }\n            // Ignore RTCP candidates, we assume RTCP-MUX.\n            if (cand.component !== '1') {\n              return;\n            }\n            // A dirty hack to make samples work.\n            if (cand.type === 'endOfCandidates') {\n              cand = {};\n            }\n            transceiver.iceTransport.addRemoteCandidate(cand);\n\n            // update the remoteDescription.\n            var sections = SDPUtils.splitSections(this.remoteDescription.sdp);\n            sections[mLineIndex + 1] += (cand.type ? candidate.candidate.trim()\n                : 'a=end-of-candidates') + '\\r\\n';\n            this.remoteDescription.sdp = sections.join('');\n          }\n        }\n        if (arguments.length > 1 && typeof arguments[1] === 'function') {\n          window.setTimeout(arguments[1], 0);\n        }\n        return Promise.resolve();\n      };\n\n      window.RTCPeerConnection.prototype.getStats = function() {\n        var promises = [];\n        this.transceivers.forEach(function(transceiver) {\n          ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n              'dtlsTransport'].forEach(function(method) {\n                if (transceiver[method]) {\n                  promises.push(transceiver[method].getStats());\n                }\n              });\n        });\n        var cb = arguments.length > 1 && typeof arguments[1] === 'function' &&\n            arguments[1];\n        return new Promise(function(resolve) {\n          // shim getStats with maplike support\n          var results = new Map();\n          Promise.all(promises).then(function(res) {\n            res.forEach(function(result) {\n              Object.keys(result).forEach(function(id) {\n                results.set(id, result[id]);\n                results[id] = result[id];\n              });\n            });\n            if (cb) {\n              window.setTimeout(cb, 0, results);\n            }\n            resolve(results);\n          });\n        });\n      };\n    }\n  };\n\n  // Expose public methods.\n  module.exports = {\n    shimPeerConnection: edgeShim.shimPeerConnection,\n    shimGetUserMedia: require('./getusermedia')\n  };\n\n  },{\"../utils\":10,\"./getusermedia\":6,\"sdp\":1}],6:[function(require,module,exports){\n  /*\n   *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n   *\n   *  Use of this source code is governed by a BSD-style license\n   *  that can be found in the LICENSE file in the root of the source\n   *  tree.\n   */\n   /* eslint-env node */\n  'use strict';\n\n  // Expose public methods.\n  module.exports = function() {\n    var shimError_ = function(e) {\n      return {\n        name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n        message: e.message,\n        constraint: e.constraint,\n        toString: function() {\n          return this.name;\n        }\n      };\n    };\n\n    // getUserMedia error shim.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      return origGetUserMedia(c).catch(function(e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  };\n\n  },{}],7:[function(require,module,exports){\n  /*\n   *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n   *\n   *  Use of this source code is governed by a BSD-style license\n   *  that can be found in the LICENSE file in the root of the source\n   *  tree.\n   */\n   /* eslint-env node */\n  'use strict';\n\n  var browserDetails = require('../utils').browserDetails;\n\n  var firefoxShim = {\n    shimOnTrack: function() {\n      if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n          window.RTCPeerConnection.prototype)) {\n        Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n          get: function() {\n            return this._ontrack;\n          },\n          set: function(f) {\n            if (this._ontrack) {\n              this.removeEventListener('track', this._ontrack);\n              this.removeEventListener('addstream', this._ontrackpoly);\n            }\n            this.addEventListener('track', this._ontrack = f);\n            this.addEventListener('addstream', this._ontrackpoly = function(e) {\n              e.stream.getTracks().forEach(function(track) {\n                var event = new Event('track');\n                event.track = track;\n                event.receiver = {track: track};\n                event.streams = [e.stream];\n                this.dispatchEvent(event);\n              }.bind(this));\n            }.bind(this));\n          }\n        });\n      }\n    },\n\n    shimSourceObject: function() {\n      // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n      if (typeof window === 'object') {\n        if (window.HTMLMediaElement &&\n          !('srcObject' in window.HTMLMediaElement.prototype)) {\n          // Shim the srcObject property, once, when HTMLMediaElement is found.\n          Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n            get: function() {\n              return this.mozSrcObject;\n            },\n            set: function(stream) {\n              this.mozSrcObject = stream;\n            }\n          });\n        }\n      }\n    },\n\n    shimPeerConnection: function() {\n      if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n          window.mozRTCPeerConnection)) {\n        return; // probably media.peerconnection.enabled=false in about:config\n      }\n      // The RTCPeerConnection object.\n      if (!window.RTCPeerConnection) {\n        window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n          if (browserDetails.version < 38) {\n            // .urls is not supported in FF < 38.\n            // create RTCIceServers with a single url.\n            if (pcConfig && pcConfig.iceServers) {\n              var newIceServers = [];\n              for (var i = 0; i < pcConfig.iceServers.length; i++) {\n                var server = pcConfig.iceServers[i];\n                if (server.hasOwnProperty('urls')) {\n                  for (var j = 0; j < server.urls.length; j++) {\n                    var newServer = {\n                      url: server.urls[j]\n                    };\n                    if (server.urls[j].indexOf('turn') === 0) {\n                      newServer.username = server.username;\n                      newServer.credential = server.credential;\n                    }\n                    newIceServers.push(newServer);\n                  }\n                } else {\n                  newIceServers.push(pcConfig.iceServers[i]);\n                }\n              }\n              pcConfig.iceServers = newIceServers;\n            }\n          }\n          return new mozRTCPeerConnection(pcConfig, pcConstraints);\n        };\n        window.RTCPeerConnection.prototype = mozRTCPeerConnection.prototype;\n\n        // wrap static methods. Currently just generateCertificate.\n        if (mozRTCPeerConnection.generateCertificate) {\n          Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n            get: function() {\n              return mozRTCPeerConnection.generateCertificate;\n            }\n          });\n        }\n\n        window.RTCSessionDescription = mozRTCSessionDescription;\n        window.RTCIceCandidate = mozRTCIceCandidate;\n      }\n\n      // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = RTCPeerConnection.prototype[method];\n            RTCPeerConnection.prototype[method] = function() {\n              arguments[0] = new ((method === 'addIceCandidate') ?\n                  RTCIceCandidate : RTCSessionDescription)(arguments[0]);\n              return nativeMethod.apply(this, arguments);\n            };\n          });\n\n      // support for addIceCandidate(null)\n      var nativeAddIceCandidate =\n          RTCPeerConnection.prototype.addIceCandidate;\n      RTCPeerConnection.prototype.addIceCandidate = function() {\n        return arguments[0] === null ? Promise.resolve()\n            : nativeAddIceCandidate.apply(this, arguments);\n      };\n\n      // shim getStats with maplike support\n      var makeMapStats = function(stats) {\n        var map = new Map();\n        Object.keys(stats).forEach(function(key) {\n          map.set(key, stats[key]);\n          map[key] = stats[key];\n        });\n        return map;\n      };\n\n      var nativeGetStats = RTCPeerConnection.prototype.getStats;\n      RTCPeerConnection.prototype.getStats = function(selector, onSucc, onErr) {\n        return nativeGetStats.apply(this, [selector || null])\n          .then(function(stats) {\n            return makeMapStats(stats);\n          })\n          .then(onSucc, onErr);\n      };\n    }\n  };\n\n  // Expose public methods.\n  module.exports = {\n    shimOnTrack: firefoxShim.shimOnTrack,\n    shimSourceObject: firefoxShim.shimSourceObject,\n    shimPeerConnection: firefoxShim.shimPeerConnection,\n    shimGetUserMedia: require('./getusermedia')\n  };\n\n  },{\"../utils\":10,\"./getusermedia\":8}],8:[function(require,module,exports){\n  /*\n   *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n   *\n   *  Use of this source code is governed by a BSD-style license\n   *  that can be found in the LICENSE file in the root of the source\n   *  tree.\n   */\n   /* eslint-env node */\n  'use strict';\n\n  var logging = require('../utils').log;\n  var browserDetails = require('../utils').browserDetails;\n\n  // Expose public methods.\n  module.exports = function() {\n    var shimError_ = function(e) {\n      return {\n        name: {\n          SecurityError: 'NotAllowedError',\n          PermissionDeniedError: 'NotAllowedError'\n        }[e.name] || e.name,\n        message: {\n          'The operation is insecure.': 'The request is not allowed by the ' +\n          'user agent or the platform in the current context.'\n        }[e.message] || e.message,\n        constraint: e.constraint,\n        toString: function() {\n          return this.name + (this.message && ': ') + this.message;\n        }\n      };\n    };\n\n    // getUserMedia constraints shim.\n    var getUserMedia_ = function(constraints, onSuccess, onError) {\n      var constraintsToFF37_ = function(c) {\n        if (typeof c !== 'object' || c.require) {\n          return c;\n        }\n        var require = [];\n        Object.keys(c).forEach(function(key) {\n          if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n            return;\n          }\n          var r = c[key] = (typeof c[key] === 'object') ?\n              c[key] : {ideal: c[key]};\n          if (r.min !== undefined ||\n              r.max !== undefined || r.exact !== undefined) {\n            require.push(key);\n          }\n          if (r.exact !== undefined) {\n            if (typeof r.exact === 'number') {\n              r. min = r.max = r.exact;\n            } else {\n              c[key] = r.exact;\n            }\n            delete r.exact;\n          }\n          if (r.ideal !== undefined) {\n            c.advanced = c.advanced || [];\n            var oc = {};\n            if (typeof r.ideal === 'number') {\n              oc[key] = {min: r.ideal, max: r.ideal};\n            } else {\n              oc[key] = r.ideal;\n            }\n            c.advanced.push(oc);\n            delete r.ideal;\n            if (!Object.keys(r).length) {\n              delete c[key];\n            }\n          }\n        });\n        if (require.length) {\n          c.require = require;\n        }\n        return c;\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      if (browserDetails.version < 38) {\n        logging('spec: ' + JSON.stringify(constraints));\n        if (constraints.audio) {\n          constraints.audio = constraintsToFF37_(constraints.audio);\n        }\n        if (constraints.video) {\n          constraints.video = constraintsToFF37_(constraints.video);\n        }\n        logging('ff37: ' + JSON.stringify(constraints));\n      }\n      return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\n        onError(shimError_(e));\n      });\n    };\n\n    // Returns the result of getUserMedia as a Promise.\n    var getUserMediaPromise_ = function(constraints) {\n      return new Promise(function(resolve, reject) {\n        getUserMedia_(constraints, resolve, reject);\n      });\n    };\n\n    // Shim for mediaDevices on older versions.\n    if (!navigator.mediaDevices) {\n      navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\n        addEventListener: function() { },\n        removeEventListener: function() { }\n      };\n    }\n    navigator.mediaDevices.enumerateDevices =\n        navigator.mediaDevices.enumerateDevices || function() {\n          return new Promise(function(resolve) {\n            var infos = [\n              {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n              {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n            ];\n            resolve(infos);\n          });\n        };\n\n    if (browserDetails.version < 41) {\n      // Work around http://bugzil.la/1169665\n      var orgEnumerateDevices =\n          navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n      navigator.mediaDevices.enumerateDevices = function() {\n        return orgEnumerateDevices().then(undefined, function(e) {\n          if (e.name === 'NotFoundError') {\n            return [];\n          }\n          throw e;\n        });\n      };\n    }\n    if (browserDetails.version < 49) {\n      var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n          bind(navigator.mediaDevices);\n      navigator.mediaDevices.getUserMedia = function(c) {\n        return origGetUserMedia(c).catch(function(e) {\n          return Promise.reject(shimError_(e));\n        });\n      };\n    }\n    navigator.getUserMedia = function(constraints, onSuccess, onError) {\n      if (browserDetails.version < 44) {\n        return getUserMedia_(constraints, onSuccess, onError);\n      }\n      // Replace Firefox 44+'s deprecation warning with unprefixed version.\n      console.warn('navigator.getUserMedia has been replaced by ' +\n                   'navigator.mediaDevices.getUserMedia');\n      navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n    };\n  };\n\n  },{\"../utils\":10}],9:[function(require,module,exports){\n  /*\n   *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n   *\n   *  Use of this source code is governed by a BSD-style license\n   *  that can be found in the LICENSE file in the root of the source\n   *  tree.\n   */\n  'use strict';\n  var safariShim = {\n    // TODO: DrAlex, should be here, double check against LayoutTests\n    // shimOnTrack: function() { },\n\n    // TODO: once the back-end for the mac port is done, add.\n    // TODO: check for webkitGTK+\n    // shimPeerConnection: function() { },\n\n    shimGetUserMedia: function() {\n      navigator.getUserMedia = navigator.webkitGetUserMedia;\n    }\n  };\n\n  // Expose public methods.\n  module.exports = {\n    shimGetUserMedia: safariShim.shimGetUserMedia\n    // TODO\n    // shimOnTrack: safariShim.shimOnTrack,\n    // shimPeerConnection: safariShim.shimPeerConnection\n  };\n\n  },{}],10:[function(require,module,exports){\n  /*\n   *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n   *\n   *  Use of this source code is governed by a BSD-style license\n   *  that can be found in the LICENSE file in the root of the source\n   *  tree.\n   */\n   /* eslint-env node */\n  'use strict';\n\n  var logDisabled_ = true;\n\n  // Utility methods.\n  var utils = {\n    disableLog: function(bool) {\n      if (typeof bool !== 'boolean') {\n        return new Error('Argument type: ' + typeof bool +\n            '. Please use a boolean.');\n      }\n      logDisabled_ = bool;\n      return (bool) ? 'adapter.js logging disabled' :\n          'adapter.js logging enabled';\n    },\n\n    log: function() {\n      if (typeof window === 'object') {\n        if (logDisabled_) {\n          return;\n        }\n        if (typeof console !== 'undefined' && typeof console.log === 'function') {\n          console.log.apply(console, arguments);\n        }\n      }\n    },\n\n    /**\n     * Extract browser version out of the provided user agent string.\n     *\n     * @param {!string} uastring userAgent string.\n     * @param {!string} expr Regular expression used as match criteria.\n     * @param {!number} pos position in the version string to be returned.\n     * @return {!number} browser version.\n     */\n    extractVersion: function(uastring, expr, pos) {\n      var match = uastring.match(expr);\n      return match && match.length >= pos && parseInt(match[pos], 10);\n    },\n\n    /**\n     * Browser detector.\n     *\n     * @return {object} result containing browser and version\n     *     properties.\n     */\n    detectBrowser: function() {\n      // Returned result object.\n      var result = {};\n      result.browser = null;\n      result.version = null;\n\n      // Fail early if it's not a browser\n      if (typeof window === 'undefined' || !window.navigator) {\n        result.browser = 'Not a browser.';\n        return result;\n      }\n\n      // Firefox.\n      if (navigator.mozGetUserMedia) {\n        result.browser = 'firefox';\n        result.version = this.extractVersion(navigator.userAgent,\n            /Firefox\\/([0-9]+)\\./, 1);\n\n      // all webkit-based browsers\n      } else if (navigator.webkitGetUserMedia) {\n        // Chrome, Chromium, Webview, Opera, all use the chrome shim for now\n        if (window.webkitRTCPeerConnection) {\n          result.browser = 'chrome';\n          result.version = this.extractVersion(navigator.userAgent,\n            /Chrom(e|ium)\\/([0-9]+)\\./, 2);\n\n        // Safari or unknown webkit-based\n        // for the time being Safari has support for MediaStreams but not webRTC\n        } else {\n          // Safari UA substrings of interest for reference:\n          // - webkit version:           AppleWebKit/602.1.25 (also used in Op,Cr)\n          // - safari UI version:        Version/9.0.3 (unique to Safari)\n          // - safari UI webkit version: Safari/601.4.4 (also used in Op,Cr)\n          //\n          // if the webkit version and safari UI webkit versions are equals,\n          // ... this is a stable version.\n          //\n          // only the internal webkit version is important today to know if\n          // media streams are supported\n          //\n          if (navigator.userAgent.match(/Version\\/(\\d+).(\\d+)/)) {\n            result.browser = 'safari';\n            result.version = this.extractVersion(navigator.userAgent,\n              /AppleWebKit\\/([0-9]+)\\./, 1);\n\n          // unknown webkit-based browser\n          } else {\n            result.browser = 'Unsupported webkit-based browser ' +\n                'with GUM support but no WebRTC support.';\n            return result;\n          }\n        }\n\n      // Edge.\n      } else if (navigator.mediaDevices &&\n          navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n        result.browser = 'edge';\n        result.version = this.extractVersion(navigator.userAgent,\n            /Edge\\/(\\d+).(\\d+)$/, 2);\n\n      // Default fallthrough: not supported.\n      } else {\n        result.browser = 'Not a supported browser.';\n        return result;\n      }\n\n      return result;\n    }\n  };\n\n  // Export.\n  module.exports = {\n    log: utils.log,\n    disableLog: utils.disableLog,\n    browserDetails: utils.detectBrowser(),\n    extractVersion: utils.extractVersion\n  };\n\n  },{}]},{},[2])(2)\n});\n/* jshint ignore:end */\n\n  // END OF INJECTION OF GOOGLE'S ADAPTER.JS CONTENT\n  ///////////////////////////////////////////////////////////////////\n\n  AdapterJS.parseWebrtcDetectedBrowser();\n\n  ///////////////////////////////////////////////////////////////////\n  // EXTENSION FOR CHROME, FIREFOX AND EDGE\n  // Includes legacy functions\n  // -- createIceServer\n  // -- createIceServers\n  // -- MediaStreamTrack.getSources\n  //\n  // and additional shims\n  // -- attachMediaStream\n  // -- reattachMediaStream\n  // -- requestUserMedia\n  // -- a call to AdapterJS.maybeThroughWebRTCReady (notifies WebRTC is ready)\n\n  // Add support for legacy functions createIceServer and createIceServers\n  if ( navigator.mozGetUserMedia ) {\n    // Shim for MediaStreamTrack.getSources.\n    MediaStreamTrack.getSources = function(successCb) {\n      setTimeout(function() {\n        var infos = [\n          { kind: 'audio', id: 'default', label:'', facing:'' },\n          { kind: 'video', id: 'default', label:'', facing:'' }\n        ];\n        successCb(infos);\n      }, 0);\n    };\n\n    // Attach a media stream to an element.\n    attachMediaStream = function(element, stream) {\n      element.srcObject = stream;\n      return element;\n    };\n\n    reattachMediaStream = function(to, from) {\n      to.srcObject = from.srcObject;\n      return to;\n    };\n\n    createIceServer = function (url, username, password) {\n      console.warn('createIceServer is deprecated. It should be replaced with an application level implementation.');\n      // Note: Google's import of AJS will auto-reverse to 'url': '...' for FF < 38\n\n      var iceServer = null;\n      var urlParts = url.split(':');\n      if (urlParts[0].indexOf('stun') === 0) {\n        iceServer = { urls : [url] };\n      } else if (urlParts[0].indexOf('turn') === 0) {\n        if (webrtcDetectedVersion < 27) {\n          var turnUrlParts = url.split('?');\n          if (turnUrlParts.length === 1 ||\n            turnUrlParts[1].indexOf('transport=udp') === 0) {\n            iceServer = {\n              urls : [turnUrlParts[0]],\n              credential : password,\n              username : username\n            };\n          }\n        } else {\n          iceServer = {\n            urls : [url],\n            credential : password,\n            username : username\n          };\n        }\n      }\n      return iceServer;\n    };\n\n    createIceServers = function (urls, username, password) {\n      console.warn('createIceServers is deprecated. It should be replaced with an application level implementation.');\n\n      var iceServers = [];\n      for (i = 0; i < urls.length; i++) {\n        var iceServer = createIceServer(urls[i], username, password);\n        if (iceServer !== null) {\n          iceServers.push(iceServer);\n        }\n      }\n      return iceServers;\n    };\n  } else if ( navigator.webkitGetUserMedia ) {\n    // Attach a media stream to an element.\n    attachMediaStream = function(element, stream) {\n      if (webrtcDetectedVersion >= 43) {\n        element.srcObject = stream;\n      } else if (typeof element.src !== 'undefined') {\n        element.src = URL.createObjectURL(stream);\n      } else {\n        console.error('Error attaching stream to element.');\n        // logging('Error attaching stream to element.');\n      }\n      return element;\n    };\n\n    reattachMediaStream = function(to, from) {\n      if (webrtcDetectedVersion >= 43) {\n        to.srcObject = from.srcObject;\n      } else {\n        to.src = from.src;\n      }\n      return to;\n    };\n\n    createIceServer = function (url, username, password) {\n      console.warn('createIceServer is deprecated. It should be replaced with an application level implementation.');\n\n      var iceServer = null;\n      var urlParts = url.split(':');\n      if (urlParts[0].indexOf('stun') === 0) {\n        iceServer = { 'url' : url };\n      } else if (urlParts[0].indexOf('turn') === 0) {\n        iceServer = {\n          'url' : url,\n          'credential' : password,\n          'username' : username\n        };\n      }\n      return iceServer;\n    };\n\n    createIceServers = function (urls, username, password) {\n      console.warn('createIceServers is deprecated. It should be replaced with an application level implementation.');\n\n      var iceServers = [];\n      if (webrtcDetectedVersion >= 34) {\n        iceServers = {\n          'urls' : urls,\n          'credential' : password,\n          'username' : username\n        };\n      } else {\n        for (i = 0; i < urls.length; i++) {\n          var iceServer = createIceServer(urls[i], username, password);\n          if (iceServer !== null) {\n            iceServers.push(iceServer);\n          }\n        }\n      }\n      return iceServers;\n    };\n  } else if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n    // Attach a media stream to an element.\n    attachMediaStream = function(element, stream) {\n      element.srcObject = stream;\n      return element;\n    };\n\n    reattachMediaStream = function(to, from) {\n      to.srcObject = from.srcObject;\n      return to;\n    };\n  }\n\n  // Need to override attachMediaStream and reattachMediaStream\n  // to support the plugin's logic\n  attachMediaStream_base = attachMediaStream;\n\n  if (webrtcDetectedBrowser === 'opera') {\n    attachMediaStream_base = function (element, stream) {\n      if (webrtcDetectedVersion > 38) {\n        element.srcObject = stream;\n      } else if (typeof element.src !== 'undefined') {\n        element.src = URL.createObjectURL(stream);\n      }\n      // Else it doesn't work\n    };\n  }\n\n  attachMediaStream = function (element, stream) {\n    if ((webrtcDetectedBrowser === 'chrome' ||\n         webrtcDetectedBrowser === 'opera') &&\n        !stream) {\n      // Chrome does not support \"src = null\"\n      element.src = '';\n    } else {\n      attachMediaStream_base(element, stream);\n    }\n    return element;\n  };\n  reattachMediaStream_base = reattachMediaStream;\n  reattachMediaStream = function (to, from) {\n    reattachMediaStream_base(to, from);\n    return to;\n  };\n\n  // Propagate attachMediaStream and gUM in window and AdapterJS\n  window.attachMediaStream      = attachMediaStream;\n  window.reattachMediaStream    = reattachMediaStream;\n  window.getUserMedia           = function(constraints, onSuccess, onFailure) {\n    navigator.getUserMedia(constraints, onSuccess, onFailure);\n  };\n  AdapterJS.attachMediaStream   = attachMediaStream;\n  AdapterJS.reattachMediaStream = reattachMediaStream;\n  AdapterJS.getUserMedia        = getUserMedia;\n\n  // Removed Google defined promises when promise is not defined\n  if (typeof Promise === 'undefined') {\n    requestUserMedia = null;\n  }\n\n  AdapterJS.maybeThroughWebRTCReady();\n\n  // END OF EXTENSION OF CHROME, FIREFOX AND EDGE\n  ///////////////////////////////////////////////////////////////////\n\n} else { // TRY TO USE PLUGIN\n\n  ///////////////////////////////////////////////////////////////////\n  // WEBRTC PLUGIN SHIM\n  // Will automatically check if the plugin is available and inject it\n  // into the DOM if it is.\n  // When the plugin is not available, will prompt a banner to suggest installing it\n  // Use AdapterJS.options.hidePluginInstallPrompt to prevent this banner from popping\n  //\n  // Shims the follwing:\n  // -- getUserMedia\n  // -- MediaStreamTrack\n  // -- MediaStreamTrack.getSources\n  // -- RTCPeerConnection\n  // -- RTCSessionDescription\n  // -- RTCIceCandidate\n  // -- createIceServer\n  // -- createIceServers\n  // -- attachMediaStream\n  // -- reattachMediaStream\n  // -- webrtcDetectedBrowser\n  // -- webrtcDetectedVersion\n\n  // IE 9 is not offering an implementation of console.log until you open a console\n  if (typeof console !== 'object' || typeof console.log !== 'function') {\n    /* jshint -W020 */\n    console = {} || console;\n    // Implemented based on console specs from MDN\n    // You may override these functions\n    console.log = function (arg) {};\n    console.info = function (arg) {};\n    console.error = function (arg) {};\n    console.dir = function (arg) {};\n    console.exception = function (arg) {};\n    console.trace = function (arg) {};\n    console.warn = function (arg) {};\n    console.count = function (arg) {};\n    console.debug = function (arg) {};\n    console.count = function (arg) {};\n    console.time = function (arg) {};\n    console.timeEnd = function (arg) {};\n    console.group = function (arg) {};\n    console.groupCollapsed = function (arg) {};\n    console.groupEnd = function (arg) {};\n    /* jshint +W020 */\n  }\n  AdapterJS.parseWebrtcDetectedBrowser();\n  isIE = webrtcDetectedBrowser === 'IE';\n\n  /* jshint -W035 */\n  AdapterJS.WebRTCPlugin.WaitForPluginReady = function() {\n    while (AdapterJS.WebRTCPlugin.pluginState !== AdapterJS.WebRTCPlugin.PLUGIN_STATES.READY) {\n      /* empty because it needs to prevent the function from running. */\n    }\n  };\n  /* jshint +W035 */\n\n  AdapterJS.WebRTCPlugin.callWhenPluginReady = function (callback) {\n    if (AdapterJS.WebRTCPlugin.pluginState === AdapterJS.WebRTCPlugin.PLUGIN_STATES.READY) {\n      // Call immediately if possible\n      // Once the plugin is set, the code will always take this path\n      callback();\n    } else {\n      // otherwise start a 100ms interval\n      var checkPluginReadyState = setInterval(function () {\n        if (AdapterJS.WebRTCPlugin.pluginState === AdapterJS.WebRTCPlugin.PLUGIN_STATES.READY) {\n          clearInterval(checkPluginReadyState);\n          callback();\n        }\n      }, 100);\n    }\n  };\n\n  AdapterJS.WebRTCPlugin.setLogLevel = function(logLevel) {\n    AdapterJS.WebRTCPlugin.callWhenPluginReady(function() {\n      AdapterJS.WebRTCPlugin.plugin.setLogLevel(logLevel);\n    });\n  };\n\n  AdapterJS.WebRTCPlugin.injectPlugin = function () {\n    // only inject once the page is ready\n    if (document.readyState !== 'complete') {\n      return;\n    }\n\n    // Prevent multiple injections\n    if (AdapterJS.WebRTCPlugin.pluginState !== AdapterJS.WebRTCPlugin.PLUGIN_STATES.INITIALIZING) {\n      return;\n    }\n\n    AdapterJS.WebRTCPlugin.pluginState = AdapterJS.WebRTCPlugin.PLUGIN_STATES.INJECTING;\n\n    if (webrtcDetectedBrowser === 'IE' && webrtcDetectedVersion <= 10) {\n      var frag = document.createDocumentFragment();\n      AdapterJS.WebRTCPlugin.plugin = document.createElement('div');\n      AdapterJS.WebRTCPlugin.plugin.innerHTML = '<object id=\"' +\n        AdapterJS.WebRTCPlugin.pluginInfo.pluginId + '\" type=\"' +\n        AdapterJS.WebRTCPlugin.pluginInfo.type + '\" ' + 'width=\"1\" height=\"1\">' +\n        '<param name=\"pluginId\" value=\"' +\n        AdapterJS.WebRTCPlugin.pluginInfo.pluginId + '\" /> ' +\n        '<param name=\"windowless\" value=\"false\" /> ' +\n        '<param name=\"pageId\" value=\"' + AdapterJS.WebRTCPlugin.pageId + '\" /> ' +\n        '<param name=\"onload\" value=\"' + AdapterJS.WebRTCPlugin.pluginInfo.onload + '\" />' +\n        '<param name=\"tag\" value=\"' + AdapterJS.WebRTCPlugin.TAGS.NONE + '\" />' +\n        // uncomment to be able to use virtual cams\n        (AdapterJS.options.getAllCams ? '<param name=\"forceGetAllCams\" value=\"True\" />':'') +\n\n        '</object>';\n      while (AdapterJS.WebRTCPlugin.plugin.firstChild) {\n        frag.appendChild(AdapterJS.WebRTCPlugin.plugin.firstChild);\n      }\n      document.body.appendChild(frag);\n\n      // Need to re-fetch the plugin\n      AdapterJS.WebRTCPlugin.plugin =\n        document.getElementById(AdapterJS.WebRTCPlugin.pluginInfo.pluginId);\n    } else {\n      // Load Plugin\n      AdapterJS.WebRTCPlugin.plugin = document.createElement('object');\n      AdapterJS.WebRTCPlugin.plugin.id =\n        AdapterJS.WebRTCPlugin.pluginInfo.pluginId;\n      // IE will only start the plugin if it's ACTUALLY visible\n      if (isIE) {\n        AdapterJS.WebRTCPlugin.plugin.width = '1px';\n        AdapterJS.WebRTCPlugin.plugin.height = '1px';\n      } else { // The size of the plugin on Safari should be 0x0px\n              // so that the autorisation prompt is at the top\n        AdapterJS.WebRTCPlugin.plugin.width = '0px';\n        AdapterJS.WebRTCPlugin.plugin.height = '0px';\n      }\n      AdapterJS.WebRTCPlugin.plugin.type = AdapterJS.WebRTCPlugin.pluginInfo.type;\n      AdapterJS.WebRTCPlugin.plugin.innerHTML = '<param name=\"onload\" value=\"' +\n        AdapterJS.WebRTCPlugin.pluginInfo.onload + '\">' +\n        '<param name=\"pluginId\" value=\"' +\n        AdapterJS.WebRTCPlugin.pluginInfo.pluginId + '\">' +\n        '<param name=\"windowless\" value=\"false\" /> ' +\n        (AdapterJS.options.getAllCams ? '<param name=\"forceGetAllCams\" value=\"True\" />':'') +\n        '<param name=\"pageId\" value=\"' + AdapterJS.WebRTCPlugin.pageId + '\">' +\n        '<param name=\"tag\" value=\"' + AdapterJS.WebRTCPlugin.TAGS.NONE + '\" />';\n      document.body.appendChild(AdapterJS.WebRTCPlugin.plugin);\n    }\n\n\n    AdapterJS.WebRTCPlugin.pluginState = AdapterJS.WebRTCPlugin.PLUGIN_STATES.INJECTED;\n  };\n\n  AdapterJS.WebRTCPlugin.isPluginInstalled =\n    function (comName, plugName, plugType, installedCb, notInstalledCb) {\n    if (!isIE) {\n      var pluginArray = navigator.mimeTypes;\n      for (var i = 0; i < pluginArray.length; i++) {\n        if (pluginArray[i].type.indexOf(plugType) >= 0) {\n          installedCb();\n          return;\n        }\n      }\n      notInstalledCb();\n    } else {\n      try {\n        var axo = new ActiveXObject(comName + '.' + plugName);\n      } catch (e) {\n        notInstalledCb();\n        return;\n      }\n      installedCb();\n    }\n  };\n\n  AdapterJS.WebRTCPlugin.defineWebRTCInterface = function () {\n    if (AdapterJS.WebRTCPlugin.pluginState ===\n        AdapterJS.WebRTCPlugin.PLUGIN_STATES.READY) {\n      console.error('AdapterJS - WebRTC interface has already been defined');\n      return;\n    }\n\n    AdapterJS.WebRTCPlugin.pluginState = AdapterJS.WebRTCPlugin.PLUGIN_STATES.INITIALIZING;\n\n    AdapterJS.isDefined = function (variable) {\n      return variable !== null && variable !== undefined;\n    };\n\n    createIceServer = function (url, username, password) {\n      var iceServer = null;\n      var urlParts = url.split(':');\n      if (urlParts[0].indexOf('stun') === 0) {\n        iceServer = {\n          'url' : url,\n          'hasCredentials' : false\n        };\n      } else if (urlParts[0].indexOf('turn') === 0) {\n        iceServer = {\n          'url' : url,\n          'hasCredentials' : true,\n          'credential' : password,\n          'username' : username\n        };\n      }\n      return iceServer;\n    };\n\n    createIceServers = function (urls, username, password) {\n      var iceServers = [];\n      for (var i = 0; i < urls.length; ++i) {\n        iceServers.push(createIceServer(urls[i], username, password));\n      }\n      return iceServers;\n    };\n\n    RTCSessionDescription = function (info) {\n      AdapterJS.WebRTCPlugin.WaitForPluginReady();\n      return AdapterJS.WebRTCPlugin.plugin.\n        ConstructSessionDescription(info.type, info.sdp);\n    };\n\n    RTCPeerConnection = function (servers, constraints) {\n      // Validate server argumenr\n      if (!(servers === undefined ||\n            servers === null ||\n            Array.isArray(servers.iceServers))) {\n        throw new Error('Failed to construct \\'RTCPeerConnection\\': Malformed RTCConfiguration');\n      }\n\n      // Validate constraints argument\n      if (typeof constraints !== 'undefined' && constraints !== null) {\n        var invalidConstraits = false;\n        invalidConstraits |= typeof constraints !== 'object';\n        invalidConstraits |= constraints.hasOwnProperty('mandatory') &&\n                              constraints.mandatory !== undefined &&\n                              constraints.mandatory !== null &&\n                              constraints.mandatory.constructor !== Object;\n        invalidConstraits |= constraints.hasOwnProperty('optional') &&\n                              constraints.optional !== undefined &&\n                              constraints.optional !== null &&\n                              !Array.isArray(constraints.optional);\n        if (invalidConstraits) {\n          throw new Error('Failed to construct \\'RTCPeerConnection\\': Malformed constraints object');\n        }\n      }\n\n      // Call relevant PeerConnection constructor according to plugin version\n      AdapterJS.WebRTCPlugin.WaitForPluginReady();\n\n      // RTCPeerConnection prototype from the old spec\n      var iceServers = null;\n      if (servers && Array.isArray(servers.iceServers)) {\n        iceServers = servers.iceServers;\n        for (var i = 0; i < iceServers.length; i++) {\n          // Legacy plugin versions compatibility\n          if (iceServers[i].urls && !iceServers[i].url) {\n            iceServers[i].url = iceServers[i].urls;\n          }\n          iceServers[i].hasCredentials = AdapterJS.\n            isDefined(iceServers[i].username) &&\n            AdapterJS.isDefined(iceServers[i].credential);\n        }\n      }\n\n      if (AdapterJS.WebRTCPlugin.plugin.PEER_CONNECTION_VERSION &&\n          AdapterJS.WebRTCPlugin.plugin.PEER_CONNECTION_VERSION > 1) {\n        // RTCPeerConnection prototype from the new spec\n        if (iceServers) {\n          servers.iceServers = iceServers;\n        }\n        return AdapterJS.WebRTCPlugin.plugin.PeerConnection(servers);\n      } else {\n        var mandatory = (constraints && constraints.mandatory) ?\n          constraints.mandatory : null;\n        var optional = (constraints && constraints.optional) ?\n          constraints.optional : null;\n        return AdapterJS.WebRTCPlugin.plugin.\n          PeerConnection(AdapterJS.WebRTCPlugin.pageId,\n          iceServers, mandatory, optional);\n      }\n    };\n\n    MediaStreamTrack = function(){};\n    MediaStreamTrack.getSources = function (callback) {\n      AdapterJS.WebRTCPlugin.callWhenPluginReady(function() {\n        AdapterJS.WebRTCPlugin.plugin.GetSources(callback);\n      });\n    };\n\n    // getUserMedia constraints shim.\n    // Copied from Chrome\n    var constraintsToPlugin = function(c) {\n      if (typeof c !== 'object' || c.mandatory || c.optional) {\n        return c;\n      }\n      var cc = {};\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n        if (r.exact !== undefined && typeof r.exact === 'number') {\n          r.min = r.max = r.exact;\n        }\n        var oldname = function(prefix, name) {\n          if (prefix) {\n            return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n          }\n          return (name === 'deviceId') ? 'sourceId' : name;\n        };\n        if (r.ideal !== undefined) {\n          cc.optional = cc.optional || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[oldname('min', key)] = r.ideal;\n            cc.optional.push(oc);\n            oc = {};\n            oc[oldname('max', key)] = r.ideal;\n            cc.optional.push(oc);\n          } else {\n            oc[oldname('', key)] = r.ideal;\n            cc.optional.push(oc);\n          }\n        }\n        if (r.exact !== undefined && typeof r.exact !== 'number') {\n          cc.mandatory = cc.mandatory || {};\n          cc.mandatory[oldname('', key)] = r.exact;\n        } else {\n          ['min', 'max'].forEach(function(mix) {\n            if (r[mix] !== undefined) {\n              cc.mandatory = cc.mandatory || {};\n              cc.mandatory[oldname(mix, key)] = r[mix];\n            }\n          });\n        }\n      });\n      if (c.advanced) {\n        cc.optional = (cc.optional || []).concat(c.advanced);\n      }\n      return cc;\n    };\n\n    getUserMedia = function (constraints, successCallback, failureCallback) {\n      var cc = {};\n      cc.audio = constraints.audio ?\n        constraintsToPlugin(constraints.audio) : false;\n      cc.video = constraints.video ?\n        constraintsToPlugin(constraints.video) : false;\n\n      AdapterJS.WebRTCPlugin.callWhenPluginReady(function() {\n        AdapterJS.WebRTCPlugin.plugin.\n          getUserMedia(cc, successCallback, failureCallback);\n      });\n    };\n    window.navigator.getUserMedia = getUserMedia;\n\n    // Defined mediaDevices when promises are available\n    if ( !navigator.mediaDevices &&\n      typeof Promise !== 'undefined') {\n      requestUserMedia = function(constraints) {\n        return new Promise(function(resolve, reject) {\n          getUserMedia(constraints, resolve, reject);\n        });\n      };\n      navigator.mediaDevices = {getUserMedia: requestUserMedia,\n                                enumerateDevices: function() {\n        return new Promise(function(resolve) {\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\n          return MediaStreamTrack.getSources(function(devices) {\n            resolve(devices.map(function(device) {\n              return {label: device.label,\n                      kind: kinds[device.kind],\n                      id: device.id,\n                      deviceId: device.id,\n                      groupId: ''};\n            }));\n          });\n        });\n      }};\n    }\n\n    attachMediaStream = function (element, stream) {\n      if (!element || !element.parentNode) {\n        return;\n      }\n\n      var streamId;\n      if (stream === null) {\n        streamId = '';\n      } else {\n        if (typeof stream.enableSoundTracks !== 'undefined') {\n          stream.enableSoundTracks(true);\n        }\n        streamId = stream.id;\n      }\n\n      var elementId = element.id.length === 0 ? Math.random().toString(36).slice(2) : element.id;\n      var nodeName = element.nodeName.toLowerCase();\n      if (nodeName !== 'object') { // not a plugin <object> tag yet\n        var tag;\n        switch(nodeName) {\n          case 'audio':\n            tag = AdapterJS.WebRTCPlugin.TAGS.AUDIO;\n            break;\n          case 'video':\n            tag = AdapterJS.WebRTCPlugin.TAGS.VIDEO;\n            break;\n          default:\n            tag = AdapterJS.WebRTCPlugin.TAGS.NONE;\n          }\n\n        var frag = document.createDocumentFragment();\n        var temp = document.createElement('div');\n        var classHTML = '';\n        if (element.className) {\n          classHTML = 'class=\"' + element.className + '\" ';\n        } else if (element.attributes && element.attributes['class']) {\n          classHTML = 'class=\"' + element.attributes['class'].value + '\" ';\n        }\n\n        temp.innerHTML = '<object id=\"' + elementId + '\" ' + classHTML +\n          'type=\"' + AdapterJS.WebRTCPlugin.pluginInfo.type + '\">' +\n          '<param name=\"pluginId\" value=\"' + elementId + '\" /> ' +\n          '<param name=\"pageId\" value=\"' + AdapterJS.WebRTCPlugin.pageId + '\" /> ' +\n          '<param name=\"windowless\" value=\"true\" /> ' +\n          '<param name=\"streamId\" value=\"' + streamId + '\" /> ' +\n          '<param name=\"tag\" value=\"' + tag + '\" /> ' +\n          '</object>';\n        while (temp.firstChild) {\n          frag.appendChild(temp.firstChild);\n        }\n\n        var height = '';\n        var width = '';\n        if (element.clientWidth || element.clientHeight) {\n          width = element.clientWidth;\n          height = element.clientHeight;\n        }\n        else if (element.width || element.height) {\n          width = element.width;\n          height = element.height;\n        }\n\n        element.parentNode.insertBefore(frag, element);\n        frag = document.getElementById(elementId);\n        frag.width = width;\n        frag.height = height;\n        element.parentNode.removeChild(element);\n      } else { // already an <object> tag, just change the stream id\n        var children = element.children;\n        for (var i = 0; i !== children.length; ++i) {\n          if (children[i].name === 'streamId') {\n            children[i].value = streamId;\n            break;\n          }\n        }\n        element.setStreamId(streamId);\n      }\n      var newElement = document.getElementById(elementId);\n      AdapterJS.forwardEventHandlers(newElement, element, Object.getPrototypeOf(element));\n\n      return newElement;\n    };\n\n    reattachMediaStream = function (to, from) {\n      var stream = null;\n      var children = from.children;\n      for (var i = 0; i !== children.length; ++i) {\n        if (children[i].name === 'streamId') {\n          AdapterJS.WebRTCPlugin.WaitForPluginReady();\n          stream = AdapterJS.WebRTCPlugin.plugin\n            .getStreamWithId(AdapterJS.WebRTCPlugin.pageId, children[i].value);\n          break;\n        }\n      }\n      if (stream !== null) {\n        return attachMediaStream(to, stream);\n      } else {\n        console.log('Could not find the stream associated with this element');\n      }\n    };\n\n    // Propagate attachMediaStream and gUM in window and AdapterJS\n    window.attachMediaStream      = attachMediaStream;\n    window.reattachMediaStream    = reattachMediaStream;\n    window.getUserMedia           = getUserMedia;\n    AdapterJS.attachMediaStream   = attachMediaStream;\n    AdapterJS.reattachMediaStream = reattachMediaStream;\n    AdapterJS.getUserMedia        = getUserMedia;\n\n    AdapterJS.forwardEventHandlers = function (destElem, srcElem, prototype) {\n      properties = Object.getOwnPropertyNames( prototype );\n      for(var prop in properties) {\n        if (prop) {\n          propName = properties[prop];\n\n          if (typeof propName.slice === 'function' &&\n              propName.slice(0,2) === 'on' &&\n              typeof srcElem[propName] === 'function') {\n              AdapterJS.addEvent(destElem, propName.slice(2), srcElem[propName]);\n          }\n        }\n      }\n      var subPrototype = Object.getPrototypeOf(prototype);\n      if(!!subPrototype) {\n        AdapterJS.forwardEventHandlers(destElem, srcElem, subPrototype);\n      }\n    };\n\n    RTCIceCandidate = function (candidate) {\n      if (!candidate.sdpMid) {\n        candidate.sdpMid = '';\n      }\n\n      AdapterJS.WebRTCPlugin.WaitForPluginReady();\n      return AdapterJS.WebRTCPlugin.plugin.ConstructIceCandidate(\n        candidate.sdpMid, candidate.sdpMLineIndex, candidate.candidate\n      );\n    };\n\n    // inject plugin\n    AdapterJS.addEvent(document, 'readystatechange', AdapterJS.WebRTCPlugin.injectPlugin);\n    AdapterJS.WebRTCPlugin.injectPlugin();\n  };\n\n  // This function will be called if the plugin is needed (browser different\n  // from Chrome or Firefox), but the plugin is not installed.\n  AdapterJS.WebRTCPlugin.pluginNeededButNotInstalledCb = AdapterJS.WebRTCPlugin.pluginNeededButNotInstalledCb ||\n    function() {\n      AdapterJS.addEvent(document,\n                        'readystatechange',\n                         AdapterJS.WebRTCPlugin.pluginNeededButNotInstalledCbPriv);\n      AdapterJS.WebRTCPlugin.pluginNeededButNotInstalledCbPriv();\n    };\n\n  AdapterJS.WebRTCPlugin.pluginNeededButNotInstalledCbPriv = function () {\n    if (AdapterJS.options.hidePluginInstallPrompt) {\n      return;\n    }\n\n    var downloadLink = AdapterJS.WebRTCPlugin.pluginInfo.downloadLink;\n    if(downloadLink) { // if download link\n      var popupString;\n      if (AdapterJS.WebRTCPlugin.pluginInfo.portalLink) { // is portal link\n       popupString = 'This website requires you to install the ' +\n        ' <a href=\"' + AdapterJS.WebRTCPlugin.pluginInfo.portalLink +\n        '\" target=\"_blank\">' + AdapterJS.WebRTCPlugin.pluginInfo.companyName +\n        ' WebRTC Plugin</a>' +\n        ' to work on this browser.';\n      } else { // no portal link, just print a generic explanation\n       popupString = AdapterJS.TEXT.PLUGIN.REQUIRE_INSTALLATION;\n      }\n\n      AdapterJS.renderNotificationBar(popupString, AdapterJS.TEXT.PLUGIN.BUTTON, downloadLink);\n    } else { // no download link, just print a generic explanation\n      AdapterJS.renderNotificationBar(AdapterJS.TEXT.PLUGIN.NOT_SUPPORTED);\n    }\n  };\n\n\n  // Try to detect the plugin and act accordingly\n  AdapterJS.WebRTCPlugin.isPluginInstalled(\n    AdapterJS.WebRTCPlugin.pluginInfo.prefix,\n    AdapterJS.WebRTCPlugin.pluginInfo.plugName,\n    AdapterJS.WebRTCPlugin.pluginInfo.type,\n    AdapterJS.WebRTCPlugin.defineWebRTCInterface,\n    AdapterJS.WebRTCPlugin.pluginNeededButNotInstalledCb);\n\n  // END OF WEBRTC PLUGIN SHIM\n  ///////////////////////////////////////////////////////////////////\n}\n\n(function () {\n\n  'use strict';\n\n  var baseGetUserMedia = null;\n\n  AdapterJS.TEXT.EXTENSION = {\n    REQUIRE_INSTALLATION_FF: 'To enable screensharing you need to install the Skylink WebRTC tools Firefox Add-on.',\n    REQUIRE_INSTALLATION_CHROME: 'To enable screensharing you need to install the Skylink WebRTC tools Chrome Extension.',\n    REQUIRE_REFRESH: 'Please refresh this page after the Skylink WebRTC tools extension has been installed.',\n    BUTTON_FF: 'Install Now',\n    BUTTON_CHROME: 'Go to Chrome Web Store'\n  };\n\n  var clone = function(obj) {\n    if (null === obj || 'object' !== typeof obj) {\n      return obj;\n    }\n    var copy = obj.constructor();\n    for (var attr in obj) {\n      if (obj.hasOwnProperty(attr)) {\n        copy[attr] = obj[attr];\n      }\n    }\n    return copy;\n  };\n\n  if (window.navigator.mozGetUserMedia) {\n    baseGetUserMedia = window.navigator.getUserMedia;\n\n    navigator.getUserMedia = function (constraints, successCb, failureCb) {\n\n      if (constraints && constraints.video && !!constraints.video.mediaSource) {\n        // intercepting screensharing requests\n\n        // Invalid mediaSource for firefox, only \"screen\" and \"window\" are supported\n        if (constraints.video.mediaSource !== 'screen' && constraints.video.mediaSource !== 'window') {\n          failureCb(new Error('GetUserMedia: Only \"screen\" and \"window\" are supported as mediaSource constraints'));\n          return;\n        }\n\n        var updatedConstraints = clone(constraints);\n\n        //constraints.video.mediaSource = constraints.video.mediaSource;\n        updatedConstraints.video.mozMediaSource = updatedConstraints.video.mediaSource;\n\n        // so generally, it requires for document.readyState to be completed before the getUserMedia could be invoked.\n        // strange but this works anyway\n        var checkIfReady = setInterval(function () {\n          if (document.readyState === 'complete') {\n            clearInterval(checkIfReady);\n\n            baseGetUserMedia(updatedConstraints, successCb, function (error) {\n              if (['PermissionDeniedError', 'SecurityError'].indexOf(error.name) > -1 && window.parent.location.protocol === 'https:') {\n                AdapterJS.renderNotificationBar(AdapterJS.TEXT.EXTENSION.REQUIRE_INSTALLATION_FF,\n                  AdapterJS.TEXT.EXTENSION.BUTTON_FF,\n                  'https://addons.mozilla.org/en-US/firefox/addon/skylink-webrtc-tools/', true, true);\n              } else {\n                failureCb(error);\n              }\n            });\n          }\n        }, 1);\n\n      } else { // regular GetUserMediaRequest\n        baseGetUserMedia(constraints, successCb, failureCb);\n      }\n    };\n\n    AdapterJS.getUserMedia = window.getUserMedia = navigator.getUserMedia;\n    /* Comment out to prevent recursive errors\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return new Promise(function(resolve, reject) {\n        window.getUserMedia(constraints, resolve, reject);\n      });\n    };*/\n\n  } else if (window.navigator.webkitGetUserMedia && window.webrtcDetectedBrowser !== 'safari') {\n    baseGetUserMedia = window.navigator.getUserMedia;\n\n    navigator.getUserMedia = function (constraints, successCb, failureCb) {\n      if (constraints && constraints.video && !!constraints.video.mediaSource) {\n        if (window.webrtcDetectedBrowser !== 'chrome') {\n          // This is Opera, which does not support screensharing\n          failureCb(new Error('Current browser does not support screensharing'));\n          return;\n        }\n\n        // would be fine since no methods\n        var updatedConstraints = clone(constraints);\n\n        var chromeCallback = function(error, sourceId) {\n          if(!error) {\n            updatedConstraints.video.mandatory = updatedConstraints.video.mandatory || {};\n            updatedConstraints.video.mandatory.chromeMediaSource = 'desktop';\n            updatedConstraints.video.mandatory.maxWidth = window.screen.width > 1920 ? window.screen.width : 1920;\n            updatedConstraints.video.mandatory.maxHeight = window.screen.height > 1080 ? window.screen.height : 1080;\n\n            if (sourceId) {\n              updatedConstraints.video.mandatory.chromeMediaSourceId = sourceId;\n            }\n\n            delete updatedConstraints.video.mediaSource;\n\n            baseGetUserMedia(updatedConstraints, successCb, failureCb);\n\n          } else { // GUM failed\n            if (error === 'permission-denied') {\n              failureCb(new Error('Permission denied for screen retrieval'));\n            } else {\n              // NOTE(J-O): I don't think we ever pass in here.\n              // A failure to capture the screen does not lead here.\n              failureCb(new Error('Failed retrieving selected screen'));\n            }\n          }\n        };\n\n        var onIFrameCallback = function (event) {\n          if (!event.data) {\n            return;\n          }\n\n          if (event.data.chromeMediaSourceId) {\n            if (event.data.chromeMediaSourceId === 'PermissionDeniedError') {\n                chromeCallback('permission-denied');\n            } else {\n              chromeCallback(null, event.data.chromeMediaSourceId);\n            }\n          }\n\n          if (event.data.chromeExtensionStatus) {\n            if (event.data.chromeExtensionStatus === 'not-installed') {\n              AdapterJS.renderNotificationBar(AdapterJS.TEXT.EXTENSION.REQUIRE_INSTALLATION_CHROME,\n                AdapterJS.TEXT.EXTENSION.BUTTON_CHROME,\n                event.data.data, true, true);\n            } else {\n              chromeCallback(event.data.chromeExtensionStatus, null);\n            }\n          }\n\n          // this event listener is no more needed\n          window.removeEventListener('message', onIFrameCallback);\n        };\n\n        window.addEventListener('message', onIFrameCallback);\n\n        postFrameMessage({\n          captureSourceId: true\n        });\n\n      } else {\n        baseGetUserMedia(constraints, successCb, failureCb);\n      }\n    };\n\n    AdapterJS.getUserMedia = window.getUserMedia = navigator.getUserMedia;\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return new Promise(function(resolve, reject) {\n        window.getUserMedia(constraints, resolve, reject);\n      });\n    };\n\n  } else if (navigator.mediaDevices && navigator.userAgent.match(/Edge\\/(\\d+).(\\d+)$/)) {\n    // nothing here because edge does not support screensharing\n    console.warn('Edge does not support screensharing feature in getUserMedia');\n\n  } else {\n    baseGetUserMedia = window.navigator.getUserMedia;\n\n    navigator.getUserMedia = function (constraints, successCb, failureCb) {\n      if (constraints && constraints.video && !!constraints.video.mediaSource) {\n        // would be fine since no methods\n        var updatedConstraints = clone(constraints);\n\n        // wait for plugin to be ready\n        AdapterJS.WebRTCPlugin.callWhenPluginReady(function() {\n          // check if screensharing feature is available\n          if (!!AdapterJS.WebRTCPlugin.plugin.HasScreensharingFeature &&\n            !!AdapterJS.WebRTCPlugin.plugin.isScreensharingAvailable) {\n            // set the constraints\n            updatedConstraints.video.optional = updatedConstraints.video.optional || [];\n            updatedConstraints.video.optional.push({\n              sourceId: AdapterJS.WebRTCPlugin.plugin.screensharingKey || 'Screensharing'\n            });\n\n            delete updatedConstraints.video.mediaSource;\n          } else {\n            failureCb(new Error('Your version of the WebRTC plugin does not support screensharing'));\n            return;\n          }\n          baseGetUserMedia(updatedConstraints, successCb, failureCb);\n        });\n      } else {\n        baseGetUserMedia(constraints, successCb, failureCb);\n      }\n    };\n\n    AdapterJS.getUserMedia = getUserMedia =\n       window.getUserMedia = navigator.getUserMedia;\n    if ( navigator.mediaDevices &&\n      typeof Promise !== 'undefined') {\n      navigator.mediaDevices.getUserMedia = typeof requestUserMedia === 'undefined' ? undefined : requestUserMedia;\n    }\n  }\n\n  // For chrome, use an iframe to load the screensharing extension\n  // in the correct domain.\n  // Modify here for custom screensharing extension in chrome\n  if (window.webrtcDetectedBrowser === 'chrome') {\n    var iframe = document.createElement('iframe');\n\n    iframe.onload = function() {\n      iframe.isLoaded = true;\n    };\n\n    iframe.src = 'https://cdn.temasys.com.sg/skylink/extensions/detectRTC.html';\n    iframe.style.display = 'none';\n\n    (document.body || document.documentElement).appendChild(iframe);\n\n    var postFrameMessage = function (object) { // jshint ignore:line\n      object = object || {};\n\n      if (!iframe.isLoaded) {\n        setTimeout(function () {\n          iframe.contentWindow.postMessage(object, '*');\n        }, 100);\n        return;\n      }\n\n      iframe.contentWindow.postMessage(object, '*');\n    };\n  } else if (window.webrtcDetectedBrowser === 'opera') {\n    console.warn('Opera does not support screensharing feature in getUserMedia');\n  }\n})();\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./modules/RTC/adapter.screenshare.js\n// module id = 37\n// module chunks = 0","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * Ordered log levels.\n */\nvar levels = {\n    \"trace\": 0,\n    \"debug\": 1,\n    \"info\": 2,\n    \"log\": 3,\n    \"warn\": 4,\n    \"error\": 5\n};\n\n/**\n * The default transport - console\n * @type LoggerTransport\n */\nLogger.consoleTransport = console;\n\n/**\n * The array which stores currently registered global transports.\n * @type {[LoggerTransport]}\n */\nvar globalTransports = [ Logger.consoleTransport ];\n\n/**\n * Adds given {@link LoggerTransport} instance to the list of global\n * transports which means that it'll be used by all {@link Logger}s\n * @param {LoggerTransport} transport\n */\nLogger.addGlobalTransport = function(transport) {\n    if (globalTransports.indexOf(transport) === -1) {\n        globalTransports.push(transport);\n    }\n};\n\n/**\n * Removes given {@link LoggerTransport} instance from the list of global\n * transports\n * @param {LoggerTransport} transport\n */\nLogger.removeGlobalTransport = function(transport) {\n    var transportIdx = globalTransports.indexOf(transport);\n    if (transportIdx !== -1) {\n        globalTransports.splice(transportIdx, 1);\n    }\n};\n\n/**\n * Parses Error's object stack trace and extracts information about the last\n * caller before the log method was called.\n * @returns JS object with info about the caller - method name, file location,\n * line and column.\n */\nfunction getCallerInfo() {\n    var callerInfo = {\n        methodName: \"\",\n        fileLocation: \"\",\n        line: null,\n        column: null\n    };\n    //gets the part of the stack without the logger wrappers\n    var error = new Error();\n    var stack = error.stack? error.stack.split(\"\\n\") : [];\n    if(!stack || stack.length < 1) {\n        return callerInfo;\n    }\n    var m = null;\n    if(stack[3]) {\n        m = stack[3].match(/\\s*at\\s*(.+?)\\s*\\((\\S*)\\s*:(\\d*)\\s*:(\\d*)\\)/);\n    }\n    if(!m || m.length <= 4) {\n        //Firefox && Safari\n        if(stack[2].indexOf(\"log@\") === 0){\n            //Safari\n            callerInfo.methodName = stack[3].substr(0, stack[3].indexOf(\"@\"));\n        } else {\n            //Firefox\n            callerInfo.methodName = stack[2].substr(0, stack[2].indexOf(\"@\"));\n        }\n        return callerInfo;\n    }\n\n    callerInfo.methodName = m[1];\n    callerInfo.fileLocation = m[2];\n    callerInfo.line = m[3];\n    callerInfo.column = m[4];\n    return callerInfo;\n}\n\n/**\n * Logs messages using the transports and level from the logger.\n * @param logger a logger instance.\n * @param level the log level of the message. See the levels variable.\n * @param arguments array with arguments that will be logged.\n */\nfunction log() {\n    var logger = arguments[0], level = arguments[1],\n        args = Array.prototype.slice.call(arguments, 2);\n    if(levels[level] < logger.level) {\n        return;\n    }\n\n    var callerInfo = getCallerInfo();\n    var transports = globalTransports.concat(logger.transports);\n    for(var i = 0; i < transports.length; i++) {\n        var t = transports[i];\n        var l = t[level];\n        if(l && typeof(l) === \"function\") {\n            l.bind(t, logger.id? \"[\" + logger.id + \"]\" : \"\", \"<\" + callerInfo.methodName + \">: \")\n                .apply(t, args);\n        }\n    }\n}\n\n/**\n *\n * Constructs new logger object.\n * @param level the logging level for the new logger\n * @param id optional identifier for the logger instance.\n * @param {LoggerTransport} transports optional list of handlers(objects) for\n * the logs. The handlers must support - log, warn, error, debug, info, trace.\n * @param format optional (NOT implemented) string.\n */\nfunction Logger(level, id, transports, format) {\n    this.id = id;\n    this.format = format;\n    this.transports = transports;\n    if(!this.transports) {\n        this.transports = [];\n    }\n    this.level = levels[level];\n    var methods = Object.keys(levels);\n    for(var i = 0; i < methods.length; i++){\n        this[methods[i]] =\n            log.bind(null, this, methods[i]);\n    }\n}\n\n/**\n * Sets the log level for the logger.\n * @param level the new log level.\n */\nLogger.prototype.setLevel = function (level) {\n    this.level = levels[level];\n};\nmodule.exports = Logger;\n\n/**\n * Enum for the supported log levels.\n */\nLogger.levels = {\n    TRACE: \"trace\",\n    DEBUG: \"debug\",\n    INFO: \"info\",\n    LOG: \"log\",\n    WARN: \"warn\",\n    ERROR: \"error\"\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jitsi-meet-logger/lib/Logger.js\n// module id = 38\n// module chunks = 0","var apply = Function.prototype.apply;\n\n// DOM APIs, for completeness\n\nexports.setTimeout = function() {\n  return new Timeout(apply.call(setTimeout, window, arguments), clearTimeout);\n};\nexports.setInterval = function() {\n  return new Timeout(apply.call(setInterval, window, arguments), clearInterval);\n};\nexports.clearTimeout =\nexports.clearInterval = function(timeout) {\n  if (timeout) {\n    timeout.close();\n  }\n};\n\nfunction Timeout(id, clearFn) {\n  this._id = id;\n  this._clearFn = clearFn;\n}\nTimeout.prototype.unref = Timeout.prototype.ref = function() {};\nTimeout.prototype.close = function() {\n  this._clearFn.call(window, this._id);\n};\n\n// Does not start the time, just sets up the members needed.\nexports.enroll = function(item, msecs) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = msecs;\n};\n\nexports.unenroll = function(item) {\n  clearTimeout(item._idleTimeoutId);\n  item._idleTimeout = -1;\n};\n\nexports._unrefActive = exports.active = function(item) {\n  clearTimeout(item._idleTimeoutId);\n\n  var msecs = item._idleTimeout;\n  if (msecs >= 0) {\n    item._idleTimeoutId = setTimeout(function onTimeout() {\n      if (item._onTimeout)\n        item._onTimeout();\n    }, msecs);\n  }\n};\n\n// setimmediate attaches itself to the global object\nrequire(\"setimmediate\");\nexports.setImmediate = setImmediate;\nexports.clearImmediate = clearImmediate;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/timers-browserify/main.js\n// module id = 39\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0});var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var i=t[n];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,n,i){return n&&e(t.prototype,n),i&&e(t,i),t}}(),Promise=require(\"bluebird\"),TurnTest=function(){function e(t){_classCallCheck(this,e),this.connection=t,this.active=!1,this.results={}}return _createClass(e,[{key:\"getResults\",value:function(){return this.results}},{key:\"start\",value:function(){var e=this,t=new Promise(function(t,n){e.resolveCb=t,e.rejectCb=n});return this.connection.setMessageCallback(this.handleMessage.bind(this)),this.connection.setErrorCallback(this.handleError.bind(this)),this.active=!0,this.forceStopped=!1,this.initiate(),t}},{key:\"stop\",value:function(){this.active=!1}},{key:\"forceStop\",value:function(){this.forceStopped=!0,this.stop(),this.finished()}},{key:\"isActive\",value:function(){return this.active}},{key:\"initiate\",value:function(){}},{key:\"handleMessage\",value:function(e){}},{key:\"handleError\",value:function(e){}},{key:\"send\",value:function(e){this.connection.send(e)}},{key:\"finished\",value:function(){this.active=!1,this.resolveCb()}},{key:\"failed\",value:function(e){this.active=!1,this.rejectCb(e)}}]),e}();exports.TurnTest=TurnTest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/tests/turnTest.js\n// module id = 40\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function randomAsciiString(e){for(var t=\"\",r=0;r<e;r++)t+=String.fromCharCode(35+58*Math.random());return t}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.randomAsciiString=exports.MessageMaker=void 0;var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var s=t[r];s.enumerable=s.enumerable||!1,s.configurable=!0,\"value\"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,r,s){return r&&e(t.prototype,r),s&&e(t,s),t}}(),_timestamps=require(\"../utility/timestamps\"),Timestamps=_interopRequireWildcard(_timestamps),MessageMaker=function(){function e(){var t=arguments.length>0&&void 0!==arguments[0]?arguments[0]:1200;_classCallCheck(this,e),this.message={timestamp:\"\",sentBytes:1e4,padding:\"\"};var r=randomAsciiString(t-Timestamps.getCurrent().toString().length-JSON.stringify(this.message).length);this.message.padding=r}return _createClass(e,[{key:\"make\",value:function(e){return this.message.timestamp=Timestamps.getCurrent(),this.message.sentBytes=e,JSON.stringify(this.message)}}]),e}();exports.MessageMaker=MessageMaker,exports.randomAsciiString=randomAsciiString;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/utility/messageMaker.js\n// module id = 41\n// module chunks = 0","/**\n * Provides statistics for the local stream.\n */\n\nimport RTCBrowserType from '../RTC/RTCBrowserType';\n\n/**\n * Size of the webaudio analyzer buffer.\n * @type {number}\n */\nconst WEBAUDIO_ANALYZER_FFT_SIZE = 2048;\n\n/**\n * Value of the webaudio analyzer smoothing time parameter.\n * @type {number}\n */\nconst WEBAUDIO_ANALYZER_SMOOTING_TIME = 0.8;\n\nwindow.AudioContext = window.AudioContext || window.webkitAudioContext;\n\nlet context = null;\n\nif (window.AudioContext) {\n    context = new AudioContext();\n\n    // XXX Not all browsers define a suspend method on AudioContext. As the\n    // invocation is at the (ES6 module) global execution level, it breaks the\n    // loading of the lib-jitsi-meet library in such browsers and, consequently,\n    // the loading of the very Web app that uses the lib-jitsi-meet library. For\n    // example, Google Chrome 40 on Android does not define the method but we\n    // still want to be able to load the lib-jitsi-meet library there and\n    // display a page which notifies the user that the Web app is not supported\n    // there.\n    context.suspend && context.suspend();\n}\n\n/**\n * Converts time domain data array to audio level.\n * @param samples the time domain data array.\n * @returns {number} the audio level\n */\nfunction timeDomainDataToAudioLevel(samples) {\n\n    let maxVolume = 0;\n\n    const length = samples.length;\n\n    for (let i = 0; i < length; i++) {\n        if (maxVolume < samples[i]) {\n            maxVolume = samples[i];\n        }\n    }\n\n    return parseFloat(((maxVolume - 127) / 128).toFixed(3));\n}\n\n/**\n * Animates audio level change\n * @param newLevel the new audio level\n * @param lastLevel the last audio level\n * @returns {Number} the audio level to be set\n */\nfunction animateLevel(newLevel, lastLevel) {\n    let value = 0;\n    const diff = lastLevel - newLevel;\n\n    if (diff > 0.2) {\n        value = lastLevel - 0.2;\n    } else if (diff < -0.4) {\n        value = lastLevel + 0.4;\n    } else {\n        value = newLevel;\n    }\n\n    return parseFloat(value.toFixed(3));\n}\n\n\n/**\n * <tt>LocalStatsCollector</tt> calculates statistics for the local stream.\n *\n * @param stream the local stream\n * @param interval stats refresh interval given in ms.\n * @param callback function that receives the audio levels.\n * @constructor\n */\nexport default function LocalStatsCollector(stream, interval, callback) {\n    this.stream = stream;\n    this.intervalId = null;\n    this.intervalMilis = interval;\n    this.audioLevel = 0;\n    this.callback = callback;\n}\n\n/**\n * Starts the collecting the statistics.\n */\nLocalStatsCollector.prototype.start = function() {\n    if (!LocalStatsCollector.isLocalStatsSupported()) {\n        return;\n    }\n    context.resume();\n    const analyser = context.createAnalyser();\n\n    analyser.smoothingTimeConstant = WEBAUDIO_ANALYZER_SMOOTING_TIME;\n    analyser.fftSize = WEBAUDIO_ANALYZER_FFT_SIZE;\n\n    const source = context.createMediaStreamSource(this.stream);\n\n    source.connect(analyser);\n\n\n    const self = this;\n\n    this.intervalId = setInterval(\n        () => {\n            const array = new Uint8Array(analyser.frequencyBinCount);\n\n            analyser.getByteTimeDomainData(array);\n            const audioLevel = timeDomainDataToAudioLevel(array);\n\n            if (audioLevel !== self.audioLevel) {\n                self.audioLevel = animateLevel(audioLevel, self.audioLevel);\n                self.callback(self.audioLevel);\n            }\n        },\n        this.intervalMilis\n    );\n};\n\n/**\n * Stops collecting the statistics.\n */\nLocalStatsCollector.prototype.stop = function() {\n    if (this.intervalId) {\n        clearInterval(this.intervalId);\n        this.intervalId = null;\n    }\n};\n\n/**\n * Checks if the environment has the necessary conditions to support\n * collecting stats from local streams.\n *\n * @returns {boolean}\n */\nLocalStatsCollector.isLocalStatsSupported = function() {\n    return Boolean(context && !RTCBrowserType.isTemasysPluginUsed());\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/statistics/LocalStatsCollector.js","/**\n * Notifies about audio level in RTP statistics by SSRC.\n *\n * @param ssrc - The synchronization source identifier (SSRC) of the\n * endpoint/participant whose audio level is being reported.\n * @param {number} audioLevel - The audio level of <tt>ssrc</tt> according to\n * RTP statistics.\n * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> identifies the\n * local endpoint/participant; otherwise, <tt>false</tt>.\n */\nexport const AUDIO_LEVEL = 'statistics.audioLevel';\n\n/**\n * An event fired just before the statistics module gets disposes and it's\n * the last chance to submit some logs that will end up in stats services like\n * CallStats (if enabled).\n */\nexport const BEFORE_DISPOSED = 'statistics.before_disposed';\n\n/**\n * An event carrying all statistics by ssrc.\n */\nexport const BYTE_SENT_STATS = 'statistics.byte_sent_stats';\n\n/**\n * An event carrying connection statistics.\n *\n * @param {object} connectionStats - The connection statistics carried by the\n * event such as <tt>bandwidth</tt>, <tt>bitrate</tt>, <tt>packetLoss</tt>,\n * <tt>resolution</tt>, and <tt>transport</tt>.\n */\nexport const CONNECTION_STATS = 'statistics.connectionstats';\n\n\n\n// WEBPACK FOOTER //\n// ./service/statistics/Events.js","const currentExecutingScript = require('current-executing-script');\n\n/* eslint-disable max-params */\n\n/**\n * Implements utility functions which facilitate the dealing with scripts such\n * as the download and execution of a JavaScript file.\n */\nconst ScriptUtil = {\n    /**\n     * Loads a script from a specific source.\n     *\n     * @param src the source from the which the script is to be (down)loaded\n     * @param async true to asynchronously load the script or false to\n     * synchronously load the script\n     * @param prepend true to schedule the loading of the script as soon as\n     * possible or false to schedule the loading of the script at the end of the\n     * scripts known at the time\n     * @param relativeURL whether we need load the library from url relative\n     * to the url that lib-jitsi-meet was loaded. Useful when sourcing the\n     * library from different location than the app that is using it\n     * @param loadCallback on load callback function\n     * @param errorCallback callback to be called on error loading the script\n     */\n    loadScript(\n            src,\n            async,\n            prepend,\n            relativeURL,\n            loadCallback,\n            errorCallback) {\n        const d = document;\n        const tagName = 'script';\n        const script = d.createElement(tagName);\n        const referenceNode = d.getElementsByTagName(tagName)[0];\n\n        script.async = async;\n\n        if (relativeURL) {\n            // finds the src url of the current loaded script\n            // and use it as base of the src supplied argument\n            const scriptEl = currentExecutingScript();\n\n            if (scriptEl) {\n                const scriptSrc = scriptEl.src;\n                const baseScriptSrc\n                    = scriptSrc.substring(0, scriptSrc.lastIndexOf('/') + 1);\n\n                if (scriptSrc && baseScriptSrc) {\n                    // eslint-disable-next-line no-param-reassign\n                    src = baseScriptSrc + src;\n                }\n            }\n        }\n\n        if (loadCallback) {\n            script.onload = loadCallback;\n        }\n        if (errorCallback) {\n            script.onerror = errorCallback;\n        }\n\n        script.src = src;\n        if (prepend) {\n            referenceNode.parentNode.insertBefore(script, referenceNode);\n        } else {\n            referenceNode.parentNode.appendChild(script);\n        }\n    }\n};\n\n/* eslint-enable max-params */\n\nmodule.exports = ScriptUtil;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/util/ScriptUtil.js","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { Strophe } from 'strophe.js';\nimport 'strophejs-plugin-disco';\n\nimport RandomUtil from '../util/RandomUtil';\nimport * as JitsiConnectionErrors from '../../JitsiConnectionErrors';\nimport * as JitsiConnectionEvents from '../../JitsiConnectionEvents';\nimport RTCBrowserType from '../RTC/RTCBrowserType';\nimport initEmuc from './strophe.emuc';\nimport initJingle from './strophe.jingle';\nimport initStropheUtil from './strophe.util';\nimport initPing from './strophe.ping';\nimport initRayo from './strophe.rayo';\nimport initStropheLogger from './strophe.logger';\nimport Listenable from '../util/Listenable';\nimport Caps from './Caps';\n\nconst logger = getLogger(__filename);\n\n/**\n *\n * @param token\n * @param bosh\n */\nfunction createConnection(token, bosh = '/http-bind') {\n    // Append token as URL param\n    if (token) {\n        // eslint-disable-next-line no-param-reassign\n        bosh += `${bosh.indexOf('?') === -1 ? '?' : '&'}token=${token}`;\n    }\n\n    const conn = new Strophe.Connection(bosh);\n\n    // The default maxRetries is 5, which is too long.\n    conn.maxRetries = 3;\n\n    return conn;\n}\n\n/**\n *\n */\nexport default class XMPP extends Listenable {\n    /**\n     * FIXME describe all options\n     * @param {Object} options\n     * @param {Array<Object>} options.p2pStunServers see\n     * {@link JingleConnectionPlugin} for more details.\n     * @param token\n     */\n    constructor(options, token) {\n        super();\n        this.connection = null;\n        this.disconnectInProgress = false;\n        this.connectionTimes = {};\n        this.options = options;\n        this.token = token;\n        this.authenticatedUser = false;\n        this._initStrophePlugins(this);\n\n        this.connection = createConnection(token, options.bosh);\n\n        this.caps = new Caps(this.connection, this.options.clientNode);\n\n        // Initialize features advertised in disco-info\n        this.initFeaturesList();\n\n        // Setup a disconnect on unload as a way to facilitate API consumers. It\n        // sounds like they would want that. A problem for them though may be if\n        // they wanted to utilize the connected connection in an unload handler\n        // of their own. However, it should be fairly easy for them to do that\n        // by registering their unload handler before us.\n        $(window).on('beforeunload unload', this.disconnect.bind(this));\n    }\n\n    /**\n     * Initializes the list of feature advertised through the disco-info\n     * mechanism.\n     */\n    initFeaturesList() {\n        // http://xmpp.org/extensions/xep-0167.html#support\n        // http://xmpp.org/extensions/xep-0176.html#support\n        this.caps.addFeature('urn:xmpp:jingle:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:1');\n        this.caps.addFeature('urn:xmpp:jingle:transports:ice-udp:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:dtls:0');\n        this.caps.addFeature('urn:xmpp:jingle:transports:dtls-sctp:1');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:audio');\n        this.caps.addFeature('urn:xmpp:jingle:apps:rtp:video');\n\n        if (!this.options.disableRtx && RTCBrowserType.supportsRtx()) {\n            this.caps.addFeature('urn:ietf:rfc:4588');\n        }\n\n        // this is dealt with by SDP O/A so we don't need to announce this\n        // XEP-0293\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtcp-fb:0');\n        // XEP-0294\n        // this.caps.addFeature('urn:xmpp:jingle:apps:rtp:rtp-hdrext:0');\n\n        this.caps.addFeature('urn:ietf:rfc:5761'); // rtcp-mux\n        this.caps.addFeature('urn:ietf:rfc:5888'); // a=group, e.g. bundle\n\n        // this.caps.addFeature('urn:ietf:rfc:5576'); // a=ssrc\n\n        // Enable Lipsync ?\n        if (RTCBrowserType.isChrome() && this.options.enableLipSync !== false) {\n            logger.info('Lip-sync enabled !');\n            this.caps.addFeature('http://jitsi.org/meet/lipsync');\n        }\n\n        if (this.connection.rayo) {\n            this.caps.addFeature('urn:xmpp:rayo:client:1');\n        }\n    }\n\n    /**\n     *\n     */\n    getConnection() {\n        return this.connection;\n    }\n\n    /**\n     * Receive connection status changes and handles them.\n     *\n     * @param {Object} credentials\n     * @param {string} credentials.jid - The user's XMPP ID passed to the\n     * connect method. For example, 'user@xmpp.com'.\n     * @param {string} credentials.password - The password passed to the connect\n     * method.\n     * @param {string} status - One of Strophe's connection status strings.\n     * @param {string} [msg] - The connection error message provided by Strophe.\n     */\n    connectionHandler(credentials = {}, status, msg) {\n        const now = window.performance.now();\n        const statusStr = Strophe.getStatusString(status).toLowerCase();\n\n        this.connectionTimes[statusStr] = now;\n        logger.log(\n            `(TIME) Strophe ${statusStr}${msg ? `[${msg}]` : ''}:\\t`,\n            now);\n        if (status === Strophe.Status.CONNECTED\n            || status === Strophe.Status.ATTACHED) {\n            if (this.options.useStunTurn\n                || (this.options.p2p && this.options.p2p.useStunTurn)) {\n                this.connection.jingle.getStunAndTurnCredentials();\n            }\n\n            logger.info(`My Jabber ID: ${this.connection.jid}`);\n\n            // Schedule ping ?\n            const pingJid = this.connection.domain;\n\n            this.connection.ping.hasPingSupport(\n                pingJid,\n                hasPing => {\n                    if (hasPing) {\n                        this.connection.ping.startInterval(pingJid);\n                    } else {\n                        logger.warn(`Ping NOT supported by ${pingJid}`);\n                    }\n                });\n\n            if (credentials.password) {\n                this.authenticatedUser = true;\n            }\n            if (this.connection && this.connection.connected\n                    && Strophe.getResourceFromJid(this.connection.jid)) {\n                // .connected is true while connecting?\n                // this.connection.send($pres());\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_ESTABLISHED,\n                    Strophe.getResourceFromJid(this.connection.jid));\n            }\n        } else if (status === Strophe.Status.CONNFAIL) {\n            if (msg === 'x-strophe-bad-non-anon-jid') {\n                this.anonymousConnectionFailed = true;\n            } else {\n                this.connectionFailed = true;\n            }\n            this.lastErrorMsg = msg;\n            if (msg === 'giving-up') {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.OTHER_ERROR, msg);\n            }\n        } else if (status === Strophe.Status.DISCONNECTED) {\n            // Stop ping interval\n            this.connection.ping.stopInterval();\n            const wasIntentionalDisconnect = this.disconnectInProgress;\n            const errMsg = msg || this.lastErrorMsg;\n\n            this.disconnectInProgress = false;\n            if (this.anonymousConnectionFailed) {\n                // prompt user for username and password\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.PASSWORD_REQUIRED);\n            } else if (this.connectionFailed) {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_FAILED,\n                    JitsiConnectionErrors.OTHER_ERROR, errMsg);\n            } else if (wasIntentionalDisconnect) {\n                this.eventEmitter.emit(\n                    JitsiConnectionEvents.CONNECTION_DISCONNECTED, errMsg);\n            } else {\n                // XXX if Strophe drops the connection while not being asked to,\n                // it means that most likely some serious error has occurred.\n                // One currently known case is when a BOSH request fails for\n                // more than 4 times. The connection is dropped without\n                // supplying a reason(error message/event) through the API.\n                logger.error('XMPP connection dropped!');\n\n                // XXX if the last request error is within 5xx range it means it\n                // was a server failure\n                const lastErrorStatus = Strophe.getLastErrorStatus();\n\n                if (lastErrorStatus >= 500 && lastErrorStatus < 600) {\n                    this.eventEmitter.emit(\n                        JitsiConnectionEvents.CONNECTION_FAILED,\n                        JitsiConnectionErrors.SERVER_ERROR,\n                        errMsg || 'server-error');\n                } else {\n                    this.eventEmitter.emit(\n                        JitsiConnectionEvents.CONNECTION_FAILED,\n                        JitsiConnectionErrors.CONNECTION_DROPPED_ERROR,\n                        errMsg || 'connection-dropped-error');\n                }\n            }\n        } else if (status === Strophe.Status.AUTHFAIL) {\n            // wrong password or username, prompt user\n            this.eventEmitter.emit(\n                JitsiConnectionEvents.CONNECTION_FAILED,\n                JitsiConnectionErrors.PASSWORD_REQUIRED,\n                msg,\n                credentials);\n        }\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     */\n    _connect(jid, password) {\n        // connection.connect() starts the connection process.\n        //\n        // As the connection process proceeds, the user supplied callback will\n        // be triggered multiple times with status updates. The callback should\n        // take two arguments - the status code and the error condition.\n        //\n        // The status code will be one of the values in the Strophe.Status\n        // constants. The error condition will be one of the conditions defined\n        // in RFC 3920 or the condition ‘strophe-parsererror’.\n        //\n        // The Parameters wait, hold and route are optional and only relevant\n        // for BOSH connections. Please see XEP 124 for a more detailed\n        // explanation of the optional parameters.\n        //\n        // Connection status constants for use by the connection handler\n        // callback.\n        //\n        //  Status.ERROR - An error has occurred (websockets specific)\n        //  Status.CONNECTING - The connection is currently being made\n        //  Status.CONNFAIL - The connection attempt failed\n        //  Status.AUTHENTICATING - The connection is authenticating\n        //  Status.AUTHFAIL - The authentication attempt failed\n        //  Status.CONNECTED - The connection has succeeded\n        //  Status.DISCONNECTED - The connection has been terminated\n        //  Status.DISCONNECTING - The connection is currently being terminated\n        //  Status.ATTACHED - The connection has been attached\n\n        this.anonymousConnectionFailed = false;\n        this.connectionFailed = false;\n        this.lastErrorMsg = undefined;\n        this.connection.connect(\n            jid,\n            password,\n            this.connectionHandler.bind(this, {\n                jid,\n                password\n            }));\n    }\n\n    /**\n     * Attach to existing connection. Can be used for optimizations. For\n     * example: if the connection is created on the server we can attach to it\n     * and start using it.\n     *\n     * @param options {object} connecting options - rid, sid, jid and password.\n     */\n    attach(options) {\n        const now = this.connectionTimes.attaching = window.performance.now();\n\n        logger.log(`(TIME) Strophe Attaching\\t:${now}`);\n        this.connection.attach(options.jid, options.sid,\n            parseInt(options.rid, 10) + 1,\n            this.connectionHandler.bind(this, {\n                jid: options.jid,\n                password: options.password\n            }));\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     */\n    connect(jid, password) {\n        if (!jid) {\n            const { anonymousdomain, domain } = this.options.hosts;\n            let configDomain = anonymousdomain || domain;\n\n            // Force authenticated domain if room is appended with '?login=true'\n            // or if we're joining with the token\n\n            // FIXME Do not rely on window.location because (1) React Native\n            // does not have a window.location by default and (2) here we cannot\n            // know for sure that query/search has not be stripped from\n            // window.location by the time the following executes.\n            const { location } = window;\n\n            if (anonymousdomain) {\n                const search = location && location.search;\n\n                if ((search && search.indexOf('login=true') !== -1)\n                        || this.token) {\n                    configDomain = domain;\n                }\n            }\n\n            // eslint-disable-next-line no-param-reassign\n            jid = configDomain || (location && location.hostname);\n        }\n\n        return this._connect(jid, password);\n    }\n\n    /**\n     *\n     * @param roomName\n     * @param options\n     */\n    createRoom(roomName, options) {\n        // By default MUC nickname is the resource part of the JID\n        let mucNickname = Strophe.getNodeFromJid(this.connection.jid);\n        let roomjid = `${roomName}@${this.options.hosts.muc}/`;\n        const cfgNickname\n            = options.useNicks && options.nick ? options.nick : null;\n\n        if (cfgNickname) {\n            // Use nick if it's defined\n            mucNickname = options.nick;\n        } else if (!this.authenticatedUser) {\n            // node of the anonymous JID is very long - here we trim it a bit\n            mucNickname = mucNickname.substr(0, 8);\n        }\n\n        // Constant JIDs need some random part to be appended in order to be\n        // able to join the MUC more than once.\n        if (this.authenticatedUser || cfgNickname !== null) {\n            mucNickname += `-${RandomUtil.randomHexString(6)}`;\n        }\n\n        roomjid += mucNickname;\n\n        return this.connection.emuc.createRoom(roomjid, null, options);\n    }\n\n    /**\n     * Returns the logs from strophe.jingle.\n     * @returns {Object}\n     */\n    getJingleLog() {\n        const jingle = this.connection.jingle;\n\n\n        return jingle ? jingle.getLog() : {};\n    }\n\n    /**\n     * Returns the logs from strophe.\n     */\n    getXmppLog() {\n        return (this.connection.logger || {}).log || null;\n    }\n\n    /**\n     *\n     */\n    dial(...args) {\n        this.connection.rayo.dial(...args);\n    }\n\n    /**\n     *\n     * @param jid\n     * @param mute\n     */\n    setMute(jid, mute) {\n        this.connection.moderate.setMute(jid, mute);\n    }\n\n    /**\n     *\n     * @param jid\n     */\n    eject(jid) {\n        this.connection.moderate.eject(jid);\n    }\n\n    /**\n     *\n     */\n    getSessions() {\n        return this.connection.jingle.sessions;\n    }\n\n    /**\n     * Disconnects this from the XMPP server (if this is connected).\n     *\n     * @param ev optionally, the event which triggered the necessity to\n     * disconnect from the XMPP server (e.g. beforeunload, unload).\n     */\n    disconnect(ev) {\n        if (this.disconnectInProgress\n                || !this.connection\n                || !this.connection.connected) {\n            this.eventEmitter.emit(JitsiConnectionEvents.WRONG_STATE);\n\n            return;\n        }\n\n        this.disconnectInProgress = true;\n\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that\n        // means that there may not be enough time to send an unavailable\n        // presence or disconnect at all. Switching Strophe to synchronous\n        // sending is not much of an option because it may lead to a noticeable\n        // delay in navigating away from the current location. As a compromise,\n        // we will try to increase the chances of sending an unavailable\n        // presence and/or disconecting within the short time span that we have\n        // upon unloading by invoking flush() on the connection. We flush() once\n        // before disconnect() in order to attemtp to have its unavailable\n        // presence at the top of the send queue. We flush() once more after\n        // disconnect() in order to attempt to have its unavailable presence\n        // sent as soon as possible.\n        this.connection.flush();\n\n        if (ev !== null && typeof ev !== 'undefined') {\n            const evType = ev.type;\n\n            if (evType === 'beforeunload' || evType === 'unload') {\n                // XXX Whatever we said above, synchronous sending is the best\n                // (known) way to properly disconnect from the XMPP server.\n                // Consequently, it may be fine to have the source code and\n                // comment it in or out depending on whether we want to run with\n                // it for some time.\n                this.connection.options.sync = true;\n            }\n        }\n\n        this.connection.disconnect();\n\n        if (this.connection.options.sync !== true) {\n            this.connection.flush();\n        }\n    }\n\n    /**\n     *\n     */\n    _initStrophePlugins() {\n        const iceConfig = {\n            jvb: { iceServers: [ ] },\n            p2p: { iceServers: [ ] }\n        };\n\n        // FIXME: remove once we have a default config template. -saghul\n        const defaultStunServers = [\n            { urls: 'stun:stun.l.google.com:19302' },\n            { urls: 'stun:stun1.l.google.com:19302' },\n            { urls: 'stun:stun2.l.google.com:19302' }\n        ];\n\n        const p2pStunServers = (this.options.p2p\n            && this.options.p2p.stunServers) || defaultStunServers;\n\n        if (Array.isArray(p2pStunServers)) {\n            logger.info('P2P STUN servers: ', p2pStunServers);\n            iceConfig.p2p.iceServers = p2pStunServers;\n        }\n\n        if (this.options.p2p && this.options.p2p.iceTransportPolicy) {\n            logger.info('P2P ICE transport policy: ',\n                this.options.p2p.iceTransportPolicy);\n\n            iceConfig.p2p.iceTransportPolicy\n                = this.options.p2p.iceTransportPolicy;\n        }\n\n        initEmuc(this);\n        initJingle(this, this.eventEmitter, iceConfig);\n        initStropheUtil();\n        initPing(this);\n        initRayo();\n        initStropheLogger();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/xmpp.js","/**\n * The errors for the connection.\n */\n\n/**\n * Indicates that the connection was dropped with an error which was most likely\n * caused by some networking issues. The dropped term in this context means that\n * the connection was closed unexpectedly (not on user's request).\n *\n * One example is 'item-not-found' error thrown by Prosody when the BOSH session\n * times out after 60 seconds of inactivity. On the other hand 'item-not-found'\n * could also happen when BOSH request is sent to the server with the session-id\n * that is not know to the server. But this should not happen in lib-jitsi-meet\n * case as long as the service is configured correctly (there is no bug).\n */\nexport const CONNECTION_DROPPED_ERROR = 'connection.droppedError';\n\n/**\n * Not specified errors.\n */\nexport const OTHER_ERROR = 'connection.otherError';\n\n/**\n * Indicates that a password is required in order to join the conference.\n */\nexport const PASSWORD_REQUIRED = 'connection.passwordRequired';\n\n/**\n * Indicates that the connection was dropped, because of too many 5xx HTTP\n * errors on BOSH requests.\n */\nexport const SERVER_ERROR = 'connection.serverError';\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiConnectionErrors.js","/**\n * The transciption is on.\n *\n * @type {String}\n */\nexport const ON = 'on';\n\n/**\n * The transciption is off.\n *\n * @type {String}\n */\nexport const OFF = 'off';\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiTranscriptionStatus.js","const AuthenticationEvents = {\n    /**\n     * Event callback arguments:\n     * function(authenticationEnabled, userIdentity)\n     * authenticationEnabled - indicates whether authentication has been enabled\n     *                         in this session\n     * userIdentity - if user has been logged in then it contains user name. If\n     *                contains 'null' or 'undefined' then user is not logged in.\n     */\n    IDENTITY_UPDATED: 'authentication.identity_updated'\n};\n\nmodule.exports = AuthenticationEvents;\n\n\n\n// WEBPACK FOOTER //\n// ./service/authentication/AuthenticationEvents.js","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq } from 'strophe.js';\n\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\nconst JitsiRecorderErrors = require('../../JitsiRecorderErrors');\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\n\nconst logger = getLogger(__filename);\n\n/**\n * Extracts the error details from given error element/node.\n *\n * @param {Element|Object} errorIqNode - Either DOM element or the structure\n * from ChatRoom packet2JSON.\n * @return {{\n *     code: string,\n *     type: string,\n *     message: string\n * }}\n */\nfunction getJibriErrorDetails(errorIqNode) {\n    if (typeof errorIqNode.querySelector === 'function') {\n        const error = errorIqNode.querySelector('error');\n        const errorText = error && error.querySelector('text');\n\n        return error && {\n            code: error.attributes.code && error.attributes.code.value,\n            type: error.attributes.type && error.attributes.type.value,\n            message: errorText && errorText.textContent\n        };\n    }\n\n    let error = null;\n\n    for (const child of errorIqNode.children) {\n        if (child.tagName === 'error') {\n            error = child;\n            break;\n        }\n    }\n\n    if (!error) {\n        return null;\n    }\n\n    let errorText = null;\n\n    for (const errorChild of error.children) {\n        if (errorChild.tagName === 'text') {\n            errorText = errorChild.value;\n            break;\n        }\n    }\n\n    return {\n        code: error.attributes.code,\n        type: error.attributes.type,\n        message: errorText\n    };\n}\n\n/* eslint-disable max-params */\n\n/**\n *\n * @param type\n * @param eventEmitter\n * @param connection\n * @param focusMucJid\n * @param jirecon\n * @param roomjid\n */\nexport default function Recording(\n        type,\n        eventEmitter,\n        connection,\n        focusMucJid,\n        jirecon,\n        roomjid) {\n    this.eventEmitter = eventEmitter;\n    this.connection = connection;\n    this.state = null;\n    this.focusMucJid = focusMucJid;\n    this.jirecon = jirecon;\n    this.url = null;\n    this.type = type;\n    this._isSupported\n        = !(\n            (type === Recording.types.JIRECON && !this.jirecon)\n                || (type !== Recording.types.JIBRI\n                    && type !== Recording.types.JIBRI_FILE\n                    && type !== Recording.types.COLIBRI));\n\n    /**\n     * The ID of the jirecon recording session. Jirecon generates it when we\n     * initially start recording, and it needs to be used in subsequent requests\n     * to jirecon.\n     */\n    this.jireconRid = null;\n    this.roomjid = roomjid;\n}\n\n/* eslint-enable max-params */\n\nRecording.types = {\n    COLIBRI: 'colibri',\n    JIRECON: 'jirecon',\n    JIBRI: 'jibri',\n    JIBRI_FILE: 'jibri_file'\n};\n\nRecording.status = {\n    ON: 'on',\n    OFF: 'off',\n    AVAILABLE: 'available',\n    UNAVAILABLE: 'unavailable',\n    PENDING: 'pending',\n    RETRYING: 'retrying',\n    ERROR: 'error',\n    BUSY: 'busy',\n    FAILED: 'failed'\n};\n\nRecording.action = {\n    START: 'start',\n    STOP: 'stop'\n};\n\nRecording.prototype.handleJibriPresence = function(jibri) {\n    const attributes = jibri.attributes;\n\n    if (!attributes) {\n        return;\n    }\n\n    const newState = attributes.status;\n    const errorDetails = getJibriErrorDetails(jibri);\n\n    logger.log(`Handle Jibri presence : ${newState}`, errorDetails);\n\n    if (newState === this.state) {\n        return;\n    }\n\n    if (newState === 'undefined') {\n        this.state = Recording.status.UNAVAILABLE;\n    } else if (newState === Recording.status.OFF) {\n        if (!this.state\n            || this.state === 'undefined'\n            || this.state === Recording.status.UNAVAILABLE) {\n            this.state = Recording.status.AVAILABLE;\n        } else {\n            this.state = Recording.status.OFF;\n        }\n    } else {\n        this.state = newState;\n    }\n\n    this.eventEmitter.emit(XMPPEvents.RECORDER_STATE_CHANGED, this.state);\n};\n\n/* eslint-disable max-params */\n\nRecording.prototype.setRecordingJibri = function(\n        state,\n        callback,\n        errCallback,\n        options = {}) {\n    if (state === this.state) {\n        errCallback(JitsiRecorderErrors.INVALID_STATE);\n    }\n\n    // FIXME jibri does not accept IQ without 'url' attribute set ?\n    const iq\n        = $iq({\n            to: this.focusMucJid,\n            type: 'set'\n        })\n            .c('jibri', {\n                'xmlns': 'http://jitsi.org/protocol/jibri',\n                'action':\n                    state === Recording.status.ON\n                        ? Recording.action.START\n                        : Recording.action.STOP,\n                'recording_mode':\n                    this.type === Recording.types.JIBRI_FILE\n                        ? 'file'\n                        : 'stream',\n                'streamid':\n                    this.type === Recording.types.JIBRI\n                        ? options.streamId\n                        : undefined\n            })\n            .up();\n\n    logger.log(`Set jibri recording: ${state}`, iq.nodeTree);\n    logger.log(iq.nodeTree);\n    this.connection.sendIQ(\n        iq,\n        result => {\n            logger.log('Result', result);\n\n            const jibri = $(result).find('jibri');\n\n            callback(jibri.attr('state'), jibri.attr('url'));\n        },\n        error => {\n            logger.log(\n                'Failed to start recording, error: ',\n                getJibriErrorDetails(error));\n            errCallback(error);\n        });\n};\n\n/* eslint-enable max-params */\n\nRecording.prototype.setRecordingJirecon\n    = function(state, callback, errCallback) {\n        if (state === this.state) {\n            errCallback(new Error('Invalid state!'));\n        }\n\n        const iq\n            = $iq({\n                to: this.jirecon,\n                type: 'set'\n            })\n                .c('recording', { xmlns: 'http://jitsi.org/protocol/jirecon',\n                    action: state === Recording.status.ON\n                        ? Recording.action.START\n                        : Recording.action.STOP,\n                    mucjid: this.roomjid });\n\n        if (state === Recording.status.OFF) {\n            iq.attrs({ rid: this.jireconRid });\n        }\n\n        logger.log('Start recording');\n        const self = this;\n\n        this.connection.sendIQ(\n            iq,\n            result => {\n                // TODO wait for an IQ with the real status, since this is\n                // provisional?\n                // eslint-disable-next-line newline-per-chained-call\n                self.jireconRid = $(result).find('recording').attr('rid');\n\n                const stateStr\n                    = state === Recording.status.ON ? 'started' : 'stopped';\n\n                logger.log(`Recording ${stateStr}(jirecon)${result}`);\n\n                self.state = state;\n                if (state === Recording.status.OFF) {\n                    self.jireconRid = null;\n                }\n\n                callback(state);\n            },\n            error => {\n                logger.log('Failed to start recording, error: ', error);\n                errCallback(error);\n            });\n    };\n\n/* eslint-disable max-params */\n\n// Sends a COLIBRI message which enables or disables (according to 'state')\n// the recording on the bridge. Waits for the result IQ and calls 'callback'\n// with the new recording state, according to the IQ.\nRecording.prototype.setRecordingColibri = function(\n        state,\n        callback,\n        errCallback,\n        options) {\n    const elem = $iq({\n        to: this.focusMucJid,\n        type: 'set'\n    });\n\n    elem.c('conference', {\n        xmlns: 'http://jitsi.org/protocol/colibri'\n    });\n    elem.c('recording', {\n        state,\n        token: options.token\n    });\n\n    const self = this;\n\n    this.connection.sendIQ(\n        elem,\n        result => {\n            logger.log('Set recording \"', state, '\". Result:', result);\n            const recordingElem = $(result).find('>conference>recording');\n            const newState = recordingElem.attr('state');\n\n            self.state = newState;\n            callback(newState);\n\n            if (newState === 'pending') {\n                self.connection.addHandler(iq => {\n                    // eslint-disable-next-line newline-per-chained-call\n                    const s = $(iq).find('recording').attr('state');\n\n                    if (s) {\n                        self.state = newState;\n                        callback(s);\n                    }\n                }, 'http://jitsi.org/protocol/colibri', 'iq', null, null, null);\n            }\n        },\n        error => {\n            logger.warn(error);\n            errCallback(error);\n        }\n    );\n};\n\n/* eslint-enable max-params */\n\nRecording.prototype.setRecording = function(...args) {\n    switch (this.type) {\n    case Recording.types.JIRECON:\n        this.setRecordingJirecon(...args);\n        break;\n    case Recording.types.COLIBRI:\n        this.setRecordingColibri(...args);\n        break;\n    case Recording.types.JIBRI:\n    case Recording.types.JIBRI_FILE:\n        this.setRecordingJibri(...args);\n        break;\n    default: {\n        const errmsg = 'Unknown recording type!';\n\n        GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n        logger.error(errmsg);\n        break;\n    }\n    }\n};\n\n/**\n * Starts/stops the recording.\n * @param {Object} options\n * @param {string} options.token token for authentication\n * @param {string} options.streamId the stream ID to be used with Jibri in\n * the streaming mode.\n * @param statusChangeHandler {function} receives the new status as argument.\n */\nRecording.prototype.toggleRecording = function(\n        options = { },\n        statusChangeHandler) {\n    const oldState = this.state;\n\n    // If the recorder is currently unavailable we throw an error.\n    if (oldState === Recording.status.UNAVAILABLE\n        || oldState === Recording.status.FAILED) {\n        statusChangeHandler(\n            Recording.status.FAILED,\n            JitsiRecorderErrors.RECORDER_UNAVAILABLE);\n    } else if (oldState === Recording.status.BUSY) {\n        statusChangeHandler(\n            Recording.status.BUSY,\n            JitsiRecorderErrors.RECORDER_BUSY);\n    }\n\n    // If we're about to turn ON the recording we need either a streamId or\n    // an authentication token depending on the recording type. If we don't\n    // have any of those we throw an error.\n    if ((oldState === Recording.status.OFF\n                || oldState === Recording.status.AVAILABLE)\n            && ((!options.token && this.type === Recording.types.COLIBRI)\n                || (!options.streamId\n                    && this.type === Recording.types.JIBRI))) {\n        statusChangeHandler(\n            Recording.status.FAILED,\n            JitsiRecorderErrors.NO_TOKEN);\n        logger.error('No token passed!');\n\n        return;\n    }\n\n    const newState\n        = oldState === Recording.status.AVAILABLE\n                || oldState === Recording.status.OFF\n            ? Recording.status.ON\n            : Recording.status.OFF;\n\n    const self = this;\n\n    logger.log('Toggle recording (old state, new state): ', oldState, newState);\n    this.setRecording(\n        newState,\n        (state, url) => {\n            // If the state is undefined we're going to wait for presence\n            // update.\n            if (state && state !== oldState) {\n                self.state = state;\n                self.url = url;\n                statusChangeHandler(state);\n            }\n        },\n        error => statusChangeHandler(Recording.status.FAILED, error),\n        options);\n};\n\n/**\n * Returns true if the recording is supproted and false if not.\n */\nRecording.prototype.isSupported = function() {\n    return this._isSupported;\n};\n\n/**\n * Returns null if the recording is not supported, \"on\" if the recording started\n * and \"off\" if the recording is not started.\n */\nRecording.prototype.getState = function() {\n    return this.state;\n};\n\n/**\n * Returns the url of the recorded video.\n */\nRecording.prototype.getURL = function() {\n    return this.url;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/recording.js","/**\n * Enumeration with the errors for the conference.\n * @type {{string: string}}\n */\nconst JitsiRecorderErrors = {\n    /**\n     * Indicates that the recorder is currently unavailable.\n     */\n    RECORDER_UNAVAILABLE: 'recorder.unavailable',\n\n    /**\n     * Indicates that all available recorders are currently busy.\n     */\n    RECORDER_BUSY: 'recorder.busy',\n\n    /**\n     * Indicates that the authentication token is missing.\n     */\n    NO_TOKEN: 'recorder.noToken',\n\n    /**\n     * Indicates that a state change failed.\n     */\n    STATE_CHANGE_FAILED: 'recorder.stateChangeFailed',\n\n    /**\n     * Indicates an invalid state.\n     */\n    INVALID_STATE: 'recorder.invalidState'\n};\n\nmodule.exports = JitsiRecorderErrors;\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiRecorderErrors.js","/**\n * The pending Jingle session state which means the session as defined in\n * XEP-0166(before 'session-invite/session-accept' took place).\n *\n * @type {string}\n */\nexport const PENDING = 'pending';\n\n/**\n * The active Jingle session state as defined in XEP-0166\n * (after 'session-invite'/'session-accept').\n *\n * @type {string}\n */\nexport const ACTIVE = 'active';\n\n/**\n * The ended Jingle session state as defined in XEP-0166\n * (after 'session-terminate').\n * @type {string}\n */\nexport const ENDED = 'ended';\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/JingleSessionState.js","/* global $ */\n\nimport SDPUtil from './SDPUtil';\n\n/**\n *\n * @param sdp\n */\nexport default function SDP(sdp) {\n    const media = sdp.split('\\r\\nm=');\n\n    for (let i = 1, length = media.length; i < length; i++) {\n        let mediaI = `m=${media[i]}`;\n\n        if (i !== length - 1) {\n            mediaI += '\\r\\n';\n        }\n        media[i] = mediaI;\n    }\n    const session = `${media.shift()}\\r\\n`;\n\n    this.media = media;\n    this.raw = session + media.join('');\n    this.session = session;\n}\n\n/**\n * A flag will make {@link transportToJingle} and {@link jingle2media} replace\n * ICE candidates IPs with invalid value of '1.1.1.1' which will cause ICE\n * failure. The flag is used in the automated testing.\n * @type {boolean}\n */\nSDP.prototype.failICE = false;\n\n/**\n * Whether or not to remove TCP ice candidates when translating from/to jingle.\n * @type {boolean}\n */\nSDP.prototype.removeTcpCandidates = false;\n\n/**\n * Whether or not to remove UDP ice candidates when translating from/to jingle.\n * @type {boolean}\n */\nSDP.prototype.removeUdpCandidates = false;\n\n/**\n * Returns map of MediaChannel mapped per channel idx.\n */\nSDP.prototype.getMediaSsrcMap = function() {\n    const self = this;\n    const mediaSSRCs = {};\n    let tmp;\n\n    for (let mediaindex = 0; mediaindex < self.media.length; mediaindex++) {\n        tmp = SDPUtil.findLines(self.media[mediaindex], 'a=ssrc:');\n        const mid\n            = SDPUtil.parseMID(\n                SDPUtil.findLine(self.media[mediaindex], 'a=mid:'));\n        const media = {\n            mediaindex,\n            mid,\n            ssrcs: {},\n            ssrcGroups: []\n        };\n\n        mediaSSRCs[mediaindex] = media;\n        tmp.forEach(line => {\n            const linessrc = line.substring(7).split(' ')[0];\n\n            // allocate new ChannelSsrc\n\n            if (!media.ssrcs[linessrc]) {\n                media.ssrcs[linessrc] = {\n                    ssrc: linessrc,\n                    lines: []\n                };\n            }\n            media.ssrcs[linessrc].lines.push(line);\n        });\n        tmp = SDPUtil.findLines(self.media[mediaindex], 'a=ssrc-group:');\n        tmp.forEach(line => {\n            const idx = line.indexOf(' ');\n            const semantics = line.substr(0, idx).substr(13);\n            const ssrcs = line.substr(14 + semantics.length).split(' ');\n\n            if (ssrcs.length) {\n                media.ssrcGroups.push({\n                    semantics,\n                    ssrcs\n                });\n            }\n        });\n    }\n\n    return mediaSSRCs;\n};\n\n/**\n * Returns <tt>true</tt> if this SDP contains given SSRC.\n * @param ssrc the ssrc to check.\n * @returns {boolean} <tt>true</tt> if this SDP contains given SSRC.\n */\nSDP.prototype.containsSSRC = function(ssrc) {\n    // FIXME this code is really strange - improve it if you can\n    const medias = this.getMediaSsrcMap();\n    let result = false;\n\n    Object.keys(medias).forEach(mediaindex => {\n        if (result) {\n            return;\n        }\n        if (medias[mediaindex].ssrcs[ssrc]) {\n            result = true;\n        }\n    });\n\n    return result;\n};\n\n// remove iSAC and CN from SDP\nSDP.prototype.mangle = function() {\n    let i, j, lines, mline, newdesc, rtpmap;\n\n    for (i = 0; i < this.media.length; i++) {\n        lines = this.media[i].split('\\r\\n');\n        lines.pop(); // remove empty last element\n        mline = SDPUtil.parseMLine(lines.shift());\n        if (mline.media !== 'audio') {\n            continue; // eslint-disable-line no-continue\n        }\n        newdesc = '';\n        mline.fmt.length = 0;\n        for (j = 0; j < lines.length; j++) {\n            if (lines[j].substr(0, 9) === 'a=rtpmap:') {\n                rtpmap = SDPUtil.parseRTPMap(lines[j]);\n                if (rtpmap.name === 'CN' || rtpmap.name === 'ISAC') {\n                    continue; // eslint-disable-line no-continue\n                }\n                mline.fmt.push(rtpmap.id);\n            }\n            newdesc += `${lines[j]}\\r\\n`;\n        }\n        this.media[i] = `${SDPUtil.buildMLine(mline)}\\r\\n${newdesc}`;\n    }\n    this.raw = this.session + this.media.join('');\n};\n\n// remove lines matching prefix from session section\nSDP.prototype.removeSessionLines = function(prefix) {\n    const self = this;\n    const lines = SDPUtil.findLines(this.session, prefix);\n\n    lines.forEach(line => {\n        self.session = self.session.replace(`${line}\\r\\n`, '');\n    });\n    this.raw = this.session + this.media.join('');\n\n    return lines;\n};\n\n// remove lines matching prefix from a media section specified by mediaindex\n// TODO: non-numeric mediaindex could match mid\nSDP.prototype.removeMediaLines = function(mediaindex, prefix) {\n    const self = this;\n    const lines = SDPUtil.findLines(this.media[mediaindex], prefix);\n\n    lines.forEach(line => {\n        self.media[mediaindex]\n            = self.media[mediaindex].replace(`${line}\\r\\n`, '');\n    });\n    this.raw = this.session + this.media.join('');\n\n    return lines;\n};\n\n// add content's to a jingle element\nSDP.prototype.toJingle = function(elem, thecreator) {\n    let i, j, k, lines, mline, rtpmap, ssrc, tmp;\n\n    // new bundle plan\n\n    lines = SDPUtil.findLines(this.session, 'a=group:');\n    if (lines.length) {\n        for (i = 0; i < lines.length; i++) {\n            tmp = lines[i].split(' ');\n            const semantics = tmp.shift().substr(8);\n\n            elem.c('group', { xmlns: 'urn:xmpp:jingle:apps:grouping:0',\n                semantics });\n            for (j = 0; j < tmp.length; j++) {\n                elem.c('content', { name: tmp[j] }).up();\n            }\n            elem.up();\n        }\n    }\n    for (i = 0; i < this.media.length; i++) {\n        mline = SDPUtil.parseMLine(this.media[i].split('\\r\\n')[0]);\n        if (!(mline.media === 'audio'\n              || mline.media === 'video'\n              || mline.media === 'application')) {\n            continue; // eslint-disable-line no-continue\n        }\n        const assrcline = SDPUtil.findLine(this.media[i], 'a=ssrc:');\n\n        if (assrcline) {\n            ssrc = assrcline.substring(7).split(' ')[0]; // take the first\n        } else {\n            ssrc = false;\n        }\n\n        elem.c('content', { creator: thecreator,\n            name: mline.media });\n        const amidline = SDPUtil.findLine(this.media[i], 'a=mid:');\n\n        if (amidline) {\n            // prefer identifier from a=mid if present\n            const mid = SDPUtil.parseMID(amidline);\n\n            elem.attrs({ name: mid });\n        }\n\n        if (SDPUtil.findLine(this.media[i], 'a=rtpmap:').length) {\n            elem.c('description',\n                { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\n                    media: mline.media });\n            if (ssrc) {\n                elem.attrs({ ssrc });\n            }\n            for (j = 0; j < mline.fmt.length; j++) {\n                rtpmap\n                    = SDPUtil.findLine(\n                        this.media[i],\n                        `a=rtpmap:${mline.fmt[j]}`);\n                elem.c('payload-type', SDPUtil.parseRTPMap(rtpmap));\n\n                // put any 'a=fmtp:' + mline.fmt[j] lines into <param name=foo\n                // value=bar/>\n                const afmtpline\n                    = SDPUtil.findLine(\n                        this.media[i],\n                        `a=fmtp:${mline.fmt[j]}`);\n\n                if (afmtpline) {\n                    tmp = SDPUtil.parseFmtp(afmtpline);\n\n                    // eslint-disable-next-line max-depth\n                    for (k = 0; k < tmp.length; k++) {\n                        elem.c('parameter', tmp[k]).up();\n                    }\n                }\n\n                // XEP-0293 -- map a=rtcp-fb\n                this.rtcpFbToJingle(i, elem, mline.fmt[j]);\n\n                elem.up();\n            }\n            const crypto\n                = SDPUtil.findLines(this.media[i], 'a=crypto:', this.session);\n\n            if (crypto.length) {\n                elem.c('encryption', { required: 1 });\n                crypto.forEach(\n                    line => elem.c('crypto', SDPUtil.parseCrypto(line)).up());\n                elem.up(); // end of encryption\n            }\n\n            if (ssrc) {\n                const ssrcMap = SDPUtil.parseSSRC(this.media[i]);\n\n                for (const [ availableSsrc, ssrcParameters ] of ssrcMap) {\n                    elem.c('source', {\n                        ssrc: availableSsrc,\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                    });\n\n                    ssrcParameters.forEach(ssrcSdpLine => {\n                        // get everything after first space\n                        const idx = ssrcSdpLine.indexOf(' ');\n                        const kv = ssrcSdpLine.substr(idx + 1);\n\n                        elem.c('parameter');\n                        if (kv.indexOf(':') === -1) {\n                            elem.attrs({ name: kv });\n                        } else {\n                            const name = kv.split(':', 2)[0];\n\n                            elem.attrs({ name });\n\n                            let v = kv.split(':', 2)[1];\n\n                            v = SDPUtil.filterSpecialChars(v);\n                            elem.attrs({ value: v });\n                        }\n                        elem.up();\n                    });\n\n                    elem.up();\n                }\n\n                // XEP-0339 handle ssrc-group attributes\n                const ssrcGroupLines\n                    = SDPUtil.findLines(this.media[i], 'a=ssrc-group:');\n\n                ssrcGroupLines.forEach(line => {\n                    const idx = line.indexOf(' ');\n                    const semantics = line.substr(0, idx).substr(13);\n                    const ssrcs = line.substr(14 + semantics.length).split(' ');\n\n                    if (ssrcs.length) {\n                        elem.c('ssrc-group', { semantics,\n                            xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\n                        ssrcs.forEach(s => elem.c('source', { ssrc: s }).up());\n                        elem.up();\n                    }\n                });\n            }\n\n            const ridLines = SDPUtil.findLines(this.media[i], 'a=rid');\n\n            if (ridLines.length) {\n                // Map a line which looks like \"a=rid:2 send\" to just\n                // the rid (\"2\")\n                const rids = ridLines\n                    .map(ridLine => ridLine.split(':')[1])\n                    .map(ridInfo => ridInfo.split(' ')[0]);\n\n                rids.forEach(rid => {\n                    elem.c('source', {\n                        rid,\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                    });\n                    elem.up();\n                });\n                const unifiedSimulcast\n                    = SDPUtil.findLine(this.media[i], 'a=simulcast');\n\n                if (unifiedSimulcast) {\n                    elem.c('rid-group', {\n                        semantics: 'SIM',\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                    });\n                    rids.forEach(rid => {\n                        elem.c('source', { rid }).up();\n                    });\n                    elem.up();\n                }\n            }\n\n            if (SDPUtil.findLine(this.media[i], 'a=rtcp-mux')) {\n                elem.c('rtcp-mux').up();\n            }\n\n            // XEP-0293 -- map a=rtcp-fb:*\n            this.rtcpFbToJingle(i, elem, '*');\n\n            // XEP-0294\n            lines = SDPUtil.findLines(this.media[i], 'a=extmap:');\n            if (lines.length) {\n                for (j = 0; j < lines.length; j++) {\n                    tmp = SDPUtil.parseExtmap(lines[j]);\n                    elem.c('rtp-hdrext', {\n                        xmlns: 'urn:xmpp:jingle:apps:rtp:rtp-hdrext:0',\n                        uri: tmp.uri,\n                        id: tmp.value\n                    });\n\n                    // eslint-disable-next-line max-depth\n                    if (tmp.hasOwnProperty('direction')) {\n\n                        // eslint-disable-next-line max-depth\n                        switch (tmp.direction) {\n                        case 'sendonly':\n                            elem.attrs({ senders: 'responder' });\n                            break;\n                        case 'recvonly':\n                            elem.attrs({ senders: 'initiator' });\n                            break;\n                        case 'sendrecv':\n                            elem.attrs({ senders: 'both' });\n                            break;\n                        case 'inactive':\n                            elem.attrs({ senders: 'none' });\n                            break;\n                        }\n                    }\n\n                    // TODO: handle params\n                    elem.up();\n                }\n            }\n            elem.up(); // end of description\n        }\n\n        // map ice-ufrag/pwd, dtls fingerprint, candidates\n        this.transportToJingle(i, elem);\n\n        const m = this.media[i];\n\n        if (SDPUtil.findLine(m, 'a=sendrecv', this.session)) {\n            elem.attrs({ senders: 'both' });\n        } else if (SDPUtil.findLine(m, 'a=sendonly', this.session)) {\n            elem.attrs({ senders: 'initiator' });\n        } else if (SDPUtil.findLine(m, 'a=recvonly', this.session)) {\n            elem.attrs({ senders: 'responder' });\n        } else if (SDPUtil.findLine(m, 'a=inactive', this.session)) {\n            elem.attrs({ senders: 'none' });\n        }\n        if (mline.port === '0') {\n            // estos hack to reject an m-line\n            elem.attrs({ senders: 'rejected' });\n        }\n        elem.up(); // end of content\n    }\n    elem.up();\n\n    return elem;\n};\n\nSDP.prototype.transportToJingle = function(mediaindex, elem) {\n    let tmp;\n    const self = this;\n\n    elem.c('transport');\n\n    // XEP-0343 DTLS/SCTP\n    const sctpmap\n        = SDPUtil.findLine(this.media[mediaindex], 'a=sctpmap:', self.session);\n\n    if (sctpmap) {\n        const sctpAttrs = SDPUtil.parseSCTPMap(sctpmap);\n\n        elem.c('sctpmap', {\n            xmlns: 'urn:xmpp:jingle:transports:dtls-sctp:1',\n            number: sctpAttrs[0], /* SCTP port */\n            protocol: sctpAttrs[1] /* protocol */\n        });\n\n        // Optional stream count attribute\n        if (sctpAttrs.length > 2) {\n            elem.attrs({ streams: sctpAttrs[2] });\n        }\n        elem.up();\n    }\n\n    // XEP-0320\n    const fingerprints\n        = SDPUtil.findLines(\n            this.media[mediaindex],\n            'a=fingerprint:',\n            this.session);\n\n    fingerprints.forEach(line => {\n        tmp = SDPUtil.parseFingerprint(line);\n        tmp.xmlns = 'urn:xmpp:jingle:apps:dtls:0';\n        elem.c('fingerprint').t(tmp.fingerprint);\n        delete tmp.fingerprint;\n\n        // eslint-disable-next-line no-param-reassign\n        line\n            = SDPUtil.findLine(\n                self.media[mediaindex],\n                'a=setup:',\n                self.session);\n        if (line) {\n            tmp.setup = line.substr(8);\n        }\n        elem.attrs(tmp);\n        elem.up(); // end of fingerprint\n    });\n    tmp = SDPUtil.iceparams(this.media[mediaindex], this.session);\n    if (tmp) {\n        tmp.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\n        elem.attrs(tmp);\n\n        // XEP-0176\n        const lines\n            = SDPUtil.findLines(\n                this.media[mediaindex],\n                'a=candidate:',\n                this.session);\n\n        if (lines.length) { // add any a=candidate lines\n            lines.forEach(line => {\n                const candidate = SDPUtil.candidateToJingle(line);\n\n                if (self.failICE) {\n                    candidate.ip = '1.1.1.1';\n                }\n                const protocol\n                    = candidate && typeof candidate.protocol === 'string'\n                        ? candidate.protocol.toLowerCase()\n                        : '';\n\n                if ((self.removeTcpCandidates\n                        && (protocol === 'tcp' || protocol === 'ssltcp'))\n                    || (self.removeUdpCandidates && protocol === 'udp')) {\n                    return;\n                }\n                elem.c('candidate', candidate).up();\n            });\n        }\n    }\n    elem.up(); // end of transport\n};\n\n// XEP-0293\nSDP.prototype.rtcpFbToJingle = function(mediaindex, elem, payloadtype) {\n    const lines\n        = SDPUtil.findLines(\n            this.media[mediaindex],\n            `a=rtcp-fb:${payloadtype}`);\n\n    lines.forEach(line => {\n        const tmp = SDPUtil.parseRTCPFB(line);\n\n        if (tmp.type === 'trr-int') {\n            elem.c('rtcp-fb-trr-int', {\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\n                value: tmp.params[0]\n            });\n            elem.up();\n        } else {\n            elem.c('rtcp-fb', {\n                xmlns: 'urn:xmpp:jingle:apps:rtp:rtcp-fb:0',\n                type: tmp.type\n            });\n            if (tmp.params.length > 0) {\n                elem.attrs({ 'subtype': tmp.params[0] });\n            }\n            elem.up();\n        }\n    });\n};\n\nSDP.prototype.rtcpFbFromJingle = function(elem, payloadtype) { // XEP-0293\n    let media = '';\n    let tmp\n        = elem.find(\n            '>rtcp-fb-trr-int[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]');\n\n    if (tmp.length) {\n        media += 'a=rtcp-fb:* trr-int ';\n        if (tmp.attr('value')) {\n            media += tmp.attr('value');\n        } else {\n            media += '0';\n        }\n        media += '\\r\\n';\n    }\n    tmp = elem.find('>rtcp-fb[xmlns=\"urn:xmpp:jingle:apps:rtp:rtcp-fb:0\"]');\n    tmp.each(function() {\n        /* eslint-disable no-invalid-this */\n        media += `a=rtcp-fb:${payloadtype} ${$(this).attr('type')}`;\n        if ($(this).attr('subtype')) {\n            media += ` ${$(this).attr('subtype')}`;\n        }\n        media += '\\r\\n';\n\n        /* eslint-enable no-invalid-this */\n    });\n\n    return media;\n};\n\n// construct an SDP from a jingle stanza\nSDP.prototype.fromJingle = function(jingle) {\n    const self = this;\n\n    this.raw = 'v=0\\r\\n'\n        + 'o=- 1923518516 2 IN IP4 0.0.0.0\\r\\n'// FIXME\n        + 's=-\\r\\n'\n        + 't=0 0\\r\\n';\n\n    // http://tools.ietf.org/html/draft-ietf-mmusic-sdp-bundle-negotiation-04\n    // #section-8\n    const groups\n        = $(jingle).find('>group[xmlns=\"urn:xmpp:jingle:apps:grouping:0\"]');\n\n    if (groups.length) {\n        groups.each((idx, group) => {\n            const contents\n                = $(group)\n                    .find('>content')\n                    .map((_, content) => content.getAttribute('name'))\n                    .get();\n\n            if (contents.length > 0) {\n                self.raw\n                    += `a=group:${\n                        group.getAttribute('semantics')\n                            || group.getAttribute('type')} ${\n                        contents.join(' ')}\\r\\n`;\n            }\n        });\n    }\n\n    this.session = this.raw;\n    jingle.find('>content').each(function() {\n        // eslint-disable-next-line no-invalid-this\n        const m = self.jingle2media($(this));\n\n        self.media.push(m);\n    });\n\n    // reconstruct msid-semantic -- apparently not necessary\n    /*\n     var msid = SDPUtil.parseSSRC(this.raw);\n     if (msid.hasOwnProperty('mslabel')) {\n     this.session += \"a=msid-semantic: WMS \" + msid.mslabel + \"\\r\\n\";\n     }\n     */\n\n    this.raw = this.session + this.media.join('');\n};\n\n// translate a jingle content element into an an SDP media part\nSDP.prototype.jingle2media = function(content) {\n    const desc = content.find('description');\n    let media = '';\n    const self = this;\n    const sctp = content.find(\n        '>transport>sctpmap[xmlns=\"urn:xmpp:jingle:transports:dtls-sctp:1\"]');\n\n    let tmp = { media: desc.attr('media') };\n\n    tmp.port = '1';\n    if (content.attr('senders') === 'rejected') {\n        // estos hack to reject an m-line.\n        tmp.port = '0';\n    }\n    if (content.find('>transport>fingerprint').length\n            || desc.find('encryption').length) {\n        tmp.proto = sctp.length ? 'DTLS/SCTP' : 'RTP/SAVPF';\n    } else {\n        tmp.proto = 'RTP/AVPF';\n    }\n    if (sctp.length) {\n        media += `m=application 1 DTLS/SCTP ${sctp.attr('number')}\\r\\n`;\n        media += `a=sctpmap:${sctp.attr('number')} ${sctp.attr('protocol')}`;\n\n        const streamCount = sctp.attr('streams');\n\n        if (streamCount) {\n            media += ` ${streamCount}\\r\\n`;\n        } else {\n            media += '\\r\\n';\n        }\n    } else {\n        tmp.fmt\n            = desc\n                .find('payload-type')\n                .map(function() {\n                    // eslint-disable-next-line no-invalid-this\n                    return this.getAttribute('id');\n                })\n                .get();\n        media += `${SDPUtil.buildMLine(tmp)}\\r\\n`;\n    }\n\n    media += 'c=IN IP4 0.0.0.0\\r\\n';\n    if (!sctp.length) {\n        media += 'a=rtcp:1 IN IP4 0.0.0.0\\r\\n';\n    }\n    tmp\n        = content.find(\n            '>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]');\n    if (tmp.length) {\n        if (tmp.attr('ufrag')) {\n            media += `${SDPUtil.buildICEUfrag(tmp.attr('ufrag'))}\\r\\n`;\n        }\n        if (tmp.attr('pwd')) {\n            media += `${SDPUtil.buildICEPwd(tmp.attr('pwd'))}\\r\\n`;\n        }\n        tmp.find('>fingerprint').each(function() {\n            /* eslint-disable no-invalid-this */\n            // FIXME: check namespace at some point\n            media += `a=fingerprint:${this.getAttribute('hash')}`;\n            media += ` ${$(this).text()}`;\n            media += '\\r\\n';\n            if (this.getAttribute('setup')) {\n                media += `a=setup:${this.getAttribute('setup')}\\r\\n`;\n            }\n\n            /* eslint-enable no-invalid-this */\n        });\n    }\n    switch (content.attr('senders')) {\n    case 'initiator':\n        media += 'a=sendonly\\r\\n';\n        break;\n    case 'responder':\n        media += 'a=recvonly\\r\\n';\n        break;\n    case 'none':\n        media += 'a=inactive\\r\\n';\n        break;\n    case 'both':\n        media += 'a=sendrecv\\r\\n';\n        break;\n    }\n    media += `a=mid:${content.attr('name')}\\r\\n`;\n\n    // <description><rtcp-mux/></description>\n    // see http://code.google.com/p/libjingle/issues/detail?id=309 -- no spec\n    // though\n    // and http://mail.jabber.org/pipermail/jingle/2011-December/001761.html\n    if (desc.find('rtcp-mux').length) {\n        media += 'a=rtcp-mux\\r\\n';\n    }\n\n    if (desc.find('encryption').length) {\n        desc.find('encryption>crypto').each(function() {\n            /* eslint-disable no-invalid-this */\n            media += `a=crypto:${this.getAttribute('tag')}`;\n            media += ` ${this.getAttribute('crypto-suite')}`;\n            media += ` ${this.getAttribute('key-params')}`;\n            if (this.getAttribute('session-params')) {\n                media += ` ${this.getAttribute('session-params')}`;\n            }\n            media += '\\r\\n';\n\n            /* eslint-enable no-invalid-this */\n        });\n    }\n    desc.find('payload-type').each(function() {\n        /* eslint-disable no-invalid-this */\n        media += `${SDPUtil.buildRTPMap(this)}\\r\\n`;\n        if ($(this).find('>parameter').length) {\n            media += `a=fmtp:${this.getAttribute('id')} `;\n            media\n                += $(this)\n                    .find('parameter')\n                    .map(function() {\n                        const name = this.getAttribute('name');\n\n                        return (\n                            (name ? `${name}=` : '')\n                                + this.getAttribute('value'));\n                    })\n                    .get()\n                    .join('; ');\n            media += '\\r\\n';\n        }\n\n        // xep-0293\n        media += self.rtcpFbFromJingle($(this), this.getAttribute('id'));\n\n        /* eslint-enable no-invalid-this */\n    });\n\n    // xep-0293\n    media += self.rtcpFbFromJingle(desc, '*');\n\n    // xep-0294\n    tmp\n        = desc.find(\n            '>rtp-hdrext[xmlns=\"urn:xmpp:jingle:apps:rtp:rtp-hdrext:0\"]');\n    tmp.each(function() {\n        /* eslint-disable no-invalid-this */\n        media\n            += `a=extmap:${this.getAttribute('id')} ${\n                this.getAttribute('uri')}\\r\\n`;\n\n        /* eslint-enable no-invalid-this */\n    });\n\n    content\n        .find(\n            '>transport[xmlns=\"urn:xmpp:jingle:transports:ice-udp:1\"]'\n                + '>candidate')\n        .each(function() {\n            /* eslint-disable no-invalid-this */\n            let protocol = this.getAttribute('protocol');\n\n            protocol\n                = typeof protocol === 'string' ? protocol.toLowerCase() : '';\n\n            if ((self.removeTcpCandidates\n                    && (protocol === 'tcp' || protocol === 'ssltcp'))\n                || (self.removeUdpCandidates && protocol === 'udp')) {\n                return;\n            } else if (self.failICE) {\n                this.setAttribute('ip', '1.1.1.1');\n            }\n\n            media += SDPUtil.candidateFromJingle(this);\n\n            /* eslint-enable no-invalid-this */\n        });\n\n    // XEP-0339 handle ssrc-group attributes\n    content\n        .find('description>ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\n        .each(function() {\n            /* eslint-disable no-invalid-this */\n            const semantics = this.getAttribute('semantics');\n            const ssrcs\n                = $(this)\n                    .find('>source')\n                    .map(function() {\n                        return this.getAttribute('ssrc');\n                    })\n                    .get();\n\n            if (ssrcs.length) {\n                media += `a=ssrc-group:${semantics} ${ssrcs.join(' ')}\\r\\n`;\n            }\n\n            /* eslint-enable no-invalid-this */\n        });\n\n    tmp\n        = content.find(\n            'description>source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n    tmp.each(function() {\n        /* eslint-disable no-invalid-this */\n        const ssrc = this.getAttribute('ssrc');\n\n        // eslint-disable-next-line newline-per-chained-call\n        $(this).find('>parameter').each(function() {\n            const name = this.getAttribute('name');\n            let value = this.getAttribute('value');\n\n            value = SDPUtil.filterSpecialChars(value);\n            media += `a=ssrc:${ssrc} ${name}`;\n            if (value && value.length) {\n                media += `:${value}`;\n            }\n            media += '\\r\\n';\n        });\n\n        /* eslint-enable no-invalid-this */\n    });\n\n    return media;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/SDP.js","/**\n * Event triggered when participant's muted status changes.\n * @param {string} endpointId the track owner's identifier (MUC nickname)\n * @param {MediaType} mediaType \"audio\" or \"video\"\n * @param {boolean} isMuted the new muted state\n */\nexport const PEER_MUTED_CHANGED = 'signaling.peerMuted';\n\n/**\n * Event triggered when participant's video type changes.\n * @param {string} endpointId the video owner's ID (MUC nickname)\n * @param {VideoType} videoType the new value\n */\nexport const PEER_VIDEO_TYPE_CHANGED = 'signaling.peerVideoType';\n\n\n\n// WEBPACK FOOTER //\n// ./service/RTC/SignalingEvents.js","/* global __filename, module */\nimport EventEmitter from 'events';\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCUtils from './RTCUtils';\n\nconst logger = getLogger(__filename);\n\n/**\n * Maps our handler types to MediaStreamTrack properties.\n */\nconst trackHandler2Prop = {\n    'track_mute': 'onmute', // Not supported on FF\n    'track_unmute': 'onunmute',\n    'track_ended': 'onended'\n};\n\n/**\n * Adds onended/oninactive handler to a MediaStream.\n * @param mediaStream a MediaStream to attach onended/oninactive handler\n * @param handler the handler\n */\nfunction addMediaStreamInactiveHandler(mediaStream, handler) {\n    // Temasys will use onended\n    if (typeof mediaStream.active === 'undefined') {\n        mediaStream.onended = handler;\n    } else {\n        mediaStream.oninactive = handler;\n    }\n}\n\n/**\n * Represents a single media track (either audio or video).\n */\nexport default class JitsiTrack extends EventEmitter {\n    /* eslint-disable max-params */\n    /**\n     * Represents a single media track (either audio or video).\n     * @constructor\n     * @param conference the rtc instance\n     * @param stream the WebRTC MediaStream instance\n     * @param track the WebRTC MediaStreamTrack instance, must be part of\n     * the given <tt>stream</tt>.\n     * @param streamInactiveHandler the function that will handle\n     *        onended/oninactive events of the stream.\n     * @param trackMediaType the media type of the JitsiTrack\n     * @param videoType the VideoType for this track if any\n     */\n    constructor(\n            conference,\n            stream,\n            track,\n            streamInactiveHandler,\n            trackMediaType,\n            videoType) {\n        super();\n\n        // aliases for addListener/removeListener\n        this.addEventListener = this.addListener;\n        this.removeEventListener = this.off = this.removeListener;\n\n        /**\n         * Array with the HTML elements that are displaying the streams.\n         * @type {Array}\n         */\n        this.containers = [];\n        this.conference = conference;\n        this.audioLevel = -1;\n        this.type = trackMediaType;\n        this.track = track;\n        this.videoType = videoType;\n        this.handlers = new Map();\n\n        /**\n         * Indicates whether this JitsiTrack has been disposed. If true, this\n         * JitsiTrack is to be considered unusable and operations involving it\n         * are to fail (e.g. {@link JitsiConference#addTrack(JitsiTrack)},\n         * {@link JitsiConference#removeTrack(JitsiTrack)}).\n         * @type {boolean}\n         */\n        this.disposed = false;\n\n        /**\n         * The inactive handler which will be triggered when the underlying\n         * <tt>MediaStream</tt> ends.\n         *\n         * @private\n         * @type {Function}\n         */\n        this._streamInactiveHandler = streamInactiveHandler;\n\n        this._setStream(stream);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Sets handler to the WebRTC MediaStream or MediaStreamTrack object\n     * depending on the passed type.\n     * @param {string} type the type of the handler that is going to be set\n     * @param {Function} handler the handler.\n     */\n    _setHandler(type, handler) {\n        if (!trackHandler2Prop.hasOwnProperty(type)) {\n            logger.error(`Invalid handler type ${type}`);\n\n            return;\n        }\n        if (handler) {\n            this.handlers.set(type, handler);\n        } else {\n            this.handlers.delete(type);\n        }\n\n        if (this.stream) {\n            // FIXME Why only video tracks?\n            for (const track of this.stream.getVideoTracks()) {\n                track[trackHandler2Prop[type]] = handler;\n            }\n        }\n    }\n\n    /**\n     * Unregisters all event handlers bound to the underlying media stream/track\n     * @private\n     */\n    _unregisterHandlers() {\n        if (!this.stream) {\n            logger.warn(\n                `${this}: unable to unregister handlers - no stream object`);\n\n            return;\n        }\n\n        for (const type of this.handlers.keys()) {\n            // FIXME Why only video tracks?\n            for (const videoTrack of this.stream.getVideoTracks()) {\n                videoTrack[trackHandler2Prop[type]] = undefined;\n            }\n        }\n        if (this._streamInactiveHandler) {\n            addMediaStreamInactiveHandler(this.stream, undefined);\n        }\n    }\n\n    /**\n     * Sets the stream property of JitsiTrack object and sets all stored\n     * handlers to it.\n     *\n     * @param {MediaStream} stream the new stream.\n     * @protected\n     */\n    _setStream(stream) {\n        if (this.stream === stream) {\n            return;\n        }\n\n        this.stream = stream;\n\n        // TODO Practically, that's like the opposite of _unregisterHandlers\n        // i.e. may be abstracted into a function/method called\n        // _registerHandlers for clarity and easing the maintenance of the two\n        // pieces of source code.\n        if (this.stream) {\n            for (const type of this.handlers.keys()) {\n                this._setHandler(type, this.handlers.get(type));\n            }\n            if (this._streamInactiveHandler) {\n                addMediaStreamInactiveHandler(\n                    this.stream, this._streamInactiveHandler);\n            }\n        }\n    }\n\n    /**\n     * Returns the type (audio or video) of this track.\n     */\n    getType() {\n        return this.type;\n    }\n\n    /**\n     * Check if this is an audio track.\n     */\n    isAudioTrack() {\n        return this.getType() === MediaType.AUDIO;\n    }\n\n    /**\n     * Checks whether the underlying WebRTC <tt>MediaStreamTrack</tt> is muted\n     * according to it's 'muted' field status.\n     * @return {boolean} <tt>true</tt> if the underlying\n     * <tt>MediaStreamTrack</tt> is muted or <tt>false</tt> otherwise.\n     */\n    isWebRTCTrackMuted() {\n        return this.track && this.track.muted;\n    }\n\n    /**\n     * Check if this is a video track.\n     */\n    isVideoTrack() {\n        return this.getType() === MediaType.VIDEO;\n    }\n\n    /**\n     * Checks whether this is a local track.\n     * @abstract\n     * @return {boolean} 'true' if it's a local track or 'false' otherwise.\n     */\n    isLocal() {\n        throw new Error('Not implemented by subclass');\n    }\n\n    /**\n     * Returns the WebRTC MediaStream instance.\n     */\n    getOriginalStream() {\n        return this.stream;\n    }\n\n    /**\n     * Returns the ID of the underlying WebRTC Media Stream(if any)\n     * @returns {String|null}\n     */\n    getStreamId() {\n        return this.stream ? this.stream.id : null;\n    }\n\n    /**\n     * Return the underlying WebRTC MediaStreamTrack\n     * @returns {MediaStreamTrack}\n     */\n    getTrack() {\n        return this.track;\n    }\n\n    /**\n     * Returns the ID of the underlying WebRTC MediaStreamTrack(if any)\n     * @returns {String|null}\n     */\n    getTrackId() {\n        return this.track ? this.track.id : null;\n    }\n\n    /**\n     * Return meaningful usage label for this track depending on it's media and\n     * eventual video type.\n     * @returns {string}\n     */\n    getUsageLabel() {\n        if (this.isAudioTrack()) {\n            return 'mic';\n        }\n\n        return this.videoType ? this.videoType : 'default';\n    }\n\n    /**\n     * Eventually will trigger RTCEvents.TRACK_ATTACHED event.\n     * @param container the video/audio container to which this stream is\n     *        attached and for which event will be fired.\n     * @private\n     */\n    _maybeFireTrackAttached(container) {\n        if (this.conference && container) {\n            this.conference._onTrackAttach(this, container);\n        }\n    }\n\n    /**\n     * Attaches the MediaStream of this track to an HTML container.\n     * Adds the container to the list of containers that are displaying the\n     * track. Note that Temasys plugin will replace original audio/video element\n     * with 'object' when stream is being attached to the container for the\n     * first time.\n     * * NOTE * if given container element is not visible when the stream is\n     * being attached it will be shown back given that Temasys plugin is\n     * currently in use.\n     *\n     * @param container the HTML container which can be 'video' or 'audio'\n     * element. It can also be 'object' element if Temasys plugin is in use and\n     * this method has been called previously on video or audio HTML element.\n     *\n     * @returns potentially new instance of container if it was replaced by the\n     *          library. That's the case when Temasys plugin is in use.\n     */\n    attach(container) {\n        let c = container;\n\n        if (this.stream) {\n            c = RTCUtils.attachMediaStream(container, this.stream);\n        }\n        this.containers.push(c);\n        this._maybeFireTrackAttached(c);\n        this._attachTTFMTracker(c);\n\n        return c;\n    }\n\n    /**\n     * Removes this JitsiTrack from the passed HTML container.\n     *\n     * @param container the HTML container to detach from this JitsiTrack. If\n     * <tt>null</tt> or <tt>undefined</tt>, all containers are removed. A\n     * container can be a 'video', 'audio' or 'object' HTML element instance to\n     * which this JitsiTrack is currently attached.\n     */\n    detach(container) {\n        for (let cs = this.containers, i = cs.length - 1; i >= 0; --i) {\n            const c = cs[i];\n\n            if (!container) {\n                RTCUtils.attachMediaStream(c, null);\n            }\n            if (!container || c === container) {\n                cs.splice(i, 1);\n            }\n        }\n\n        if (container) {\n            RTCUtils.attachMediaStream(container, null);\n        }\n    }\n\n    /**\n     * Attach time to first media tracker only if there is conference and only\n     * for the first element.\n     *\n     * @param {HTMLElement} container the HTML container which can be 'video' or\n     * 'audio' element. It can also be 'object' element if Temasys plugin is in\n     * use and this method has been called previously on video or audio HTML\n     * element.\n     * @private\n     */\n    _attachTTFMTracker(container) { // eslint-disable-line no-unused-vars\n        // Should be defined by the classes that are extending JitsiTrack\n    }\n\n    /**\n     * Removes attached event listeners.\n     *\n     * @returns {Promise}\n     */\n    dispose() {\n        this.removeAllListeners();\n\n        this.disposed = true;\n\n        return Promise.resolve();\n    }\n\n    /**\n     * Returns true if this is a video track and the source of the video is a\n     * screen capture as opposed to a camera.\n     */\n    isScreenSharing() {\n        // FIXME: Should be fixed or removed.\n    }\n\n    /**\n     * Returns id of the track.\n     * @returns {string|null} id of the track or null if this is fake track.\n     */\n    getId() {\n        if (this.stream) {\n            return RTCUtils.getStreamID(this.stream);\n        }\n\n        return null;\n    }\n\n    /**\n     * Checks whether the MediaStream is active/not ended.\n     * When there is no check for active we don't have information and so\n     * will return that stream is active (in case of FF).\n     * @returns {boolean} whether MediaStream is active.\n     */\n    isActive() {\n        if (typeof this.stream.active !== 'undefined') {\n            return this.stream.active;\n        }\n\n        return true;\n    }\n\n    /**\n     * Sets the audio level for the stream\n     * @param {number} audioLevel value between 0 and 1\n     * @param {TraceablePeerConnection} [tpc] the peerconnection instance which\n     * is source for the audio level. It can be <tt>undefined</tt> for\n     * a local track if the audio level was measured outside of the\n     * peerconnection (see /modules/statistics/LocalStatsCollector.js).\n     */\n    setAudioLevel(audioLevel, tpc) {\n        if (this.audioLevel !== audioLevel) {\n            this.audioLevel = audioLevel;\n            this.emit(\n                JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n                audioLevel,\n                tpc);\n        }\n    }\n\n    /**\n     * Returns the msid of the stream attached to the JitsiTrack object or null\n     * if no stream is attached.\n     */\n    getMSID() {\n        const streamId = this.getStreamId();\n        const trackId = this.getTrackId();\n\n        return streamId && trackId ? `${streamId} ${trackId}` : null;\n    }\n\n    /**\n     * Sets new audio output device for track's DOM elements. Video tracks are\n     * ignored.\n     * @param {string} audioOutputDeviceId - id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices(), '' for default device\n     * @emits JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED\n     * @returns {Promise}\n     */\n    setAudioOutput(audioOutputDeviceId) {\n        if (!RTCUtils.isDeviceChangeAvailable('output')) {\n            return Promise.reject(\n                new Error('Audio output device change is not supported'));\n        }\n\n        // All audio communication is done through audio tracks, so ignore\n        // changing audio output for video tracks at all.\n        if (this.isVideoTrack()) {\n            return Promise.resolve();\n        }\n\n        return (\n            Promise.all(\n                this.containers.map(\n                    element =>\n                        element.setSinkId(audioOutputDeviceId)\n                            .catch(error => {\n                                logger.warn(\n                                    'Failed to change audio output device on'\n                                        + ' element. Default or previously set'\n                                        + ' audio output device will be used.',\n                                    element,\n                                    error);\n                                throw error;\n                            }))\n            )\n                .then(() => {\n                    this.emit(\n                        JitsiTrackEvents.TRACK_AUDIO_OUTPUT_CHANGED,\n                        audioOutputDeviceId);\n                }));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/JitsiTrack.js","/**\n * The possible camera facing modes. For now support only 'user' and\n * 'environment' because 'left' and 'right' are not used anywhere in our\n * projects at the time of this writing. For more information please refer to\n * https://w3c.github.io/mediacapture-main/getusermedia.html\n * #def-constraint-facingMode.\n *\n * @enum {string}\n */\nconst CameraFacingMode = {\n    /**\n     * The mode which specifies the environment-facing camera.\n     */\n    ENVIRONMENT: 'environment',\n\n    /**\n     * The mode which specifies the user-facing camera.\n     */\n    USER: 'user'\n};\n\nmodule.exports = CameraFacingMode;\n\n\n\n// WEBPACK FOOTER //\n// ./service/RTC/CameraFacingMode.js","var grammar = module.exports = {\n  v: [{\n    name: 'version',\n    reg: /^(\\d*)$/\n  }],\n  o: [{ //o=- 20518 0 IN IP4 203.0.113.1\n    // NB: sessionId will be a String in most cases because it is huge\n    name: 'origin',\n    reg: /^(\\S*) (\\d*) (\\d*) (\\S*) IP(\\d) (\\S*)/,\n    names: ['username', 'sessionId', 'sessionVersion', 'netType', 'ipVer', 'address'],\n    format: '%s %s %d %s IP%d %s'\n  }],\n  // default parsing of these only (though some of these feel outdated)\n  s: [{ name: 'name' }],\n  i: [{ name: 'description' }],\n  u: [{ name: 'uri' }],\n  e: [{ name: 'email' }],\n  p: [{ name: 'phone' }],\n  z: [{ name: 'timezones' }], // TODO: this one can actually be parsed properly..\n  r: [{ name: 'repeats' }],   // TODO: this one can also be parsed properly\n  //k: [{}], // outdated thing ignored\n  t: [{ //t=0 0\n    name: 'timing',\n    reg: /^(\\d*) (\\d*)/,\n    names: ['start', 'stop'],\n    format: '%d %d'\n  }],\n  c: [{ //c=IN IP4 10.47.197.26\n    name: 'connection',\n    reg: /^IN IP(\\d) (\\S*)/,\n    names: ['version', 'ip'],\n    format: 'IN IP%d %s'\n  }],\n  b: [{ //b=AS:4000\n    push: 'bandwidth',\n    reg: /^(TIAS|AS|CT|RR|RS):(\\d*)/,\n    names: ['type', 'limit'],\n    format: '%s:%s'\n  }],\n  m: [{ //m=video 51744 RTP/AVP 126 97 98 34 31\n    // NB: special - pushes to session\n    // TODO: rtp/fmtp should be filtered by the payloads found here?\n    reg: /^(\\w*) (\\d*) ([\\w\\/]*)(?: (.*))?/,\n    names: ['type', 'port', 'protocol', 'payloads'],\n    format: '%s %d %s %s'\n  }],\n  a: [\n    { //a=rtpmap:110 opus/48000/2\n      push: 'rtp',\n      reg: /^rtpmap:(\\d*) ([\\w\\-\\.]*)(?:\\s*\\/(\\d*)(?:\\s*\\/(\\S*))?)?/,\n      names: ['payload', 'codec', 'rate', 'encoding'],\n      format: function (o) {\n        return (o.encoding) ?\n          'rtpmap:%d %s/%s/%s':\n          o.rate ?\n          'rtpmap:%d %s/%s':\n          'rtpmap:%d %s';\n      }\n    },\n    { //a=fmtp:108 profile-level-id=24;object=23;bitrate=64000\n      //a=fmtp:111 minptime=10; useinbandfec=1\n      push: 'fmtp',\n      reg: /^fmtp:(\\d*) ([\\S| ]*)/,\n      names: ['payload', 'config'],\n      format: 'fmtp:%d %s'\n    },\n    { //a=control:streamid=0\n      name: 'control',\n      reg: /^control:(.*)/,\n      format: 'control:%s'\n    },\n    { //a=rtcp:65179 IN IP4 193.84.77.194\n      name: 'rtcp',\n      reg: /^rtcp:(\\d*)(?: (\\S*) IP(\\d) (\\S*))?/,\n      names: ['port', 'netType', 'ipVer', 'address'],\n      format: function (o) {\n        return (o.address != null) ?\n          'rtcp:%d %s IP%d %s':\n          'rtcp:%d';\n      }\n    },\n    { //a=rtcp-fb:98 trr-int 100\n      push: 'rtcpFbTrrInt',\n      reg: /^rtcp-fb:(\\*|\\d*) trr-int (\\d*)/,\n      names: ['payload', 'value'],\n      format: 'rtcp-fb:%d trr-int %d'\n    },\n    { //a=rtcp-fb:98 nack rpsi\n      push: 'rtcpFb',\n      reg: /^rtcp-fb:(\\*|\\d*) ([\\w-_]*)(?: ([\\w-_]*))?/,\n      names: ['payload', 'type', 'subtype'],\n      format: function (o) {\n        return (o.subtype != null) ?\n          'rtcp-fb:%s %s %s':\n          'rtcp-fb:%s %s';\n      }\n    },\n    { //a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n      //a=extmap:1/recvonly URI-gps-string\n      push: 'ext',\n      reg: /^extmap:(\\d+)(?:\\/(\\w+))? (\\S*)(?: (\\S*))?/,\n      names: ['value', 'direction', 'uri', 'config'],\n      format: function (o) {\n        return 'extmap:%d' + (o.direction ? '/%s' : '%v') + ' %s' + (o.config ? ' %s' : '');\n      }\n    },\n    { //a=crypto:1 AES_CM_128_HMAC_SHA1_80 inline:PS1uQCVeeCFCanVmcjkpPywjNWhcYD0mXXtxaVBR|2^20|1:32\n      push: 'crypto',\n      reg: /^crypto:(\\d*) ([\\w_]*) (\\S*)(?: (\\S*))?/,\n      names: ['id', 'suite', 'config', 'sessionConfig'],\n      format: function (o) {\n        return (o.sessionConfig != null) ?\n          'crypto:%d %s %s %s':\n          'crypto:%d %s %s';\n      }\n    },\n    { //a=setup:actpass\n      name: 'setup',\n      reg: /^setup:(\\w*)/,\n      format: 'setup:%s'\n    },\n    { //a=mid:1\n      name: 'mid',\n      reg: /^mid:([^\\s]*)/,\n      format: 'mid:%s'\n    },\n    { //a=msid:0c8b064d-d807-43b4-b434-f92a889d8587 98178685-d409-46e0-8e16-7ef0db0db64a\n      name: 'msid',\n      reg: /^msid:(.*)/,\n      format: 'msid:%s'\n    },\n    { //a=ptime:20\n      name: 'ptime',\n      reg: /^ptime:(\\d*)/,\n      format: 'ptime:%d'\n    },\n    { //a=maxptime:60\n      name: 'maxptime',\n      reg: /^maxptime:(\\d*)/,\n      format: 'maxptime:%d'\n    },\n    { //a=sendrecv\n      name: 'direction',\n      reg: /^(sendrecv|recvonly|sendonly|inactive)/\n    },\n    { //a=ice-lite\n      name: 'icelite',\n      reg: /^(ice-lite)/\n    },\n    { //a=ice-ufrag:F7gI\n      name: 'iceUfrag',\n      reg: /^ice-ufrag:(\\S*)/,\n      format: 'ice-ufrag:%s'\n    },\n    { //a=ice-pwd:x9cml/YzichV2+XlhiMu8g\n      name: 'icePwd',\n      reg: /^ice-pwd:(\\S*)/,\n      format: 'ice-pwd:%s'\n    },\n    { //a=fingerprint:SHA-1 00:11:22:33:44:55:66:77:88:99:AA:BB:CC:DD:EE:FF:00:11:22:33\n      name: 'fingerprint',\n      reg: /^fingerprint:(\\S*) (\\S*)/,\n      names: ['type', 'hash'],\n      format: 'fingerprint:%s %s'\n    },\n    { //a=candidate:0 1 UDP 2113667327 203.0.113.1 54400 typ host\n      //a=candidate:1162875081 1 udp 2113937151 192.168.34.75 60017 typ host generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 udp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 generation 0 network-id 3 network-cost 10\n      //a=candidate:229815620 1 tcp 1518280447 192.168.150.19 60017 typ host tcptype active generation 0 network-id 3 network-cost 10\n      //a=candidate:3289912957 2 tcp 1845501695 193.84.77.194 60017 typ srflx raddr 192.168.34.75 rport 60017 tcptype passive generation 0 network-id 3 network-cost 10\n      push:'candidates',\n      reg: /^candidate:(\\S*) (\\d*) (\\S*) (\\d*) (\\S*) (\\d*) typ (\\S*)(?: raddr (\\S*) rport (\\d*))?(?: tcptype (\\S*))?(?: generation (\\d*))?(?: network-id (\\d*))?(?: network-cost (\\d*))?/,\n      names: ['foundation', 'component', 'transport', 'priority', 'ip', 'port', 'type', 'raddr', 'rport', 'tcptype', 'generation', 'network-id', 'network-cost'],\n      format: function (o) {\n        var str = 'candidate:%s %d %s %d %s %d typ %s';\n\n        str += (o.raddr != null) ? ' raddr %s rport %d' : '%v%v';\n\n        // NB: candidate has three optional chunks, so %void middles one if it's missing\n        str += (o.tcptype != null) ? ' tcptype %s' : '%v';\n\n        if (o.generation != null) {\n          str += ' generation %d';\n        }\n\n        str += (o['network-id'] != null) ? ' network-id %d' : '%v';\n        str += (o['network-cost'] != null) ? ' network-cost %d' : '%v';\n        return str;\n      }\n    },\n    { //a=end-of-candidates (keep after the candidates line for readability)\n      name: 'endOfCandidates',\n      reg: /^(end-of-candidates)/\n    },\n    { //a=remote-candidates:1 203.0.113.1 54400 2 203.0.113.1 54401 ...\n      name: 'remoteCandidates',\n      reg: /^remote-candidates:(.*)/,\n      format: 'remote-candidates:%s'\n    },\n    { //a=ice-options:google-ice\n      name: 'iceOptions',\n      reg: /^ice-options:(\\S*)/,\n      format: 'ice-options:%s'\n    },\n    { //a=ssrc:2566107569 cname:t9YU8M1UxTF8Y1A1\n      push: 'ssrcs',\n      reg: /^ssrc:(\\d*) ([\\w_]*)(?::(.*))?/,\n      names: ['id', 'attribute', 'value'],\n      format: function (o) {\n        var str = 'ssrc:%d';\n        if (o.attribute != null) {\n          str += ' %s';\n          if (o.value != null) {\n            str += ':%s';\n          }\n        }\n        return str;\n      }\n    },\n    { //a=ssrc-group:FEC 1 2\n      //a=ssrc-group:FEC-FR 3004364195 1080772241\n      push: 'ssrcGroups',\n      // token-char = %x21 / %x23-27 / %x2A-2B / %x2D-2E / %x30-39 / %x41-5A / %x5E-7E\n      reg: /^ssrc-group:([\\x21\\x23\\x24\\x25\\x26\\x27\\x2A\\x2B\\x2D\\x2E\\w]*) (.*)/,\n      names: ['semantics', 'ssrcs'],\n      format: 'ssrc-group:%s %s'\n    },\n    { //a=msid-semantic: WMS Jvlam5X3SX1OP6pn20zWogvaKJz5Hjf9OnlV\n      name: 'msidSemantic',\n      reg: /^msid-semantic:\\s?(\\w*) (\\S*)/,\n      names: ['semantic', 'token'],\n      format: 'msid-semantic: %s %s' // space after ':' is not accidental\n    },\n    { //a=group:BUNDLE audio video\n      push: 'groups',\n      reg: /^group:(\\w*) (.*)/,\n      names: ['type', 'mids'],\n      format: 'group:%s %s'\n    },\n    { //a=rtcp-mux\n      name: 'rtcpMux',\n      reg: /^(rtcp-mux)/\n    },\n    { //a=rtcp-rsize\n      name: 'rtcpRsize',\n      reg: /^(rtcp-rsize)/\n    },\n    { //a=sctpmap:5000 webrtc-datachannel 1024\n      name: 'sctpmap',\n      reg: /^sctpmap:([\\w_\\/]*) (\\S*)(?: (\\S*))?/,\n      names: ['sctpmapNumber', 'app', 'maxMessageSize'],\n      format: function (o) {\n        return (o.maxMessageSize != null) ?\n          'sctpmap:%s %s %s' :\n          'sctpmap:%s %s';\n      }\n    },\n    { //a=x-google-flag:conference\n      name: 'xGoogleFlag',\n      reg: /^x-google-flag:([^\\s]*)/,\n      format: 'x-google-flag:%s'\n    },\n    { //a=rid:1 send max-width=1280;max-height=720;max-fps=30;depend=0\n      push: 'rids',\n      reg: /^rid:([\\d\\w]+) (\\w+)(?: ([\\S| ]*))?/,\n      names: ['id', 'direction', 'params'],\n      format: function (o) {\n        return (o.params) ? 'rid:%s %s %s' : 'rid:%s %s';\n      }\n    },\n    { //a=imageattr:97 send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320] recv [x=330,y=250]\n      //a=imageattr:* send [x=800,y=640] recv *\n      //a=imageattr:100 recv [x=320,y=240]\n      push: 'imageattrs',\n      reg: new RegExp(\n        //a=imageattr:97\n        '^imageattr:(\\\\d+|\\\\*)' +\n        //send [x=800,y=640,sar=1.1,q=0.6] [x=480,y=320]\n        '[\\\\s\\\\t]+(send|recv)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*)' +\n        //recv [x=330,y=250]\n        '(?:[\\\\s\\\\t]+(recv|send)[\\\\s\\\\t]+(\\\\*|\\\\[\\\\S+\\\\](?:[\\\\s\\\\t]+\\\\[\\\\S+\\\\])*))?'\n      ),\n      names: ['pt', 'dir1', 'attrs1', 'dir2', 'attrs2'],\n      format: function (o) {\n        return 'imageattr:%s %s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //a=simulcast:send 1,2,3;~4,~5 recv 6;~7,~8\n      //a=simulcast:recv 1;4,5 send 6;7\n      name: 'simulcast',\n      reg: new RegExp(\n        //a=simulcast:\n        '^simulcast:' +\n        //send 1,2,3;~4,~5\n        '(send|recv) ([a-zA-Z0-9\\\\-_~;,]+)' +\n        //space + recv 6;~7,~8\n        '(?:\\\\s?(send|recv) ([a-zA-Z0-9\\\\-_~;,]+))?' +\n        //end\n        '$'\n      ),\n      names: ['dir1', 'list1', 'dir2', 'list2'],\n      format: function (o) {\n        return 'simulcast:%s %s' + (o.dir2 ? ' %s %s' : '');\n      }\n    },\n    { //Old simulcast draft 03 (implemented by Firefox)\n      //  https://tools.ietf.org/html/draft-ietf-mmusic-sdp-simulcast-03\n      //a=simulcast: recv pt=97;98 send pt=97\n      //a=simulcast: send rid=5;6;7 paused=6,7\n      name: 'simulcast_03',\n      reg: /^simulcast:[\\s\\t]+([\\S+\\s\\t]+)$/,\n      names: ['value'],\n      format: 'simulcast: %s'\n    },\n    {\n      //a=framerate:25\n      //a=framerate:29.97\n      name: 'framerate',\n      reg: /^framerate:(\\d+(?:$|\\.\\d+))/,\n      format: 'framerate:%s'\n    },\n    { // any a= that we don't understand is kepts verbatim on media.invalid\n      push: 'invalid',\n      names: ['value']\n    }\n  ]\n};\n\n// set sensible defaults to avoid polluting the grammar with boring details\nObject.keys(grammar).forEach(function (key) {\n  var objs = grammar[key];\n  objs.forEach(function (obj) {\n    if (!obj.reg) {\n      obj.reg = /(.*)/;\n    }\n    if (!obj.format) {\n      obj.format = '%s';\n    }\n  });\n});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp-transform/lib/grammar.js\n// module id = 56\n// module chunks = 0"," /* eslint-env node */\n'use strict';\n\n// SDP helpers.\nvar SDPUtils = {};\n\n// Generate an alphanumeric identifier for cname or mids.\n// TODO: use UUIDs instead? https://gist.github.com/jed/982883\nSDPUtils.generateIdentifier = function() {\n  return Math.random().toString(36).substr(2, 10);\n};\n\n// The RTCP CNAME used by all peerconnections from the same JS.\nSDPUtils.localCName = SDPUtils.generateIdentifier();\n\n// Splits SDP into lines, dealing with both CRLF and LF.\nSDPUtils.splitLines = function(blob) {\n  return blob.trim().split('\\n').map(function(line) {\n    return line.trim();\n  });\n};\n// Splits SDP into sessionpart and mediasections. Ensures CRLF.\nSDPUtils.splitSections = function(blob) {\n  var parts = blob.split('\\nm=');\n  return parts.map(function(part, index) {\n    return (index > 0 ? 'm=' + part : part).trim() + '\\r\\n';\n  });\n};\n\n// Returns lines that start with a certain prefix.\nSDPUtils.matchPrefix = function(blob, prefix) {\n  return SDPUtils.splitLines(blob).filter(function(line) {\n    return line.indexOf(prefix) === 0;\n  });\n};\n\n// Parses an ICE candidate line. Sample input:\n// candidate:702786350 2 udp 41819902 8.8.8.8 60769 typ relay raddr 8.8.8.8\n// rport 55996\"\nSDPUtils.parseCandidate = function(line) {\n  var parts;\n  // Parse both variants.\n  if (line.indexOf('a=candidate:') === 0) {\n    parts = line.substring(12).split(' ');\n  } else {\n    parts = line.substring(10).split(' ');\n  }\n\n  var candidate = {\n    foundation: parts[0],\n    component: parseInt(parts[1], 10),\n    protocol: parts[2].toLowerCase(),\n    priority: parseInt(parts[3], 10),\n    ip: parts[4],\n    port: parseInt(parts[5], 10),\n    // skip parts[6] == 'typ'\n    type: parts[7]\n  };\n\n  for (var i = 8; i < parts.length; i += 2) {\n    switch (parts[i]) {\n      case 'raddr':\n        candidate.relatedAddress = parts[i + 1];\n        break;\n      case 'rport':\n        candidate.relatedPort = parseInt(parts[i + 1], 10);\n        break;\n      case 'tcptype':\n        candidate.tcpType = parts[i + 1];\n        break;\n      case 'ufrag':\n        candidate.ufrag = parts[i + 1]; // for backward compability.\n        candidate.usernameFragment = parts[i + 1];\n        break;\n      default: // extension handling, in particular ufrag\n        candidate[parts[i]] = parts[i + 1];\n        break;\n    }\n  }\n  return candidate;\n};\n\n// Translates a candidate object into SDP candidate attribute.\nSDPUtils.writeCandidate = function(candidate) {\n  var sdp = [];\n  sdp.push(candidate.foundation);\n  sdp.push(candidate.component);\n  sdp.push(candidate.protocol.toUpperCase());\n  sdp.push(candidate.priority);\n  sdp.push(candidate.ip);\n  sdp.push(candidate.port);\n\n  var type = candidate.type;\n  sdp.push('typ');\n  sdp.push(type);\n  if (type !== 'host' && candidate.relatedAddress &&\n      candidate.relatedPort) {\n    sdp.push('raddr');\n    sdp.push(candidate.relatedAddress); // was: relAddr\n    sdp.push('rport');\n    sdp.push(candidate.relatedPort); // was: relPort\n  }\n  if (candidate.tcpType && candidate.protocol.toLowerCase() === 'tcp') {\n    sdp.push('tcptype');\n    sdp.push(candidate.tcpType);\n  }\n  if (candidate.ufrag) {\n    sdp.push('ufrag');\n    sdp.push(candidate.ufrag);\n  }\n  return 'candidate:' + sdp.join(' ');\n};\n\n// Parses an ice-options line, returns an array of option tags.\n// a=ice-options:foo bar\nSDPUtils.parseIceOptions = function(line) {\n  return line.substr(14).split(' ');\n}\n\n// Parses an rtpmap line, returns RTCRtpCoddecParameters. Sample input:\n// a=rtpmap:111 opus/48000/2\nSDPUtils.parseRtpMap = function(line) {\n  var parts = line.substr(9).split(' ');\n  var parsed = {\n    payloadType: parseInt(parts.shift(), 10) // was: id\n  };\n\n  parts = parts[0].split('/');\n\n  parsed.name = parts[0];\n  parsed.clockRate = parseInt(parts[1], 10); // was: clockrate\n  // was: channels\n  parsed.numChannels = parts.length === 3 ? parseInt(parts[2], 10) : 1;\n  return parsed;\n};\n\n// Generate an a=rtpmap line from RTCRtpCodecCapability or\n// RTCRtpCodecParameters.\nSDPUtils.writeRtpMap = function(codec) {\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  return 'a=rtpmap:' + pt + ' ' + codec.name + '/' + codec.clockRate +\n      (codec.numChannels !== 1 ? '/' + codec.numChannels : '') + '\\r\\n';\n};\n\n// Parses an a=extmap line (headerextension from RFC 5285). Sample input:\n// a=extmap:2 urn:ietf:params:rtp-hdrext:toffset\n// a=extmap:2/sendonly urn:ietf:params:rtp-hdrext:toffset\nSDPUtils.parseExtmap = function(line) {\n  var parts = line.substr(9).split(' ');\n  return {\n    id: parseInt(parts[0], 10),\n    direction: parts[0].indexOf('/') > 0 ? parts[0].split('/')[1] : 'sendrecv',\n    uri: parts[1]\n  };\n};\n\n// Generates a=extmap line from RTCRtpHeaderExtensionParameters or\n// RTCRtpHeaderExtension.\nSDPUtils.writeExtmap = function(headerExtension) {\n  return 'a=extmap:' + (headerExtension.id || headerExtension.preferredId) +\n      (headerExtension.direction && headerExtension.direction !== 'sendrecv'\n          ? '/' + headerExtension.direction\n          : '') +\n      ' ' + headerExtension.uri + '\\r\\n';\n};\n\n// Parses an ftmp line, returns dictionary. Sample input:\n// a=fmtp:96 vbr=on;cng=on\n// Also deals with vbr=on; cng=on\nSDPUtils.parseFmtp = function(line) {\n  var parsed = {};\n  var kv;\n  var parts = line.substr(line.indexOf(' ') + 1).split(';');\n  for (var j = 0; j < parts.length; j++) {\n    kv = parts[j].trim().split('=');\n    parsed[kv[0].trim()] = kv[1];\n  }\n  return parsed;\n};\n\n// Generates an a=ftmp line from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeFmtp = function(codec) {\n  var line = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.parameters && Object.keys(codec.parameters).length) {\n    var params = [];\n    Object.keys(codec.parameters).forEach(function(param) {\n      params.push(param + '=' + codec.parameters[param]);\n    });\n    line += 'a=fmtp:' + pt + ' ' + params.join(';') + '\\r\\n';\n  }\n  return line;\n};\n\n// Parses an rtcp-fb line, returns RTCPRtcpFeedback object. Sample input:\n// a=rtcp-fb:98 nack rpsi\nSDPUtils.parseRtcpFb = function(line) {\n  var parts = line.substr(line.indexOf(' ') + 1).split(' ');\n  return {\n    type: parts.shift(),\n    parameter: parts.join(' ')\n  };\n};\n// Generate a=rtcp-fb lines from RTCRtpCodecCapability or RTCRtpCodecParameters.\nSDPUtils.writeRtcpFb = function(codec) {\n  var lines = '';\n  var pt = codec.payloadType;\n  if (codec.preferredPayloadType !== undefined) {\n    pt = codec.preferredPayloadType;\n  }\n  if (codec.rtcpFeedback && codec.rtcpFeedback.length) {\n    // FIXME: special handling for trr-int?\n    codec.rtcpFeedback.forEach(function(fb) {\n      lines += 'a=rtcp-fb:' + pt + ' ' + fb.type +\n      (fb.parameter && fb.parameter.length ? ' ' + fb.parameter : '') +\n          '\\r\\n';\n    });\n  }\n  return lines;\n};\n\n// Parses an RFC 5576 ssrc media attribute. Sample input:\n// a=ssrc:3735928559 cname:something\nSDPUtils.parseSsrcMedia = function(line) {\n  var sp = line.indexOf(' ');\n  var parts = {\n    ssrc: parseInt(line.substr(7, sp - 7), 10)\n  };\n  var colon = line.indexOf(':', sp);\n  if (colon > -1) {\n    parts.attribute = line.substr(sp + 1, colon - sp - 1);\n    parts.value = line.substr(colon + 1);\n  } else {\n    parts.attribute = line.substr(sp + 1);\n  }\n  return parts;\n};\n\n// Extracts the MID (RFC 5888) from a media section.\n// returns the MID or undefined if no mid line was found.\nSDPUtils.getMid = function(mediaSection) {\n  var mid = SDPUtils.matchPrefix(mediaSection, 'a=mid:')[0];\n  if (mid) {\n    return mid.substr(6);\n  }\n}\n\nSDPUtils.parseFingerprint = function(line) {\n  var parts = line.substr(14).split(' ');\n  return {\n    algorithm: parts[0].toLowerCase(), // algorithm is case-sensitive in Edge.\n    value: parts[1]\n  };\n};\n\n// Extracts DTLS parameters from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the fingerprint line as input. See also getIceParameters.\nSDPUtils.getDtlsParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.matchPrefix(mediaSection + sessionpart,\n      'a=fingerprint:');\n  // Note: a=setup line is ignored since we use the 'auto' role.\n  // Note2: 'algorithm' is not case sensitive except in Edge.\n  return {\n    role: 'auto',\n    fingerprints: lines.map(SDPUtils.parseFingerprint)\n  };\n};\n\n// Serializes DTLS parameters to SDP.\nSDPUtils.writeDtlsParameters = function(params, setupType) {\n  var sdp = 'a=setup:' + setupType + '\\r\\n';\n  params.fingerprints.forEach(function(fp) {\n    sdp += 'a=fingerprint:' + fp.algorithm + ' ' + fp.value + '\\r\\n';\n  });\n  return sdp;\n};\n// Parses ICE information from SDP media section or sessionpart.\n// FIXME: for consistency with other functions this should only\n//   get the ice-ufrag and ice-pwd lines as input.\nSDPUtils.getIceParameters = function(mediaSection, sessionpart) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  // Search in session part, too.\n  lines = lines.concat(SDPUtils.splitLines(sessionpart));\n  var iceParameters = {\n    usernameFragment: lines.filter(function(line) {\n      return line.indexOf('a=ice-ufrag:') === 0;\n    })[0].substr(12),\n    password: lines.filter(function(line) {\n      return line.indexOf('a=ice-pwd:') === 0;\n    })[0].substr(10)\n  };\n  return iceParameters;\n};\n\n// Serializes ICE parameters to SDP.\nSDPUtils.writeIceParameters = function(params) {\n  return 'a=ice-ufrag:' + params.usernameFragment + '\\r\\n' +\n      'a=ice-pwd:' + params.password + '\\r\\n';\n};\n\n// Parses the SDP media section and returns RTCRtpParameters.\nSDPUtils.parseRtpParameters = function(mediaSection) {\n  var description = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: [],\n    rtcp: []\n  };\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  for (var i = 3; i < mline.length; i++) { // find all codecs from mline[3..]\n    var pt = mline[i];\n    var rtpmapline = SDPUtils.matchPrefix(\n        mediaSection, 'a=rtpmap:' + pt + ' ')[0];\n    if (rtpmapline) {\n      var codec = SDPUtils.parseRtpMap(rtpmapline);\n      var fmtps = SDPUtils.matchPrefix(\n          mediaSection, 'a=fmtp:' + pt + ' ');\n      // Only the first a=fmtp:<pt> is considered.\n      codec.parameters = fmtps.length ? SDPUtils.parseFmtp(fmtps[0]) : {};\n      codec.rtcpFeedback = SDPUtils.matchPrefix(\n          mediaSection, 'a=rtcp-fb:' + pt + ' ')\n        .map(SDPUtils.parseRtcpFb);\n      description.codecs.push(codec);\n      // parse FEC mechanisms from rtpmap lines.\n      switch (codec.name.toUpperCase()) {\n        case 'RED':\n        case 'ULPFEC':\n          description.fecMechanisms.push(codec.name.toUpperCase());\n          break;\n        default: // only RED and ULPFEC are recognized as FEC mechanisms.\n          break;\n      }\n    }\n  }\n  SDPUtils.matchPrefix(mediaSection, 'a=extmap:').forEach(function(line) {\n    description.headerExtensions.push(SDPUtils.parseExtmap(line));\n  });\n  // FIXME: parse rtcp.\n  return description;\n};\n\n// Generates parts of the SDP media section describing the capabilities /\n// parameters.\nSDPUtils.writeRtpDescription = function(kind, caps) {\n  var sdp = '';\n\n  // Build the mline.\n  sdp += 'm=' + kind + ' ';\n  sdp += caps.codecs.length > 0 ? '9' : '0'; // reject if no codecs.\n  sdp += ' UDP/TLS/RTP/SAVPF ';\n  sdp += caps.codecs.map(function(codec) {\n    if (codec.preferredPayloadType !== undefined) {\n      return codec.preferredPayloadType;\n    }\n    return codec.payloadType;\n  }).join(' ') + '\\r\\n';\n\n  sdp += 'c=IN IP4 0.0.0.0\\r\\n';\n  sdp += 'a=rtcp:9 IN IP4 0.0.0.0\\r\\n';\n\n  // Add a=rtpmap lines for each codec. Also fmtp and rtcp-fb.\n  caps.codecs.forEach(function(codec) {\n    sdp += SDPUtils.writeRtpMap(codec);\n    sdp += SDPUtils.writeFmtp(codec);\n    sdp += SDPUtils.writeRtcpFb(codec);\n  });\n  var maxptime = 0;\n  caps.codecs.forEach(function(codec) {\n    if (codec.maxptime > maxptime) {\n      maxptime = codec.maxptime;\n    }\n  });\n  if (maxptime > 0) {\n    sdp += 'a=maxptime:' + maxptime + '\\r\\n';\n  }\n  sdp += 'a=rtcp-mux\\r\\n';\n\n  caps.headerExtensions.forEach(function(extension) {\n    sdp += SDPUtils.writeExtmap(extension);\n  });\n  // FIXME: write fecMechanisms.\n  return sdp;\n};\n\n// Parses the SDP media section and returns an array of\n// RTCRtpEncodingParameters.\nSDPUtils.parseRtpEncodingParameters = function(mediaSection) {\n  var encodingParameters = [];\n  var description = SDPUtils.parseRtpParameters(mediaSection);\n  var hasRed = description.fecMechanisms.indexOf('RED') !== -1;\n  var hasUlpfec = description.fecMechanisms.indexOf('ULPFEC') !== -1;\n\n  // filter a=ssrc:... cname:, ignore PlanB-msid\n  var ssrcs = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'cname';\n  });\n  var primarySsrc = ssrcs.length > 0 && ssrcs[0].ssrc;\n  var secondarySsrc;\n\n  var flows = SDPUtils.matchPrefix(mediaSection, 'a=ssrc-group:FID')\n  .map(function(line) {\n    var parts = line.split(' ');\n    parts.shift();\n    return parts.map(function(part) {\n      return parseInt(part, 10);\n    });\n  });\n  if (flows.length > 0 && flows[0].length > 1 && flows[0][0] === primarySsrc) {\n    secondarySsrc = flows[0][1];\n  }\n\n  description.codecs.forEach(function(codec) {\n    if (codec.name.toUpperCase() === 'RTX' && codec.parameters.apt) {\n      var encParam = {\n        ssrc: primarySsrc,\n        codecPayloadType: parseInt(codec.parameters.apt, 10),\n        rtx: {\n          ssrc: secondarySsrc\n        }\n      };\n      encodingParameters.push(encParam);\n      if (hasRed) {\n        encParam = JSON.parse(JSON.stringify(encParam));\n        encParam.fec = {\n          ssrc: secondarySsrc,\n          mechanism: hasUlpfec ? 'red+ulpfec' : 'red'\n        };\n        encodingParameters.push(encParam);\n      }\n    }\n  });\n  if (encodingParameters.length === 0 && primarySsrc) {\n    encodingParameters.push({\n      ssrc: primarySsrc\n    });\n  }\n\n  // we support both b=AS and b=TIAS but interpret AS as TIAS.\n  var bandwidth = SDPUtils.matchPrefix(mediaSection, 'b=');\n  if (bandwidth.length) {\n    if (bandwidth[0].indexOf('b=TIAS:') === 0) {\n      bandwidth = parseInt(bandwidth[0].substr(7), 10);\n    } else if (bandwidth[0].indexOf('b=AS:') === 0) {\n      // use formula from JSEP to convert b=AS to TIAS value.\n      bandwidth = parseInt(bandwidth[0].substr(5), 10) * 1000 * 0.95\n          - (50 * 40 * 8);\n    } else {\n      bandwidth = undefined;\n    }\n    encodingParameters.forEach(function(params) {\n      params.maxBitrate = bandwidth;\n    });\n  }\n  return encodingParameters;\n};\n\n// parses http://draft.ortc.org/#rtcrtcpparameters*\nSDPUtils.parseRtcpParameters = function(mediaSection) {\n  var rtcpParameters = {};\n\n  var cname;\n  // Gets the first SSRC. Note that with RTX there might be multiple\n  // SSRCs.\n  var remoteSsrc = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n      .map(function(line) {\n        return SDPUtils.parseSsrcMedia(line);\n      })\n      .filter(function(obj) {\n        return obj.attribute === 'cname';\n      })[0];\n  if (remoteSsrc) {\n    rtcpParameters.cname = remoteSsrc.value;\n    rtcpParameters.ssrc = remoteSsrc.ssrc;\n  }\n\n  // Edge uses the compound attribute instead of reducedSize\n  // compound is !reducedSize\n  var rsize = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-rsize');\n  rtcpParameters.reducedSize = rsize.length > 0;\n  rtcpParameters.compound = rsize.length === 0;\n\n  // parses the rtcp-mux attrіbute.\n  // Note that Edge does not support unmuxed RTCP.\n  var mux = SDPUtils.matchPrefix(mediaSection, 'a=rtcp-mux');\n  rtcpParameters.mux = mux.length > 0;\n\n  return rtcpParameters;\n};\n\n// parses either a=msid: or a=ssrc:... msid lines and returns\n// the id of the MediaStream and MediaStreamTrack.\nSDPUtils.parseMsid = function(mediaSection) {\n  var parts;\n  var spec = SDPUtils.matchPrefix(mediaSection, 'a=msid:');\n  if (spec.length === 1) {\n    parts = spec[0].substr(7).split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n  var planB = SDPUtils.matchPrefix(mediaSection, 'a=ssrc:')\n  .map(function(line) {\n    return SDPUtils.parseSsrcMedia(line);\n  })\n  .filter(function(parts) {\n    return parts.attribute === 'msid';\n  });\n  if (planB.length > 0) {\n    parts = planB[0].value.split(' ');\n    return {stream: parts[0], track: parts[1]};\n  }\n};\n\n// Generate a session ID for SDP.\n// https://tools.ietf.org/html/draft-ietf-rtcweb-jsep-20#section-5.2.1\n// recommends using a cryptographically random +ve 64-bit value\n// but right now this should be acceptable and within the right range\nSDPUtils.generateSessionId = function() {\n  return Math.random().toString().substr(2, 21);\n};\n\n// Write boilder plate for start of SDP\n// sessId argument is optional - if not supplied it will\n// be generated randomly\n// sessVersion is optional and defaults to 2\nSDPUtils.writeSessionBoilerplate = function(sessId, sessVer) {\n  var sessionId;\n  var version = sessVer !== undefined ? sessVer : 2;\n  if (sessId) {\n    sessionId = sessId;\n  } else {\n    sessionId = SDPUtils.generateSessionId();\n  }\n  // FIXME: sess-id should be an NTP timestamp.\n  return 'v=0\\r\\n' +\n      'o=thisisadapterortc ' + sessionId + ' ' + version + ' IN IP4 127.0.0.1\\r\\n' +\n      's=-\\r\\n' +\n      't=0 0\\r\\n';\n};\n\nSDPUtils.writeMediaSection = function(transceiver, caps, type, stream) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.direction) {\n    sdp += 'a=' + transceiver.direction + '\\r\\n';\n  } else if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n};\n\n// Gets the direction from the mediaSection or the sessionpart.\nSDPUtils.getDirection = function(mediaSection, sessionpart) {\n  // Look for sendrecv, sendonly, recvonly, inactive, default to sendrecv.\n  var lines = SDPUtils.splitLines(mediaSection);\n  for (var i = 0; i < lines.length; i++) {\n    switch (lines[i]) {\n      case 'a=sendrecv':\n      case 'a=sendonly':\n      case 'a=recvonly':\n      case 'a=inactive':\n        return lines[i].substr(2);\n      default:\n        // FIXME: What should happen here?\n    }\n  }\n  if (sessionpart) {\n    return SDPUtils.getDirection(sessionpart);\n  }\n  return 'sendrecv';\n};\n\nSDPUtils.getKind = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return mline[0].substr(2);\n};\n\nSDPUtils.isRejected = function(mediaSection) {\n  return mediaSection.split(' ', 2)[1] === '0';\n};\n\nSDPUtils.parseMLine = function(mediaSection) {\n  var lines = SDPUtils.splitLines(mediaSection);\n  var mline = lines[0].split(' ');\n  return {\n    kind: mline[0].substr(2),\n    port: parseInt(mline[1], 10),\n    protocol: mline[2],\n    fmt: mline.slice(3).join(' ')\n  };\n};\n\n// Expose public methods.\nif (typeof module === 'object') {\n  module.exports = SDPUtils;\n}\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp/sdp.js\n// module id = 57\n// module chunks = 0","/* global MediaRecorder, MediaStream, webkitMediaStream */\n\nconst RecordingResult = require('./recordingResult');\n\n/**\n * Possible audio formats MIME types\n */\nconst AUDIO_WEBM = 'audio/webm'; // Supported in chrome\nconst AUDIO_OGG = 'audio/ogg'; // Supported in firefox\n\n/**\n * A TrackRecorder object holds all the information needed for recording a\n * single JitsiTrack (either remote or local)\n * @param track The JitsiTrack the object is going to hold\n */\nconst TrackRecorder = function(track) {\n    // The JitsiTrack holding the stream\n    this.track = track;\n\n    // The MediaRecorder recording the stream\n    this.recorder = null;\n\n    // The array of data chunks recorded from the stream\n    // acts as a buffer until the data is stored on disk\n    this.data = null;\n\n    // the name of the person of the JitsiTrack. This can be undefined and/or\n    // not unique\n    this.name = null;\n\n    // the time of the start of the recording\n    this.startTime = null;\n};\n\n/**\n * Starts the recording of a JitsiTrack in a TrackRecorder object.\n * This will also define the timestamp and try to update the name\n * @param trackRecorder the TrackRecorder to start\n */\nfunction startRecorder(trackRecorder) {\n    if (trackRecorder.recorder === undefined) {\n        throw new Error('Passed an object to startRecorder which is not a '\n            + 'TrackRecorder object');\n    }\n    trackRecorder.recorder.start();\n    trackRecorder.startTime = new Date();\n}\n\n/**\n * Stops the recording of a JitsiTrack in a TrackRecorder object.\n * This will also try to update the name\n * @param trackRecorder the TrackRecorder to stop\n */\nfunction stopRecorder(trackRecorder) {\n    if (trackRecorder.recorder === undefined) {\n        throw new Error('Passed an object to stopRecorder which is not a '\n            + 'TrackRecorder object');\n    }\n    trackRecorder.recorder.stop();\n}\n\n/**\n * Determines which kind of audio recording the browser supports\n * chrome supports \"audio/webm\" and firefox supports \"audio/ogg\"\n */\nfunction determineCorrectFileType() {\n    if (MediaRecorder.isTypeSupported(AUDIO_WEBM)) {\n        return AUDIO_WEBM;\n    } else if (MediaRecorder.isTypeSupported(AUDIO_OGG)) {\n        return AUDIO_OGG;\n    }\n    throw new Error(\n        'unable to create a MediaRecorder with the right mimetype!');\n}\n\n/**\n * main exported object of the file, holding all\n * relevant functions and variables for the outside world\n * @param jitsiConference the jitsiConference which this object\n * is going to record\n */\nfunction AudioRecorder(jitsiConference) {\n    // array of TrackRecorders, where each trackRecorder\n    // holds the JitsiTrack, MediaRecorder and recorder data\n    this.recorders = [];\n\n    // get which file type is supported by the current browser\n    this.fileType = determineCorrectFileType();\n\n    // boolean flag for active recording\n    this.isRecording = false;\n\n    // the jitsiconference the object is recording\n    this.jitsiConference = jitsiConference;\n}\n\n/**\n * Add the the exported module so that it can be accessed by other files\n */\nAudioRecorder.determineCorrectFileType = determineCorrectFileType;\n\n/**\n * Adds a new TrackRecorder object to the array.\n *\n * @param track the track potentially holding an audio stream\n */\nAudioRecorder.prototype.addTrack = function(track) {\n    if (track.isAudioTrack()) {\n        // create the track recorder\n        const trackRecorder = this.instantiateTrackRecorder(track);\n\n        // push it to the local array of all recorders\n\n        this.recorders.push(trackRecorder);\n\n        // update the name of the trackRecorders\n        this.updateNames();\n\n        // If we're already recording, immediately start recording this new\n        // track.\n        if (this.isRecording) {\n            startRecorder(trackRecorder);\n        }\n    }\n};\n\n/**\n * Creates a TrackRecorder object. Also creates the MediaRecorder and\n * data array for the trackRecorder.\n * @param track the JitsiTrack holding the audio MediaStream(s)\n */\nAudioRecorder.prototype.instantiateTrackRecorder = function(track) {\n    const trackRecorder = new TrackRecorder(track);\n\n    // Create a new stream which only holds the audio track\n    const originalStream = trackRecorder.track.getOriginalStream();\n    const stream = createEmptyStream();\n\n    originalStream.getAudioTracks().forEach(t => stream.addTrack(t));\n\n    // Create the MediaRecorder\n    trackRecorder.recorder = new MediaRecorder(stream,\n        { mimeType: this.fileType });\n\n    // array for holding the recorder data. Resets it when\n    // audio already has been recorder once\n    trackRecorder.data = [];\n\n    // function handling a dataEvent, e.g the stream gets new data\n    trackRecorder.recorder.ondataavailable = function(dataEvent) {\n        if (dataEvent.data.size > 0) {\n            trackRecorder.data.push(dataEvent.data);\n        }\n    };\n\n    return trackRecorder;\n};\n\n/**\n * Notifies the module that a specific track has stopped, e.g participant left\n * the conference.\n * if the recording has not started yet, the TrackRecorder will be removed from\n * the array. If the recording has started, the recorder will stop recording\n * but not removed from the array so that the recorded stream can still be\n * accessed\n *\n * @param {JitsiTrack} track the JitsiTrack to remove from the recording session\n */\nAudioRecorder.prototype.removeTrack = function(track) {\n    if (track.isVideoTrack()) {\n        return;\n    }\n\n    const array = this.recorders;\n    let i;\n\n    for (i = 0; i < array.length; i++) {\n        if (array[i].track.getParticipantId() === track.getParticipantId()) {\n            const recorderToRemove = array[i];\n\n            if (this.isRecording) {\n                stopRecorder(recorderToRemove);\n            } else {\n                // remove the TrackRecorder from the array\n                array.splice(i, 1);\n            }\n        }\n    }\n\n    // make sure the names are up to date\n    this.updateNames();\n};\n\n/**\n * Tries to update the name value of all TrackRecorder in the array.\n * If it hasn't changed,it will keep the exiting name. If it changes to a\n * undefined value, the old value will also be kept.\n */\nAudioRecorder.prototype.updateNames = function() {\n    const conference = this.jitsiConference;\n\n    this.recorders.forEach(trackRecorder => {\n        if (trackRecorder.track.isLocal()) {\n            trackRecorder.name = 'the transcriber';\n        } else {\n            const id = trackRecorder.track.getParticipantId();\n            const participant = conference.getParticipantById(id);\n            const newName = participant.getDisplayName();\n\n            if (newName !== 'undefined') {\n                trackRecorder.name = newName;\n            }\n        }\n    });\n};\n\n/**\n * Starts the audio recording of every local and remote track\n */\nAudioRecorder.prototype.start = function() {\n    if (this.isRecording) {\n        throw new Error('audiorecorder is already recording');\n    }\n\n    // set boolean isRecording flag to true so if new participants join the\n    // conference, that track can instantly start recording as well\n    this.isRecording = true;\n\n    // start all the mediaRecorders\n    this.recorders.forEach(trackRecorder => startRecorder(trackRecorder));\n\n    // log that recording has started\n    console.log(\n        `Started the recording of the audio. There are currently ${\n            this.recorders.length} recorders active.`);\n};\n\n/**\n * Stops the audio recording of every local and remote track\n */\nAudioRecorder.prototype.stop = function() {\n    // set the boolean flag to false\n    this.isRecording = false;\n\n    // stop all recorders\n    this.recorders.forEach(trackRecorder => stopRecorder(trackRecorder));\n    console.log('stopped recording');\n};\n\n/**\n * link hacking to download all recorded audio streams\n */\nAudioRecorder.prototype.download = function() {\n    this.recorders.forEach(trackRecorder => {\n        const blob = new Blob(trackRecorder.data, { type: this.fileType });\n        const url = URL.createObjectURL(blob);\n        const a = document.createElement('a');\n\n        document.body.appendChild(a);\n        a.style = 'display: none';\n        a.href = url;\n        a.download = `test.${this.fileType.split('/')[1]}`;\n        a.click();\n        window.URL.revokeObjectURL(url);\n    });\n};\n\n/**\n * returns the audio files of all recorders as an array of objects,\n * which include the name of the owner of the track and the starting time stamp\n * @returns {Array} an array of RecordingResult objects\n */\nAudioRecorder.prototype.getRecordingResults = function() {\n    if (this.isRecording) {\n        throw new Error(\n            'cannot get blobs because the AudioRecorder is still recording!');\n    }\n\n    // make sure the names are up to date before sending them off\n    this.updateNames();\n\n    const array = [];\n\n    this.recorders.forEach(\n        recorder =>\n            array.push(\n                new RecordingResult(\n                    new Blob(recorder.data, { type: this.fileType }),\n                    recorder.name,\n                    recorder.startTime)));\n\n    return array;\n};\n\n/**\n * Gets the mime type of the recorder audio\n * @returns {String} the mime type of the recorder audio\n */\nAudioRecorder.prototype.getFileType = function() {\n    return this.fileType;\n};\n\n/**\n * Creates a empty MediaStream object which can be used\n * to add MediaStreamTracks to\n * @returns MediaStream\n */\nfunction createEmptyStream() {\n    // Firefox supports the MediaStream object, Chrome webkitMediaStream\n    if (typeof MediaStream !== 'undefined') {\n        return new MediaStream();\n    } else if (typeof webkitMediaStream !== 'undefined') {\n        return new webkitMediaStream(); // eslint-disable-line new-cap\n    }\n    throw new Error('cannot create a clean mediaStream');\n}\n\n/**\n * export the main object AudioRecorder\n */\nmodule.exports = AudioRecorder;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/transcription/audioRecorder.js","/**\n * The events for the media devices.\n */\n\n/**\n * Indicates that the list of available media devices has been changed. The\n * event provides the following parameters to its listeners:\n *\n * @param {MediaDeviceInfo[]} devices - array of MediaDeviceInfo or\n *  MediaDeviceInfo-like objects that are currently connected.\n *  @see https://developer.mozilla.org/en-US/docs/Web/API/MediaDeviceInfo\n */\nexport const DEVICE_LIST_CHANGED = 'mediaDevices.devicechange';\n\n/**\n * Indicates that the environment is currently showing permission prompt to\n * access camera and/or microphone. The event provides the following\n * parameters to its listeners:\n *\n * @param {'chrome'|'opera'|'firefox'|'iexplorer'|'safari'|'nwjs'\n *  |'react-native'|'android'} environmentType - type of browser or\n *  other execution environment.\n */\nexport const PERMISSION_PROMPT_IS_SHOWN\n    = 'mediaDevices.permissionPromptIsShown';\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiMediaDevicesEvents.js","// For legacy purposes, preserve the UMD of the public API of the Jitsi Meet\n// library (a.k.a. JitsiMeetJS).\nmodule.exports = require('./JitsiMeetJS').default;\n\n\n\n// WEBPACK FOOTER //\n// ./index.js","/* global __filename */\n\nimport {\n    GET_USER_MEDIA_DEVICE_NOT_FOUND_,\n    GET_USER_MEDIA_FAIL_,\n    GET_USER_MEDIA_FAILED_,\n    GET_USER_MEDIA_SUCCESS_,\n    GET_USER_MEDIA_USER_CANCEL_\n} from './service/statistics/AnalyticsEvents';\nimport AuthUtil from './modules/util/AuthUtil';\nimport * as ConnectionQualityEvents\n    from './service/connectivity/ConnectionQualityEvents';\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport JitsiConnection from './JitsiConnection';\nimport * as JitsiConnectionErrors from './JitsiConnectionErrors';\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\nimport JitsiMediaDevices from './JitsiMediaDevices';\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\nimport JitsiRecorderErrors from './JitsiRecorderErrors';\nimport JitsiTrackError from './JitsiTrackError';\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\nimport * as JitsiTranscriptionStatus from './JitsiTranscriptionStatus';\nimport LocalStatsCollector from './modules/statistics/LocalStatsCollector';\nimport Recording from './modules/xmpp/recording';\nimport Logger from 'jitsi-meet-logger';\nimport * as MediaType from './service/RTC/MediaType';\nimport Resolutions from './service/RTC/Resolutions';\nimport { ParticipantConnectionStatus }\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport RTC from './modules/RTC/RTC';\nimport RTCBrowserType from './modules/RTC/RTCBrowserType';\nimport RTCUIHelper from './modules/RTC/RTCUIHelper';\nimport ScriptUtil from './modules/util/ScriptUtil';\nimport Settings from './modules/settings/Settings';\nimport Statistics from './modules/statistics/statistics';\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\n\nconst logger = Logger.getLogger(__filename);\n\n// The amount of time to wait until firing\n// JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN event\nconst USER_MEDIA_PERMISSION_PROMPT_TIMEOUT = 1000;\n\n/**\n *\n * @param resolution\n */\nfunction getLowerResolution(resolution) {\n    if (!Resolutions[resolution]) {\n        return null;\n    }\n    const order = Resolutions[resolution].order;\n    let res = null;\n    let resName = null;\n\n    Object.keys(Resolutions).forEach(r => {\n        const value = Resolutions[r];\n\n        if (!res || (res.order < value.order && value.order < order)) {\n            resName = r;\n            res = value;\n        }\n    });\n\n    return resName;\n}\n\n/**\n * Checks the available devices in options and concatenate the data to the\n * name, which will be used as analytics event name. Adds resolution for the\n * devices.\n * @param name name of event\n * @param options gum options\n * @returns {*}\n */\nfunction addDeviceTypeToAnalyticsEvent(name, options) {\n    let ret = name;\n\n    if (options.devices.indexOf('audio') !== -1) {\n        ret += '.audio';\n    }\n    if (options.devices.indexOf('desktop') !== -1) {\n        ret += '.desktop';\n    }\n    if (options.devices.indexOf('video') !== -1) {\n        // we have video add resolution\n        ret += `.video.${options.resolution}`;\n    }\n\n    return ret;\n}\n\n/**\n * The public API of the Jitsi Meet library (a.k.a. JitsiMeetJS).\n */\nexport default {\n\n    version: '{#COMMIT_HASH#}',\n\n    JitsiConnection,\n    constants: {\n        participantConnectionStatus: ParticipantConnectionStatus,\n        recordingStatus: Recording.status,\n        recordingTypes: Recording.types,\n        sipVideoGW: VideoSIPGWConstants,\n        transcriptionStatus: JitsiTranscriptionStatus\n    },\n    events: {\n        conference: JitsiConferenceEvents,\n        connection: JitsiConnectionEvents,\n        track: JitsiTrackEvents,\n        mediaDevices: JitsiMediaDevicesEvents,\n        connectionQuality: ConnectionQualityEvents\n    },\n    errors: {\n        conference: JitsiConferenceErrors,\n        connection: JitsiConnectionErrors,\n        recorder: JitsiRecorderErrors,\n        track: JitsiTrackErrors\n    },\n    errorTypes: {\n        JitsiTrackError\n    },\n    logLevels: Logger.levels,\n    mediaDevices: JitsiMediaDevices,\n    analytics: Statistics.analytics,\n    init(options) {\n        Statistics.init(options);\n\n        // Initialize global window.connectionTimes\n        // FIXME do not use 'window'\n        if (!window.connectionTimes) {\n            window.connectionTimes = {};\n        }\n\n        if (options.enableAnalyticsLogging !== true) {\n            this.analytics.dispose();\n        }\n\n        if (options.enableWindowOnErrorHandler) {\n            GlobalOnErrorHandler.addHandler(\n                this.getGlobalOnErrorHandler.bind(this));\n        }\n\n        // Log deployment-specific information, if available.\n        // Defined outside the application by individual deployments\n        const aprops = options.deploymentInfo;\n\n        if (aprops && Object.keys(aprops).length > 0) {\n            const logObject = {};\n\n            for (const attr in aprops) {\n                if (aprops.hasOwnProperty(attr)) {\n                    logObject[attr] = aprops[attr];\n                }\n            }\n\n            logObject.id = 'deployment_info';\n            Statistics.sendLog(JSON.stringify(logObject));\n        }\n\n        if (this.version) {\n            const logObject = {\n                id: 'component_version',\n                component: 'lib-jitsi-meet',\n                version: this.version\n            };\n\n            Statistics.sendLog(JSON.stringify(logObject));\n        }\n\n        return RTC.init(options || {});\n    },\n\n    /**\n     * Returns whether the desktop sharing is enabled or not.\n     * @returns {boolean}\n     */\n    isDesktopSharingEnabled() {\n        return RTC.isDesktopSharingEnabled();\n    },\n    setLogLevel(level) {\n        Logger.setLogLevel(level);\n    },\n\n    /**\n     * Sets the log level to the <tt>Logger</tt> instance with given id.\n     * @param {Logger.levels} level the logging level to be set\n     * @param {string} id the logger id to which new logging level will be set.\n     * Usually it's the name of the JavaScript source file including the path\n     * ex. \"modules/xmpp/ChatRoom.js\"\n     */\n    setLogLevelById(level, id) {\n        Logger.setLogLevelById(level, id);\n    },\n\n    /**\n     * Registers new global logger transport to the library logging framework.\n     * @param globalTransport\n     * @see Logger.addGlobalTransport\n     */\n    addGlobalLogTransport(globalTransport) {\n        Logger.addGlobalTransport(globalTransport);\n    },\n\n    /**\n     * Removes global logging transport from the library logging framework.\n     * @param globalTransport\n     * @see Logger.removeGlobalTransport\n     */\n    removeGlobalLogTransport(globalTransport) {\n        Logger.removeGlobalTransport(globalTransport);\n    },\n\n    /**\n     * Creates the media tracks and returns them trough the callback.\n     * @param options Object with properties / settings specifying the tracks\n     * which should be created. should be created or some additional\n     * configurations about resolution for example.\n     * @param {Array} options.devices the devices that will be requested\n     * @param {string} options.resolution resolution constraints\n     * @param {bool} options.dontCreateJitsiTrack if <tt>true</tt> objects with\n     * the following structure {stream: the Media Stream, type: \"audio\" or\n     * \"video\", videoType: \"camera\" or \"desktop\"} will be returned trough the\n     * Promise, otherwise JitsiTrack objects will be returned.\n     * @param {string} options.cameraDeviceId\n     * @param {string} options.micDeviceId\n     * @param {object} options.desktopSharingExtensionExternalInstallation -\n     * enables external installation process for desktop sharing extension if\n     * the inline installation is not posible. The following properties should\n     * be provided:\n     * @param {intiger} interval - the interval (in ms) for\n     * checking whether the desktop sharing extension is installed or not\n     * @param {Function} checkAgain - returns boolean. While checkAgain()==true\n     * createLocalTracks will wait and check on every \"interval\" ms for the\n     * extension. If the desktop extension is not install and checkAgain()==true\n     * createLocalTracks will finish with rejected Promise.\n     * @param {Function} listener - The listener will be called to notify the\n     * user of lib-jitsi-meet that createLocalTracks is starting external\n     * extension installation process.\n     * NOTE: If the inline installation process is not possible and external\n     * installation is enabled the listener property will be called to notify\n     * the start of external installation process. After that createLocalTracks\n     * will start to check for the extension on every interval ms until the\n     * plugin is installed or until checkAgain return false. If the extension\n     * is found createLocalTracks will try to get the desktop sharing track and\n     * will finish the execution. If checkAgain returns false, createLocalTracks\n     * will finish the execution with rejected Promise.\n     *\n     * @param {boolean} (firePermissionPromptIsShownEvent) - if event\n     *      JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN should be fired\n     * @returns {Promise.<{Array.<JitsiTrack>}, JitsiConferenceError>}\n     *     A promise that returns an array of created JitsiTracks if resolved,\n     *     or a JitsiConferenceError if rejected.\n     */\n    createLocalTracks(options = {}, firePermissionPromptIsShownEvent) {\n        let promiseFulfilled = false;\n\n        if (firePermissionPromptIsShownEvent === true) {\n            window.setTimeout(() => {\n                if (!promiseFulfilled) {\n                    JitsiMediaDevices.emitEvent(\n                        JitsiMediaDevicesEvents.PERMISSION_PROMPT_IS_SHOWN,\n                        RTCBrowserType.getBrowserName());\n                }\n            }, USER_MEDIA_PERMISSION_PROMPT_TIMEOUT);\n        }\n\n        if (!window.connectionTimes) {\n            window.connectionTimes = {};\n        }\n        window.connectionTimes['obtainPermissions.start']\n            = window.performance.now();\n\n        return RTC.obtainAudioAndVideoPermissions(options)\n            .then(tracks => {\n                promiseFulfilled = true;\n\n                window.connectionTimes['obtainPermissions.end']\n                    = window.performance.now();\n\n                Statistics.analytics.sendEvent(\n                    addDeviceTypeToAnalyticsEvent(\n                        GET_USER_MEDIA_SUCCESS_, options),\n                    { value: options });\n\n                if (!RTC.options.disableAudioLevels) {\n                    for (let i = 0; i < tracks.length; i++) {\n                        const track = tracks[i];\n                        const mStream = track.getOriginalStream();\n\n                        if (track.getType() === MediaType.AUDIO) {\n                            Statistics.startLocalStats(mStream,\n                                track.setAudioLevel.bind(track));\n                            track.addEventListener(\n                                JitsiTrackEvents.LOCAL_TRACK_STOPPED,\n                                () => {\n                                    Statistics.stopLocalStats(mStream);\n                                });\n                        }\n                    }\n                }\n\n                // set real device ids\n                const currentlyAvailableMediaDevices\n                    = RTC.getCurrentlyAvailableMediaDevices();\n\n                if (currentlyAvailableMediaDevices) {\n                    for (let i = 0; i < tracks.length; i++) {\n                        const track = tracks[i];\n\n                        track._setRealDeviceIdFromDeviceList(\n                            currentlyAvailableMediaDevices);\n                    }\n                }\n\n                return tracks;\n            })\n            .catch(error => {\n                promiseFulfilled = true;\n\n                if (error.name === JitsiTrackErrors.UNSUPPORTED_RESOLUTION\n                    && !RTCBrowserType.usesNewGumFlow()) {\n                    const oldResolution = options.resolution || '720';\n                    const newResolution = getLowerResolution(oldResolution);\n\n                    if (newResolution !== null) {\n                        options.resolution = newResolution;\n\n                        logger.debug(\n                            'Retry createLocalTracks with resolution',\n                            newResolution);\n\n                        Statistics.analytics.sendEvent(\n                            `${GET_USER_MEDIA_FAIL_}.resolution.${\n                                oldResolution}`);\n\n                        return this.createLocalTracks(options);\n                    }\n                }\n\n                if (JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED\n                        === error.name) {\n                    // User cancelled action is not really an error, so only\n                    // log it as an event to avoid having conference classified\n                    // as partially failed\n                    const logObject = {\n                        id: 'chrome_extension_user_canceled',\n                        message: error.message\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n                    Statistics.analytics.sendEvent(\n                        `${GET_USER_MEDIA_USER_CANCEL_}.extensionInstall`);\n                } else if (JitsiTrackErrors.NOT_FOUND === error.name) {\n                    // logs not found devices with just application log to cs\n                    const logObject = {\n                        id: 'usermedia_missing_device',\n                        status: error.gum.devices\n                    };\n\n                    Statistics.sendLog(JSON.stringify(logObject));\n                    Statistics.analytics.sendEvent(\n                        `${GET_USER_MEDIA_DEVICE_NOT_FOUND_}.${\n                            error.gum.devices.join('.')}`);\n                } else {\n                    // Report gUM failed to the stats\n                    Statistics.sendGetUserMediaFailed(error);\n                    const eventName\n                        = addDeviceTypeToAnalyticsEvent(\n                            GET_USER_MEDIA_FAILED_, options);\n\n                    Statistics.analytics.sendEvent(\n                        `${eventName}.${error.name}`,\n                        { value: options });\n                }\n\n                window.connectionTimes['obtainPermissions.end']\n                    = window.performance.now();\n\n                return Promise.reject(error);\n            });\n    },\n\n    /**\n     * Checks if its possible to enumerate available cameras/microphones.\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\n     * the WebRTC stack is ready, either with true if the device listing is\n     * available available or with false otherwise.\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceListAvailable instead\n     */\n    isDeviceListAvailable() {\n        logger.warn('This method is deprecated, use '\n            + 'JitsiMeetJS.mediaDevices.isDeviceListAvailable instead');\n\n        return this.mediaDevices.isDeviceListAvailable();\n    },\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @params {string} [deviceType] - type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     * @deprecated use JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead\n     */\n    isDeviceChangeAvailable(deviceType) {\n        logger.warn('This method is deprecated, use '\n            + 'JitsiMeetJS.mediaDevices.isDeviceChangeAvailable instead');\n\n        return this.mediaDevices.isDeviceChangeAvailable(deviceType);\n    },\n\n\n    /**\n     * Checks if the current environment supports having multiple audio\n     * input devices in use simultaneously.\n     *\n     * @returns {boolean} True if multiple audio input devices can be used.\n     */\n    isMultipleAudioInputSupported() {\n        return this.mediaDevices.isMultipleAudioInputSupported();\n    },\n\n    /**\n     * Checks if local tracks can collect stats and collection is enabled.\n     *\n     * @param {boolean} True if stats are being collected for local tracks.\n     */\n    isCollectingLocalStats() {\n        return Statistics.audioLevelsEnabled\n            && LocalStatsCollector.isLocalStatsSupported();\n    },\n\n    /**\n     * Executes callback with list of media devices connected.\n     * @param {function} callback\n     * @deprecated use JitsiMeetJS.mediaDevices.enumerateDevices instead\n     */\n    enumerateDevices(callback) {\n        logger.warn('This method is deprecated, use '\n            + 'JitsiMeetJS.mediaDevices.enumerateDevices instead');\n        this.mediaDevices.enumerateDevices(callback);\n    },\n\n    /* eslint-disable max-params */\n\n    /**\n     * @returns function that can be used to be attached to window.onerror and\n     * if options.enableWindowOnErrorHandler is enabled returns\n     * the function used by the lib.\n     * (function(message, source, lineno, colno, error)).\n     */\n    getGlobalOnErrorHandler(message, source, lineno, colno, error) {\n        logger.error(\n            `UnhandledError: ${message}`,\n            `Script: ${source}`,\n            `Line: ${lineno}`,\n            `Column: ${colno}`,\n            'StackTrace: ', error);\n        Statistics.reportGlobalError(error);\n    },\n\n    /* eslint-enable max-params */\n\n    /**\n     * Returns current machine id saved from the local storage.\n     * @returns {string} the machine id\n     */\n    getMachineId() {\n        return Settings.machineId;\n    },\n\n    /**\n     * Represents a hub/namespace for utility functionality which may be of\n     * interest to lib-jitsi-meet clients.\n     */\n    util: {\n        AuthUtil,\n        RTCUIHelper,\n        ScriptUtil\n    }\n};\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiMeetJS.js","const AuthUtil = {\n    /**\n     * Creates the URL pointing to JWT token authentication service. It is\n     * formatted from the 'urlPattern' argument which can contain the following\n     * constants:\n     * '{room}' - name of the conference room passed as <tt>roomName</tt>\n     * argument to this method.\n     * '{roleUpgrade}' - will contain 'true' if the URL will be used for\n     * the role upgrade scenario, where user connects from anonymous domain and\n     * then gets upgraded to the moderator by logging-in from the popup window.\n     *\n     * @param urlPattern a URL pattern pointing to the login service\n     * @param roomName the name of the conference room for which the user will\n     * be authenticated\n     * @param {bool} roleUpgrade <tt>true</tt> if the URL will be used for role\n     * upgrade scenario, where the user logs-in from the popup window in order\n     * to have the moderator rights granted\n     *\n     * @returns {string|null} the URL pointing to JWT login service or\n     * <tt>null</tt> if 'urlPattern' is not a string and the URL can not be\n     * constructed.\n     */\n    getTokenAuthUrl(urlPattern, roomName, roleUpgrade) {\n        const url = urlPattern;\n\n        if (typeof url !== 'string') {\n            return null;\n        }\n\n        return url.replace('{room}', roomName)\n            .replace('{roleUpgrade}', roleUpgrade === true);\n    }\n};\n\nmodule.exports = AuthUtil;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/util/AuthUtil.js","import {\n    CONNECTION_DISCONNECTED_,\n    CONNECTION_FAILED_\n} from './service/statistics/AnalyticsEvents';\nimport JitsiConference from './JitsiConference';\nimport * as JitsiConnectionEvents from './JitsiConnectionEvents';\nimport Statistics from './modules/statistics/statistics';\nimport XMPP from './modules/xmpp/xmpp';\n\n/**\n * Creates a new connection object for the Jitsi Meet server side video\n * conferencing service. Provides access to the JitsiConference interface.\n * @param appID identification for the provider of Jitsi Meet video conferencing\n * services.\n * @param token the JWT token used to authenticate with the server(optional)\n * @param options Object with properties / settings related to connection with\n * the server.\n * @constructor\n */\nexport default function JitsiConnection(appID, token, options) {\n    this.appID = appID;\n    this.token = token;\n    this.options = options;\n    this.xmpp = new XMPP(options, token);\n\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_FAILED,\n        (errType, msg) => {\n            Statistics.sendEventToAll(\n                `${CONNECTION_FAILED_}.${errType}`,\n                { label: msg });\n        });\n\n    this.addEventListener(JitsiConnectionEvents.CONNECTION_DISCONNECTED,\n        msg => {\n            // we can see disconnects from normal tab closing of the browser\n            // and then there are no msgs, but we want to log only disconnects\n            // when there is real error\n            if (msg) {\n                Statistics.analytics.sendEvent(\n                    `${CONNECTION_DISCONNECTED_}.${msg}`);\n            }\n            Statistics.sendLog(\n                JSON.stringify({ id: 'connection.disconnected',\n                    msg }));\n        });\n}\n\n/**\n * Connect the client with the server.\n * @param options {object} connecting options\n * (for example authentications parameters).\n */\nJitsiConnection.prototype.connect = function(options = {}) {\n    this.xmpp.connect(options.id, options.password);\n};\n\n/**\n * Attach to existing connection. Can be used for optimizations. For example:\n * if the connection is created on the server we can attach to it and start\n * using it.\n *\n * @param options {object} connecting options - rid, sid and jid.\n */\nJitsiConnection.prototype.attach = function(options) {\n    this.xmpp.attach(options);\n};\n\n/**\n * Disconnect the client from the server.\n */\nJitsiConnection.prototype.disconnect = function(...args) {\n    // XXX Forward any arguments passed to JitsiConnection.disconnect to\n    // XMPP.disconnect. For example, the caller of JitsiConnection.disconnect\n    // may optionally pass the event which triggered the disconnect in order to\n    // provide the implementation with finer-grained context.\n    this.xmpp.disconnect(...args);\n};\n\n/**\n * This method allows renewal of the tokens if they are expiring.\n * @param token the new token.\n */\nJitsiConnection.prototype.setToken = function(token) {\n    this.token = token;\n};\n\n/**\n * Creates and joins new conference.\n * @param name the name of the conference; if null - a generated name will be\n * provided from the api\n * @param options Object with properties / settings related to the conference\n * that will be created.\n * @returns {JitsiConference} returns the new conference object.\n */\nJitsiConnection.prototype.initJitsiConference = function(name, options) {\n    return new JitsiConference({\n        name,\n        config: options,\n        connection: this\n    });\n};\n\n/**\n * Subscribes the passed listener to the event.\n * @param event {JitsiConnectionEvents} the connection event.\n * @param listener {Function} the function that will receive the event\n */\nJitsiConnection.prototype.addEventListener = function(event, listener) {\n    this.xmpp.addListener(event, listener);\n};\n\n/**\n * Unsubscribes the passed handler.\n * @param event {JitsiConnectionEvents} the connection event.\n * @param listener {Function} the function that will receive the event\n */\nJitsiConnection.prototype.removeEventListener = function(event, listener) {\n    this.xmpp.removeListener(event, listener);\n};\n\n/**\n * Returns measured connectionTimes.\n */\nJitsiConnection.prototype.getConnectionTimes = function() {\n    return this.xmpp.connectionTimes;\n};\n\n/**\n * Adds new feature to the list of supported features for the local\n * participant.\n * @param {String} feature the name of the feature.\n * @param {boolean} submit if true - the new list of features will be\n * immediately submitted to the others.\n */\nJitsiConnection.prototype.addFeature = function(feature, submit = false) {\n    return this.xmpp.caps.addFeature(feature, submit);\n};\n\n/**\n * Removes a feature from the list of supported features for the local\n * participant\n * @param {String} feature the name of the feature.\n * @param {boolean} submit if true - the new list of features will be\n * immediately submitted to the others.\n */\nJitsiConnection.prototype.removeFeature = function(feature, submit = false) {\n    return this.xmpp.caps.removeFeature(feature, submit);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiConnection.js","/* global __filename, $, Promise */\nimport { Strophe } from 'strophe.js';\n\nimport {\n    ICE_ESTABLISHMENT_DURATION_DIFF,\n    P2P_ESTABLISHED,\n    P2P_FAILED,\n    P2P_SWITCH_TO_JVB,\n    SESSION_INITIATE,\n    SESSION_RESTART,\n    SESSION_TERMINATE\n} from './service/statistics/AnalyticsEvents';\nimport AvgRTPStatsReporter from './modules/statistics/AvgRTPStatsReporter';\nimport ComponentsVersions from './modules/version/ComponentsVersions';\nimport ConnectionQuality from './modules/connectivity/ConnectionQuality';\nimport { getLogger } from 'jitsi-meet-logger';\nimport GlobalOnErrorHandler from './modules/util/GlobalOnErrorHandler';\nimport EventEmitter from 'events';\nimport authenticateAndUpgradeRole from './authenticateAndUpgradeRole';\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport JitsiConferenceEventManager from './JitsiConferenceEventManager';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport JitsiDTMFManager from './modules/DTMF/JitsiDTMFManager';\nimport JitsiParticipant from './JitsiParticipant';\nimport JitsiTrackError from './JitsiTrackError';\nimport * as JitsiTrackErrors from './JitsiTrackErrors';\nimport * as JitsiTrackEvents from './JitsiTrackEvents';\nimport Jvb121EventGenerator from './modules/event/Jvb121EventGenerator';\nimport * as MediaType from './service/RTC/MediaType';\nimport ParticipantConnectionStatusHandler\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport P2PDominantSpeakerDetection from './modules/P2PDominantSpeakerDetection';\nimport RTC from './modules/RTC/RTC';\nimport RTCBrowserType from './modules/RTC/RTCBrowserType';\nimport * as RTCEvents from './service/RTC/RTCEvents';\nimport Statistics from './modules/statistics/statistics';\nimport TalkMutedDetection from './modules/TalkMutedDetection';\nimport Transcriber from './modules/transcription/transcriber';\nimport VideoType from './service/RTC/VideoType';\nimport VideoSIPGW from './modules/videosipgw/VideoSIPGW';\nimport * as VideoSIPGWConstants from './modules/videosipgw/VideoSIPGWConstants';\nimport * as XMPPEvents from './service/xmpp/XMPPEvents';\n\nimport SpeakerStatsCollector from './modules/statistics/SpeakerStatsCollector';\n\nconst logger = getLogger(__filename);\n\n/**\n * Creates a JitsiConference object with the given name and properties.\n * Note: this constructor is not a part of the public API (objects should be\n * created using JitsiConnection.createConference).\n * @param options.config properties / settings related to the conference that\n * will be created.\n * @param options.name the name of the conference\n * @param options.connection the JitsiConnection object for this\n * JitsiConference.\n * @param {number} [options.config.avgRtpStatsN=15] how many samples are to be\n * collected by {@link AvgRTPStatsReporter}, before arithmetic mean is\n * calculated and submitted to the analytics module.\n * @param {boolean} [options.config.p2p.enabled] when set to <tt>true</tt>\n * the peer to peer mode will be enabled. It means that when there are only 2\n * participants in the conference an attempt to make direct connection will be\n * made. If the connection succeeds the conference will stop sending data\n * through the JVB connection and will use the direct one instead.\n * @param {number} [options.config.p2p.backToP2PDelay=5] a delay given in\n * seconds, before the conference switches back to P2P, after the 3rd\n * participant has left the room.\n * @param {number} [options.config.channelLastN=-1] The requested amount of\n * videos are going to be delivered after the value is in effect. Set to -1 for\n * unlimited or all available videos.\n * @param {number} [options.config.forceJVB121Ratio]\n * \"Math.random() < forceJVB121Ratio\" will determine whether a 2 people\n * conference should be moved to the JVB instead of P2P. The decision is made on\n * the responder side, after ICE succeeds on the P2P connection.\n * @param {*} [options.config.openBridgeChannel] Which kind of communication to\n * open with the videobridge. Values can be \"datachannel\", \"websocket\", true\n * (treat it as \"datachannel\"), undefined (treat it as \"datachannel\") and false\n * (don't open any channel).\n * @constructor\n *\n * FIXME Make all methods which are called from lib-internal classes\n *       to non-public (use _). To name a few:\n *       {@link JitsiConference.onLocalRoleChanged}\n *       {@link JitsiConference.onUserRoleChanged}\n *       {@link JitsiConference.onMemberLeft}\n *       and so on...\n */\nexport default function JitsiConference(options) {\n    if (!options.name || options.name.toLowerCase() !== options.name) {\n        const errmsg\n            = 'Invalid conference name (no conference name passed or it '\n                + 'contains invalid characters like capital letters)!';\n\n        logger.error(errmsg);\n        throw new Error(errmsg);\n    }\n    this.eventEmitter = new EventEmitter();\n    this.options = options;\n    this.eventManager = new JitsiConferenceEventManager(this);\n    this.participants = {};\n    this._init(options);\n    this.componentsVersions = new ComponentsVersions(this);\n\n    /**\n     * Jingle session instance for the JVB connection.\n     * @type {JingleSessionPC}\n     */\n    this.jvbJingleSession = null;\n    this.lastDominantSpeaker = null;\n    this.dtmfManager = null;\n    this.somebodySupportsDTMF = false;\n    this.authEnabled = false;\n    this.startAudioMuted = false;\n    this.startVideoMuted = false;\n    this.startMutedPolicy = {\n        audio: false,\n        video: false\n    };\n    this.availableDevices = {\n        audio: undefined,\n        video: undefined\n    };\n    this.isMutedByFocus = false;\n\n    // Flag indicates if the 'onCallEnded' method was ever called on this\n    // instance. Used to log extra analytics event for debugging purpose.\n    // We need to know if the potential issue happened before or after\n    // the restart.\n    this.wasStopped = false;\n\n    /**\n     * The object which monitors local and remote connection statistics (e.g.\n     * sending bitrate) and calculates a number which represents the connection\n     * quality.\n     */\n    this.connectionQuality\n        = new ConnectionQuality(this, this.eventEmitter, options);\n\n    /**\n     * Reports average RTP statistics to the analytics module.\n     * @type {AvgRTPStatsReporter}\n     */\n    this.avgRtpStatsReporter\n        = new AvgRTPStatsReporter(this, options.config.avgRtpStatsN || 15);\n\n    /**\n     * Indicates whether the connection is interrupted or not.\n     */\n    this.isJvbConnectionInterrupted = false;\n\n    /**\n     * The object which tracks active speaker times\n     */\n    this.speakerStatsCollector = new SpeakerStatsCollector(this);\n\n    /* P2P related fields below: */\n\n    /**\n     * Stores reference to deferred start P2P task. It's created when 3rd\n     * participant leaves the room in order to avoid ping pong effect (it\n     * could be just a page reload).\n     * @type {number|null}\n     */\n    this.deferredStartP2PTask = null;\n\n    const delay\n        = parseInt(options.config.p2p && options.config.p2p.backToP2PDelay, 10);\n\n    /**\n     * A delay given in seconds, before the conference switches back to P2P\n     * after the 3rd participant has left.\n     * @type {number}\n     */\n    this.backToP2PDelay = isNaN(delay) ? 5 : delay;\n    logger.info(`backToP2PDelay: ${this.backToP2PDelay}`);\n\n    /**\n     * If set to <tt>true</tt> it means the P2P ICE is no longer connected.\n     * When <tt>false</tt> it means that P2P ICE (media) connection is up\n     * and running.\n     * @type {boolean}\n     */\n    this.isP2PConnectionInterrupted = false;\n\n    /**\n     * Flag set to <tt>true</tt> when P2P session has been established\n     * (ICE has been connected) and this conference is currently in the peer to\n     * peer mode (P2P connection is the active one).\n     * @type {boolean}\n     */\n    this.p2p = false;\n\n    /**\n     * A JingleSession for the direct peer to peer connection.\n     * @type {JingleSessionPC}\n     */\n    this.p2pJingleSession = null;\n\n    this.videoSIPGWHandler = new VideoSIPGW(this.room);\n}\n\n// FIXME convert JitsiConference to ES6 - ASAP !\nJitsiConference.prototype.constructor = JitsiConference;\n\n/**\n * Initializes the conference object properties\n * @param options {object}\n * @param options.connection {JitsiConnection} overrides this.connection\n */\nJitsiConference.prototype._init = function(options = {}) {\n    // Override connection and xmpp properties (Useful if the connection\n    // reloaded)\n    if (options.connection) {\n        this.connection = options.connection;\n        this.xmpp = this.connection.xmpp;\n\n        // Setup XMPP events only if we have new connection object.\n        this.eventManager.setupXMPPListeners();\n    }\n\n    const { config } = this.options;\n\n    this.room = this.xmpp.createRoom(this.options.name, config);\n\n    // Connection interrupted/restored listeners\n    this._onIceConnectionInterrupted\n        = this._onIceConnectionInterrupted.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_INTERRUPTED, this._onIceConnectionInterrupted);\n\n    this._onIceConnectionRestored = this._onIceConnectionRestored.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_RESTORED, this._onIceConnectionRestored);\n\n    this._onIceConnectionEstablished\n        = this._onIceConnectionEstablished.bind(this);\n    this.room.addListener(\n        XMPPEvents.CONNECTION_ESTABLISHED, this._onIceConnectionEstablished);\n\n    this.room.updateDeviceAvailability(RTC.getDeviceAvailability());\n\n    if (!this.rtc) {\n        this.rtc = new RTC(this, options);\n        this.eventManager.setupRTCListeners();\n    }\n\n    this.participantConnectionStatus\n        = new ParticipantConnectionStatusHandler(\n            this.rtc,\n            this,\n            {\n                // Both these options are not public API, leaving it here only\n                // as an entry point through config for tuning up purposes.\n                // Default values should be adjusted as soon as optimal values\n                // are discovered.\n                rtcMuteTimeout: config._peerConnStatusRtcMuteTimeout,\n                outOfLastNTimeout: config._peerConnStatusOutOfLastNTimeout\n            });\n    this.participantConnectionStatus.init();\n\n    if (!this.statistics) {\n        // XXX The property location on the global variable window is not\n        // defined in all execution environments (e.g. react-native). While\n        // jitsi-meet may polyfill it when executing on react-native, it is\n        // better for the cross-platform support to not require window.location\n        // especially when there is a worthy alternative (as demonstrated\n        // bellow).\n        const windowLocation = window.location;\n\n        let callStatsAliasName = this.myUserId();\n\n        if (config.enableDisplayNameInStats && config.displayName) {\n            callStatsAliasName = config.displayName;\n        }\n\n        this.statistics = new Statistics(this.xmpp, {\n            callStatsAliasName,\n            callStatsConfIDNamespace:\n                config.callStatsConfIDNamespace\n                    || (windowLocation && windowLocation.hostname)\n                    || (config.hosts && config.hosts.domain),\n            callStatsCustomScriptUrl: config.callStatsCustomScriptUrl,\n            callStatsID: config.callStatsID,\n            callStatsSecret: config.callStatsSecret,\n            roomName: this.options.name,\n            swapUserNameAndAlias: config.enableStatsID,\n            applicationName: config.applicationName,\n            getWiFiStatsMethod: config.getWiFiStatsMethod\n        });\n    }\n\n    this.eventManager.setupChatRoomListeners();\n\n    // Always add listeners because on reload we are executing leave and the\n    // listeners are removed from statistics module.\n    this.eventManager.setupStatisticsListeners();\n\n    if (config.enableTalkWhileMuted) {\n        // eslint-disable-next-line no-new\n        new TalkMutedDetection(\n            this,\n            () =>\n                this.eventEmitter.emit(JitsiConferenceEvents.TALK_WHILE_MUTED));\n    }\n\n    if ('channelLastN' in config) {\n        this.setLastN(config.channelLastN);\n    }\n\n    /**\n     * Emits {@link JitsiConferenceEvents.JVB121_STATUS}.\n     * @type {Jvb121EventGenerator}\n     */\n    this.jvb121Status = new Jvb121EventGenerator(this);\n\n    // creates dominant speaker detection that works only in p2p mode\n    this.p2pDominantSpeakerDetection = new P2PDominantSpeakerDetection(this);\n};\n\n/**\n * Joins the conference.\n * @param password {string} the password\n */\nJitsiConference.prototype.join = function(password) {\n    if (this.room) {\n        this.room.join(password);\n    }\n};\n\n/**\n * Authenticates and upgrades the role of the local participant/user.\n *\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\n * authenticating and upgrading the role of the local participant/user finishes\n * and (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\n * process.\n */\nJitsiConference.prototype.authenticateAndUpgradeRole = function(...args) {\n    return authenticateAndUpgradeRole.apply(this, args);\n};\n\n/**\n * Check if joined to the conference.\n */\nJitsiConference.prototype.isJoined = function() {\n    return this.room && this.room.joined;\n};\n\n/**\n * Tells whether or not the P2P mode is enabled in the configuration.\n * @return {boolean}\n */\nJitsiConference.prototype.isP2PEnabled = function() {\n    return Boolean(this.options.config.p2p && this.options.config.p2p.enabled)\n\n        // FIXME: remove once we have a default config template. -saghul\n        || typeof this.options.config.p2p === 'undefined';\n};\n\n/**\n * When in P2P test mode, the conference will not automatically switch to P2P\n * when there 2 participants.\n * @return {boolean}\n */\nJitsiConference.prototype.isP2PTestModeEnabled = function() {\n    return Boolean(this.options.config.testing\n        && this.options.config.testing.p2pTestMode);\n};\n\n/**\n * Leaves the conference.\n * @returns {Promise}\n */\nJitsiConference.prototype.leave = function() {\n    if (this.participantConnectionStatus) {\n        this.participantConnectionStatus.dispose();\n        this.participantConnectionStatus = null;\n    }\n    if (this.avgRtpStatsReporter) {\n        this.avgRtpStatsReporter.dispose();\n        this.avgRtpStatsReporter = null;\n    }\n\n    this.getLocalTracks().forEach(track => this.onLocalTrackRemoved(track));\n\n    this.rtc.closeBridgeChannel();\n    if (this.statistics) {\n        this.statistics.dispose();\n    }\n\n    // Close both JVb and P2P JingleSessions\n    if (this.jvbJingleSession) {\n        this.jvbJingleSession.close();\n        this.jvbJingleSession = null;\n    }\n    if (this.p2pJingleSession) {\n        this.p2pJingleSession.close();\n        this.p2pJingleSession = null;\n    }\n\n    // leave the conference\n    if (this.room) {\n        const room = this.room;\n\n        // Unregister connection state listeners\n        room.removeListener(\n            XMPPEvents.CONNECTION_INTERRUPTED,\n            this._onIceConnectionInterrupted);\n        room.removeListener(\n            XMPPEvents.CONNECTION_RESTORED,\n            this._onIceConnectionRestored);\n        room.removeListener(\n            XMPPEvents.CONNECTION_ESTABLISHED,\n            this._onIceConnectionEstablished);\n\n        this.room = null;\n\n        return room.leave().catch(() => {\n            // remove all participants because currently the conference won't\n            // be usable anyway. This is done on success automatically by the\n            // ChatRoom instance.\n            this.getParticipants().forEach(\n                participant => this.onMemberLeft(participant.getJid()));\n        });\n    }\n\n    // If this.room == null we are calling second time leave().\n    return Promise.reject(\n        new Error('The conference is has been already left'));\n};\n\n/**\n * Returns name of this conference.\n */\nJitsiConference.prototype.getName = function() {\n    return this.options.name;\n};\n\n/**\n * Check if authentication is enabled for this conference.\n */\nJitsiConference.prototype.isAuthEnabled = function() {\n    return this.authEnabled;\n};\n\n/**\n * Check if user is logged in.\n */\nJitsiConference.prototype.isLoggedIn = function() {\n    return Boolean(this.authIdentity);\n};\n\n/**\n * Get authorized login.\n */\nJitsiConference.prototype.getAuthLogin = function() {\n    return this.authIdentity;\n};\n\n/**\n * Check if external authentication is enabled for this conference.\n */\nJitsiConference.prototype.isExternalAuthEnabled = function() {\n    return this.room && this.room.moderator.isExternalAuthEnabled();\n};\n\n/**\n * Get url for external authentication.\n * @param {boolean} [urlForPopup] if true then return url for login popup,\n *                                else url of login page.\n * @returns {Promise}\n */\nJitsiConference.prototype.getExternalAuthUrl = function(urlForPopup) {\n    return new Promise((resolve, reject) => {\n        if (!this.isExternalAuthEnabled()) {\n            reject();\n\n            return;\n        }\n        if (urlForPopup) {\n            this.room.moderator.getPopupLoginUrl(resolve, reject);\n        } else {\n            this.room.moderator.getLoginUrl(resolve, reject);\n        }\n    });\n};\n\n/**\n * Returns the local tracks of the given media type, or all local tracks if no\n * specific type is given.\n * @param {MediaType} [mediaType] Optional media type (audio or video).\n */\nJitsiConference.prototype.getLocalTracks = function(mediaType) {\n    let tracks = [];\n\n    if (this.rtc) {\n        tracks = this.rtc.getLocalTracks(mediaType);\n    }\n\n    return tracks;\n};\n\n/**\n * Obtains local audio track.\n * @return {JitsiLocalTrack|null}\n */\nJitsiConference.prototype.getLocalAudioTrack = function() {\n    return this.rtc ? this.rtc.getLocalAudioTrack() : null;\n};\n\n/**\n * Obtains local video track.\n * @return {JitsiLocalTrack|null}\n */\nJitsiConference.prototype.getLocalVideoTrack = function() {\n    return this.rtc ? this.rtc.getLocalVideoTrack() : null;\n};\n\n/**\n * Attaches a handler for events(For example - \"participant joined\".) in the\n * conference. All possible event are defined in JitsiConferenceEvents.\n * @param eventId the event ID.\n * @param handler handler for the event.\n *\n * Note: consider adding eventing functionality by extending an EventEmitter\n * impl, instead of rolling ourselves\n */\nJitsiConference.prototype.on = function(eventId, handler) {\n    if (this.eventEmitter) {\n        this.eventEmitter.on(eventId, handler);\n    }\n};\n\n/**\n * Removes event listener\n * @param eventId the event ID.\n * @param [handler] optional, the specific handler to unbind\n *\n * Note: consider adding eventing functionality by extending an EventEmitter\n * impl, instead of rolling ourselves\n */\nJitsiConference.prototype.off = function(eventId, handler) {\n    if (this.eventEmitter) {\n        this.eventEmitter.removeListener(eventId, handler);\n    }\n};\n\n// Common aliases for event emitter\nJitsiConference.prototype.addEventListener = JitsiConference.prototype.on;\nJitsiConference.prototype.removeEventListener = JitsiConference.prototype.off;\n\n/**\n * Receives notifications from other participants about commands / custom events\n * (sent by sendCommand or sendCommandOnce methods).\n * @param command {String} the name of the command\n * @param handler {Function} handler for the command\n */\nJitsiConference.prototype.addCommandListener = function(command, handler) {\n    if (this.room) {\n        this.room.addPresenceListener(command, handler);\n    }\n};\n\n/**\n  * Removes command  listener\n  * @param command {String} the name of the command\n  */\nJitsiConference.prototype.removeCommandListener = function(command) {\n    if (this.room) {\n        this.room.removePresenceListener(command);\n    }\n};\n\n/**\n * Sends text message to the other participants in the conference\n * @param message the text message.\n */\nJitsiConference.prototype.sendTextMessage = function(message) {\n    if (this.room) {\n        this.room.sendMessage(message);\n    }\n};\n\n/**\n * Send presence command.\n * @param name {String} the name of the command.\n * @param values {Object} with keys and values that will be sent.\n **/\nJitsiConference.prototype.sendCommand = function(name, values) {\n    if (this.room) {\n        this.room.addToPresence(name, values);\n        this.room.sendPresence();\n    }\n};\n\n/**\n * Send presence command one time.\n * @param name {String} the name of the command.\n * @param values {Object} with keys and values that will be sent.\n **/\nJitsiConference.prototype.sendCommandOnce = function(name, values) {\n    this.sendCommand(name, values);\n    this.removeCommand(name);\n};\n\n/**\n * Removes presence command.\n * @param name {String} the name of the command.\n **/\nJitsiConference.prototype.removeCommand = function(name) {\n    if (this.room) {\n        this.room.removeFromPresence(name);\n    }\n};\n\n/**\n * Sets the display name for this conference.\n * @param name the display name to set\n */\nJitsiConference.prototype.setDisplayName = function(name) {\n    if (this.room) {\n        // remove previously set nickname\n        this.room.removeFromPresence('nick');\n\n        this.room.addToPresence('nick', {\n            attributes: { xmlns: 'http://jabber.org/protocol/nick' },\n            value: name\n        });\n        this.room.sendPresence();\n    }\n};\n\n/**\n * Set new subject for this conference. (available only for moderator)\n * @param {string} subject new subject\n */\nJitsiConference.prototype.setSubject = function(subject) {\n    if (this.room && this.isModerator()) {\n        this.room.setSubject(subject);\n    }\n};\n\n/**\n * Get a transcriber object for all current participants in this conference\n * @return {Transcriber} the transcriber object\n */\nJitsiConference.prototype.getTranscriber = function() {\n    if (this.transcriber === undefined) {\n        this.transcriber = new Transcriber();\n\n        // add all existing local audio tracks to the transcriber\n        const localAudioTracks = this.getLocalTracks(MediaType.AUDIO);\n\n        for (const localAudio of localAudioTracks) {\n            this.transcriber.addTrack(localAudio);\n        }\n\n        // and all remote audio tracks\n        const remoteAudioTracks = this.rtc.getRemoteTracks(MediaType.AUDIO);\n\n        for (const remoteTrack of remoteAudioTracks) {\n            this.transcriber.addTrack(remoteTrack);\n        }\n    }\n\n    return this.transcriber;\n};\n\n/**\n * Returns the transcription status.\n *\n * @returns {String} \"on\" or \"off\".\n */\nJitsiConference.prototype.getTranscriptionStatus = function() {\n    return this.room.transcriptionStatus;\n};\n\n/**\n * Adds JitsiLocalTrack object to the conference.\n * @param track the JitsiLocalTrack object.\n * @returns {Promise<JitsiLocalTrack>}\n * @throws {Error} if the specified track is a video track and there is already\n * another video track in the conference.\n */\nJitsiConference.prototype.addTrack = function(track) {\n    if (track.isVideoTrack()) {\n        // Ensure there's exactly 1 local video track in the conference.\n        const localVideoTrack = this.rtc.getLocalVideoTrack();\n\n        if (localVideoTrack) {\n            // Don't be excessively harsh and severe if the API client happens\n            // to attempt to add the same local video track twice.\n            if (track === localVideoTrack) {\n                return Promise.resolve(track);\n            }\n\n            return Promise.reject(new Error(\n                'cannot add second video track to the conference'));\n\n        }\n    }\n\n    return this.replaceTrack(null, track);\n};\n\n/**\n * Fires TRACK_AUDIO_LEVEL_CHANGED change conference event (for local tracks).\n * @param {number} audioLevel the audio level\n * @param {TraceablePeerConnection} [tpc]\n */\nJitsiConference.prototype._fireAudioLevelChangeEvent = function(\n        audioLevel,\n        tpc) {\n    const activeTpc = this.getActivePeerConnection();\n\n    // There will be no TraceablePeerConnection if audio levels do not come from\n    // a peerconnection. LocalStatsCollector.js measures audio levels using Web\n    // Audio Analyser API and emits local audio levels events through\n    // JitsiTrack.setAudioLevel, but does not provide TPC instance which is\n    // optional.\n    if (!tpc || activeTpc === tpc) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n            this.myUserId(), audioLevel);\n    }\n};\n\n/**\n * Fires TRACK_MUTE_CHANGED change conference event.\n * @param track the JitsiTrack object related to the event.\n */\nJitsiConference.prototype._fireMuteChangeEvent = function(track) {\n    // check if track was muted by focus and now is unmuted by user\n    if (this.isMutedByFocus && track.isAudioTrack() && !track.isMuted()) {\n        this.isMutedByFocus = false;\n\n        // unmute local user on server\n        this.room.muteParticipant(this.room.myroomjid, false);\n    }\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track);\n};\n\n/**\n * Clear JitsiLocalTrack properties and listeners.\n * @param track the JitsiLocalTrack object.\n */\nJitsiConference.prototype.onLocalTrackRemoved = function(track) {\n    track._setConference(null);\n    this.rtc.removeLocalTrack(track);\n    track.removeEventListener(JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        track.muteHandler);\n    track.removeEventListener(JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        track.audioLevelHandler);\n\n    // send event for stopping screen sharing\n    // FIXME: we assume we have only one screen sharing track\n    // if we change this we need to fix this check\n    if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\n        this.statistics.sendScreenSharingEvent(false);\n    }\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track);\n};\n\n/**\n * Removes JitsiLocalTrack from the conference and performs\n * a new offer/answer cycle.\n * @param {JitsiLocalTrack} track\n * @returns {Promise}\n */\nJitsiConference.prototype.removeTrack = function(track) {\n    return this.replaceTrack(track, null);\n};\n\n/**\n * Replaces oldTrack with newTrack and performs a single offer/answer\n *  cycle after both operations are done.  Either oldTrack or newTrack\n *  can be null; replacing a valid 'oldTrack' with a null 'newTrack'\n *  effectively just removes 'oldTrack'\n * @param {JitsiLocalTrack} oldTrack the current stream in use to be replaced\n * @param {JitsiLocalTrack} newTrack the new stream to use\n * @returns {Promise} resolves when the replacement is finished\n */\nJitsiConference.prototype.replaceTrack = function(oldTrack, newTrack) {\n    // First do the removal of the oldTrack at the JitsiConference level\n    if (oldTrack) {\n        if (oldTrack.disposed) {\n            return Promise.reject(\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\n        }\n    }\n    if (newTrack) {\n        if (newTrack.disposed) {\n            return Promise.reject(\n                new JitsiTrackError(JitsiTrackErrors.TRACK_IS_DISPOSED));\n        }\n    }\n\n    // Now replace the stream at the lower levels\n    return this._doReplaceTrack(oldTrack, newTrack)\n        .then(() => {\n            if (oldTrack) {\n                this.onLocalTrackRemoved(oldTrack);\n            }\n            if (newTrack) {\n                // Now handle the addition of the newTrack at the\n                // JitsiConference level\n                this._setupNewTrack(newTrack);\n            }\n\n            return Promise.resolve();\n        }, error => Promise.reject(new Error(error)));\n};\n\n/**\n * Replaces the tracks at the lower level by going through the Jingle session\n * and WebRTC peer connection. The method will resolve immediately if there is\n * currently no JingleSession started.\n * @param {JitsiLocalTrack|null} oldTrack the track to be removed during\n * the process or <tt>null</t> if the method should act as \"add track\"\n * @param {JitsiLocalTrack|null} newTrack the new track to be added or\n * <tt>null</tt> if the method should act as \"remove track\"\n * @return {Promise} resolved when the process is done or rejected with a string\n * which describes the error.\n * @private\n */\nJitsiConference.prototype._doReplaceTrack = function(oldTrack, newTrack) {\n    const replaceTrackPromises = [];\n\n    if (this.jvbJingleSession) {\n        replaceTrackPromises.push(\n            this.jvbJingleSession.replaceTrack(oldTrack, newTrack));\n    } else {\n        logger.info('_doReplaceTrack - no JVB JingleSession');\n    }\n\n    if (this.p2pJingleSession) {\n        replaceTrackPromises.push(\n            this.p2pJingleSession.replaceTrack(oldTrack, newTrack));\n    } else {\n        logger.info('_doReplaceTrack - no P2P JingleSession');\n    }\n\n    return Promise.all(replaceTrackPromises);\n};\n\n/**\n * Operations related to creating a new track\n * @param {JitsiLocalTrack} newTrack the new track being created\n */\nJitsiConference.prototype._setupNewTrack = function(newTrack) {\n    if (newTrack.isAudioTrack() || (newTrack.isVideoTrack()\n            && newTrack.videoType !== VideoType.DESKTOP)) {\n        // Report active device to statistics\n        const devices = RTC.getCurrentlyAvailableMediaDevices();\n        const device\n            = devices.find(\n                d =>\n                    d.kind === `${newTrack.getTrack().kind}input`\n                        && d.label === newTrack.getTrack().label);\n\n        if (device) {\n            Statistics.sendActiveDeviceListEvent(\n                RTC.getEventDataForActiveDevice(device));\n        }\n    }\n    if (newTrack.isVideoTrack()) {\n        this.removeCommand('videoType');\n        this.sendCommand('videoType', {\n            value: newTrack.videoType,\n            attributes: {\n                xmlns: 'http://jitsi.org/jitmeet/video'\n            }\n        });\n    }\n    this.rtc.addLocalTrack(newTrack);\n\n    // ensure that we're sharing proper \"is muted\" state\n    if (newTrack.isAudioTrack()) {\n        this.room.setAudioMute(newTrack.isMuted());\n    } else {\n        this.room.setVideoMute(newTrack.isMuted());\n    }\n\n    newTrack.muteHandler = this._fireMuteChangeEvent.bind(this, newTrack);\n    newTrack.audioLevelHandler = this._fireAudioLevelChangeEvent.bind(this);\n    newTrack.addEventListener(\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        newTrack.muteHandler);\n    newTrack.addEventListener(\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        newTrack.audioLevelHandler);\n\n    newTrack._setConference(this);\n\n    this.eventEmitter.emit(JitsiConferenceEvents.TRACK_ADDED, newTrack);\n};\n\n/**\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to add\n * back the underlying WebRTC MediaStream to the PeerConnection (which has\n * removed on video mute).\n * @param {JitsiLocalTrack} track the local track that will be added as part of\n * the unmute operation.\n * @return {Promise} resolved when the process is done or rejected with a string\n * which describes the error.\n */\nJitsiConference.prototype._addLocalTrackAsUnmute = function(track) {\n    const addAsUnmutePromises = [];\n\n    if (this.jvbJingleSession) {\n        addAsUnmutePromises.push(this.jvbJingleSession.addTrackAsUnmute(track));\n    } else {\n        logger.info(\n            'Add local MediaStream as unmute -'\n                + ' no JVB Jingle session started yet');\n    }\n\n    if (this.p2pJingleSession) {\n        addAsUnmutePromises.push(this.p2pJingleSession.addTrackAsUnmute(track));\n    } else {\n        logger.info(\n            'Add local MediaStream as unmute -'\n                + ' no P2P Jingle session started yet');\n    }\n\n    return Promise.all(addAsUnmutePromises);\n};\n\n/**\n * Method called by the {@link JitsiLocalTrack} (a video one) in order to remove\n * the underlying WebRTC MediaStream from the PeerConnection. The purpose of\n * that is to stop sending any data and turn off the HW camera device.\n * @param {JitsiLocalTrack} track the local track that will be removed.\n * @return {Promise}\n */\nJitsiConference.prototype._removeLocalTrackAsMute = function(track) {\n    const removeAsMutePromises = [];\n\n    if (this.jvbJingleSession) {\n        removeAsMutePromises.push(\n            this.jvbJingleSession.removeTrackAsMute(track));\n    } else {\n        logger.info(\n            'Remove local MediaStream - no JVB JingleSession started yet');\n    }\n    if (this.p2pJingleSession) {\n        removeAsMutePromises.push(\n            this.p2pJingleSession.removeTrackAsMute(track));\n    } else {\n        logger.info(\n            'Remove local MediaStream - no P2P JingleSession started yet');\n    }\n\n    return Promise.all(removeAsMutePromises);\n};\n\n/**\n * Get role of the local user.\n * @returns {string} user role: 'moderator' or 'none'\n */\nJitsiConference.prototype.getRole = function() {\n    return this.room.role;\n};\n\n/**\n * Check if local user is moderator.\n * @returns {boolean|null} true if local user is moderator, false otherwise. If\n * we're no longer in the conference room then <tt>null</tt> is returned.\n */\nJitsiConference.prototype.isModerator = function() {\n    return this.room ? this.room.isModerator() : null;\n};\n\n/**\n * Set password for the room.\n * @param {string} password new password for the room.\n * @returns {Promise}\n */\nJitsiConference.prototype.lock = function(password) {\n    if (!this.isModerator()) {\n        return Promise.reject();\n    }\n\n    return new Promise((resolve, reject) => {\n        this.room.lockRoom(\n            password || '',\n            () => resolve(),\n            err => reject(err),\n            () => reject(JitsiConferenceErrors.PASSWORD_NOT_SUPPORTED));\n    });\n};\n\n/**\n * Remove password from the room.\n * @returns {Promise}\n */\nJitsiConference.prototype.unlock = function() {\n    return this.lock();\n};\n\n/**\n * Elects the participant with the given id to be the selected participant in\n * order to receive higher video quality (if simulcast is enabled).\n * Or cache it if channel is not created and send it once channel is available.\n * @param participantId the identifier of the participant\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n */\nJitsiConference.prototype.selectParticipant = function(participantId) {\n    this.rtc.selectEndpoint(participantId);\n};\n\n/**\n * Elects the participant with the given id to be the pinned participant in\n * order to always receive video for this participant (even when last n is\n * enabled).\n * @param participantId the identifier of the participant\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n */\nJitsiConference.prototype.pinParticipant = function(participantId) {\n    this.rtc.pinEndpoint(participantId);\n};\n\n/**\n * Obtains the current value for \"lastN\". See {@link setLastN} for more info.\n * @returns {number}\n */\nJitsiConference.prototype.getLastN = function() {\n    return this.rtc.getLastN();\n};\n\n/**\n * Selects a new value for \"lastN\". The requested amount of videos are going\n * to be delivered after the value is in effect. Set to -1 for unlimited or\n * all available videos.\n * @param lastN the new number of videos the user would like to receive.\n * @throws Error or RangeError if the given value is not a number or is smaller\n * than -1.\n */\nJitsiConference.prototype.setLastN = function(lastN) {\n    if (!Number.isInteger(lastN) && !Number.parseInt(lastN, 10)) {\n        throw new Error(`Invalid value for lastN: ${lastN}`);\n    }\n    const n = Number(lastN);\n\n    if (n < -1) {\n        throw new RangeError('lastN cannot be smaller than -1');\n    }\n    this.rtc.setLastN(n);\n\n    // If the P2P session is not fully established yet, we wait until it gets\n    // established.\n    if (this.p2pJingleSession) {\n        const isVideoActive = n !== 0;\n\n        this.p2pJingleSession\n            .setMediaTransferActive(true, isVideoActive)\n            .catch(error => {\n                logger.error(\n                    `Failed to adjust video transfer status (${isVideoActive})`,\n                    error);\n            });\n    }\n};\n\n/**\n * Checks if the participant given by participantId is currently included in\n * the last N.\n * @param {string} participantId the identifier of the participant we would\n * like to check.\n * @return {boolean} true if the participant with id is in the last N set or\n * if there's no last N set, false otherwise.\n * @deprecated this method should never be used to figure out the UI, but\n * {@link ParticipantConnectionStatus} should be used instead.\n */\nJitsiConference.prototype.isInLastN = function(participantId) {\n    return this.rtc.isInLastN(participantId);\n};\n\n/**\n * @return Array<JitsiParticipant> an array of all participants in this\n * conference.\n */\nJitsiConference.prototype.getParticipants = function() {\n    return Object.keys(this.participants).map(function(key) {\n        return this.participants[key];\n    }, this);\n};\n\n/**\n * Returns the number of participants in the conference, including the local\n * participant.\n * @param countHidden {boolean} Whether or not to include hidden participants\n * in the count. Default: false.\n **/\nJitsiConference.prototype.getParticipantCount\n    = function(countHidden = false) {\n\n        let participants = this.getParticipants();\n\n        if (!countHidden) {\n            participants = participants.filter(p => !p.isHidden());\n        }\n\n        // Add one for the local participant.\n        return participants.length + 1;\n    };\n\n/**\n * @returns {JitsiParticipant} the participant in this conference with the\n * specified id (or undefined if there isn't one).\n * @param id the id of the participant.\n */\nJitsiConference.prototype.getParticipantById = function(id) {\n    return this.participants[id];\n};\n\n/**\n * Kick participant from this conference.\n * @param {string} id id of the participant to kick\n */\nJitsiConference.prototype.kickParticipant = function(id) {\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    this.room.kick(participant.getJid());\n};\n\n/**\n * Mutes a participant.\n * @param {string} id The id of the participant to mute.\n */\nJitsiConference.prototype.muteParticipant = function(id) {\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    this.room.muteParticipant(participant.getJid(), true);\n};\n\n/* eslint-disable max-params */\n\n/**\n * Notifies this JitsiConference that a new member has joined its chat room.\n *\n * FIXME This should NOT be exposed!\n *\n * @param jid the jid of the participant in the MUC\n * @param nick the display name of the participant\n * @param role the role of the participant in the MUC\n * @param isHidden indicates if this is a hidden participant (system\n * participant for example a recorder).\n * @param statsID the participant statsID (optional)\n * @param status the initial status if any\n */\nJitsiConference.prototype.onMemberJoined = function(\n        jid, nick, role, isHidden, statsID, status) {\n    const id = Strophe.getResourceFromJid(jid);\n\n    if (id === 'focus' || this.myUserId() === id) {\n        return;\n    }\n    const participant\n        = new JitsiParticipant(jid, this, nick, isHidden, statsID, status);\n\n    participant._role = role;\n    this.participants[id] = participant;\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.USER_JOINED,\n        id,\n        participant);\n    this.xmpp.caps.getFeatures(jid)\n        .then(features => {\n            participant._supportsDTMF = features.has('urn:xmpp:jingle:dtmf:0');\n            this.updateDTMFSupport();\n        },\n        error => logger.error(`Failed to discover features of ${jid}`, error));\n\n    this._maybeStartOrStopP2P();\n};\n\n/* eslint-enable max-params */\n\nJitsiConference.prototype.onMemberLeft = function(jid) {\n    const id = Strophe.getResourceFromJid(jid);\n\n    if (id === 'focus' || this.myUserId() === id) {\n        return;\n    }\n    const participant = this.participants[id];\n\n    delete this.participants[id];\n\n    const removedTracks = this.rtc.removeRemoteTracks(id);\n\n    removedTracks.forEach(\n        track =>\n            this.eventEmitter.emit(JitsiConferenceEvents.TRACK_REMOVED, track));\n\n    // there can be no participant in case the member that left is focus\n    if (participant) {\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.USER_LEFT, id, participant);\n    }\n\n    this._maybeStartOrStopP2P(true /* triggered by user left event */);\n};\n\n/**\n * Method called on local MUC role change.\n * @param {string} role the name of new user's role as defined by XMPP MUC.\n */\nJitsiConference.prototype.onLocalRoleChanged = function(role) {\n    // Emit role changed for local  JID\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.USER_ROLE_CHANGED, this.myUserId(), role);\n\n    // Maybe start P2P\n    this._maybeStartOrStopP2P();\n};\n\nJitsiConference.prototype.onUserRoleChanged = function(jid, role) {\n    const id = Strophe.getResourceFromJid(jid);\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n    participant._role = role;\n    this.eventEmitter.emit(JitsiConferenceEvents.USER_ROLE_CHANGED, id, role);\n};\n\nJitsiConference.prototype.onDisplayNameChanged = function(jid, displayName) {\n    const id = Strophe.getResourceFromJid(jid);\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        return;\n    }\n\n    if (participant._displayName === displayName) {\n        return;\n    }\n\n    participant._displayName = displayName;\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\n        id,\n        displayName);\n};\n\n/**\n * Notifies this JitsiConference that a JitsiRemoteTrack was added into\n * the conference.\n *\n * @param {JitsiRemoteTrack} track the JitsiRemoteTrack which was added to this\n * JitsiConference\n */\nJitsiConference.prototype.onRemoteTrackAdded = function(track) {\n    if (track.isP2P && !this.isP2PActive()) {\n        logger.info(\n            'Trying to add remote P2P track, when not in P2P - IGNORED');\n\n        return;\n    } else if (!track.isP2P && this.isP2PActive()) {\n        logger.info(\n            'Trying to add remote JVB track, when in P2P - IGNORED');\n\n        return;\n    }\n\n    const id = track.getParticipantId();\n    const participant = this.getParticipantById(id);\n\n    if (!participant) {\n        logger.error(`No participant found for id: ${id}`);\n\n        return;\n    }\n\n    // Add track to JitsiParticipant.\n    participant._tracks.push(track);\n\n    if (this.transcriber) {\n        this.transcriber.addTrack(track);\n    }\n\n    const emitter = this.eventEmitter;\n\n    track.addEventListener(\n        JitsiTrackEvents.TRACK_MUTE_CHANGED,\n        () => emitter.emit(JitsiConferenceEvents.TRACK_MUTE_CHANGED, track));\n    track.addEventListener(\n        JitsiTrackEvents.TRACK_AUDIO_LEVEL_CHANGED,\n        (audioLevel, tpc) => {\n            const activeTPC = this.getActivePeerConnection();\n\n            if (activeTPC === tpc) {\n                emitter.emit(\n                    JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n                    id,\n                    audioLevel);\n            }\n        }\n    );\n\n    emitter.emit(JitsiConferenceEvents.TRACK_ADDED, track);\n};\n\n/**\n * Callback called by the Jingle plugin when 'session-answer' is received.\n * @param {JingleSessionPC} session the Jingle session for which an answer was\n * received.\n * @param {jQuery} answer a jQuery selector pointing to 'jingle' IQ element\n */\n// eslint-disable-next-line no-unused-vars\nJitsiConference.prototype.onCallAccepted = function(session, answer) {\n    if (this.p2pJingleSession === session) {\n        logger.info('P2P setAnswer');\n        this.p2pJingleSession.setAnswer(answer);\n    }\n};\n\n/**\n * Callback called by the Jingle plugin when 'transport-info' is received.\n * @param {JingleSessionPC} session the Jingle session for which the IQ was\n * received\n * @param {jQuery} transportInfo a jQuery selector pointing to 'jingle' IQ\n * element\n */\n// eslint-disable-next-line no-unused-vars\nJitsiConference.prototype.onTransportInfo = function(session, transportInfo) {\n    if (this.p2pJingleSession === session) {\n        logger.info('P2P addIceCandidates');\n        this.p2pJingleSession.addIceCandidates(transportInfo);\n    }\n};\n\n/**\n * Notifies this JitsiConference that a JitsiRemoteTrack was removed from\n * the conference.\n *\n * @param {JitsiRemoteTrack} removedTrack\n */\nJitsiConference.prototype.onRemoteTrackRemoved = function(removedTrack) {\n    this.getParticipants().forEach(participant => {\n        const tracks = participant.getTracks();\n\n        for (let i = 0; i < tracks.length; i++) {\n            if (tracks[i] === removedTrack) {\n                // Since the tracks have been compared and are\n                // considered equal the result of splice can be ignored.\n                participant._tracks.splice(i, 1);\n\n                this.eventEmitter.emit(\n                    JitsiConferenceEvents.TRACK_REMOVED, removedTrack);\n\n                if (this.transcriber) {\n                    this.transcriber.removeTrack(removedTrack);\n                }\n\n                break;\n            }\n        }\n    }, this);\n};\n\n/**\n * Handles an incoming call event for the P2P jingle session.\n */\nJitsiConference.prototype._onIncomingCallP2P = function(\n        jingleSession,\n        jingleOffer) {\n\n    let rejectReason;\n    const role = this.room.getMemberRole(jingleSession.remoteJid);\n\n    if (role !== 'moderator') {\n        rejectReason = {\n            reason: 'security-error',\n            reasonDescription: 'Only focus can start new sessions',\n            errorMsg: 'Rejecting session-initiate from non-focus and'\n                        + `non-moderator user: ${jingleSession.remoteJid}`\n        };\n    } else if (!RTCBrowserType.isP2PSupported()) {\n        rejectReason = {\n            reason: 'unsupported-applications',\n            reasonDescription: 'P2P not supported',\n            errorMsg: 'This client does not support P2P connections'\n        };\n    } else if (!this.isP2PEnabled() && !this.isP2PTestModeEnabled()) {\n        rejectReason = {\n            reason: 'decline',\n            reasonDescription: 'P2P disabled',\n            errorMsg: 'P2P mode disabled in the configuration'\n        };\n    } else if (this.p2pJingleSession) {\n        // Reject incoming P2P call (already in progress)\n        rejectReason = {\n            reason: 'busy',\n            reasonDescription: 'P2P already in progress',\n            errorMsg: 'Duplicated P2P \"session-initiate\"'\n        };\n    }\n\n    if (rejectReason) {\n        this._rejectIncomingCall(jingleSession, rejectReason);\n    } else {\n        this._acceptP2PIncomingCall(jingleSession, jingleOffer);\n    }\n};\n\n/**\n * Handles an incoming call event.\n */\nJitsiConference.prototype.onIncomingCall = function(\n        jingleSession,\n        jingleOffer,\n        now) {\n    // Handle incoming P2P call\n    if (jingleSession.isP2P) {\n        this._onIncomingCallP2P(jingleSession, jingleOffer);\n    } else {\n        if (!this.room.isFocus(jingleSession.remoteJid)) {\n            const description = 'Rejecting session-initiate from non-focus.';\n\n            this._rejectIncomingCall(\n                jingleSession, {\n                    reason: 'security-error',\n                    reasonDescription: description,\n                    errorMsg: description\n                });\n\n            return;\n        }\n        this._acceptJvbIncomingCall(jingleSession, jingleOffer, now);\n    }\n};\n\n/**\n * Accepts an incoming call event for the JVB jingle session.\n */\nJitsiConference.prototype._acceptJvbIncomingCall = function(\n        jingleSession,\n        jingleOffer,\n        now) {\n\n    // Accept incoming call\n    this.jvbJingleSession = jingleSession;\n    this.room.connectionTimes['session.initiate'] = now;\n\n    // Log \"session.restart\"\n    if (this.wasStopped) {\n        Statistics.sendEventToAll(SESSION_RESTART);\n    }\n\n    Statistics.analytics.sendEvent(\n        SESSION_INITIATE,\n        {\n            value: now - this.room.connectionTimes['muc.joined']\n        });\n    try {\n        jingleSession.initialize(false /* initiator */, this.room, this.rtc);\n    } catch (error) {\n        GlobalOnErrorHandler.callErrorHandler(error);\n    }\n\n    // Open a channel with the videobridge.\n    this._setBridgeChannel(jingleOffer, jingleSession.peerconnection);\n\n    // Add local tracks to the session\n    try {\n        jingleSession.acceptOffer(\n            jingleOffer,\n            () => {\n                // If for any reason invite for the JVB session arrived after\n                // the P2P has been established already the media transfer needs\n                // to be turned off here.\n                if (this.isP2PActive() && this.jvbJingleSession) {\n                    this._suspendMediaTransferForJvbConnection();\n                }\n            },\n            error => {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error(\n                    'Failed to accept incoming Jingle session', error);\n            },\n            this.getLocalTracks()\n        );\n\n        // Start callstats as soon as peerconnection is initialized,\n        // do not wait for XMPPEvents.PEERCONNECTION_READY, as it may never\n        // happen in case if user doesn't have or denied permission to\n        // both camera and microphone.\n        logger.info('Starting CallStats for JVB connection...');\n        this.statistics.startCallStats(\n            this.jvbJingleSession.peerconnection,\n            'jitsi' /* Remote user ID for JVB is 'jitsi' */);\n        this.statistics.startRemoteStats(this.jvbJingleSession.peerconnection);\n    } catch (e) {\n        GlobalOnErrorHandler.callErrorHandler(e);\n        logger.error(e);\n    }\n};\n\n/**\n * Sets the BridgeChannel.\n *\n * @param {jQuery} offerIq a jQuery selector pointing to the jingle element of\n * the offer IQ which may carry the WebSocket URL for the 'websocket'\n * BridgeChannel mode.\n * @param {TraceablePeerConnection} pc the peer connection which will be used\n * to listen for new WebRTC Data Channels (in the 'datachannel' mode).\n */\nJitsiConference.prototype._setBridgeChannel = function(offerIq, pc) {\n    let wsUrl = null;\n    const webSocket\n        = $(offerIq)\n            .find('>content>transport>web-socket')\n            .first();\n\n    if (webSocket.length === 1) {\n        wsUrl = webSocket[0].getAttribute('url');\n    }\n\n    let bridgeChannelType;\n\n    switch (this.options.config.openBridgeChannel) {\n    case 'datachannel':\n    case true:\n    case undefined:\n        bridgeChannelType = 'datachannel';\n        break;\n    case 'websocket':\n        bridgeChannelType = 'websocket';\n        break;\n    }\n\n    if (bridgeChannelType === 'datachannel'\n        && !RTCBrowserType.supportsDataChannels()) {\n        bridgeChannelType = 'websocket';\n    }\n\n    if (bridgeChannelType === 'datachannel') {\n        this.rtc.initializeBridgeChannel(pc, null);\n    } else if (bridgeChannelType === 'websocket' && wsUrl) {\n        this.rtc.initializeBridgeChannel(null, wsUrl);\n    }\n};\n\n/**\n * Rejects incoming Jingle call.\n * @param {JingleSessionPC} jingleSession the session instance to be rejected.\n * @param {object} [options]\n * @param {string} options.reason the name of the reason element as defined\n * by Jingle\n * @param {string} options.reasonDescription the reason description which will\n * be included in Jingle 'session-terminate' message.\n * @param {string} options.errorMsg an error message to be logged on global\n * error handler\n * @private\n */\nJitsiConference.prototype._rejectIncomingCall = function(\n        jingleSession,\n        options) {\n    if (options && options.errorMsg) {\n        GlobalOnErrorHandler.callErrorHandler(new Error(options.errorMsg));\n    }\n\n    // Terminate the jingle session with a reason\n    jingleSession.terminate(\n        null /* success callback => we don't care */,\n        error => {\n            logger.warn(\n                'An error occurred while trying to terminate'\n                    + ' invalid Jingle session', error);\n        }, {\n            reason: options && options.reason,\n            reasonDescription: options && options.reasonDescription,\n            sendSessionTerminate: true\n        });\n};\n\n/**\n * Handles the call ended event.\n * @param {JingleSessionPC} jingleSession the jingle session which has been\n * terminated.\n * @param {String} reasonCondition the Jingle reason condition.\n * @param {String|null} reasonText human readable reason text which may provide\n * more details about why the call has been terminated.\n */\nJitsiConference.prototype.onCallEnded = function(\n        jingleSession,\n        reasonCondition,\n        reasonText) {\n    logger.info(\n        `Call ended: ${reasonCondition} - ${reasonText} P2P ?${\n            jingleSession.isP2P}`);\n    if (jingleSession === this.jvbJingleSession) {\n        this.wasStopped = true;\n\n        Statistics.sendEventToAll(SESSION_TERMINATE);\n\n        // Stop the stats\n        if (this.statistics) {\n            this.statistics.stopRemoteStats(\n                this.jvbJingleSession.peerconnection);\n            logger.info('Stopping JVB CallStats');\n            this.statistics.stopCallStats(\n                this.jvbJingleSession.peerconnection);\n        }\n\n        // Current JVB JingleSession is no longer valid, so set it to null\n        this.jvbJingleSession = null;\n\n        // Let the RTC service do any cleanups\n        this.rtc.onCallEnded();\n    } else if (jingleSession === this.p2pJingleSession) {\n        // It's the responder who decides to enforce JVB mode, so that both\n        // initiator and responder are aware if it was intentional.\n        if (reasonCondition === 'decline' && reasonText === 'force JVB121') {\n            logger.info('In forced JVB 121 mode...');\n            Statistics.analytics.addPermanentProperties({ forceJvb121: true });\n        } else if (reasonCondition === 'connectivity-error'\n            && reasonText === 'ICE FAILED') {\n            // It can happen that the other peer detects ICE failed and\n            // terminates the session, before we get the event on our side.\n            // But we are able to parse the reason and mark it here.\n            Statistics.analytics.addPermanentProperties({ p2pFailed: true });\n        }\n        this._stopP2PSession();\n    } else {\n        logger.error(\n            'Received onCallEnded for invalid session',\n            jingleSession.sid,\n            jingleSession.remoteJid,\n            reasonCondition,\n            reasonText);\n    }\n};\n\n/**\n * Handles the suspend detected event. Leaves the room and fires suspended.\n * @param {JingleSessionPC} jingleSession\n */\nJitsiConference.prototype.onSuspendDetected = function(jingleSession) {\n    if (!jingleSession.isP2P) {\n        this.leave();\n        this.eventEmitter.emit(JitsiConferenceEvents.SUSPEND_DETECTED);\n    }\n};\n\nJitsiConference.prototype.updateDTMFSupport = function() {\n    let somebodySupportsDTMF = false;\n    const participants = this.getParticipants();\n\n    // check if at least 1 participant supports DTMF\n    for (let i = 0; i < participants.length; i += 1) {\n        if (participants[i].supportsDTMF()) {\n            somebodySupportsDTMF = true;\n            break;\n        }\n    }\n    if (somebodySupportsDTMF !== this.somebodySupportsDTMF) {\n        this.somebodySupportsDTMF = somebodySupportsDTMF;\n        this.eventEmitter.emit(\n            JitsiConferenceEvents.DTMF_SUPPORT_CHANGED,\n            somebodySupportsDTMF);\n    }\n};\n\n/**\n * Allows to check if there is at least one user in the conference\n * that supports DTMF.\n * @returns {boolean} true if somebody supports DTMF, false otherwise\n */\nJitsiConference.prototype.isDTMFSupported = function() {\n    return this.somebodySupportsDTMF;\n};\n\n/**\n * Returns the local user's ID\n * @return {string} local user's ID\n */\nJitsiConference.prototype.myUserId = function() {\n    return (\n        this.room && this.room.myroomjid\n            ? Strophe.getResourceFromJid(this.room.myroomjid)\n            : null);\n};\n\nJitsiConference.prototype.sendTones = function(tones, duration, pause) {\n    if (!this.dtmfManager) {\n        const peerConnection = this.getActivePeerConnection();\n\n        if (!peerConnection) {\n            logger.warn('cannot sendTones: no peer connection');\n\n            return;\n        }\n\n        const localAudio = this.getLocalAudioTrack();\n\n        if (!localAudio) {\n            logger.warn('cannot sendTones: no local audio stream');\n\n            return;\n        }\n        this.dtmfManager = new JitsiDTMFManager(localAudio, peerConnection);\n    }\n\n    this.dtmfManager.sendTones(tones, duration, pause);\n};\n\n/**\n * Returns true if recording is supported and false if not.\n */\nJitsiConference.prototype.isRecordingSupported = function() {\n    if (this.room) {\n        return this.room.isRecordingSupported();\n    }\n\n    return false;\n};\n\n/**\n * Returns null if the recording is not supported, \"on\" if the recording started\n * and \"off\" if the recording is not started.\n */\nJitsiConference.prototype.getRecordingState = function() {\n    return this.room ? this.room.getRecordingState() : undefined;\n};\n\n/**\n * Returns the url of the recorded video.\n */\nJitsiConference.prototype.getRecordingURL = function() {\n    return this.room ? this.room.getRecordingURL() : null;\n};\n\n/**\n * Starts/stops the recording\n */\nJitsiConference.prototype.toggleRecording = function(options) {\n    if (this.room) {\n        return this.room.toggleRecording(options, (status, error) => {\n            this.eventEmitter.emit(\n                JitsiConferenceEvents.RECORDER_STATE_CHANGED, status, error);\n        });\n    }\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.RECORDER_STATE_CHANGED, 'error',\n        new Error('The conference is not created yet!'));\n};\n\n/**\n * Returns true if the SIP calls are supported and false otherwise\n */\nJitsiConference.prototype.isSIPCallingSupported = function() {\n    if (this.room) {\n        return this.room.isSIPCallingSupported();\n    }\n\n    return false;\n};\n\n/**\n * Dials a number.\n * @param number the number\n */\nJitsiConference.prototype.dial = function(number) {\n    if (this.room) {\n        return this.room.dial(number);\n    }\n\n    return new Promise((resolve, reject) => {\n        reject(new Error('The conference is not created yet!'));\n    });\n};\n\n/**\n * Hangup an existing call\n */\nJitsiConference.prototype.hangup = function() {\n    if (this.room) {\n        return this.room.hangup();\n    }\n\n    return new Promise((resolve, reject) => {\n        reject(new Error('The conference is not created yet!'));\n    });\n};\n\n/**\n * Starts the transcription service.\n */\nJitsiConference.prototype.startTranscriber = function() {\n    return this.dial('jitsi_meet_transcribe');\n};\n\n\n/**\n * Stops the transcription service.\n */\nJitsiConference.prototype.stopTranscriber = JitsiConference.prototype.hangup;\n\n/**\n * Returns the phone number for joining the conference.\n */\nJitsiConference.prototype.getPhoneNumber = function() {\n    if (this.room) {\n        return this.room.getPhoneNumber();\n    }\n\n    return null;\n};\n\n/**\n * Returns the pin for joining the conference with phone.\n */\nJitsiConference.prototype.getPhonePin = function() {\n    if (this.room) {\n        return this.room.getPhonePin();\n    }\n\n    return null;\n};\n\n/**\n * Will return P2P or JVB <tt>TraceablePeerConnection</tt> depending on\n * which connection is currently active.\n *\n * @return {TraceablePeerConnection|null} null if there isn't any active\n * <tt>TraceablePeerConnection</tt> currently available.\n * @public (FIXME how to make package local ?)\n */\nJitsiConference.prototype.getActivePeerConnection = function() {\n    if (this.isP2PActive()) {\n        return this.p2pJingleSession.peerconnection;\n    }\n\n    return this.jvbJingleSession ? this.jvbJingleSession.peerconnection : null;\n};\n\n/**\n * Returns the connection state for the current room. Its ice connection state\n * for its session.\n * NOTE that \"completed\" ICE state which can appear on the P2P connection will\n * be converted to \"connected\".\n * @return {string|null} ICE state name or <tt>null</tt> if there is no active\n * peer connection at this time.\n */\nJitsiConference.prototype.getConnectionState = function() {\n    const peerConnection = this.getActivePeerConnection();\n\n    return peerConnection ? peerConnection.getConnectionState() : null;\n};\n\n/**\n * Make all new participants mute their audio/video on join.\n * @param policy {Object} object with 2 boolean properties for video and audio:\n * @param {boolean} audio if audio should be muted.\n * @param {boolean} video if video should be muted.\n */\nJitsiConference.prototype.setStartMutedPolicy = function(policy) {\n    if (!this.isModerator()) {\n        return;\n    }\n    this.startMutedPolicy = policy;\n    this.room.removeFromPresence('startmuted');\n    this.room.addToPresence('startmuted', {\n        attributes: {\n            audio: policy.audio,\n            video: policy.video,\n            xmlns: 'http://jitsi.org/jitmeet/start-muted'\n        }\n    });\n    this.room.sendPresence();\n};\n\n/**\n * Returns current start muted policy\n * @returns {Object} with 2 properties - audio and video.\n */\nJitsiConference.prototype.getStartMutedPolicy = function() {\n    return this.startMutedPolicy;\n};\n\n/**\n * Check if audio is muted on join.\n */\nJitsiConference.prototype.isStartAudioMuted = function() {\n    return this.startAudioMuted;\n};\n\n/**\n * Check if video is muted on join.\n */\nJitsiConference.prototype.isStartVideoMuted = function() {\n    return this.startVideoMuted;\n};\n\n/**\n * Get object with internal logs.\n */\nJitsiConference.prototype.getLogs = function() {\n    const data = this.xmpp.getJingleLog();\n\n    const metadata = {};\n\n    metadata.time = new Date();\n    metadata.url = window.location.href;\n    metadata.ua = navigator.userAgent;\n\n    const log = this.xmpp.getXmppLog();\n\n    if (log) {\n        metadata.xmpp = log;\n    }\n\n    data.metadata = metadata;\n\n    return data;\n};\n\n/**\n * Returns measured connectionTimes.\n */\nJitsiConference.prototype.getConnectionTimes = function() {\n    return this.room.connectionTimes;\n};\n\n/**\n * Sets a property for the local participant.\n */\nJitsiConference.prototype.setLocalParticipantProperty = function(name, value) {\n    this.sendCommand(`jitsi_participant_${name}`, { value });\n};\n\n/**\n * Sends the given feedback through CallStats if enabled.\n *\n * @param overallFeedback an integer between 1 and 5 indicating the\n * user feedback\n * @param detailedFeedback detailed feedback from the user. Not yet used\n */\nJitsiConference.prototype.sendFeedback = function(\n        overallFeedback,\n        detailedFeedback) {\n    this.statistics.sendFeedback(overallFeedback, detailedFeedback);\n};\n\n/**\n * Returns true if the callstats integration is enabled, otherwise returns\n * false.\n *\n * @returns true if the callstats integration is enabled, otherwise returns\n * false.\n */\nJitsiConference.prototype.isCallstatsEnabled = function() {\n    return this.statistics.isCallstatsEnabled();\n};\n\n\n/**\n * Handles track attached to container (Calls associateStreamWithVideoTag method\n * from statistics module)\n * @param {JitsiLocalTrack|JitsiRemoteTrack} track the track\n * @param container the container\n */\nJitsiConference.prototype._onTrackAttach = function(track, container) {\n    const isLocal = track.isLocal();\n    let ssrc = null;\n    const isP2P = track.isP2P;\n    const remoteUserId = isP2P ? track.getParticipantId() : 'jitsi';\n    const peerConnection\n        = isP2P\n            ? this.p2pJingleSession && this.p2pJingleSession.peerconnection\n            : this.jvbJingleSession && this.jvbJingleSession.peerconnection;\n\n    if (isLocal) {\n        // Local tracks have SSRC stored on per peer connection basis\n        if (peerConnection) {\n            ssrc = peerConnection.getLocalSSRC(track);\n        }\n    } else {\n        ssrc = track.getSSRC();\n    }\n    if (!container.id || !ssrc || !peerConnection) {\n        return;\n    }\n\n    this.statistics.associateStreamWithVideoTag(\n        peerConnection,\n        ssrc,\n        isLocal,\n        remoteUserId,\n        track.getUsageLabel(),\n        container.id);\n};\n\n/**\n * Logs an \"application log\" message.\n * @param message {string} The message to log. Note that while this can be a\n * generic string, the convention used by lib-jitsi-meet and jitsi-meet is to\n * log valid JSON strings, with an \"id\" field used for distinguishing between\n * message types. E.g.: {id: \"recorder_status\", status: \"off\"}\n */\nJitsiConference.prototype.sendApplicationLog = function(message) {\n    Statistics.sendLog(message);\n};\n\n/**\n * Checks if the user identified by given <tt>mucJid</tt> is the conference\n * focus.\n * @param mucJid the full MUC address of the user to be checked.\n * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus,\n * <tt>false</tt> when is not. <tt>null</tt> if we're not in the MUC anymore and\n * are unable to figure out the status or if given <tt>mucJid</tt> is invalid.\n */\nJitsiConference.prototype._isFocus = function(mucJid) {\n    return this.room ? this.room.isFocus(mucJid) : null;\n};\n\n/**\n * Fires CONFERENCE_FAILED event with INCOMPATIBLE_SERVER_VERSIONS parameter\n */\nJitsiConference.prototype._fireIncompatibleVersionsEvent = function() {\n    this.eventEmitter.emit(JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.INCOMPATIBLE_SERVER_VERSIONS);\n};\n\n/**\n * Sends a message via the data channel.\n * @param to {string} the id of the endpoint that should receive the message.\n * If \"\" the message will be sent to all participants.\n * @param payload {object} the payload of the message.\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n */\nJitsiConference.prototype.sendEndpointMessage = function(to, payload) {\n    this.rtc.sendChannelMessage(to, payload);\n};\n\n/**\n * Sends a broadcast message via the data channel.\n * @param payload {object} the payload of the message.\n * @throws NetworkError or InvalidStateError or Error if the operation fails.\n */\nJitsiConference.prototype.broadcastEndpointMessage = function(payload) {\n    this.sendEndpointMessage('', payload);\n};\n\nJitsiConference.prototype.isConnectionInterrupted = function() {\n    return this.isP2PActive()\n        ? this.isP2PConnectionInterrupted : this.isJvbConnectionInterrupted;\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_INTERRUPTED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionInterrupted = function(session) {\n    if (session.isP2P) {\n        this.isP2PConnectionInterrupted = true;\n    } else {\n        this.isJvbConnectionInterrupted = true;\n    }\n    if (session.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_INTERRUPTED);\n    }\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_ICE_FAILED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionFailed = function(session) {\n    // We do nothing for the JVB connection, because it's up to the Jicofo to\n    // eventually come up with the new offer (at least for the time being).\n    if (session.isP2P) {\n        // Add p2pFailed property to analytics to distinguish, between \"good\"\n        // and \"bad\" connection\n        Statistics.analytics.addPermanentProperties({ p2pFailed: true });\n\n        // Log analytics event, but only for the initiator to not count it twice\n        if (this.p2pJingleSession && this.p2pJingleSession.isInitiator) {\n            Statistics.sendEventToAll(P2P_FAILED);\n        }\n        this._stopP2PSession('connectivity-error', 'ICE FAILED');\n    }\n};\n\n/**\n * Handles {@link XMPPEvents.CONNECTION_RESTORED}\n * @param {JingleSessionPC} session\n * @private\n */\nJitsiConference.prototype._onIceConnectionRestored = function(session) {\n    if (session.isP2P) {\n        this.isP2PConnectionInterrupted = false;\n    } else {\n        this.isJvbConnectionInterrupted = false;\n    }\n\n    if (session.isP2P === this.isP2PActive()) {\n        this.eventEmitter.emit(JitsiConferenceEvents.CONNECTION_RESTORED);\n    }\n};\n\n/**\n * Accept incoming P2P Jingle call.\n * @param {JingleSessionPC} jingleSession the session instance\n * @param {jQuery} jingleOffer a jQuery selector pointing to 'jingle' IQ element\n * @private\n */\nJitsiConference.prototype._acceptP2PIncomingCall = function(\n        jingleSession,\n        jingleOffer) {\n    this.isP2PConnectionInterrupted = false;\n\n    // Accept the offer\n    this.p2pJingleSession = jingleSession;\n\n    this.p2pJingleSession.initialize(\n        false /* initiator */, this.room, this.rtc);\n\n    logger.info('Starting CallStats for P2P connection...');\n\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\n\n    if (this.options.config.enableStatsID) {\n        const participant = this.participants[remoteID];\n\n        if (participant) {\n            remoteID = participant.getStatsID() || remoteID;\n        }\n    }\n\n    this.statistics.startCallStats(\n        this.p2pJingleSession.peerconnection,\n        remoteID);\n\n    const localTracks = this.getLocalTracks();\n\n    this.p2pJingleSession.acceptOffer(\n        jingleOffer,\n        () => {\n            logger.debug('Got RESULT for P2P \"session-accept\"');\n        },\n        error => {\n            logger.error(\n                'Failed to accept incoming P2P Jingle session', error);\n        },\n        localTracks);\n};\n\n/**\n * Adds remote tracks to the conference associated with the JVB session.\n * @private\n */\nJitsiConference.prototype._addRemoteJVBTracks = function() {\n    this._addRemoteTracks(\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Adds remote tracks to the conference associated with the P2P session.\n * @private\n */\nJitsiConference.prototype._addRemoteP2PTracks = function() {\n    this._addRemoteTracks(\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Generates fake \"remote track added\" events for given Jingle session.\n * @param {string} logName the session's nickname which will appear in log\n * messages.\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be added\n * @private\n */\nJitsiConference.prototype._addRemoteTracks = function(logName, remoteTracks) {\n    for (const track of remoteTracks) {\n        logger.info(`Adding remote ${logName} track: ${track}`);\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, track);\n    }\n};\n\n/**\n * Called when {@link XMPPEvents.CONNECTION_ESTABLISHED} event is\n * triggered for a {@link JingleSessionPC}. Switches the conference to use\n * the P2P connection if the event comes from the P2P session.\n * @param {JingleSessionPC} jingleSession the session instance.\n * @private\n */\nJitsiConference.prototype._onIceConnectionEstablished = function(\n        jingleSession) {\n    if (this.p2pJingleSession !== null) {\n        // store the establishment time of the p2p session as a field of the\n        // JitsiConference because the p2pJingleSession might get disposed (thus\n        // the value is lost).\n        this.p2pEstablishmentDuration\n            = this.p2pJingleSession.establishmentDuration;\n    }\n\n    if (this.jvbJingleSession !== null) {\n        this.jvbEstablishmentDuration\n            = this.jvbJingleSession.establishmentDuration;\n    }\n\n    let done = false;\n    const forceJVB121Ratio = this.options.config.forceJVB121Ratio;\n\n    // We don't care about the JVB case, there's nothing to be done\n    if (!jingleSession.isP2P) {\n        done = true;\n    } else if (this.p2pJingleSession !== jingleSession) {\n        logger.error('CONNECTION_ESTABLISHED - wrong P2P session instance ?!');\n\n        done = true;\n    } else if (!jingleSession.isInitiator\n        && typeof forceJVB121Ratio === 'number'\n        && Math.random() < forceJVB121Ratio) {\n        logger.info(`Forcing JVB 121 mode (ratio=${forceJVB121Ratio})...`);\n        Statistics.analytics.addPermanentProperties({ forceJvb121: true });\n        this._stopP2PSession('decline', 'force JVB121');\n\n        done = true;\n    }\n\n    if (!isNaN(this.p2pEstablishmentDuration)\n        && !isNaN(this.jvbEstablishmentDuration)) {\n        const establishmentDurationDiff\n            = this.p2pEstablishmentDuration - this.jvbEstablishmentDuration;\n\n        Statistics.analytics.sendEvent(\n            ICE_ESTABLISHMENT_DURATION_DIFF,\n            { 'value': establishmentDurationDiff });\n    }\n\n    if (done) {\n\n        return;\n    }\n\n    // Update P2P status and emit events\n    this._setP2PStatus(true);\n\n    // Remove remote tracks\n    if (this.jvbJingleSession) {\n        this._removeRemoteJVBTracks();\n    } else {\n        logger.info('Not removing remote JVB tracks - no session yet');\n    }\n\n    // Add remote tracks\n    this._addRemoteP2PTracks();\n\n    // Stop media transfer over the JVB connection\n    if (this.jvbJingleSession) {\n        this._suspendMediaTransferForJvbConnection();\n    }\n\n    // Start remote stats\n    logger.info('Starting remote stats with p2p connection');\n    this.statistics.startRemoteStats(this.p2pJingleSession.peerconnection);\n\n    // Log the P2P established event\n    if (this.p2pJingleSession.isInitiator) {\n        Statistics.sendEventToAll(P2P_ESTABLISHED);\n    }\n};\n\n/**\n * Clears the deferred start P2P task if it has been scheduled.\n * @private\n */\nJitsiConference.prototype._maybeClearDeferredStartP2P = function() {\n    if (this.deferredStartP2PTask) {\n        logger.info('Cleared deferred start P2P task');\n        clearTimeout(this.deferredStartP2PTask);\n        this.deferredStartP2PTask = null;\n    }\n};\n\n/**\n * Removes from the conference remote tracks associated with the JVB\n * connection.\n * @private\n */\nJitsiConference.prototype._removeRemoteJVBTracks = function() {\n    this._removeRemoteTracks(\n        'JVB', this.jvbJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Removes from the conference remote tracks associated with the P2P\n * connection.\n * @private\n */\nJitsiConference.prototype._removeRemoteP2PTracks = function() {\n    this._removeRemoteTracks(\n        'P2P', this.p2pJingleSession.peerconnection.getRemoteTracks());\n};\n\n/**\n * Generates fake \"remote track removed\" events for given Jingle session.\n * @param {string} sessionNickname the session's nickname which will appear in\n * log messages.\n * @param {Array<JitsiRemoteTrack>} remoteTracks the tracks that will be removed\n * @private\n */\nJitsiConference.prototype._removeRemoteTracks = function(\n        sessionNickname,\n        remoteTracks) {\n    for (const track of remoteTracks) {\n        logger.info(`Removing remote ${sessionNickname} track: ${track}`);\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, track);\n    }\n};\n\n/**\n * Resumes media transfer over the JVB connection.\n * @private\n */\nJitsiConference.prototype._resumeMediaTransferForJvbConnection = function() {\n    logger.info('Resuming media transfer over the JVB connection...');\n    this.jvbJingleSession.setMediaTransferActive(true, true).then(\n        () => {\n            logger.info('Resumed media transfer over the JVB connection!');\n        },\n        error => {\n            logger.error(\n                'Failed to resume media transfer over the JVB connection:',\n                error);\n        });\n};\n\n/**\n * Sets new P2P status and updates some events/states hijacked from\n * the <tt>JitsiConference</tt>.\n * @param {boolean} newStatus the new P2P status value, <tt>true</tt> means that\n * P2P is now in use, <tt>false</tt> means that the JVB connection is now in use\n * @private\n */\nJitsiConference.prototype._setP2PStatus = function(newStatus) {\n    if (this.p2p === newStatus) {\n        logger.debug(`Called _setP2PStatus with the same status: ${newStatus}`);\n\n        return;\n    }\n    this.p2p = newStatus;\n    if (newStatus) {\n        logger.info('Peer to peer connection established!');\n\n        // When we end up in a valid P2P session need to reset the properties\n        // in case they have persisted, after session with another peer.\n        Statistics.analytics.addPermanentProperties({\n            p2pFailed: false,\n            forceJvb121: false\n        });\n\n        // Sync up video transfer active in case p2pJingleSession not existed\n        // when the lastN value was being adjusted.\n        const isVideoActive = this.rtc.getLastN() !== 0;\n\n        this.p2pJingleSession\n            .setMediaTransferActive(true, isVideoActive)\n            .catch(error => {\n                logger.error(\n                    'Failed to sync up P2P video transfer status'\n                        + `(${isVideoActive})`, error);\n            });\n    } else {\n        logger.info('Peer to peer connection closed!');\n    }\n\n    // Put the JVB connection on hold/resume\n    if (this.jvbJingleSession) {\n        this.statistics.sendConnectionResumeOrHoldEvent(\n            this.jvbJingleSession.peerconnection, !newStatus);\n    }\n\n    // Clear dtmfManager, so that it can be recreated with new connection\n    this.dtmfManager = null;\n\n    // Update P2P status\n    this.eventEmitter.emit(\n        JitsiConferenceEvents.P2P_STATUS,\n        this,\n        this.p2p);\n\n    // Refresh connection interrupted/restored\n    this.eventEmitter.emit(\n        this.isConnectionInterrupted()\n            ? JitsiConferenceEvents.CONNECTION_INTERRUPTED\n            : JitsiConferenceEvents.CONNECTION_RESTORED);\n};\n\n/**\n * Starts new P2P session.\n * @param {string} remoteJid the JID of the remote participant\n * @private\n */\nJitsiConference.prototype._startP2PSession = function(remoteJid) {\n    this._maybeClearDeferredStartP2P();\n    if (this.p2pJingleSession) {\n        logger.error('P2P session already started!');\n\n        return;\n    }\n\n    this.isP2PConnectionInterrupted = false;\n    this.p2pJingleSession\n        = this.xmpp.connection.jingle.newP2PJingleSession(\n            this.room.myroomjid,\n            remoteJid);\n    logger.info(\n        'Created new P2P JingleSession', this.room.myroomjid, remoteJid);\n\n    this.p2pJingleSession.initialize(true /* initiator */, this.room, this.rtc);\n\n    logger.info('Starting CallStats for P2P connection...');\n\n    let remoteID = Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid);\n\n    if (this.options.config.enableStatsID) {\n        const participant = this.participants[remoteID];\n\n        if (participant) {\n            remoteID = participant.getStatsID() || remoteID;\n        }\n    }\n\n    this.statistics.startCallStats(\n        this.p2pJingleSession.peerconnection,\n        remoteID);\n\n    // NOTE one may consider to start P2P with the local tracks detached,\n    // but no data will be sent until ICE succeeds anyway. And we switch\n    // immediately once the P2P ICE connects.\n    const localTracks = this.getLocalTracks();\n\n    this.p2pJingleSession.invite(localTracks);\n};\n\n/**\n * Suspends media transfer over the JVB connection.\n * @private\n */\nJitsiConference.prototype._suspendMediaTransferForJvbConnection = function() {\n    logger.info('Suspending media transfer over the JVB connection...');\n    this.jvbJingleSession.setMediaTransferActive(false, false).then(\n        () => {\n            logger.info('Suspended media transfer over the JVB connection !');\n        },\n        error => {\n            logger.error(\n                'Failed to suspend media transfer over the JVB connection:',\n                error);\n        });\n};\n\n/**\n * Method when called will decide whether it's the time to start or stop\n * the P2P session.\n * @param {boolean} userLeftEvent if <tt>true</tt> it means that the call\n * originates from the user left event.\n * @private\n */\nJitsiConference.prototype._maybeStartOrStopP2P = function(userLeftEvent) {\n    if (!RTCBrowserType.isP2PSupported()\n        || !this.isP2PEnabled()\n        || this.isP2PTestModeEnabled()) {\n        logger.info('Auto P2P disabled');\n\n        return;\n    }\n    const peers = this.getParticipants();\n    const peerCount = peers.length;\n    const isModerator = this.isModerator();\n\n    // FIXME 1 peer and it must *support* P2P switching\n    const shouldBeInP2P = peerCount === 1;\n\n    logger.debug(\n        `P2P? isModerator: ${isModerator}, peerCount: ${peerCount} => ${\n            shouldBeInP2P}`);\n\n    // Clear deferred \"start P2P\" task\n    if (!shouldBeInP2P && this.deferredStartP2PTask) {\n        this._maybeClearDeferredStartP2P();\n    }\n\n    // Start peer to peer session\n    if (isModerator && !this.p2pJingleSession && shouldBeInP2P) {\n        const peer = peerCount && peers[0];\n\n        // Everyone is a moderator ?\n        if (isModerator && peer.getRole() === 'moderator') {\n            const myId = this.myUserId();\n            const peersId = peer.getId();\n\n            if (myId > peersId) {\n                logger.debug(\n                    'Everyone\\'s a moderator - '\n                    + 'the other peer should start P2P', myId, peersId);\n\n                return;\n            } else if (myId === peersId) {\n                logger.error('The same IDs ? ', myId, peersId);\n\n                return;\n            }\n        }\n        const jid = peer.getJid();\n\n        if (userLeftEvent) {\n            if (this.deferredStartP2PTask) {\n                logger.error('Deferred start P2P task\\'s been set already!');\n\n                return;\n            }\n            logger.info(\n                `Will start P2P with: ${jid} after ${\n                    this.backToP2PDelay} seconds...`);\n            this.deferredStartP2PTask = setTimeout(\n                this._startP2PSession.bind(this, jid),\n                this.backToP2PDelay * 1000);\n        } else {\n            logger.info(`Will start P2P with: ${jid}`);\n            this._startP2PSession(jid);\n        }\n    } else if (this.p2pJingleSession && !shouldBeInP2P) {\n        logger.info(`Will stop P2P with: ${this.p2pJingleSession.remoteJid}`);\n\n        // Log that there will be a switch back to the JVB connection\n        if (this.p2pJingleSession.isInitiator && peerCount > 1) {\n            Statistics.sendEventToAll(P2P_SWITCH_TO_JVB);\n        }\n        this._stopP2PSession();\n    }\n};\n\n/**\n * Stops the current P2P session.\n * @param {string} [reason=\"success\"] one of the Jingle \"reason\" element\n * names as defined by https://xmpp.org/extensions/xep-0166.html#def-reason\n * @param {string} [reasonDescription=\"Turing off P2P session\"] text\n * description that will be included in the session terminate message\n * @private\n */\nJitsiConference.prototype._stopP2PSession = function(\n        reason,\n        reasonDescription) {\n    if (!this.p2pJingleSession) {\n        logger.error('No P2P session to be stopped!');\n\n        return;\n    }\n\n    const wasP2PEstablished = this.isP2PActive();\n\n    // Swap remote tracks, but only if the P2P has been fully established\n    if (wasP2PEstablished) {\n        if (this.jvbJingleSession) {\n            this._resumeMediaTransferForJvbConnection();\n        }\n\n        // Remove remote P2P tracks\n        this._removeRemoteP2PTracks();\n    }\n\n    // Stop P2P stats\n    logger.info('Stopping remote stats for P2P connection');\n    this.statistics.stopRemoteStats(this.p2pJingleSession.peerconnection);\n    logger.info('Stopping CallStats for P2P connection');\n    this.statistics.stopCallStats(this.p2pJingleSession.peerconnection);\n\n    this.p2pJingleSession.terminate(\n        () => {\n            logger.info('P2P session terminate RESULT');\n        },\n        error => {\n            // Because both initiator and responder are simultaneously\n            // terminating their JingleSessions in case of the 'to JVB switch'\n            // when 3rd participant joins, both will dispose their sessions and\n            // reply with 'item-not-found' (see strophe.jingle.js). We don't\n            // want to log this as an error since it's expected behaviour.\n            //\n            // We want them both to terminate, because in case of initiator's\n            // crash the responder would stay in P2P mode until ICE fails which\n            // could take up to 20 seconds.\n            //\n            // NOTE lack of 'reason' is considered as graceful session terminate\n            // where both initiator and responder terminate their sessions\n            // simultaneously.\n            if (reason) {\n                logger.error(\n                    'An error occurred while trying to terminate'\n                        + ' P2P Jingle session', error);\n            }\n        }, {\n            reason: reason ? reason : 'success',\n            reasonDescription: reasonDescription\n                ? reasonDescription : 'Turing off P2P session',\n            sendSessionTerminate: this.room\n                && this.getParticipantById(\n                    Strophe.getResourceFromJid(this.p2pJingleSession.remoteJid))\n        });\n\n    this.p2pJingleSession = null;\n\n    // Update P2P status and other affected events/states\n    this._setP2PStatus(false);\n\n    if (wasP2PEstablished) {\n        // Add back remote JVB tracks\n        if (this.jvbJingleSession) {\n            this._addRemoteJVBTracks();\n        } else {\n            logger.info('Not adding remote JVB tracks - no session yet');\n        }\n    }\n};\n\n/**\n * Checks whether or not the conference is currently in the peer to peer mode.\n * Being in peer to peer mode means that the direct connection has been\n * established and the P2P connection is being used for media transmission.\n * @return {boolean} <tt>true</tt> if in P2P mode or <tt>false</tt> otherwise.\n */\nJitsiConference.prototype.isP2PActive = function() {\n    return this.p2p;\n};\n\n/**\n * Returns the current ICE state of the P2P connection.\n * NOTE: method is used by the jitsi-meet-torture tests.\n * @return {string|null} an ICE state or <tt>null</tt> if there's currently\n * no P2P connection.\n */\nJitsiConference.prototype.getP2PConnectionState = function() {\n    if (this.isP2PActive()) {\n        return this.p2pJingleSession.peerconnection.getConnectionState();\n    }\n\n    return null;\n};\n\n\n/**\n * Manually starts new P2P session (should be used only in the tests).\n */\nJitsiConference.prototype.startP2PSession = function() {\n    const peers = this.getParticipants();\n\n    // Start peer to peer session\n    if (peers.length === 1) {\n        const peerJid = peers[0].getJid();\n\n        this._startP2PSession(peerJid);\n    } else {\n        throw new Error(\n            'There must be exactly 1 participant to start the P2P session !');\n    }\n};\n\n/**\n * Manually stops the current P2P session (should be used only in the tests)\n */\nJitsiConference.prototype.stopP2PSession = function() {\n    this._stopP2PSession();\n};\n\n/**\n * Get a summary of how long current participants have been the dominant speaker\n * @returns {object}\n */\nJitsiConference.prototype.getSpeakerStats = function() {\n    return this.speakerStatsCollector.getStats();\n};\n\n/**\n * Sets the maximum video size the local participant should receive from remote\n * participants.\n *\n * @param {number} maxFrameHeightPixels the maximum frame height, in pixels,\n * this receiver is willing to receive.\n * @returns {void}\n */\nJitsiConference.prototype.setReceiverVideoConstraint = function(\n        maxFrameHeight) {\n    this.rtc.setReceiverVideoConstraint(maxFrameHeight);\n};\n\n/**\n * Creates a video SIP GW session and returns it if service is enabled. Before\n * creating a session one need to check whether video SIP GW service is\n * available in the system {@link JitsiConference.isVideoSIPGWAvailable}. Even\n * if there are available nodes to serve this request, after creating the\n * session those nodes can be taken and the request about using the\n * created session can fail.\n *\n * @param {string} sipAddress - The sip address to be used.\n * @param {string} displayName - The display name to be used for this session.\n * @returns {JitsiVideoSIPGWSession|Error} Returns null if conference is not\n * initialised and there is no room.\n */\nJitsiConference.prototype.createVideoSIPGWSession\n    = function(sipAddress, displayName) {\n        if (!this.room) {\n            return new Error(VideoSIPGWConstants.ERROR_NO_CONNECTION);\n        }\n\n        return this.videoSIPGWHandler\n            .createVideoSIPGWSession(sipAddress, displayName);\n    };\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiConference.js","/* global __filename */\n\nimport { AVG_RTP_STATS } from '../../service/statistics/AnalyticsEvents';\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as ConnectionQualityEvents\n    from '../../service/connectivity/ConnectionQualityEvents';\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCBrowserType from '../RTC/RTCBrowserType';\nimport Statistics from './statistics';\nimport * as VideoType from '../../service/RTC/VideoType';\n\nconst logger = getLogger(__filename);\n\n/**\n * This will calculate an average for one, named stat and submit it to\n * the analytics module when requested. It automatically counts the samples.\n */\nclass AverageStatReport {\n    /**\n     * Creates new <tt>AverageStatReport</tt> for given name.\n     * @param {string} name that's the name of the event that will be reported\n     * to the analytics module.\n     */\n    constructor(name) {\n        this.name = name;\n        this.count = 0;\n        this.sum = 0;\n        this.samples = [];\n    }\n\n    /**\n     * Adds the next value that will be included in the average when\n     * {@link calculate} is called.\n     * @param {number} nextValue\n     */\n    addNext(nextValue) {\n        if (typeof nextValue !== 'number') {\n            logger.error(\n                `${this.name} - invalid value for idx: ${this.count}`,\n                nextValue);\n        } else if (!isNaN(nextValue)) {\n            this.sum += nextValue;\n            this.samples.push(nextValue);\n            this.count += 1;\n        }\n    }\n\n    /**\n     * Calculates an average for the samples collected using {@link addNext}.\n     * @return {number|NaN} an average of all collected samples or <tt>NaN</tt>\n     * if no samples were collected.\n     */\n    calculate() {\n        return this.sum / this.count;\n    }\n\n    /**\n     * Appends the report to the analytics \"data\" object. The object will be\n     * set under <tt>prefix</tt> + {@link this.name} key.\n     * @param {Object} report the analytics \"data\" object\n     */\n    appendReport(report) {\n        report[this.name] = {\n            value: this.calculate(),\n            samples: this.samples\n        };\n    }\n\n    /**\n     * Clears all memory of any samples collected, so that new average can be\n     * calculated using this instance.\n     */\n    reset() {\n        this.samples = [];\n        this.sum = 0;\n        this.count = 0;\n    }\n}\n\n/**\n * Class gathers the stats that are calculated and reported for a\n * {@link TraceablePeerConnection} even if it's not currently active. For\n * example we want to monitor RTT for the JVB connection while in P2P mode.\n */\nclass ConnectionAvgStats {\n    /**\n     * Creates new <tt>ConnectionAvgStats</tt>\n     * @param {AvgRTPStatsReporter} avgRtpStatsReporter\n     * @param {boolean} isP2P\n     * @param {number} n the number of samples, before arithmetic mean is to be\n     * calculated and values submitted to the analytics module.\n     */\n    constructor(avgRtpStatsReporter, isP2P, n) {\n        /**\n         * Is this instance for JVB or P2P connection ?\n         * @type {boolean}\n         */\n        this.isP2P = isP2P;\n\n        /**\n         * How many samples are to be included in arithmetic mean calculation.\n         * @type {number}\n         * @private\n         */\n        this._n = n;\n\n        /**\n         * The current sample index. Starts from 0 and goes up to {@link _n})\n         * when analytics report will be submitted.\n         * @type {number}\n         * @private\n         */\n        this._sampleIdx = 0;\n\n        /**\n         * Average round trip time reported by the ICE candidate pair.\n         * @type {AverageStatReport}\n         */\n        this._avgRTT = new AverageStatReport('stat_avg_rtt');\n\n        /**\n         * Map stores average RTT to the JVB reported by remote participants.\n         * Mapped per participant id {@link JitsiParticipant.getId}.\n         *\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\n         * <tt>false</tt>.\n         *\n         * @type {Map<string,AverageStatReport>}\n         * @private\n         */\n        this._avgRemoteRTTMap = new Map();\n\n        /**\n         * The conference for which stats will be collected and reported.\n         * @type {JitsiConference}\n         * @private\n         */\n        this._avgRtpStatsReporter = avgRtpStatsReporter;\n\n        /**\n         * The latest average E2E RTT for the JVB connection only.\n         *\n         * This is used only when {@link ConnectionAvgStats.isP2P} equals to\n         * <tt>false</tt>.\n         *\n         * @type {number}\n         */\n        this._avgEnd2EndRTT = undefined;\n\n        this._onConnectionStats = (tpc, stats) => {\n            if (this.isP2P === tpc.isP2P) {\n                this._calculateAvgStats(stats);\n            }\n        };\n\n        const conference = avgRtpStatsReporter._conference;\n\n        conference.statistics.addConnectionStatsListener(\n            this._onConnectionStats);\n\n        if (!this.isP2P) {\n            this._onUserLeft = id => this._avgRemoteRTTMap.delete(id);\n            conference.on(ConferenceEvents.USER_LEFT, this._onUserLeft);\n\n            this._onRemoteStatsUpdated\n                = (id, data) => this._processRemoteStats(id, data);\n            conference.on(\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\n                this._onRemoteStatsUpdated);\n        }\n    }\n\n    /**\n     * Processes next batch of stats.\n     * @param {go figure} data\n     * @private\n     */\n    _calculateAvgStats(data) {\n        if (!data) {\n            logger.error('No stats');\n\n            return;\n        }\n\n        if (RTCBrowserType.supportsRTTStatistics()) {\n            if (data.transport && data.transport.length) {\n                this._avgRTT.addNext(data.transport[0].rtt);\n            }\n        }\n\n        this._sampleIdx += 1;\n\n        if (this._sampleIdx >= this._n) {\n            if (RTCBrowserType.supportsRTTStatistics()) {\n                const conference = this._avgRtpStatsReporter._conference;\n\n                const batchReport = {\n                    p2p: this.isP2P,\n                    size: conference.getParticipantCount()\n                };\n\n                if (data.transport && data.transport.length) {\n                    Object.assign(batchReport, {\n                        localCandidateType:\n                            data.transport[0].localCandidateType,\n                        remoteCandidateType:\n                            data.transport[0].remoteCandidateType,\n                        transportType: data.transport[0].type\n                    });\n                }\n\n                this._avgRTT.appendReport(batchReport);\n\n                if (this.isP2P) {\n                    // Report RTT diff only for P2P.\n                    const jvbEnd2EndRTT = this\n                        ._avgRtpStatsReporter.jvbStatsMonitor._avgEnd2EndRTT;\n\n                    if (!isNaN(jvbEnd2EndRTT)) {\n                        const avgRTTDiff\n                            = this._avgRTT.calculate() - jvbEnd2EndRTT;\n\n                        // eslint-disable-next-line dot-notation\n                        batchReport['stat_avg_rtt_diff'] = {\n                            value: avgRTTDiff\n                        };\n                    }\n                } else {\n                    // Report end to end RTT only for JVB.\n                    const avgRemoteRTT = this._calculateAvgRemoteRTT();\n                    const avgLocalRTT = this._avgRTT.calculate();\n\n                    this._avgEnd2EndRTT = avgLocalRTT + avgRemoteRTT;\n\n                    if (!isNaN(avgLocalRTT) && !isNaN(avgRemoteRTT)) {\n                        // eslint-disable-next-line dot-notation\n                        batchReport['stat_avg_end2endrtt'] = {\n                            value: this._avgEnd2EndRTT\n                        };\n                    }\n                }\n\n                Statistics.analytics.sendEvent(AVG_RTP_STATS, batchReport);\n            }\n\n            this._resetAvgStats();\n        }\n    }\n\n    /**\n     * Calculates arithmetic mean of all RTTs towards the JVB reported by\n     * participants.\n     * @return {number|NaN} NaN if not available (not enough data)\n     * @private\n     */\n    _calculateAvgRemoteRTT() {\n        let count = 0, sum = 0;\n\n        // FIXME should we ignore RTT for participant\n        // who \"is having connectivity issues\" ?\n        for (const remoteAvg of this._avgRemoteRTTMap.values()) {\n            const avg = remoteAvg.calculate();\n\n            if (!isNaN(avg)) {\n                sum += avg;\n                count += 1;\n                remoteAvg.reset();\n            }\n        }\n\n        return sum / count;\n    }\n\n    /**\n     * Processes {@link ConnectionQualityEvents.REMOTE_STATS_UPDATED} to analyse\n     * RTT towards the JVB reported by each participant.\n     * @param {string} id {@link JitsiParticipant.getId}\n     * @param {go figure in ConnectionQuality.js} data\n     * @private\n     */\n    _processRemoteStats(id, data) {\n        const validData = typeof data.jvbRTT === 'number';\n        let rttAvg = this._avgRemoteRTTMap.get(id);\n\n        if (!rttAvg && validData) {\n            rttAvg = new AverageStatReport(`${id}_stat_rtt`);\n            this._avgRemoteRTTMap.set(id, rttAvg);\n        }\n\n        if (validData) {\n            rttAvg.addNext(data.jvbRTT);\n        } else if (rttAvg) {\n            this._avgRemoteRTTMap.delete(id);\n        }\n    }\n\n    /**\n     * Reset cache of all averages and {@link _sampleIdx}.\n     * @private\n     */\n    _resetAvgStats() {\n        this._avgRTT.reset();\n        if (this._avgRemoteRTTMap) {\n            this._avgRemoteRTTMap.clear();\n        }\n        this._sampleIdx = 0;\n    }\n\n    /**\n     *\n     */\n    dispose() {\n\n        const conference = this._avgRtpStatsReporter._conference;\n\n        conference.statistics.removeConnectionStatsListener(\n            this._onConnectionStats);\n        if (!this.isP2P) {\n            conference.off(\n                ConnectionQualityEvents.REMOTE_STATS_UPDATED,\n                this._onRemoteStatsUpdated);\n            conference.off(\n                ConferenceEvents.USER_LEFT,\n                this._onUserLeft);\n        }\n    }\n}\n\n/**\n * Reports average RTP statistics values (arithmetic mean) to the analytics\n * module for things like bit rate, bandwidth, packet loss etc. It keeps track\n * of the P2P vs JVB conference modes and submits the values under different\n * namespaces (the events for P2P mode have 'p2p.' prefix). Every switch between\n * P2P mode resets the data collected so far and averages are calculated from\n * scratch.\n */\nexport default class AvgRTPStatsReporter {\n    /**\n     * Creates new instance of <tt>AvgRTPStatsReporter</tt>\n     * @param {JitsiConference} conference\n     * @param {number} n the number of samples, before arithmetic mean is to be\n     * calculated and values submitted to the analytics module.\n     */\n    constructor(conference, n) {\n        /**\n         * How many {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED} samples\n         * are to be included in arithmetic mean calculation.\n         * @type {number}\n         * @private\n         */\n        this._n = n;\n\n        if (n > 0) {\n            logger.info(`Avg RTP stats will be calculated every ${n} samples`);\n        } else {\n            logger.info('Avg RTP stats reports are disabled.');\n\n            // Do not initialize\n            return;\n        }\n\n        /**\n         * The current sample index. Starts from 0 and goes up to {@link _n})\n         * when analytics report will be submitted.\n         * @type {number}\n         * @private\n         */\n        this._sampleIdx = 0;\n\n        /**\n         * The conference for which stats will be collected and reported.\n         * @type {JitsiConference}\n         * @private\n         */\n        this._conference = conference;\n\n        /**\n         * Average audio upload bitrate\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgAudioBitrateUp\n            = new AverageStatReport('stat_avg_bitrate_audio_upload');\n\n        /**\n         * Average audio download bitrate\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgAudioBitrateDown\n            = new AverageStatReport('stat_avg_bitrate_audio_download');\n\n        /**\n         * Average video upload bitrate\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgVideoBitrateUp\n            = new AverageStatReport('stat_avg_bitrate_video_upload');\n\n        /**\n         * Average video download bitrate\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgVideoBitrateDown\n            = new AverageStatReport('stat_avg_bitrate_video_download');\n\n        /**\n         * Average upload bandwidth\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgBandwidthUp\n            = new AverageStatReport('stat_avg_bandwidth_upload');\n\n        /**\n         * Average download bandwidth\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgBandwidthDown\n            = new AverageStatReport('stat_avg_bandwidth_download');\n\n        /**\n         * Average total packet loss\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgPacketLossTotal\n            = new AverageStatReport('stat_avg_packetloss_total');\n\n        /**\n         * Average upload packet loss\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgPacketLossUp\n            = new AverageStatReport('stat_avg_packetloss_upload');\n\n        /**\n         * Average download packet loss\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgPacketLossDown\n            = new AverageStatReport('stat_avg_packetloss_download');\n\n        /**\n         * Average FPS for remote videos\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteFPS = new AverageStatReport('stat_avg_framerate_remote');\n\n        /**\n         * Average FPS for remote screen streaming videos (reported only if not\n         * a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteScreenFPS\n            = new AverageStatReport('stat_avg_framerate_screen_remote');\n\n        /**\n         * Average FPS for local video (camera)\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalFPS = new AverageStatReport('stat_avg_framerate_local');\n\n        /**\n         * Average FPS for local screen streaming video (reported only if not\n         * a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalScreenFPS\n            = new AverageStatReport('stat_avg_framerate_screen_local');\n\n        /**\n         * Average pixels for remote screen streaming videos (reported only if\n         * not a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteCameraPixels\n            = new AverageStatReport('stat_avg_pixels_remote');\n\n        /**\n         * Average pixels for remote screen streaming videos (reported only if\n         * not a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgRemoteScreenPixels\n            = new AverageStatReport('stat_avg_pixels_screen_remote');\n\n        /**\n         * Average pixels for local video (camera)\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalCameraPixels\n            = new AverageStatReport('stat_avg_pixels_local');\n\n        /**\n         * Average pixels for local screen streaming video (reported only if not\n         * a <tt>NaN</tt>).\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgLocalScreenPixels\n            = new AverageStatReport('stat_avg_pixels_screen_local');\n\n        /**\n         * Average connection quality as defined by\n         * the {@link ConnectionQuality} module.\n         * @type {AverageStatReport}\n         * @private\n         */\n        this._avgCQ = new AverageStatReport('stat_avg_cq');\n\n        this._onLocalStatsUpdated = data => this._calculateAvgStats(data);\n        conference.on(\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n            this._onLocalStatsUpdated);\n\n        this._onP2PStatusChanged = () => {\n            logger.debug('Resetting average stats calculation');\n            this._resetAvgStats();\n            this.jvbStatsMonitor._resetAvgStats();\n            this.p2pStatsMonitor._resetAvgStats();\n        };\n        conference.on(\n            ConferenceEvents.P2P_STATUS,\n            this._onP2PStatusChanged);\n\n        this._onJvb121StatusChanged = (oldStatus, newStatus) => {\n            // We want to reset only on the transition from false => true,\n            // because otherwise those stats are resetted on JVB <=> P2P\n            // transition.\n            if (newStatus === true) {\n                logger.info('Resetting JVB avg RTP stats');\n                this._resetAvgJvbStats();\n            }\n        };\n        conference.on(\n            ConferenceEvents.JVB121_STATUS,\n            this._onJvb121StatusChanged);\n\n        this.jvbStatsMonitor\n            = new ConnectionAvgStats(this, false /* JVB */, n);\n\n        this.p2pStatsMonitor\n            = new ConnectionAvgStats(this, true /* P2P */, n);\n    }\n\n    /**\n     * Processes next batch of stats reported on\n     * {@link ConnectionQualityEvents.LOCAL_STATS_UPDATED}.\n     * @param {go figure} data\n     * @private\n     */\n    _calculateAvgStats(data) {\n\n        if (!data) {\n            logger.error('No stats');\n\n            return;\n        }\n\n        const isP2P = this._conference.isP2PActive();\n        const confSize = this._conference.getParticipantCount();\n\n        if (!isP2P && confSize < 2) {\n\n            // There's no point in collecting stats for a JVB conference of 1.\n            // That happens for short period of time after everyone leaves\n            // the room, until Jicofo terminates the session.\n            return;\n        }\n\n        /* Uncomment to figure out stats structure\n        for (const key in data) {\n            if (data.hasOwnProperty(key)) {\n                logger.info(`local stat ${key}: `, data[key]);\n            }\n        } */\n\n        const bitrate = data.bitrate;\n        const bandwidth = data.bandwidth;\n        const packetLoss = data.packetLoss;\n        const frameRate = data.framerate;\n        const resolution = data.resolution;\n\n        if (!bitrate) {\n            logger.error('No \"bitrate\"');\n\n            return;\n        } else if (!bandwidth) {\n            logger.error('No \"bandwidth\"');\n\n            return;\n        } else if (!packetLoss) {\n            logger.error('No \"packetloss\"');\n\n            return;\n        } else if (!frameRate) {\n            logger.error('No \"framerate\"');\n\n            return;\n        } else if (!resolution) {\n            logger.error('No resolution');\n\n            return;\n        }\n\n        this._avgAudioBitrateUp.addNext(bitrate.audio.upload);\n        this._avgAudioBitrateDown.addNext(bitrate.audio.download);\n\n        this._avgVideoBitrateUp.addNext(bitrate.video.upload);\n        this._avgVideoBitrateDown.addNext(bitrate.video.download);\n\n        if (RTCBrowserType.supportsBandwidthStatistics()) {\n            this._avgBandwidthUp.addNext(bandwidth.upload);\n            this._avgBandwidthDown.addNext(bandwidth.download);\n        }\n\n        this._avgPacketLossUp.addNext(packetLoss.upload);\n        this._avgPacketLossDown.addNext(packetLoss.download);\n        this._avgPacketLossTotal.addNext(packetLoss.total);\n\n        this._avgCQ.addNext(data.connectionQuality);\n\n        if (frameRate) {\n            this._avgRemoteFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, false /* remote */, VideoType.CAMERA));\n            this._avgRemoteScreenFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, false /* remote */, VideoType.DESKTOP));\n\n            this._avgLocalFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, true /* local */, VideoType.CAMERA));\n            this._avgLocalScreenFPS.addNext(\n                this._calculateAvgVideoFps(\n                    frameRate, true /* local */, VideoType.DESKTOP));\n        }\n\n        if (resolution) {\n            this._avgRemoteCameraPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, false /* remote */, VideoType.CAMERA));\n\n            this._avgRemoteScreenPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, false /* remote */, VideoType.DESKTOP));\n\n            this._avgLocalCameraPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, true /* local */, VideoType.CAMERA));\n\n            this._avgLocalScreenPixels.addNext(\n                this._calculateAvgVideoPixels(\n                    resolution, true /* local */, VideoType.DESKTOP));\n        }\n\n        this._sampleIdx += 1;\n\n        if (this._sampleIdx >= this._n) {\n\n            const batchReport = {\n                p2p: isP2P,\n                size: confSize\n            };\n\n            if (data.transport && data.transport.length) {\n                Object.assign(batchReport, {\n                    localCandidateType: data.transport[0].localCandidateType,\n                    remoteCandidateType: data.transport[0].remoteCandidateType,\n                    transportType: data.transport[0].type\n                });\n            }\n\n            this._avgAudioBitrateUp.appendReport(batchReport);\n            this._avgAudioBitrateDown.appendReport(batchReport);\n\n            this._avgVideoBitrateUp.appendReport(batchReport);\n            this._avgVideoBitrateDown.appendReport(batchReport);\n\n            if (RTCBrowserType.supportsBandwidthStatistics()) {\n                this._avgBandwidthUp.appendReport(batchReport);\n                this._avgBandwidthDown.appendReport(batchReport);\n            }\n            this._avgPacketLossUp.appendReport(batchReport);\n            this._avgPacketLossDown.appendReport(batchReport);\n            this._avgPacketLossTotal.appendReport(batchReport);\n\n            this._avgRemoteFPS.appendReport(batchReport);\n            if (!isNaN(this._avgRemoteScreenFPS.calculate())) {\n                this._avgRemoteScreenFPS.appendReport(batchReport);\n            }\n            this._avgLocalFPS.appendReport(batchReport);\n            if (!isNaN(this._avgLocalScreenFPS.calculate())) {\n                this._avgLocalScreenFPS.appendReport(batchReport);\n            }\n\n            this._avgRemoteCameraPixels.appendReport(batchReport);\n            if (!isNaN(this._avgRemoteScreenPixels.calculate())) {\n                this._avgRemoteScreenPixels.appendReport(batchReport);\n            }\n            this._avgLocalCameraPixels.appendReport(batchReport);\n            if (!isNaN(this._avgLocalScreenPixels.calculate())) {\n                this._avgLocalScreenPixels.appendReport(batchReport);\n            }\n\n            this._avgCQ.appendReport(batchReport);\n\n            Statistics.analytics.sendEvent(AVG_RTP_STATS, batchReport);\n\n            this._resetAvgStats();\n        }\n    }\n\n    /**\n     * Calculates average number of pixels for the report\n     *\n     * @param {map} peerResolutions a map of peer resolutions\n     * @param {boolean} isLocal if the average is to be calculated for the local\n     * video or <tt>false</tt> if for remote videos.\n     * @param {VideoType} videoType\n     * @return {number|NaN} average number of pixels or <tt>NaN</tt> if there\n     * are no samples.\n     * @private\n     */\n    _calculateAvgVideoPixels(peerResolutions, isLocal, videoType) {\n        let peerPixelsSum = 0;\n        let peerCount = 0;\n        const myID = this._conference.myUserId();\n\n        for (const peerID of Object.keys(peerResolutions)) {\n            if (isLocal ? peerID === myID : peerID !== myID) {\n                const participant\n                    = isLocal\n                        ? null\n                        : this._conference.getParticipantById(peerID);\n                const videosResolution = peerResolutions[peerID];\n\n                // Do not continue without participant for non local peerID\n                if ((isLocal || participant) && videosResolution) {\n                    const peerAvgPixels = this._calculatePeerAvgVideoPixels(\n                        videosResolution, participant, videoType);\n\n                    if (!isNaN(peerAvgPixels)) {\n                        peerPixelsSum += peerAvgPixels;\n                        peerCount += 1;\n                    }\n                }\n            }\n        }\n\n        return peerPixelsSum / peerCount;\n    }\n\n    /**\n     * Calculate average pixels for either remote or local participant\n     * @param {object} videos maps resolution per video SSRC\n     * @param {JitsiParticipant|null} participant remote participant or\n     * <tt>null</tt> for local video pixels calculation.\n     * @param {VideoType} videoType the type of the video for which an average\n     * will be calculated.\n     * @return {number|NaN} average video pixels of all participant's videos or\n     * <tt>NaN</tt> if currently not available\n     * @private\n     */\n    _calculatePeerAvgVideoPixels(videos, participant, videoType) {\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\n        let videoTracks = null;\n\n        // NOTE that this method is supposed to be called for the stats\n        // received from the current peerconnection.\n        const tpc = this._conference.getActivePeerConnection();\n\n        if (participant) {\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\n            if (videoTracks) {\n                ssrcs\n                    = ssrcs.filter(\n                        ssrc => videoTracks.find(\n                            track =>\n                                !track.isMuted()\n                                    && track.getSSRC() === ssrc\n                                    && track.videoType === videoType));\n            }\n        } else {\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\n            ssrcs\n                = ssrcs.filter(\n                    ssrc => videoTracks.find(\n                        track =>\n                            !track.isMuted()\n                                && tpc.getLocalSSRC(track) === ssrc\n                                && track.videoType === videoType));\n        }\n\n        let peerPixelsSum = 0;\n        let peerSsrcCount = 0;\n\n        for (const ssrc of ssrcs) {\n            const peerSsrcPixels\n                = Number(videos[ssrc].height) * Number(videos[ssrc].width);\n\n            // FPS is reported as 0 for users with no video\n            if (!isNaN(peerSsrcPixels) && peerSsrcPixels > 0) {\n                peerPixelsSum += peerSsrcPixels;\n                peerSsrcCount += 1;\n            }\n        }\n\n        return peerPixelsSum / peerSsrcCount;\n    }\n\n\n    /**\n     * Calculates average FPS for the report\n     * @param {go figure} frameRate\n     * @param {boolean} isLocal if the average is to be calculated for the local\n     * video or <tt>false</tt> if for remote videos.\n     * @param {VideoType} videoType\n     * @return {number|NaN} average FPS or <tt>NaN</tt> if there are no samples.\n     * @private\n     */\n    _calculateAvgVideoFps(frameRate, isLocal, videoType) {\n        let peerFpsSum = 0;\n        let peerCount = 0;\n        const myID = this._conference.myUserId();\n\n        for (const peerID of Object.keys(frameRate)) {\n            if (isLocal ? peerID === myID : peerID !== myID) {\n                const participant\n                    = isLocal\n                        ? null : this._conference.getParticipantById(peerID);\n                const videosFps = frameRate[peerID];\n\n                // Do not continue without participant for non local peerID\n                if ((isLocal || participant) && videosFps) {\n                    const peerAvgFPS\n                        = this._calculatePeerAvgVideoFps(\n                            videosFps, participant, videoType);\n\n                    if (!isNaN(peerAvgFPS)) {\n                        peerFpsSum += peerAvgFPS;\n                        peerCount += 1;\n                    }\n                }\n            }\n        }\n\n        return peerFpsSum / peerCount;\n    }\n\n    /**\n     * Calculate average FPS for either remote or local participant\n     * @param {object} videos maps FPS per video SSRC\n     * @param {JitsiParticipant|null} participant remote participant or\n     * <tt>null</tt> for local FPS calculation.\n     * @param {VideoType} videoType the type of the video for which an average\n     * will be calculated.\n     * @return {number|NaN} average FPS of all participant's videos or\n     * <tt>NaN</tt> if currently not available\n     * @private\n     */\n    _calculatePeerAvgVideoFps(videos, participant, videoType) {\n        let ssrcs = Object.keys(videos).map(ssrc => Number(ssrc));\n        let videoTracks = null;\n\n        // NOTE that this method is supposed to be called for the stats\n        // received from the current peerconnection.\n        const tpc = this._conference.getActivePeerConnection();\n\n        if (participant) {\n            videoTracks = participant.getTracksByMediaType(MediaType.VIDEO);\n            if (videoTracks) {\n                ssrcs\n                    = ssrcs.filter(\n                        ssrc => videoTracks.find(\n                            track => !track.isMuted()\n                                && track.getSSRC() === ssrc\n                                && track.videoType === videoType));\n            }\n        } else {\n            videoTracks = this._conference.getLocalTracks(MediaType.VIDEO);\n            ssrcs\n                = ssrcs.filter(\n                    ssrc => videoTracks.find(\n                        track => !track.isMuted()\n                            && tpc.getLocalSSRC(track) === ssrc\n                            && track.videoType === videoType));\n        }\n\n        let peerFpsSum = 0;\n        let peerSsrcCount = 0;\n\n        for (const ssrc of ssrcs) {\n            const peerSsrcFps = Number(videos[ssrc]);\n\n            // FPS is reported as 0 for users with no video\n            if (!isNaN(peerSsrcFps) && peerSsrcFps > 0) {\n                peerFpsSum += peerSsrcFps;\n                peerSsrcCount += 1;\n            }\n        }\n\n        return peerFpsSum / peerSsrcCount;\n    }\n\n    /**\n     * Resets the stats related to JVB connection. Must not be called when in\n     * P2P mode, because then the {@link AverageStatReport} instances are\n     * tracking P2P stats. Note that this should never happen unless something\n     * is wrong with the P2P and JVB121 events.\n     * @private\n     */\n    _resetAvgJvbStats() {\n        this._resetAvgStats();\n        this.jvbStatsMonitor._resetAvgStats();\n    }\n\n    /**\n     * Reset cache of all averages and {@link _sampleIdx}.\n     * @private\n     */\n    _resetAvgStats() {\n        this._avgAudioBitrateUp.reset();\n        this._avgAudioBitrateDown.reset();\n\n        this._avgVideoBitrateUp.reset();\n        this._avgVideoBitrateDown.reset();\n\n        this._avgBandwidthUp.reset();\n        this._avgBandwidthDown.reset();\n\n        this._avgPacketLossUp.reset();\n        this._avgPacketLossDown.reset();\n        this._avgPacketLossTotal.reset();\n\n        this._avgRemoteFPS.reset();\n        this._avgRemoteScreenFPS.reset();\n        this._avgLocalFPS.reset();\n        this._avgLocalScreenFPS.reset();\n\n        this._avgRemoteCameraPixels.reset();\n        this._avgRemoteScreenPixels.reset();\n        this._avgLocalCameraPixels.reset();\n        this._avgLocalScreenPixels.reset();\n\n        this._avgCQ.reset();\n\n        this._sampleIdx = 0;\n    }\n\n    /**\n     * Unregisters all event listeners and stops working.\n     */\n    dispose() {\n        this._conference.off(\n            ConferenceEvents.P2P_STATUS,\n            this._onP2PStatusChanged);\n        this._conference.off(\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n            this._onLocalStatsUpdated);\n        this._conference.off(\n            ConferenceEvents.JVB121_STATUS,\n            this._onJvb121StatusChanged);\n        this.jvbStatsMonitor.dispose();\n        this.p2pStatsMonitor.dispose();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/statistics/AvgRTPStatsReporter.js","/* Copyright @ 2016 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar Logger = require('./Logger.js');\n\n/**\n * Creates new <tt>LogCollector</tt>. Class implements <tt>LoggerTransport</tt>\n * and thus can be added as global transport in order to capture all the logs.\n *\n * It captures subsequent log lines created whenever <tt>Logger</tt> logs\n * a message and stores them in a queue in order to batch log entries. There are\n * time and size limit constraints which determine how often batch entries are\n * stored. Whenever one of these limits is exceeded the <tt>LogCollector</tt>\n * will use the <tt>logStorage</tt> object given as an argument to save\n * the batch log entry.\n *\n * @param {Object} logStorage an object which allows to store the logs collected\n * @param {function(string|object[])} logStorage.storeLogs a method called when\n * this <tt>LogCollector</tt> requests log entry storage. The method's argument\n * is an array which can contain <tt>string</tt>s and <tt>object</tt>s. If given\n * item is an object it means that it's an aggregated message. That is a message\n * which is the same as the previous one and it's representation has\n * the following format:\n * {\n *   {string} text: 'the text of some duplicated message'\n *   {number} count: 3 // how many times the message appeared in a row\n * }\n * If a message \"B\" after an aggregated message \"A\" is different, then it breaks\n * the sequence of \"A\". Which means that even if the next message \"C\" is\n * the same as \"A\" it will start a new aggregated message \"C\".\n * @param {function()} logStorage.isReady a method which should return\n * a <tt>boolean</tt> to tell the collector that it's ready to store. During the\n * time storage is not ready log batches will be cached and stored on the next\n * occasion (flush or interval timeout).\n *\n * @param {Object} options the <tt>LogCollector</tt> configuration options.\n * @param {number} options.maxEntryLength the size limit for a single log entry\n * to be stored. The <tt>LogCollector</tt> will push the entry as soon as it\n * reaches or exceeds this limit given that <tt>logStorage.isReady</tt>\n * returns <tt>true</tt>. Otherwise the log entry will be cached until the log\n * storage becomes ready. Note that the \"is ready\" condition is checked every\n * <tt>options.storeInterval</tt> milliseconds.\n * @param {number} options.storeInterval how often the logs should be stored in\n * case <tt>maxEntryLength</tt> was not exceeded.\n * @param {boolean} options.stringifyObjects indicates whether or not object\n * arguments should be \"stringified\" with <tt>JSON.stringify</tt> when a log\n * message is composed. Note that objects logged on the error log level are\n * always stringified.\n *\n * @constructor\n */\nfunction LogCollector(logStorage, options) {\n    this.logStorage = logStorage;\n    this.stringifyObjects\n        = options && options.stringifyObjects\n            ? options.stringifyObjects : false;\n    this.storeInterval\n        = options && options.storeInterval\n            ? options.storeInterval: 30000;\n    this.maxEntryLength\n        = options && options.maxEntryLength\n            ? options.maxEntryLength : 10000;\n    // Bind the log method for each level to the corresponding method name\n    // in order to implement \"global log transport\" object.\n    Object.keys(Logger.levels).forEach(\n    function (logLevel) {\n        var methodName = Logger.levels[logLevel];\n        this[methodName] = function (logLevel) {\n            this._log.apply(this, arguments);\n        }.bind(this, logLevel);\n    }.bind(this));\n    /**\n     * The ID of store logs interval if one is currently scheduled or\n     * <tt>null</tt> otherwise.\n     * @type {number|null}\n     */\n    this.storeLogsIntervalID = null;\n    /**\n     * The log messages that are to be batched into log entry when\n     * {@link LogCollector._flush} method is called.\n     * @type {string[]}\n     */\n    this.queue = [];\n    /**\n     * The total length of all messages currently stored in the {@link queue}.\n     * @type {number}\n     */\n    this.totalLen = 0;\n    /**\n     * An array used to temporarily store log batches, before the storage gets\n     * ready.\n     * @type {string[]}\n     */\n    this.outputCache = [];\n}\n\n/**\n * Method called inside of {@link formatLogMessage} in order to covert an\n * <tt>Object</tt> argument to string. The conversion will happen when either\n * 'stringifyObjects' option is enabled or on the {@link Logger.levels.ERROR}\n * log level. The default implementation uses <tt>JSON.stringify</tt> and\n * returns \"[object with circular refs?]\" instead of an object if it fails.\n *\n * @param {object} someObject the <tt>object</tt> to be stringified.\n *\n * @return {string} the result of <tt>JSON.stringify</tt> or\n * \"[object with circular refs?]\" if any error occurs during \"stringification\".\n *\n * @protected\n */\nLogCollector.prototype.stringify = function (someObject) {\n    try {\n        return JSON.stringify(someObject);\n    } catch (error) {\n        return \"[object with circular refs?]\";\n    }\n};\n\n/**\n * Formats log entry for the given logging level and arguments passed to the\n * <tt>Logger</tt>'s log method. The first argument is log level and the next\n * arguments have to be captured using JS built-in 'arguments' variable.\n *\n * @param {Logger.levels} logLevel provides the logging level of the message to\n * be logged.\n *\n * @return {string|null} a non-empty string representation of the log entry\n * crafted from the log arguments. If the return value is <tt>null</tt> then\n * the message wil be discarded by this <tt>LogCollector</tt>.\n *\n * @protected\n */\nLogCollector.prototype.formatLogMessage\n= function (logLevel/*, arg1, arg2, arg3... */) {\n    var msg = '';\n    for (var i = 1, len = arguments.length; i < len; i++) {\n        var arg = arguments[i];\n        // objects logged on error level are always converted to JSON\n        if ((this.stringifyObjects || logLevel === Logger.levels.ERROR)\n            && typeof arg === 'object') {\n            arg = this.stringify(arg);\n        }\n        msg += arg;\n        if (i != len - 1) {\n            msg += ' ';\n        }\n    }\n    return msg.length ? msg : null;\n};\n\n/**\n * The log method bound to each of the logging levels in order to implement\n * \"global log transport\" object.\n *\n * @private\n */\nLogCollector.prototype._log = function() {\n\n    // var logLevel = arguments[0]; first argument is the log level\n    var msg = this.formatLogMessage.apply(this, arguments);\n    if (msg) {\n        // The same as the previous message aggregation logic\n        var prevMessage\n            = this.queue.length ? this.queue[this.queue.length -1] : undefined;\n        // NOTE that typeof undefined is 'undefined'\n        var prevMessageText\n            = typeof prevMessage === 'object' ? prevMessage.text : prevMessage;\n        // Is it the same as the previous one ?\n        if (prevMessageText == msg) {\n            if (typeof prevMessage === 'object') {\n                prevMessage.count += 1;\n            } else {\n                this.queue[this.queue.length-1] = {\n                    text: msg,\n                    count: 2\n                }\n            }\n        } else {\n            this.queue.push(msg);\n            this.totalLen += msg.length;\n        }\n    }\n\n    if (this.totalLen >= this.maxEntryLength) {\n        this._flush(true /* force */, true /* reschedule */);\n    }\n};\n\n/**\n * Starts periodical \"store logs\" task which will be triggered at the interval\n * specified in the constructor options.\n */\nLogCollector.prototype.start = function () {\n    this._reschedulePublishInterval();\n};\n\n/**\n * Reschedules the periodical \"store logs\" task which will store the next batch\n * log entry in the storage.\n * @private\n */\nLogCollector.prototype._reschedulePublishInterval = function () {\n    if (this.storeLogsIntervalID) {\n        window.clearTimeout(this.storeLogsIntervalID);\n        this.storeLogsIntervalID = null;\n    }\n    // It's actually a timeout, because it is rescheduled on every flush\n    this.storeLogsIntervalID\n        = window.setTimeout(\n            this._flush.bind(\n                this, false /* do not force */, true /* reschedule */),\n            this.storeInterval);\n};\n\n/**\n * Call this method to flush the log entry buffer and store it in the log\n * storage immediately (given that the storage is ready).\n */\nLogCollector.prototype.flush = function() {\n    this._flush(\n        false /* do not force, as it will not be stored anyway */,\n        true /* reschedule next update */ )\n};\n\n/**\n * Stores the next batch log entry in the log storage.\n * @param {boolean} force enforce current logs batch to be stored or cached if\n * there is anything to be logged, but the storage is not ready yet. One of\n * legitimate reasons to force is when the logs length exceeds size limit which\n * could result in truncation.\n * @param {boolean} reschedule <tt>true</tt> if the next periodic task should be\n * scheduled after the log entry is stored. <tt>false</tt> will end the periodic\n * task cycle.\n * @private\n */\nLogCollector.prototype._flush = function(force, reschedule) {\n    // Publish only if there's anything to be logged\n    if (this.totalLen > 0 && (this.logStorage.isReady() || force)) {\n        //FIXME avoid truncating\n        // right now we don't care if the message size is \"slightly\" exceeded\n        if (this.logStorage.isReady()) {\n            // Sends all cached logs\n            if (this.outputCache.length) {\n                this.outputCache.forEach(\n                    function (cachedQueue) {\n                        this.logStorage.storeLogs(cachedQueue);\n                    }.bind(this)\n                );\n                // Clear the cache\n                this.outputCache = [];\n            }\n            // Send current batch\n            this.logStorage.storeLogs(this.queue);\n        } else {\n            this.outputCache.push(this.queue);\n        }\n\n        this.queue = [];\n        this.totalLen = 0;\n    }\n\n    if (reschedule) {\n        this._reschedulePublishInterval();\n    }\n};\n\n/**\n * Stops the periodical \"store logs\" task and immediately stores any pending\n * log entries as a batch.\n */\nLogCollector.prototype.stop = function() {\n    // Flush and stop publishing logs\n    this._flush(false /* do not force */, false /* do not reschedule */);\n};\n\nmodule.exports = LogCollector;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/jitsi-meet-logger/lib/LogCollector.js\n// module id = 66\n// module chunks = 0","import RTCBrowserType from '../RTC/RTCBrowserType';\nimport Settings from '../settings/Settings';\n\n/**\n * Interface for analytics handlers.\n */\nclass AnalyticsAbstract {\n    /**\n     *\n     */\n    sendEvent() {} // eslint-disable-line no-empty-function\n}\n\n/**\n * Handler that caches all the events.\n * @extends AnalyticsAbstract\n */\nclass CacheAnalytics extends AnalyticsAbstract {\n    /**\n     *\n     */\n    constructor() {\n        super();\n\n        // some events may happen before init or implementation script download\n        // in this case we accumulate them in this array and send them on init\n        this.eventCache = [];\n    }\n\n    /**\n     * Cache analytics event.\n     * @param {String} eventName the name of the event\n     * @param {Object} data can be any JSON object\n     */\n    sendEvent(eventName, data = {}) {\n        this.eventCache.push({\n            eventName,\n            data\n        });\n    }\n\n    /**\n     * Clears the cached events.\n     * @returns {Array} with the cached events.\n     */\n    drainCachedEvents() {\n        const eventCacheCopy = this.eventCache.slice();\n\n        this.eventCache = [];\n\n        return eventCacheCopy;\n    }\n\n}\n\nconst cacheAnalytics = new CacheAnalytics();\n\n/**\n * This class will store and manage the handlers that are going to be used.\n */\nclass AnalyticsAdapter {\n    /**\n     * Creates new AnalyticsAdapter instance.\n     */\n    constructor() {\n        this.disposed = false;\n        this.analyticsHandlers = new Set();\n\n        /**\n         * Map of properties that will be added to every event\n         */\n        this.permanentProperties = {\n            callstatsname: Settings.callStatsUserName,\n            userAgent: navigator.userAgent,\n            browserName: RTCBrowserType.getBrowserName()\n        };\n\n        this.analyticsHandlers.add(cacheAnalytics);\n    }\n\n    /**\n     * Sends analytics event.\n     * @param {String} eventName the name of the event\n     * @param {Object} data can be any JSON object\n     */\n    sendEvent(eventName, data = {}) {\n        const modifiedData = Object.assign({}, this.permanentProperties, data);\n\n        this.analyticsHandlers.forEach(\n            analytics =>\n                analytics.sendEvent(\n                    eventName,\n                    analytics === cacheAnalytics ? data : modifiedData\n                )\n        );\n    }\n\n    /**\n     * Dispose analytics. Clears all handlers.\n     */\n    dispose() {\n        cacheAnalytics.drainCachedEvents();\n        this.analyticsHandlers.clear();\n        this.disposed = true;\n    }\n\n    /**\n     * Sets the handlers that are going to be used to send analytics and send\n     * the cached events.\n     * @param {Array} handlers the handlers\n     */\n    setAnalyticsHandlers(handlers) {\n        if (this.disposed) {\n            return;\n        }\n        this.analyticsHandlers = new Set(handlers);\n        cacheAnalytics.drainCachedEvents().forEach(\n            ev => this.sendEvent(ev.eventName, ev.data));\n    }\n\n    /**\n     * Adds map of properties that will be added to every event.\n     * @param {Object} properties the map of properties\n     */\n    addPermanentProperties(properties) {\n        Object.assign(this.permanentProperties, properties);\n    }\n}\n\nexport default new AnalyticsAdapter();\n\n\n\n// WEBPACK FOOTER //\n// ./modules/statistics/AnalyticsAdapter.js","const RandomUtil = require('./RandomUtil');\n\n/**\n * from faker.js - Copyright (c) 2014-2015 Matthew Bergman & Marak Squires\n * MIT License\n * http://github.com/marak/faker.js/\n *\n * @const\n */\nconst names = [\n    'Aaliyah', 'Aaron', 'Abagail', 'Abbey', 'Abbie', 'Abbigail', 'Abby',\n    'Abdiel', 'Abdul', 'Abdullah', 'Abe', 'Abel', 'Abelardo', 'Abigail',\n    'Abigale', 'Abigayle', 'Abner', 'Abraham', 'Ada', 'Adah', 'Adalberto',\n    'Adaline', 'Adam', 'Adan', 'Addie', 'Addison', 'Adela', 'Adelbert', 'Adele',\n    'Adelia', 'Adeline', 'Adell', 'Adella', 'Adelle', 'Aditya', 'Adolf',\n    'Adolfo', 'Adolph', 'Adolphus', 'Adonis', 'Adrain', 'Adrian', 'Adriana',\n    'Adrianna', 'Adriel', 'Adrien', 'Adrienne', 'Afton', 'Aglae', 'Agnes',\n    'Agustin', 'Agustina', 'Ahmad', 'Ahmed', 'Aida', 'Aidan', 'Aiden', 'Aileen',\n    'Aisha', 'Aiyana', 'Akeem', 'Al', 'Alaina', 'Alan', 'Alana', 'Alanis',\n    'Alanna', 'Alayna', 'Alba', 'Albert', 'Alberta', 'Albertha', 'Alberto',\n    'Albin', 'Albina', 'Alda', 'Alden', 'Alec', 'Aleen', 'Alejandra',\n    'Alejandrin', 'Alek', 'Alena', 'Alene', 'Alessandra', 'Alessandro',\n    'Alessia', 'Aletha', 'Alex', 'Alexa', 'Alexander', 'Alexandra', 'Alexandre',\n    'Alexandrea', 'Alexandria', 'Alexandrine', 'Alexandro', 'Alexane',\n    'Alexanne', 'Alexie', 'Alexis', 'Alexys', 'Alexzander', 'Alf', 'Alfonso',\n    'Alfonzo', 'Alford', 'Alfred', 'Alfreda', 'Alfredo', 'Ali', 'Alia', 'Alice',\n    'Alicia', 'Alisa', 'Alisha', 'Alison', 'Alivia', 'Aliya', 'Aliyah', 'Aliza',\n    'Alize', 'Allan', 'Allen', 'Allene', 'Allie', 'Allison', 'Ally', 'Alphonso',\n    'Alta', 'Althea', 'Alva', 'Alvah', 'Alvena', 'Alvera', 'Alverta', 'Alvina',\n    'Alvis', 'Alyce', 'Alycia', 'Alysa', 'Alysha', 'Alyson', 'Alysson',\n    'Amalia', 'Amanda', 'Amani', 'Amara', 'Amari', 'Amaya', 'Amber', 'Ambrose',\n    'Amelia', 'Amelie', 'Amely', 'America', 'Americo', 'Amie', 'Amina', 'Amir',\n    'Amira', 'Amiya', 'Amos', 'Amparo', 'Amy', 'Amya', 'Ana', 'Anabel',\n    'Anabelle', 'Anahi', 'Anais', 'Anastacio', 'Anastasia', 'Anderson', 'Andre',\n    'Andreane', 'Andreanne', 'Andres', 'Andrew', 'Andy', 'Angel', 'Angela',\n    'Angelica', 'Angelina', 'Angeline', 'Angelita', 'Angelo', 'Angie', 'Angus',\n    'Anibal', 'Anika', 'Anissa', 'Anita', 'Aniya', 'Aniyah', 'Anjali', 'Anna',\n    'Annabel', 'Annabell', 'Annabelle', 'Annalise', 'Annamae', 'Annamarie',\n    'Anne', 'Annetta', 'Annette', 'Annie', 'Ansel', 'Ansley', 'Anthony',\n    'Antoinette', 'Antone', 'Antonetta', 'Antonette', 'Antonia', 'Antonietta',\n    'Antonina', 'Antonio', 'Antwan', 'Antwon', 'Anya', 'April', 'Ara',\n    'Araceli', 'Aracely', 'Arch', 'Archibald', 'Ardella', 'Arden', 'Ardith',\n    'Arely', 'Ari', 'Ariane', 'Arianna', 'Aric', 'Ariel', 'Arielle', 'Arjun',\n    'Arlene', 'Arlie', 'Arlo', 'Armand', 'Armando', 'Armani', 'Arnaldo', 'Arne',\n    'Arno', 'Arnold', 'Arnoldo', 'Arnulfo', 'Aron', 'Art', 'Arthur', 'Arturo',\n    'Arvel', 'Arvid', 'Arvilla', 'Aryanna', 'Asa', 'Asha', 'Ashlee', 'Ashleigh',\n    'Ashley', 'Ashly', 'Ashlynn', 'Ashton', 'Ashtyn', 'Asia', 'Assunta',\n    'Astrid', 'Athena', 'Aubree', 'Aubrey', 'Audie', 'Audra', 'Audreanne',\n    'Audrey', 'August', 'Augusta', 'Augustine', 'Augustus', 'Aurelia',\n    'Aurelie', 'Aurelio', 'Aurore', 'Austen', 'Austin', 'Austyn', 'Autumn',\n    'Ava', 'Avery', 'Avis', 'Axel', 'Ayana', 'Ayden', 'Ayla', 'Aylin', 'Baby',\n    'Bailee', 'Bailey', 'Barbara', 'Barney', 'Baron', 'Barrett', 'Barry',\n    'Bart', 'Bartholome', 'Barton', 'Baylee', 'Beatrice', 'Beau', 'Beaulah',\n    'Bell', 'Bella', 'Belle', 'Ben', 'Benedict', 'Benjamin', 'Bennett',\n    'Bennie', 'Benny', 'Benton', 'Berenice', 'Bernadette', 'Bernadine',\n    'Bernard', 'Bernardo', 'Berneice', 'Bernhard', 'Bernice', 'Bernie',\n    'Berniece', 'Bernita', 'Berry', 'Bert', 'Berta', 'Bertha', 'Bertram',\n    'Bertrand', 'Beryl', 'Bessie', 'Beth', 'Bethany', 'Bethel', 'Betsy',\n    'Bette', 'Bettie', 'Betty', 'Bettye', 'Beulah', 'Beverly', 'Bianka', 'Bill',\n    'Billie', 'Billy', 'Birdie', 'Blair', 'Blaise', 'Blake', 'Blanca',\n    'Blanche', 'Blaze', 'Bo', 'Bobbie', 'Bobby', 'Bonita', 'Bonnie', 'Boris',\n    'Boyd', 'Brad', 'Braden', 'Bradford', 'Bradley', 'Bradly', 'Brady',\n    'Braeden', 'Brain', 'Brandi', 'Brando', 'Brandon', 'Brandt', 'Brandy',\n    'Brandyn', 'Brannon', 'Branson', 'Brant', 'Braulio', 'Braxton', 'Brayan',\n    'Breana', 'Breanna', 'Breanne', 'Brenda', 'Brendan', 'Brenden', 'Brendon',\n    'Brenna', 'Brennan', 'Brennon', 'Brent', 'Bret', 'Brett', 'Bria', 'Brian',\n    'Briana', 'Brianne', 'Brice', 'Bridget', 'Bridgette', 'Bridie', 'Brielle',\n    'Brigitte', 'Brionna', 'Brisa', 'Britney', 'Brittany', 'Brock', 'Broderick',\n    'Brody', 'Brook', 'Brooke', 'Brooklyn', 'Brooks', 'Brown', 'Bruce',\n    'Bryana', 'Bryce', 'Brycen', 'Bryon', 'Buck', 'Bud', 'Buddy', 'Buford',\n    'Bulah', 'Burdette', 'Burley', 'Burnice', 'Buster', 'Cade', 'Caden',\n    'Caesar', 'Caitlyn', 'Cale', 'Caleb', 'Caleigh', 'Cali', 'Calista',\n    'Callie', 'Camden', 'Cameron', 'Camila', 'Camilla', 'Camille', 'Camren',\n    'Camron', 'Camryn', 'Camylle', 'Candace', 'Candelario', 'Candice',\n    'Candida', 'Candido', 'Cara', 'Carey', 'Carissa', 'Carlee', 'Carleton',\n    'Carley', 'Carli', 'Carlie', 'Carlo', 'Carlos', 'Carlotta', 'Carmel',\n    'Carmela', 'Carmella', 'Carmelo', 'Carmen', 'Carmine', 'Carol', 'Carolanne',\n    'Carole', 'Carolina', 'Caroline', 'Carolyn', 'Carolyne', 'Carrie',\n    'Carroll', 'Carson', 'Carter', 'Cary', 'Casandra', 'Casey', 'Casimer',\n    'Casimir', 'Casper', 'Cassandra', 'Cassandre', 'Cassidy', 'Cassie',\n    'Catalina', 'Caterina', 'Catharine', 'Catherine', 'Cathrine', 'Cathryn',\n    'Cathy', 'Cayla', 'Ceasar', 'Cecelia', 'Cecil', 'Cecile', 'Cecilia',\n    'Cedrick', 'Celestine', 'Celestino', 'Celia', 'Celine', 'Cesar', 'Chad',\n    'Chadd', 'Chadrick', 'Chaim', 'Chance', 'Chandler', 'Chanel', 'Chanelle',\n    'Charity', 'Charlene', 'Charles', 'Charley', 'Charlie', 'Charlotte',\n    'Chase', 'Chasity', 'Chauncey', 'Chaya', 'Chaz', 'Chelsea', 'Chelsey',\n    'Chelsie', 'Chesley', 'Chester', 'Chet', 'Cheyanne', 'Cheyenne', 'Chloe',\n    'Chris', 'Christ', 'Christa', 'Christelle', 'Christian', 'Christiana',\n    'Christina', 'Christine', 'Christop', 'Christophe', 'Christopher',\n    'Christy', 'Chyna', 'Ciara', 'Cicero', 'Cielo', 'Cierra', 'Cindy',\n    'Citlalli', 'Clair', 'Claire', 'Clara', 'Clarabelle', 'Clare', 'Clarissa',\n    'Clark', 'Claud', 'Claude', 'Claudia', 'Claudie', 'Claudine', 'Clay',\n    'Clemens', 'Clement', 'Clementina', 'Clementine', 'Clemmie', 'Cleo',\n    'Cleora', 'Cleta', 'Cletus', 'Cleve', 'Cleveland', 'Clifford', 'Clifton',\n    'Clint', 'Clinton', 'Clotilde', 'Clovis', 'Cloyd', 'Clyde', 'Coby', 'Cody',\n    'Colby', 'Cole', 'Coleman', 'Colin', 'Colleen', 'Collin', 'Colt', 'Colten',\n    'Colton', 'Columbus', 'Concepcion', 'Conner', 'Connie', 'Connor', 'Conor',\n    'Conrad', 'Constance', 'Constantin', 'Consuelo', 'Cooper', 'Cora',\n    'Coralie', 'Corbin', 'Cordelia', 'Cordell', 'Cordia', 'Cordie', 'Corene',\n    'Corine', 'Cornelius', 'Cornell', 'Corrine', 'Cortez', 'Cortney', 'Cory',\n    'Coty', 'Courtney', 'Coy', 'Craig', 'Crawford', 'Creola', 'Cristal',\n    'Cristian', 'Cristina', 'Cristobal', 'Cristopher', 'Cruz', 'Crystal',\n    'Crystel', 'Cullen', 'Curt', 'Curtis', 'Cydney', 'Cynthia', 'Cyril',\n    'Cyrus', 'Dagmar', 'Dahlia', 'Daija', 'Daisha', 'Daisy', 'Dakota', 'Dale',\n    'Dallas', 'Dallin', 'Dalton', 'Damaris', 'Dameon', 'Damian', 'Damien',\n    'Damion', 'Damon', 'Dan', 'Dana', 'Dandre', 'Dane', 'D\\'angelo', 'Dangelo',\n    'Danial', 'Daniela', 'Daniella', 'Danielle', 'Danika', 'Dannie', 'Danny',\n    'Dante', 'Danyka', 'Daphne', 'Daphnee', 'Daphney', 'Darby', 'Daren',\n    'Darian', 'Dariana', 'Darien', 'Dario', 'Darion', 'Darius', 'Darlene',\n    'Daron', 'Darrel', 'Darrell', 'Darren', 'Darrick', 'Darrin', 'Darrion',\n    'Darron', 'Darryl', 'Darwin', 'Daryl', 'Dashawn', 'Dasia', 'Dave', 'David',\n    'Davin', 'Davion', 'Davon', 'Davonte', 'Dawn', 'Dawson', 'Dax', 'Dayana',\n    'Dayna', 'Dayne', 'Dayton', 'Dean', 'Deangelo', 'Deanna', 'Deborah',\n    'Declan', 'Dedric', 'Dedrick', 'Dee', 'Deion', 'Deja', 'Dejah', 'Dejon',\n    'Dejuan', 'Delaney', 'Delbert', 'Delfina', 'Delia', 'Delilah', 'Dell',\n    'Della', 'Delmer', 'Delores', 'Delpha', 'Delphia', 'Delphine', 'Delta',\n    'Demarco', 'Demarcus', 'Demario', 'Demetris', 'Demetrius', 'Demond', 'Dena',\n    'Denis', 'Dennis', 'Deon', 'Deondre', 'Deontae', 'Deonte', 'Dereck',\n    'Derek', 'Derick', 'Deron', 'Derrick', 'Deshaun', 'Deshawn', 'Desiree',\n    'Desmond', 'Dessie', 'Destany', 'Destin', 'Destinee', 'Destiney', 'Destini',\n    'Destiny', 'Devan', 'Devante', 'Deven', 'Devin', 'Devon', 'Devonte',\n    'Devyn', 'Dewayne', 'Dewitt', 'Dexter', 'Diamond', 'Diana', 'Dianna',\n    'Diego', 'Dillan', 'Dillon', 'Dimitri', 'Dina', 'Dino', 'Dion', 'Dixie',\n    'Dock', 'Dolly', 'Dolores', 'Domenic', 'Domenica', 'Domenick', 'Domenico',\n    'Domingo', 'Dominic', 'Dominique', 'Don', 'Donald', 'Donato', 'Donavon',\n    'Donna', 'Donnell', 'Donnie', 'Donny', 'Dora', 'Dorcas', 'Dorian', 'Doris',\n    'Dorothea', 'Dorothy', 'Dorris', 'Dortha', 'Dorthy', 'Doug', 'Douglas',\n    'Dovie', 'Doyle', 'Drake', 'Drew', 'Duane', 'Dudley', 'Dulce', 'Duncan',\n    'Durward', 'Dustin', 'Dusty', 'Dwight', 'Dylan', 'Earl', 'Earlene',\n    'Earline', 'Earnest', 'Earnestine', 'Easter', 'Easton', 'Ebba', 'Ebony',\n    'Ed', 'Eda', 'Edd', 'Eddie', 'Eden', 'Edgar', 'Edgardo', 'Edison', 'Edmond',\n    'Edmund', 'Edna', 'Eduardo', 'Edward', 'Edwardo', 'Edwin', 'Edwina',\n    'Edyth', 'Edythe', 'Effie', 'Efrain', 'Efren', 'Eileen', 'Einar', 'Eino',\n    'Eladio', 'Elaina', 'Elbert', 'Elda', 'Eldon', 'Eldora', 'Eldred',\n    'Eldridge', 'Eleanora', 'Eleanore', 'Eleazar', 'Electa', 'Elena', 'Elenor',\n    'Elenora', 'Eleonore', 'Elfrieda', 'Eli', 'Elian', 'Eliane', 'Elias',\n    'Eliezer', 'Elijah', 'Elinor', 'Elinore', 'Elisa', 'Elisabeth', 'Elise',\n    'Eliseo', 'Elisha', 'Elissa', 'Eliza', 'Elizabeth', 'Ella', 'Ellen',\n    'Ellie', 'Elliot', 'Elliott', 'Ellis', 'Ellsworth', 'Elmer', 'Elmira',\n    'Elmo', 'Elmore', 'Elna', 'Elnora', 'Elody', 'Eloisa', 'Eloise', 'Elouise',\n    'Eloy', 'Elroy', 'Elsa', 'Else', 'Elsie', 'Elta', 'Elton', 'Elva', 'Elvera',\n    'Elvie', 'Elvis', 'Elwin', 'Elwyn', 'Elyse', 'Elyssa', 'Elza', 'Emanuel',\n    'Emelia', 'Emelie', 'Emely', 'Emerald', 'Emerson', 'Emery', 'Emie', 'Emil',\n    'Emile', 'Emilia', 'Emiliano', 'Emilie', 'Emilio', 'Emily', 'Emma',\n    'Emmalee', 'Emmanuel', 'Emmanuelle', 'Emmet', 'Emmett', 'Emmie', 'Emmitt',\n    'Emmy', 'Emory', 'Ena', 'Enid', 'Enoch', 'Enola', 'Enos', 'Enrico',\n    'Enrique', 'Ephraim', 'Era', 'Eriberto', 'Eric', 'Erica', 'Erich', 'Erick',\n    'Ericka', 'Erik', 'Erika', 'Erin', 'Erling', 'Erna', 'Ernest', 'Ernestina',\n    'Ernestine', 'Ernesto', 'Ernie', 'Ervin', 'Erwin', 'Eryn', 'Esmeralda',\n    'Esperanza', 'Esta', 'Esteban', 'Estefania', 'Estel', 'Estell', 'Estella',\n    'Estelle', 'Estevan', 'Esther', 'Estrella', 'Etha', 'Ethan', 'Ethel',\n    'Ethelyn', 'Ethyl', 'Ettie', 'Eudora', 'Eugene', 'Eugenia', 'Eula', 'Eulah',\n    'Eulalia', 'Euna', 'Eunice', 'Eusebio', 'Eva', 'Evalyn', 'Evan',\n    'Evangeline', 'Evans', 'Eve', 'Eveline', 'Evelyn', 'Everardo', 'Everett',\n    'Everette', 'Evert', 'Evie', 'Ewald', 'Ewell', 'Ezekiel', 'Ezequiel',\n    'Ezra', 'Fabian', 'Fabiola', 'Fae', 'Fannie', 'Fanny', 'Fatima', 'Faustino',\n    'Fausto', 'Favian', 'Fay', 'Faye', 'Federico', 'Felicia', 'Felicita',\n    'Felicity', 'Felipa', 'Felipe', 'Felix', 'Felton', 'Fermin', 'Fern',\n    'Fernando', 'Ferne', 'Fidel', 'Filiberto', 'Filomena', 'Finn', 'Fiona',\n    'Flavie', 'Flavio', 'Fleta', 'Fletcher', 'Flo', 'Florence', 'Florencio',\n    'Florian', 'Florida', 'Florine', 'Flossie', 'Floy', 'Floyd', 'Ford',\n    'Forest', 'Forrest', 'Foster', 'Frances', 'Francesca', 'Francesco',\n    'Francis', 'Francisca', 'Francisco', 'Franco', 'Frank', 'Frankie', 'Franz',\n    'Fred', 'Freda', 'Freddie', 'Freddy', 'Frederic', 'Frederick', 'Frederik',\n    'Frederique', 'Fredrick', 'Fredy', 'Freeda', 'Freeman', 'Freida', 'Frida',\n    'Frieda', 'Friedrich', 'Fritz', 'Furman', 'Gabe', 'Gabriel', 'Gabriella',\n    'Gabrielle', 'Gaetano', 'Gage', 'Gail', 'Gardner', 'Garett', 'Garfield',\n    'Garland', 'Garnet', 'Garnett', 'Garret', 'Garrett', 'Garrick', 'Garrison',\n    'Garry', 'Garth', 'Gaston', 'Gavin', 'Gay', 'Gayle', 'Gaylord', 'Gene',\n    'General', 'Genesis', 'Genevieve', 'Gennaro', 'Genoveva', 'Geo', 'Geoffrey',\n    'George', 'Georgette', 'Georgiana', 'Georgianna', 'Geovanni', 'Geovanny',\n    'Geovany', 'Gerald', 'Geraldine', 'Gerard', 'Gerardo', 'Gerda', 'Gerhard',\n    'Germaine', 'German', 'Gerry', 'Gerson', 'Gertrude', 'Gia', 'Gianni',\n    'Gideon', 'Gilbert', 'Gilberto', 'Gilda', 'Giles', 'Gillian', 'Gina',\n    'Gino', 'Giovani', 'Giovanna', 'Giovanni', 'Giovanny', 'Gisselle',\n    'Giuseppe', 'Gladyce', 'Gladys', 'Glen', 'Glenda', 'Glenna', 'Glennie',\n    'Gloria', 'Godfrey', 'Golda', 'Golden', 'Gonzalo', 'Gordon', 'Grace',\n    'Gracie', 'Graciela', 'Grady', 'Graham', 'Grant', 'Granville', 'Grayce',\n    'Grayson', 'Green', 'Greg', 'Gregg', 'Gregoria', 'Gregorio', 'Gregory',\n    'Greta', 'Gretchen', 'Greyson', 'Griffin', 'Grover', 'Guadalupe', 'Gudrun',\n    'Guido', 'Guillermo', 'Guiseppe', 'Gunnar', 'Gunner', 'Gus', 'Gussie',\n    'Gust', 'Gustave', 'Guy', 'Gwen', 'Gwendolyn', 'Hadley', 'Hailee', 'Hailey',\n    'Hailie', 'Hal', 'Haleigh', 'Haley', 'Halie', 'Halle', 'Hallie', 'Hank',\n    'Hanna', 'Hannah', 'Hans', 'Hardy', 'Harley', 'Harmon', 'Harmony', 'Harold',\n    'Harrison', 'Harry', 'Harvey', 'Haskell', 'Hassan', 'Hassie', 'Hattie',\n    'Haven', 'Hayden', 'Haylee', 'Hayley', 'Haylie', 'Hazel', 'Hazle', 'Heath',\n    'Heather', 'Heaven', 'Heber', 'Hector', 'Heidi', 'Helen', 'Helena',\n    'Helene', 'Helga', 'Hellen', 'Helmer', 'Heloise', 'Henderson', 'Henri',\n    'Henriette', 'Henry', 'Herbert', 'Herman', 'Hermann', 'Hermina', 'Herminia',\n    'Herminio', 'Hershel', 'Herta', 'Hertha', 'Hester', 'Hettie', 'Hilario',\n    'Hilbert', 'Hilda', 'Hildegard', 'Hillard', 'Hillary', 'Hilma', 'Hilton',\n    'Hipolito', 'Hiram', 'Hobart', 'Holden', 'Hollie', 'Hollis', 'Holly',\n    'Hope', 'Horace', 'Horacio', 'Hortense', 'Hosea', 'Houston', 'Howard',\n    'Howell', 'Hoyt', 'Hubert', 'Hudson', 'Hugh', 'Hulda', 'Humberto', 'Hunter',\n    'Hyman', 'Ian', 'Ibrahim', 'Icie', 'Ida', 'Idell', 'Idella', 'Ignacio',\n    'Ignatius', 'Ike', 'Ila', 'Ilene', 'Iliana', 'Ima', 'Imani', 'Imelda',\n    'Immanuel', 'Imogene', 'Ines', 'Irma', 'Irving', 'Irwin', 'Isaac', 'Isabel',\n    'Isabell', 'Isabella', 'Isabelle', 'Isac', 'Isadore', 'Isai', 'Isaiah',\n    'Isaias', 'Isidro', 'Ismael', 'Isobel', 'Isom', 'Israel', 'Issac', 'Itzel',\n    'Iva', 'Ivah', 'Ivory', 'Ivy', 'Izabella', 'Izaiah', 'Jabari', 'Jace',\n    'Jacey', 'Jacinthe', 'Jacinto', 'Jack', 'Jackeline', 'Jackie', 'Jacklyn',\n    'Jackson', 'Jacky', 'Jaclyn', 'Jacquelyn', 'Jacques', 'Jacynthe', 'Jada',\n    'Jade', 'Jaden', 'Jadon', 'Jadyn', 'Jaeden', 'Jaida', 'Jaiden', 'Jailyn',\n    'Jaime', 'Jairo', 'Jakayla', 'Jake', 'Jakob', 'Jaleel', 'Jalen', 'Jalon',\n    'Jalyn', 'Jamaal', 'Jamal', 'Jamar', 'Jamarcus', 'Jamel', 'Jameson',\n    'Jamey', 'Jamie', 'Jamil', 'Jamir', 'Jamison', 'Jammie', 'Jan', 'Jana',\n    'Janae', 'Jane', 'Janelle', 'Janessa', 'Janet', 'Janice', 'Janick', 'Janie',\n    'Janis', 'Janiya', 'Jannie', 'Jany', 'Jaquan', 'Jaquelin', 'Jaqueline',\n    'Jared', 'Jaren', 'Jarod', 'Jaron', 'Jarred', 'Jarrell', 'Jarret',\n    'Jarrett', 'Jarrod', 'Jarvis', 'Jasen', 'Jasmin', 'Jason', 'Jasper',\n    'Jaunita', 'Javier', 'Javon', 'Javonte', 'Jay', 'Jayce', 'Jaycee', 'Jayda',\n    'Jayde', 'Jayden', 'Jaydon', 'Jaylan', 'Jaylen', 'Jaylin', 'Jaylon',\n    'Jayme', 'Jayne', 'Jayson', 'Jazlyn', 'Jazmin', 'Jazmyn', 'Jazmyne', 'Jean',\n    'Jeanette', 'Jeanie', 'Jeanne', 'Jed', 'Jedediah', 'Jedidiah', 'Jeff',\n    'Jefferey', 'Jeffery', 'Jeffrey', 'Jeffry', 'Jena', 'Jenifer', 'Jennie',\n    'Jennifer', 'Jennings', 'Jennyfer', 'Jensen', 'Jerad', 'Jerald', 'Jeramie',\n    'Jeramy', 'Jerel', 'Jeremie', 'Jeremy', 'Jermain', 'Jermaine', 'Jermey',\n    'Jerod', 'Jerome', 'Jeromy', 'Jerrell', 'Jerrod', 'Jerrold', 'Jerry',\n    'Jess', 'Jesse', 'Jessica', 'Jessie', 'Jessika', 'Jessy', 'Jessyca',\n    'Jesus', 'Jett', 'Jettie', 'Jevon', 'Jewel', 'Jewell', 'Jillian', 'Jimmie',\n    'Jimmy', 'Jo', 'Joan', 'Joana', 'Joanie', 'Joanne', 'Joannie', 'Joanny',\n    'Joany', 'Joaquin', 'Jocelyn', 'Jodie', 'Jody', 'Joe', 'Joel', 'Joelle',\n    'Joesph', 'Joey', 'Johan', 'Johann', 'Johanna', 'Johathan', 'John',\n    'Johnathan', 'Johnathon', 'Johnnie', 'Johnny', 'Johnpaul', 'Johnson',\n    'Jolie', 'Jon', 'Jonas', 'Jonatan', 'Jonathan', 'Jonathon', 'Jordan',\n    'Jordane', 'Jordi', 'Jordon', 'Jordy', 'Jordyn', 'Jorge', 'Jose', 'Josefa',\n    'Josefina', 'Joseph', 'Josephine', 'Josh', 'Joshua', 'Joshuah', 'Josiah',\n    'Josiane', 'Josianne', 'Josie', 'Josue', 'Jovan', 'Jovani', 'Jovanny',\n    'Jovany', 'Joy', 'Joyce', 'Juana', 'Juanita', 'Judah', 'Judd', 'Jude',\n    'Judge', 'Judson', 'Judy', 'Jules', 'Julia', 'Julian', 'Juliana',\n    'Julianne', 'Julie', 'Julien', 'Juliet', 'Julio', 'Julius', 'June',\n    'Junior', 'Junius', 'Justen', 'Justice', 'Justina', 'Justine', 'Juston',\n    'Justus', 'Justyn', 'Juvenal', 'Juwan', 'Kacey', 'Kaci', 'Kacie', 'Kade',\n    'Kaden', 'Kadin', 'Kaela', 'Kaelyn', 'Kaia', 'Kailee', 'Kailey', 'Kailyn',\n    'Kaitlin', 'Kaitlyn', 'Kale', 'Kaleb', 'Kaleigh', 'Kaley', 'Kali', 'Kallie',\n    'Kameron', 'Kamille', 'Kamren', 'Kamron', 'Kamryn', 'Kane', 'Kara',\n    'Kareem', 'Karelle', 'Karen', 'Kari', 'Kariane', 'Karianne', 'Karina',\n    'Karine', 'Karl', 'Karlee', 'Karley', 'Karli', 'Karlie', 'Karolann',\n    'Karson', 'Kasandra', 'Kasey', 'Kassandra', 'Katarina', 'Katelin',\n    'Katelyn', 'Katelynn', 'Katharina', 'Katherine', 'Katheryn', 'Kathleen',\n    'Kathlyn', 'Kathryn', 'Kathryne', 'Katlyn', 'Katlynn', 'Katrina', 'Katrine',\n    'Kattie', 'Kavon', 'Kay', 'Kaya', 'Kaycee', 'Kayden', 'Kayla', 'Kaylah',\n    'Kaylee', 'Kayleigh', 'Kayley', 'Kayli', 'Kaylie', 'Kaylin', 'Keagan',\n    'Keanu', 'Keara', 'Keaton', 'Keegan', 'Keeley', 'Keely', 'Keenan', 'Keira',\n    'Keith', 'Kellen', 'Kelley', 'Kelli', 'Kellie', 'Kelly', 'Kelsi', 'Kelsie',\n    'Kelton', 'Kelvin', 'Ken', 'Kendall', 'Kendra', 'Kendrick', 'Kenna',\n    'Kennedi', 'Kennedy', 'Kenneth', 'Kennith', 'Kenny', 'Kenton', 'Kenya',\n    'Kenyatta', 'Kenyon', 'Keon', 'Keshaun', 'Keshawn', 'Keven', 'Kevin',\n    'Kevon', 'Keyon', 'Keyshawn', 'Khalid', 'Khalil', 'Kian', 'Kiana', 'Kianna',\n    'Kiara', 'Kiarra', 'Kiel', 'Kiera', 'Kieran', 'Kiley', 'Kim', 'Kimberly',\n    'King', 'Kip', 'Kira', 'Kirk', 'Kirsten', 'Kirstin', 'Kitty', 'Kobe',\n    'Koby', 'Kody', 'Kolby', 'Kole', 'Korbin', 'Korey', 'Kory', 'Kraig', 'Kris',\n    'Krista', 'Kristian', 'Kristin', 'Kristina', 'Kristofer', 'Kristoffer',\n    'Kristopher', 'Kristy', 'Krystal', 'Krystel', 'Krystina', 'Kurt', 'Kurtis',\n    'Kyla', 'Kyle', 'Kylee', 'Kyleigh', 'Kyler', 'Kylie', 'Kyra', 'Lacey',\n    'Lacy', 'Ladarius', 'Lafayette', 'Laila', 'Laisha', 'Lamar', 'Lambert',\n    'Lamont', 'Lance', 'Landen', 'Lane', 'Laney', 'Larissa', 'Laron', 'Larry',\n    'Larue', 'Laura', 'Laurel', 'Lauren', 'Laurence', 'Lauretta', 'Lauriane',\n    'Laurianne', 'Laurie', 'Laurine', 'Laury', 'Lauryn', 'Lavada', 'Lavern',\n    'Laverna', 'Laverne', 'Lavina', 'Lavinia', 'Lavon', 'Lavonne', 'Lawrence',\n    'Lawson', 'Layla', 'Layne', 'Lazaro', 'Lea', 'Leann', 'Leanna', 'Leanne',\n    'Leatha', 'Leda', 'Lee', 'Leif', 'Leila', 'Leilani', 'Lela', 'Lelah',\n    'Leland', 'Lelia', 'Lempi', 'Lemuel', 'Lenna', 'Lennie', 'Lenny', 'Lenora',\n    'Lenore', 'Leo', 'Leola', 'Leon', 'Leonard', 'Leonardo', 'Leone', 'Leonel',\n    'Leonie', 'Leonor', 'Leonora', 'Leopold', 'Leopoldo', 'Leora', 'Lera',\n    'Lesley', 'Leslie', 'Lesly', 'Lessie', 'Lester', 'Leta', 'Letha', 'Letitia',\n    'Levi', 'Lew', 'Lewis', 'Lexi', 'Lexie', 'Lexus', 'Lia', 'Liam', 'Liana',\n    'Libbie', 'Libby', 'Lila', 'Lilian', 'Liliana', 'Liliane', 'Lilla',\n    'Lillian', 'Lilliana', 'Lillie', 'Lilly', 'Lily', 'Lilyan', 'Lina',\n    'Lincoln', 'Linda', 'Lindsay', 'Lindsey', 'Linnea', 'Linnie', 'Linwood',\n    'Lionel', 'Lisa', 'Lisandro', 'Lisette', 'Litzy', 'Liza', 'Lizeth',\n    'Lizzie', 'Llewellyn', 'Lloyd', 'Logan', 'Lois', 'Lola', 'Lolita', 'Loma',\n    'Lon', 'London', 'Lonie', 'Lonnie', 'Lonny', 'Lonzo', 'Lora', 'Loraine',\n    'Loren', 'Lorena', 'Lorenz', 'Lorenza', 'Lorenzo', 'Lori', 'Lorine',\n    'Lorna', 'Lottie', 'Lou', 'Louie', 'Louisa', 'Lourdes', 'Louvenia',\n    'Lowell', 'Loy', 'Loyal', 'Loyce', 'Lucas', 'Luciano', 'Lucie', 'Lucienne',\n    'Lucile', 'Lucinda', 'Lucio', 'Lucious', 'Lucius', 'Lucy', 'Ludie',\n    'Ludwig', 'Lue', 'Luella', 'Luigi', 'Luis', 'Luisa', 'Lukas', 'Lula',\n    'Lulu', 'Luna', 'Lupe', 'Lura', 'Lurline', 'Luther', 'Luz', 'Lyda', 'Lydia',\n    'Lyla', 'Lynn', 'Lyric', 'Lysanne', 'Mabel', 'Mabelle', 'Mable', 'Mac',\n    'Macey', 'Maci', 'Macie', 'Mack', 'Mackenzie', 'Macy', 'Madaline',\n    'Madalyn', 'Maddison', 'Madeline', 'Madelyn', 'Madelynn', 'Madge', 'Madie',\n    'Madilyn', 'Madisen', 'Madison', 'Madisyn', 'Madonna', 'Madyson', 'Mae',\n    'Maegan', 'Maeve', 'Mafalda', 'Magali', 'Magdalen', 'Magdalena', 'Maggie',\n    'Magnolia', 'Magnus', 'Maia', 'Maida', 'Maiya', 'Major', 'Makayla',\n    'Makenna', 'Makenzie', 'Malachi', 'Malcolm', 'Malika', 'Malinda', 'Mallie',\n    'Mallory', 'Malvina', 'Mandy', 'Manley', 'Manuel', 'Manuela', 'Mara',\n    'Marc', 'Marcel', 'Marcelina', 'Marcelino', 'Marcella', 'Marcelle',\n    'Marcellus', 'Marcelo', 'Marcia', 'Marco', 'Marcos', 'Marcus', 'Margaret',\n    'Margarete', 'Margarett', 'Margaretta', 'Margarette', 'Margarita', 'Marge',\n    'Margie', 'Margot', 'Margret', 'Marguerite', 'Maria', 'Mariah', 'Mariam',\n    'Marian', 'Mariana', 'Mariane', 'Marianna', 'Marianne', 'Mariano',\n    'Maribel', 'Marie', 'Mariela', 'Marielle', 'Marietta', 'Marilie', 'Marilou',\n    'Marilyne', 'Marina', 'Mario', 'Marion', 'Marisa', 'Marisol', 'Maritza',\n    'Marjolaine', 'Marjorie', 'Marjory', 'Mark', 'Markus', 'Marlee', 'Marlen',\n    'Marlene', 'Marley', 'Marlin', 'Marlon', 'Marques', 'Marquis', 'Marquise',\n    'Marshall', 'Marta', 'Martin', 'Martina', 'Martine', 'Marty', 'Marvin',\n    'Mary', 'Maryam', 'Maryjane', 'Maryse', 'Mason', 'Mateo', 'Mathew',\n    'Mathias', 'Mathilde', 'Matilda', 'Matilde', 'Matt', 'Matteo', 'Mattie',\n    'Maud', 'Maude', 'Maudie', 'Maureen', 'Maurice', 'Mauricio', 'Maurine',\n    'Maverick', 'Mavis', 'Max', 'Maxie', 'Maxime', 'Maximilian', 'Maximillia',\n    'Maximillian', 'Maximo', 'Maximus', 'Maxine', 'Maxwell', 'May', 'Maya',\n    'Maybell', 'Maybelle', 'Maye', 'Maymie', 'Maynard', 'Mayra', 'Mazie',\n    'Mckayla', 'Mckenna', 'Mckenzie', 'Meagan', 'Meaghan', 'Meda', 'Megane',\n    'Meggie', 'Meghan', 'Mekhi', 'Melany', 'Melba', 'Melisa', 'Melissa',\n    'Mellie', 'Melody', 'Melvin', 'Melvina', 'Melyna', 'Melyssa', 'Mercedes',\n    'Meredith', 'Merl', 'Merle', 'Merlin', 'Merritt', 'Mertie', 'Mervin',\n    'Meta', 'Mia', 'Micaela', 'Micah', 'Michael', 'Michaela', 'Michale',\n    'Micheal', 'Michel', 'Michele', 'Michelle', 'Miguel', 'Mikayla', 'Mike',\n    'Mikel', 'Milan', 'Miles', 'Milford', 'Miller', 'Millie', 'Milo', 'Milton',\n    'Mina', 'Minerva', 'Minnie', 'Miracle', 'Mireille', 'Mireya', 'Misael',\n    'Missouri', 'Misty', 'Mitchel', 'Mitchell', 'Mittie', 'Modesta', 'Modesto',\n    'Mohamed', 'Mohammad', 'Mohammed', 'Moises', 'Mollie', 'Molly', 'Mona',\n    'Monica', 'Monique', 'Monroe', 'Monserrat', 'Monserrate', 'Montana',\n    'Monte', 'Monty', 'Morgan', 'Moriah', 'Morris', 'Mortimer', 'Morton',\n    'Mose', 'Moses', 'Moshe', 'Mossie', 'Mozell', 'Mozelle', 'Muhammad',\n    'Muriel', 'Murl', 'Murphy', 'Murray', 'Mustafa', 'Mya', 'Myah', 'Mylene',\n    'Myles', 'Myra', 'Myriam', 'Myrl', 'Myrna', 'Myron', 'Myrtice', 'Myrtie',\n    'Myrtis', 'Myrtle', 'Nadia', 'Nakia', 'Name', 'Nannie', 'Naomi', 'Naomie',\n    'Napoleon', 'Narciso', 'Nash', 'Nasir', 'Nat', 'Natalia', 'Natalie',\n    'Natasha', 'Nathan', 'Nathanael', 'Nathanial', 'Nathaniel', 'Nathen',\n    'Nayeli', 'Neal', 'Ned', 'Nedra', 'Neha', 'Neil', 'Nelda', 'Nella', 'Nelle',\n    'Nellie', 'Nels', 'Nelson', 'Neoma', 'Nestor', 'Nettie', 'Neva', 'Newell',\n    'Newton', 'Nia', 'Nicholas', 'Nicholaus', 'Nichole', 'Nick', 'Nicklaus',\n    'Nickolas', 'Nico', 'Nicola', 'Nicolas', 'Nicole', 'Nicolette', 'Nigel',\n    'Nikita', 'Nikki', 'Nikko', 'Niko', 'Nikolas', 'Nils', 'Nina', 'Noah',\n    'Noble', 'Noe', 'Noel', 'Noelia', 'Noemi', 'Noemie', 'Noemy', 'Nola',\n    'Nolan', 'Nona', 'Nora', 'Norbert', 'Norberto', 'Norene', 'Norma', 'Norris',\n    'Norval', 'Norwood', 'Nova', 'Novella', 'Nya', 'Nyah', 'Nyasia', 'Obie',\n    'Oceane', 'Ocie', 'Octavia', 'Oda', 'Odell', 'Odessa', 'Odie', 'Ofelia',\n    'Okey', 'Ola', 'Olaf', 'Ole', 'Olen', 'Oleta', 'Olga', 'Olin', 'Oliver',\n    'Ollie', 'Oma', 'Omari', 'Omer', 'Ona', 'Onie', 'Opal', 'Ophelia', 'Ora',\n    'Oral', 'Oran', 'Oren', 'Orie', 'Orin', 'Orion', 'Orland', 'Orlando',\n    'Orlo', 'Orpha', 'Orrin', 'Orval', 'Orville', 'Osbaldo', 'Osborne', 'Oscar',\n    'Osvaldo', 'Oswald', 'Oswaldo', 'Otha', 'Otho', 'Otilia', 'Otis', 'Ottilie',\n    'Ottis', 'Otto', 'Ova', 'Owen', 'Ozella', 'Pablo', 'Paige', 'Palma',\n    'Pamela', 'Pansy', 'Paolo', 'Paris', 'Parker', 'Pascale', 'Pasquale', 'Pat',\n    'Patience', 'Patricia', 'Patrick', 'Patsy', 'Pattie', 'Paul', 'Paula',\n    'Pauline', 'Paxton', 'Payton', 'Pearl', 'Pearlie', 'Pearline', 'Pedro',\n    'Peggie', 'Penelope', 'Percival', 'Percy', 'Perry', 'Pete', 'Peter',\n    'Petra', 'Peyton', 'Philip', 'Phoebe', 'Phyllis', 'Pierce', 'Pierre',\n    'Pietro', 'Pink', 'Pinkie', 'Piper', 'Polly', 'Porter', 'Precious',\n    'Presley', 'Preston', 'Price', 'Prince', 'Princess', 'Priscilla',\n    'Providenci', 'Prudence', 'Queen', 'Queenie', 'Quentin', 'Quincy', 'Quinn',\n    'Quinten', 'Quinton', 'Rachael', 'Rachel', 'Rachelle', 'Rae', 'Raegan',\n    'Rafael', 'Rafaela', 'Raheem', 'Rahsaan', 'Rahul', 'Raina', 'Raleigh',\n    'Ralph', 'Ramiro', 'Ramon', 'Ramona', 'Randal', 'Randall', 'Randi', 'Randy',\n    'Ransom', 'Raoul', 'Raphael', 'Raphaelle', 'Raquel', 'Rashad', 'Rashawn',\n    'Rasheed', 'Raul', 'Raven', 'Ray', 'Raymond', 'Raymundo', 'Reagan',\n    'Reanna', 'Reba', 'Rebeca', 'Rebecca', 'Rebeka', 'Rebekah', 'Reece', 'Reed',\n    'Reese', 'Regan', 'Reggie', 'Reginald', 'Reid', 'Reilly', 'Reina',\n    'Reinhold', 'Remington', 'Rene', 'Renee', 'Ressie', 'Reta', 'Retha',\n    'Retta', 'Reuben', 'Reva', 'Rex', 'Rey', 'Reyes', 'Reymundo', 'Reyna',\n    'Reynold', 'Rhea', 'Rhett', 'Rhianna', 'Rhiannon', 'Rhoda', 'Ricardo',\n    'Richard', 'Richie', 'Richmond', 'Rick', 'Rickey', 'Rickie', 'Ricky',\n    'Rico', 'Rigoberto', 'Riley', 'Rita', 'River', 'Robb', 'Robbie', 'Robert',\n    'Roberta', 'Roberto', 'Robin', 'Robyn', 'Rocio', 'Rocky', 'Rod', 'Roderick',\n    'Rodger', 'Rodolfo', 'Rodrick', 'Rodrigo', 'Roel', 'Rogelio', 'Roger',\n    'Rogers', 'Rolando', 'Rollin', 'Roma', 'Romaine', 'Roman', 'Ron', 'Ronaldo',\n    'Ronny', 'Roosevelt', 'Rory', 'Rosa', 'Rosalee', 'Rosalia', 'Rosalind',\n    'Rosalinda', 'Rosalyn', 'Rosamond', 'Rosanna', 'Rosario', 'Roscoe', 'Rose',\n    'Rosella', 'Roselyn', 'Rosemarie', 'Rosemary', 'Rosendo', 'Rosetta',\n    'Rosie', 'Rosina', 'Roslyn', 'Ross', 'Rossie', 'Rowan', 'Rowena', 'Rowland',\n    'Roxane', 'Roxanne', 'Roy', 'Royal', 'Royce', 'Rozella', 'Ruben', 'Rubie',\n    'Ruby', 'Rubye', 'Rudolph', 'Rudy', 'Rupert', 'Russ', 'Russel', 'Russell',\n    'Rusty', 'Ruth', 'Ruthe', 'Ruthie', 'Ryan', 'Ryann', 'Ryder', 'Rylan',\n    'Rylee', 'Ryleigh', 'Ryley', 'Sabina', 'Sabrina', 'Sabryna', 'Sadie',\n    'Sadye', 'Sage', 'Saige', 'Sallie', 'Sally', 'Salma', 'Salvador',\n    'Salvatore', 'Sam', 'Samanta', 'Samantha', 'Samara', 'Samir', 'Sammie',\n    'Sammy', 'Samson', 'Sandra', 'Sandrine', 'Sandy', 'Sanford', 'Santa',\n    'Santiago', 'Santina', 'Santino', 'Santos', 'Sarah', 'Sarai', 'Sarina',\n    'Sasha', 'Saul', 'Savanah', 'Savanna', 'Savannah', 'Savion', 'Scarlett',\n    'Schuyler', 'Scot', 'Scottie', 'Scotty', 'Seamus', 'Sean', 'Sebastian',\n    'Sedrick', 'Selena', 'Selina', 'Selmer', 'Serena', 'Serenity', 'Seth',\n    'Shad', 'Shaina', 'Shakira', 'Shana', 'Shane', 'Shanel', 'Shanelle',\n    'Shania', 'Shanie', 'Shaniya', 'Shanna', 'Shannon', 'Shanny', 'Shanon',\n    'Shany', 'Sharon', 'Shaun', 'Shawn', 'Shawna', 'Shaylee', 'Shayna',\n    'Shayne', 'Shea', 'Sheila', 'Sheldon', 'Shemar', 'Sheridan', 'Sherman',\n    'Sherwood', 'Shirley', 'Shyann', 'Shyanne', 'Sibyl', 'Sid', 'Sidney',\n    'Sienna', 'Sierra', 'Sigmund', 'Sigrid', 'Sigurd', 'Silas', 'Sim', 'Simeon',\n    'Simone', 'Sincere', 'Sister', 'Skye', 'Skyla', 'Skylar', 'Sofia',\n    'Soledad', 'Solon', 'Sonia', 'Sonny', 'Sonya', 'Sophia', 'Sophie',\n    'Spencer', 'Stacey', 'Stacy', 'Stan', 'Stanford', 'Stanley', 'Stanton',\n    'Stefan', 'Stefanie', 'Stella', 'Stephan', 'Stephania', 'Stephanie',\n    'Stephany', 'Stephen', 'Stephon', 'Sterling', 'Steve', 'Stevie', 'Stewart',\n    'Stone', 'Stuart', 'Summer', 'Sunny', 'Susan', 'Susana', 'Susanna', 'Susie',\n    'Suzanne', 'Sven', 'Syble', 'Sydnee', 'Sydney', 'Sydni', 'Sydnie', 'Sylvan',\n    'Sylvester', 'Sylvia', 'Tabitha', 'Tad', 'Talia', 'Talon', 'Tamara',\n    'Tamia', 'Tania', 'Tanner', 'Tanya', 'Tara', 'Taryn', 'Tate', 'Tatum',\n    'Tatyana', 'Taurean', 'Tavares', 'Taya', 'Taylor', 'Teagan', 'Ted', 'Telly',\n    'Terence', 'Teresa', 'Terrance', 'Terrell', 'Terrence', 'Terrill', 'Terry',\n    'Tess', 'Tessie', 'Tevin', 'Thad', 'Thaddeus', 'Thalia', 'Thea', 'Thelma',\n    'Theo', 'Theodora', 'Theodore', 'Theresa', 'Therese', 'Theresia', 'Theron',\n    'Thomas', 'Thora', 'Thurman', 'Tia', 'Tiana', 'Tianna', 'Tiara', 'Tierra',\n    'Tiffany', 'Tillman', 'Timmothy', 'Timmy', 'Timothy', 'Tina', 'Tito',\n    'Titus', 'Tobin', 'Toby', 'Tod', 'Tom', 'Tomas', 'Tomasa', 'Tommie',\n    'Toney', 'Toni', 'Tony', 'Torey', 'Torrance', 'Torrey', 'Toy', 'Trace',\n    'Tracey', 'Tracy', 'Travis', 'Travon', 'Tre', 'Tremaine', 'Tremayne',\n    'Trent', 'Trenton', 'Tressa', 'Tressie', 'Treva', 'Trever', 'Trevion',\n    'Trevor', 'Trey', 'Trinity', 'Trisha', 'Tristian', 'Tristin', 'Triston',\n    'Troy', 'Trudie', 'Trycia', 'Trystan', 'Turner', 'Twila', 'Tyler', 'Tyra',\n    'Tyree', 'Tyreek', 'Tyrel', 'Tyrell', 'Tyrese', 'Tyrique', 'Tyshawn',\n    'Tyson', 'Ubaldo', 'Ulices', 'Ulises', 'Una', 'Unique', 'Urban', 'Uriah',\n    'Uriel', 'Ursula', 'Vada', 'Valentin', 'Valentina', 'Valentine', 'Valerie',\n    'Vallie', 'Van', 'Vance', 'Vanessa', 'Vaughn', 'Veda', 'Velda', 'Vella',\n    'Velma', 'Velva', 'Vena', 'Verda', 'Verdie', 'Vergie', 'Verla', 'Verlie',\n    'Vern', 'Verna', 'Verner', 'Vernice', 'Vernie', 'Vernon', 'Verona',\n    'Veronica', 'Vesta', 'Vicenta', 'Vicente', 'Vickie', 'Vicky', 'Victor',\n    'Victoria', 'Vida', 'Vidal', 'Vilma', 'Vince', 'Vincent', 'Vincenza',\n    'Vincenzo', 'Vinnie', 'Viola', 'Violet', 'Violette', 'Virgie', 'Virgil',\n    'Virginia', 'Virginie', 'Vita', 'Vito', 'Viva', 'Vivian', 'Viviane',\n    'Vivianne', 'Vivien', 'Vivienne', 'Vladimir', 'Wade', 'Waino', 'Waldo',\n    'Walker', 'Wallace', 'Walter', 'Walton', 'Wanda', 'Ward', 'Warren',\n    'Watson', 'Wava', 'Waylon', 'Wayne', 'Webster', 'Weldon', 'Wellington',\n    'Wendell', 'Wendy', 'Werner', 'Westley', 'Weston', 'Whitney', 'Wilber',\n    'Wilbert', 'Wilburn', 'Wiley', 'Wilford', 'Wilfred', 'Wilfredo', 'Wilfrid',\n    'Wilhelm', 'Wilhelmine', 'Will', 'Willa', 'Willard', 'William', 'Willie',\n    'Willis', 'Willow', 'Willy', 'Wilma', 'Wilmer', 'Wilson', 'Wilton',\n    'Winfield', 'Winifred', 'Winnifred', 'Winona', 'Winston', 'Woodrow',\n    'Wyatt', 'Wyman', 'Xander', 'Xavier', 'Xzavier', 'Yadira', 'Yasmeen',\n    'Yasmin', 'Yasmine', 'Yazmin', 'Yesenia', 'Yessenia', 'Yolanda', 'Yoshiko',\n    'Yvette', 'Yvonne', 'Zachariah', 'Zachary', 'Zachery', 'Zack', 'Zackary',\n    'Zackery', 'Zakary', 'Zander', 'Zane', 'Zaria', 'Zechariah', 'Zelda',\n    'Zella', 'Zelma', 'Zena', 'Zetta', 'Zion', 'Zita', 'Zoe', 'Zoey', 'Zoie',\n    'Zoila', 'Zola', 'Zora', 'Zula'\n];\n\n/**\n * Generate random username.\n * @returns {string} random username\n */\nfunction generateUsername() {\n    const name = RandomUtil.randomElement(names);\n    const suffix = RandomUtil.randomAlphanumStr(3);\n\n    return `${name}-${suffix}`;\n}\n\nmodule.exports = {\n    generateUsername\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/util/UsernameGenerator.js","/* global callstats */\n\nimport RTCBrowserType from '../RTC/RTCBrowserType';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * We define enumeration of wrtcFuncNames as we need them before\n * callstats is initialized to queue events.\n * @const\n * @see http://www.callstats.io/api/#enumeration-of-wrtcfuncnames\n */\nconst wrtcFuncNames = {\n    createOffer: 'createOffer',\n    createAnswer: 'createAnswer',\n    setLocalDescription: 'setLocalDescription',\n    setRemoteDescription: 'setRemoteDescription',\n    addIceCandidate: 'addIceCandidate',\n    getUserMedia: 'getUserMedia',\n    iceConnectionFailure: 'iceConnectionFailure',\n    signalingError: 'signalingError',\n    applicationLog: 'applicationLog'\n};\n\n/**\n * We define enumeration of fabricEvent as we need them before\n * callstats is initialized to queue events.\n * @const\n * @see http://www.callstats.io/api/#enumeration-of-fabricevent\n */\nconst fabricEvent = {\n    fabricHold: 'fabricHold',\n    fabricResume: 'fabricResume',\n    audioMute: 'audioMute',\n    audioUnmute: 'audioUnmute',\n    videoPause: 'videoPause',\n    videoResume: 'videoResume',\n    fabricUsageEvent: 'fabricUsageEvent',\n    fabricStats: 'fabricStats',\n    fabricTerminated: 'fabricTerminated',\n    screenShareStart: 'screenShareStart',\n    screenShareStop: 'screenShareStop',\n    dominantSpeaker: 'dominantSpeaker',\n    activeDeviceList: 'activeDeviceList'\n};\n\n/**\n * The user id to report to callstats as destination.\n * @type {string}\n */\nconst DEFAULT_REMOTE_USER = 'jitsi';\n\n/**\n * Type of pending reports, can be event or an error.\n * @type {{ERROR: string, EVENT: string}}\n */\nconst reportType = {\n    ERROR: 'error',\n    EVENT: 'event',\n    MST_WITH_USERID: 'mstWithUserID'\n};\n\n/**\n * Set of currently existing {@link CallStats} instances.\n * @type {Set<CallStats>}\n */\nlet _fabrics;\n\n/**\n * An instance of this class is a wrapper for the CallStats API fabric. A fabric\n * reports one peer connection the the CallStats backend and is allocated with\n * {@link callstats.addNewFabric}. It has a bunch of instance methods for\n * reporting various events. A fabric is considered disposed when\n * {@link CallStats.sendTerminateEvent} is executed.\n *\n * Currently only one backend instance can be created ever and it's done using\n * {@link CallStats.initBackend}. At the time of this writing there is no way to\n * explicitly shutdown the backend, but it's supposed to close it's connection\n * automatically, after all fabrics have been terminated.\n */\nexport default class CallStats {\n    /**\n     * A callback passed to {@link callstats.addNewFabric}.\n     * @param {string} error 'success' means ok\n     * @param {string} msg some more details\n     * @private\n     */\n    static _addNewFabricCallback(error, msg) {\n        if (CallStats.backend && error !== 'success') {\n            logger.error(`Monitoring status: ${error} msg: ${msg}`);\n        }\n    }\n\n    /**\n     * Callback passed to {@link callstats.initialize} (backend initialization)\n     * @param {string} error 'success' means ok\n     * @param {String} msg\n     * @private\n     */\n    static _initCallback(error, msg) {\n        logger.log(`CallStats Status: err=${error} msg=${msg}`);\n\n        // there is no lib, nothing to report to\n        if (error !== 'success') {\n            return;\n        }\n\n        CallStats.backendInitialized = true;\n\n        // I hate that\n        let atLeastOneFabric = false;\n        let defaultInstance = null;\n\n        for (const callStatsInstance of CallStats.fabrics.values()) {\n            if (!callStatsInstance.hasFabric) {\n                logger.debug('addNewFabric - initCallback');\n                if (callStatsInstance._addNewFabric()) {\n                    atLeastOneFabric = true;\n                    if (!defaultInstance) {\n                        defaultInstance = callStatsInstance;\n                    }\n                }\n            }\n        }\n\n        if (!atLeastOneFabric) {\n            return;\n        }\n\n        CallStats._emptyReportQueue(defaultInstance);\n    }\n\n    /**\n     * Empties report queue.\n     *\n     * @param {CallStats} csInstance - The callstats instance.\n     * @private\n     */\n    static _emptyReportQueue(csInstance) {\n        // There is no conference ID nor a PeerConnection available when some of\n        // the events are scheduled on the reportsQueue, so those will be\n        // reported on the first initialized fabric.\n        const defaultConfID = csInstance.confID;\n        const defaultPC = csInstance.peerconnection;\n\n        // notify callstats about failures if there were any\n        for (const report of CallStats.reportsQueue) {\n            if (report.type === reportType.ERROR) {\n                const errorData = report.data;\n\n                CallStats._reportError(\n                    csInstance,\n                    errorData.type,\n                    errorData.error,\n                    errorData.pc || defaultPC);\n            } else if (report.type === reportType.EVENT) {\n                // if we have and event to report and we failed to add\n                // fabric this event will not be reported anyway, returning\n                // an error\n                const eventData = report.data;\n\n                CallStats.backend.sendFabricEvent(\n                    report.pc || defaultPC,\n                    eventData.event,\n                    defaultConfID,\n                    eventData.eventData);\n            } else if (report.type === reportType.MST_WITH_USERID) {\n                const data = report.data;\n\n                CallStats.backend.associateMstWithUserID(\n                    report.pc || defaultPC,\n                    data.callStatsId,\n                    defaultConfID,\n                    data.ssrc,\n                    data.usageLabel,\n                    data.containerId\n                );\n            }\n        }\n        CallStats.reportsQueue.length = 0;\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Reports an error to callstats.\n     *\n     * @param {CallStats} [cs]\n     * @param type the type of the error, which will be one of the wrtcFuncNames\n     * @param error the error\n     * @param pc the peerconnection\n     * @private\n     */\n    static _reportError(cs, type, error, pc) {\n        let _error = error;\n\n        if (!_error) {\n            logger.warn('No error is passed!');\n            _error = new Error('Unknown error');\n        }\n        if (CallStats.backendInitialized && cs) {\n            CallStats.backend.reportError(pc, cs.confID, type, _error);\n        } else {\n            CallStats.reportsQueue.push({\n                type: reportType.ERROR,\n                data: {\n                    error: _error,\n                    pc,\n                    type\n                }\n            });\n        }\n\n        // else just ignore it\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Reports an error to callstats.\n     *\n     * @param {CallStats} cs\n     * @param event the type of the event, which will be one of the fabricEvent\n     * @param eventData additional data to pass to event\n     * @private\n     */\n    static _reportEvent(cs, event, eventData) {\n        const pc = cs && cs.peerconnection;\n        const confID = cs && cs.confID;\n\n        if (CallStats.backendInitialized && cs) {\n            CallStats.backend.sendFabricEvent(pc, event, confID, eventData);\n        } else {\n            CallStats.reportsQueue.push({\n                confID,\n                pc,\n                type: reportType.EVENT,\n                data: { event,\n                    eventData }\n            });\n        }\n    }\n\n    /**\n     * Wraps some of the CallStats API method and logs their calls with\n     * arguments on the debug logging level. Also wraps some of the backend\n     * methods execution into try catch blocks to not crash the app in case\n     * there is a problem with the backend itself.\n     * @param {callstats} theBackend\n     * @private\n     */\n    static _traceAndCatchBackendCalls(theBackend) {\n        const tryCatchMethods = [\n            'associateMstWithUserID',\n            'sendFabricEvent',\n            'sendUserFeedback'\n\n            // 'reportError', - this one needs special handling - see code below\n        ];\n\n        for (const methodName of tryCatchMethods) {\n            const originalMethod = theBackend[methodName];\n\n            theBackend[methodName] = function(...theArguments) {\n                try {\n                    return originalMethod.apply(theBackend, theArguments);\n                } catch (e) {\n                    GlobalOnErrorHandler.callErrorHandler(e);\n                }\n            };\n        }\n        const debugMethods = [\n            'associateMstWithUserID',\n            'sendFabricEvent',\n            'sendUserFeedback'\n\n            // 'reportError', - this one needs special handling - see code below\n        ];\n\n        for (const methodName of debugMethods) {\n            const originalMethod = theBackend[methodName];\n\n            theBackend[methodName] = function(...theArguments) {\n                logger.debug(methodName, theArguments);\n                originalMethod.apply(theBackend, theArguments);\n            };\n        }\n        const originalReportError = theBackend.reportError;\n\n        /* eslint-disable max-params */\n        theBackend.reportError = function(pc, cs, type, ...args) {\n            // Logs from the logger are submitted on the applicationLog event\n            // \"type\". Logging the arguments on the logger will create endless\n            // loop, because it will put all the logs to the logger queue again.\n            if (type === wrtcFuncNames.applicationLog) {\n                // NOTE otherArguments are not logged to the console on purpose\n                // to not log the whole log batch\n                // FIXME check the current logging level (currently not exposed\n                // by the logger implementation)\n                // NOTE it is not safe to log whole objects on react-native as\n                // those contain too many circular references and may crash\n                // the app.\n                if (!RTCBrowserType.isReactNative()) {\n                    console && console.debug('reportError', pc, cs, type);\n                }\n            } else {\n                logger.debug('reportError', pc, cs, type, ...args);\n            }\n            try {\n                originalReportError.call(theBackend, pc, cs, type, ...args);\n            } catch (exception) {\n                if (type === wrtcFuncNames.applicationLog) {\n                    console && console.error('reportError', exception);\n                } else {\n                    GlobalOnErrorHandler.callErrorHandler(exception);\n                }\n            }\n        };\n\n        /* eslint-enable max-params */\n    }\n\n    /**\n     * Returns the Set with the currently existing {@link CallStats} instances.\n     * Lazily initializes the Set to allow any Set polyfills to be applied.\n     * @type {Set<CallStats>}\n     */\n    static get fabrics() {\n        if (!_fabrics) {\n            _fabrics = new Set();\n        }\n\n        return _fabrics;\n    }\n\n    /**\n     * Initializes the CallStats backend. Should be called only if\n     * {@link CallStats.isBackendInitialized} returns <tt>false</tt>.\n     * @param {object} options\n     * @param {String} options.callStatsID CallStats credentials - ID\n     * @param {String} options.callStatsSecret CallStats credentials - secret\n     * @param {string} options.aliasName the <tt>aliasName</tt> part of\n     * the <tt>userID</tt> aka endpoint ID, see CallStats docs for more info.\n     * @param {string} options.userName the <tt>userName</tt> part of\n     * the <tt>userID</tt> aka display name, see CallStats docs for more info.\n     *\n     */\n    static initBackend(options) {\n        if (CallStats.backend) {\n            throw new Error('CallStats backend has been initialized already!');\n        }\n        try {\n            // In react-native we need to import the callstats module, but\n            // imports are only allowed at top-level, so we must use require\n            // here. Sigh.\n            const CallStatsBackend\n                = RTCBrowserType.isReactNative()\n                    ? require('react-native-callstats/callstats')\n                    : callstats;\n\n            CallStats.backend = new CallStatsBackend();\n\n            CallStats._traceAndCatchBackendCalls(CallStats.backend);\n\n            CallStats.userID = {\n                aliasName: options.aliasName,\n                userName: options.userName\n            };\n            CallStats.callStatsID = options.callStatsID;\n            CallStats.callStatsSecret = options.callStatsSecret;\n\n            let configParams;\n\n            if (options.applicationName) {\n                configParams = {\n                    applicationVersion:\n                        `${options.applicationName} (${\n                            RTCBrowserType.getBrowserName()})`\n                };\n            }\n\n            // userID is generated or given by the origin server\n            CallStats.backend.initialize(\n                CallStats.callStatsID,\n                CallStats.callStatsSecret,\n                CallStats.userID,\n                CallStats._initCallback,\n                undefined,\n                configParams);\n\n            const getWiFiStatsMethod = options.getWiFiStatsMethod;\n\n            if (getWiFiStatsMethod) {\n                CallStats.backend.attachWifiStatsHandler(getWiFiStatsMethod);\n\n                getWiFiStatsMethod().then(result => {\n                    if (result) {\n                        logger.info('Reported wifi addresses:'\n                            , JSON.parse(result).addresses);\n                    }\n                })\n                .catch(() => {});// eslint-disable-line no-empty-function\n            }\n\n            return true;\n        } catch (e) {\n            // The callstats.io API failed to initialize (e.g. because its\n            // download did not succeed in general or on time). Further attempts\n            // to utilize it cannot possibly succeed.\n            GlobalOnErrorHandler.callErrorHandler(e);\n            CallStats.backend = null;\n            logger.error(e);\n\n            return false;\n        }\n    }\n\n    /**\n     * Checks if the CallStats backend has been created. It does not mean that\n     * it has been initialized, but only that the API instance has been\n     * allocated successfully.\n     * @return {boolean} <tt>true</tt> if backend exists or <tt>false</tt>\n     * otherwise\n     */\n    static isBackendInitialized() {\n        return Boolean(CallStats.backend);\n    }\n\n    /**\n     * Notifies CallStats about active device.\n     * @param {{deviceList: {String:String}}} devicesData list of devices with\n     * their data\n     * @param {CallStats} cs callstats instance related to the event\n     */\n    static sendActiveDeviceListEvent(devicesData, cs) {\n        CallStats._reportEvent(cs, fabricEvent.activeDeviceList, devicesData);\n    }\n\n    /**\n     * Notifies CallStats that there is a log we want to report.\n     *\n     * @param {Error} e error to send or {String} message\n     * @param {CallStats} cs callstats instance related to the error (optional)\n     */\n    static sendApplicationLog(e, cs) {\n        try {\n            CallStats._reportError(\n                cs,\n                wrtcFuncNames.applicationLog,\n                e,\n                cs && cs.peerconnection);\n        } catch (error) {\n            // If sendApplicationLog fails it should not be printed to\n            // the logger, because it will try to push the logs again\n            // (through sendApplicationLog) and an endless loop is created.\n            if (console && (typeof console.error === 'function')) {\n                // FIXME send analytics event as well\n                console.error('sendApplicationLog failed', error);\n            }\n        }\n    }\n\n    /**\n     * Sends the given feedback through CallStats.\n     *\n     * @param {string} conferenceID the conference ID for which the feedback\n     * will be reported.\n     * @param overallFeedback an integer between 1 and 5 indicating the\n     * user feedback\n     * @param detailedFeedback detailed feedback from the user. Not yet used\n     */\n    static sendFeedback(conferenceID, overallFeedback, detailedFeedback) {\n        if (CallStats.backend) {\n            CallStats.backend.sendUserFeedback(\n                conferenceID, {\n                    userID: CallStats.userID,\n                    overall: overallFeedback,\n                    comment: detailedFeedback\n                });\n        } else {\n            logger.error('Failed to submit feedback to CallStats - no backend');\n        }\n    }\n\n    /**\n     * Notifies CallStats that getUserMedia failed.\n     *\n     * @param {Error} e error to send\n     * @param {CallStats} cs callstats instance related to the error (optional)\n     */\n    static sendGetUserMediaFailed(e, cs) {\n        CallStats._reportError(cs, wrtcFuncNames.getUserMedia, e, null);\n    }\n\n    /**\n     * Notifies CallStats for mute events\n     * @param mute {boolean} true for muted and false for not muted\n     * @param type {String} \"audio\"/\"video\"\n     * @param {CallStats} cs callstats instance related to the event\n     */\n    static sendMuteEvent(mute, type, cs) {\n        let event;\n\n        if (type === 'video') {\n            event = mute ? fabricEvent.videoPause : fabricEvent.videoResume;\n        } else {\n            event = mute ? fabricEvent.audioMute : fabricEvent.audioUnmute;\n        }\n\n        CallStats._reportEvent(cs, event);\n    }\n\n    /**\n     * Creates new CallStats instance that handles all callstats API calls for\n     * given {@link TraceablePeerConnection}. Each instance is meant to handle\n     * one CallStats fabric added with 'addFabric' API method for the\n     * {@link TraceablePeerConnection} instance passed in the constructor.\n     * @param {TraceablePeerConnection} tpc\n     * @param {Object} options\n     * @param {string} options.confID the conference ID that wil be used to\n     * report the session.\n     * @param {string} [options.remoteUserID='jitsi'] the remote user ID to\n     * which given <tt>tpc</tt> is connected.\n     */\n    constructor(tpc, options) {\n        this.confID = options.confID;\n        this.tpc = tpc;\n        this.peerconnection = tpc.peerconnection;\n        this.remoteUserID = options.remoteUserID || DEFAULT_REMOTE_USER;\n        this.hasFabric = false;\n\n        CallStats.fabrics.add(this);\n\n        if (CallStats.backendInitialized) {\n            this._addNewFabric();\n\n            // if this is the first fabric let's try to empty the\n            // report queue. Reports all events that we recorded between\n            // backend initialization and receiving the first fabric\n            if (CallStats.fabrics.size === 1) {\n                CallStats._emptyReportQueue(this);\n            }\n        }\n    }\n\n    /**\n     * Initializes CallStats fabric by calling \"addNewFabric\" for\n     * the peer connection associated with this instance.\n     * @return {boolean} true if the call was successful or false otherwise.\n     */\n    _addNewFabric() {\n        logger.info('addNewFabric', this.remoteUserID);\n        try {\n            const fabricAttributes = {\n                remoteEndpointType:\n                    this.tpc.isP2P\n                        ? CallStats.backend.endpointType.peer\n                        : CallStats.backend.endpointType.server\n            };\n            const ret\n                = CallStats.backend.addNewFabric(\n                    this.peerconnection,\n                    this.remoteUserID,\n                    CallStats.backend.fabricUsage.multiplex,\n                    this.confID,\n                    fabricAttributes,\n                    CallStats._addNewFabricCallback);\n\n            this.hasFabric = true;\n\n            const success = ret.status === 'success';\n\n            if (!success) {\n                logger.error('callstats fabric not initilized', ret.message);\n            }\n\n            return success;\n\n        } catch (error) {\n            GlobalOnErrorHandler.callErrorHandler(error);\n\n            return false;\n        }\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Lets CallStats module know where is given SSRC rendered by providing\n     * renderer tag ID.\n     * If the lib is not initialized yet queue the call for later, when it's\n     * ready.\n     * @param {number} ssrc the SSRC of the stream\n     * @param {boolean} isLocal indicates whether this the stream is local\n     * @param {string|null} streamEndpointId if the stream is not local the it\n     * needs to contain the stream owner's ID\n     * @param {string} usageLabel meaningful usage label of this stream like\n     *        'microphone', 'camera' or 'screen'.\n     * @param {string} containerId  the id of media 'audio' or 'video' tag which\n     *        renders the stream.\n     */\n    associateStreamWithVideoTag(\n            ssrc,\n            isLocal,\n            streamEndpointId,\n            usageLabel,\n            containerId) {\n        if (!CallStats.backend) {\n            return;\n        }\n\n        const callStatsId = isLocal ? CallStats.userID : streamEndpointId;\n\n        if (CallStats.backendInitialized) {\n            CallStats.backend.associateMstWithUserID(\n                this.peerconnection,\n                callStatsId,\n                this.confID,\n                ssrc,\n                usageLabel,\n                containerId);\n        } else {\n            CallStats.reportsQueue.push({\n                type: reportType.MST_WITH_USERID,\n                pc: this.peerconnection,\n                data: {\n                    callStatsId,\n                    containerId,\n                    ssrc,\n                    usageLabel\n                }\n            });\n        }\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Notifies CallStats that we are the new dominant speaker in the\n     * conference.\n     */\n    sendDominantSpeakerEvent() {\n        CallStats._reportEvent(this, fabricEvent.dominantSpeaker);\n    }\n\n    /**\n     * Notifies CallStats that the fabric for the underlying peerconnection was\n     * closed and no evens should be reported, after this call.\n     */\n    sendTerminateEvent() {\n        if (CallStats.backendInitialized) {\n            CallStats.backend.sendFabricEvent(\n                this.peerconnection,\n                CallStats.backend.fabricEvent.fabricTerminated,\n                this.confID);\n        }\n        CallStats.fabrics.delete(this);\n    }\n\n    /**\n     * Notifies CallStats for ice connection failed\n     */\n    sendIceConnectionFailedEvent() {\n        CallStats._reportError(\n            this,\n            wrtcFuncNames.iceConnectionFailure,\n            null,\n            this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to create offer.\n     *\n     * @param {Error} e error to send\n     */\n    sendCreateOfferFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.createOffer, e, this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to create answer.\n     *\n     * @param {Error} e error to send\n     */\n    sendCreateAnswerFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.createAnswer, e, this.peerconnection);\n    }\n\n    /**\n     * Sends either resume or hold event for the fabric associated with\n     * the underlying peerconnection.\n     * @param {boolean} isResume true to resume or false to hold\n     */\n    sendResumeOrHoldEvent(isResume) {\n        CallStats._reportEvent(\n            this,\n            isResume ? fabricEvent.fabricResume : fabricEvent.fabricHold);\n    }\n\n    /**\n     * Notifies CallStats for screen sharing events\n     * @param {boolean} start true for starting screen sharing and\n     * false for not stopping\n     * @param {string|null} ssrc - optional ssrc value, used only when\n     * starting screen sharing.\n     */\n    sendScreenSharingEvent(start, ssrc) {\n        let eventData;\n\n        if (ssrc) {\n            eventData = { ssrc };\n        }\n\n        CallStats._reportEvent(\n            this,\n            start ? fabricEvent.screenShareStart : fabricEvent.screenShareStop,\n            eventData);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to set local description.\n     *\n     * @param {Error} e error to send\n     */\n    sendSetLocalDescFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.setLocalDescription, e, this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to set remote description.\n     *\n     * @param {Error} e error to send\n     */\n    sendSetRemoteDescFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.setRemoteDescription, e, this.peerconnection);\n    }\n\n    /**\n     * Notifies CallStats that peer connection failed to add ICE candidate.\n     *\n     * @param {Error} e error to send\n     */\n    sendAddIceCandidateFailed(e) {\n        CallStats._reportError(\n            this, wrtcFuncNames.addIceCandidate, e, this.peerconnection);\n    }\n}\n\n/**\n * The CallStats API backend instance\n * @type {callstats}\n */\nCallStats.backend = null;\n\n// some errors/events may happen before CallStats init\n// in this case we accumulate them in this array\n// and send them to callstats on init\nCallStats.reportsQueue = [];\n\n/**\n * Whether the library was successfully initialized(the backend) using its\n * initialize method.\n * @type {boolean}\n */\nCallStats.backendInitialized = false;\n\n/**\n * Part of the CallStats credentials - application ID\n * @type {string}\n */\nCallStats.callStatsID = null;\n\n/**\n * Part of the CallStats credentials - application secret\n * @type {string}\n */\nCallStats.callStatsSecret = null;\n\n/**\n * Local CallStats user ID structure. Can be set only once when\n * {@link backend} is initialized, so it's static for the time being.\n * See CallStats API for more info:\n * https://www.callstats.io/api/#userid\n * @type {object}\n */\nCallStats.userID = null;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/statistics/CallStats.js","/*! callstats.js  version = 3.27.0 2017-12-14 */\n\"use strict\";!function(){function a(){function a(){var a=(Math.random()+1).toString(36);return a.substring(2,a.length)}function b(){return window.performance.now?window.performance.now()+window.performance.timing.navigationStart:Date.now()}function c(){var a=b();return a+bb.currentOffset}function d(a){if(!$a||!$a.rtc_rtp_parameters||!$a.rtc_rtp_parameters.encodings)return void a.streams.forEach(function(a){var b=a.data;\"video\"===b.mediaType&&a.streamType===ub.outbound&&(b.csioSCSValidationSampleCount=null,b.csioAvgMaxBitrateDiff=null,b.csioAvgDeltaThroughput=null,b.csioMaxBitrateAboveRatio=null,b.csioCCDrivenRatio=null)});var b=function(a){return Sb[a]?Sb[a]:(Sb[a]={total:0,above:0,ccDriven:0,sumMaxBitrateDiff:0,sumThroughputDiff:0,prevCsioAvgBRKbps:0},Sb[a])},c=function(a,c,d,e,f){var g=b(a.ssrc);a.csioSCSValidationSampleCount=++g.total,g.sumMaxBitrateDiff+=c,a.csioAvgMaxBitrateDiff=g.sumMaxBitrateDiff/g.total,g.sumThroughputDiff+=d,a.csioAvgDeltaThroughput=g.sumThroughputDiff/g.total,e&&(g.above+=1),a.csioMaxBitrateAboveRatio=g.above/g.total,f&&(g.ccDriven+=1),a.csioCCDrivenRatio=g.ccDriven/g.total},d=0;$a.rtc_rtp_parameters.encodings.forEach(function(a){a&&(d=Math.max(d,a.maxBitrate))});var e=0;if(_a){_a.encodings.forEach(function(a){e=Math.max(e,a.maxBitrate)});var f=0,g=0,h=null,i=null;a.streams.forEach(function(a){var j=a.data,k=b(j.ssrc);\"video\"===j.mediaType&&a.streamType===ub.outbound&&(0<e&&.9*e<1e3*j.csioAvgBRKbps?(f=d-e,i=!1):(f=d-1e3*j.csioAvgBRKbps,i=!0),h=0<f,g=j.csioAvgBRKbps-k.prevCsioAvgBRKbps,k.prevCsioAvgBRKbps=j.csioAvgBRKbps,c(j,f,g,h,i))})}}function e(){return window.performance.now?window.performance.now():null}function f(){navigator&&\"function\"==typeof navigator.getBattery&&navigator.getBattery().then(function(a){Xa=a})}function g(){if(Xa)return Xa.level}function h(){if(Xa)return Xa.charging}function i(a,b){return a.sort().toString()===b.sort().toString()}function j(a,b,c){navigator&&navigator.mediaDevices&&navigator.mediaDevices.enumerateDevices&&navigator.mediaDevices.enumerateDevices().then(function(d){la?i(la,d)||(la=d,_b(a,b,c)):(la=d,_b(a,b,c)),setTimeout(function(){j(a,b,c)},sa)}).catch(function(){setTimeout(function(){j(a,b,c)},sa)})}function k(){Z&&Z().then(function(a){ka=JSON.parse(a),setTimeout(function(){k()},ta)}).catch(function(){setTimeout(function(){k()},ta)})}function l(){qa||window&&window.addEventListener&&window.addEventListener(\"beforeunload\",function(a){var b;for(b in ab)ab.hasOwnProperty(b)&&Xb(jb.userLeft,null,b,ab[b].ucID,null,null,null);return cb&&(bb.offsetResults=[],bb.syncHandler=null,cb=!1),\"Are you sure you want to close the call?\"})}function m(a,b,c,d,f){var g=kc(c,d),h=null;g&&(h=e(),Xb(jb.mediaPlaybackStartEvent,b,c,a,{ssrc:f,highResTs:h},g,null))}function n(a,b,c,d,f){var g=kc(c,d),h=null;g&&(h=e(),Xb(jb.mediaSuspendedEvent,b,c,a,{ssrc:f,highResTs:h},g,null))}function o(a,b,c,d){var e,f=document.getElementById(b);f&&(f.oncanplay=function(){e=ab[a].ucID;var b=jc(a,c);b&&m(e,b.remoteUserID,a,c,d)},f.onsuspend=function(){e=ab[a].ucID;var b=jc(a,c);b&&n(e,b.remoteUserID,a,c,d)})}function p(a){var b=Aa.codebase,c=!1;if(null===a)c=!1;else if(b===Fb.firefox){var d=typeof mozRTCPeerConnection,e=typeof RTCPeerConnection;\"undefined\"!==d&&a instanceof mozRTCPeerConnection?c=!0:\"undefined\"!==e&&a instanceof RTCPeerConnection&&(c=!0)}else null!==hb&&a instanceof hb&&(c=!0),\"function\"!=typeof a&&b!==Fb.edge||(c=!0),void 0!==typeof a.createOffer&&(c=!0);return c}function q(a,b){var c;return a&&(b===Fb.chrome?a.googLocalAddress?(c=a.googLocalAddress,c.concat(\":\",a.googRemoteAddress)):a.selectedCandidatePairId&&(c=a.selectedCandidatePairId):b===Fb.firefox&&(a.localAddr?(c=a.localAddr,c.concat(\":\",a.remoteAddr)):a.selectedCandidatePairId&&(c=a.selectedCandidatePairId))),cc(c)}function r(){var a;return a=navigator.onLine===!0?\"online\":\"offline\"}function s(a,b,c){var d=null;c.ssrcMap.hasOwnProperty(a.data.ssrc)&&(c.ssrcMap[a.data.ssrc].mediaType=a.data.mediaType,a.data.googCodecName?d=a.data.googCodecName:a.data.codec&&(d=a.data.codec),c.ssrcMap[a.data.ssrc].codec=d,a.data.codecImplementationName&&(c.ssrcMap[a.data.ssrc].codecImplementationName=a.data.codecImplementationName))}function t(a,b,c){var d,e,f,g,h,i,j,k,l=[];if(void 0!==a.lastStatsSent&&void 0!==a.lastStatsSent.statistics.Transport)for(f=a.lastStatsSent.statistics.Transport,g=a.latestEventSent,h=void 0,d=0;d<b.length;d++){for(h=void 0,e=0;e<f.length;e++)if(b[d].hash===f[e].hash){h=f[e];break}void 0!==h&&(i=parseInt(h.bytesReceived,10),j=parseInt(h.bytesSent,10),k=c-g,k>0&&(b[d].csioReceivedBwKbps=8*(parseInt(b[d].bytesReceived,10)-i)/k,b[d].csioSentBwKbps=8*(parseInt(b[d].bytesSent,10)-j)/k,b[d].csioIntBytesReceived=parseInt(b[d].bytesReceived,10)-i,b[d].csioIntBytesSent=parseInt(b[d].bytesSent,10)-j,void 0!==h.packetsSent&&void 0!==b[d].packetsSent&&(b[d].csioSentPacketRate=(parseInt(b[d].packetsSent,10)-parseInt(h.packetsSent,10))/(k/1e3),b[d].csioIntPacketsSent=parseInt(b[d].packetsSent,10)-parseInt(h.packetsSent,10)),void 0!==h.packetsReceived&&void 0!==b[d].packetsReceived&&(b[d].csioReceivedPacketRate=(parseInt(b[d].packetsReceived,10)-parseInt(h.packetsReceived,10))/(k/1e3),b[d].csioIntPacketsReceived=parseInt(b[d].packetsReceived,10)-parseInt(h.packetsReceived,10))),l.push(b[d]))}return l}function u(a,b,c,d){var e=[];return c===Fb.firefox?e=b:b&&(e=t(a,b,d)),e}function v(a){var b,c,d;for(b in a.streams)if(a.streams.hasOwnProperty(b)){if(a.streams[b].inbound)for(d in a.streams[b].inbound)a.streams[b].inbound.hasOwnProperty(d)&&(c=a.streams[b].inbound[d].mark,c===wb.bad?a.streams[b].inbound[d].mark=2:c===wb.fair?a.streams[b].inbound[d].mark=1:a.streams[b].inbound[d].mark=0);if(a.streams[b].outbound)for(d in a.streams[b].outbound)a.streams[b].outbound.hasOwnProperty(d)&&(c=a.streams[b].outbound[d].mark,c===wb.bad?a.streams[b].outbound[d].mark=2:c===wb.fair?a.streams[b].outbound[d].mark=1:a.streams[b].outbound[d].mark=0)}return a}function w(a){var b={},c=od.getConferenceURL();return a.connectionState&&(b.connectionState=a.connectionState),a.fabricState&&(b.fabricState=a.fabricState),c&&(b.conferenceURL=c),b.streams={},null===a.streams?b:(a.streams.forEach(function(a){var c={cname:a.cname,ssrc:a.ssrc,msid:a.msid,remoteUserID:a.userID,usageLabel:a.usage,associatedVideoTag:a.associatedVideoTag};a.data.hasOwnProperty(\"csioIntFL\")&&(c.fractionLoss=a.data.csioIntFL),a.data.hasOwnProperty(\"csioIntBRKbps\")&&(c.bitrate=a.data.csioIntBRKbps),a.data.hasOwnProperty(\"csioMark\")&&(c.quality=a.data.csioMark),a.data.hasOwnProperty(\"csioMediaType\")&&(c.mediaType=a.data.csioMediaType),a.data.hasOwnProperty(\"googRtt\")&&(c.rtt=a.data.googRtt),a.data.hasOwnProperty(\"mozRtt\")&&(c.rtt=a.data.mozRtt),a.data.hasOwnProperty(\"roundTripTime\")&&(c.rtt=a.data.roundTripTime),a.data.hasOwnProperty(\"jitter\")&&(c.jitter=a.data.jitter),a.data.hasOwnProperty(\"googJitterReceived\")&&(c.jitter=a.data.googJitterReceived),a.data.hasOwnProperty(\"audioOutputLevel\")&&(c.audioOutputLevel=a.data.audioOutputLevel),a.data.hasOwnProperty(\"audioInputLevel\")&&(c.audioInputLevel=a.data.audioInputLevel),a.data.hasOwnProperty(\"audioLevel\")&&(c.audioLevel=a.data.audioLevel),a.data.hasOwnProperty(\"csioAvgRtt\")&&(c.averageRTT=a.data.csioAvgRtt),a.data.hasOwnProperty(\"csioAvgJitter\")&&(c.averageJitter=a.data.csioAvgJitter),a.data.hasOwnProperty(\"csioPktLossPercentage\")&&(c.packetLossPercentage=a.data.csioPktLossPercentage),a.reportType&&\"local\"===a.reportType?a.streamType&&(c.statsType=a.streamType+\"-rtp\"):a.reportType&&\"remote\"===a.reportType&&a.streamType&&(c.statsType=\"remote-\"+a.streamType+\"-rtp\"),b.streams[a.ssrc]=c}),b)}function x(a,b,d,e,f,g){var h=c();a.hasOwnProperty(\"token\")&&a.hasOwnProperty(\"ucID\")&&!cb?(S(kb.processedStats,a,g),b.latestEventSent=h,b.lastFabricState=b.pcState):(a.clockUnsynced=cb,Oa.cacheEvent({channel:kb.processedStats,data:a}))}function y(a,b){for(var c in b)b.hasOwnProperty(c)&&\"id\"!==c&&\"type\"!==c&&\"timestamp\"!==c&&(a[c]=b[c]);return a}function z(a,e,f,i,j){function k(k){if(k){var l=c(),m=b();void 0===i.lastRawStatsSentInterval||null===i.lastRawStatsSentInterval?i.lastRawStatsSentInterval=m-i.statsPollingStart:i.lastRawStatsSentInterval=m-i.rawstatsTS+i.lastRawStatsSentInterval,void 0===i.lastProcessedStatsSentInterval||null===i.lastProcessedStatsSentInterval?i.lastProcessedStatsSentInterval=Fa+1:i.lastProcessedStatsSentInterval=m-i.rawstatsTS+i.lastProcessedStatsSentInterval,i.rawstatsTS=m;var n={},o=Aa.codebase,p=i.conferenceID,t=i.remoteUserID;n.version=da,n.appID=ma,n.conferenceID=encodeURIComponent(p),n.apiTS=l,n.timeShift=0,n.fabricState=i.pcState,n.pcID=i.pcHash,void 0!==f&&(n.ucID=f),Ua.authToken&&(n.token=Ua.authToken),n.localID=encodeURIComponent(e),n.remoteID=t?encodeURIComponent(t):null,n.deviceID=pa;var y,z,A,C,G,H,J,K={streams:[]},L=null,M=!1,N=!1,O={},P={};for(L=nc(k),y=0;y<L.length;++y)if(z=E(L[y]),A=B(z),!F(A))if(A.hasOwnProperty(\"Transport\"))C=\"Transport\",K.hasOwnProperty(C)||(K[C]=[]),o!==Fb.firefox?(parseInt(A[C].bytesReceived,10)>0||parseInt(A[C].bytesSent,10)>0)&&(K[C].push(A[C]),\"true\"!==A[C].googActiveConnection&&A[C].googActiveConnection!==!0||(n.activeConnectionIndex=K[C].length)):(K[C].push(A[C]),\"true\"!==A[C].selected&&A[C].selected!==!0||(n.activeConnectionIndex=K[C].length));else if(A.localCandidate)O[A.localCandidate.id]=A.localCandidate;else if(A.remoteCandidate)P[A.remoteCandidate.id]=A.remoteCandidate;else if(A.bwe)K.bwe=A.bwe;else if(A.trackStats)K.trackStats||(K.trackStats=[]),K.trackStats.push(A.trackStats);else if(A.codec)K.codec||(K.codec=[]),K.codec.push(A.codec);else if(A.candidatePair)K.candidatePair||(K.candidatePair=[]),K.candidatePair.push(A.candidatePair);else{H=Ub(i,A.ssrc),void 0!==H&&H.localStartTime||(J=Wb(t,p,f,i,j,null),J&&(N=!0),H=Ub(i,A.ssrc)),H&&(G=H.remoteUserID),void 0===G&&(G=t);var Q={userID:G,data:A.data,reportType:A.reportType,streamType:A.streamType,ssrc:A.ssrc};void 0!==H&&(Q.cname=H.cname,Q.msid=H.msid,Q.associatedVideoTag=H.associatedVideoTag,Q.usage=H.usageLabel),K.streams.push(Q)}if(n.statistics=K,K.Transport&&(M=D(K.Transport,i)),M&&cd(j,jb.fabricTransportSwitch,p),K.Transport||o!==Fb.firefox||(K.Transport=K.candidatePair.filter(function(a){return!(!a.selected&&\"true\"!==a.selected)})),K.Transport)for(var R=0;R<K.Transport.length;R++)K.Transport[R].hash=q(K.Transport[R],o);i.pcState===xb.disrupted&&I(n),K.trackStats&&(K=hd(K)),K.Transport&&K.candidatePair&&(K=gd(K)),N&&Xb(jb.ssrcMap,t,p,f,Vb(i),i.pcHash),Za&&(Xb(kb.senderConfiguration,t,p,f,$a,i.pcHash),Za=!1);var S={},T={response:null},V={response:null},W={response:null},X=null;if(ja.fire(ja.events.OnPolling,{streams:K.streams,codeBase:o}),ja.fire(ja.events.OnOneWayAudioDisruptionsRequest,V),null!==V.response&&V.response.forEach(function(a){X={mediaType:a.mediaType,ssrc:a.ssrc,disruptionType:a.type},Xb(jb.oneWayMedia,t,p,f,X,i.pcHash)}),ja.fire(ja.events.OnSendingThroughputObservationsRequest,W),null!==W.response&&(X=W.response,Xb(kb.sendingThroughputObservations,t,p,f,X,i.pcHash)),ja.fire(ja.events.OnStatsRequest,T),null!==T.response){if(T.response.streams)for(y=0;y<T.response.streams.length;y++)s(T.response.streams[y],o,i);S.streams=T.response.streams;for(var Y=0<Ma.length,Z=0,$=function(a){a.data.ssrc===Z&&(Y|=\"audio\"===a.mediaType&&a.streamType===ub.inbound)};0<Ma.length;)Z=Ma.shift(),S.streams.forEach($);if(Y){var _={mediaType:\"audio\",ssrc:null,disruptionType:vb.noInboundAudioOnlyFabric};Xb(jb.oneWayMedia,t,p,f,_,i.pcHash)}if(S.fabricState=i.pcState,S.connectionState=r(),K.Transport&&(S.Transport=u(i,K.Transport,o,l)),K.bwe&&(S.bwe=K.bwe),void 0===i.processedStatsTupleArray&&(i.processedStatsTupleArray=[]),Da.stats){var aa=w(S);Da.stats(aa)}S.apiTS=l,S.batteryStatus={},S.batteryStatus.batteryLevel=g(),S.batteryStatus.isBatteryCharging=h(),S.wifiStats=ka,S=v(S),d(S),i.processedStatsTupleArray.push(S),n.processedStatistics=i.processedStatsTupleArray,i.lastStatsSent=n;var ba=U(n);delete ba.statistics,i.lastProcessedStatsSentInterval>=Fa&&(i.processedStatsTupleArray=[],Ra.add(ba,ba.processedStatistics.length),ba.msgStat=Ra.getStat(),x(ba,i,p,t,e,a),i.lastProcessedStatsSentInterval=0)}}}return k}function A(a){var b;return yb.hasOwnProperty(a)?a===yb.createOffer||a===yb.createAnswer||a===yb.setRemoteDescription?b=zb.negotiationFailure:a===yb.setLocalDescription?b=zb.sdpError:a===yb.addIceCandidate?b=zb.sdpError:a===yb.getUserMedia?b=zb.mediaConfigError:a===yb.iceConnectionFailure?b=zb.iceFailure:a===yb.signalingError?b=zb.signalingError:(a===yb.applicationLog||yb.applicationError)&&(b=zb.applicationLog):b=Pb.invalidWebRTCFunctionName,b}function B(a){var b={};if(\"inboundrtp\"===a.type||\"outboundrtp\"===a.type||\"inbound-rtp\"===a.type||\"outbound-rtp\"===a.type){if(b.ssrc=a.ssrc,b.streamType=\"inboundrtp\"===a.type||\"inbound-rtp\"===a.type?\"inbound\":\"outbound\",\"Safari\"===Aa.name&&!a.mediaType){a.id.includes(\"Audio\")?a.mediaType=\"audio\":a.id.includes(\"Video\")&&(a.mediaType=\"video\");var c=a.id.split(\"_\");if(c[1])try{a.ssrc=parseInt(c[1]),b.ssrc=a.ssrc}catch(a){}}b.data=a,void 0!==a.isRemote?b.reportType=\"true\"===a.isRemote||a.isRemote===!0?\"remote\":\"local\":b.reportType=\"local\",a.trackId&&(b.trackId=a.trackId),a.mediaType&&(b.mediaType=a.mediaType)}else\"candidatepair\"===a.type&&a.selected?b.Transport=a:\"localcandidate\"===a.type||\"local-candidate\"===a.type?b.localCandidate=a:\"remotecandidate\"===a.type||\"remote-candidate\"===a.type?b.remoteCandidate=a:\"transport\"===a.type||\"googCandidatePair\"===a.type?b.Transport=a:\"VideoBwe\"===a.type?b.bwe=a:\"track\"===a.type?b.trackStats=a:\"candidate-pair\"===a.type?b.candidatePair=a:\"codec\"===a.type?b.codec=a:\"ssrc\"===a.type&&(b.reportType=\"local\",a.bytesSent?b.streamType=\"outbound\":b.streamType=\"inbound\",b.ssrc=a.ssrc,b.data=a);return b}function C(a){var b=\"None\";switch(a){case 0:b=\"TURN/TLS\";break;case 1:b=\"TURN/TCP\";break;case 2:b=\"TURN/UDP\"}return b}function D(a,b){var c,d,e,f,g,h,i,j,k,l=!1,m=\"None\",n=!1,o=Aa.codebase,p=function(a){if(a.typePreference){var b=a.typePreference>>24;return\"rtp\"===a.protocol&&a.address===c&&(b>=0&&b<=2&&(m=C(b)),!0)}return!1};for(i=0;i<a.length;i++)if(j=a[i],o!==Fb.firefox||\"candidatepair\"!==j.type||\"true\"!==j.selected&&j.selected!==!0?\"googCandidatePair\"!==j.type||\"true\"!==j.googActiveConnection&&j.googActiveConnection!==!0?\"transport\"===j.type&&(n=!0,j.selectedCandidatePairId&&(k=j.selectedCandidatePairId)):(n=!0,c=j.googLocalAddress,d=j.googRemoteAddress,e=j.googLocalCandidateType,f=j.googRemoteCandidateType,g=j.googTransportType):(n=!0,c=j.localAddr,d=j.remoteAddr,e=j.localAddrType,f=j.remoteAddrType,g=j.transportType),n){c&&(h=0===c.indexOf(\"[\")),b.iceCandidates.some(p);break}if(!n)return l;var q=b.transportData;return void 0!==q&&q.localAddr===c&&q.remoteAddr===d&&q.transportType===g&&q.selectedCandidatePairId===k||(b.transportData={localAddr:c,remoteAddr:d,localAddrType:e,remoteAddrType:f,transportType:g,ipv6:h,relayType:m,selectedCandidatePairId:k},l=!0),l}function E(a){var b,c={};a.timestamp instanceof Date&&(c.timestamp=a.timestamp.getTime().toString()),a.type&&(c.type=a.type);var d=0;if(a.names){var e=a.names();for(d=0;d<e.length;++d)c[e[d]]=a.stat(e[d])}else for(b in a)a.hasOwnProperty(b)&&(c[b]=a[b]);if(c.values){for(d=0;d<c.values.length;++d){a=c.values[d];for(b in a)a.hasOwnProperty(b)&&(c[b]=a[b])}delete c.values}return c}function F(a){if(null===a)return!0;if(a.length>0)return!1;if(0===a.length)return!0;var b;for(b in a)if(a.hasOwnProperty(b))return!1;return!0}function G(a){return{magicKey:a,statsSubmissionInterval:Fa,endpoint:Ya,localUserIDObject:oa}}function H(a,b,c){var d=ab[a];void 0===d&&(ab[a]={},ab[a].participants=null,c&&(ab[a].userJoinedSent=!0),b&&(ab[a].refreshPresence=b))}function I(a){var b,c=a.statistics.outbound;if(void 0!==c)for(b in c)c.hasOwnProperty(b)&&(c[b].data.mozRtt?c[b].data.mozRtt=0:c[b].data.googRtt?c[b].data.googRtt=0:c[b].data.rtt?c[b].data.rtt=0:c[b].data.roundTripTime&&(c[b].data.roundTripTime=0))}function J(a){return clearInterval(a),null}function K(){var a;for(a in ab)ab.hasOwnProperty(a)&&(ab[a].refreshPresence=J(ab[a].refreshPresence),delete ab[a].refreshPresence);W()}function L(a){var b=!1;if(!a)return b;var c=ab[a];return void 0!==c&&c.participants&&c.participants.length>0&&(b=!0),b}function M(a,b){var c=ab[a],d=[];if(void 0===c)d.push(b),ab[a]={},ab[a].participants=d;else{var e=c.participants;null===e?(d.push(b),c.participants=d):e.push(b)}}function N(a){var b=!1;if(!ab[a])return{conferenceFinished:b,ucID:null};var c=ab[a].ucID;return 0===ab[a].participants.length&&(J(ab[a].refreshPresence),W(),Oa.sendCachedEvents(Ua,cb),delete ab[a],b=!0),{conferenceFinished:b,ucID:c}}function O(a,b){Xb(jb.userLeft,null,a,b,null,null,null),W(),db=Rb,Rb=null}function P(){var a,b=function(a){return setInterval(function(){ac(a)},Ha)};for(a in ab)if(ab.hasOwnProperty(a)){if(a===ia)return;ac(a),ab[a].refreshPresence=b(a)}X()}function Q(){bb.syncHandler||(Ob(ma,na,\"log\",{msg:\"start clockSync\"}),bb.offsetResults=[],ld(),bb.syncHandler=!0)}function R(a){try{if(window&&window.sessionStorage){var b=JSON.parse(window.sessionStorage.getItem(\"csio_ucid_data\"));if(b&&b[a])return b[a].ucID}}catch(a){return null}return null}function S(a,b,c){var d=b.action,e=b.remoteID,f=b.ucID;b.channel=a,Ua._isTokenValid(Ua.authToken,ma,na)?(f&&!cb&&e||Hb.indexOf(d)!==-1)&&b.conferenceID!==ia?(b.token=Ua.authToken,pd(a,b,c),c&&d&&c(nb.success,d+\" sent to the backend.\")):(b.clockUnsynced=cb,Oa.cacheEvent({channel:a,data:b,callback:c})):Ua.sendAuthenticationRequest(ma,na,function(g,h){g!==nb.success?(g===ob.authOngoing&&(b.clockUnsynced=cb,Oa.cacheEvent({channel:a,data:b,callback:c})),c&&g!==ob.authOngoing&&c(g,h)):g===nb.success&&\"SDK authentication successful.\"===h&&((f&&!cb&&e||Hb.indexOf(d)!==-1)&&b.conferenceID!==ia?(b.token=Ua.authToken,pd(a,b,c),c&&d&&c(nb.success,d+\" sent to the backend.\")):(b.clockUnsynced=cb,Oa.cacheEvent({channel:a,data:b,callback:c})))})}function T(a){a&&a(ob.authOngoing,\"Authentication Ongoing\")}function U(a){var b;if(null===a||\"object\"!=typeof a)return a;if(a instanceof Array){b=[];for(var c=0,d=a.length;c<d;c++)b[c]=U(a[c]);return b}if(a instanceof Object){b={};for(var e in a)a.hasOwnProperty(e)&&(b[e]=U(a[e]));return b}}function V(){var a={};Object.keys(ab).forEach(function(b){var c=ab[b];if(!c)return!0;var d,e,f={ucID:c.ucID,userJoinedSent:c.userJoinedSent},g=[];if(c.participants){var h,i=c.participants;for(d=0;d<i.length;d++)e={},h=i[d],e={pcID:h.pcHash,pcState:h.pcState,iceConnectionState:h.iceConnectionState,iceGatheringState:h.iceGatheringState,iceCandidatesNumber:h.iceCandidates.length,remoteUserID:h.remoteUserID},g.push(e)}f.participants=g,a[b]=f});var b={authStatus:!!Ua.tokenData,clockSync:!cb,stateMachine:a,pageURL:window.location.href,eventType:\"warn\",version:da};b.wsStatus=od.getWSConnectionState(),Ob(ma,na,\"stateMachine\",b)}function W(){eb||(eb=setInterval(function(){V()},fb))}function X(){J(eb),eb=null}function Y(){Array.prototype.find||Object.defineProperty(Array.prototype,\"find\",{value:function(a){if(null===this)throw new TypeError(\"Array.prototype.find called on null or undefined\");if(\"function\"!=typeof a)throw new TypeError(\"predicate must be a function\");for(var b,c=Object(this),d=c.length>>>0,e=arguments[1],f=0;f<d;f++)if(b=c[f],a.call(e,b,f,c))return b}})}var Z,$=require(\"./callstatsUtils\"),_=require(\"./statsReporter\"),aa=require(\"./pcCallbackHandler\"),ba=\"https://collector.callstats.io:443/\",ca=\"https://auth.callstats.io/\",da=\"3.27.0\",ea=\"wss://collector.callstats.io:443/csiows/collectCallStats\",fa=\"https://dashboard.callstats.io/apps/\",ga=\"https://dashboard.callstats.io/api-internal/v1/qmodelthresholds\",ha=\"https://appsettings.callstats.io/v1/apps/\",ia=\"csio-conf-id-tmp\",ja=new _.Reporter,ka=null;window&&(window.csioChromeLegacyGetStats=!0);var la,ma=null,na=null,oa=null,pa=null,qa=!1,ra=!1,sa=1e4,ta=1e4,ua=1e3,va=\"\",wa=function(a,b){var c=\"precalltest error (\"+a+\"): \"+b;console.warn(c),Ob&&Ob(ma,na,\"log\",{msg:c}),va+=\"(error)\"},xa=require(\"precalltest\"),ya=null;try{ya=new xa.PreCallTest}catch(a){wa(\"initializing\",a)}var za,Aa,Ba=[],Ca={create:Date.now()},Da={stats:null,defaultConfig:null,recommendedConfig:null,preCallTest:null},Ea=2e4,Fa=15e3,Ga=!1,Ha=1e4,Ia=5e3,Ja=2e3,Ka=!0,La=!0,Ma=[],Na=function(){function a(a,b){setTimeout(function(){var b=c(),d=b-a.data.apiTS;a.data.timeShift=d,S(a.channel,a.data,a.callback)},b)}this.eventCache=[],this.updateRemoteUserID=function(a,b){for(var c,d=this,e=0;e<d.eventCache.length;e++)c=d.eventCache[e],c.data.pcID===b&&(c.data.remoteID=a)},this.sendCachedEvents=function(b,d,e,f,g,h){var i=this;if(0!==i.eventCache.length){if(!b.authToken)return void b.sendAuthenticationRequest(ma,na);if(!d){var j,k,l,m,n=c(),o=[],p=Math.max(Fa/i.eventCache.length,gb);for(j=0;j<i.eventCache.length;j++)if(l=i.eventCache[j],!l.data.remoteID&&l.data.pcID||l.data.conferenceID===ia)o.push(i.eventCache[j]);else if(l.data.action!==jb.userJoined){if(l.data.token=b.authToken,e&&l.data.apiTS>=n-f||!l.data.ucID)if(m=decodeURIComponent(l.data.conferenceID),ab[m]&&ab[m].ucID)l.data.ucID=ab[m].ucID;else{if(m!==g){o.push(i.eventCache[j]);continue}l.data.ucID=h}if(l.data.clockUnsynced&&(l.data.apiTS+=bb.currentOffset),l.channel===kb.processedStats&&l.data.clockUnsynced&&l.data.processedStatistics&&l.data.processedStatistics.length>0)for(k=0;k<l.data.processedStatistics.length;k++)l.data.processedStatistics[k].apiTS+=bb.currentOffset;delete l.data.clockUnsynced,a(l,p*(j+1))}else o.push(i.eventCache[j]);i.eventCache=o}}},this.sendCachedUserJoinedEvents=function(b){var c=this;if(0!==c.eventCache.length){if(!b.authToken)return void b.sendAuthenticationRequest(ma,na);var d,e,f=[],g=Math.max(Fa/c.eventCache.length,gb);for(d=0;d<c.eventCache.length;d++)e=c.eventCache[d],!e.data.remoteID&&e.data.pcID||e.data.conferenceID===ia?f.push(c.eventCache[d]):e.data.action===jb.userJoined||e.data.action===ib.fabricSetupFailed?(e.data.token=b.authToken,e.data.clockUnsynced&&(e.data.apiTS=e.data.apiTS+bb.currentOffset),e.data.value&&(e.data.value.statsSubmissionInterval=Fa),a(e,g*(d+1))):f.push(c.eventCache[d]);c.eventCache=f}},this.updateConferenceId=function(a){for(var b,c=this,d=0;d<c.eventCache.length;d++)b=c.eventCache[d],b.data.conferenceID===ia&&(b.data.conferenceID=a)},this.cacheEvent=function(a){this.eventCache.push(a)},this.sendCachedFeedback=function(){var a=Jb(\"feedback\"),b=JSON.parse(Jb(\"csio_auth_data\"));if(a&&b){var c=JSON.parse(a),d=b===c.token;d||na!==c.userID||(c.token=b,d=!0),d?S(kb.userFeedback,c):Kb(\"feedback\")}}},Oa=new Na,Pa=function(){this.size_max=0,this.size_ewma=0,this.statNum_max=0,this.statNum_ewma=0,this.msg_num=0,this.maxInterval=0,this.minInterval=0,this.avgInterval=0,this.stdInterval=0},Qa=function(){this.stat=new Pa,this.lastTime=null,this.samplesCount=0,this.add=function(a,c){var d=this.memorySizeOf(a);if(this.stat.size_ewma=.5*this.stat.size_ewma+.5*d,this.stat.size_max<d&&(this.stat.size_max=d),this.stat.statNum_ewma=.5*this.stat.statNum_ewma+.5*c,this.stat.statNum_max<c&&(this.stat.statNum_max=c),this.stat.msg_num+=1,null===this.lastTime)return void(this.lastTime=b());var e=b()-this.lastTime;this.lastTime=b(),(0===this.stat.maxInterval||this.stat.maxInterval<e)&&(this.maxInterval=e),(0===this.stat.minInterval||e<this.stat.minInterval)&&(this.minInterval=e),this.stat.avgInterval=(this.stat.avgInterval*this.samplesCount+e)/(this.samplesCount+c),this.samplesCount+=c,this.stat.stdInterval=(31*this.stat.stdInterval+Math.abs(this.stat.avgInterval-e))/32},this.getStat=function(){return this.stat},this.memorySizeOf=function(a){function b(a){if(null!==a&&void 0!==a)switch(typeof a){case\"number\":c+=8;break;case\"string\":c+=2*a.length;break;case\"boolean\":c+=4;break;case\"object\":var d=Object.prototype.toString.call(a).slice(8,-1);if(\"Object\"===d||\"Array\"===d)for(var e in a)a.hasOwnProperty(e)&&b(a[e]);else c+=2*a.toString().length}return c}var c=0;return b(a)}},Ra=new Qa,Sa={appSecret:\"appSecret\",jwt:\"jwt\"},Ta=function(){var a=this,b=\"urn:x-callstats:auth:errorActions\",d=.9;this.authInProgress=!1,this.tokenData=null,this.authToken=null,this.type=Sa.appSecret,this.tokenGenerator=function(a,b){b(\"Token generator not set\")};var e=null,f=null,g=!1,h=window.atob,i=window.btoa,j=[\"Authentication Internal Error\",\"Invalid Credentials\",\"Invalid Credentials\",\"Invalid Credentials\",\"Invalid Credentials\",\"Origin URL missmatch\",\"Invalid Credentials\",\"Authentication Protocol Error\"],k=function(a){return i(encodeURIComponent(a).replace(/%([0-9A-F]{2})/g,function(a,b){return String.fromCharCode(\"0x\"+b)}))},l=function(a){return i(a).replace(/\\+/g,\"-\").replace(/\\//g,\"_\").replace(/\\=+$/,\"\")},m=function(a){return k(a).replace(/\\+/g,\"-\").replace(/\\//g,\"_\").replace(/\\=+$/,\"\")},n=function(a){for(var b=h(a.replace(/[ \\r\\n]+$/,\"\")),c=[],d=0;d<b.length;++d){var e=b.charCodeAt(d).toString(16);1===e.length&&(e=\"0\"+e),c.push(e)}return c.join(\"\")},o={};o.cryptotype=null,window.crypto&&window.crypto.subtle?(o.cryptotype=\"standard\",o.subtlecrypto=window.crypto.subtle):window.crypto&&!window.crypto.subtle&&window.crypto.webkitSubtle?(o.cryptotype=\"webkit\",o.subtlecrypto=window.crypto.webkitSubtle):window.msCrypto&&window.msCrypto.subtle?(o.cryptotype=\"ie\",o.subtlecrypto=window.msCrypto.subtle):(o.subtlecrypto=null,console.info(\"WebCryptography API not supported in this browser.\")),o.sign=function(a,b,c,d){if(\"HS256\"!==a.alg)return d(\"Use header.alg=HS256\");a=JSON.stringify(a),\"string\"!=typeof b&&(b=JSON.stringify(b));var e=m(a)+\".\"+m(b);if(window.csioReactNative)return void window.csiosign(e,c,function(a,b){return a?(console.log(\"Token sign error\",a),d(a)):d(null,b)});for(var f=new ArrayBuffer(e.length),g=new Uint8Array(f),h=e.length-1;h>=0;h--)g[h]=e.charCodeAt(h);var i=function(a){for(var b=\"\",c=new Uint8Array(a),f=c.byteLength,g=0;g<f;g++)b+=String.fromCharCode(c[g]);return e+=\".\"+l(b),d(null,e)},j=function(a){return d(a)},k={name:\"HMAC\"};\"ie\"!==o.cryptotype&&\"webkit\"!==o.cryptotype||(k.hash={name:\"sha-256\"});var n=o.subtlecrypto.sign(k,c,g);\"ie\"===o.cryptotype?(n.onerror=j,n.oncomplete=function(a){i(a.target.result)}):n.then(i).catch(j)},o.decode=function(a){try{return JSON.parse(h(a.split(\".\")[1]))}catch(a){return console.error(\"Couldn't decode token. \",a),null}},o.importKey=function(a,b,c){if(window.csioReactNative)return void b(a);if(\"webkit\"===o.cryptotype)for(;a.length<32;)a+=\"\\0\";var d={kty:\"oct\",k:l(a),alg:\"HS256\"},e={name:\"HMAC\",hash:{name:\"SHA-256\"}};if(\"ie\"===o.cryptotype?d.extractable=!1:d.ext=!1,\"webkit\"===o.cryptotype&&(e=null,d.use=\"sig\"),\"ie\"===o.cryptotype||\"webkit\"===o.cryptotype){var f=JSON.stringify(d);d=new Uint8Array(f.length);for(var g=0;g<f.length;g++)d[g]=f.charCodeAt(g)}var h=o.subtlecrypto.importKey(\"jwk\",d,e,!1,[\"sign\"]);\"ie\"===o.cryptotype?(h.onerror=c,h.oncomplete=function(a){b(a.target.result)}):h.then(b).catch(c)},this.setAuthType=function(a){this.type=a},this._isTokenValid=function(a,b,d){var e=!1,f=Aa.codebase;if(null===a)return!1;try{var g=o.decode(a);if(null!==g&&g.appID===b&&g.userID===encodeURIComponent(d)){var h=null;if(f===Fb.firefox){var i=g.expiry.split(\" \").join(\"T\");h=Date.parse(i)}else h=new Date(g.expiry);var j=new Date(c());j<h&&(e=!0)}return e}catch(a){}return!1},this.setupAuthToken=function(a){Ib(\"csio_auth_data\",JSON.stringify(a)),this.authToken=a,this.tokenData=o.decode(a),Fa=parseInt(this.tokenData.submissionInterval,10),ja.setSubmissionInterval(Fa),ja.setReportingMode(this.tokenData.adaptiveInterval),Ga=this.tokenData.collectSDP},this.sendAuthenticationRequest=function(c,f,h){if(c&&f){if(a.authInProgress)return void T(h);null!==e&&(clearTimeout(e),e=null),p(),a.authInProgress=!0,a.tokenGenerator(g,function(i,j){if(null!==i)return a.authInProgress=!1,void(h&&h(nb.tokenGenerationError,i.toString()));var k=ca+\"authenticate\",l={client_id:f+\"@\"+ma,code:j,grant_type:\"authorization_code\"};jd(k,l,function(i,j){var k=null;a.authInProgress=!1,Ca.auth=j;try{k=JSON.parse(i.response)}catch(a){console.error(\"Authentication response parse error\")}if(!k)return void(e=setTimeout(a.sendAuthenticationRequest,Ia,c,f,h));if(200===i.status){if(\"bearer\"!==k.token_type)return console.error(\"Authentication was successful, but token type was not bearer. Scheduling retry.\"),void(e=setTimeout(a.sendAuthenticationRequest,Ia,c,f,h));a.setupAuthToken(k.access_token);var l=parseInt(1e3*parseInt(k.expires_in)*d);if(q(l,c,f,h),g=!1,h&&h(nb.success,\"SDK authentication successful.\"),k.iceServers&&!ra&&ya)try{va=k.iceServers[0].username+\" \",ya.start(k.iceServers,gc.bind(this)),Ob(ma,na,\"log\",{msg:\"precalltest started \"+va}),va+=\"(started)\"}catch(a){wa(\"start\",a),ya.crashDisconnect()}ra&&(Ob(ma,na,\"log\",{msg:\"precalltest disabled \"+va}),va+=\"(disabled)\"),hc(),od._isChannelReady()?(Oa.sendCachedUserJoinedEvents(Ua),h&&h(nb.success,\"WebSocket establishment successful.\")):od._setupWebSocketConnection(function(a,b){h&&h(a,b)})}else{if(k[b]&&k[b].length>0)return r(c,f,h,k[b],a.type);console.error(\"Authentication failed, but no error actions were defined in response.\"),e=setTimeout(a.sendAuthenticationRequest,Ia,c,f,h)}})})}};var p=function(){null!==f&&(clearTimeout(f),f=null)},q=function(b,c,d,e){p(),f=setTimeout(function(){a.sendAuthenticationRequest(c,d,e)},b)},r=function(a,b,c,d,e){if(0!==d.length){var f=d.shift();if(f.action===Qb.RETRY)return e===Sa.jwt&&q(f.params.timeout,a,b,c),r(a,b,c,d);if(f.action===Qb.GET_NEW_TOKEN)return g=!0,r(a,b,c,d);if(f.action===Qb.REPORT_ERROR){var h=\"Authentication Error\";return f.params&&f.params.errorCode>=0&&(h=j[f.params.errorCode]),c&&c(nb.authError,h),r(a,b,c,d)}}};this.appSecretTokenGenerator=function(b){var c=null,d=null,e=!1,f=null;b.indexOf(\":\")>-1&&(f=n(b.split(\":\")[0]),b=b.split(\":\")[1]);var g=function(a){b=null,c=a},h=function(a){e=!0,b=null,console.error(\"Couldn't import key\",a)};return o.importKey(b,g,h),function(b,g){if(e)return g(\"appsecret based token generation failed\");if(!b&&null!==d)return g(null,d);if(null===c)return setTimeout(function(){a.tokenGenerator(b,g)},100);var h={userID:na,appID:ma};f&&(h.keyID=f),o.sign({alg:\"HS256\"},h,c,function(a,b){return a?g(a):(d=b,g(null,b))})}}},Ua=new Ta,Va=new $;try{Aa=Va.detectBrowserInfo()}catch(a){console.log(\"detectBrowserInfo: Error\",a)}var Wa;window.csioReactNative||(Wa=Va.measureAppLoadingPerformance(Aa),Ca.loading=Wa);var Xa,Ya={type:\"browser\",name:Aa.name,ver:Aa.ver,os:Aa.os,osVersion:Aa.osVersion,userAgent:Aa.userAgent},Za=!1,$a=null,_a=null,ab={},bb={currentOffset:0,offsetResults:[],syncStartTime:null,syncAttempts:5,syncHandler:null,maxAllowedLatency:6e4},cb=!0,db=null,eb=null,fb=2e4,gb=100,hb=null;\"Firefox\"===Aa.name?hb=mozRTCPeerConnection:\"Chrome\"===Aa.name||\"Opera\"===Aa.name?hb=webkitRTCPeerConnection:\"Safari\"===Aa.name?console.log(\"Browser type Safari\"):\"Edge\"===Aa.name&&(hb=window.RTCPeerConnection);var ib={fabricSetupFailed:\"fabricSetupFailed\",fabricHold:\"fabricHold\",fabricResume:\"fabricResume\",audioMute:\"audioMute\",audioUnmute:\"audioUnmute\",videoPause:\"videoPause\",videoResume:\"videoResume\",fabricUsageEvent:\"fabricUsageEvent\",fabricTerminated:\"fabricTerminated\",screenShareStart:\"screenShareStart\",screenShareStop:\"screenShareStop\",dominantSpeaker:\"dominantSpeaker\",userIDChangedEvent:\"userIDChangedEvent\",activeDeviceList:\"activeDeviceList\",applicationErrorLog:\"applicationErrorLog\"},jb={autoFabricSetup:\"autoFabricSetup\",userJoined:\"userJoined\",userLeft:\"userLeft\",refreshPresence:\"userAlive\",ssrcMap:\"ssrcMap\",mediaPlaybackStartEvent:\"mediaPlaybackStartEvent\",mediaSuspendedEvent:\"mediaSuspendedEvent\",oneWayMedia:\"oneWayMedia\",fabricStateChange:\"fabricStateChange\",iceDisruptionStart:\"iceDisruptionStart\",iceDisruptionEnd:\"iceDisruptionEnd\",fabricTransportSwitch:\"fabricTransportSwitch\",iceConnectionDisruptionStart:\"iceConnectionDisruptionStart\",iceConnectionDisruptionEnd:\"iceConnectionDisruptionEnd\",iceAborted:\"iceAborted\",iceTerminated:\"iceTerminated\",iceFailed:\"iceFailed\",iceRestarted:\"iceRestarted\",fabricDropped:\"fabricDropped\",connectedDevices:\"connectedDevices\",iceCompleted:\"iceCompleted\",iceCandidateFound:\"iceCandidateFound\"},kb={sdpSubmission:\"sdpSubmissionEvent\",rtpStats:\"rtpStats\",processedStats:\"processedStats\",callStatsEvent:\"callStatsEvent\",userFeedback:\"userFeedbackEvent\",clockSync:\"clockSync\",preCallTest:\"preCallTest\",senderConfiguration:\"senderConfiguration\",\nsendingThroughputObservations:\"sendingThroughputObservations\"},lb={results:\"preCallTestResults\",associate:\"preCallTestAssociate\"},mb={success:\"success\",failure:\"failure\"},nb={httpError:\"httpError\",authError:\"authError\",wsChannelFailure:\"wsChannelFailure\",success:\"success\",csProtoError:\"csProtoError\",appConnectivityError:\"appConnectivityError\",tokenGenerationError:\"tokenGenerationError\",ok:\"OK\"},ob={authOngoing:\"authOngoing\"},pb={peer:\"peer\",server:\"server\"},qb={sendonly:\"sendonly\",receiveonly:\"receiveonly\",sendrecv:\"sendrecv\",inactive:\"inactive\"},rb={audio:\"audio\",video:\"video\",data:\"data\",screen:\"screen\",multiplex:\"multiplex\",unbundled:\"unbundled\"},sb={local:\"local\",remote:\"remote\"},tb={excellent:5,good:4,fair:3,poor:2,bad:1},ub={local:\"local\",remote:\"remote\",inbound:\"inbound\",outbound:\"outbound\"},vb={noAudioInMultiplexFabric:\"noAudioInMultiplexFabric\",noOutboundAudioOnlyFabric:\"noOutboundAudioOnlyFabric\",noInboundAudioOnlyFabric:\"noInboundAudioOnlyFabric\"},wb={excellent:\"excellent\",fair:\"fair\",bad:\"bad\"},xb={established:\"established\",initializing:\"initializing\",failed:\"failed\",disrupted:\"disrupted\",checkingDisrupted:\"checkingDisrupted\"},yb={createOffer:\"createOffer\",createAnswer:\"createAnswer\",setLocalDescription:\"setLocalDescription\",setRemoteDescription:\"setRemoteDescription\",addIceCandidate:\"addIceCandidate\",getUserMedia:\"getUserMedia\",iceConnectionFailure:\"iceConnectionFailure\",signalingError:\"signalingError\",applicationError:\"applicationError\",applicationLog:\"applicationLog\"},zb={mediaConfigError:\"MediaConfigError\",negotiationFailure:\"NegotiationFailure\",sdpError:\"SDPGenerationError\",iceFailure:\"IceConnectionFailure\",transportFailure:\"TransportFailure\",signalingError:\"SignalingError\",applicationError:\"ApplicationError\",applicationLog:\"ApplicationLog\"},Ab={video:{gThreshold:1024,rThreshold:256},audio:{gThreshold:30,rThreshold:8}},Bb={video:{gThreshold:.8,rThreshold:.3}},Cb={video:{gThreshold:400,rThreshold:1e3}},Db={video:{gThreshold:10,rThreshold:50},audio:{gThreshold:15,rThreshold:30}},Eb={audio:{gThreshold:240,rThreshold:400}},Fb={chrome:\"Chrome\",firefox:\"Firefox\",edge:\"Edge\"},Gb={signalingState:\"signalingState\",iceConnectionState:\"iceConnectionState\",iceGatheringState:\"iceGatheringState\"},Hb=[jb.userJoined,jb.refreshPresence,ib.fabricSetupFailed],Ib=function(a,b){try{window&&window.localStorage&&window.localStorage.setItem(a,b)}catch(a){return}},Jb=function(a){try{if(window&&window.localStorage)return window.localStorage.getItem(a)}catch(a){return null}return null},Kb=function(a){try{window&&window.localStorage&&window.localStorage.removeItem(a)}catch(a){return}},Lb=function(){if(pa=Jb(\"endpointID\"),null===pa){var a=b(),c=Math.random()*a;Ac(c.toString(),function(a){pa=a,Ib(\"endpointID\",pa)})}},Mb=function(a,c,d,e,f){var g=null,h=null,i=null,j=new XMLHttpRequest;if(\"Microsoft Internet Explorer\"!==Aa.name&&(j.timeout=d),j){j.open(\"GET\",encodeURI(a));for(var k in c)j.setRequestHeader(k,c[k]);g=b(),j.onload=function(){h=b(),i=h-g,e(j,i)},j.ontimeout=f,j.send()}},Nb=function(a,b,c,d){var e=new XMLHttpRequest;if(e){if(e.open(\"POST\",encodeURI(a)),e.setRequestHeader(\"Content-Type\",\"application/json\"),d)for(var f in d)e.setRequestHeader(f,d[f]);e.onload=function(){c(e)},e.send(b)}},Ob=function(a,c,d,e){if(Ka&&a){var f=ba+\"generics\",g={appID:a,timestamp:b(),userID:encodeURIComponent(c),version:da,eventType:d,data:e},h=JSON.stringify(g);za!==h&&(za=h,Nb(f,h,function(a){200===a.status?console.log(\"Got generic response: %o\",a.response):200!==a.status&&console.log(\"Got error for generic request %o, %s\",a,a.status)}))}};window&&window.addEventListener&&window.addEventListener(\"error\",function(a){if(a&&a.filename&&a.filename.indexOf(\"callstats\")>-1){var b,c=!1,d={fileName:a.filename,line:a.lineno,col:a.colno,jsVersion:da,eventType:\"error\",message:a.message,pageURL:window.location.href};for(b in ab)ab.hasOwnProperty(b)&&(d.conferenceID=b,Ob(ma,na,\"onErrorLog\",d),c=!0);c||Ob(ma,na,\"onErrorLog\",d)}});var Pb={invalidWebRTCFunctionName:\"Invalid WebRTC function name\"},Qb={RETRY:0,GET_NEW_TOKEN:1,REPORT_ERROR:2},Rb=a(),Sb=Object.create(null),Tb=function(a,d,e){var f=RegExp.prototype.test.bind(/^([a-z])=(.*)/),g=/^ssrc:(\\d*) ([\\w_]*):(.*)/,h=/^ssrc-group:SIM (\\d*)/;d.split(/(\\r\\n|\\r|\\n)/).filter(f).forEach(function(d){var f=d[0],i=d.slice(2);if(\"a\"===f){if(g.test(i)){var j=i.match(g),k=j[1];void 0===a.ssrcMap[k]&&(a.ssrcMap[k]={}),a.ssrcMap[k][j[2]]=j[3],a.ssrcMap[k].localStartTime=b(),a.ssrcMap[k].syncedStartTime=c(),a.ssrcMap[k].streamType=e}h.test(i)&&(void 0===a.ssrcMap.ssrcGroup&&(a.ssrcMap.ssrcGroup={},a.ssrcMap.ssrcGroup[e]={}),a.ssrcMap.ssrcGroup[e].simulcastGroup=i.match(/\\d+/g))}})},Ub=function(a,b){return a.ssrcMap[b]},Vb=function(a){return a.ssrcMap},Wb=function(a,b,c,d,e,f){if(!e.localDescription||!e.remoteDescription)return!1;var g=e.localDescription.sdp,h=e.remoteDescription.sdp;if(!g||!h||g===d.localSDP&&h===d.remoteSDP)return!1;if(Tb(d,g,ub.outbound),Tb(d,h,ub.inbound),Ga){var i={sdp:{}};i.sdp.localSDP=g!==d.localSDP?g:-1,i.sdp.remoteSDP=h!==d.remoteSDP?h:-1,Zb(a,b,c,i,d.pcHash,f)}return d.localSDP=g,d.remoteSDP=h,!0},Xb=function(a,b,d,e,f,g,h){if(!a)return void console.error(\"sendEvent: Invalid eventType \");var i=c(),j={version:da,apiTS:i,action:a,localID:encodeURIComponent(na),remoteID:b?encodeURIComponent(b):null,conferenceID:encodeURIComponent(d),timeShift:0,appID:ma,ucID:e,pcID:g,deviceID:pa,value:f};return null===d?void Ob(ma,na,\"log\",{msg:\"conferenceID is null in sendEvent for \"+a}):void S(kb.callStatsEvent,j,h)},Yb=function(a,b,d,e){if(!a)return void console.error(\"sendEvent: Invalid eventType \");var f=c(),g={version:da,channel:kb.preCallTest,timestamp:f,apiTS:f,action:a,eventType:a,localID:encodeURIComponent(na),remoteID:encodeURIComponent(na),conferenceID:encodeURIComponent(b),timeShift:0,appID:ma,ucID:d,deviceID:pa,token:Ua.authToken};return a===lb.results&&(g.results=e,null==b)?void pd(kb.preCallTest,g):(a===lb.associate&&(g.ids=e),void(d&&!cb?S(kb.preCallTest,g):(g.clockUnsynced=cb,Oa.cacheEvent({channel:kb.preCallTest,data:g,callback:null}))))},Zb=function(a,b,d,e,f,g){var h=c(),i={version:da,appID:ma,conferenceID:encodeURIComponent(b),ucID:d,apiTS:h,localID:encodeURIComponent(na),remoteID:encodeURIComponent(a),pcID:f,deviceID:pa,sdpPayload:e,action:kb.sdpSubmission};Ua.authToken&&d&&!cb?(i.token=Ua.authToken,S(kb.sdpSubmission,i,g)):(i.clockUnsynced=cb,Oa.cacheEvent({channel:kb.sdpSubmission,data:i,callback:g}),Ua.authToken||Ua.sendAuthenticationRequest(ma,na))},$b=function(a,b,c,d,e,f,g){sc(a,function(a){b.localCandidates=a.localCandidates,b.remoteCandidates=a.remoteCandidates,b.iceCandidatePairs=a.iceCandidatePairs,b.activeIceCandidatePair=Nc(b.iceCandidatePairs),g.currPair=b.activeIceCandidatePair,Xb(jb.fabricStateChange,e,c,d,g,f)})},_b=function(a,b,c){var d={connectedDevices:la},e=ab[a]?ab[a].ucID:null;Xb(jb.connectedDevices,b,a,e,d,c)},ac=function(a){var b={ucID:ab[a].ucID,endpoint:Ya,magicKey:Rb};Xb(jb.refreshPresence,null,a,ab[a].ucID,b,null)},bc=function(a,b){var c={};return c.status=a,b&&(c.message=b),c},cc=function(a,b){var c,d,e,f=0;if(!a)return f;for(c=0,e=a.length;c<e;c++)d=a.charCodeAt(c),f=(f<<5)-f+d,f|=0;return b&&b(f),f},dc=function(a,c,d,e,f,g){if(!a||!d||!c)return console.error(\"initialize: Argument missing/invalid\"),bc(mb.failure,\"initialize: Argument missing/invalid\");if(e&&\"function\"!=typeof e)return console.error(\"initialize: Argument missing/invalid\"),bc(mb.failure,\"initialize: Argument missing/invalid\");if(f&&\"function\"!=typeof f)return console.error(\"initialize: Argument missing/invalid\"),bc(mb.failure,\"initialize: Argument missing/invalid\");if(Ua.setAuthType(Sa.jwt),\"function\"!=typeof c){if(Ua.setAuthType(Sa.appSecret),!(window.crypto&&(window.crypto.subtle||window.crypto.webkitSubtle)||window.msCrypto&&window.msCrypto.subtle||window.csioReactNative))return console.error(\"Browser does not support Web Cryptography API. App secret based authentication requires Web Cryptography API\"),e&&e(nb.tokenGenerationError,\"Browser does not support Web Cryptography API. App secret based authentication requires Web Cryptography API\"),bc(mb.failure,\"Browser does not support Web Cryptography API. App secret based authentication requires Web Cryptography API\");c=Ua.appSecretTokenGenerator(c)}if(\"string\"==typeof a&&(a=parseInt(a,10)),ma=a,isNaN(ma))return bc(mb.failure,\"Invalid Credentials\");if(\"object\"==typeof d?(na=d.aliasName,oa=d):na=d,Ca.initializeSinceCreate=b()-Ca.create,Ob(ma,na,\"log\",{msg:\"callstats initialize in progress\"}),g&&(g.disableBeforeUnloadHandler===!0&&(qa=!0),null!==g.applicationVersion&&void 0!==g.applicationVersion&&(Ya.appVer=uc(g.applicationVersion,30)),g.disablePrecalltest===!0&&(ra=!0)),Ua.tokenGenerator=c,Jb(\"csio_auth_data\"))try{var h=JSON.parse(Jb(\"csio_auth_data\"));Ua._isTokenValid(h,ma,na)&&(e&&e(nb.success,\"SDK authentication successful.\"),Ua.setupAuthToken(h),hc(),od._isChannelReady()||od._setupWebSocketConnection(e))}catch(a){console.log(\"initialize: Error\",a)}l(),f&&(Da.stats=f);try{Ua.sendAuthenticationRequest(ma,na,e)}catch(a){console.log(\"initialize: Error\",a)}return bc(mb.success)},ec=function(){Ca.sent||(Ca.remoteofferSinceCreate&&Ca.config&&Ca.senderConfig||Ca.errorSinceCreate)&&(console.log(\"Send generic event for timing\"),Ob(ma,na,\"timing\",Ca),Ca.sent=!0)},fc=function(a,b){\"function\"==typeof b&&Da.hasOwnProperty(a)&&(Da[a]=b)},gc=function(a){Ob(ma,na,\"log\",{msg:\"precalltest finished \"+va}),va+=\"(finished)\",Da.preCallTest&&Da.preCallTest(a);try{Ba.push(a.id);var b=null,c=null;for(var d in ab)if(ab.hasOwnProperty(d)){b=d,ab[d].ucID&&(c=ab[d].ucID);break}Yb(lb.results,b,c,a)}catch(a){wa(\"send results\",a)}},hc=function(){var a=ha+ma,b={Authorization:\"Bearer \"+Ua.authToken},c=Ja,d=function(a,b){200!==a.status&&setTimeout(function(){f()},100),Ca.config=b,ec();var c=JSON.parse(a.response);if(console.log(\"internal config:\",c),c.submissionInterval&&(Fa=parseInt(c.submissionInterval,10),ja.setSubmissionInterval(Fa)),c.adaptiveStats&&ja.setReportingMode(c.adaptiveStats),c.collectSDP&&(Ga=c.collectSDP),c.qmodelThresholdsAPI){var d=c.qmodelThresholdsAPI;id(\"eModelThreshold\",d,Eb),id(\"throughputThreshold\",d,Ab),id(\"fractionalLossThreshold\",d,Db),id(\"rttThreshold\",d,Cb),id(\"currOverPrevFrameRateThreshold\",d,Bb)}},e=function(a){200!==a.status&&setTimeout(function(){g()},100);var b=JSON.parse(a.response),c=function(a,b){var c={};return b&&(c={peerConnection:null,media:null}),a.peerConnection&&(c.peerConnection=a.peerConnection),a.media&&(c.media=a.media),a.sender&&(c.sender=a.sender),a.confidence&&(c.confidence=a.confidence),c};if(Da.defaultConfig&&b.default){var d=c(b.default,!0);d!=={}&&Da.defaultConfig(d)}if(Da.recommendedConfig&&b.recommended){var e=c(b.recommended,!1);e!=={}&&Da.recommendedConfig(e)}},f=function(){Mb(a+\"/configurations/internal\",b,c,d,f)},g=function(){Mb(a+\"/configurations\",b,c,e,g)};f(),g()},ic=function(a){return function(b){return b.pc===a||(!(!a.callstatsID||b.pcHash!==a.callstatsID)||void 0)}},jc=function(a,b){var c=null,d=null;return ab[a]&&ab[a].participants&&(d=ab[a].participants.filter(ic(b))),c=d&&d.length>0?d[0]:null},kc=function(a,b){var c=null,d=null;return c=jc(a,b),c&&(d=c.pcHash),d},lc=function(a){var b=null,c=null,d=null;for(b in ab)if(ab.hasOwnProperty(b)&&(d=jc(b,a))){c={fabric:d,conferenceID:b};break}return c},mc=function(a,b){var c=0;if(a&&ab[b].participants)for(c=0;c<ab[b].participants.length;c++)if(ab[b].participants[c].pcHash===a.pcHash){ab[b].participants.splice(c,1);break}},nc=function(a){if(a){var b=[],c=0;if(a&&a.result)b=a.result();else if(a&&a.forEach)a.forEach(function(a){b.push(a)});else for(c in a)a.hasOwnProperty(c)&&b.push(a[c]);return b}},oc=function(a){var b,c=null,d=null,e=null,f=[],g=[],h=[],i=0;if(c=nc(a),!c)return{localCandidates:f,remoteCandidates:g};for(i=0;i<c.length;++i)if(d=E(c[i]),e=B(d),e.localCandidate)f.push(e.localCandidate);else if(e.remoteCandidate)g.push(e.remoteCandidate);else if(e.Transport){if(\"transport\"===e.Transport.type){b=e.Transport.selectedCandidatePairId;continue}h.push(e.Transport)}else e.candidatePair&&h.push(e.candidatePair);if(b)for(i=0;i<h.length;i++)h[i].id===b&&(h[i].googActiveConnection=\"true\");return{localCandidates:f,remoteCandidates:g,iceCandidatePairs:h}},pc=function(a){function b(b){var c={};c=oc(b),a(c)}return b},qc=function(a){var b=null;return a&&(b=a.message+\" : \"+a.stack),b},rc=function(a,b,c,d,e,f){var g=Aa.codebase,h=Aa.name;if(g===Fb.firefox)if(La)try{a.getStats().then(c(b,d,e,f,a)).catch(function(h){La=!1,Ob(ma,d,\"log\",{msg:\"### \"+g+\" getStats reports error \"+qc(h)}),a.getStats(null,c(b,d,e,f,a))})}catch(h){La=!1,Ob(ma,d,\"log\",{msg:\"### \"+g+\" getStats reports error \"+qc(h)}),a.getStats(null,c(b,d,e,f,a))}else a.getStats(null,c(b,d,e,f,a),function(a){console.log(\"getstats error \",a)});else if(\"Safari\"===h)a.getStats().then(c(b,d,e,f,a)).catch(function(a){Ob(ma,d,\"log\",{msg:\"### \"+g+\" getStats reports error \"+qc(a)})});else if(g===Fb.chrome)if(window&&window.csioReactNative)a.getStats(null,c(b,d,e,f,a),function(a){Ob(ma,d,\"log\",{msg:\"### \"+g+\" getStats reports error \"+qc(a)})});else if(La)try{a.getStats().then(c(b,d,e,f,a)).catch(function(h){La=!1,Ob(ma,d,\"log\",{msg:\"### \"+g+\" getStats reports error \"+qc(h)}),a.getStats(c(b,d,e,f,a))})}catch(h){La=!1,Ob(ma,d,\"log\",{msg:\"### \"+g+\" getStats reports error \"+qc(h)}),a.getStats(c(b,d,e,f,a))}else a.getStats(c(b,d,e,f,a));else g===Fb.edge&&a.getStats().then(c(b,d,e,f,a)).catch(function(a){Ob(ma,d,\"log\",{msg:\"### \"+g+\" getStats reports error \"+qc(a)})})},sc=function(a,b){try{rc(a,b,pc)}catch(a){console.log(\"csioGetStats: Error\",a)}},tc=function(a,b,c,d){if(c||(c=ia),!a||!b)return console.error(\"sendFabricEvent: Arguments missing/Invalid\"),bc(mb.failure,\"sendFabricEvent: Arguments missing/Invalid\");if(!ma||!na||!ab[c])return console.error(\"sendFabricEvent: SDK is not initialized or no Fabrics added.\"),bc(mb.failure,\"sendFabricEvent: SDK is not initialized or no Fabrics added.\");if(b===ib.fabricSetupFailed)return console.error(\"sendFabricEvent: Unsupported fabricEvent fabricSetupFailed\"),bc(mb.failure,\"sendFabricEvent: Unsupported fabricEvent fabricSetupFailed\");if(!p(a))return console.error(\"sendFabricEvent: Invalid PeerConnection object passed\"),bc(mb.failure,\"sendFabricEvent: Invalid PeerConnection object passed\");if(!ib.hasOwnProperty(b)&&!jb.hasOwnProperty(b))return console.error(\"sendFabricEvent: Invalid fabricEvents value: \",b),bc(mb.failure,\"sendFabricEvent: Invalid fabricEvents value: \"+b);var e={},f=null,g=ab[c],h=null;if(void 0===g)return console.error(\"sendFabricEvent: Conference ID not found!\"),bc(mb.failure,\"sendFabricEvent: Conference ID not found!\");if(h=jc(c,a),null===h)return console.error(\"sendFabricEvent: fabricData is null\"),bc(mb.failure,\"sendFabricEvent: fabricData is null\");if(f=h.remoteUserID,b===ib.activeDeviceList){if(!d||!d.deviceList)return console.error(\"sendFabricEvent: Arguments missing/Invalid\"),bc(mb.failure,\"sendFabricEvent: Arguments missing/Invalid\");if(!(d.deviceList instanceof Array))return console.error(\"sendFabricEvent: DeviceList Invalid\"),bc(mb.failure,\"sendFabricEvent: DeviceList Invalid\");e={magicKey:Rb,endpoint:Ya,activeDevicelist:d.deviceList}}if(b!==ib.screenShareStart&&b!==ib.screenShareStop||(e={magicKey:Rb,endpoint:Ya},d&&(e.ssrc=d.ssrc)),Xb(b,f,c,g.ucID,e,h.pcHash,h.pcCallback),b===ib.fabricTerminated){if(ab[c].participants){h&&(h.statsInterval=J(h.statsInterval),mc(h,c));var i=N(c);i.conferenceFinished&&O(c,i.ucID)}}else b===ib.fabricHold?(h.statsInterval=J(h.statsInterval),h.onHold=!0):b===ib.fabricResume&&(h.onHold=!1,Qc(h,a,c,f));return bc(mb.success)},uc=function(a,b){return a&&\"string\"==typeof a?(a.length>b&&(a=a.substring(0,b)),a):null},vc=function(a){return a&&\"string\"==typeof a?a=uc(a,Ea):a&&\"object\"==typeof a&&a.message&&(a.message=uc(a.message,Ea)),a},wc=function(a,b,c){return b?b:a&&a[c]?a[c].sdp:-1},xc=function(c,d,e,f,g,h){if(d||(d=ia),void 0===c||!e)return console.error(\"reportError: Arguments missing/invalid\"),bc(mb.error,\"reportError: Arguments missing/invalid\");if(!ma||!na)return console.error(\"reportError: SDK is not initialized\"),bc(mb.error,\"reportError: SDK is not initialized\");if(!yb.hasOwnProperty(e))return console.error(\"reportError: Invalid webRTC functionName value: %o\",e),bc(mb.error,\"reportError: Invalid webRTC functionName value: \"+e);void 0===f&&console.warn(\"reportError: Missing dom error parameter\");var i,j,k,l=null,m=b(),n=ab[d],o=null,q=m,r=null,s=null,t=null,u=null;if(t=R(d),j=A(e),e!==yb.getUserMedia&&(u=a()),f)if(window.DOMException&&f instanceof window.DOMException)f={message:f.message,name:f.name};else if(\"object\"==typeof f){var v={};f.message&&(v.message=f.message),f.name&&(v.name=f.name),f.constraintName&&(v.constraintName=f.constraintName),f.stack&&(v.stack=f.stack),f=v}if(f=vc(f),p(c)){n&&(t=n.ucID),o=jc(d,c),o?(i=o.remoteUserID,q=o.startTime,r=o.pcState,s=o.pc.iceConnectionState,u=o.pcHash,k=o.pcCallback):i=na;var w=m-q;if(l={failureDelay:w,reason:j,domError:f,fabricState:r,iceConnectionState:s,function:e,magicKey:Rb,endpoint:Ya},e===yb.applicationLog||e===yb.applicationError?Xb(ib.applicationErrorLog,i,d,t,l,u,k):(Xb(ib.fabricSetupFailed,i,d,t,l,u,k),Ca.errorSinceCreate=b()-Ca.create,ec()),g||h||c&&c.localDescription||c&&c.remoteDescription){var x={sdp:{}};x.sdp.localSDP=wc(c,g,\"localDescription\"),x.sdp.remoteSDP=wc(c,h,\"remoteDescription\"),Zb(i,d,t,x,u)}}else null===Rb&&(Rb=a()),i=na,l={failureDelay:0,reason:j,domError:f,function:e,magicKey:Rb,endpoint:Ya},e===yb.applicationLog||e===yb.applicationError?Xb(ib.applicationErrorLog,i,d,t,l,null,null):Xb(ib.fabricSetupFailed,i,d,t,l,u,null);return bc(mb.success)},yc=function(a){for(var b=[],c=0;c<a.length;c++){var d=a.charCodeAt(c);d<128?b[b.length]=d:d>127&&d<2048?(b[b.length]=d>>6|192,b[b.length]=63&d|128):(b[b.length]=d>>12|224,b[b.length]=d>>6&63|128,b[b.length]=63&d|128)}return new Uint8Array(b).buffer},zc=function(a){for(var b,c=new DataView(a),d=\"\",e=0;e<c.byteLength;e++)b=c.getUint8(e).toString(16),b.length<2&&(b=\"0\"+b),d+=b;return d},Ac=function(a,b){var c={name:\"SHA-256\"};if(window.crypto){var d=window.crypto.subtle||window.crypto.webkitSubtle;if(!d)return void cc(a,b);d.digest(c,yc(a)).then(function(a){b(zc(a))}).catch(function(){cc(a,b)})}else if(window.msCrypto){if(!window.msCrypto.subtle)return void cc(a,b);var e=window.msCrypto.subtle.digest(c,yc(a));e.oncomplete=function(a){a.target&&b(zc(a.target.result))},e.onerror=function(){cc(a,b)}}else cc(a,b)},Bc=function(a,b,c){var d;if(!b||!a)return console.error(\"sendUserFeedback: Arguments missing/Invalid\"),bc(mb.error,\"sendUserFeedback: Arguments missing/Invalid\");if(\"object\"!=typeof b)return console.error(\"sendUserFeedback: Invalid feedback object.\"),bc(mb.error,\"sendUserFeedback: Invalid feedback object.\");if(0===Object.keys(b).length)return console.error(\"sendUserFeedback: Feedback data object must not be empty.\"),bc(mb.error,\"sendUserFeedback: Feedback data object must not be empty.\");var e=ab[a],f=null;void 0!==e&&void 0!==e.ucID&&(f=e.ucID);var g=null;if(g=null===Rb?db:Rb,null===f&&(f=R(a)),null===f)return console.error(\"sendUserFeedback: ucID unavailable\"),bc(mb.error,\"sendUserFeedback: ucID unavailable\");d=\"object\"==typeof b.userID?b.userID.aliasName:b.userID,b&&b.overall<=0&&(b.overall=null);var h={conferenceID:encodeURIComponent(a),magicKey:g,appID:ma,version:da,ucID:f,remoteID:encodeURIComponent(d),userID:encodeURIComponent(d),userQoe:{overall:b.overall}};return b.video&&(h.userQoe.video=b.video),b.audio&&(h.userQoe.audio=b.audio),b.screen&&(h.userQoe.screen=b.screen),b.comment&&(h.userQoe.comment=b.comment),Ua.authToken&&!cb?(h.token=Ua.authToken,Ib(\"feedback\",JSON.stringify(h)),S(kb.userFeedback,h,c)):(h.clockUnsynced=cb,Oa.cacheEvent({channel:kb.userFeedback,data:h,callback:c}),Ua.sendAuthenticationRequest(ma,d)),bc(mb.success)},Cc=function(a){return a?\"function\"!=typeof a?(console.error(\"attachWifiStatsHandler: Arguments Invalid\"),bc(mb.error,\"attachWifiStatsHandler: Arguments Invalid\")):(Z=a,void k()):(console.error(\"attachWifiStatsHandler: Arguments missing\"),bc(mb.error,\"attachWifiStatsHandler: Arguments missing\"))},Dc=function(a,b,c,d,e,f){var g=null;if(g=\"object\"==typeof b?b.aliasName:b,c||(c=ia),!(a&&d&&e&&g))return console.error(\"associateMstWithUserID: Arguments missing\"),bc(mb.error,\"associateMstWithUserID: Arguments missing\");if(!p(a))return console.error(\"associateMstWithUserID: Invalid PeerConnection object passed\"),bc(mb.error,\"associateMstWithUserID: Invalid PeerConnection object passed\");var h=ab[c];if(void 0===h)return console.error(\"associateMstWithUserID: conferenceID doesn't exist\"),bc(mb.error,\"associateMstWithUserID: conferenceID doesn't exist\");var i=null;if(i=jc(c,a),null===i)return console.error(\"associateMstWithUserID: Unknown pcObject passed\"),bc(mb.error,\"associateMstWithUserID: Unknown pcObject passed\");var j=Ub(i,d);return void 0===j&&(i.ssrcMap[d]={},j=Ub(i,d)),j.remoteUserID=g,j.ssrc=d,j.associatedVideoTag=f,j.usageLabel=e,f&&g!==na&&o(c,f,a,d),bc(mb.success)},Ec=function(a){var b=ab[ia];if(b){var c=ab[ia].participants;if(c)for(var d=0;d<c.length;d++)c[d].conferenceID=a}},Fc=function(a){Oa.updateConferenceId(encodeURIComponent(a))},Gc=function(a,b){var c=lc(b);c&&Oa.updateRemoteUserID(a,c.fabric.pcHash)},Hc=function(a,b){var c=null;c=lc(b),c&&(c.fabric.remoteUserID=a)},Ic=function(){Oa.sendCachedUserJoinedEvents(Ua),Oa.sendCachedEvents(Ua,cb)},Jc=function(a,b){return a?(a.conferenceID&&(Ec(a.conferenceID),ab[a.conferenceID]=ab[ia],Fc(a.conferenceID),Ic()),a.remoteUserID&&b&&(Gc(a.remoteUserID,b),Hc(a.remoteUserID,b),Ic()),bc(mb.success)):(console.error(\"setIdentifiers: Arguments missing/Invalid\"),bc(mb.error,\"_setIdentifiers: Arguments missing/Invalid\"))},Kc=function(a){return window&&!window.csioproxy?(console.error(\"setCallstatsURLs: cannot be called if window.csioproxy is false\"),bc(mb.error,\"setCallstatsURLs: cannot be called if window.csioproxy is false\")):a?(a.collectorURL&&(ba=a.collectorURL),a.authServiceURL&&(ca=a.authServiceURL),a.csioInternalAPIURL&&(ga=a.csioInternalAPIURL),a.wsURL&&(ea=a.wsURL),kd(),Q(),W(),bc(mb.success)):(console.error(\"setCallstatsURLs: Arguments missing/Invalid\"),bc(mb.error,\"setCallstatsURLs: Arguments missing/Invalid\"))},Lc=function(c,d,e,f,g,h){var i,k,l=null,m=pb.peer,n=qb.sendrecv,o={authStatus:!!Ua.tokenData,clockSync:!cb,msg:\"addNewFabric called\",eventType:\"warn\",pageURL:window.location.href,conferenceID:f,version:da};if(W(),Ob(ma,na,\"stateMachine\",o),l=d&&\"object\"==typeof d?d.aliasName:d,f||(f=ia),!c||!e)return console.error(\"addNewFabric: Arguments missing/Invalid\"),bc(mb.error,\"addNewFabric: Arguments missing/Invalid\");if(!ma||!na)return console.error(\"addNewFabric: SDK not initialized.\"),bc(mb.error,\"addNewFabric: SDK not initialized\");if(!p(c))return console.error(\"addNewFabric: Invalid PeerConnection object passed\"),bc(mb.error,\"addNewFabric: Invalid PeerConnection object passed\");if(!rb.hasOwnProperty(e)||e instanceof Function)return console.error(\"addNewFabric: Invalid fabricUsage value\"),bc(mb.error,\"addNewFabric: Invalid fabricUsage value\");if(h&&\"function\"==typeof h&&(i=h),g&&\"function\"==typeof g&&(i=g),g&&\"function\"!=typeof g){if(g.remoteEndpointType){if(!pb.hasOwnProperty(g.remoteEndpointType))return console.error(\"addNewFabric: Invalid remoteEndpointType value\"),bc(mb.error,\"addNewFabric: Invalid remoteEndpointType value\");m=g.remoteEndpointType}if(g.fabricTransmissionDirection){if(!qb.hasOwnProperty(g.fabricTransmissionDirection))return console.error(\"addNewFabric: Invalid fabricTransmissionDirection value\"),bc(mb.error,\"addNewFabric: Invalid fabricTransmissionDirection value\");n=g.fabricTransmissionDirection}}var q=b();Ca.addnewfabricSinceCreate=q-Ca.create,ec(),null===Rb&&(Rb=a());var r=null,s=!1;if(!L(f)){var t=G(Rb);Xb(jb.userJoined,null,f,null,t,null,null),s=!0,o={authStatus:!!Ua.tokenData,clockSync:!cb,msg:\"userJoined sent\",pageURL:window.location.href,eventType:\"warn\",conferenceID:f,version:da},Ob(ma,na,\"stateMachine\",o)}if(H(f,r,s),!jc(f,c)){if(c){new aa(c,_c,Zc,Pc,Yc)}k=a();var u={pc:c,remoteUserID:l,fabricUsage:e,magicKey:Rb,startTime:q,pcCallback:h,pcState:xb.initializing,fabricSetupSent:!1,iceCandidates:[],iceConnectionState:c.iceConnectionState,latestEventSent:q,pcHash:k,localSDP:-1,remoteSDP:-1,statsInterval:null,intervalAdaptionPhase:!0,gatheringIceCandidatesDelay:0,connectivityIceStatusDelay:0,numNegotiationNeededCalls:0,currentActivePhaseIndex:0,onHold:!1,ssrcMap:{},conferenceID:f,remoteEndpointType:m,fabricTransmissionDirection:n};Za&&(Xb(kb.senderConfiguration,d,f,null,$a,u.pcHash),Za=!1),\"function\"!=typeof c||c.callstatsID||(c.callstatsID=k),\"connected\"!==c.iceConnectionState&&\"completed\"!==c.iceConnectionState||(u.pcState=xb.established),M(f,u),u.pcState===xb.established&&(bd(c,jb.autoFabricSetup,f),Qc(u,c,f));var v=function(a){var b=0;return Object.keys(a).forEach(function(a){a&&a.mediaType&&(b+=\"audio\"===a.mediaType?1:0)}),0<b},w=function(){return!!u.ssrcMap&&v(u.ssrcMap)},x=function(){return!(!u.ssrcMap||n!==qb.sendonly)&&v(u.ssrcMap)},y=function(){return!!u.ssrcMap&&void Object.keys(u.ssrcMap).forEach(function(a){Ma.push(a)})},z=null;if(e===rb.multiplex&&w()?z={mediaType:\"audio\",ssrc:null,disruptionType:vb.noAudioInMultiplexFabric}:e===rb.audio&&x()?z={mediaType:\"audio\",ssrc:null,disruptionType:vb.noOutboundAudioOnlyFabric}:e===rb.audio&&n===qb.receiveonly&&y(),z){var A=ab[f]?ab[f].ucID:null;Xb(jb.oneWayMedia,l,f,A,z,u.pcHash)}}if(!k){var B=jc(f,c);k=B.pcHash}if(j(f,l,k),ya)try{var C=Ba;Ba=[];var D=null;if(D=ya.getId(),D&&C.push(D),C.length>0){var E=ab[f].ucID;Yb(lb.associate,f,E,C)}}catch(a){wa(\"send associate\",a)}return bc(mb.success)},Mc=function(a,b,c,d){if(!(a&&c&&d&&b))return console.error(\"reportUserIDChange: Arguments missing/Invalid\"),bc(mb.error,\"reportUserIDChange: Arguments missing/Invalid\");if(!ma||!na)return console.error(\"reportUserIDChange: SDK not initialized.\"),bc(mb.error,\"reportUserIDChange: SDK not initialized\");if(\"\"===c||\"\"===b)return console.error(\"reportUserIDChange: id or  conferenceID MUST not be empty\"),bc(mb.error,\"reportUserIDChange: id or  conferenceID MUST not be empty\");if(!p(a))return console.error(\"reportUserIDChange: Invalid PeerConnection object passed\"),bc(mb.error,\"reportUserIDChange: Invalid PeerConnection object passed\");var e,f=null,g=ab[b];if(void 0===g)return console.error(\"reportUserIDChange: Conference ID not found!\"),bc(mb.error,\"reportUserIDChange: Conference ID not found!\");var h=null;if(void 0===g.ucID)return console.error(\"reportUserIDChange: addNewFabric was not called\"),Ob(ma,na,\"log\",{msg:\"### reportUserIDChange: addNewFabric was not called\"}),bc(mb.error,\"reportUserIDChange: addNewFabric was not called\");if(h=g.ucID,f=jc(b,a),null===f)return console.error(\"reportUserIDChange: Invalid pcObject passed as argument\"),bc(mb.error,\"reportUserIDChange: Invalid pcObject passed as argument\");var i={id:c,idType:d};return Xb(ib.userIDChangedEvent,e,b,h,i,null,f.pcCallback),bc(mb.success)},Nc=function(a){var b=null;if(a&&a.length>0){var c=a.filter(function(a){return\"true\"===a.selected||\"true\"===a.googActiveConnection||a.selected===!0||a.googActiveConnection===!0});c.length>0&&(b=c[0])}return b},Oc=function(a){var c=b(),d=function(){Ca.senderConfig=-1,Ca.senderExists=!1,ec()},e=function(a){var d=JSON.parse(a.response);console.log(\"Sender config response:\",a.status,d);var e;d.recommended&&d.recommended.sender&&(e=d.recommended.sender,console.log(\"ConfigService, recommended SENDER info:\",e)),e&&($a=e,Za=!0),Ca.senderConfig=b()-c,Ca.senderExists=!!e,ec()},f=function(a){_a=a;var b=ha+ma+\"/configurations\",c={Authorization:\"Bearer \"+Ua.authToken},d={app_id:ma,local_id:na,rtc_rtp_parameters:a},f=JSON.stringify(d);Nb(b,f,e,c)},g=function(){var a={encodings:[{maxBitrate:0}]};f(a)};if(Object.keys(ab).length>1)return console.warn(\"Multiple PCs found, skipping\"),void d();if(!a.getSenders||\"function\"!=typeof a.getSenders)return console.warn(\"Get senders error\"),void g();var h,i=a.getSenders();for(var j in i){var k=i[j];if(\"object\"!=typeof k||!k.track||\"object\"!=typeof k.track||!k.track.kind)return console.warn(\"Access senders error\"),void d();if(\"video\"===k.track.kind){if(h)return console.warn(\"Multiple video sender, skipping\"),void d();h=k}}if(!h)return console.warn(\"No video sender found\"),void d();if(!h.getParameters||\"function\"!=typeof h.getParameters)return console.warn(\"Sender getParameters error\"),void g();var l=h.getParameters();return\"object\"!=typeof l?void d():(\"encodings\"in l||(l.encodings=[]),0===l.encodings.length&&l.encodings.push({maxBitrate:0}),void f(l))},Pc=function(a,c){if(a){var d,e=null;if(void 0!==c){var f=c.signalingState;if(e=lc(c),e&&e.fabric){d=e.fabric.signalingState,e.fabric.signalingState=f;var g=e.conferenceID,h=e.fabric,i=h.remoteUserID,j=ab[g].ucID,k={changedState:Gb.signalingState,prevState:d,newState:f};$b(c,h,g,j,i,h.pcHash,k),\"closed\"===f&&tc(c,ib.fabricTerminated,e.conferenceID),\"have-local-offer\"!==f&&\"have-local-pranswer\"!==f&&\"stable\"!==f||e.sentSenderConfigRequest||(console.log(f,\".. requesting sender config.\",e.sentSenderConfigRequest),e.sentSenderConfigRequest=!0,Oc(c))}if(\"closed\"===f&&ya)try{ya.callFinished()}catch(a){wa(\"callFinished\",a),ya.crashDisconnect()}if(\"have-remote-offer\"===f||\"stable\"===f){if(Ca.remoteofferSinceCreate=b()-Ca.create,ec(),ya)try{ya.callStarts()}catch(a){wa(\"callStarts\",a),ya.crashDisconnect()}Ob(ma,na,\"log\",{msg:\"precalltest told to stop \"+va}),va+=\"(stopped)\"}}}},Qc=function(a,c,d){if(!a.onHold){var e=c,f=d;null===a.statsInterval&&(a.statsPollingStart=b(),ad(e,f),a.statsInterval=setInterval(function(){ad(e,f)},ua))}},Rc=function(a,b,c,d,e,f){f.localCandidates=b.localCandidates,f.remoteCandidates=b.remoteCandidates,f.iceCandidatePairs=b.iceCandidatePairs,Xb(jb.iceFailed,c,d,e,f,b.pcHash,b.pcCallback)},Sc=function(a,b,c,d){var e=b.iceConnectionState,f=b.remoteUserID,g=ab[c],h={prevIceConnectionState:e,currIceConnectionState:a.iceConnectionState,currPair:b.activeIceCandidatePair,failureDelay:d};b.pcState=xb.failed,\"checking\"===e?Rc(a,b,f,c,g.ucID,h):\"completed\"===e||\"connected\"===e?Xb(jb.fabricDropped,f,c,g.ucID,h,b.pcHash,b.pcCallback):\"disconnected\"===e&&b.established?Xb(jb.fabricDropped,f,c,g.ucID,h,b.pcHash,b.pcCallback):\"disconnected\"===e&&Rc(a,b,f,c,g.ucID,h)},Tc=function(a,c,d,e){var f=c.iceConnectionState,g=c.remoteUserID,h=ab[d],i=b(),j={prevIceConnectionState:f,currIceConnectionState:a.iceConnectionState,prevPair:c.activeIceCandidatePair},k=c.pcState===xb.disrupted,l=\"completed\"===a.iceConnectionState;c.connectivityIceStatusDelay=e,c.established=!0,sc(a,function(a){if(c.localCandidates=a.localCandidates,c.remoteCandidates=a.remoteCandidates,c.iceCandidatePairs=a.iceCandidatePairs,c.activeIceCandidatePair=Nc(c.iceCandidatePairs),j.currPair=c.activeIceCandidatePair,j.disruptionDelay=i-c.disruptedTS,k)Xb(jb.iceDisruptionEnd,g,d,h.ucID,j,c.pcHash);else if(l){var b={};b.iceCandidatePairs=a.iceCandidatePairs,Xb(jb.iceCompleted,g,d,h.ucID,b,c.pcHash)}}),bd(c.pc,jb.autoFabricSetup,d),c.pcState=xb.established,Qc(c,a,d,g)},Uc=function(a,c,d){var e=c.iceConnectionState,f=c.remoteUserID,g=ab[d],h=b(),i={prevIceConnectionState:e,currIceConnectionState:a.iceConnectionState,prevIceConnectionStateTs:c.iceConnectionStateTS,currPair:c.activeIceCandidatePair};c.startTime=h,\"connected\"===e||\"completed\"===e?(c.pcState=xb.disrupted,c.disruptedTS=h,Xb(jb.iceDisruptionStart,f,d,g.ucID,i,c.pcHash,c.pcCallback),c.pcCallback&&c.pcCallback(nb.appConnectivityError,\"Connectivity check for PC object to \"+f+\" failed.\")):\"checking\"===e&&(c.pcState=xb.checkingDisrupted,c.disruptedTS=h,Xb(jb.iceConnectionDisruptionStart,f,d,g.ucID,i,c.pcHash,c.pcCallback),c.pcCallback&&c.pcCallback(nb.appConnectivityError,\"Connectivity check for PC object to \"+f+\" failed.\"))},Vc=function(a,b,c,d){var e=b.iceConnectionState,f=b.remoteUserID,g=ab[c],h={prevIceConnectionState:e,currIceConnectionState:a.iceConnectionState};\"new\"===e||\"checking\"===e?(h.failureDelay=d,Xb(jb.iceAborted,f,c,g.ucID,h,b.pcHash,b.pcCallback)):(h.currPair=b.activeIceCandidatePair,\nXb(jb.iceTerminated,f,c,g.ucID,h,b.pcHash,b.pcCallback))},Wc=function(a,b,c){var d=b.iceConnectionState,e=b.remoteUserID,f=ab[c],g={prevIceConnectionState:d,currIceConnectionState:a.iceConnectionState,prevPair:b.activeIceCandidatePair};\"new\"!==d&&(b.established=!1,Xb(jb.iceRestarted,e,c,f.ucID,g,b.pcHash,b.pcCallback))},Xc=function(a,c,d,e){var f=c.iceConnectionState,g=c.remoteUserID,h=ab[d],i=b(),j={prevIceConnectionState:f,currIceConnectionState:a.iceConnectionState};c.gatheringIceCandidatesDelay=e,\"disconnected\"===f&&c.pcState===xb.checkingDisrupted&&(j.disruptionDelay=i-c.disruptedTS,Xb(jb.iceConnectionDisruptionEnd,g,d,h.ucID,j,c.pcHash,c.pcCallback))},Yc=function(a,b){if(a&&void 0!==b){var c=null;c=lc(b),c&&c.fabric&&c.fabric.numNegotiationNeededCalls++}},Zc=function(a,c){if(a&&void 0!==c){var d,e,f,g,h,i=null,j=null;if(j=lc(c),j&&j.fabric){i=j.fabric,d=j.conferenceID,e=b(),f=e-i.startTime,g=i.iceConnectionState,h=i.iceGatheringState;var k=i.remoteUserID,l=ab[d].ucID,m={changedState:Gb.iceConnectionState,prevState:g,newState:c.iceConnectionState};if($b(c,i,d,l,k,i.pcHash,m),h!==c.iceGatheringState){var n={changedState:Gb.iceGatheringState,prevState:h,newState:c.iceGatheringState};$b(c,i,d,l,k,i.pcHash,n)}\"complete\"===c.iceGatheringState&&\"checking\"===c.iceConnectionState&&Xc(c,i,d,f),\"connected\"===c.iceConnectionState||\"completed\"===c.iceConnectionState?Tc(c,i,d,f):\"failed\"===c.iceConnectionState?Sc(c,i,d,f):\"disconnected\"===c.iceConnectionState?Uc(c,i,d):\"closed\"===c.iceConnectionState?Vc(c,i,d,f):\"new\"===c.iceConnectionState&&Wc(),i.iceConnectionState=c.iceConnectionState,i.iceGatheringState=c.iceGatheringState,i.iceConnectionStateTS=b()}}},$c=function(a,b){var c=lc(a);if(c&&c.fabric){var d=c.fabric,e=d.remoteUserID,f=c.conferenceID,g=ab[f].ucID;Xb(jb.iceCandidateFound,e,f,g,b,d.pcHash)}},_c=function(a,b){var c,d,e;if(void 0!==b){if(null!==a.candidate){var f=a.candidate.candidate;d=f.split(\" \");var g=\"1\"===d[1]?\"rtp\":\"rtcp\";\"0\"!==d[5]&&(e=d[4].indexOf(\":\")!==-1,c={transport:d[2],protocol:g,typePreference:d[3],address:e?\"[\"+d[4]+\"]:\"+d[5]:d[4]+\":\"+d[5],type:d[7],media:a.candidate.sdpMid})}var h=null;h=lc(b),sc(b,function(a){h.localCandidates=a.localCandidates,h.remoteCandidates=a.remoteCandidates,h.iceCandidatePairs=a.iceCandidatePairs,h.activeIceCandidatePair=Nc(h.iceCandidatePairs)}),h&&h.fabric&&(void 0!==c&&h.fabric.iceCandidates.indexOf(c)===-1&&h.fabric.iceCandidates.push(c),c&&h.fabric.fabricSetupSent&&$c(b,c))}},ad=function(a,b){if(!ab.hasOwnProperty(b))return void console.error(\"ConferenceID %o doesn't exist. Can't call getStats for it.\",b);if(\"closed\"===a.signalingState)return tc(a,ib.fabricTerminated,b),!0;var c=jc(b,a);if(c.pcState!==xb.established&&c.lastFabricState===c.pcState&&\"connected\"!==a.iceConnectionState&&\"completed\"!==a.iceConnectionState)return!0;var d=ab[b].ucID;try{rc(a,c.pcCallback,z,na,d,c)}catch(a){console.log(\"csioGetStats: Error\",a)}},bd=function(a,c,d){var e,f=null,g=ab[d],h=null,i=b();if(void 0===g&&console.error(\"sendAutoFabricSetupEvent: Conference ID not found!\"),h=jc(d,a),null===h&&console.error(\"sendAutoFabricSetupEvent: fabricData is null\"),!h.fabricSetupSent){f=h.remoteUserID,e=i-h.startTime;var j={setupDelay:e,iceGatheringDelay:h.gatheringIceCandidatesDelay,iceConnectivityDelay:h.connectivityIceStatusDelay,remoteEndpointType:h.remoteEndpointType,fabricTransmissionDirection:h.fabricTransmissionDirection};cb||(j.clockSyncOffset=bb.currentOffset),sc(a,function(a){j.localCandidates=a.localCandidates,j.remoteCandidates=a.remoteCandidates,j.iceCandidatePairs=a.iceCandidatePairs,h.localCandidates=a.localCandidates,h.remoteCandidates=a.remoteCandidates,h.iceCandidatePairs=a.iceCandidatePairs,h.pcState=xb.established,h.activeIceCandidatePair=Nc(h.iceCandidatePairs),h.fabricSetupSent||(Xb(c,f,d,g.ucID,j,h.pcHash,h.pcCallback),h.fabricSetupSent=!0)})}},cd=function(a,b,c){var d={},e=null,f=ab[c],g=null;void 0===f&&console.error(\"sendFabricTransportSwitchEvent: Conference ID not found!\"),g=jc(c,a),null===g&&console.error(\"sendFabricTransportSwitchEvent: fabricData is null\"),e=g.remoteUserID,d.prevPair=g.activeIceCandidatePair,sc(a,function(a){d.currPair=Nc(a.iceCandidatePairs),g.activeIceCandidatePair=d.currPair,d.switchDelay=null,d.relayType=g.transportData.relayType,Xb(b,e,c,f.ucID,d,g.pcHash,g.pcCallback)})},dd=function(a,b){if(a.trackStats){var c=a.trackStats.filter(function(a){return a.id===b});if(c.length>0)return c[0]}},ed=function(a,b){if(a.codec){var c=a.codec.filter(function(a){return a.id===b});if(c.length>0)return c[0]}},fd=function(a,b){if(a.candidatePair){var c=a.candidatePair.filter(function(a){return a.id===b});if(c.length>0)return c[0]}},gd=function(a){for(var b,c,d=a.Transport.length,e=0;e<d;e++)c=a.Transport[e],c.selectedCandidatePairId&&(b=fd(a,c.selectedCandidatePairId),b&&(a.Transport[e]=y(a.Transport[e],b)));return a},hd=function(a){for(var b,c,d,e=a.streams.length,f=0;f<e;f++)b=a.streams[f],b.data.trackId&&(c=dd(a,b.data.trackId),c&&(a.streams[f].data=y(a.streams[f].data,c))),b.data.codecId&&(d=ed(a,b.data.codecId),d&&(a.streams[f].data=y(a.streams[f].data,d)));return a},id=function(a,b,c){b.hasOwnProperty(a)&&(b[a].hasOwnProperty(\"video\")&&(b[a].video.isGreaterBetter?(c.video.gThreshold=b[a].video.upperThreshold,c.video.rThreshold=b[a].video.lowerThreshold):(c.video.gThreshold=b[a].video.lowerThreshold,c.video.rThreshold=b[a].video.upperThreshold)),b[a].hasOwnProperty(\"audio\")&&(b[a].audio.isGreaterBetter?(c.audio.gThreshold=b[a].audio.upperThreshold,c.audio.rThreshold=b[a].audio.lowerThreshold):(c.audio.gThreshold=b[a].audio.lowerThreshold,c.audio.rThreshold=b[a].audio.upperThreshold)))},jd=function(a,c,d){var e=[],f=null,g=null;for(var h in c)c.hasOwnProperty(h)&&e.push(encodeURIComponent(h)+\"=\"+encodeURIComponent(c[h]));var i=e.join(\"&\"),j=new XMLHttpRequest;j.open(\"POST\",a),j.setRequestHeader(\"Content-Type\",\"application/x-www-form-urlencoded\"),f=b(),j.onload=function(){g=b();var a=g-f;d(j,a)},j.send(i)},kd=function(){Mb(ga,null,5e3,function(a){if(200===a.status)try{var b=JSON.parse(a.responseText);id(\"eModelThreshold\",b,Eb),id(\"throughputThreshold\",b,Ab),id(\"fractionalLossThreshold\",b,Db),id(\"rttThreshold\",b,Cb),id(\"currOverPrevFrameRateThreshold\",b,Bb)}catch(a){return a}},function(){cb&&kd()})},ld=function(){var a=ba+\"clockSync\",c=null,d=null;Mb(a,null,5e3,function(a,e){200===a.status?(c=JSON.parse(a.response),d=b(),md(c,e,d)):cb&&setTimeout(function(){ld()},100)},function(){cb&&ld()})},md=function(a,b,c){if(cb){var d=b/2;if(d>bb.maxAllowedLatency)bb.offsetResults=[],Ob(ma,na,\"log\",{msg:\"clockSync restarting\"});else{var e=a.now+d,f=e-c;bb.offsetResults.push(f),Ob(ma,na,\"log\",{msg:\"clockSync Info serverTime \"+e+\" responseRecvTs \"+c+\" requestExecutionTime \"+b})}if(bb.offsetResults.length>=bb.syncAttempts){var g=bb.offsetResults.reduce(function(a,b){return a+b});bb.currentOffset=g/bb.offsetResults.length,Ob(ma,na,\"log\",{msg:\"clockSync Done \"+bb.currentOffset+\"Length \"+bb.offsetResults.length}),bb.offsetResults=[],cb=!1,Oa.sendCachedUserJoinedEvents(Ua),Oa.sendCachedEvents(Ua,cb)}else cb&&setTimeout(function(){ld()},100)}},nd=function(){var a=this,c=null,d=!1,e=!1,f={},g={initiated:\"initiated\",connected:\"connected\",closed:\"closed\"};this._wsConnectionState=g.closed;var h=function(a,b){try{if(window&&window.sessionStorage){var c=JSON.parse(window.sessionStorage.getItem(\"csio_ucid_data\"));c||(c={}),c[a]||(c[a]={}),c[a].ucID=b,window.sessionStorage.setItem(\"csio_ucid_data\",JSON.stringify(c))}}catch(a){return}f[a]=fa+ma+\"/conferences/\"+encodeURIComponent(a)+\"/\"+b+\"/general\"};this.getConferenceURL=function(){return f},this._setupWebSocketConnection=function(f){return a._wsConnectionState===g.initiated||a._wsConnectionState===g.connected?(Ob(ma,na,\"log\",{msg:\"### _setupWebSocketConnection is called when already connected!\"}),console.log(\"### _setupWebSocketConnection is called when already connected!\"),void(f&&f(nb.success,\"WebSocket establishment successful.\"))):(a._wsConnectionState=g.initiated,c=new WebSocket(ea,\"echo-protocol\"),c.onopen=function(){console.log(\"**** Successfully connected to the backend \",e,na),Ob(ma,na,\"log\",{msg:\"Successfully connected to the backend\"}),a._wsConnectionState=g.connected,d?e=!0:d=!0,Oa.sendCachedUserJoinedEvents(Ua),e&&(P(),Oa.sendCachedEvents(Ua,cb)),e=!1},c.onclose=function(){a._wsConnectionState=g.closed,console.log(\"**** Connection to the server closed.\"),Ob(ma,na,\"log\",{msg:\"Connection to the server closed.\"}),K(),c&&(c=null),f&&f(nb.httpError,\"Connection to the server closed.\")},c.onerror=function(b){a._wsConnectionState=g.closed,Ob(ma,na,\"log\",{msg:\"WebSocket establishment failed.\"}),console.log(\"WebSocket establishment failed.\",b),f&&f(nb.wsChannelFailure,\"WebSocket establishment failed.\",b)},void(c.onmessage=function(a){var c,d=a.data,e=b(),g=JSON.parse(d);if(\"Error\"===g.status)\"Invalid client token.\"===g.reason&&(Ua.tokenData=null,Ua.authToken=null,Ua.sendAuthenticationRequest(ma,na)),f&&f(nb.csProtoError,d.reason);else if(\"200 OK\"===g.status)if(\"feedback\"===g.event)Kb(\"feedback\");else if(g.event===jb.userJoined||g.event===jb.refreshPresence){var i=!1,j=null;c=decodeURIComponent(g.conferenceID);var k=function(a){return setInterval(function(){ac(a)},Ha)};ab.hasOwnProperty(c)&&(ab[c].ucID!==g.ucID&&(i=!0,h(c,g.ucID),j=g.conferenceCreationTS?g.conferenceCreationTS:g.conferenceDuration),g.event!==jb.userJoined||ab[c].refreshPresence||(ab[c].refreshPresence=k(c),X()),ab[c].ucID=g.ucID),Oa.sendCachedFeedback(),Oa.sendCachedEvents(Ua,cb,i,j,c,g.ucID)}else g.event===kb.clockSync?md(g,e):g.event===ib.fabricSetupFailed&&(c=decodeURIComponent(g.conferenceID),g.ucID&&(h(c,g.ucID),Oa.sendCachedFeedback(),Oa.sendCachedEvents(Ua,cb,!0,0,c,g.ucID)))}))},this._isChannelReady=function(){return!(!c||1!==c.readyState)},this.getWSConnectionState=function(){return c?c.readyState:-1},this.send=function(a){c.send(JSON.stringify(a))}},od=new nd,pd=function(a,b,c){if(od._isChannelReady())try{od.send(b)}catch(d){d&&\"InvalidStateError\"===d.name&&Oa.cacheEvent({channel:a,data:b,callback:c})}else Oa.cacheEvent({channel:a,data:b,callback:c}),od._setupWebSocketConnection()};return f(),Lb(),Y(),window&&!window.csioproxy&&(kd(),Q()),window&&window.csioChromeLegacyGetStats&&(La=!1),{version:da,initialize:dc,on:fc,fabricEvent:ib,addNewFabric:Lc,sendFabricEvent:tc,sendUserFeedback:Bc,associateMstWithUserID:Dc,attachWifiStatsHandler:Cc,csError:nb,fabricUsage:rb,qualityRating:tb,webRTCFunctions:yb,reportError:xc,reportUserIDChange:Mc,userIDType:sb,setProxyConfig:Kc,callStatsAPIReturnStatus:mb,setIdentifiers:Jc,transmissionDirection:qb,endpointType:pb}}\"function\"==typeof define&&define.amd?define(\"callstats\",[],a):global.callstats=a,module.exports=a}(\"undefined\"!=typeof window?window:\"undefined\"!=typeof global?global:this);\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/callstats.js\n// module id = 70\n// module chunks = 0","/*! callstats.js  version = 3.27.0 2017-12-14 */\n\"use strict\";function callstatsUtils(){}callstatsUtils.prototype.measureAppLoadingPerformance=function(a){var b=0,c=Number.MAX_VALUE,d=0,e=\"\",f=\"\",g=window.performance;if(!(\"performance\"in window&&\"timing\"in window.performance&&\"navigation\"in window.performance))return{support:\"none\",total:void 0};var h=g.timing.loadEventEnd-g.timing.navigationStart;if(\"Chrome\"===a.name||\"Opera\"===a.name){var i,j=g.getEntriesByType(\"resource\");for(i=0;i<j.length;i++)j[i].duration>d&&(f=j[i].name.substr(j[i].name.lastIndexOf(\"/\")+1),d=j[i].duration),j[i].duration<c&&(e=j[i].name.substr(j[i].name.lastIndexOf(\"/\")+1),c=j[i].duration),j[i].name.indexOf(\"CALLSTATS_SRC_URLstatic/callstats\")>-1&&(b=j[i].duration);return{support:\"full\",callstats:b,min:{name:e,time:c},max:{name:f,time:d},total:h}}return\"Firefox\"===a.name?{support:\"limited\",total:h}:void 0},callstatsUtils.prototype.detectBrowserInfo=function(){var a=\"Chrome\",b=null,c=null,d=null,e={goog:\"Chrome\",moz:\"Firefox\",plugin:\"Plugin\",edge:\"Edge\"},f=e.goog;if(!window.navigator.userAgent||window.csioReactNative)return console.log(\"Invalid userAgent\"),window&&window.csioGetOsName&&(b=window.csioGetOsName()),window&&window.csioGetOsVer&&(c=window.csioGetOsVer()),window&&window.csioReactNative&&(d=\"react-native\"),{name:a,codebase:f,os:b,osVersion:c,userAgent:d};d=navigator.userAgent;var g,h=d.toLowerCase(),i=navigator.appVersion,j=\"\"+parseFloat(navigator.appVersion);(g=h.indexOf(\"opera\"))!==-1?(a=\"Opera\",j=h.substring(g+6),(g=h.indexOf(\"Version\"))!==-1&&(j=h.substring(g+8)),f=e.goog):(g=h.indexOf(\"opr\"))!==-1?(a=\"Opera\",j=h.substring(g+4),(g=h.indexOf(\"Version\"))!==-1&&(j=h.substring(g+8)),f=e.goog):(g=h.indexOf(\"msie\"))!==-1?(a=\"Microsoft Internet Explorer\",j=h.substring(g+5),f=e.goog):(g=h.indexOf(\"edge\"))!==-1?(a=e.edge,j=h.substring(g+5),f=e.edge):(g=h.indexOf(\"chrome\"))!==-1?(a=e.goog,j=h.substring(g+7),f=e.goog):(g=h.indexOf(\"safari\"))!==-1?(a=\"Safari\",j=h.substring(g+7),(g=h.indexOf(\"version\"))!==-1&&(j=h.substring(g+8)),f=e.goog):(g=h.indexOf(\"firefox\"))!==-1?(a=\"Firefox\",j=h.substring(g+8),f=e.moz):(g=h.indexOf(\"trident\"))!==-1&&(a=\"Microsoft Internet Explorer\",g=h.indexOf(\"rv\"),j=h.substring(g+3,g+7),f=e.goog);var k,l,m=[{s:\"Windows 3.11\",r:/win16/},{s:\"Windows 95\",r:/(windows 95|win95|windows_95)/},{s:\"Windows ME\",r:/(win 9x 4.90|windows me)/},{s:\"Windows 98\",r:/(windows 98|win98)/},{s:\"Windows CE\",r:/windows ce/},{s:\"Windows 2000\",r:/(windows nt 5.0|windows 2000)/},{s:\"Windows XP\",r:/(windows nt 5.1|windows xp)/},{s:\"Windows Server 2003\",r:/windows nt 5.2/},{s:\"Windows Vista\",r:/windows nt 6.0/},{s:\"Windows 7\",r:/(windows 7|windows nt 6.1)/},{s:\"Windows 8.1\",r:/(windows 8.1|windows nt 6.3)/},{s:\"Windows 8\",r:/(windows 8|windows nt 6.2)/},{s:\"Windows 10\",r:/(windows 10|windows nt 10.0)/},{s:\"Windows NT 4.0\",r:/(windows nt 4.0|winnt4.0|winnt|windows nt)/},{s:\"Windows ME\",r:/windows me/},{s:\"Android\",r:/android/},{s:\"Open BSD\",r:/openbsd/},{s:\"Sun OS\",r:/sunos/},{s:\"Linux\",r:/(linux|x11)/},{s:\"iOS\",r:/(iphone|ipad|ipod)/},{s:\"Mac OS X\",r:/mac os x/},{s:\"Mac OS\",r:/(macppc|macintel|mac_powerpc|macintosh)/},{s:\"QNX\",r:/qnx/},{s:\"UNIX\",r:/unix/},{s:\"BeOS\",r:/beos/},{s:\"OS/2\",r:/os\\/2/},{s:\"Search Bot\",r:/(nuhk|googlebot|yammybot|openbot|slurp|msnbot|ask jeeves\\/teoma|ia_archiver)/}];for(k in m)if(l=m[k],l.r.test(h)){b=l.s;break}switch(b&&/Windows/.test(b)&&(c=/Windows (.*)/.exec(b)[1],b=\"Windows\"),b){case\"Mac OS X\":c=/mac os x (10[\\.\\_\\d]+)/.exec(h)[1];break;case\"Android\":c=/android ([\\.\\_\\d]+)/.exec(h)[1];break;case\"iOS\":c=/os (\\d+)_(\\d+)_?(\\d+)?/.exec(i),c=c[1]+\".\"+c[2]+\".\"+(0|c[3])}return{name:a,ver:j.toString(),os:b,osVersion:c,codebase:f,userAgent:d}},module.exports=callstatsUtils;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/callstatsUtils.js\n// module id = 71\n// module chunks = 0","/*! callstats.js  version = 3.27.0 2017-12-14 */\nfunction PusherPlug(){this.invoker=null,this.receiver=null}function Notifier(){this.listeners=[]}function SenderGate(a){this.stats=null,this.lastResponsed=(new Date).getTime(),this.onDataSent=a}function Measurement(a){this.ssrc=null,this.direction=void 0,this.mediaType=null,this.resolution=null,this.frameRateReceived=null,this.frameWidth=null,this.rtt=null,this.droppedFramesNum=null,this.packetLosts=null,this.jitter=null,this.bytesReceived=-1,this.packetsReceived=-1,this.packetsDiscarded=-1,this.bytesSent=-1,this.packetsSent=-1,this.stream=a}function NumberComparator(a,b){var c=\"number\"==typeof a?a:parseInt(a),d=\"number\"==typeof b?b:parseInt(b);return c===d?0:c<d?-1:1}function MeasurementRTTComparator(a,b){return NumberComparator(a.rtt,b.rtt)}function MeasurementFrameHeightComparator(a,b){return NumberComparator(a.frameHeight,b.frameHeight)}function MeasurementFrameWidthComparator(a,b){return NumberComparator(a.frameWidth,b.frameWidth)}function MeasurementJitterComparator(a,b){return NumberComparator(a.jitter,b.jitter)}function MeasurementFrameRateReceivedComparator(a,b){var c=parseInt(a.frameRateReceived),d=parseInt(b.frameRateReceived);return c===d?0:c<d?-1:1}function MeasurementMerger(a,b){return a}function Assembler(){this.codeBase=null,this.mediaType={unknown:\"unknown\",audio:\"audio\",video:\"video\"},this.codeBaseType={chrome:\"Chrome\",firefox:\"Firefox\",edge:\"Edge\"}}function SWValueTracker(a){SWPlugin.call(this),this.extractorFnc=a,this.prev=0,this.delta=0,this.first=0,this.actual=0,this.addSignalListener(Reporter.Signals.onDataSent,this.onDataSent,this)}function SWValueHolder(a){SWPlugin.call(this),this.extractorFnc=a,this.prev=null}function FractionLost(a,b){this.intervalPacketsRecv=b,this.intervalLoss=a}function FractionLostComparator(a,b){var c=a.getValue(),d=b.getValue();return c===d?0:c<d?-1:1}function FractionLostMerger(a,b){var c=(a.getIntervalLoss()+b.getIntervalLoss())/2,d=(a.getIntervalPacketsRecv()+b.getIntervalPacketsRecv())/2;return new FractionLost(c,d)}function Monitor(){this.measurements=new SlidingWindow(Reporter.maxItemsNum,Reporter.timeoutInMs),this.packetLostTracker=new SWValueTracker(function(a){return a.packetLosts}),this.measurements.addPlugin(this.packetLostTracker),this.packetsDiscardedTracker=new SWValueTracker(function(a){return a.packetsDiscarded}),this.measurements.addPlugin(this.packetsDiscardedTracker),this.resolutionTracker=new SWValueHolder(function(a){return a.resolution}),this.measurements.addPlugin(this.resolutionTracker),this.jitter95PercentileTracker=new SWPercentileTracker(MeasurementJitterComparator,95,MeasurementMerger),this.measurements.addPlugin(this.jitter95PercentileTracker),this.jitter95PercentileTracker.addFilter(function(a){return void 0!==a.jitter&&null!==a.jitter}),this.rtt95PercentileTracker=new SWPercentileTracker(MeasurementRTTComparator,95,MeasurementMerger),this.measurements.addPlugin(this.rtt95PercentileTracker),this.rtt95PercentileTracker.addFilter(function(a){return void 0!==a.rtt&&null!==a.rtt&&0<a.rtt}),this.frameHeight50PercentileTracker=new SWPercentileTracker(MeasurementFrameHeightComparator,50,MeasurementMerger),this.measurements.addPlugin(this.frameHeight50PercentileTracker),this.frameHeight50PercentileTracker.addFilter(function(a){return void 0!==a.frameHeight&&null!==a.frameHeight&&0<a.frameHeight}),this.frameHeight95PercentileTracker=new SWPercentileTracker(MeasurementFrameHeightComparator,95,MeasurementMerger),this.measurements.addPlugin(this.frameHeight95PercentileTracker),this.frameHeight95PercentileTracker.addFilter(function(a){return void 0!==a.frameHeight&&null!==a.frameHeight&&0<a.frameHeight}),this.frameRate50PercentileTracker=new SWPercentileTracker(MeasurementFrameRateReceivedComparator,50,MeasurementMerger),this.measurements.addPlugin(this.frameRate50PercentileTracker),this.frameRate50PercentileTracker.addFilter(function(a){return void 0!==a.frameRateReceived&&null!==a.frameRateReceived}),this.frameRate95PercentileTracker=new SWPercentileTracker(MeasurementFrameRateReceivedComparator,95,MeasurementMerger),this.measurements.addPlugin(this.frameRate95PercentileTracker),this.frameRate95PercentileTracker.addFilter(function(a){return void 0!==a.frameRateReceived&&null!==a.frameRateReceived}),this.frameWidth50PercentileTracker=new SWPercentileTracker(MeasurementFrameWidthComparator,50,MeasurementMerger),this.measurements.addPlugin(this.frameWidth50PercentileTracker),this.frameWidth50PercentileTracker.addFilter(function(a){return void 0!==a.frameWidth&&null!==a.frameWidth&&0<a.frameWidth}),this.frameWidth95PercentileTracker=new SWPercentileTracker(MeasurementFrameWidthComparator,95,MeasurementMerger),this.measurements.addPlugin(this.frameWidth95PercentileTracker),this.frameWidth95PercentileTracker.addFilter(function(a){return void 0!==a.frameWidth&&null!==a.frameWidth&&0<a.frameWidth}),this.rttAvgRTTracker=new SWAvg(function(a){return a.rtt}),this.measurements.addPlugin(this.rttAvgRTTracker),this.rttAvgRTTracker.addFilter(function(a){return void 0!==a.rtt&&null!==a.rtt&&0<a.rtt}),this.frameRateMeanTracker=new SWAvg(function(a){return a.frameRateReceived}),this.measurements.addPlugin(this.frameRateMeanTracker),this.frameRateMeanTracker.addFilter(function(a){return void 0!==a.frameRateReceived&&null!==a.frameRateReceived&&0<a.frameRateReceived}),this.frameHeightMeanTracker=new SWAvg(function(a){return a.frameHeight}),this.measurements.addPlugin(this.frameHeightMeanTracker),this.frameHeightMeanTracker.addFilter(function(a){return void 0!==a.frameHeight&&null!==a.frameHeight&&0<a.frameHeight}),this.frameWidthMeanTracker=new SWAvg(function(a){return a.frameWidth}),this.measurements.addPlugin(this.frameWidthMeanTracker),this.frameWidthMeanTracker.addFilter(function(a){return void 0!==a.frameHeight&&null!==a.frameWidth&&0<a.frameWidth}),this.jitterAvgTracker=new SWAvg(function(a){return a.jitter}),this.measurements.addPlugin(this.jitterAvgTracker),this.jitterAvgTracker.addFilter(function(a){return void 0!==a.jitter&&null!==a.jitter&&0<a.jitter}),this.intervalFractionLosts=new SlidingWindow(Reporter.maxItemsNum,Reporter.timeoutInMs),this.FLPercentileTracker=new SWPercentileTracker(FractionLostComparator,95,FractionLostMerger),this.intervalFractionLosts.addPlugin(this.FLPercentileTracker),this.lastSent=0,this.firstAdded=0,this.lastAdded=0,this.doSending=!1,this.mediaType=null,this.direction=null,this.lastTraffic=0,this.ssrc=0}function InboundMonitor(){Monitor.call(this),this.bytesReceivedTracker=new SWValueTracker(function(a){return a.bytesReceived}),this.packetsReceivedTracker=new SWValueTracker(function(a){return a.packetsReceived}),this.addPlugin(this.bytesReceivedTracker),this.addPlugin(this.packetsReceivedTracker),this.csioIntBRKbpsCount=0,this.csioIntPRCount=0}function InbAudioMonitor(){InboundMonitor.call(this),this.quality={eModel:0,bandwidth:0},this.direction=Measurement.Direction.inbound,this.mediaType=Measurement.MediaTypes.audio}function InbVideoMonitor(){InboundMonitor.call(this),this.frameRateReceivedTracker=new SWValueTracker(function(a){return a.frameRateReceived}),this.frameRatePercTracker=new SWPercentileTracker(MeasurementFrameRateReceivedComparator,10,MeasurementMerger),this.frameRatePercTracker.addFilter(function(a){return void 0!==a.frameRateReceived&&null!==a.frameRateReceived}),this.frameRatePercTracker.attach(this.setFrameRateReceived10,this),this.frameRateReceived10=null,this.addPlugin(this.frameRatePercTracker),this.addPlugin(this.frameRateReceivedTracker),this.quality={eModel:0,bandwidth:0,frameRate:0},this.direction=Measurement.Direction.inbound,this.mediaType=Measurement.MediaTypes.video}function OutboundMonitor(){Monitor.call(this),this.bytesSentTracker=new SWValueTracker(function(a){return a.bytesSent}),this.packetsSentTracker=new SWValueTracker(function(a){return a.packetsSent}),this.addPlugin(this.bytesSentTracker),this.addPlugin(this.packetsSentTracker),this.csioIntBRKbpsCount=0,this.csioIntPRCount=0}function OutbVideoMonitor(){OutboundMonitor.call(this),this.frameRateReceivedTracker=new SWValueTracker(function(a){return a.frameRateReceived}),this.frameRatePercTracker=new SWPercentileTracker(MeasurementFrameRateReceivedComparator,10,MeasurementMerger),this.frameRatePercTracker.addFilter(function(a){return void 0!==a.frameRateReceived&&null!==a.frameRateReceived}),this.frameRatePercTracker.attach(this.setFrameRateReceived10,this),this.frameRateReceived10=null,this.addPlugin(this.frameRatePercTracker),this.addPlugin(this.frameRateReceivedTracker),this.quality={eModel:0,bandwidth:0,frameRate:0},this.sendingThroughputObservations={ssrc:0,started:0,max:0,maxTs:0,stable:0,stableTs:0,ready:!1,maxVerified:!1,stableVerified:!1},this.direction=Measurement.Direction.outbound,this.mediaType=Measurement.MediaTypes.video}function OutbAudioMonitor(){OutboundMonitor.call(this),this.quality={eModel:0,bandwidth:0},this.direction=Measurement.Direction.outbound,this.mediaType=Measurement.MediaTypes.audio}function Monitors(){this.monitors={},this.assembler=new Assembler,this.sendable=!1,this.inbOneWayAudioDisruption={sent:!1,started:0,hasTrafficTs:0},this.outbOneWayAudioDisruption={sent:!1,started:0,hasTrafficTs:0}}function Analyzer(a){this.monitors=new Monitors,this.output=new PusherPlug,this.lastForwarded=(new Date).getTime(),this.lastInterval=0,this.sentCounter=0,this.nextInterval=0,a.addListener(this.monitors.onDataSent,this.monitors),a.addListener(this.onDataSent,this)}function Reporter(){this.states={Idle:\"Idle\",Run:\"Run\"},this.events={OnPolling:\"OnPolling\",OnStatsRequest:\"OnStatsRequest\",OnStop:\"OnStop\",OnStart:\"OnStart\",OnOneWayAudioDisruptionsRequest:\"OnOneWayAudioDisruptionsRequest\",OnSendingThroughputObservationsRequest:\"OnSendingThroughputObservationsRequest\"},this.onDataSent=new Notifier,this.analyzer=new Analyzer(this.onDataSent),this.senderGate=new SenderGate(this.onDataSent),this.sendingThroughputObservationsSent=!1,this.analyzer.output.connect(this.senderGate.receiver,this.senderGate),this.currentState=this.states.Run}var SlidingWindow=require(\"./slidingWindow\"),SWPlugin=require(\"./swPlugin\"),SWPercentileTracker=require(\"./swPercentileTracker\"),SWAvg=require(\"./swAvg\");Reporter.disruptions=[],Reporter.adaptiveSending=!0,Reporter.minMeasurementsNum=20,Reporter.SendingTimeTresholds={max:3e4,min:1e3,regular:5e3},Reporter.minDeltaTimeInMs=1e3,Reporter.maxItemsNum=1e3,Reporter.timeoutInMs=3e5,Reporter.Signals={onDataSent:\"onDataSent\"},PusherPlug.prototype={constructor:PusherPlug,connect:function(a,b){this.invoker=void 0===b?null:b,this.receiver=a},send:function(a){return null===this.receiver?void console.warn(\"There is no receiver to call\"):null===this.invoker?void this.receiver(a):void this.receiver.call(this.invoker,a)}},Notifier.prototype={constructor:Notifier,addListener:function(a,b){this.listeners.push({callback:a,that:b})},notify:function(){for(var a=0;a<this.listeners.length;++a){var b=this.listeners[a];void 0!==b.callback&&null!==b.callback&&(null===b.that?b.callback():b.callback.call(b.that))}}},SenderGate.prototype={constructor:SenderGate,receiver:function(a){this.stats=a,this.initiate=!1},requestStats:function(){var a=null,b=(new Date).getTime();if(null===this.stats)return null;if(this.initiate&&b-Reporter.SendingTimeTresholds.min<this.lastResponsed)return console.warn(\"Reporter : Too small interval between two sampling to response\"),null;var c=b-this.lastResponsed;return console.log(\"Elapsed time since last report: \"+c),a={streams:this.stats},this.stats=null,this.lastResponsed=b,this.onDataSent.notify(),this.initiate=!0,a}},Measurement.MediaTypes={audio:\"audio\",video:\"video\"},Measurement.Direction={inbound:\"inbound\",outbound:\"outbound\"},Measurement.prototype={constructor:Measurement,toString:function(){return\"Measurement {RTT: \"+this.RTT+\"; }\"}},Assembler.prototype={constructor:Assembler,do:function(a,b){var c=new Measurement(a);if(c.ssrc=a.ssrc,c.mediaType=this.getMediaType(a),c.resolution=this.getResolution(a),c.frameRateReceived=this.getFrameRate(a),c.frameWidth=this.getFrameWidth(a),c.frameHeight=this.getFrameHeight(a),c.rtt=this.getLatencyData(a),c.droppedFramesNum=this.getDroppedFramesNum(a),c.packetLosts=this.getPacketLosts(a),c.jitter=this.getJitter(a),a.streamType===Measurement.Direction.inbound?(c.direction=Measurement.Direction.inbound,c.bytesReceived=this.getBytesReceived(a),c.packetsReceived=this.getPacketsReceived(a),c.packetsDiscarded=this.getPacketsDiscarded(a)):a.streamType===Measurement.Direction.outbound&&(c.direction=Measurement.Direction.outbound,c.bytesSent=this.getBytesSent(a),c.packetsSent=this.getPacketsSent(a)),void 0!==b&&b===!0){c.rawdats={};for(var d in a.data)a.data.hasOwnProperty(d)&&(c.rawdats[d]=a.data[d])}return c},setupCodeBase:function(a){this.codeBase=a},getBytesSent:function(a){if(void 0===a.data.bytesSent)return 0;var b=this.checkForNan(parseInt(a.data.bytesSent,10));return null!==b?b:0},getBytesReceived:function(a){if(void 0===a.data.bytesReceived)return 0;var b=this.checkForNan(parseInt(a.data.bytesReceived,10));return null!==b?b:0},getPacketsReceived:function(a){if(void 0===a.data.packetsReceived)return 0;var b=this.checkForNegativeValue(parseInt(a.data.packetsReceived,10));return null!==b?b:0},getPacketsSent:function(a){if(void 0===a.data.packetsSent)return 0;var b=this.checkForNegativeValue(parseInt(a.data.packetsSent,10));return null!==b?b:0},getPacketsDiscarded:function(a){if(void 0===a.data.discardedPackets)return 0;var b=this.checkForNan(parseInt(a.data.discardedPackets,10));return null!==b?b:0},getPacketLosts:function(a){if(void 0===a.data.packetsLost)return 0;var b=this.checkForNegativeValue(parseInt(a.data.packetsLost,10));return null!==b?b:0},getDroppedFramesNum:function(a){if(void 0===a.data.droppedFrames)return 0;var b=this.checkForNegativeValue(parseInt(a.data.droppedFrames,10));return null!==b?b:0},getFrameRate:function(a){var b;return void 0!==a.data.googFrameRateOutput?b=parseInt(a.data.googFrameRateOutput,10):void 0!==a.data.googFrameRateDecoded?b=parseInt(a.data.googFrameRateDecoded,10):void 0!==a.data.googFrameRateReceived?b=parseInt(a.data.googFrameRateReceived,10):void 0!==a.data.googFrameRateSent?b=parseInt(a.data.googFrameRateSent,10):void 0!==a.data.framerateMean&&(b=parseInt(a.data.framerateMean,10)),void 0!==b&&(b=isNaN(b)||b<0?null:b),b},getFrameHeight:function(a){var b;return void 0!==a.data.googFrameHeightReceived?b=a.data.googFrameHeightReceived:void 0!==a.data.googFrameHeightSent?b=a.data.googFrameHeightSent:void 0!==a.data.frameHeight&&(b=a.data.frameHeight),b},getJitter:function(a){if(void 0!==a){var b;return void 0!==a.data.googJitterReceived?(b=this.checkForNan(parseInt(a.data.googJitterReceived,10)),b?b/1e3:b):this.codeBase===this.codeBaseType.chrome&&void 0!==a.data.jitter?(b=this.checkForNan(parseInt(a.data.jitter,10)),b?b/1e3:b):this.codeBase===this.codeBaseType.firefox&&void 0!==a.data.jitter?this.checkForNan(parseInt(a.data.jitter,10)):void 0}},getResolution:function(a){var b,c,d,e=\"unavailable\";return b=this.getFrameRate(a),d=this.getFrameWidth(a),c=this.getFrameHeight(a),void 0!==b&&void 0!==d&&void 0!==c&&d>0&&c>0&&(e=d.concat(\"x\",c,\"@\",b)),e},getFrameWidth:function(a){var b;return void 0!==a.data.googFrameWidthReceived?b=a.data.googFrameWidthReceived:void 0!==a.data.googFrameWidthSent?b=a.data.googFrameWidthSent:void 0!==a.data.frameWidth&&(b=a.data.frameWidth),b},validateRTT:function(a){var b;return b=isNaN(a)||a<0?null:a},getLatencyData:function(a){return void 0===a?null:void 0!==a.data.googRtt?this.validateRTT(parseInt(a.data.googRtt,10)):void 0!==a.data.roundTripTime?this.validateRTT(parseInt(a.data.roundTripTime,10)):void 0!==a.data.mozRtt?this.validateRTT(parseInt(a.data.mozRtt,10)):null},getMediaType:function(a){var b=this.mediaType.unknown;if(void 0!==a)return a.data&&void 0!==a.data.mediaType?a.data.mediaType:(a.data.mediaType?b=a.data.mediaType:void 0!==a.data.googFrameRateReceived||void 0!==a.data.googFrameRateSent?b=this.mediaType.video:void 0!==a.data.audioInputLevel||void 0!==a.data.audioOutputLevel||void 0!==a.data.audioLevel?b=this.mediaType.audio:void 0!==a.data.framerateMean&&(b=this.mediaType.video),b)},checkForNan:function(a){var b=isNaN(a)?null:a;return b},checkForNegativeValue:function(a){if(a=this.checkForNan(a),null!==a){var b=a<0?null:a;return b}},toString:function(){return\"ToString function is not defined. for this object\"}},SWValueTracker.prototype=Object.create(SWPlugin.prototype),SWValueTracker.prototype.constructor=SWValueTracker,SWValueTracker.prototype.onDataSent=function(){this.prev=this.actual},SWValueTracker.prototype.getActual=function(){return this.actual},SWValueTracker.prototype.getFirst=function(){return this.first},SWValueTracker.prototype.getDelta=function(){return this.delta=this.actual-this.prev,this.delta},SWValueTracker.prototype.getPrevious=function(){return this.prev},SWValueTracker.prototype.add=function(a){var b=this.extractorFnc(a);if(void 0!==b&&null!==b){if(0===this.first)return this.first=b,void(this.actual=b);this.actual=b,this.notify({last:this.prev,delta:this.delta})}},SWValueTracker.prototype.remove=function(){},SWValueHolder.prototype=Object.create(SWPlugin.prototype),SWValueHolder.prototype.constructor=SWValueHolder,SWValueHolder.prototype.add=function(a){void 0!==a&&null!==a&&(this.prev=this.extractorFnc(a))},SWValueHolder.prototype.remove=function(){},SWValueHolder.prototype.getPrevious=function(){return this.prev},FractionLost.prototype={constructor:FractionLost,getIntervalLoss:function(){return this.intervalLoss},getIntervalPacketsRecv:function(){return this.intervalPacketsRecv},getValue:function(){return void 0===this.intervalPacketsRecv||void 0===this.intervalLoss?null:null===this.intervalPacketsRecv||null===this.intervalLoss?null:0===this.intervalLoss&&0===this.intervalPacketsRecv?0:this.intervalLoss/(this.intervalPacketsRecv+this.intervalLoss)}},Monitor.VideoThroughputThresholds={green:1024,red:256},Monitor.AudioThroughputThresholds={green:30,red:8},Monitor.FrameRateRatioTresholds={green:.8,red:.3},Monitor.VideoRTTThresholds={green:400,red:1e3},Monitor.VideoFractionLostTreshdolds={green:10,red:50},Monitor.AudioFractionLostTresholds={green:15,red:30},Monitor.AudioEModelTresholds={green:240,red:400},Monitor.avQualityRating={excellent:3,fair:2,bad:1},Monitor.avQualityRatingString={excellent:\"excellent\",fair:\"fair\",bad:\"bad\"},Monitor.prototype={constructor:Monitor,doStart:function(){return!0},getStartTime:function(){return this.firstAdded},hasTraffic:function(){var a=this.getLastMeasurement();return this.direction===Measurement.Direction.inbound?0<a.bytesReceived:this.direction===Measurement.Direction.outbound&&0<a.bytesSent},getTotalTimeInMs:function(){return 0===this.firstAdded?0:this.lastAdded-this.firstAdded},getDeltaTimeInMs:function(){return 0===this.lastSent?this.lastAdded-this.firstAdded:this.lastAdded-this.lastSent},getLastMeasurement:function(){return this.measurements.getLast()},setSSRC:function(a){this.ssrc=a},getSSRC:function(){return this.ssrc},add:function(a){var b=(new Date).getTime();if(0===this.firstAdded){if(!this.doStart(a))return;this.firstAdded=b}this.lastAdded=b,this.measurements.add(a)},requestSending:function(){this.doSending=!0},setIntBRAndPR:function(a,b,c){var d=this.getDeltaTimeInMs(),e=Math.max(Reporter.minDeltaTimeInMs,d),f=8*a.getDelta()/e,g=b.getDelta()/(e/1e3);c.data.csioIntBRKbps=f,c.data.csioIntPR=g,0<f?this.csioIntBRKbpsCount=10:0<this.csioIntBRKbpsCount&&(--this.csioIntBRKbpsCount,this.requestSendingIf(1e3<d&&this.csioIntPRCount<5,\"OutboundMonitor csioIntBRKbps is 0 and this is the reason for sending\")),0<g?this.csioIntPRCount=10:0<this.csioIntPRCount&&(--this.csioIntPRCount,this.requestSendingIf(1e3<d&&this.csioIntPRCount<5,\"OutboundMonitor csioIntPR is 0 and this is the reason for sending: \"))},requestSendingIf:function(a,b){this.doSending=this.doSending||a},getAvgRTT:function(){return this.rttAvgRTTracker.getResult()},getResolution:function(){return this.resolutionTracker.getPrevious()},percentileTrackerExtractor:function(a,b,c){var d=null,e=a.getResult();return null===e?c:(d=b(e.actual),null===d?c:d)},getRTT95:function(){var a=this.percentileTrackerExtractor(this.rtt95PercentileTracker,function(a){return a.rtt},null),b=this.getLastMeasurement();if(null!==b&&null!==a){var c=Math.max(.1*a,50);this.requestSendingIf(a+c<b.rtt,\"RTT95 the reason of sending \"+a+\" < \"+b.rtt)}return a},getJitter95:function(){var a=this.percentileTrackerExtractor(this.jitter95PercentileTracker,function(a){return a.jitter},null),b=this.getLastMeasurement();if(null!==b){var c=Math.max(.1*a,10);this.requestSendingIf(a+c<b.jitter,\"Jitter95 the reason of sending \"+a+\" < \"+b.jitter)}return this.result},getFrameRateMean:function(){return this.frameRateMeanTracker.getResult()},getFrameWidth50Percentile:function(){return this.percentileTrackerExtractor(this.frameWidth50PercentileTracker,function(a){return a.frameWidth},null)},getFrameWidth95Percentile:function(){return this.percentileTrackerExtractor(this.frameWidth95PercentileTracker,function(a){return a.frameWidth},null)},getFrameHeight50Percentile:function(){return this.percentileTrackerExtractor(this.frameHeight50PercentileTracker,function(a){return a.frameHeight},null)},getFrameHeight95Percentile:function(){return this.percentileTrackerExtractor(this.frameHeight95PercentileTracker,function(a){return a.frameHeight},null)},getFrameRate50Percentile:function(){return this.percentileTrackerExtractor(this.frameRate50PercentileTracker,function(a){return a.frameRateReceived},null)},getFrameRate95Percentile:function(){return this.percentileTrackerExtractor(this.frameRate95PercentileTracker,function(a){return a.frameRateReceived},null)},getFrameHeightMean:function(){return this.frameHeightMeanTracker.getResult()},getFrameWidthMean:function(){return this.frameWidthMeanTracker.getResult()},getAvgJitter:function(){return this.jitterAvgTracker.getResult()},getQualityEvaluation:function(a,b){if(void 0!==a&&void 0!==b){if(null===a||null===a)return null;var c;return c=b.green<=a?Monitor.avQualityRating.excellent:b.red<a&&a<b.green?Monitor.avQualityRating.fair:Monitor.avQualityRating.bad}},getQualityReverseEvaluation:function(a,b){if(void 0!==a&&void 0!==b){if(null===a||null===a)return null;var c;return c=b.red<a?Monitor.avQualityRating.bad:b.green<=a&&a<=b.red?Monitor.avQualityRating.fair:Monitor.avQualityRating.excellent}},hasData:function(){return this.measurements.refresh(),1<this.measurements.getItemsNum()},addPlugin:function(a){this.measurements.addPlugin(a)},setup:function(a){a.data.csioIntBRKbps=0,a.data.csioAvgBRKbps=0,a.data.csioIntFL=void 0,a.data.csioIntMs=Math.max(Reporter.SendingTimeTresholds.regular,this.getDeltaTimeInMs()),a.data.csioIntPR=void 0,a.data.csioPercentileFl=void 0,a.data.csioIntPktLoss=void 0,a.data.csioAvgJitter=this.getAvgJitter(),a.data.csioAvgRtt=this.getAvgRTT(),a.data.csioPercentileJitter=this.getJitter95(),a.data.csioSig2Latency=this.getRTT95(),a.data.csioTimeElapseMs=this.getTotalTimeInMs(),a.data.csioeM=(null!==this.getRTT95()?this.getRTT95():0)+40,a.data.csiores=this.getResolution(),a.data.csioFrameWidth95Percentile=this.getFrameWidth95Percentile(),a.data.csioFrameWidth50Percentile=this.getFrameWidth50Percentile(),a.data.csioFrameHeight95Percentile=this.getFrameHeight95Percentile(),a.data.csioFrameHeight50Percentile=this.getFrameHeight50Percentile(),a.data.csioFrameRate95Percentile=this.getFrameRate95Percentile(),a.data.csioFrameRate50Percentile=this.getFrameRate50Percentile(),a.data.csioFrameWidthMean=this.getFrameWidthMean(),a.data.csioFrameHeightMean=this.getFrameHeightMean(),a.data.csioFrameRateMean=this.getFrameRateMean()},addIntervalFractionLost:function(a){this.intervalFractionLosts.add(a)},getLastFractionLost:function(){return this.intervalFractionLosts.getLast()},getIntervalFractionLost95:function(){var a,b=this.FLPercentileTracker.getResult();if(null===b)return 0;a=b.actual.getValue();var c=this.getLastFractionLost();if(null!==c&&null!==a){var d=Math.max(.05,c.getValue());this.requestSendingIf(c.getValue()+d<a,\"Fraction lost is the reason for sending \"+c.getValue()+\" \"+a)}return a},onDataSent:function(){var a=(new Date).getTime();this.measurements.signalize(Reporter.Signals.onDataSent,null),this.lastSent=a},isValid:function(){for(var a=0;a<arguments.length;a++)if(null===arguments[a]||void 0===arguments[a])return!1;return!0},doSend:function(){if(this.hasData()===!1)return!0;var a=this.doSending;return this.doSending=!1,a},getMediaType:function(){return this.mediaType},getDirection:function(){return this.direction}},InboundMonitor.prototype=Object.create(Monitor.prototype),InboundMonitor.prototype.constructor=InboundMonitor,InboundMonitor.prototype.setRTT95=function(a){Monitor.prototype.setRTT95(a)},InboundMonitor.prototype.setup=function(a){Monitor.prototype.setup.call(this,a);var b=new FractionLost(this.packetLostTracker.getDelta(),this.packetsReceivedTracker.getDelta());this.addIntervalFractionLost(b),a.data.csioIntPktRcv=this.packetsReceivedTracker.getDelta(),this.setIntBRAndPR(this.bytesReceivedTracker,this.packetsReceivedTracker,a),this.getTotalTimeInMs()>0&&(a.data.csioAvgBRKbps=8*this.bytesReceivedTracker.getActual()/this.getTotalTimeInMs()),a.data.csioIntFL=b.getValue(),a.data.csioPercentileFl=this.getIntervalFractionLost95(),a.data.csioeM=(null!==this.getRTT95()?this.getRTT95():0)+40,a.data.csioIntPktLoss=this.packetLostTracker.getDelta(),void 0!==a.data.csioAvgBRKbps&&null!==a.data.csioAvgBRKbps?a.data.csioAvgPacketSize=this.bytesReceivedTracker.getDelta()/this.packetsReceivedTracker.getDelta():a.data.csioAvgPacketSize=null,a.data.csioPktLossPercentage=this.packetLostTracker.getDelta()/this.packetsReceivedTracker.getDelta()*100},InbAudioMonitor.prototype=Object.create(InboundMonitor.prototype),InbAudioMonitor.prototype.constructor=InbAudioMonitor,InbAudioMonitor.prototype.setup=function(a){InboundMonitor.prototype.setup.call(this,a),a.data.csioMediaType=Measurement.MediaTypes.audio,this.quality.eModel=this.getQualityReverseEvaluation(a.data.csioeM,Monitor.AudioEModelTresholds),this.quality.bandwidth=this.getQualityEvaluation(a.data.csioIntBRKbps,Monitor.AudioThroughputThresholds),a.data.csioMark=this.getQuality()},InbAudioMonitor.prototype.getQuality=function(){var a=0,b=.5*this.quality.bandwidth+.5*this.quality.eModel;return b=Math.floor(b),b===Monitor.avQualityRating.excellent?a=Monitor.avQualityRatingString.excellent:b===Monitor.avQualityRating.fair?a=Monitor.avQualityRatingString.fair:b===Monitor.avQualityRating.bad&&(a=Monitor.avQualityRatingString.bad),a},InbVideoMonitor.prototype=Object.create(InboundMonitor.prototype),InbVideoMonitor.prototype.constructor=InbVideoMonitor,InbVideoMonitor.prototype.setFrameRatioQuality=function(){var a=this.frameRateReceivedTracker.getActual(),b=this.frameRateReceivedTracker.getPrevious(),c=0;this.quality.frameRate=0,void 0!==a&&void 0!==b&&null!==a&&null!==b&&0!==b&&(c=a/b,this.quality.frameRate=this.getQualityEvaluation(c,Monitor.FrameRateRatioTresholds))},InbVideoMonitor.prototype.setFrameRateReceived10=function(a){return null===a?void(this.frameRateReceived10=null):void(this.frameRateReceived10=a.actual)},InbVideoMonitor.prototype.setup=function(a){InboundMonitor.prototype.setup.call(this,a),a.data.csioMediaType=Measurement.MediaTypes.video,this.setFrameRatioQuality(),this.quality.eModel=this.getQualityReverseEvaluation(a.data.csioeM,Monitor.AudioEModelTresholds),this.quality.bandwidth=this.getQualityEvaluation(a.data.csioIntBRKbps,Monitor.VideoThroughputThresholds),a.data.csioMark=this.getQuality()},InbVideoMonitor.prototype.getQuality=function(){var a=0,b=.33*this.quality.bandwidth+.33*this.quality.eModel+.33*this.quality.frameRate;return b=Math.floor(b),b===Monitor.avQualityRating.excellent?a=Monitor.avQualityRatingString.excellent:b===Monitor.avQualityRating.fair?a=Monitor.avQualityRatingString.fair:b===Monitor.avQualityRating.bad&&(a=Monitor.avQualityRatingString.bad),a},OutboundMonitor.prototype=Object.create(Monitor.prototype),OutboundMonitor.prototype.constructor=OutboundMonitor,OutboundMonitor.prototype.setup=function(a){Monitor.prototype.setup.call(this,a);var b=new FractionLost(this.packetLostTracker.getDelta(),this.packetsSentTracker.getDelta());this.addIntervalFractionLost(b),this.setIntBRAndPR(this.bytesSentTracker,this.packetsSentTracker,a),this.getTotalTimeInMs()>0&&(a.data.csioAvgBRKbps=8*this.bytesSentTracker.getActual()/this.getTotalTimeInMs()),a.data.csioIntFL=b.getValue(),a.data.csioIntPktRcv=this.packetsSentTracker.getDelta(),a.data.csioPercentileFl=this.getIntervalFractionLost95(),a.data.csioeM=(null!==this.getRTT95()?this.getRTT95():0)+40,a.data.csioIntPktLoss=this.packetLostTracker.getDelta(),void 0!==a.data.csioAvgBRKbps&&null!==a.data.csioAvgBRKbps?a.data.csioAvgPacketSize=this.bytesSentTracker.getDelta()/this.packetsSentTracker.getDelta():a.data.csioAvgPacketSize=null,a.data.csioPktLossPercentage=this.packetLostTracker.getDelta()/this.packetsSentTracker.getDelta()*100},OutbVideoMonitor.verificationElapsedThreshold=1e4,OutbVideoMonitor.initialElapsedThreshold=15e3,OutbVideoMonitor.minStableKBpsSlack=50,OutbVideoMonitor.prototype=Object.create(OutboundMonitor.prototype),OutbVideoMonitor.prototype.constructor=OutbVideoMonitor,OutbVideoMonitor.prototype.setFrameRatioQuality=function(){var a=this.frameRateReceivedTracker.getActual(),b=this.frameRateReceivedTracker.getPrevious(),c=0;this.quality.frameRate=0,void 0!==a&&void 0!==b&&null!==a&&null!==b&&0!==b&&(c=a/b,this.quality.frameRate=this.getQualityEvaluation(c,Monitor.FrameRateRatioTresholds))},OutbVideoMonitor.prototype.setFrameRateReceived10=function(a){return null===a?void(this.frameRateReceived10=null):void(this.frameRateReceived10=a.actual)},OutbVideoMonitor.prototype.getSendingKBitrateObservations=function(){var a=this.sendingThroughputObservations;return a.ready?{ssrc:a.ssrc,maxsendingKBitrate:a.max,timeToMaxSendingKBitrate:a.maxTs-a.started,stablesendingKBitrate:a.stable,timeToStableSendingKBitrate:a.stableTs-a.started}:null},OutbVideoMonitor.prototype.checkSendingKBitrateObservations=function(a){var b=this.sendingThroughputObservations,c=(new Date).getTime();if(b.ready!==!0){if(0===b.started)return b.ssrc=this.getSSRC(),void(b.started=c);var d=a.data.csioIntBRKbps,e=Math.min(OutbVideoMonitor.minStableKBpsSlack,.05*d);b.max<d?(b.max=d,b.maxTs=c):OutbVideoMonitor.verificationElapsedThreshold<c-b.maxTs&&(b.maxVerified=!0),c-b.started<OutbVideoMonitor.initialElapsedThreshold||(d-e<a.data.csioAvgBRKbps&&a.data.csioAvgBRKbps<d+e&&(b.stableTs=c,b.stable=d,b.stableVerified=!0),b.stableVerified&&b.maxVerified&&(b.ready=!0))}},OutbVideoMonitor.prototype.setup=function(a){OutboundMonitor.prototype.setup.call(this,a),a.data.csioMediaType=Measurement.MediaTypes.video,this.setFrameRatioQuality(),this.quality.eModel=this.getQualityReverseEvaluation(a.data.csioeM,Monitor.AudioEModelTresholds),this.quality.bandwidth=this.getQualityEvaluation(a.data.csioIntBRKbps,Monitor.VideoThroughputThresholds),a.data.csioMark=this.getQuality(),this.checkSendingKBitrateObservations(a)},OutbVideoMonitor.prototype.getQuality=function(){var a=0,b=.33*this.quality.bandwidth+.33*this.quality.eModel+.33*this.quality.frameRate;return b=Math.floor(b),b===Monitor.avQualityRating.excellent?a=Monitor.avQualityRatingString.excellent:b===Monitor.avQualityRating.fair?a=Monitor.avQualityRatingString.fair:b===Monitor.avQualityRating.bad&&(a=Monitor.avQualityRatingString.bad),a},OutbAudioMonitor.prototype=Object.create(OutboundMonitor.prototype),OutbAudioMonitor.prototype.constructor=OutbAudioMonitor,OutbAudioMonitor.prototype.setEModelQuality=function(a){a<Monitor.AudioEModelTresholds.green?this.quality.eModel=Monitor.avQualityRating.excellent:a>Monitor.AudioEModelTresholds.green&&a<Monitor.AudioEModelTresholds.red?this.quality.eModel=Monitor.avQualityRating.fair:a>Monitor.AudioEModelTresholds.red&&(this.quality.eModel=Monitor.avQualityRating.bad)},OutbAudioMonitor.prototype.setThroughputQuality=function(a){null!==a&&void 0!==a&&(a>Monitor.AudioThroughputThresholds.green?this.quality.bandwidth=Monitor.avQualityRating.excellent:a>Monitor.AudioThroughputThresholds.red&&a<Monitor.AudioThroughputThresholds.green?this.quality.bandwidth=Monitor.avQualityRating.fair:a<Monitor.AudioThroughputThresholds.red&&(this.quality.bandwidth=Monitor.avQualityRating.bad));\n},OutbAudioMonitor.prototype.setup=function(a){OutboundMonitor.prototype.setup.call(this,a),this.setThroughputQuality(a.data.csioIntBRKbps),this.setEModelQuality(a.data.csioeM),a.data.csioMediaType=Measurement.MediaTypes.audio,a.data.csioMark=this.getQuality()},OutbAudioMonitor.prototype.doSend=function(){return this.hasData()===!1,!1},OutbAudioMonitor.prototype.getQuality=function(){var a=0,b=.5*this.quality.bandwidth+.5*this.quality.eModel;return b=Math.floor(b),b===Monitor.avQualityRating.excellent?a=Monitor.avQualityRatingString.excellent:b===Monitor.avQualityRating.fair?a=Monitor.avQualityRatingString.fair:b===Monitor.avQualityRating.bad&&(a=Monitor.avQualityRatingString.bad),a},Monitors.OneWayAudioDisruptionTimeout=5e3,Monitors.DisruptionsMediaType={audio:\"audio\",video:\"video\",screen:\"screen\"},Monitors.DisruptionsType={inbOneWayAudioDisruption:\"inbOneWayAudioDisruption\",outbOneWayAudioDisruption:\"outbOneWayAudioDisruption\"},Monitors.prototype={constructor:Monitors,getMonitor:function(a){var b;if(this.monitors[a.direction]&&(b=this.monitors[a.direction][a.ssrc]),void 0!==b)return this.monitors[a.direction][a.ssrc];var c=a.direction===Measurement.Direction.inbound,d=a.direction===Measurement.Direction.outbound,e=a.mediaType===Measurement.MediaTypes.audio,f=a.mediaType===Measurement.MediaTypes.video;return b=c&&e?new InbAudioMonitor:d&&e?new OutbAudioMonitor:c&&f?new InbVideoMonitor:d&&f?new OutbVideoMonitor:null,b.setSSRC(a.ssrc),this.monitors[a.direction]||(this.monitors[a.direction]={}),this.monitors[a.direction][a.ssrc]=b,b},setupCodeBase:function(a){this.assembler.setupCodeBase(a)},isSendable:function(){var a=this.sendable;return this.sendable=!1,a},process:function(a){var b=this.assembler.do(a),c=this.getMonitor(b);return null===c||void 0===c?void console.warn(\"For ssrc \"+b.ssrc+\"we do not have monitor\"):(c.doSend(b)&&(this.sendable=!0),c.add(b),void c.setup(a))},checkDistortions:function(){var a,b=[],c=[],d=this.monitors[Measurement.Direction.inbound];d&&Object.keys(d).forEach(function(c){a=d[c],a.getMediaType()===Measurement.MediaTypes.audio&&b.push(a)}),d=this.monitors[Measurement.Direction.outbound],d&&Object.keys(d).forEach(function(b){a=d[b],a.getMediaType()===Measurement.MediaTypes.audio&&c.push(a)}),[this.getInbOneWayAudioDisruption(b,c),this.getOutbOneWayAudioDisruption(b,c)].forEach(function(a){a&&Reporter.disruptions.push(a)})},getSendingThroughputObservations:function(){var a=[],b=null,c=this.monitors[Measurement.Direction.outbound];return c?(Object.keys(c).forEach(function(d){b=c[d],b.getMediaType()===Measurement.MediaTypes.video&&a.push(b.getSendingKBitrateObservations())}),a):null},getInbOneWayAudioDisruption:function(a,b){var c=this.inbOneWayAudioDisruption,d=(new Date).getTime();if(c.sent)return null;var e=b.filter(function(a){return 0===a.getStartTime()}).length<1,f=b.filter(function(a){return!a.hasTraffic()}).length<1;if(!e||f)return null;if(!a.length)return null;var g=a.filter(function(a){return!a.hasTraffic()});if(g.length<1)return c.started=0,null;if(0===c.started)return c.started=d,null;if(d-Monitors.OneWayAudioDisruptionTimeout<c.started)return null;var h=g[0].getSSRC();return c.sent=!0,{mediaType:Monitors.DisruptionsMediaType.audio,type:Monitors.DisruptionsType.inbOneWayAudioDisruption,ssrc:h}},getOutbOneWayAudioDisruption:function(a,b){var c=this.outbOneWayAudioDisruption,d=(new Date).getTime();if(c.sent)return null;var e=a.filter(function(a){return 0===a.getStartTime()}).length<1,f=a.filter(function(a){return!a.hasTraffic()}).length<1;if(!e||!f)return null;if(!b.length)return null;var g=b.filter(function(a){return!a.hasTraffic()});if(g.length<1)return c.started=0,null;if(0===c.started)return c.started=d,null;if(d-Monitors.OneWayAudioDisruptionTimeout<c.started)return null;var h=g[0].getSSRC();return c.sent=!0,{mediaType:Monitors.DisruptionsMediaType.audio,type:Monitors.DisruptionsType.outbOneWayAudioDisruption,ssrc:h}},toString:function(){return\"ToString function is not defined. for this object\"},onDataSent:function(){for(var a in this.monitors)if(this.monitors.hasOwnProperty(a))for(var b in this.monitors[a])if(this.monitors[a].hasOwnProperty(b)){var c=this.monitors[a][b];null!==c?c.onDataSent():console.warn(\"A Monitor with ssrc: \"+b+\" should not be null but it is!\")}}},Analyzer.prototype={constructor:Analyzer,onDataSent:function(){++this.sentCounter},getSendingThroughputObservations:function(){var a=this.monitors.getSendingThroughputObservations();if(!a)return null;var b=a.filter(function(a){return null===a}).length<1;return b?a:null},receive:function(a){var b=(new Date).getTime(),c=a.streams,d=a.codeBase;this.monitors.setupCodeBase(d);for(var e=0;e<c.length;++e){var f=c[e];this.monitors.process(f)}this.monitors.checkDistortions();var g=!1;if(Reporter.adaptiveSending===!1)g=this.lastForwarded+Reporter.SendingTimeTresholds.regular<b,g&&(this.output.send(c),this.lastInterval=b-this.lastForwarded,this.lastForwarded=b);else{var h=this.monitors.isSendable();if(0===this.sentCounter?g=!0:this.sentCounter<5?(g=this.lastForwarded+Reporter.SendingTimeTresholds.regular<b,h=!1):g=this.lastForwarded+Math.min(Reporter.SendingTimeTresholds.max,this.nextInterval)<b,g||h)if(this.output.send(c),this.lastInterval=b-this.lastForwarded,this.lastForwarded=b,h)this.lastInterval=Math.max(Reporter.SendingTimeTresholds.min,this.lastInterval/2);else if(g){var i=Math.random()+1;this.nextInterval=Math.min(Reporter.SendingTimeTresholds.max,this.lastInterval*i)}}}},Reporter.prototype={constructor:Reporter,fire:function(a){var b;switch(this.currentState){case this.states.Idle:switch(a){case this.events.OnStart:this.currentState=this.states.Run;break;default:console.warn(\"Unhandled event \"+a+\" in \"+this.currentState+\" mode\")}break;case this.states.Run:switch(a){case this.events.OnStop:this.currentState=this.states.Idle;break;case this.events.OnPolling:var c=arguments[1];this.analyzer.receive(c);break;case this.events.OnOneWayAudioDisruptionsRequest:if(b=arguments[1],void 0===b){console.warn(\"OnStatsRequest event required a parameter to store the response\");break}0<Reporter.disruptions.length&&(b.response=Reporter.disruptions,Reporter.disruptions=[]);break;case this.events.OnSendingThroughputObservationsRequest:if(b=arguments[1],void 0===b){console.warn(\"OnSendingThroughputObservationsRequest event required a parameter to store the response\");break}this.sendingThroughputObservationsSent===!1&&(b.response=this.analyzer.getSendingThroughputObservations(),this.sendingThroughputObservationsSent=null!==b.response);break;case this.events.OnStatsRequest:if(b=arguments[1],void 0===b){console.warn(\"OnStatsRequest event required a parameter to store the response\");break}b.response=this.senderGate.requestStats();break;default:console.warn(\"Unhandled event \"+a+\" in \"+this.currentState+\" mode\")}break;default:console.error(\"The Reporter machine is in an unkown state: \"+this.currentState)}},toString:function(){return\"Reporter is in \"+this.currentState},setReportingMode:function(a){Reporter.adaptiveSending=a===!0},setSubmissionInterval:function(a){Reporter.SendingTimeTresholds.regular=a,Reporter.adaptiveSending?(Reporter.SendingTimeTresholds.min=1e3,Reporter.SendingTimeTresholds.max=3e4):(Reporter.SendingTimeTresholds.min=a,Reporter.SendingTimeTresholds.max=a)}},module.exports.Reporter=Reporter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/statsReporter.js\n// module id = 72\n// module chunks = 0","/*! callstats.js  version = 3.27.0 2017-12-14 */\nfunction SlidingWindow(a,b){this.items=[],this.plugins=[],this.timeoutInMs=b,this.maxItemsNum=a,this.minItemsNum=0,this.last=null}var SWItem=require(\"./swItem\");SlidingWindow.prototype={constructor:SlidingWindow,signalize:function(a,b){for(var c=0;c<this.plugins.length;++c){var d=this.plugins[c];null!==d.signalize&&void 0!==d.signalize?d.signalize.call(d,a,b):console.warn(d)}},toString:function(){return\"\"}},SlidingWindow.prototype.getLast=function(){return this.last},SlidingWindow.prototype.setMaxItemsNum=function(a){this.maxItemsNum=a},SlidingWindow.prototype.setTimeoutInMs=function(a){this.timeoutInMs=a},SlidingWindow.prototype.setMinItemsNum=function(a){this.minItemsNum=a},SlidingWindow.prototype.refresh=function(){if(!(this.items.length<=this.minItemsNum)){for(;0<this.maxItemsNum&&this.maxItemsNum<=this.items.length;)this.remove();0<this.timeoutInMs&&this.timeoutInMs<this.items[0].getElapsed()&&(this.remove(),this.refresh())}},SlidingWindow.prototype.getItemsNum=function(){return this.items.length},SlidingWindow.prototype.add=function(a){this.refresh(),this.items.push(new SWItem(a));for(var b=0;b<this.plugins.length;b++){var c=this.plugins[b];c.add(a)}this.last=a},SlidingWindow.prototype.map=function(a){for(var b=0;b<this.plugins.length;b++){var c=this.plugins[b];c.map(a)}},SlidingWindow.prototype.remove=function(){for(var a=this.items.shift(),b=0;b<this.plugins.length;b++){var c=this.plugins[b];c.remove(a.value)}},SlidingWindow.prototype.foreach=function(a,b){var c=this.items;void 0!==b&&(c=b(c));for(var d=0;d<c.length;d++){var e=c[d];a(e.value)}},SlidingWindow.prototype.addPlugin=function(a){this.plugins.push(a)},module.exports=SlidingWindow;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/slidingWindow.js\n// module id = 73\n// module chunks = 0","/*! callstats.js  version = 3.27.0 2017-12-14 */\nfunction SWItem(a){this.value=a,this.created=(new Date).getTime()}SWItem.prototype={constructor:SWItem,getElapsed:function(){return(new Date).getTime()-this.created},toString:function(){return\"\"}},module.exports=SWItem;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/swItem.js\n// module id = 74\n// module chunks = 0","/*! callstats.js  version = 3.27.0 2017-12-14 */\nfunction SWPercentileTracker(a,b,c){if(SWPlugin.call(this),99<b||b<1)throw new RangeError(\"Percentile parameter must be between 1 and 99\");this.comparator=a,this.percentile=b,this.meanCalcer=\"undefined\"==typeof c?function(a,b){return(a+b)/2}:c,this.ratio=b/(100-b),this.maxtree=new BinaryTree(a),this.mintree=new BinaryTree(a),this.ratio<1?this.required=1/this.ratio+1:1<this.ratio?this.required=this.ratio+1:this.required=2,this.maxcounter=this.mincounter=0,this.result=null,this.filter=null}var SWPercentileNotification=require(\"./swPercentileNotification\"),BinaryTree=require(\"./binaryTree\"),SWPlugin=require(\"./swPlugin\");SWPercentileTracker.prototype=Object.create(SWPlugin.prototype),SWPercentileTracker.prototype.constructor=SWPercentileTracker,SWPercentileTracker.prototype.addFilter=function(a,b){this.filter={callback:a,that:b}},SWPercentileTracker.prototype.doFilter=function(a){return null===this.filter||(void 0===this.filter.that||null===this.filter.that?this.filter.callback(a):this.filter.callback.call(this.filter.that,a))},SWPercentileTracker.prototype.getResult=function(){return this.result},SWPercentileTracker.prototype.add=function(a){if(this.doFilter(a)){if(this.maxcounter<1)return this.maxtree.insert(a),void++this.maxcounter;this.comparator(a,this.maxtree.getTopValue())<=0?(this.maxtree.insert(a),++this.maxcounter):(this.mintree.insert(a),++this.mincounter),this.balancing(),this.calculate()}},SWPercentileTracker.prototype.remove=function(a){if(this.doFilter(a)){if(this.maxtree.delete(a))--this.maxcounter;else{if(!this.mintree.delete(a))throw new ReferenceError(\"The requested value \"+a+\" is not found in trees\");--this.mincounter}this.balancing(),this.calculate()}},SWPercentileTracker.prototype.balancing=function(){var a=function(){for(var a=(this.maxcounter+1)/(this.mincounter-1);;a=(this.maxcounter+1)/(this.mincounter-1)){if(this.ratio<a||this.mincounter<1)return;this.maxtree.insertByTop(this.mintree.deleteBottomValue()),++this.maxcounter,--this.mincounter}},b=function(){for(var a=(this.maxcounter-1)/(this.mincounter+1);;a=(this.maxcounter-1)/(this.mincounter+1)){if(a<this.ratio||this.maxcounter<1)return;this.mintree.insertByBottom(this.maxtree.deleteTopValue()),++this.mincounter,--this.maxcounter}};if(!(this.maxcounter+this.mincounter<this.required)){if(this.mincounter<1)return void b.call(this);if(this.maxcounter<1)return void a.call(this);var c=this.maxcounter/this.mincounter;this.ratio<c?b.call(this):a.call(this)}},SWPercentileTracker.prototype.calculate=function(){var a,b,c=new SWPercentileNotification,d=null,e=this.mincounter+this.maxcounter;if(!(e<1)){if(this.mincounter<1?(b=this.maxtree.getTopValue(),a=this.maxtree.getBottomValue()):this.maxcounter<1?(b=this.mintree.getTopValue(),a=this.mintree.getBottomValue()):(b=this.mintree.getTopValue(),a=this.maxtree.getBottomValue()),c.min=a,c.max=b,c.tracked=e,e<this.required||this.mincounter<1)return d=this.ratio<1?a:1<this.ratio?b:this.meanCalcer(a,b),c.actual=d,c.estimated=!0,this.result=c,void this.notify(this.result);var f=this.maxcounter/this.mincounter;d=this.ratio<f?this.maxtree.getTopValue():f<this.ratio?this.mintree.getBottomValue():this.meanCalcer(this.mintree.getBottomValue(),this.maxtree.getTopValue()),c.actual=d,this.result=c,this.notify(this.result)}},SWPercentileTracker.prototype.map=function(a){this.mapping(this.result.actual,a)},module.exports=SWPercentileTracker;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/swPercentileTracker.js\n// module id = 75\n// module chunks = 0","/*! callstats.js  version = 3.27.0 2017-12-14 */\nfunction SWPercentileNotification(){this.estimated=!1,this.tracked=0,this.max=this.min=this.actual=null}SWPercentileNotification.prototype={constructor:SWPercentileNotification,toString:function(){return\"Tracked: \"+this.tracked+\" Estimated: \"+this.estimated+\" Min: \"+this.min+\" Max: \"+this.max+\" Actual: \"+this.actual}},module.exports=SWPercentileNotification;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/swPercentileNotification.js\n// module id = 76\n// module chunks = 0","/*! callstats.js  version = 3.27.0 2017-12-14 */\nfunction BinaryTreeNode(a){this.value=[],this.value.push(a),this.left=null,this.right=null}function BinaryTree(a){this.root=null,this.top=null,this.bottom=null,this.comparator=a,this.node_counter=0,this.duplicate_counter=0}BinaryTreeNode.prototype={constructor:BinaryTreeNode,toString:function(){return this.value.toString()}},BinaryTree.prototype={constructor:BinaryTree},BinaryTree.prototype.getTop=function(){return this.top},BinaryTree.prototype.getTopValue=function(){return null===this.top?null:this.top.value[0]},BinaryTree.prototype.getBottomValue=function(){return null===this.bottom?null:this.bottom.value[0]},BinaryTree.prototype.getBottom=function(){return this.bottom},BinaryTree.prototype.getDuplicatedCounter=function(){return this.duplicate_counter},BinaryTree.prototype.getNodeCounter=function(){return this.node_counter},BinaryTree.prototype.getSize=function(){return this.duplicate_counter+this.node_counter},BinaryTree.prototype.logTree=function(){function a(b,c,d){if(null!==b){for(var e=\"-\",f=0;f<c;++f)e+=\"--\";console.log(e+\"> (\"+d+\") values: [\"+b.value.toString()+\"]\"),null!==b.left&&a(b.left,c+1,\"Left\"),null!==b.right&&a(b.right,c+1,\"Right\")}}return null===this.root?void console.log(\"This tree is empty\"):(console.log(\"Size of the tree: \"+this.getSize()+\" Node: \"+this.getNodeCounter()+\" Duplicates: \"+this.getDuplicatedCounter()+\" Top: \"+this.getTop().toString()+\" Bottom: \"+this.getBottom().toString()),void a(this.root,0,\"Root\"))},BinaryTree.prototype.insertByTop=function(a){this.inserting(a,this.top)},BinaryTree.prototype.insertByBottom=function(a){this.inserting(a,this.bottom)},BinaryTree.prototype.insert=function(a){this.inserting(a,this.root)},BinaryTree.prototype.inserting=function(a,b){var c=function(){var b=new BinaryTreeNode(a);return(null===this.top||this.comparator(this.top.value[0],b.value[0])<0)&&(this.top=b),(null===this.bottom||this.comparator(b.value[0],this.bottom.value[0])<0)&&(this.bottom=b),b};if(null===this.root)return this.root=c.call(this),void(this.node_counter=1);for(var d=null,e=b,f=0,g=function(b){return b===a};null!==e;){if(f=this.comparator(a,e.value[0]),0===f)return void(e.value.find(g)||(e.value.push(a),++this.duplicate_counter));d=e,e=f<0?e.left:e.right}++this.node_counter,f<0?d.left=c.call(this):d.right=c.call(this)},BinaryTree.prototype.search=function(a){for(var b,c=this.root,d=null,e=function(b){return b===a};null!==c;){if(b=this.comparator(a,c.value[0]),0===b)return c.value.find(e)?(c.parent=d,c):null;d=c,c=b<0?c.left:c.right}return null},BinaryTree.prototype.getRightist=function(a){for(var b=null;null!==a.right;)b=a,a=a.right;return a.parent=b,a},BinaryTree.prototype.getLeftist=function(a){for(var b=null;null!==a.left;)b=a,a=a.left;return a.parent=b,a},BinaryTree.prototype.deleteBottomValue=function(){for(;null===this.bottom;)return null;var a=this.bottom.value[0];return this.delete(a),a},BinaryTree.prototype.deleteTopValue=function(){for(;null===this.top;)return null;var a=this.top.value[0];return this.delete(a),a},BinaryTree.prototype.delete=function(a){var b=null,c=function(a,b,c){null!==b?b.left===a?b.left=c:b.right=c:this.root=c},d=function(a){return null===this.root?void(this.bottom=this.top=null):(0===this.comparator(this.top.value[0],a.value[0])&&(this.top=this.getRightist(this.root)),void(0===this.comparator(this.bottom.value[0],a.value[0])&&(this.bottom=this.getLeftist(this.root))))};if(b=this.search(a),null===b)return!1;if(1<b.value.length)return b.value.splice(b.value.indexOf(a),1),--this.duplicate_counter,!0;if(--this.node_counter,null===b.left&&null===b.right)c.call(this,b,b.parent,null);else if(null===b.left)c.call(this,b,b.parent,b.right);else if(null===b.right)c.call(this,b,b.parent,b.left);else{for(var e=b.left,f=b;null!==e.right;f=e,e=e.right);f===b?f.left=e.left:f.right=e.left,b.value.shift(),b.value=b.value.concat(e.value)}return d.call(this,b),!0},module.exports=BinaryTree;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/binaryTree.js\n// module id = 77\n// module chunks = 0","/*! callstats.js  version = 3.27.0 2017-12-14 */\nfunction SWAvg(a){SWPlugin.call(this),this.avg=0,this.sum=0,this.count=0,this.filter=null,void 0===a?this.extractor=function(a){return a}:this.extractor=a}var SWPlugin=require(\"./swPlugin\");SWAvg.prototype=Object.create(SWPlugin.prototype),SWAvg.prototype.constructor=SWAvg,SWAvg.prototype.add=function(a){(null===this.filter||void 0===this.filter||this.filter(a))&&(this.sum+=parseInt(this.extractor(a)),++this.count,this.calc(this))},SWAvg.prototype.addFilter=function(a){this.filter=a},SWAvg.prototype.remove=function(a){(null===this.filter||void 0===this.filter||this.filter(a))&&(this.sum-=parseInt(this.extractor(a)),--this.count,this.calc(this))},SWAvg.prototype.calc=function(){this.count<1||(this.avg=this.sum/this.count,this.notify(this.avg))},SWAvg.prototype.getResult=function(){return this.avg},module.exports=SWAvg;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/swAvg.js\n// module id = 78\n// module chunks = 0","/*! callstats.js  version = 3.27.0 2017-12-14 */\nfunction pcCallbackHandler(a,b,c,d,e){this.pc=a,this.onIceCandidateCallback=b,this.onIceConnectionStateChangeCallback=c,this.onPcSignalingStateChangeCallback=d,this.onPcNegotiationNeededCallback=e,a.addEventListener?(this.pc.addEventListener(\"icecandidate\",this.iceCandidateCallback.bind(this),!1),this.pc.addEventListener(\"iceconnectionstatechange\",this.iceConnectionStateChangeCallback.bind(this),!1),this.pc.addEventListener(\"signalingstatechange\",this.pcSignalingStateChangeCallback.bind(this),!1),this.pc.addEventListener(\"negotiationneeded\",this.pcNegotiationNeededCallback.bind(this),!1)):a.attachEvent&&(this.pc.attachEvent(\"onicecandidate\",this.iceCandidateCallback.bind(this)),this.pc.attachEvent(\"oniceconnectionstatechange\",this.iceConnectionStateChangeCallback.bind(this)),this.pc.attachEvent(\"onsignalingstatechange\",this.pcSignalingStateChangeCallback.bind(this)),this.pc.attachEvent(\"onnegotiationneeded\",this.pcNegotiationNeededCallback.bind(this)))}pcCallbackHandler.prototype.iceCandidateCallback=function(a){try{this.onIceCandidateCallback(a,this.pc)}catch(a){console.log(\"onIceCandidateCallback: Error\",a)}},pcCallbackHandler.prototype.iceConnectionStateChangeCallback=function(a){try{this.onIceConnectionStateChangeCallback(a,this.pc)}catch(a){console.log(\"onIceConnectionStateChangeCallback: Error\",a)}},pcCallbackHandler.prototype.pcSignalingStateChangeCallback=function(a){try{this.onPcSignalingStateChangeCallback(a,this.pc)}catch(a){console.log(\"onPcSignalingStateChangeCallback: Error\",a)}},pcCallbackHandler.prototype.pcNegotiationNeededCallback=function(a){try{this.onPcNegotiationNeededCallback(a,this.pc)}catch(a){console.log(\"onPcNegotiationNeededCallback: Error\",a)}},module.exports=pcCallbackHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/react-native-callstats/pcCallbackHandler.js\n// module id = 79\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.PreCallTest=void 0;var _createClass=function(){function t(t,e){for(var s=0;s<e.length;s++){var n=e[s];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(t,n.key,n)}}return function(e,s,n){return s&&t(e.prototype,s),n&&t(e,n),e}}(),_turnConnection=require(\"./turnConnection\"),_rttTest=require(\"./tests/rttTest\"),_throughputTest=require(\"./tests/throughputTest\"),_resultsHandler=require(\"./utility/resultsHandler\"),_onlineCheck=require(\"./utility/onlineCheck\"),_detectbrowser=require(\"./utility/stats/detectbrowser\"),Promise=require(\"bluebird\"),TEST_NAMES={RTT:\"rtt\",THROUGHPUT:\"throughput\"},FAILURE_RETRIES=10,PreCallTest=function(){function t(){_classCallCheck(this,t),this.browserInfo=(0,_detectbrowser.detect)(),this.turnConnection=new _turnConnection.TurnConnection(this.browserInfo),this.onlineCheck=new _onlineCheck.OnlineCheck,this.callsInProgress=0,this.turnTests=[TEST_NAMES.RTT,TEST_NAMES.THROUGHPUT],this.active=!1,this.rtt=null,this.resultsHandler=null}return _createClass(t,[{key:\"start\",value:function(t,e){if(this.browserInfo.browserName!==_detectbrowser.Constants.browserName.msie&&(!window||!window.csioReactNative)&&(this.iceServers=t,this.callback=e,!this.active&&!(this.callsInProgress>0)&&t)){this.turnTestCounter=0,this.resultsHandler=new _resultsHandler.ResultsHandler;var s={type:\"browser\",os:this.browserInfo.os,osVersion:this.browserInfo.osVersion,buildName:this.browserInfo.browserName,buildVersion:this.browserInfo.browserVersion};this.resultsHandler.add(\"endpointInfo\",s),this.onlineCheck.start(),this.active=!0,this._start()}}},{key:\"_start\",value:function(){var t=this;this.active&&this.turnConnection.connect(this.iceServers).then(function(){t.active&&t.startTurnTests().then(function(){t.stop()},function(e){t.stop()})},function(e){t.resultsHandler.failure(e),t.resultsHandler.getFailureNumber()>=FAILURE_RETRIES?t.stop():(t.turnConnection.disconnect(),setTimeout(function(){t._start()},0))})}},{key:\"stop\",value:function(){var t=this;if(this.browserInfo.browserName!==_detectbrowser.Constants.browserName.msie&&this.active){this.active=!1,this.activeTurnTest&&this.activeTurnTest.forceStop();var e=this.onlineCheck.stop();this.resultsHandler.add(\"onlineStatus\",e),this.turnConnection.getIceResults().then(function(e){t.resultsHandler.add(\"ice\",e),t.turnConnection.disconnect(),t.sendResults()},function(e){t.resultsHandler.failure(e),t.turnConnection.disconnect(),t.sendResults()})}}},{key:\"sendResults\",value:function(){var t=this.resultsHandler.getResults();this.callback&&this.callback(t),this.resultsHandler=null}},{key:\"callStarts\",value:function(){this.callsInProgress+=1,this.stop()}},{key:\"callFinished\",value:function(){this.callsInProgress-=1}},{key:\"getId\",value:function(){return this.resultsHandler?this.resultsHandler.getId():null}},{key:\"crashDisconnect\",value:function(){try{this.turnConnection.disconnect()}catch(t){}}},{key:\"startTurnTests\",value:function(){var t=this;if(this.turnTestCounter>=this.turnTests.length)return new Promise(function(t,e){t()});var e=this.turnTests[this.turnTestCounter],s=null;switch(e){case TEST_NAMES.RTT:s=new _rttTest.RttTest(this.turnConnection);break;case TEST_NAMES.THROUGHPUT:s=new _throughputTest.ThroughputTest(this.turnConnection,this.rtt);break;default:return new Promise(function(t,s){s(new Error(\"Unknown test: \"+e))})}return this.activeTurnTest=s,this.active?s.start().then(function(){return t.handleTestResults(e,s.getResults()),t.turnTestCounter+=1,t.activeTurnTest=null,t.startTurnTests()},function(n){return t.handleTestResults(e,s.getResults(),n),t.turnTestCounter+=1,t.activeTurnTest=null,t.startTurnTests()}):new Promise(function(t,e){e(new Error(\"Test trying to start while testing is not active\"))})}},{key:\"handleTestResults\",value:function(t,e){null==(arguments.length>2&&void 0!==arguments[2]?arguments[2]:null)&&t==TEST_NAMES.RTT&&(this.rtt=e.median),this.resultsHandler&&this.resultsHandler.add(t,e)}}]),t}();exports.PreCallTest=PreCallTest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/main.js\n// module id = 80\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.TurnConnection=void 0;var _createClass=function(){function e(e,t){for(var n=0;n<t.length;n++){var r=t[n];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(e,r.key,r)}}return function(t,n,r){return n&&e(t.prototype,n),r&&e(t,r),t}}(),_parsedIceCandidate=require(\"./utility/parsedIceCandidate\"),_getstatshandler=require(\"./utility/stats/getstatshandler\"),_detectbrowser=require(\"./utility/stats/detectbrowser\"),Promise=require(\"bluebird\"),ICE_CHECKING_TIMEOUT=1e4,CONNECTION_TIMEOUT=3e4,TurnConnection=function(){function e(t){_classCallCheck(this,e),this.reset(),this.statshandler=new _getstatshandler.GetStatsHandler(t)}return _createClass(e,[{key:\"reset\",value:function(){this.iceServers=null,this.pctpc1=null,this.pctpc2=null,this.sendChannel=null,this.messageCallback=null,this.errorCallback=null,this.parsedIceResults={}}},{key:\"setMessageCallback\",value:function(e){this.messageCallback=e}},{key:\"setErrorCallback\",value:function(e){this.errorCallback=e}},{key:\"send\",value:function(e){if(this.sendChannel)try{this.sendChannel.send(e)}catch(e){this.raiseSendError(e)}else this.raiseSendError(new Error(\"No send channel\"))}},{key:\"raiseSendError\",value:function(e){this.errorCallback&&this.errorCallback(e)}},{key:\"assignEvent\",value:function(e,t,n){e.addEventListener?e.addEventListener(t,n.bind(this),!1):e.attachEvent&&(t=\"on\"+t,e.attachEvent(t,n.bind(this)))}},{key:\"connect\",value:function(e){var t=this;this.reset();var n=new Promise(function(e,n){t.resolveCb=e,t.rejectCb=n});this.iceServers=e;var r=null;try{if(RTCPeerConnection?r=RTCPeerConnection:webkitRTCPeerConnection?r=webkitRTCPeerConnection:mozRTCPeerConnection?r=mozRTCPeerConnection:window&&window.RTCPeerConnection&&(r=window.RTCPeerConnection),!r)return this.rejectCb(new Error(\"RTCPeerConnection not found\")),n}catch(e){return this.rejectCb(e),n}var c={ordered:!1,maxRetransmits:0},a={iceTransportPolicy:\"all\",iceServers:this.iceServers};try{this.pctpc1=new r(a),this.pctpc2=new r(a)}catch(e){return this.rejectDisconnect(e),n}return this.connectionTimer=setTimeout(function(){delete t.connectionTimer,t.rejectDisconnect(new Error(\"Connection timeout\"))},CONNECTION_TIMEOUT),this.sendChannel=this.pctpc1.createDataChannel(\"precalltest\",c),this.sendChannel.binaryType=\"arraybuffer\",this.assignEvent(this.sendChannel,\"error\",function(e){t.raiseSendError(e),t.rejectDisconnect(e)}),this.assignEvent(this.pctpc2,\"datachannel\",function(e){var n=e.channel;t.assignEvent(n,\"open\",function(e){t.resolveCb&&t.resolveCb()}),t.assignEvent(n,\"close\",function(e){t&&t.disconnect&&t.disconnect()}),t.assignEvent(n,\"message\",function(e){t.messageCallback&&t.messageCallback(e.data)}),t.assignEvent(n,\"error\",function(e){t.errorCallback&&t.errorCallback(e),t.rejectDisconnect(e)})}),this.assignEvent(this.pctpc1,\"icecandidate\",function(e){t.onIceCandidate(t.pctpc1,e)}),this.assignEvent(this.pctpc1,\"iceconnectionstatechange\",function(e){t.onIceStateChange(t.pctpc1,e)}),this.assignEvent(this.pctpc2,\"icecandidate\",function(e){t.onIceCandidate(t.pctpc2,e)}),this.assignEvent(this.pctpc2,\"iceconnectionstatechange\",function(e){t.onIceStateChange(t.pctpc2,e)}),this.pctpc1.createOffer().then(function(e,n){t.onCreateOfferSuccess(e)},function(e){t.onCreateOfferError(t.pctpc1,e)}),n}},{key:\"rejectDisconnect\",value:function(e){this.rejectCb&&(this.rejectCb(e),this.disconnect())}},{key:\"disconnect\",value:function(){if(clearTimeout(this.connectionTimer),this.pctpc1)try{this.pctpc1.close()}catch(e){}if(this.pctpc1=null,this.pctpc2)try{this.pctpc2.close()}catch(e){}this.pctpc2=null,this.resolveCb=null,this.rejectCb=null}},{key:\"getName\",value:function(e){return e===this.pctpc1?\"pctpc1\":\"pctpc2\"}},{key:\"getOtherPc\",value:function(e){return e===this.pctpc1?this.pctpc2:this.pctpc1}},{key:\"onCreateOfferError\",value:function(e,t){this.rejectDisconnect(t)}},{key:\"onCreateAnswerError\",value:function(e,t){this.rejectDisconnect(t)}},{key:\"onCreateOfferSuccess\",value:function(e){var t=this;this.pctpc1.setLocalDescription(e).then(function(){t.onSetLocalSuccess(t.pctpc1)},function(e){t.onSetSessionDescriptionError(t.pctpc1,e)}),this.pctpc2.setRemoteDescription(e).then(function(){t.onSetRemoteSuccess(t.pctpc2)},function(e){t.onSetRemoteSessionDescriptionError(t.pctpc2,e)}),this.pctpc2.createAnswer().then(function(e){t.onCreateAnswerSuccess(e)},function(e){t.onCreateAnswerError(t.pctpc2,e)})}},{key:\"onSetLocalSuccess\",value:function(e){}},{key:\"onSetRemoteSuccess\",value:function(e){}},{key:\"onSetSessionDescriptionError\",value:function(e,t){this.rejectDisconnect(t)}},{key:\"onSetRemoteSessionDescriptionError\",value:function(e,t){this.rejectDisconnect(t)}},{key:\"onCreateAnswerSuccess\",value:function(e){var t=this;this.pctpc2.setLocalDescription(e).then(function(){t.onSetLocalSuccess(t.pctpc2)},function(e){t.onSetSessionDescriptionError(t.pctpc2,e)}),this.pctpc1.setRemoteDescription(e).then(function(){t.onSetRemoteSuccess(t.pctpc1)},function(e){t.onSetRemoteSessionDescriptionError(t.pctpc1,e)})}},{key:\"onIceCandidate\",value:function(e,t){var n=this;if(t.candidate){var r=new _parsedIceCandidate.ParsedIceCandidate(t.candidate);e==this.pctpc1&&this.statshandler.codeBase==_detectbrowser.Constants.codeBaseType.chrome&&(r.isRelay()&&(r.isTypeTransportUdp()&&(this.parsedIceResults.relayUdpGathered=!0),r.isTypeTransportTcp()&&(this.parsedIceResults.relayTcpGathered=!0),r.isTypeTransportTls()&&(this.parsedIceResults.relayTlsGathered=!0)),r.isServerReflexive()&&(this.parsedIceResults.srflxGathered=!0)),r.isRelay()&&this.getOtherPc(e).addIceCandidate(t.candidate).then(function(){n.onAddIceCandidateSuccess(e)},function(t){n.onAddIceCandidateError(e,t,r.isRelay())})}}},{key:\"onAddIceCandidateSuccess\",value:function(e){}},{key:\"onAddIceCandidateError\",value:function(e,t,n){n&&this.rejectDisconnect(t)}},{key:\"onIceStateChange\",value:function(e,t){var n=this,r=\"(?)\";e&&(r=e.iceConnectionState),\"failed\"===r&&this.rejectDisconnect(new Error(\"ICE failure\")),\"checking\"!==r||this.iceTimer||(this.iceTimer=setTimeout(function(){delete n.iceTimer,n.rejectDisconnect(new Error(\"ICE timeout\"))},ICE_CHECKING_TIMEOUT)),\"completed\"!==r&&\"connected\"!==r||delete this.iceTimer}},{key:\"getIceResults\",value:function(){var e=this;return new Promise(function(t,n){var r=e.iceServers,c=!0,a=!1,i=void 0;try{for(var s,o=r[Symbol.iterator]();!(c=(s=o.next()).done);c=!0){var l=s.value;r.hasOwnProperty(l)||delete l.credential}}catch(e){a=!0,i=e}finally{try{!c&&o.return&&o.return()}finally{if(a)throw i}}var d={turnIpAddress:\"\",turnIpVersion:\"\",turnTransport:\"\",iceServers:r,ipv6Supported:!1,ipv4Supported:!1,relayTlsGathered:!1,relayTcpGathered:!1,relayUdpGathered:!1,srflxGathered:!1,relayTlsSuccess:!1,relayTcpSuccess:!1,relayUdpSuccess:!1,srflxSuccess:!1};for(var u in e.parsedIceResults)e.parsedIceResults.hasOwnProperty(u)&&(d[u]=e.parsedIceResults[u]);e.pctpc1?e.statshandler.getIceCandidates(e.pctpc1).then(function(e){var n=!0,r=!1,c=void 0;try{for(var a,i=e.iceCandidatePairs[Symbol.iterator]();!(n=(a=i.next()).done);n=!0){var s=a.value;if(s.googActiveConnection||s.selected){var o=!0,l=!1,u=void 0;try{for(var p,h=e.localCandidates[Symbol.iterator]();!(o=(p=h.next()).done);o=!0){var f=p.value,y=null;if(y=f.ip?f.ip:f.ipAddress,f.id==s.localCandidateId){d.turnIpAddress=y;var v=-1!==y.indexOf(\":\");d.turnIpVersion=v?\"ipv6\":\"ipv4\",d.turnTransport=f.mozLocalTransport,!0}\"relay\"!==f.candidateType&&\"relayed\"!==f.candidateType||(\"udp\"===f.mozLocalTransport&&(d.relayUdpSuccess=!0),\"tcp\"===f.mozLocalTransport&&(d.relayTcpSuccess=!0),\"tls\"===f.mozLocalTransport&&(d.relayTlsSuccess=!0)),-1!==y.indexOf(\":\")?d.ipv6Supported=!0:d.ipv4Supported=!0}}catch(e){l=!0,u=e}finally{try{!o&&h.return&&h.return()}finally{if(l)throw u}}}}}catch(e){r=!0,c=e}finally{try{!n&&i.return&&i.return()}finally{if(r)throw c}}var C=!0,T=!1,S=void 0;try{for(var m,E=e.localCandidates[Symbol.iterator]();!(C=(m=E.next()).done);C=!0){var b=m.value;\"relay\"!==b.candidateType&&\"relayed\"!==b.candidateType||(\"udp\"===b.mozLocalTransport&&(d.relayUdpGathered=!0),\"tcp\"===b.mozLocalTransport&&(d.relayTcpGathered=!0),\"tls\"===b.mozLocalTransport&&(d.relayTlsGathered=!0)),\"srflx\"!==b.candidateType&&\"serverreflexive\"!==b.candidateType||(d.srflxGathered=!0)}}catch(e){T=!0,S=e}finally{try{!C&&E.return&&E.return()}finally{if(T)throw S}}var I=!0,k=!1,w=void 0;try{for(var g,R=e.iceCandidatePairs[Symbol.iterator]();!(I=(g=R.next()).done);I=!0){var D=g.value;if(\"succeeded\"===D.state){var P=!0,x=!1,j=void 0;try{for(var O,_=e.localCandidates[Symbol.iterator]();!(P=(O=_.next()).done);P=!0){var L=O.value;L.id==D.localCandidateId&&(\"relay\"!==L.candidateType&&\"relayed\"!==L.candidateType||(\"udp\"===L.mozLocalTransport&&(d.relayUdpSuccess=!0),\"tcp\"===L.mozLocalTransport&&(d.relayTcpSuccess=!0),\"tls\"===L.mozLocalTransport&&(d.relayTlsSuccess=!0)),\"srflx\"!==L.candidateType&&\"serverreflexive\"!==L.candidateType||(d.srflxSuccess=!0))}}catch(e){x=!0,j=e}finally{try{!P&&_.return&&_.return()}finally{if(x)throw j}}}}}catch(e){k=!0,w=e}finally{try{!I&&R.return&&R.return()}finally{if(k)throw w}}t(d)},function(e){n(e)}):n(new Error(\"PC not available for stats\"))},function(e){reject(e)})}}]),e}();exports.TurnConnection=TurnConnection;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/turnConnection.js\n// module id = 81\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0});var _createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var n=t[r];n.enumerable=n.enumerable||!1,n.configurable=!0,\"value\"in n&&(n.writable=!0),Object.defineProperty(e,n.key,n)}}return function(t,r,n){return r&&e(t.prototype,r),n&&e(t,n),t}}(),ParsedIceCandidate=function(){function e(t){_classCallCheck(this,e),this.iceCandidateStr=t.candidate,this.parse()}return _createClass(e,[{key:\"parse\",value:function(){var e=this.iceCandidateStr.split(\" \");e.length<8||(this.protocol=\"1\"===e[1]?\"rtp\":\"rtcp\",this.transport=e[2],this.typeTransport=this.extractTypeTransport(e[3]),this.ipv6=-1!==e[4].indexOf(\":\"),this.ipAddress=e[4],this.port=e[5],this.type=e[7])}},{key:\"extractTypeTransport\",value:function(e){var t=\"None\",r=e>>24;if(\"rtp\"===this.protocol&&r>=0&&r<=2)switch(r){case 0:t=\"TLS\";break;case 1:t=\"TCP\";break;case 2:t=\"UDP\"}return t}},{key:\"getString\",value:function(){return this.iceCandidateStr}},{key:\"getType\",value:function(){return this.type}},{key:\"isHost\",value:function(){return\"host\"===this.type.toLowerCase()}},{key:\"isServerReflexive\",value:function(){return\"srflx\"===this.type.toLowerCase()}},{key:\"isPeerReflexive\",value:function(){return\"prflx\"===this.type.toLowerCase()}},{key:\"isRelay\",value:function(){return\"relay\"===this.type.toLowerCase()||\"relayed\"===this.type.toLowerCase()}},{key:\"getTypeTransport\",value:function(){return this.typeTransport}},{key:\"isTypeTransportUdp\",value:function(){return\"UDP\"===this.typeTransport}},{key:\"isTypeTransportTcp\",value:function(){return\"TCP\"===this.typeTransport}},{key:\"isTypeTransportTls\",value:function(){return\"TLS\"===this.typeTransport}},{key:\"getTransport\",value:function(){return this.transport}},{key:\"isUdp\",value:function(){return\"udp\"===this.transport.toLowerCase()}},{key:\"isTcp\",value:function(){return\"tcp\"===this.transport.toLowerCase()}},{key:\"getProtocol\",value:function(){return this.protocol}},{key:\"isRtp\",value:function(){return\"rtp\"===this.protocol}},{key:\"isRtcp\",value:function(){return\"rtcp\"===this.protocol}},{key:\"isIpv6\",value:function(){return this.ipv6}},{key:\"getIpAddress\",value:function(){return this.ipAddress}},{key:\"getPort\",value:function(){return this.port}}]),e}();exports.ParsedIceCandidate=ParsedIceCandidate;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/utility/parsedIceCandidate.js\n// module id = 82\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.GetStatsHandler=void 0;var _createClass=function(){function t(t,e){for(var s=0;s<e.length;s++){var a=e[s];a.enumerable=a.enumerable||!1,a.configurable=!0,\"value\"in a&&(a.writable=!0),Object.defineProperty(t,a.key,a)}}return function(e,s,a){return s&&t(e.prototype,s),a&&t(e,a),e}}(),_detectbrowser=require(\"./detectbrowser\"),_statsadapter=require(\"./statsadapter\"),Promise=require(\"bluebird\"),GetStatsHandler=function(){function t(e){_classCallCheck(this,t),this.codeBase=e.codeBase,this.browserName=e.browserName,this.adapter=new _statsadapter.StatsAdapter(this.codeBase,this.browserName),this.isPromiseBased=!0}return _createClass(t,[{key:\"getIceCandidates\",value:function(t){var e=this;return new Promise(function(s,a){e.csioGetStats(e.iceCandidatesHandler.bind(e),t,function(t){s(t)})})}},{key:\"iceCandidatesHandler\",value:function(t,e){e(this.adapter.getIceCandidates(t))}},{key:\"csioGetStats\",value:function(t,e,s){var a=_detectbrowser.Constants.codeBaseType.firefox,n=_detectbrowser.Constants.codeBaseType.chrome,i=_detectbrowser.Constants.codeBaseType.edge,r=_detectbrowser.Constants.browserName.safari;e&&(this.codeBase===a?this.getStatsFirefox(t,e,s):this.browserName===r?this.getStatsSafari(t,e,s):this.codeBase===n?this.getStatsChrome(t,e,s):this.codeBase===i&&this.getStatsEdge(t,e,s))}},{key:\"getStatsFirefox\",value:function(t,e,s){var a=this;if(a.isPromiseBased)try{e.getStats().then(function(e){t(e,s)}).catch(function(n){a.isPromiseBased=!1,e.getStats(null,function(e){t(e,s)},function(){})})}catch(n){a.isPromiseBased=!1,e.getStats(null,function(e){t(e,s)},function(){})}else e.getStats(null,function(e){t(e,s)},function(){})}},{key:\"getStatsChrome\",value:function(t,e,s){var a=this;if(window&&window.csioReactNative)e.getStats(null,function(e){t(e,s)},function(t){});else if(a.isPromiseBased)try{e.getStats().then(function(e){t(e,s)}).catch(function(n){a.isPromiseBased=!1,e.getStats(function(e){t(e,s)})})}catch(a){isPromiseBased=!1,e.getStats(function(e){t(e,s)})}else e.getStats(function(e){t(e,s)})}},{key:\"getStatsEdge\",value:function(t,e,s){e.getStats().then(function(e){t(e,s)}).catch(function(t){})}},{key:\"getStatsSafari\",value:function(t,e,s){e.getStats().then(function(e){t(e,s)}).catch(function(t){})}}]),t}();exports.GetStatsHandler=GetStatsHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/utility/stats/getstatshandler.js\n// module id = 83\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.StatsAdapter=void 0;var _createClass=function(){function t(t,e){for(var a=0;a<e.length;a++){var r=e[a];r.enumerable=r.enumerable||!1,r.configurable=!0,\"value\"in r&&(r.writable=!0),Object.defineProperty(t,r.key,r)}}return function(e,a,r){return a&&t(e.prototype,a),r&&t(e,r),e}}(),_detectbrowser=require(\"./detectbrowser\"),StatsAdapter=function(){function t(e,a){_classCallCheck(this,t),this.codeBase=e,this.browser=a}return _createClass(t,[{key:\"getIceCandidates\",value:function(t){if(!t)return null;var e=this.extractRawStats(t);return this.processRawStatsForIceInfo(e)}},{key:\"extractRawStats\",value:function(t){var e=[],a=void 0,r=_detectbrowser.Constants.codeBaseType.firefox,s=_detectbrowser.Constants.codeBaseType.chrome,o=_detectbrowser.Constants.browserName.safari;if(this.codeBase===r&&this.browser!==o)t.forEach(function(t){e.push(t)});else if(this.codeBase===s&&this.browser!==o)t&&t.result?e=t.result():t&&t.forEach&&(e=[],t.forEach(function(t){e.push(t)}));else for(a in t)t.hasOwnProperty(a)&&e.push(t[a]);return e}},{key:\"processRawStatsForIceInfo\",value:function(t){var e=[],a=[],r=[],s=void 0;if(!t)return null;for(var o=0;o<t.length;++o){var n=this.getParsedStats(t[o]),i=this.statsClassifier(n);if(i.candidatePair)r.push(i.candidatePair);else if(i.transportStats){if(\"transport\"===i.transportStats.type){s=i.transportStats.selectedCandidatePairId;continue}r.push(i.transportStats)}else if(i.localCandidate){var c=i.localCandidate;if(\"relay\"==c.candidateType||\"relayed\"==c.candidateType){if(!c.mozLocalTransport){var d=c.priority>>24;c.mozLocalTransport=this.formatRelayType(d)}c.mozLocalTransport=c.mozLocalTransport.toLowerCase()}e.push(c)}else i.remoteCandidate&&a.push(i.remoteCandidate)}if(s)for(var l=0;l<r.length;++l)r[l].id===s&&(r[l].googActiveConnection=\"true\");return{localCandidates:e,remoteCandidates:a,iceCandidatePairs:r}}},{key:\"getParsedStats\",value:function(t){var e={};if(t.timestamp instanceof Date&&(e.timestamp=t.timestamp.getTime().toString()),t.type&&(e.type=t.type),t.names)for(var a=t.names(),r=0;r<a.length;++r)e[a[r]]=t.stat(a[r]);else Object.assign(e,t);if(e.values){var s=!0,o=!1,n=void 0;try{for(var i,c=e.values[Symbol.iterator]();!(s=(i=c.next()).done);s=!0){var d=i.value;Object.assign(e,d)}}catch(t){o=!0,n=t}finally{try{!s&&c.return&&c.return()}finally{if(o)throw n}}delete e.values}return e}},{key:\"statsClassifier\",value:function(t){var e={},a=function(){for(var e=arguments.length,a=Array(e),r=0;r<e;r++)a[r]=arguments[r];var s=!0,o=!1,n=void 0;try{for(var i,c=a[Symbol.iterator]();!(s=(i=c.next()).done);s=!0){var d=i.value;if(t.type===d)return!0}}catch(t){o=!0,n=t}finally{try{!s&&c.return&&c.return()}finally{if(o)throw n}}return!1},r=a(\"inbound-rtp\",\"inboundrtp\"),s=\"true\"===t.isRemote||!0===t.isRemote;return r||a(\"outbound-rtp\",\"outboundrtp\")?(e.tracks={},e.tracks.data=t,e.tracks.ssrc=t.ssrc,e.tracks.streamType=r?\"inbound\":\"outbound\",e.tracks.reportType=\"local\",void 0!==t.isRemote&&(e.tracks.reportType=s?\"remote\":\"local\")):a(\"candidatepair\")&&t.selected?e.transportStats=t:a(\"localcandidate\",\"local-candidate\")?e.localCandidate=t:a(\"remotecandidate\",\"remote-candidate\")?e.remoteCandidate=t:a(\"transport\",\"googCandidatePair\")?e.transportStats=t:a(\"VideoBwe\")?e.bwe=t:a(\"track\")?e.trackStats=t:a(\"candidate-pair\")?e.candidatePair=t:a(\"codec\")?e.codec=t:a(\"ssrc\")&&(e.tracks={},e.tracks.data=t,e.tracks.ssrc=t.ssrc,e.tracks.reportType=\"local\",e.tracks.streamType=t.bytesSent?\"outbound\":\"inbound\"),e}},{key:\"formatRelayType\",value:function(t){var e=\"none\";switch(t){case 0:e=\"tls\";break;case 1:e=\"tcp\";break;case 2:e=\"udp\"}return e}}]),t}();exports.StatsAdapter=StatsAdapter;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/utility/stats/statsadapter.js\n// module id = 84\n// module chunks = 0","(function (global, undefined) {\n    \"use strict\";\n\n    if (global.setImmediate) {\n        return;\n    }\n\n    var nextHandle = 1; // Spec says greater than zero\n    var tasksByHandle = {};\n    var currentlyRunningATask = false;\n    var doc = global.document;\n    var registerImmediate;\n\n    function setImmediate(callback) {\n      // Callback can either be a function or a string\n      if (typeof callback !== \"function\") {\n        callback = new Function(\"\" + callback);\n      }\n      // Copy function arguments\n      var args = new Array(arguments.length - 1);\n      for (var i = 0; i < args.length; i++) {\n          args[i] = arguments[i + 1];\n      }\n      // Store and register the task\n      var task = { callback: callback, args: args };\n      tasksByHandle[nextHandle] = task;\n      registerImmediate(nextHandle);\n      return nextHandle++;\n    }\n\n    function clearImmediate(handle) {\n        delete tasksByHandle[handle];\n    }\n\n    function run(task) {\n        var callback = task.callback;\n        var args = task.args;\n        switch (args.length) {\n        case 0:\n            callback();\n            break;\n        case 1:\n            callback(args[0]);\n            break;\n        case 2:\n            callback(args[0], args[1]);\n            break;\n        case 3:\n            callback(args[0], args[1], args[2]);\n            break;\n        default:\n            callback.apply(undefined, args);\n            break;\n        }\n    }\n\n    function runIfPresent(handle) {\n        // From the spec: \"Wait until any invocations of this algorithm started before this one have completed.\"\n        // So if we're currently running a task, we'll need to delay this invocation.\n        if (currentlyRunningATask) {\n            // Delay by doing a setTimeout. setImmediate was tried instead, but in Firefox 7 it generated a\n            // \"too much recursion\" error.\n            setTimeout(runIfPresent, 0, handle);\n        } else {\n            var task = tasksByHandle[handle];\n            if (task) {\n                currentlyRunningATask = true;\n                try {\n                    run(task);\n                } finally {\n                    clearImmediate(handle);\n                    currentlyRunningATask = false;\n                }\n            }\n        }\n    }\n\n    function installNextTickImplementation() {\n        registerImmediate = function(handle) {\n            process.nextTick(function () { runIfPresent(handle); });\n        };\n    }\n\n    function canUsePostMessage() {\n        // The test against `importScripts` prevents this implementation from being installed inside a web worker,\n        // where `global.postMessage` means something completely different and can't be used for this purpose.\n        if (global.postMessage && !global.importScripts) {\n            var postMessageIsAsynchronous = true;\n            var oldOnMessage = global.onmessage;\n            global.onmessage = function() {\n                postMessageIsAsynchronous = false;\n            };\n            global.postMessage(\"\", \"*\");\n            global.onmessage = oldOnMessage;\n            return postMessageIsAsynchronous;\n        }\n    }\n\n    function installPostMessageImplementation() {\n        // Installs an event handler on `global` for the `message` event: see\n        // * https://developer.mozilla.org/en/DOM/window.postMessage\n        // * http://www.whatwg.org/specs/web-apps/current-work/multipage/comms.html#crossDocumentMessages\n\n        var messagePrefix = \"setImmediate$\" + Math.random() + \"$\";\n        var onGlobalMessage = function(event) {\n            if (event.source === global &&\n                typeof event.data === \"string\" &&\n                event.data.indexOf(messagePrefix) === 0) {\n                runIfPresent(+event.data.slice(messagePrefix.length));\n            }\n        };\n\n        if (global.addEventListener) {\n            global.addEventListener(\"message\", onGlobalMessage, false);\n        } else {\n            global.attachEvent(\"onmessage\", onGlobalMessage);\n        }\n\n        registerImmediate = function(handle) {\n            global.postMessage(messagePrefix + handle, \"*\");\n        };\n    }\n\n    function installMessageChannelImplementation() {\n        var channel = new MessageChannel();\n        channel.port1.onmessage = function(event) {\n            var handle = event.data;\n            runIfPresent(handle);\n        };\n\n        registerImmediate = function(handle) {\n            channel.port2.postMessage(handle);\n        };\n    }\n\n    function installReadyStateChangeImplementation() {\n        var html = doc.documentElement;\n        registerImmediate = function(handle) {\n            // Create a <script> element; its readystatechange event will be fired asynchronously once it is inserted\n            // into the document. Do so, thus queuing up the task. Remember to clean up once it's been called.\n            var script = doc.createElement(\"script\");\n            script.onreadystatechange = function () {\n                runIfPresent(handle);\n                script.onreadystatechange = null;\n                html.removeChild(script);\n                script = null;\n            };\n            html.appendChild(script);\n        };\n    }\n\n    function installSetTimeoutImplementation() {\n        registerImmediate = function(handle) {\n            setTimeout(runIfPresent, 0, handle);\n        };\n    }\n\n    // If supported, we should attach to the prototype of global, since that is where setTimeout et al. live.\n    var attachTo = Object.getPrototypeOf && Object.getPrototypeOf(global);\n    attachTo = attachTo && attachTo.setTimeout ? attachTo : global;\n\n    // Don't get fooled by e.g. browserify environments.\n    if ({}.toString.call(global.process) === \"[object process]\") {\n        // For Node.js before 0.9\n        installNextTickImplementation();\n\n    } else if (canUsePostMessage()) {\n        // For non-IE10 modern browsers\n        installPostMessageImplementation();\n\n    } else if (global.MessageChannel) {\n        // For web workers, where supported\n        installMessageChannelImplementation();\n\n    } else if (doc && \"onreadystatechange\" in doc.createElement(\"script\")) {\n        // For IE 6–8\n        installReadyStateChangeImplementation();\n\n    } else {\n        // For older browsers\n        installSetTimeoutImplementation();\n    }\n\n    attachTo.setImmediate = setImmediate;\n    attachTo.clearImmediate = clearImmediate;\n}(typeof self === \"undefined\" ? typeof global === \"undefined\" ? this : global : self));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/setimmediate/setImmediate.js\n// module id = 85\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _interopRequireWildcard(t){if(t&&t.__esModule)return t;var e={};if(null!=t)for(var s in t)Object.prototype.hasOwnProperty.call(t,s)&&(e[s]=t[s]);return e.default=t,e}function _classCallCheck(t,e){if(!(t instanceof e))throw new TypeError(\"Cannot call a class as a function\")}function _possibleConstructorReturn(t,e){if(!t)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!e||\"object\"!=typeof e&&\"function\"!=typeof e?t:e}function _inherits(t,e){if(\"function\"!=typeof e&&null!==e)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof e);t.prototype=Object.create(e&&e.prototype,{constructor:{value:t,enumerable:!1,writable:!0,configurable:!0}}),e&&(Object.setPrototypeOf?Object.setPrototypeOf(t,e):t.__proto__=e)}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.RttTest=void 0;var _createClass=function(){function t(t,e){for(var s=0;s<e.length;s++){var i=e[s];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(t,i.key,i)}}return function(e,s,i){return s&&t(e.prototype,s),i&&t(e,i),e}}(),_get=function t(e,s,i){null===e&&(e=Function.prototype);var r=Object.getOwnPropertyDescriptor(e,s);if(void 0===r){var n=Object.getPrototypeOf(e);return null===n?void 0:t(n,s,i)}if(\"value\"in r)return r.value;var u=r.get;if(void 0!==u)return u.call(i)},_timestamps=require(\"../utility/timestamps\"),Timestamps=_interopRequireWildcard(_timestamps),_turnTest=require(\"./turnTest\"),RTTSAMPLES=10,TIMEOUT=100,LAST_TIMEOUT=500,RttTest=function(t){function e(t){_classCallCheck(this,e);var s=_possibleConstructorReturn(this,(e.__proto__||Object.getPrototypeOf(e)).call(this,t));return s.sendTimer=null,s.countSent=0,s.rtts=[],s}return _inherits(e,_turnTest.TurnTest),_createClass(e,[{key:\"initiate\",value:function(){this.results.startTimestamp=Timestamps.getCurrent(),this.sendPing()}},{key:\"handleMessage\",value:function(t){if(this.isActive()){var e=parseInt(t,10),s=this.calculateRtt(e);this.rtts.push(s),this.countSent<RTTSAMPLES?this.sendPing():this.calculateMetrics()}}},{key:\"handleError\",value:function(t){this.fillResults(),this.failed(t)}},{key:\"sendPing\",value:function(){if(this.isActive()){var t=Timestamps.getCurrent();this.send(t.toString()),this.countSent+=1,this.sendTimer&&(clearTimeout(this.sendTimer),this.sendTimer=null),this.countSent<RTTSAMPLES?this.sendTimer=setTimeout(this.sendPing.bind(this),TIMEOUT):this.sendTimer=setTimeout(this.calculateMetrics.bind(this),LAST_TIMEOUT)}}},{key:\"calculateRtt\",value:function(t){return Timestamps.getCurrent()-t}},{key:\"calculateMetrics\",value:function(){this.sendTimer&&(clearTimeout(this.sendTimer),this.sendTimer=null),this.fillResults(),this.finished()}},{key:\"fillResults\",value:function(){this.results.sentMessages=this.countSent,this.results.unAckedMessages=this.countSent-this.rtts.length,this.results.maxMessages=RTTSAMPLES,this.results.forceStopped=this.forceStopped,this.results.median=this.median(),this.results.variance=this.variance(),this.results.endTimestamp=Timestamps.getCurrent()}},{key:\"median\",value:function(){if(0==this.rtts.length)return null;this.rtts.sort();var t=Math.floor(this.rtts.length/2);return this.rtts[t]}},{key:\"variance\",value:function(){if(0==this.rtts.length)return null;var t=0,e=this.median(),s=!0,i=!1,r=void 0;try{for(var n,u=this.rtts[Symbol.iterator]();!(s=(n=u.next()).done);s=!0){var o=n.value;t+=Math.abs(o-e)}}catch(t){i=!0,r=t}finally{try{!s&&u.return&&u.return()}finally{if(i)throw r}}return t/=this.rtts.length}},{key:\"stop\",value:function(){this.isActive()&&(_get(e.prototype.__proto__||Object.getPrototypeOf(e.prototype),\"stop\",this).call(this),this.fillResults())}}]),e}();exports.RttTest=RttTest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/tests/rttTest.js\n// module id = 86\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var s in e)Object.prototype.hasOwnProperty.call(e,s)&&(t[s]=e[s]);return t.default=e,t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}function _possibleConstructorReturn(e,t){if(!e)throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\");return!t||\"object\"!=typeof t&&\"function\"!=typeof t?e:t}function _inherits(e,t){if(\"function\"!=typeof t&&null!==t)throw new TypeError(\"Super expression must either be null or a function, not \"+typeof t);e.prototype=Object.create(t&&t.prototype,{constructor:{value:e,enumerable:!1,writable:!0,configurable:!0}}),t&&(Object.setPrototypeOf?Object.setPrototypeOf(e,t):e.__proto__=t)}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.ThroughputTest=void 0;var _createClass=function(){function e(e,t){for(var s=0;s<t.length;s++){var i=t[s];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(t,s,i){return s&&e(t.prototype,s),i&&e(t,i),t}}(),_get=function e(t,s,i){null===t&&(t=Function.prototype);var r=Object.getOwnPropertyDescriptor(t,s);if(void 0===r){var n=Object.getPrototypeOf(t);return null===n?void 0:e(n,s,i)}if(\"value\"in r)return r.value;var a=r.get;if(void 0!==a)return a.call(i)},_timestamps=require(\"../utility/timestamps\"),Timestamps=_interopRequireWildcard(_timestamps),_messageMaker=require(\"../utility/messageMaker\"),_turnTest=require(\"./turnTest\"),ThroughputTest=function(e){function t(e,s){_classCallCheck(this,t);var i=_possibleConstructorReturn(this,(t.__proto__||Object.getPrototypeOf(t)).call(this,e));if(i.sentBytes=0,i.receivedBytes=0,i.secondHalfBytes=0,i.secondHalfStart=null,i.bufferEmpty=0,i.chunkSize=1200,i.messageMaker=new _messageMaker.MessageMaker(i.chunkSize),i.duration=5e3,null!=s){var r=50*s;i.duration=Math.max(Math.min(r,1e4),1e3)}return i.sendTimer=null,i.lastMessage=null,i.intervals=[],i.intervalStart=0,i.intervalLength=100,i.intervalBytes=0,i}return _inherits(t,_turnTest.TurnTest),_createClass(t,[{key:\"initiate\",value:function(){this.startSend()}},{key:\"handleMessage\",value:function(e){var t=this;if(this.isActive()){this.lastMessage=e,this.receivedBytes+=e.length;var s=Timestamps.getCurrent();if(this.sendTimer||(this.results.startTimestamp=s,this.sendTimer=setTimeout(function(){t.stop(),t.finished()},this.duration)),0==this.intervalStart&&(this.intervalStart=s),this.intervalBytes+=e.length,s-this.intervalStart>=this.intervalLength){var i=s-this.intervalStart,r=this.averageThroughput(this.intervalBytes,i),n=null;try{n=s-JSON.parse(this.lastMessage).timestamp}catch(e){}this.intervals.push({startTimestamp:this.intervalStart,endTimestamp:s,bytesReceived:this.intervalBytes,average:r,rtt:n}),this.intervalStart=s,this.intervalBytes=0}this.results.startTimestamp&&s-this.results.startTimestamp>this.duration/2&&(this.secondHalfStart||(this.secondHalfStart=s),this.secondHalfBytes+=e.length)}}},{key:\"handleError\",value:function(e){this.stop(),this.failed(e)}},{key:\"averageThroughput\",value:function(e,t){return e/(t/1e3)*8/1024}},{key:\"bufferListener\",value:function(){this.sendChannel.removeEventListener(\"bufferedamountlow\",this.bufferListener.bind(this)),this.fillBuffer()}},{key:\"fillBuffer\",value:function(){for(0==this.sendChannel.bufferedAmount&&(this.bufferEmpty+=1);this.isActive();){if(this.sendChannel.bufferedAmount>this.bufferFullThreshold)return void(this.usePolling?setTimeout(this.fillBuffer.bind(this),250):this.sendChannel.addEventListener(\"bufferedamountlow\",this.bufferListener.bind(this)));var e=this.messageMaker.make(this.sentBytes);this.sentBytes+=e.length,this.send(e)}this.sendChannel.removeEventListener(\"bufferedamountlow\",this.bufferListener.bind(this))}},{key:\"startSend\",value:function(){this.isActive()&&(this.bufferFullThreshold=1e3*this.chunkSize,this.sendChannel=this.connection.sendChannel,this.usePolling=!0,\"number\"==typeof this.sendChannel.bufferedAmountLowThreshold&&(this.usePolling=!1,this.sendChannel.bufferedAmountLowThreshold=this.bufferFullThreshold/10),setTimeout(this.fillBuffer.bind(this),0))}},{key:\"fillResults\",value:function(){this.results.endTimestamp=Timestamps.getCurrent(),this.results.maxDuration=this.duration,this.results.forceStopped=this.forceStopped,this.results.bufferEmpty=this.bufferEmpty,this.results.intervals=this.intervals,this.results.bytesPrepared=this.sentBytes,this.results.bytesReceived=this.receivedBytes;var e=0,t=0;this.secondHalfStart&&(e=this.results.endTimestamp-this.secondHalfStart,t=this.averageThroughput(this.secondHalfBytes,e));var s=this.results.endTimestamp-this.results.startTimestamp,i=this.averageThroughput(this.receivedBytes,s);i>t&&(t=i),this.results.average=t;var r=null;try{r=JSON.parse(this.lastMessage)}catch(e){return}if(r){var n=r.sentBytes+this.lastMessage.length;this.results.bytesSent=n,this.results.fractionLostBytes=1-this.receivedBytes/n}else this.results.bytesSent=-1,this.results.fractionLostBytes=-1}},{key:\"stop\",value:function(){this.isActive()&&(clearTimeout(this.sendTimer),this.sendTimer=null,_get(t.prototype.__proto__||Object.getPrototypeOf(t.prototype),\"stop\",this).call(this),this.fillResults())}}]),t}();exports.ThroughputTest=ThroughputTest;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/tests/throughputTest.js\n// module id = 87\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var r in e)Object.prototype.hasOwnProperty.call(e,r)&&(t[r]=e[r]);return t.default=e,t}function _classCallCheck(e,t){if(!(e instanceof t))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.ResultsHandler=void 0;var _typeof=\"function\"==typeof Symbol&&\"symbol\"==typeof Symbol.iterator?function(e){return typeof e}:function(e){return e&&\"function\"==typeof Symbol&&e.constructor===Symbol&&e!==Symbol.prototype?\"symbol\":typeof e},_createClass=function(){function e(e,t){for(var r=0;r<t.length;r++){var s=t[r];s.enumerable=s.enumerable||!1,s.configurable=!0,\"value\"in s&&(s.writable=!0),Object.defineProperty(e,s.key,s)}}return function(t,r,s){return r&&e(t.prototype,r),s&&e(t,s),t}}(),_timestamps=require(\"./timestamps\"),Timestamps=_interopRequireWildcard(_timestamps),_messageMaker=require(\"./messageMaker\"),ResultsHandler=function(){function e(){_classCallCheck(this,e),this.start=Timestamps.getCurrent(),this.id=Math.trunc(this.start)+\"-\"+(0,_messageMaker.randomAsciiString)(20),this.version=\"1.1.4\",this.failures=[],this.results={},this.forceStopped=!1}return _createClass(e,[{key:\"getResults\",value:function(){return{id:this.id,version:this.version,forceStopped:this.forceStopped,startTimestamp:this.start,endTimestamp:Timestamps.getCurrent(),failures:this.failures,tests:this.results}}},{key:\"getFailureNumber\",value:function(){return this.failures.length}},{key:\"getId\",value:function(){return this.id}},{key:\"add\",value:function(e,t){this.results[e]=t,t.forceStopped&&!0===t.forceStopped&&(this.forceStopped=!0)}},{key:\"failure\",value:function(e){\"object\"===(void 0===e?\"undefined\":_typeof(e))&&(e=e.toString());var t={timestamp:Timestamps.getCurrent(),reason:e};this.failures.push(t)}}]),e}();exports.ResultsHandler=ResultsHandler;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/utility/resultsHandler.js\n// module id = 88\n// module chunks = 0","/*! precalltest  version = 1.1.4 2017-11-15 */\n\n\"use strict\";function _interopRequireWildcard(e){if(e&&e.__esModule)return e;var n={};if(null!=e)for(var t in e)Object.prototype.hasOwnProperty.call(e,t)&&(n[t]=e[t]);return n.default=e,n}function _classCallCheck(e,n){if(!(e instanceof n))throw new TypeError(\"Cannot call a class as a function\")}Object.defineProperty(exports,\"__esModule\",{value:!0}),exports.OnlineCheck=void 0;var _createClass=function(){function e(e,n){for(var t=0;t<n.length;t++){var i=n[t];i.enumerable=i.enumerable||!1,i.configurable=!0,\"value\"in i&&(i.writable=!0),Object.defineProperty(e,i.key,i)}}return function(n,t,i){return t&&e(n.prototype,t),i&&e(n,i),n}}(),_timestamps=require(\"./timestamps\"),Timestamps=_interopRequireWildcard(_timestamps),OnlineCheck=function(){function e(){_classCallCheck(this,e)}return _createClass(e,[{key:\"start\",value:function(){var e=this;this.onlineCheck=[],window&&window.addEventListener&&\"function\"==typeof window.addEventListener&&(window.addEventListener(\"offline\",function(){e.addEntry()}),window.addEventListener(\"online\",function(){e.addEntry()}),this.addEntry())}},{key:\"addEntry\",value:function(){var e=Timestamps.getCurrent();if(navigator&&navigator.onLine){var n=navigator.onLine;this.onlineCheck.push({timestamp:e,online:n})}}},{key:\"stop\",value:function(){var e=this;return window.removeEventListener(\"offline\",function(){e.addEntry()}),window.removeEventListener(\"online\",function(){e.addEntry()}),this.onlineCheck}}]),e}();exports.OnlineCheck=OnlineCheck;\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/precalltest/dist/utility/onlineCheck.js\n// module id = 89\n// module chunks = 0","import RTCBrowserType from '../RTC/RTCBrowserType';\nimport * as StatisticsEvents from '../../service/statistics/Events';\n\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/* Whether we support the browser we are running into for logging statistics */\nconst browserSupported = RTCBrowserType.isChrome()\n        || RTCBrowserType.isOpera() || RTCBrowserType.isFirefox()\n        || RTCBrowserType.isNWJS() || RTCBrowserType.isElectron()\n        || RTCBrowserType.isTemasysPluginUsed() || RTCBrowserType.isEdge();\n\n/**\n * The lib-jitsi-meet browser-agnostic names of the browser-specific keys\n * reported by RTCPeerConnection#getStats mapped by RTCBrowserType.\n */\nconst KEYS_BY_BROWSER_TYPE = {};\n\nKEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_FIREFOX] = {\n    'ssrc': 'ssrc',\n    'packetsReceived': 'packetsReceived',\n    'packetsLost': 'packetsLost',\n    'packetsSent': 'packetsSent',\n    'bytesReceived': 'bytesReceived',\n    'bytesSent': 'bytesSent',\n    'framerateMean': 'framerateMean'\n};\nKEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_CHROME] = {\n    'receiveBandwidth': 'googAvailableReceiveBandwidth',\n    'sendBandwidth': 'googAvailableSendBandwidth',\n    'remoteAddress': 'googRemoteAddress',\n    'transportType': 'googTransportType',\n    'localAddress': 'googLocalAddress',\n    'activeConnection': 'googActiveConnection',\n    'ssrc': 'ssrc',\n    'packetsReceived': 'packetsReceived',\n    'packetsSent': 'packetsSent',\n    'packetsLost': 'packetsLost',\n    'bytesReceived': 'bytesReceived',\n    'bytesSent': 'bytesSent',\n    'googFrameHeightReceived': 'googFrameHeightReceived',\n    'googFrameWidthReceived': 'googFrameWidthReceived',\n    'googFrameHeightSent': 'googFrameHeightSent',\n    'googFrameWidthSent': 'googFrameWidthSent',\n    'googFrameRateReceived': 'googFrameRateReceived',\n    'googFrameRateSent': 'googFrameRateSent',\n    'audioInputLevel': 'audioInputLevel',\n    'audioOutputLevel': 'audioOutputLevel',\n    'currentRoundTripTime': 'googRtt',\n    'remoteCandidateType': 'googRemoteCandidateType',\n    'localCandidateType': 'googLocalCandidateType'\n};\nKEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_EDGE] = {\n    'sendBandwidth': 'googAvailableSendBandwidth',\n    'remoteAddress': 'remoteAddress',\n    'transportType': 'protocol',\n    'localAddress': 'localAddress',\n    'activeConnection': 'activeConnection',\n    'ssrc': 'ssrc',\n    'packetsReceived': 'packetsReceived',\n    'packetsSent': 'packetsSent',\n    'packetsLost': 'packetsLost',\n    'bytesReceived': 'bytesReceived',\n    'bytesSent': 'bytesSent',\n    'googFrameHeightReceived': 'frameHeight',\n    'googFrameWidthReceived': 'frameWidth',\n    'googFrameHeightSent': 'frameHeight',\n    'googFrameWidthSent': 'frameWidth',\n    'googFrameRateReceived': 'framesPerSecond',\n    'googFrameRateSent': 'framesPerSecond',\n    'audioInputLevel': 'audioLevel',\n    'audioOutputLevel': 'audioLevel',\n    'currentRoundTripTime': 'roundTripTime'\n};\nKEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_OPERA]\n    = KEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_CHROME];\nKEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_NWJS]\n    = KEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_CHROME];\nKEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_ELECTRON]\n    = KEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_CHROME];\nKEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_IEXPLORER]\n    = KEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_CHROME];\nKEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_SAFARI]\n    = KEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_CHROME];\nKEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_REACT_NATIVE]\n    = KEYS_BY_BROWSER_TYPE[RTCBrowserType.RTC_BROWSER_CHROME];\n\n/**\n * Calculates packet lost percent using the number of lost packets and the\n * number of all packet.\n * @param lostPackets the number of lost packets\n * @param totalPackets the number of all packets.\n * @returns {number} packet loss percent\n */\nfunction calculatePacketLoss(lostPackets, totalPackets) {\n    if (!totalPackets || totalPackets <= 0\n            || !lostPackets || lostPackets <= 0) {\n        return 0;\n    }\n\n    return Math.round((lostPackets / totalPackets) * 100);\n}\n\n/**\n * Holds \"statistics\" for a single SSRC.\n * @constructor\n */\nfunction SsrcStats() {\n    this.loss = {};\n    this.bitrate = {\n        download: 0,\n        upload: 0\n    };\n    this.resolution = {};\n    this.framerate = 0;\n}\n\n/**\n * Sets the \"loss\" object.\n * @param loss the value to set.\n */\nSsrcStats.prototype.setLoss = function(loss) {\n    this.loss = loss || {};\n};\n\n/**\n * Sets resolution that belong to the ssrc represented by this instance.\n * @param resolution new resolution value to be set.\n */\nSsrcStats.prototype.setResolution = function(resolution) {\n    this.resolution = resolution || {};\n};\n\n/**\n * Adds the \"download\" and \"upload\" fields from the \"bitrate\" parameter to\n * the respective fields of the \"bitrate\" field of this object.\n * @param bitrate an object holding the values to add.\n */\nSsrcStats.prototype.addBitrate = function(bitrate) {\n    this.bitrate.download += bitrate.download;\n    this.bitrate.upload += bitrate.upload;\n};\n\n/**\n * Resets the bit rate for given <tt>ssrc</tt> that belong to the peer\n * represented by this instance.\n */\nSsrcStats.prototype.resetBitrate = function() {\n    this.bitrate.download = 0;\n    this.bitrate.upload = 0;\n};\n\n/**\n * Sets the \"framerate\".\n * @param framerate the value to set.\n */\nSsrcStats.prototype.setFramerate = function(framerate) {\n    this.framerate = framerate || 0;\n};\n\n/**\n *\n */\nfunction ConferenceStats() {\n\n    /**\n     * The bandwidth\n     * @type {{}}\n     */\n    this.bandwidth = {};\n\n    /**\n     * The bit rate\n     * @type {{}}\n     */\n    this.bitrate = {};\n\n    /**\n     * The packet loss rate\n     * @type {{}}\n     */\n    this.packetLoss = null;\n\n    /**\n     * Array with the transport information.\n     * @type {Array}\n     */\n    this.transport = [];\n}\n\n/* eslint-disable max-params */\n\n/**\n * <tt>StatsCollector</tt> registers for stats updates of given\n * <tt>peerconnection</tt> in given <tt>interval</tt>. On each update particular\n * stats are extracted and put in {@link SsrcStats} objects. Once the processing\n * is done <tt>audioLevelsUpdateCallback</tt> is called with <tt>this</tt>\n * instance as an event source.\n *\n * @param peerconnection WebRTC PeerConnection object.\n * @param audioLevelsInterval\n * @param statsInterval stats refresh interval given in ms.\n * @param eventEmitter\n * @constructor\n */\nexport default function StatsCollector(\n        peerconnection,\n        audioLevelsInterval,\n        statsInterval,\n        eventEmitter) {\n    // StatsCollector depends entirely on the format of the reports returned by\n    // RTCPeerConnection#getStats. Given that the value of\n    // RTCBrowserType#getBrowserType() is very unlikely to change at runtime, it\n    // makes sense to discover whether StatsCollector supports the executing\n    // browser as soon as possible. Otherwise, (1) getStatValue would have to\n    // needlessly check a \"static\" condition multiple times very very often and\n    // (2) the lack of support for the executing browser would be discovered and\n    // reported multiple times very very often too late in the execution in some\n    // totally unrelated callback.\n    /**\n     * The RTCBrowserType supported by this StatsCollector. In other words, the\n     * RTCBrowserType of the browser which initialized this StatsCollector\n     * instance.\n     * @private\n     */\n    this._browserType = RTCBrowserType.getBrowserType();\n    const keys = KEYS_BY_BROWSER_TYPE[this._browserType];\n\n    if (!keys) {\n        // eslint-disable-next-line no-throw-literal\n        throw `The browser type '${this._browserType}' isn't supported!`;\n    }\n\n    /**\n     * The function which is to be used to retrieve the value associated in a\n     * report returned by RTCPeerConnection#getStats with a lib-jitsi-meet\n     * browser-agnostic name/key.\n     *\n     * @function\n     * @private\n     */\n    this._getStatValue = this._defineGetStatValueMethod(keys);\n\n    this.peerconnection = peerconnection;\n    this.baselineAudioLevelsReport = null;\n    this.currentAudioLevelsReport = null;\n    this.currentStatsReport = null;\n    this.previousStatsReport = null;\n    this.audioLevelsIntervalId = null;\n    this.eventEmitter = eventEmitter;\n    this.conferenceStats = new ConferenceStats();\n\n    // Updates stats interval\n    this.audioLevelsIntervalMilis = audioLevelsInterval;\n\n    this.statsIntervalId = null;\n    this.statsIntervalMilis = statsInterval;\n\n    /**\n     * Maps SSRC numbers to {@link SsrcStats}.\n     * @type {Map<number,SsrcStats}\n     */\n    this.ssrc2stats = new Map();\n}\n\n/* eslint-enable max-params */\n\n/**\n * Stops stats updates.\n */\nStatsCollector.prototype.stop = function() {\n    if (this.audioLevelsIntervalId) {\n        clearInterval(this.audioLevelsIntervalId);\n        this.audioLevelsIntervalId = null;\n    }\n\n    if (this.statsIntervalId) {\n        clearInterval(this.statsIntervalId);\n        this.statsIntervalId = null;\n    }\n};\n\n/**\n * Callback passed to <tt>getStats</tt> method.\n * @param error an error that occurred on <tt>getStats</tt> call.\n */\nStatsCollector.prototype.errorCallback = function(error) {\n    GlobalOnErrorHandler.callErrorHandler(error);\n    logger.error('Get stats error', error);\n    this.stop();\n};\n\n/**\n * Starts stats updates.\n */\nStatsCollector.prototype.start = function(startAudioLevelStats) {\n    const self = this;\n\n    if (startAudioLevelStats) {\n        this.audioLevelsIntervalId = setInterval(\n            () => {\n                // Interval updates\n                self.peerconnection.getStats(\n                    report => {\n                        let results = null;\n\n                        if (!report || !report.result\n                            || typeof report.result !== 'function') {\n                            results = report;\n                        } else {\n                            results = report.result();\n                        }\n                        self.currentAudioLevelsReport = results;\n                        self.processAudioLevelReport();\n                        self.baselineAudioLevelsReport\n                            = self.currentAudioLevelsReport;\n                    },\n                    self.errorCallback\n                );\n            },\n            self.audioLevelsIntervalMilis\n        );\n    }\n\n    if (browserSupported) {\n        this.statsIntervalId = setInterval(\n            () => {\n                // Interval updates\n                self.peerconnection.getStats(\n                    report => {\n                        let results = null;\n\n                        if (!report || !report.result\n                            || typeof report.result !== 'function') {\n                            // firefox\n                            results = report;\n                        } else {\n                            // chrome\n                            results = report.result();\n                        }\n\n                        self.currentStatsReport = results;\n                        try {\n                            self.processStatsReport();\n                        } catch (e) {\n                            GlobalOnErrorHandler.callErrorHandler(e);\n                            logger.error(`Unsupported key:${e}`, e);\n                        }\n\n                        self.previousStatsReport = self.currentStatsReport;\n                    },\n                    self.errorCallback\n                );\n            },\n            self.statsIntervalMilis\n        );\n    }\n};\n\n/**\n * Defines a function which (1) is to be used as a StatsCollector method and (2)\n * gets the value from a specific report returned by RTCPeerConnection#getStats\n * associated with a lib-jitsi-meet browser-agnostic name.\n *\n * @param {Object.<string,string>} keys the map of LibJitsi browser-agnostic\n * names to RTCPeerConnection#getStats browser-specific keys\n */\nStatsCollector.prototype._defineGetStatValueMethod = function(keys) {\n    // Define the function which converts a lib-jitsi-meet browser-asnostic name\n    // to a browser-specific key of a report returned by\n    // RTCPeerConnection#getStats.\n    const keyFromName = function(name) {\n        const key = keys[name];\n\n        if (key) {\n            return key;\n        }\n\n        // eslint-disable-next-line no-throw-literal\n        throw `The property '${name}' isn't supported!`;\n    };\n\n    // Define the function which retrieves the value from a specific report\n    // returned by RTCPeerConnection#getStats associated with a given\n    // browser-specific key.\n    let itemStatByKey;\n\n    switch (this._browserType) {\n    case RTCBrowserType.RTC_BROWSER_CHROME:\n    case RTCBrowserType.RTC_BROWSER_OPERA:\n    case RTCBrowserType.RTC_BROWSER_NWJS:\n    case RTCBrowserType.RTC_BROWSER_ELECTRON:\n        // TODO What about other types of browser which are based on Chrome such\n        // as NW.js? Every time we want to support a new type browser we have to\n        // go and add more conditions (here and in multiple other places).\n        // Cannot we do a feature detection instead of a browser type check? For\n        // example, if item has a stat property of type function, then it's very\n        // likely that whoever defined it wanted you to call it in order to\n        // retrieve the value associated with a specific key.\n        itemStatByKey = (item, key) => item.stat(key);\n        break;\n    case RTCBrowserType.RTC_BROWSER_REACT_NATIVE:\n        // The implementation provided by react-native-webrtc follows the\n        // Objective-C WebRTC API: RTCStatsReport has a values property of type\n        // Array in which each element is a key-value pair.\n        itemStatByKey = function(item, key) {\n            let value;\n\n            item.values.some(pair => {\n                if (pair.hasOwnProperty(key)) {\n                    value = pair[key];\n\n                    return true;\n                }\n\n                return false;\n\n            });\n\n            return value;\n        };\n        break;\n    case RTCBrowserType.RTC_BROWSER_EDGE:\n        itemStatByKey = (item, key) => item[key];\n        break;\n    default:\n        itemStatByKey = (item, key) => item[key];\n    }\n\n    // Compose the 2 functions defined above to get a function which retrieves\n    // the value from a specific report returned by RTCPeerConnection#getStats\n    // associated with a specific lib-jitsi-meet browser-agnostic name.\n    return (item, name) => itemStatByKey(item, keyFromName(name));\n};\n\n/**\n * Obtains a stat value from given stat and converts it to a non-negative\n * number. If the value is either invalid or negative then 0 will be returned.\n * @param report\n * @param {string} name\n * @return {number}\n * @private\n */\nStatsCollector.prototype.getNonNegativeStat = function(report, name) {\n    let value = this._getStatValue(report, name);\n\n    if (typeof value !== 'number') {\n        value = Number(value);\n    }\n\n    if (isNaN(value)) {\n        return 0;\n    }\n\n    return Math.max(0, value);\n};\n\n/* eslint-disable no-continue */\n\n/**\n * Stats processing logic.\n */\nStatsCollector.prototype.processStatsReport = function() {\n    if (!this.previousStatsReport) {\n        return;\n    }\n\n    const getStatValue = this._getStatValue;\n    const byteSentStats = {};\n\n    for (const idx in this.currentStatsReport) {\n        if (!this.currentStatsReport.hasOwnProperty(idx)) {\n            continue;\n        }\n        const now = this.currentStatsReport[idx];\n\n        // The browser API may return \"undefined\" values in the array\n        if (!now) {\n            continue;\n        }\n\n        try {\n            const receiveBandwidth = getStatValue(now, 'receiveBandwidth');\n            const sendBandwidth = getStatValue(now, 'sendBandwidth');\n\n            if (receiveBandwidth || sendBandwidth) {\n                this.conferenceStats.bandwidth = {\n                    'download': Math.round(receiveBandwidth / 1000),\n                    'upload': Math.round(sendBandwidth / 1000)\n                };\n            }\n        } catch (e) { /* not supported*/ }\n\n        if (now.type === 'googCandidatePair') {\n            let active, ip, localCandidateType, localip,\n                remoteCandidateType, rtt, type;\n\n            try {\n                active = getStatValue(now, 'activeConnection');\n                if (!active) {\n                    continue;\n                }\n\n                ip = getStatValue(now, 'remoteAddress');\n                type = getStatValue(now, 'transportType');\n                localip = getStatValue(now, 'localAddress');\n                localCandidateType = getStatValue(now, 'localCandidateType');\n                remoteCandidateType = getStatValue(now, 'remoteCandidateType');\n                rtt = this.getNonNegativeStat(now, 'currentRoundTripTime');\n            } catch (e) { /* not supported*/ }\n            if (!ip || !type || !localip || active !== 'true') {\n                continue;\n            }\n\n            // Save the address unless it has been saved already.\n            const conferenceStatsTransport = this.conferenceStats.transport;\n\n            if (!conferenceStatsTransport.some(\n                    t =>\n                        t.ip === ip\n                            && t.type === type\n                            && t.localip === localip)) {\n                conferenceStatsTransport.push({\n                    ip,\n                    type,\n                    localip,\n                    p2p: this.peerconnection.isP2P,\n                    localCandidateType,\n                    remoteCandidateType,\n                    rtt\n                });\n            }\n            continue;\n        }\n\n        if (now.type === 'candidatepair') {\n            // we need succeeded and selected pairs only\n            if (now.state !== 'succeeded' || !now.selected) {\n                continue;\n            }\n\n            const local = this.currentStatsReport[now.localCandidateId];\n            const remote = this.currentStatsReport[now.remoteCandidateId];\n\n            this.conferenceStats.transport.push({\n                ip: `${remote.ipAddress}:${remote.portNumber}`,\n                type: local.transport,\n                localip: `${local.ipAddress}:${local.portNumber}`,\n                p2p: this.peerconnection.isP2P,\n                localCandidateType: local.candidateType,\n                remoteCandidateType: remote.candidateType\n            });\n        }\n\n        // NOTE: Edge's proprietary stats via RTCIceTransport.msGetStats().\n        if (now.msType === 'transportdiagnostics') {\n            this.conferenceStats.transport.push({\n                ip: now.remoteAddress,\n                type: now.protocol,\n                localip: now.localAddress,\n                p2p: this.peerconnection.isP2P\n            });\n        }\n\n        if (now.type !== 'ssrc' && now.type !== 'outboundrtp'\n            && now.type !== 'inboundrtp' && now.type !== 'track') {\n            continue;\n        }\n\n        // NOTE: In Edge, stats with type \"inboundrtp\" and \"outboundrtp\" are\n        // completely useless, so ignore them.\n        if (RTCBrowserType.isEdge()\n            && (now.type === 'inboundrtp' || now.type === 'outboundrtp')) {\n            continue;\n        }\n\n        const before = this.previousStatsReport[idx];\n        let ssrc = this.getNonNegativeStat(now, 'ssrc');\n\n        // If type=\"track\", take the first SSRC from ssrcIds.\n        if (now.type === 'track' && Array.isArray(now.ssrcIds)) {\n            ssrc = Number(now.ssrcIds[0]);\n        }\n\n        if (!before || !ssrc) {\n            continue;\n        }\n\n        // isRemote is available only in FF and is ignored in case of chrome\n        // according to the spec\n        // https://www.w3.org/TR/webrtc-stats/#dom-rtcrtpstreamstats-isremote\n        // when isRemote is true indicates that the measurements were done at\n        // the remote endpoint and reported in an RTCP RR/XR.\n        // Fixes a problem where we are calculating local stats wrong adding\n        // the sent bytes to the local download bitrate.\n        // In new W3 stats spec, type=\"track\" has a remoteSource boolean\n        // property.\n        // Edge uses the new format, so skip this check.\n        if (!RTCBrowserType.isEdge()\n                && (now.isRemote === true || now.remoteSource === true)) {\n            continue;\n        }\n\n        let ssrcStats = this.ssrc2stats.get(ssrc);\n\n        if (!ssrcStats) {\n            ssrcStats = new SsrcStats();\n            this.ssrc2stats.set(ssrc, ssrcStats);\n        }\n\n        let isDownloadStream = true;\n        let key = 'packetsReceived';\n        let packetsNow = getStatValue(now, key);\n\n        if (typeof packetsNow === 'undefined'\n            || packetsNow === null || packetsNow === '') {\n            isDownloadStream = false;\n            key = 'packetsSent';\n            packetsNow = getStatValue(now, key);\n            if (typeof packetsNow === 'undefined' || packetsNow === null) {\n                logger.warn('No packetsReceived nor packetsSent stat found');\n            }\n        }\n        if (!packetsNow || packetsNow < 0) {\n            packetsNow = 0;\n        }\n\n        const packetsBefore = this.getNonNegativeStat(before, key);\n        const packetsDiff = Math.max(0, packetsNow - packetsBefore);\n\n        const packetsLostNow\n            = this.getNonNegativeStat(now, 'packetsLost');\n        const packetsLostBefore\n            = this.getNonNegativeStat(before, 'packetsLost');\n        const packetsLostDiff = Math.max(0, packetsLostNow - packetsLostBefore);\n\n        ssrcStats.setLoss({\n            packetsTotal: packetsDiff + packetsLostDiff,\n            packetsLost: packetsLostDiff,\n            isDownloadStream\n        });\n\n        const bytesReceivedNow\n            = this.getNonNegativeStat(now, 'bytesReceived');\n        const bytesReceivedBefore\n            = this.getNonNegativeStat(before, 'bytesReceived');\n        const bytesReceived\n            = Math.max(0, bytesReceivedNow - bytesReceivedBefore);\n\n        let bytesSent = 0;\n\n        // TODO: clean this mess up!\n        let nowBytesTransmitted = getStatValue(now, 'bytesSent');\n\n        if (typeof nowBytesTransmitted === 'number'\n            || typeof nowBytesTransmitted === 'string') {\n            nowBytesTransmitted = Number(nowBytesTransmitted);\n            if (!isNaN(nowBytesTransmitted)) {\n                byteSentStats[ssrc] = nowBytesTransmitted;\n                if (nowBytesTransmitted > 0) {\n                    bytesSent = nowBytesTransmitted\n                        - getStatValue(before, 'bytesSent');\n                }\n            }\n        }\n        bytesSent = Math.max(0, bytesSent);\n\n        const timeMs = now.timestamp - before.timestamp;\n        let bitrateReceivedKbps = 0, bitrateSentKbps = 0;\n\n        if (timeMs > 0) {\n            // TODO is there any reason to round here?\n            bitrateReceivedKbps = Math.round((bytesReceived * 8) / timeMs);\n            bitrateSentKbps = Math.round((bytesSent * 8) / timeMs);\n        }\n\n        ssrcStats.addBitrate({\n            'download': bitrateReceivedKbps,\n            'upload': bitrateSentKbps\n        });\n\n        const resolution = {\n            height: null,\n            width: null\n        };\n\n        try {\n            let height, width;\n\n            if ((height = getStatValue(now, 'googFrameHeightReceived'))\n                && (width = getStatValue(now, 'googFrameWidthReceived'))) {\n                resolution.height = height;\n                resolution.width = width;\n            } else if ((height = getStatValue(now, 'googFrameHeightSent'))\n                && (width = getStatValue(now, 'googFrameWidthSent'))) {\n                resolution.height = height;\n                resolution.width = width;\n            }\n        } catch (e) { /* not supported*/ }\n\n        // Tries to get frame rate\n        let frameRate;\n\n        try {\n            frameRate = getStatValue(now, 'googFrameRateReceived')\n                || getStatValue(now, 'googFrameRateSent') || 0;\n        } catch (e) {\n            // if it fails with previous properties(chrome),\n            // let's try with another one (FF)\n            try {\n                frameRate = this.getNonNegativeStat(now, 'framerateMean');\n            } catch (err) { /* not supported*/ }\n        }\n        ssrcStats.setFramerate(Math.round(frameRate || 0));\n\n        if (resolution.height && resolution.width) {\n            ssrcStats.setResolution(resolution);\n        } else {\n            ssrcStats.setResolution(null);\n        }\n    }\n\n    // process stats\n    const totalPackets = {\n        download: 0,\n        upload: 0\n    };\n    const lostPackets = {\n        download: 0,\n        upload: 0\n    };\n    let bitrateDownload = 0;\n    let bitrateUpload = 0;\n    const resolutions = {};\n    const framerates = {};\n    let audioBitrateDownload = 0;\n    let audioBitrateUpload = 0;\n    let videoBitrateDownload = 0;\n    let videoBitrateUpload = 0;\n\n    for (const [ ssrc, ssrcStats ] of this.ssrc2stats) {\n        // process packet loss stats\n        const loss = ssrcStats.loss;\n        const type = loss.isDownloadStream ? 'download' : 'upload';\n\n        totalPackets[type] += loss.packetsTotal;\n        lostPackets[type] += loss.packetsLost;\n\n        // process bitrate stats\n        bitrateDownload += ssrcStats.bitrate.download;\n        bitrateUpload += ssrcStats.bitrate.upload;\n\n        // collect resolutions and framerates\n        const track = this.peerconnection.getTrackBySSRC(ssrc);\n\n        if (track) {\n            if (track.isAudioTrack()) {\n                audioBitrateDownload += ssrcStats.bitrate.download;\n                audioBitrateUpload += ssrcStats.bitrate.upload;\n            } else {\n                videoBitrateDownload += ssrcStats.bitrate.download;\n                videoBitrateUpload += ssrcStats.bitrate.upload;\n            }\n\n            const participantId = track.getParticipantId();\n\n            if (participantId) {\n                const resolution = ssrcStats.resolution;\n\n                if (resolution.width\n                        && resolution.height\n                        && resolution.width !== -1\n                        && resolution.height !== -1) {\n                    const userResolutions = resolutions[participantId] || {};\n\n                    userResolutions[ssrc] = resolution;\n                    resolutions[participantId] = userResolutions;\n                }\n                if (ssrcStats.framerate !== 0) {\n                    const userFramerates = framerates[participantId] || {};\n\n                    userFramerates[ssrc] = ssrcStats.framerate;\n                    framerates[participantId] = userFramerates;\n                }\n            } else {\n                logger.error(`No participant ID returned by ${track}`);\n            }\n        } else if (this.peerconnection.isP2P) {\n            // NOTE For JVB connection there are JVB tracks reported in\n            // the stats, but they do not have corresponding JitsiRemoteTrack\n            // instances stored in TPC. It is not trivial to figure out that\n            // a SSRC belongs to JVB, so we print this error ony for the P2P\n            // connection for the time being.\n            //\n            // Also there will be reports for tracks removed from the session,\n            // for the users who have left the conference.\n            logger.error(\n                `JitsiTrack not found for SSRC ${ssrc}`\n                    + ` in ${this.peerconnection}`);\n        }\n\n        ssrcStats.resetBitrate();\n    }\n\n    this.eventEmitter.emit(\n        StatisticsEvents.BYTE_SENT_STATS, this.peerconnection, byteSentStats);\n\n    this.conferenceStats.bitrate = {\n        'upload': bitrateUpload,\n        'download': bitrateDownload\n    };\n\n    this.conferenceStats.bitrate.audio = {\n        'upload': audioBitrateUpload,\n        'download': audioBitrateDownload\n    };\n\n    this.conferenceStats.bitrate.video = {\n        'upload': videoBitrateUpload,\n        'download': videoBitrateDownload\n    };\n\n    this.conferenceStats.packetLoss = {\n        total:\n            calculatePacketLoss(\n                lostPackets.download + lostPackets.upload,\n                totalPackets.download + totalPackets.upload),\n        download:\n            calculatePacketLoss(lostPackets.download, totalPackets.download),\n        upload:\n            calculatePacketLoss(lostPackets.upload, totalPackets.upload)\n    };\n\n    this.eventEmitter.emit(\n        StatisticsEvents.CONNECTION_STATS,\n        this.peerconnection,\n        {\n            'bandwidth': this.conferenceStats.bandwidth,\n            'bitrate': this.conferenceStats.bitrate,\n            'packetLoss': this.conferenceStats.packetLoss,\n            'resolution': resolutions,\n            'framerate': framerates,\n            'transport': this.conferenceStats.transport\n        });\n    this.conferenceStats.transport = [];\n};\n\n/**\n * Stats processing logic.\n */\nStatsCollector.prototype.processAudioLevelReport = function() {\n    if (!this.baselineAudioLevelsReport) {\n        return;\n    }\n\n    const getStatValue = this._getStatValue;\n\n    for (const idx in this.currentAudioLevelsReport) {\n        if (!this.currentAudioLevelsReport.hasOwnProperty(idx)) {\n            continue;\n        }\n\n        const now = this.currentAudioLevelsReport[idx];\n\n        if (now.type !== 'ssrc' && now.type !== 'track') {\n            continue;\n        }\n\n        const before = this.baselineAudioLevelsReport[idx];\n        let ssrc = this.getNonNegativeStat(now, 'ssrc');\n\n        if (!ssrc && Array.isArray(now.ssrcIds)) {\n            ssrc = Number(now.ssrcIds[0]);\n        }\n\n        if (!before) {\n            logger.warn(`${ssrc} not enough data`);\n            continue;\n        }\n\n        if (!ssrc) {\n            if ((Date.now() - now.timestamp) < 3000) {\n                logger.warn('No ssrc: ');\n            }\n            continue;\n        }\n\n        // Audio level\n        let audioLevel;\n\n        try {\n            audioLevel\n                = getStatValue(now, 'audioInputLevel')\n                    || getStatValue(now, 'audioOutputLevel');\n        } catch (e) { /* not supported*/\n            logger.warn('Audio Levels are not available in the statistics.');\n            clearInterval(this.audioLevelsIntervalId);\n\n            return;\n        }\n\n        if (audioLevel) {\n            let isLocal;\n\n            // If type=\"ssrc\" (legacy) check whether they are received packets.\n            if (now.type === 'ssrc') {\n                isLocal = !getStatValue(now, 'packetsReceived');\n\n            // If type=\"track\", check remoteSource boolean property.\n            } else {\n                isLocal = !now.remoteSource;\n            }\n\n            // According to the W3C WebRTC Stats spec, audioLevel should be in\n            // 0..1 range (0 == silence). However browsers don't behave that\n            // way so we must convert it to 0..1.\n            //\n            // In Edge the range is -100..0 (-100 == silence) measured in dB,\n            // so convert to linear. The levels are set to 0 for remote tracks,\n            // so don't convert those, since 0 means \"the maximum\" in Edge.\n            if (RTCBrowserType.isEdge()) {\n                audioLevel = audioLevel < 0 ? Math.pow(10, audioLevel / 20) : 0;\n\n            // TODO: Can't find specs about what this value really is, but it\n            // seems to vary between 0 and around 32k.\n            } else {\n                audioLevel = audioLevel / 32767;\n            }\n\n            this.eventEmitter.emit(\n                StatisticsEvents.AUDIO_LEVEL,\n                this.peerconnection,\n                ssrc,\n                audioLevel,\n                isLocal);\n        }\n    }\n};\n\n/* eslint-enable no-continue */\n\n\n\n// WEBPACK FOOTER //\n// ./modules/statistics/RTPStatsCollector.js","/*!\n * currentExecutingScript\n * Get the currently executing script, regardless of its source/trigger/synchronicity. Similar to HTML5's `document.currentScript` but arguably much more useful!\n * Copyright (c) 2015 James M. Greene\n * Licensed MIT\n * https://github.com/JamesMGreene/currentExecutingScript\n * v0.1.3\n */\n(function(root, factory) {\n  if (typeof define === \"function\" && define.amd) {\n    // AMD. Register as an anonymous module.\n    define([], factory);\n  } else if (typeof exports === \"object\") {\n    // CommonJS-like environments that support `module.exports`,\n    // like Node.js. Does not work with strict CommonJS!\n    module.exports = factory();\n  } else {\n    // Browser globals (`root` is `window`)\n    root.currentExecutingScript = factory();\n  }\n}(\n  // Current context/scope\n  this || window,\n\n  // Factory function to return the export\n  function() {\n\nvar scriptReadyRegex = /^(interactive|loaded|complete)$/;\n\n// This page's URL (minus query string and fragment identifer hash, if any)\nvar fullPageUrl = !!window.location ? window.location.href : null;\nvar pageUrl = fullPageUrl ? fullPageUrl.replace(/#.*$/, \"\").replace(/\\?.*$/, \"\") || null : null;\n\n// Live NodeList collection\nvar scripts = document.getElementsByTagName(\"script\");\n\n// Check if the browser supports the `readyState` property on `script` elements\nvar supportsScriptReadyState = \"readyState\" in (scripts[0] || document.createElement(\"script\"));\n\n// Lousy browser detection for [not] Opera\nvar isNotOpera = !window.opera || window.opera.toString() !== \"[object Opera]\";\n\n// Detect if `document.currentScript` is supported\nvar hasNativeCurrentScriptAccessor = \"currentScript\" in document;\n\nvar originalStackDepthConfig;\n// Detect if the V8 Error Stack Trace API is supported\nif (\"stackTraceLimit\" in Error && Error.stackTraceLimit !== Infinity) {\n  originalStackDepthConfig = Error.stackTraceLimit;\n  Error.stackTraceLimit = Infinity;\n}\n\n\n// In some browsers (e.g. Chrome), you can get the current stack from an Error\n// object instance without needing to throw it. Avoiding an unnecessary\n// use of `throw` saves time and performance.\nvar hasStackBeforeThrowing = false,\n    hasStackAfterThrowing = false;\n(function() {\n  try {\n    var err = new Error();\n    hasStackBeforeThrowing = typeof err.stack === \"string\" && !!err.stack;\n    throw err;\n  }\n  catch (thrownErr) {\n    hasStackAfterThrowing = typeof thrownErr.stack === \"string\" && !!thrownErr.stack;\n  }\n})();\n\n\n// Normalize whitespace within a string\nfunction normalizeWhitespace(str) {\n  return str ? str.replace(/^\\s+$|\\s+$/g, \"\").replace(/\\s\\s+/g, \" \") : \"\";\n}\n\n// Get script object based on the `src` URL\nfunction getScriptFromUrl(url, eligibleScripts) {\n  var i,\n      script = null;\n\n  eligibleScripts = eligibleScripts || scripts;\n\n  if (typeof url === \"string\" && url) {\n    for (i = eligibleScripts.length; i--; ) {\n      if (eligibleScripts[i].src === url) {\n        // NOTE: Could check if the same script URL is used by more than one `script` element\n        // here... but let's not. That would yield less useful results in \"loose\" detection. ;)\n        script = eligibleScripts[i];\n        break;\n      }\n    }\n  }\n  return script;\n}\n\n// Get script object based on the caller function's source code body (text)\nfunction getInlineScriptFromCallerSource(callerFnSource, eligibleScripts) {\n  var i, inlineScriptText,\n      script = null,\n      callerSourceText = normalizeWhitespace(callerFnSource);\n\n  eligibleScripts = eligibleScripts || scripts;\n\n  if (callerFnSource && callerSourceText) {\n    for (i = eligibleScripts.length; i--; ) {\n      // Only look at inline scripts\n      if (!eligibleScripts[i].hasAttribute(\"src\")) {\n        inlineScriptText = normalizeWhitespace(eligibleScripts[i].text);\n        if (inlineScriptText.indexOf(callerSourceText) !== -1) {\n          // If more than one match is found, don't return any\n          if (script) {\n            script = null;\n            break;\n          }\n          script = eligibleScripts[i];\n        }\n      }\n    }\n  }\n\n  return script;\n}\n\n// If there is only a single inline script on the page, return it; otherwise `null`\nfunction getSoleInlineScript(eligibleScripts) {\n  var i, len,\n      script = null;\n  eligibleScripts = eligibleScripts || scripts;\n  for (i = 0, len = eligibleScripts.length; i < len; i++) {\n    if (!eligibleScripts[i].hasAttribute(\"src\")) {\n      if (script) {\n        script = null;\n        break;\n      }\n      script = eligibleScripts[i];\n    }\n  }\n  return script;\n}\n\n// Get the currently executing script URL from an Error stack trace\nfunction getScriptUrlFromStack(stack, skipStackDepth) {\n  var matches, remainingStack,\n      url = null,\n      ignoreMessage = typeof skipStackDepth === \"number\";\n  skipStackDepth = ignoreMessage ? Math.round(skipStackDepth) : 0;\n  if (typeof stack === \"string\" && stack) {\n    if (ignoreMessage) {\n      matches = stack.match(/(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n    }\n    else {\n      matches = stack.match(/^(?:|[^:@]*@|.+\\)@(?=data:text\\/javascript|blob|http[s]?|file)|.+?\\s+(?: at |@)(?:[^:\\(]+ )*[\\(]?)(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n\n      if (!(matches && matches[1])) {\n        matches = stack.match(/\\)@(data:text\\/javascript(?:;[^,]+)?,.+?|(?:|blob:)(?:http[s]?|file):\\/\\/[\\/]?.+?\\/[^:\\)]*?)(?::\\d+)(?::\\d+)?/);\n      }\n    }\n\n    if (matches && matches[1]) {\n      if (skipStackDepth > 0) {\n        remainingStack = stack.slice(stack.indexOf(matches[0]) + matches[0].length);\n        url = getScriptUrlFromStack(remainingStack, (skipStackDepth - 1));\n      }\n      else {\n        url = matches[1];\n      }\n    }\n\n    // TODO: Handle more edge cases!\n    // Fixes #1\n    // See https://github.com/JamesMGreene/currentExecutingScript/issues/1\n\n    // ???\n\n  }\n  return url;\n}\n\n\n// Get the farthest currently executing (i.e. yes, EXECUTING) `script` DOM\n// element for the caller function, regardless of whether it is that `script`\n// DOM element is currently being evaluated for the first time. The farthest\n// currently executing `script` DOM element would typically be considered the\n// originator of the current execution stack.\nfunction _farthestExecutingScript() {\n  /*jshint noarg:false */\n\n  // TODO: Implement!\n  // Fixes #3\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/3\n  return null;\n\n/*\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\n  if (scripts.length === 0) {\n    return null;\n  }\n\n  // Guaranteed accurate in IE 6-10.\n  // Not accurate/supported in any other browsers.\n  if (isNotOpera && supportsScriptReadyState) {\n    for (var i = scripts.length; i--; ) {\n      if (scripts[i].readyState === \"interactive\") {\n        return scripts[i];\n      }\n    }\n  }\n\n  var stack,\n      e = new Error();\n  if (hasStackBeforeThrowing) {\n    stack = e.stack;\n  }\n  if (!stack && hasStackAfterThrowing) {\n    try {\n      throw e;\n    }\n    catch (err) {\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\n      stack = err.stack;\n    }\n  }\n  if (stack) {\n    var url = getScriptUrlFromStack(stack, skipStackDepth);\n    var script = getScriptFromUrl(url, scripts );\n    if (!script && pageUrl && url === pageUrl) {\n      // Try to find the correct inline script by searching through\n      // inline scripts' text content for the caller function's source\n      // code to be present. If the caller function's source code is\n      // not available, see if there is only one inline script element\n      // in the DOM and return that (even though it may be wrong)\n\n      // TODO: Implement!\n      // Fixes #4 in part\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\n\n      var callerFn = _farthestExecutingScript.caller || null,\n          callerFnStack = [],\n          callerFnSource = null;\n\n      while (callerFn) {\n        callerFnStack.push(callerFn);\n        callerFn = callerFn.caller || null;\n      }\n      callerFn = callerFnStack.slice(-1)[0];\n      callerFnSource = callerFn ? (\"\" + callerFn) : null;\n\n\n      if (callerFnSource) {\n        script = getInlineScriptFromCallerSource(callerFnSource);\n      }\n      else {\n        // NOTE: This is a loose assumption that could be inaccurate!\n        //\n        // Inaccuracies:\n        //  - If the inline script that initiated the call was also removed from the DOM.\n        //  - If the call was initiated by an element's inline event handler,\n        //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n        script = getSoleInlineScript();\n      }\n    }\n    return script;\n  }\n\n  // NOTE: This is a loose assumption that could be inaccurate!\n  //\n  // Inaccuracies:\n  //  - If a script is created dynamically and appended to some position\n  //    other than the very end of the document.\n  //  - If multiple scripts are created dynamically and all appended to the\n  //    same position within the document (and do not have their `async` attributes\n  //    set to `false`, at least in browsers that support async script evaluation.\n  //    other than the very end of the document.\n  //  - If any scripts are added with the `async` attribute set to `true` in a browser\n  //    that supports it.\n  //  - May get confused by `script` elements within `svg` elements\n  return scripts[scripts.length - 1] || null;\n*/\n}\n\n\n// Get the originating currently executing (i.e. yes, EXECUTING) `script` DOM\n// element or attribute node (e.g. `onclick`) for the caller function,\n// regardless of whether it is that `script` DOM element is currently being\n// evaluated for the first time. The originating currently executing `script`\n// DOM element [or attribute node] is the originator of the current execution stack.\nfunction _originatingExecutingScript() {\n  // TODO: Implement!\n  // Fixes #2\n  // See https://github.com/JamesMGreene/currentExecutingScript/issues/2\n  return null;\n}\n\n// Get the nearest currently executing (i.e. yes, EXECUTING) `script` DOM\n// element for the caller function, regardless of whether it is that `script`\n// DOM element is currently being evaluated for the first time.\nfunction _nearestExecutingScript() {\n  /*jshint noarg:false */\n\n  // Yes, this IS possible, i.e. if a script removes other scripts (or itself)\n  if (scripts.length === 0) {\n    return null;\n  }\n\n  var i, e, stack, url, script,\n      eligibleScripts = [],\n      skipStackDepth = _nearestExecutingScript.skipStackDepth || 1,\n\n      // TODO: Implement!\n      // Fixes #4 in part\n      // See https://github.com/JamesMGreene/currentExecutingScript/issues/4\n      callerFnSource = null;  //(\"\" + (_nearestExecutingScript.caller || \"\")) || null;\n\n  // This part will only help in IE 6-10.\n  for (i = 0; i < scripts.length; i++) {\n    if (isNotOpera && supportsScriptReadyState) {\n      if (scriptReadyRegex.test(scripts[i].readyState)) {\n        eligibleScripts.push(scripts[i]);\n      }\n    }\n    else {\n      eligibleScripts.push(scripts[i]);\n    }\n  }\n\n  e = new Error();\n  if (hasStackBeforeThrowing) {\n    stack = e.stack;\n  }\n  if (!stack && hasStackAfterThrowing) {\n    try {\n      throw e;\n    }\n    catch (err) {\n      // NOTE: Cannot use `err.sourceURL` or `err.fileName` as they will always be THIS script\n      stack = err.stack;\n    }\n  }\n\n  if (stack) {\n    url = getScriptUrlFromStack(stack, skipStackDepth);\n    script = getScriptFromUrl(url, eligibleScripts);\n\n    if (!script && pageUrl && url === pageUrl) {\n      // Try to find the correct inline script by searching through\n      // inline scripts' text content for the caller function's source\n      // code to be present.\n      if (callerFnSource) {\n        script = getInlineScriptFromCallerSource(callerFnSource, eligibleScripts);\n      }\n      // If the caller function's source code is not available, see if\n      // there is only one inline script element in the DOM and return\n      // that (even though it may be wrong)...\n      else {\n        // NOTE: This is a loose assumption that could be inaccurate!\n        //\n        // Inaccuracies:\n        //  - If the inline script that initiated the call was also removed from the DOM.\n        //  - If the call was initiated by an element's inline event handler,\n        //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n        script = getSoleInlineScript(eligibleScripts);\n      }\n    }\n  }\n\n  //\n  // Welcome to the Island of Inaccurate Assumptions!\n  // NOTE: ALL of the following are loose assumptions that could be inaccurate!\n  //\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If the inline script that initiated the call was also removed from the DOM.\n    //  - If the call was initiated by an element's inline event handler,\n    //    e.g. `<a onclick=\"(function() { alert(currentExecutingScript()); }()\">click</a>`\n    if (eligibleScripts.length === 1) {\n      script = eligibleScripts[0];\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    if (hasNativeCurrentScriptAccessor) {\n      script = document.currentScript;\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    if (isNotOpera && supportsScriptReadyState) {\n      for (i = eligibleScripts.length; i--; ) {\n        if (eligibleScripts[i].readyState === \"interactive\") {\n          script = eligibleScripts[i];\n          break;\n        }\n      }\n    }\n  }\n\n  if (!script) {\n    // Inaccuracies:\n    //  - If a script is created dynamically and appended to some position\n    //    other than the very end of the document.\n    //  - If multiple scripts are created dynamically and all appended to the\n    //    same position within the document (and do not have their `async` attributes\n    //    set to `false`, at least in browsers that support async script evaluation.\n    //    other than the very end of the document.\n    //  - If any scripts are added with the `async` attribute set to `true` in a browser\n    //    that supports it.\n    //  - May get confused by `script` elements within `svg` elements\n    //  - If script currently being synchronously evaluated by the parser is the\n    //    originator of this call stack but NOT the source script of the caller/invocation\n    //    e.g.\n    //    ```html\n    //    <script id=\"a\">\n    //    function getCurrentScriptCallerFn() {\n    //      return currentExecutingScript.near();\n    //    }\n    //    </script>\n    //    <script id=\"b\">\n    //    // Should get `script[id=\"a\"]` but will get `script[id=\"b\"]` instead\n    //    getCurrentScriptCallerFn();\n    //    </script>\n    //    ```\n    script = eligibleScripts[eligibleScripts.length - 1] || null;\n  }\n\n  return script;\n}\n\n// Default stack depth to skip over when analyzing call stack frames\n_nearestExecutingScript.skipStackDepth = 1;\n\n\n\n    //\n    // Export the API\n    //\n    var currentExecutingScript    = _nearestExecutingScript;      // default\n    currentExecutingScript.near   = _nearestExecutingScript;\n    currentExecutingScript.far    = _farthestExecutingScript;\n    currentExecutingScript.origin = _originatingExecutingScript;\n\n\n    // Just return a value to define the module export.\n    // This example returns an object, but the module\n    // can return a function as the exported value.\n    return currentExecutingScript;\n  })\n);\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/current-executing-script/dist/currentExecutingScript.js\n// module id = 91\n// module chunks = 0","const Constants = {\n    LOCAL_JID: 'local'\n};\n\nmodule.exports = Constants;\n\n\n\n// WEBPACK FOOTER //\n// ./service/statistics/constants.js","import Statistics from '../statistics/statistics';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n * The constant for the name of the focus component.\n * @type {string}\n */\nComponentsVersions.FOCUS_COMPONENT = 'focus';\n\n/**\n * The constant for the name of the videobridge component.\n * @type {string}\n */\nComponentsVersions.VIDEOBRIDGE_COMPONENT = 'videobridge';\n\n/**\n * The constant for the name of the XMPP server component.\n * @type {string}\n */\nComponentsVersions.XMPP_SERVER_COMPONENT = 'xmpp';\n\n/**\n * Creates new instance of <tt>ComponentsVersions</tt> which will be discovering\n * the versions of conferencing system components in given\n * <tt>JitsiConference</tt>.\n * @param conference <tt>JitsiConference</tt> instance which will be used to\n *        listen for focus presence updates.\n * @constructor\n */\nexport default function ComponentsVersions(conference) {\n\n    this.versions = {};\n\n    this.conference = conference;\n    this.conference.addCommandListener(\n        'versions', this.processPresence.bind(this));\n}\n\nComponentsVersions.prototype.processPresence\n    = function(node, mucResource, mucJid) {\n        if (node.attributes.xmlns !== 'http://jitsi.org/jitmeet') {\n            logger.warn('Ignored presence versions node - invalid xmlns', node);\n\n            return;\n        }\n\n        if (!this.conference._isFocus(mucJid)) {\n            logger.warn(\n                `Received versions not from the focus user: ${node}`,\n                mucJid);\n\n            return;\n        }\n\n        const log = [];\n\n        node.children.forEach(item => {\n\n            const componentName = item.attributes.name;\n\n            if (componentName !== ComponentsVersions.FOCUS_COMPONENT\n            && componentName !== ComponentsVersions.XMPP_SERVER_COMPONENT\n            && componentName !== ComponentsVersions.VIDEOBRIDGE_COMPONENT) {\n                logger.warn(\n                    `Received version for not supported component name: ${\n                        componentName}`);\n\n                return;\n            }\n\n            const version = item.value;\n\n            if (this.versions[componentName] !== version) {\n                this.versions[componentName] = version;\n                logger.info(`Got ${componentName} version: ${version}`);\n\n                log.push({\n                    id: 'component_version',\n                    component: componentName,\n                    version\n                });\n            }\n        });\n\n        // logs versions to stats\n        if (log.length > 0) {\n            Statistics.sendLog(JSON.stringify(log));\n        }\n    };\n\n/**\n * Obtains the version of conferencing system component.\n * @param componentName the name of the component for which we want to obtain\n *        the version.\n * @returns {String} which describes the version of the component identified by\n *          given <tt>componentName</tt> or <tt>undefined</tt> if not found.\n */\nComponentsVersions.prototype.getComponentVersion = function(componentName) {\n    return this.versions[componentName];\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/version/ComponentsVersions.js","import * as ConnectionQualityEvents\n    from '../../service/connectivity/ConnectionQualityEvents';\nimport * as ConferenceEvents from '../../JitsiConferenceEvents';\nimport { getLogger } from 'jitsi-meet-logger';\n\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\nconst VideoType = require('../../service/RTC/VideoType');\nconst Resolutions = require('../../service/RTC/Resolutions');\n\nconst logger = getLogger(__filename);\n\n/**\n * The value to use for the \"type\" field for messages sent by ConnectionQuality\n * over the data channel.\n */\nconst STATS_MESSAGE_TYPE = 'stats';\n\n/**\n * See media/engine/simulcast.ss from webrtc.org\n */\nconst kSimulcastFormats = [\n    { width: 1920,\n        height: 1080,\n        layers: 3,\n        max: 5000,\n        target: 4000,\n        min: 800 },\n    { width: 1280,\n        height: 720,\n        layers: 3,\n        max: 2500,\n        target: 2500,\n        min: 600 },\n    { width: 960,\n        height: 540,\n        layers: 3,\n        max: 900,\n        target: 900,\n        min: 450 },\n    { width: 640,\n        height: 360,\n        layers: 2,\n        max: 700,\n        target: 500,\n        min: 150 },\n    { width: 480,\n        height: 270,\n        layers: 2,\n        max: 450,\n        target: 350,\n        min: 150 },\n    { width: 320,\n        height: 180,\n        layers: 1,\n        max: 200,\n        target: 150,\n        min: 30 }\n];\n\n/**\n * The initial bitrate for video in kbps.\n */\nlet startBitrate = 800;\n\n/**\n * Gets the expected bitrate (in kbps) in perfect network conditions.\n * @param simulcast {boolean} whether simulcast is enabled or not.\n * @param resolution {Resolution} the resolution.\n * @param millisSinceStart {number} the number of milliseconds since sending\n * video started.\n */\nfunction getTarget(simulcast, resolution, millisSinceStart) {\n    // Completely ignore the bitrate in the first 5 seconds, as the first\n    // event seems to fire very early and the value is suspicious and causes\n    // false positives.\n    if (millisSinceStart < 5000) {\n        return 1;\n    }\n\n    let target = 0;\n    let height = Math.min(resolution.height, resolution.width);\n\n    if (simulcast) {\n        // Find the first format with height no bigger than ours.\n        let simulcastFormat = kSimulcastFormats.find(f => f.height <= height);\n\n        if (simulcastFormat) {\n            // Sum the target fields from all simulcast layers for the given\n            // resolution (e.g. 720p + 360p + 180p).\n            for (height = simulcastFormat.height; height >= 180; height /= 2) {\n                const targetHeight = height;\n\n                simulcastFormat\n                    = kSimulcastFormats.find(f => f.height === targetHeight);\n                if (simulcastFormat) {\n                    target += simulcastFormat.target;\n                } else {\n                    break;\n                }\n            }\n        }\n    } else {\n        // See GetMaxDefaultVideoBitrateKbps in\n        // media/engine/webrtcvideoengine2.cc from webrtc.org\n        const pixels = resolution.width * resolution.height;\n\n        if (pixels <= 320 * 240) {\n            target = 600;\n        } else if (pixels <= 640 * 480) {\n            target = 1700;\n        } else if (pixels <= 960 * 540) {\n            target = 2000;\n        } else {\n            target = 2500;\n        }\n    }\n\n    // Allow for an additional 1 second for ramp up -- delay any initial drop\n    // of connection quality by 1 second.\n    return Math.min(target, rampUp(Math.max(0, millisSinceStart - 1000)));\n}\n\n/**\n * Gets the bitrate to which GCC would have ramped up in perfect network\n * conditions after millisSinceStart milliseconds.\n * @param millisSinceStart {number} the number of milliseconds since sending\n * video was enabled.\n */\nfunction rampUp(millisSinceStart) {\n    if (millisSinceStart > 60000) {\n        return Number.MAX_SAFE_INTEGER;\n    }\n\n    // According to GCC the send side bandwidth estimation grows with at most\n    // 8% per second.\n    // https://tools.ietf.org/html/draft-ietf-rmcat-gcc-02#section-5.5\n    return startBitrate * Math.pow(1.08, millisSinceStart / 1000);\n}\n\n/**\n * A class which monitors the local statistics coming from the RTC modules, and\n * calculates a \"connection quality\" value, in percent, for the media\n * connection. A value of 100% indicates a very good network connection, and a\n * value of 0% indicates a poor connection.\n */\nexport default class ConnectionQuality {\n    /**\n     *\n     * @param conference\n     * @param eventEmitter\n     * @param options\n     */\n    constructor(conference, eventEmitter, options) {\n        this.eventEmitter = eventEmitter;\n\n        /**\n         * The owning JitsiConference.\n         */\n        this._conference = conference;\n\n        /**\n         * Holds statistics about the local connection quality.\n         */\n        this._localStats = {\n            connectionQuality: 100,\n            jvbRTT: undefined\n        };\n\n        /**\n         * The time this._localStats.connectionQuality was last updated.\n         */\n        this._lastConnectionQualityUpdate = -1;\n\n        /**\n         * Maps a participant ID to an object holding connection quality\n         * statistics received from this participant.\n         */\n        this._remoteStats = {};\n\n        /**\n         * The time that the ICE state last changed to CONNECTED. We use this\n         * to calculate how much time we as a sender have had to ramp-up.\n         */\n        this._timeIceConnected = -1;\n\n        /**\n         * The time that local video was unmuted. We use this to calculate how\n         * much time we as a sender have had to ramp-up.\n         */\n        this._timeVideoUnmuted = -1;\n\n\n        // We assume a global startBitrate value for the sake of simplicity.\n        if (options.startBitrate && options.startBitrate > 0) {\n            startBitrate = options.startBitrate;\n        }\n\n        // TODO: consider ignoring these events and letting the user of\n        // lib-jitsi-meet handle these separately.\n        conference.on(\n            ConferenceEvents.CONNECTION_INTERRUPTED,\n            () => {\n                this._updateLocalConnectionQuality(0);\n                this.eventEmitter.emit(\n                    ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n                    this._localStats);\n                this._broadcastLocalStats();\n            });\n\n        conference.room.addListener(\n            XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\n            (jingleSession, newState) => {\n                if (!jingleSession.isP2P && newState === 'connected') {\n                    this._timeIceConnected = window.performance.now();\n                }\n            });\n\n        // Listen to DataChannel message from other participants in the\n        // conference, and update the _remoteStats field accordingly.\n        conference.on(\n            ConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n            (participant, payload) => {\n                if (payload.type === STATS_MESSAGE_TYPE) {\n                    this._updateRemoteStats(\n                        participant.getId(), payload.values);\n                }\n            });\n\n        // Listen to local statistics events originating from the RTC module\n        // and update the _localStats field.\n        // Oh, and by the way, the resolutions of all remote participants are\n        // also piggy-backed in these \"local\" statistics. It's obvious, really,\n        // if one carefully reads the *code* (but not the docs) in\n        // UI/VideoLayout/VideoLayout.js#updateLocalConnectionStats in\n        // jitsi-meet\n        // TODO: We should keep track of the remote resolution in _remoteStats,\n        // and notify about changes via separate events.\n        conference.statistics.addConnectionStatsListener(\n            this._updateLocalStats.bind(this));\n\n        // Save the last time we were unmuted.\n        conference.on(\n            ConferenceEvents.TRACK_MUTE_CHANGED,\n            track => {\n                if (track.isVideoTrack()) {\n                    if (track.isMuted()) {\n                        this._timeVideoUnmuted = -1;\n                    } else {\n                        this._maybeUpdateUnmuteTime();\n                    }\n                }\n            });\n        conference.on(\n            ConferenceEvents.TRACK_ADDED,\n            track => {\n                if (track.isVideoTrack() && !track.isMuted()) {\n                    this._maybeUpdateUnmuteTime();\n                }\n            });\n    }\n\n    /**\n     * Sets _timeVideoUnmuted if it was previously unset. If it was already set,\n     * doesn't change it.\n     */\n    _maybeUpdateUnmuteTime() {\n        if (this._timeVideoUnmuted < 0) {\n            this._timeVideoUnmuted = window.performance.now();\n        }\n    }\n\n    /**\n     * Calculates a new \"connection quality\" value.\n     * @param videoType {VideoType} the type of the video source (camera or\n     * a screen capture).\n     * @param isMuted {boolean} whether the local video is muted.\n     * @param resolutionName {Resolution} the input resolution used by the\n     * camera.\n     * @returns {*} the newly calculated connection quality.\n     */\n    _calculateConnectionQuality(videoType, isMuted, resolutionName) {\n\n        // resolutionName is an index into Resolutions (where \"720\" is\n        // \"1280x720\" and \"960\" is \"960x720\" ...).\n        const resolution = Resolutions[resolutionName];\n\n        let quality = 100;\n        let packetLoss;\n\n        // TODO: take into account packet loss for received streams\n\n        if (this._localStats.packetLoss) {\n            packetLoss = this._localStats.packetLoss.upload;\n\n            // Ugly Hack Alert (UHA):\n            // The packet loss for the upload direction is calculated based on\n            // incoming RTCP Receiver Reports. Since we don't have RTCP\n            // termination for audio, these reports come from the actual\n            // receivers in the conference and therefore the reported packet\n            // loss includes loss from the bridge to the receiver.\n            // When we are sending video this effect is small, because the\n            // number of video packets is much larger than the number of audio\n            // packets (and our calculation is based on the total number of\n            // received and lost packets).\n            // When video is muted, however, the effect might be significant,\n            // but we don't know what it is. We do know that it is positive, so\n            // as a temporary solution, until RTCP termination is implemented\n            // for the audio streams, we relax the packet loss checks here.\n            if (isMuted) {\n                packetLoss *= 0.5;\n            }\n        }\n\n        if (isMuted || !resolution || videoType === VideoType.DESKTOP\n            || this._timeIceConnected < 0\n            || this._timeVideoUnmuted < 0) {\n\n            // Calculate a value based on packet loss only.\n            if (packetLoss === undefined) {\n                logger.error('Cannot calculate connection quality, unknown '\n                    + 'packet loss.');\n                quality = 100;\n            } else if (packetLoss <= 2) {\n                quality = 100; // Full 5 bars.\n            } else if (packetLoss <= 4) {\n                quality = 70; // 4 bars\n            } else if (packetLoss <= 6) {\n                quality = 50; // 3 bars\n            } else if (packetLoss <= 8) {\n                quality = 30; // 2 bars\n            } else if (packetLoss <= 12) {\n                quality = 10; // 1 bars\n            } else {\n                quality = 0; // Still 1 bar, but slower climb-up.\n            }\n        } else {\n            // Calculate a value based on the sending bitrate.\n\n            // time since sending of video was enabled.\n            const millisSinceStart = window.performance.now()\n                    - Math.max(this._timeVideoUnmuted, this._timeIceConnected);\n\n            // Figure out if simulcast is in use\n            const activeTPC = this._conference.getActivePeerConnection();\n            const isSimulcastOn\n                = Boolean(activeTPC && activeTPC.isSimulcastOn());\n\n            // expected sending bitrate in perfect conditions\n            let target\n                = getTarget(isSimulcastOn, resolution, millisSinceStart);\n\n            target = 0.9 * target;\n\n            quality = 100 * this._localStats.bitrate.upload / target;\n\n            // Whatever the bitrate, drop early if there is significant loss\n            if (packetLoss && packetLoss >= 10) {\n                quality = Math.min(quality, 30);\n            }\n        }\n\n        // Make sure that the quality doesn't climb quickly\n        if (this._lastConnectionQualityUpdate > 0) {\n            const maxIncreasePerSecond = 2;\n            const prevConnectionQuality = this._localStats.connectionQuality;\n            const diffSeconds\n                = (window.performance.now() - this._lastConnectionQualityUpdate)\n                    / 1000;\n\n            quality\n                = Math.min(\n                    quality,\n                    prevConnectionQuality\n                        + (diffSeconds * maxIncreasePerSecond));\n        }\n\n        return Math.min(100, quality);\n    }\n\n    /**\n     * Updates the localConnectionQuality value\n     * @param values {number} the new value. Should be in [0, 100].\n     */\n    _updateLocalConnectionQuality(value) {\n        this._localStats.connectionQuality = value;\n        this._lastConnectionQualityUpdate = window.performance.now();\n    }\n\n    /**\n     * Broadcasts the local statistics to all other participants in the\n     * conference.\n     */\n    _broadcastLocalStats() {\n        // Send only the data that remote participants care about.\n        const data = {\n            bitrate: this._localStats.bitrate,\n            packetLoss: this._localStats.packetLoss,\n            connectionQuality: this._localStats.connectionQuality,\n            jvbRTT: this._localStats.jvbRTT\n        };\n\n        try {\n            this._conference.broadcastEndpointMessage({\n                type: STATS_MESSAGE_TYPE,\n                values: data });\n        } catch (e) {\n            // We often hit this in the beginning of a call, before the data\n            // channel is ready. It is not a big problem, because we will\n            // send the statistics again after a few seconds, and the error is\n            // already logged elsewhere. So just ignore it.\n\n            // let errorMsg = \"Failed to broadcast local stats\";\n            // logger.error(errorMsg, e);\n            // GlobalOnErrorHandler.callErrorHandler(\n            //    new Error(errorMsg + \": \" + e));\n        }\n    }\n\n    /**\n     * Updates the local statistics\n     * @param {TraceablePeerConnection} tpc the peerconnection which emitted\n     * the stats\n     * @param data new statistics\n     */\n    _updateLocalStats(tpc, data) {\n        // Update jvbRTT\n        if (!tpc.isP2P) {\n            const jvbRTT\n                = data.transport\n                    && data.transport.length && data.transport[0].rtt;\n\n            this._localStats.jvbRTT = jvbRTT ? jvbRTT : undefined;\n        }\n\n        // Do not continue with processing of other stats if they do not\n        // originate from the active peerconnection\n        if (tpc !== this._conference.getActivePeerConnection()) {\n            return;\n        }\n\n        let key;\n        const updateLocalConnectionQuality\n            = !this._conference.isConnectionInterrupted();\n        const localVideoTrack\n            = this._conference.getLocalVideoTrack();\n        const videoType\n            = localVideoTrack ? localVideoTrack.videoType : undefined;\n        const isMuted = localVideoTrack ? localVideoTrack.isMuted() : true;\n        const resolution = localVideoTrack ? localVideoTrack.resolution : null;\n\n        if (!isMuted) {\n            this._maybeUpdateUnmuteTime();\n        }\n\n        // Copy the fields already in 'data'.\n        for (key in data) {\n            if (data.hasOwnProperty(key)) {\n                this._localStats[key] = data[key];\n            }\n        }\n\n        // And re-calculate the connectionQuality field.\n        if (updateLocalConnectionQuality) {\n            this._updateLocalConnectionQuality(\n                this._calculateConnectionQuality(\n                    videoType,\n                    isMuted,\n                    resolution));\n        }\n\n        this.eventEmitter.emit(\n            ConnectionQualityEvents.LOCAL_STATS_UPDATED,\n            this._localStats);\n        this._broadcastLocalStats();\n    }\n\n    /**\n     * Updates remote statistics\n     * @param id the id of the remote participant\n     * @param data the statistics received\n     */\n    _updateRemoteStats(id, data) {\n        // Use only the fields we need\n        this._remoteStats[id] = {\n            bitrate: data.bitrate,\n            packetLoss: data.packetLoss,\n            connectionQuality: data.connectionQuality,\n            jvbRTT: data.jvbRTT\n        };\n\n        this.eventEmitter.emit(\n            ConnectionQualityEvents.REMOTE_STATS_UPDATED,\n            id,\n            this._remoteStats[id]);\n    }\n\n    /**\n     * Returns the local statistics.\n     * Exported only for use in jitsi-meet-torture.\n     */\n    getStats() {\n        return this._localStats;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/connectivity/ConnectionQuality.js","import {\n    CONNECTION_DISCONNECTED,\n    CONNECTION_ESTABLISHED,\n    CONNECTION_FAILED\n} from './JitsiConnectionEvents';\nimport XMPP from './modules/xmpp/xmpp';\n\n/**\n * @typedef {Object} UpgradeRoleError\n *\n * @property {JitsiConnectionErrors} [connectionError] - One of\n * {@link JitsiConnectionErrors} which occurred when trying to connect to the\n * XMPP server.\n * @property {String} [authenticationError] - One of XMPP error conditions\n * returned by Jicofo on authentication attempt. See\n * {@link https://xmpp.org/rfcs/rfc3920.html#streams-error}.\n * @property {String} [message] - More details about the error.\n * @property {Object} [credentials] - The credentials that failed the\n * authentication.\n * @property {String} [credentials.jid] - The XMPP ID part of the credentials\n * that failed the authentication.\n * @property {string} [credentials.password] - The password part of the\n * credentials that failed the authentication.\n *\n * NOTE If neither one of the errors is present, then the operation has been\n * canceled.\n */\n\n/* eslint-disable no-invalid-this */\n\n/**\n * Connects to the XMPP server using the specified credentials and contacts\n * Jicofo in order to obtain a session ID (which is then stored in the local\n * storage). The user's role of the parent conference will be upgraded to\n * moderator (by Jicofo). It's also used to join the conference when starting\n * from anonymous domain and only authenticated users are allowed to create new\n * rooms.\n *\n * @param {Object} options\n * @param {string} options.id - XMPP user's ID to log in. For example,\n * user@xmpp-server.com.\n * @param {string} options.password - XMPP user's password to log in with.\n * @param {string} [options.roomPassword] - The password to join the MUC with.\n * @param {Function} [options.onLoginSuccessful] - Callback called when logging\n * into the XMPP server was successful. The next step will be to obtain a new\n * session ID from Jicofo and join the MUC using it which will effectively\n * upgrade the user's role to moderator.\n * @returns {Object} A <tt>thenable</tt> which (1) settles when the process of\n * authenticating and upgrading the role of the specified XMPP user finishes and\n * (2) has a <tt>cancel</tt> method that allows the caller to interrupt the\n * process. If the process finishes successfully, the session ID has been stored\n * in the settings and the <tt>thenable</tt> is resolved. If the process\n * finishes with failure, the <tt>thenable</tt> is rejected with reason of type\n * {@link UpgradeRoleError} which will have either <tt>connectionError</tt> or\n * <tt>authenticationError</tt> property set depending on which of the steps has\n * failed. If <tt>cancel</tt> is called before the process finishes, then the\n * thenable will be rejected with an empty object (i.e. no error property will\n * be set on the rejection reason).\n */\nexport default function authenticateAndUpgradeRole({\n    // 1. Log the specified XMPP user in.\n    id,\n    password,\n\n    // 2. Let the API client/consumer know as soon as the XMPP user has been\n    //    successfully logged in.\n    onLoginSuccessful,\n\n    // 3. Join the MUC.\n    roomPassword\n}) {\n    let canceled = false;\n    let rejectPromise;\n    let xmpp = new XMPP(this.connection.options);\n\n    const process = new Promise((resolve, reject) => {\n        // The process is represented by a Thenable with a cancel method. The\n        // Thenable is implemented using Promise and the cancel using the\n        // Promise's reject function.\n        rejectPromise = reject;\n\n\n        xmpp.addListener(\n            CONNECTION_DISCONNECTED,\n            () => {\n                xmpp = undefined;\n            });\n        xmpp.addListener(\n            CONNECTION_ESTABLISHED,\n            () => {\n                if (canceled) {\n                    return;\n                }\n\n                // Let the caller know that the XMPP login was successful.\n                onLoginSuccessful && onLoginSuccessful();\n\n                // Now authenticate with Jicofo and get a new session ID.\n                const room\n                    = xmpp.createRoom(this.options.name, this.options.config);\n\n                room.moderator.authenticate()\n                    .then(() => {\n                        xmpp && xmpp.disconnect();\n\n                        if (canceled) {\n                            return;\n                        }\n\n                        // At this point we should have the new session ID\n                        // stored in the settings. Jicofo will allow to join the\n                        // room.\n                        this.join(roomPassword);\n\n                        resolve();\n                    })\n                    .catch(({ error, message }) => {\n                        xmpp.disconnect();\n\n                        reject({\n                            authenticationError: error,\n                            message\n                        });\n                    });\n            });\n        xmpp.addListener(\n            CONNECTION_FAILED,\n            (connectionError, message, credentials) => {\n                reject({\n                    connectionError,\n                    credentials,\n                    message\n                });\n                xmpp = undefined;\n            });\n\n        canceled || xmpp.connect(id, password);\n    });\n\n    /**\n     * Cancels the process, if it's in progress, of authenticating and upgrading\n     * the role of the local participant/user.\n     *\n     * @public\n     * @returns {void}\n     */\n    process.cancel = () => {\n        canceled = true;\n        rejectPromise({});\n        xmpp && xmpp.disconnect();\n    };\n\n    return process;\n}\n\n/* eslint-enable no-invalid-this */\n\n\n\n// WEBPACK FOOTER //\n// ./authenticateAndUpgradeRole.js","(function (global, factory) {\n\ttypeof exports === 'object' && typeof module !== 'undefined' ? factory(require('strophe.js')) :\n\ttypeof define === 'function' && define.amd ? define(['strophe.js'], factory) :\n\t(factory(global.window));\n}(this, (function (strophe_js) { 'use strict';\n\nstrophe_js.Strophe.addConnectionPlugin('disco',\n{\n    _connection: null,\n    _identities : [],\n    _features : [],\n    _items : [],\n    /** Function: init\n     * Plugin init\n     *\n     * Parameters:\n     *   (Strophe.Connection) conn - Strophe connection\n     */\n    init: function(conn)\n    {\n    this._connection = conn;\n        this._identities = [];\n        this._features   = [];\n        this._items      = [];\n        // disco info\n        conn.addHandler(this._onDiscoInfo.bind(this), strophe_js.Strophe.NS.DISCO_INFO, 'iq', 'get', null, null);\n        // disco items\n        conn.addHandler(this._onDiscoItems.bind(this), strophe_js.Strophe.NS.DISCO_ITEMS, 'iq', 'get', null, null);\n    },\n    /** Function: addIdentity\n     * See http://xmpp.org/registrar/disco-categories.html\n     * Parameters:\n     *   (String) category - category of identity (like client, automation, etc ...)\n     *   (String) type - type of identity (like pc, web, bot , etc ...)\n     *   (String) name - name of identity in natural language\n     *   (String) lang - lang of name parameter\n     *\n     * Returns:\n     *   Boolean\n     */\n    addIdentity: function(category, type, name, lang)\n    {\n        for (var i=0; i<this._identities.length; i++)\n        {\n            if (this._identities[i].category == category &&\n                this._identities[i].type == type &&\n                this._identities[i].name == name &&\n                this._identities[i].lang == lang)\n            {\n                return false;\n            }\n        }\n        this._identities.push({category: category, type: type, name: name, lang: lang});\n        return true;\n    },\n    /** Function: addFeature\n     *\n     * Parameters:\n     *   (String) var_name - feature name (like jabber:iq:version)\n     *\n     * Returns:\n     *   boolean\n     */\n    addFeature: function(var_name)\n    {\n        for (var i=0; i<this._features.length; i++)\n        {\n             if (this._features[i] == var_name)\n                 return false;\n        }\n        this._features.push(var_name);\n        return true;\n    },\n    /** Function: removeFeature\n     *\n     * Parameters:\n     *   (String) var_name - feature name (like jabber:iq:version)\n     *\n     * Returns:\n     *   boolean\n     */\n    removeFeature: function(var_name)\n    {\n        for (var i=0; i<this._features.length; i++)\n        {\n             if (this._features[i] === var_name){\n                 this._features.splice(i,1);\n                 return true;\n             }\n        }\n        return false;\n    },\n    /** Function: addItem\n     *\n     * Parameters:\n     *   (String) jid\n     *   (String) name\n     *   (String) node\n     *   (Function) call_back\n     *\n     * Returns:\n     *   boolean\n     */\n    addItem: function(jid, name, node, call_back)\n    {\n        if (node && !call_back)\n            return false;\n        this._items.push({jid: jid, name: name, node: node, call_back: call_back});\n        return true;\n    },\n    /** Function: info\n     * Info query\n     *\n     * Parameters:\n     *   (Function) call_back\n     *   (String) jid\n     *   (String) node\n     */\n    info: function(jid, node, success, error, timeout)\n    {\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_INFO};\n        if (node)\n            attrs.node = node;\n\n        var info = strophe_js.$iq({from:this._connection.jid,\n                         to:jid, type:'get'}).c('query', attrs);\n        this._connection.sendIQ(info, success, error, timeout);\n    },\n    /** Function: items\n     * Items query\n     *\n     * Parameters:\n     *   (Function) call_back\n     *   (String) jid\n     *   (String) node\n     */\n    items: function(jid, node, success, error, timeout)\n    {\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_ITEMS};\n        if (node)\n            attrs.node = node;\n\n        var items = strophe_js.$iq({from:this._connection.jid,\n                         to:jid, type:'get'}).c('query', attrs);\n        this._connection.sendIQ(items, success, error, timeout);\n    },\n\n    /** PrivateFunction: _buildIQResult\n     */\n    _buildIQResult: function(stanza, query_attrs)\n    {\n        var id   =  stanza.getAttribute('id');\n        var from = stanza.getAttribute('from');\n        var iqresult = strophe_js.$iq({type: 'result', id: id});\n\n        if (from !== null) {\n            iqresult.attrs({to: from});\n        }\n\n        return iqresult.c('query', query_attrs);\n    },\n\n    /** PrivateFunction: _onDiscoInfo\n     * Called when receive info request\n     */\n    _onDiscoInfo: function(stanza)\n    {\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\n        var attrs = {xmlns: strophe_js.Strophe.NS.DISCO_INFO};\n        var i;\n        if (node)\n        {\n            attrs.node = node;\n        }\n        var iqresult = this._buildIQResult(stanza, attrs);\n        for (i=0; i<this._identities.length; i++)\n        {\n            attrs = {category: this._identities[i].category,\n                         type    : this._identities[i].type};\n            if (this._identities[i].name)\n                attrs.name = this._identities[i].name;\n            if (this._identities[i].lang)\n                attrs['xml:lang'] = this._identities[i].lang;\n            iqresult.c('identity', attrs).up();\n        }\n        for (i=0; i<this._features.length; i++)\n        {\n            iqresult.c('feature', {'var':this._features[i]}).up();\n        }\n        this._connection.send(iqresult.tree());\n        return true;\n    },\n    /** PrivateFunction: _onDiscoItems\n     * Called when receive items request\n     */\n    _onDiscoItems: function(stanza)\n    {\n        var query_attrs = {xmlns: strophe_js.Strophe.NS.DISCO_ITEMS};\n        var node = stanza.getElementsByTagName('query')[0].getAttribute('node');\n        var items, i;\n        if (node)\n        {\n            query_attrs.node = node;\n            items = [];\n            for (i = 0; i < this._items.length; i++)\n            {\n                if (this._items[i].node == node)\n                {\n                    items = this._items[i].call_back(stanza);\n                    break;\n                }\n            }\n        }\n        else\n        {\n            items = this._items;\n        }\n        var iqresult = this._buildIQResult(stanza, query_attrs);\n        for (i = 0; i < items.length; i++)\n        {\n            var attrs = {jid:  items[i].jid};\n            if (items[i].name)\n                attrs.name = items[i].name;\n            if (items[i].node)\n                attrs.node = items[i].node;\n            iqresult.c('item', attrs).up();\n        }\n        this._connection.send(iqresult.tree());\n        return true;\n    }\n});\n\n})));\n//# sourceMappingURL=strophe.disco.js.map\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/strophejs-plugin-disco/lib/strophe.disco.js\n// module id = 96\n// module chunks = 0","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { Strophe } from 'strophe.js';\n\nimport ChatRoom from './ChatRoom';\nimport { ConnectionPluginListenable } from './ConnectionPlugin';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * MUC connection plugin.\n */\nclass MucConnectionPlugin extends ConnectionPluginListenable {\n    /**\n     *\n     * @param xmpp\n     */\n    constructor(xmpp) {\n        super();\n        this.xmpp = xmpp;\n        this.rooms = {};\n    }\n\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n\n        // add handlers (just once)\n        this.connection.addHandler(this.onPresence.bind(this), null,\n            'presence', null, null, null, null);\n        this.connection.addHandler(this.onPresenceUnavailable.bind(this),\n            null, 'presence', 'unavailable', null);\n        this.connection.addHandler(this.onPresenceError.bind(this), null,\n            'presence', 'error', null);\n        this.connection.addHandler(this.onMessage.bind(this), null,\n            'message', null, null);\n        this.connection.addHandler(this.onMute.bind(this),\n            'http://jitsi.org/jitmeet/audio', 'iq', 'set', null, null);\n    }\n\n    /**\n     *\n     * @param jid\n     * @param password\n     * @param options\n     */\n    createRoom(jid, password, options) {\n        const roomJid = Strophe.getBareJidFromJid(jid);\n\n        if (this.rooms[roomJid]) {\n            const errmsg = 'You are already in the room!';\n\n            logger.error(errmsg);\n            throw new Error(errmsg);\n        }\n        this.rooms[roomJid] = new ChatRoom(this.connection, jid,\n            password, this.xmpp, options);\n        this.eventEmitter.emit(\n            XMPPEvents.EMUC_ROOM_ADDED, this.rooms[roomJid]);\n\n        return this.rooms[roomJid];\n    }\n\n    /**\n     *\n     * @param jid\n     */\n    doLeave(jid) {\n        this.eventEmitter.emit(\n            XMPPEvents.EMUC_ROOM_REMOVED, this.rooms[jid]);\n        delete this.rooms[jid];\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresence(pres) {\n        const from = pres.getAttribute('from');\n\n        // What is this for? A workaround for something?\n        if (pres.getAttribute('type')) {\n            return true;\n        }\n\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return;\n        }\n\n        // Parse status.\n        if ($(pres).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n            + '>status[code=\"201\"]').length) {\n            room.createNonAnonymousRoom();\n        }\n\n        room.onPresence(pres);\n\n        return true;\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresenceUnavailable(pres) {\n        const from = pres.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return;\n        }\n\n        room.onPresenceUnavailable(pres, from);\n\n        return true;\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresenceError(pres) {\n        const from = pres.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return;\n        }\n\n        room.onPresenceError(pres, from);\n\n        return true;\n    }\n\n    /**\n     *\n     * @param msg\n     */\n    onMessage(msg) {\n        // FIXME: this is a hack. but jingle on muc makes nickchanges hard\n        const from = msg.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return;\n        }\n\n        room.onMessage(msg, from);\n\n        return true;\n    }\n\n    /**\n     *\n     * @param iq\n     */\n    onMute(iq) {\n        const from = iq.getAttribute('from');\n        const room = this.rooms[Strophe.getBareJidFromJid(from)];\n\n        if (!room) {\n            return;\n        }\n\n        room.onMute(iq);\n\n        return true;\n    }\n}\n\n/**\n *\n * @param XMPP\n */\nexport default function(XMPP) {\n    Strophe.addConnectionPlugin('emuc', new MucConnectionPlugin(XMPP));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/strophe.emuc.js","/* global $, __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, $msg, $pres, Strophe } from 'strophe.js';\n\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport * as JitsiTranscriptionStatus from '../../JitsiTranscriptionStatus';\nimport Listenable from '../util/Listenable';\nimport Settings from '../settings/Settings';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\nimport Moderator from './moderator';\nimport Recorder from './recording';\n\nconst logger = getLogger(__filename);\n\nconst parser = {\n    packet2JSON(packet, nodes) {\n        const self = this;\n\n        // eslint-disable-next-line newline-per-chained-call\n        $(packet).children().each(function() {\n            // eslint-disable-next-line no-invalid-this\n            const tagName = $(this).prop('tagName');\n            const node = {\n                tagName\n            };\n\n            node.attributes = {};\n\n            // eslint-disable-next-line no-invalid-this\n            $($(this)[0].attributes).each((index, attr) => {\n                node.attributes[attr.name] = attr.value;\n            });\n\n            // eslint-disable-next-line no-invalid-this\n            const text = Strophe.getText($(this)[0]);\n\n            if (text) {\n                node.value = text;\n            }\n            node.children = [];\n            nodes.push(node);\n\n            // eslint-disable-next-line no-invalid-this\n            self.packet2JSON($(this), node.children);\n        });\n    },\n    json2packet(nodes, packet) {\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            if (node) {\n                packet.c(node.tagName, node.attributes);\n                if (node.value) {\n                    packet.t(node.value);\n                }\n                if (node.children) {\n                    this.json2packet(node.children, packet);\n                }\n                packet.up();\n            }\n        }\n\n        // packet.up();\n    }\n};\n\n/**\n * Returns array of JS objects from the presence JSON associated with the passed\n / nodeName\n * @param pres the presence JSON\n * @param nodeName the name of the node (videomuted, audiomuted, etc)\n */\nfunction filterNodeFromPresenceJSON(pres, nodeName) {\n    const res = [];\n\n    for (let i = 0; i < pres.length; i++) {\n        if (pres[i].tagName === nodeName) {\n            res.push(pres[i]);\n        }\n    }\n\n    return res;\n}\n\n/**\n * Constants used to verify if a given JSON message via the MUC should be\n * considered as a ENDPOINT_MESSAGE\n */\nconst VALID_FIELD_NAMES = [ 'jitsi-meet-muc-msg-topic', 'payload' ];\n\n/**\n * Check if the given argument is a valid JSON ENDPOINT_MESSAGE string by\n * parsing it and checking if it has a field called 'jitsi-meet-muc-msg-topic'\n * and a field called 'payload'\n *\n * @param {string} jsonString check if this string is a valid json string\n * and contains the special structure\n * @returns {boolean, object} if given object is a valid JSON string, return\n * the json object. Otherwise, return false;\n */\nfunction tryParseJSONAndVerify(jsonString) {\n    try {\n        const json = JSON.parse(jsonString);\n\n        // Handle non-exception-throwing cases:\n        // Neither JSON.parse(false) or JSON.parse(1234) throw errors,\n        // hence the type-checking,\n        // but... JSON.parse(null) returns null, and\n        // typeof null === \"object\",\n        // so we must check for that, too.\n        // Thankfully, null is falsey, so this suffices:\n        if (json && typeof json === 'object') {\n            const topic = json[VALID_FIELD_NAMES[0]];\n            const payload = json[VALID_FIELD_NAMES[1]];\n\n            if ((typeof topic === 'string' || topic instanceof String)\n                && payload) {\n\n                return json;\n            }\n\n            logger.debug('parsing valid json but does not have correct '\n                + 'structure', 'topic: ', topic, 'payload: ', payload);\n        }\n    } catch (e) {\n\n        return false;\n    }\n\n    return false;\n}\n\n// XXX As ChatRoom constructs XMPP stanzas and Strophe is build around the idea\n// of chaining function calls, allow long function call chains.\n/* eslint-disable newline-per-chained-call */\n\n/**\n *\n */\nexport default class ChatRoom extends Listenable {\n\n    /* eslint-disable max-params */\n\n    /**\n     *\n     * @param connection\n     * @param jid\n     * @param password\n     * @param XMPP\n     * @param options\n     */\n    constructor(connection, jid, password, XMPP, options) {\n        super();\n        this.xmpp = XMPP;\n        this.connection = connection;\n        this.roomjid = Strophe.getBareJidFromJid(jid);\n        this.myroomjid = jid;\n        this.password = password;\n        logger.info(`Joined MUC as ${this.myroomjid}`);\n        this.members = {};\n        this.presMap = {};\n        this.presHandlers = {};\n        this.joined = false;\n        this.role = null;\n        this.focusMucJid = null;\n        this.noBridgeAvailable = false;\n        this.options = options || {};\n        this.moderator\n            = new Moderator(this.roomjid, this.xmpp, this.eventEmitter, {\n                connection: this.xmpp.options,\n                conference: this.options\n            });\n        this.initPresenceMap(options);\n        this.lastPresences = {};\n        this.phoneNumber = null;\n        this.phonePin = null;\n        this.connectionTimes = {};\n        this.participantPropertyListener = null;\n\n        this.locked = false;\n        this.transcriptionStatus = JitsiTranscriptionStatus.OFF;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     *\n     */\n    initPresenceMap(options = {}) {\n        this.presMap.to = this.myroomjid;\n        this.presMap.xns = 'http://jabber.org/protocol/muc';\n        this.presMap.nodes = [];\n        this.presMap.nodes.push({\n            'tagName': 'user-agent',\n            'value': navigator.userAgent,\n            'attributes': { xmlns: 'http://jitsi.org/jitmeet/user-agent' }\n        });\n\n        if (options.enableStatsID) {\n            this.presMap.nodes.push({\n                'tagName': 'stats-id',\n                'value': Settings.callStatsUserName\n            });\n        }\n\n        // We need to broadcast 'videomuted' status from the beginning, cause\n        // Jicofo makes decisions based on that. Initialize it with 'false'\n        // here.\n        this.addVideoInfoToPresence(false);\n\n        if (options.deploymentInfo && options.deploymentInfo.userRegion) {\n            this.presMap.nodes.push({\n                'tagName': 'region',\n                'attributes': {\n                    id: options.deploymentInfo.userRegion,\n                    xmlns: 'http://jitsi.org/jitsi-meet'\n                }\n            });\n        }\n    }\n\n    /**\n     *\n     * @param devices\n     */\n    updateDeviceAvailability(devices) {\n        this.presMap.nodes.push({\n            'tagName': 'devices',\n            'children': [\n                {\n                    'tagName': 'audio',\n                    'value': devices.audio\n                },\n                {\n                    'tagName': 'video',\n                    'value': devices.video\n                }\n            ]\n        });\n    }\n\n    /**\n     *\n     * @param password\n     */\n    join(password) {\n        this.password = password;\n        this.moderator.allocateConferenceFocus(() => this.sendPresence(true));\n    }\n\n    /**\n     *\n     * @param fromJoin\n     */\n    sendPresence(fromJoin) {\n        const to = this.presMap.to;\n\n        if (!to || (!this.joined && !fromJoin)) {\n            // Too early to send presence - not initialized\n            return;\n        }\n\n        const pres = $pres({ to });\n\n        // xep-0045 defines: \"including in the initial presence stanza an empty\n        // <x/> element qualified by the 'http://jabber.org/protocol/muc'\n        // namespace\" and subsequent presences should not include that or it can\n        // be considered as joining, and server can send us the message history\n        // for the room on every presence\n        if (fromJoin) {\n            pres.c('x', { xmlns: this.presMap.xns });\n\n            if (this.password) {\n                pres.c('password').t(this.password).up();\n            }\n            pres.up();\n        }\n\n        parser.json2packet(this.presMap.nodes, pres);\n        this.connection.send(pres);\n        if (fromJoin) {\n            // XXX We're pressed for time here because we're beginning a complex\n            // and/or lengthy conference-establishment process which supposedly\n            // involves multiple RTTs. We don't have the time to wait for\n            // Strophe to decide to send our IQ.\n            this.connection.flush();\n        }\n    }\n\n    /**\n     * Sends the presence unavailable, signaling the server\n     * we want to leave the room.\n     */\n    doLeave() {\n        logger.log('do leave', this.myroomjid);\n        const pres = $pres({ to: this.myroomjid,\n            type: 'unavailable' });\n\n        this.presMap.length = 0;\n\n        // XXX Strophe is asynchronously sending by default. Unfortunately, that\n        // means that there may not be enough time to send the unavailable\n        // presence. Switching Strophe to synchronous sending is not much of an\n        // option because it may lead to a noticeable delay in navigating away\n        // from the current location. As a compromise, we will try to increase\n        // the chances of sending the unavailable presence within the short time\n        // span that we have upon unloading by invoking flush() on the\n        // connection. We flush() once before sending/queuing the unavailable\n        // presence in order to attemtp to have the unavailable presence at the\n        // top of the send queue. We flush() once more after sending/queuing the\n        // unavailable presence in order to attempt to have it sent as soon as\n        // possible.\n        this.connection.flush();\n        this.connection.send(pres);\n        this.connection.flush();\n    }\n\n    /**\n     *\n     */\n    discoRoomInfo() {\n        // https://xmpp.org/extensions/xep-0045.html#disco-roominfo\n\n        const getInfo\n            = $iq({\n                type: 'get',\n                to: this.roomjid\n            })\n                .c('query', { xmlns: Strophe.NS.DISCO_INFO });\n\n        this.connection.sendIQ(getInfo, result => {\n            const locked\n                = $(result).find('>query>feature[var=\"muc_passwordprotected\"]')\n                    .length\n                    === 1;\n\n            if (locked !== this.locked) {\n                this.eventEmitter.emit(XMPPEvents.MUC_LOCK_CHANGED, locked);\n                this.locked = locked;\n            }\n        }, error => {\n            GlobalOnErrorHandler.callErrorHandler(error);\n            logger.error('Error getting room info: ', error);\n        });\n    }\n\n    /**\n     *\n     */\n    createNonAnonymousRoom() {\n        // http://xmpp.org/extensions/xep-0045.html#createroom-reserved\n\n        const getForm = $iq({ type: 'get',\n            to: this.roomjid })\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' })\n            .c('x', { xmlns: 'jabber:x:data',\n                type: 'submit' });\n\n        const self = this;\n\n        this.connection.sendIQ(getForm, form => {\n            if (!$(form).find(\n                    '>query>x[xmlns=\"jabber:x:data\"]'\n                    + '>field[var=\"muc#roomconfig_whois\"]').length) {\n                const errmsg = 'non-anonymous rooms not supported';\n\n                GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n                logger.error(errmsg);\n\n                return;\n            }\n\n            const formSubmit = $iq({ to: self.roomjid,\n                type: 'set' })\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' });\n\n            formSubmit.c('x', { xmlns: 'jabber:x:data',\n                type: 'submit' });\n\n            formSubmit.c('field', { 'var': 'FORM_TYPE' })\n                .c('value')\n                .t('http://jabber.org/protocol/muc#roomconfig').up().up();\n\n            formSubmit.c('field', { 'var': 'muc#roomconfig_whois' })\n                .c('value').t('anyone').up().up();\n\n            self.connection.sendIQ(formSubmit);\n\n        }, error => {\n            GlobalOnErrorHandler.callErrorHandler(error);\n            logger.error('Error getting room configuration form: ', error);\n        });\n    }\n\n    /**\n     *\n     * @param pres\n     */\n    onPresence(pres) {\n        const from = pres.getAttribute('from');\n\n        // Parse roles.\n        const member = {};\n\n        member.show = $(pres).find('>show').text();\n        const $statusNode = $(pres).find('>status');\n        const hasStatus = $statusNode.length;\n\n        if (hasStatus) {\n            member.status = $statusNode.text();\n        }\n        let hasStatusUpdate = false;\n\n        const mucUserItem\n            = $(pres).find(\n                '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>item');\n\n        member.affiliation = mucUserItem.attr('affiliation');\n        member.role = mucUserItem.attr('role');\n\n        // Focus recognition\n        const jid = mucUserItem.attr('jid');\n\n        member.jid = jid;\n        member.isFocus\n            = jid && jid.indexOf(`${this.moderator.getFocusUserJid()}/`) === 0;\n        member.isHiddenDomain\n            = jid && jid.indexOf('@') > 0\n                && this.options.hiddenDomain\n                    === jid.substring(jid.indexOf('@') + 1, jid.indexOf('/'));\n\n        $(pres).find('>x').remove();\n        const nodes = [];\n\n        parser.packet2JSON(pres, nodes);\n        this.lastPresences[from] = nodes;\n        let jibri = null;\n\n        // process nodes to extract data needed for MUC_JOINED and\n        // MUC_MEMBER_JOINED events\n\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            switch (node.tagName) {\n            case 'nick':\n                member.nick = node.value;\n                break;\n            case 'userId':\n                member.id = node.value;\n                break;\n            case 'stats-id':\n                member.statsID = node.value;\n                break;\n            }\n        }\n\n        if (from === this.myroomjid) {\n            const newRole\n                = member.affiliation === 'owner' ? member.role : 'none';\n\n            if (this.role !== newRole) {\n                this.role = newRole;\n                this.eventEmitter.emit(\n                    XMPPEvents.LOCAL_ROLE_CHANGED,\n                    this.role);\n            }\n            if (!this.joined) {\n                this.joined = true;\n                const now = this.connectionTimes['muc.joined']\n                    = window.performance.now();\n\n                logger.log('(TIME) MUC joined:\\t', now);\n\n                // set correct initial state of locked\n                if (this.password) {\n                    this.locked = true;\n                }\n\n                this.eventEmitter.emit(XMPPEvents.MUC_JOINED);\n            }\n        } else if (this.members[from] === undefined) {\n            // new participant\n            this.members[from] = member;\n            logger.log('entered', from, member);\n            hasStatusUpdate = member.status !== undefined;\n            if (member.isFocus) {\n                this._initFocus(from, jid);\n            } else {\n                this.eventEmitter.emit(\n                    XMPPEvents.MUC_MEMBER_JOINED,\n                    from,\n                    member.nick,\n                    member.role,\n                    member.isHiddenDomain,\n                    member.statsID,\n                    member.status);\n\n                // we are reporting the status with the join\n                // so we do not want a second event about status update\n                hasStatusUpdate = false;\n            }\n        } else {\n            // Presence update for existing participant\n            // Watch role change:\n            const memberOfThis = this.members[from];\n\n            if (memberOfThis.role !== member.role) {\n                memberOfThis.role = member.role;\n                this.eventEmitter.emit(\n                    XMPPEvents.MUC_ROLE_CHANGED, from, member.role);\n            }\n\n            if (member.isFocus) {\n                // From time to time first few presences of the focus are not\n                // containing it's jid. That way we can mark later the focus\n                // member instead of not marking it at all and not starting the\n                // conference.\n                // FIXME: Maybe there is a better way to handle this issue. It\n                // seems there is some period of time in prosody that the\n                // configuration form is received but not applied. And if any\n                // participant joins during that period of time the first\n                // presence from the focus won't conain <item jid=\"focus...\" />.\n                memberOfThis.isFocus = true;\n                this._initFocus(from, jid);\n            }\n\n            // store the new display name\n            if (member.displayName) {\n                memberOfThis.displayName = member.displayName;\n            }\n\n            // update stored status message to be able to detect changes\n            if (memberOfThis.status !== member.status) {\n                hasStatusUpdate = true;\n                memberOfThis.status = member.status;\n            }\n        }\n\n        // after we had fired member or room joined events, lets fire events\n        // for the rest info we got in presence\n        for (let i = 0; i < nodes.length; i++) {\n            const node = nodes[i];\n\n            switch (node.tagName) {\n            case 'nick':\n                if (!member.isFocus) {\n                    const displayName\n                        = this.xmpp.options.displayJids\n                            ? Strophe.getResourceFromJid(from)\n                            : member.nick;\n\n                    if (displayName && displayName.length > 0) {\n                        this.eventEmitter.emit(\n                            XMPPEvents.DISPLAY_NAME_CHANGED,\n                            from,\n                            displayName);\n                    }\n                }\n                break;\n            case 'bridgeNotAvailable':\n                if (member.isFocus && !this.noBridgeAvailable) {\n                    this.noBridgeAvailable = true;\n                    this.eventEmitter.emit(XMPPEvents.BRIDGE_DOWN);\n                }\n                break;\n            case 'jibri-recording-status':\n                jibri = node;\n                break;\n            case 'transcription-status': {\n                const { attributes } = node;\n\n                if (!attributes) {\n                    break;\n                }\n\n                const { status } = attributes;\n\n                if (status && status !== this.transcriptionStatus) {\n                    this.transcriptionStatus = status;\n                    this.eventEmitter.emit(\n                        XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\n                        status\n                    );\n                }\n\n\n                break;\n            }\n            case 'call-control': {\n                const att = node.attributes;\n\n                if (!att) {\n                    break;\n                }\n                this.phoneNumber = att.phone || null;\n                this.phonePin = att.pin || null;\n                this.eventEmitter.emit(XMPPEvents.PHONE_NUMBER_CHANGED);\n                break;\n            }\n            default:\n                this.processNode(node, from);\n            }\n        }\n\n        // Trigger status message update if necessary\n        if (hasStatusUpdate) {\n            this.eventEmitter.emit(\n                XMPPEvents.PRESENCE_STATUS,\n                from,\n                member.status);\n        }\n\n        if (jibri) {\n            this.lastJibri = jibri;\n            if (this.recording) {\n                this.recording.handleJibriPresence(jibri);\n            }\n        }\n    }\n\n    /**\n     * Initialize some properties when the focus participant is verified.\n     * @param from jid of the focus\n     * @param mucJid the jid of the focus in the muc\n     */\n    _initFocus(from, mucJid) {\n        this.focusMucJid = from;\n        if (!this.recording) {\n            this.recording = new Recorder(this.options.recordingType,\n                this.eventEmitter, this.connection, this.focusMucJid,\n                this.options.jirecon, this.roomjid);\n            if (this.lastJibri) {\n                this.recording.handleJibriPresence(this.lastJibri);\n            }\n        }\n        logger.info(`Ignore focus: ${from}, real JID: ${mucJid}`);\n    }\n\n    /**\n     * Sets the special listener to be used for \"command\"s whose name starts\n     * with \"jitsi_participant_\".\n     */\n    setParticipantPropertyListener(listener) {\n        this.participantPropertyListener = listener;\n    }\n\n    /**\n     *\n     * @param node\n     * @param from\n     */\n    processNode(node, from) {\n        // make sure we catch all errors coming from any handler\n        // otherwise we can remove the presence handler from strophe\n        try {\n            let tagHandlers = this.presHandlers[node.tagName];\n\n            if (node.tagName.startsWith('jitsi_participant_')) {\n                tagHandlers = [ this.participantPropertyListener ];\n            }\n\n            if (tagHandlers) {\n                tagHandlers.forEach(handler => {\n                    handler(node, Strophe.getResourceFromJid(from), from);\n                });\n            }\n        } catch (e) {\n            GlobalOnErrorHandler.callErrorHandler(e);\n            logger.error(`Error processing:${node.tagName} node.`, e);\n        }\n    }\n\n    /**\n     *\n     * @param body\n     * @param nickname\n     */\n    sendMessage(body, nickname) {\n        const msg = $msg({ to: this.roomjid,\n            type: 'groupchat' });\n\n        msg.c('body', body).up();\n        if (nickname) {\n            msg.c('nick', { xmlns: 'http://jabber.org/protocol/nick' })\n                .t(nickname)\n                .up()\n                .up();\n        }\n        this.connection.send(msg);\n        this.eventEmitter.emit(XMPPEvents.SENDING_CHAT_MESSAGE, body);\n    }\n\n    /**\n     *\n     * @param subject\n     */\n    setSubject(subject) {\n        const msg = $msg({ to: this.roomjid,\n            type: 'groupchat' });\n\n        msg.c('subject', subject);\n        this.connection.send(msg);\n    }\n\n    /**\n     * Called when participant leaves.\n     * @param jid the jid of the participant that leaves\n     * @param skipEvents optional params to skip any events, including check\n     * whether this is the focus that left\n     */\n    onParticipantLeft(jid, skipEvents) {\n\n        delete this.lastPresences[jid];\n\n        if (skipEvents) {\n            return;\n        }\n\n        this.eventEmitter.emit(XMPPEvents.MUC_MEMBER_LEFT, jid);\n\n        this.moderator.onMucMemberLeft(jid);\n    }\n\n    /**\n     *\n     * @param pres\n     * @param from\n     */\n    onPresenceUnavailable(pres, from) {\n        // ignore presence\n        if ($(pres).find('>ignore[xmlns=\"http://jitsi.org/jitmeet/\"]').length) {\n            return true;\n        }\n\n        // room destroyed ?\n        if ($(pres).find('>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n            + '>destroy').length) {\n            let reason;\n            const reasonSelect\n                = $(pres).find(\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n                        + '>destroy>reason');\n\n            if (reasonSelect.length) {\n                reason = reasonSelect.text();\n            }\n\n            this.eventEmitter.emit(XMPPEvents.MUC_DESTROYED, reason);\n            this.connection.emuc.doLeave(this.roomjid);\n\n            return true;\n        }\n\n        // Status code 110 indicates that this notification is \"self-presence\".\n        const isSelfPresence\n            = $(pres)\n                .find(\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]>'\n                        + 'status[code=\"110\"]')\n                .length;\n        const isKick\n            = $(pres)\n                .find(\n                    '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n                        + '>status[code=\"307\"]')\n                .length;\n        const membersKeys = Object.keys(this.members);\n\n        if (!isSelfPresence) {\n            delete this.members[from];\n            this.onParticipantLeft(from, false);\n        } else if (membersKeys.length > 0) {\n            // If the status code is 110 this means we're leaving and we would\n            // like to remove everyone else from our view, so we trigger the\n            // event.\n            membersKeys.forEach(jid => {\n                const member = this.members[jid];\n\n                delete this.members[jid];\n                this.onParticipantLeft(jid, member.isFocus);\n            });\n            this.connection.emuc.doLeave(this.roomjid);\n\n            // we fire muc_left only if this is not a kick,\n            // kick has both statuses 110 and 307.\n            if (!isKick) {\n                this.eventEmitter.emit(XMPPEvents.MUC_LEFT);\n            }\n        }\n\n        if (isKick && this.myroomjid === from) {\n            this.eventEmitter.emit(XMPPEvents.KICKED);\n        }\n    }\n\n    /**\n     *\n     * @param msg\n     * @param from\n     */\n    onMessage(msg, from) {\n        const nick\n            = $(msg).find('>nick[xmlns=\"http://jabber.org/protocol/nick\"]')\n                .text()\n            || Strophe.getResourceFromJid(from);\n\n        const txt = $(msg).find('>body').text();\n        const type = msg.getAttribute('type');\n\n        if (type === 'error') {\n            this.eventEmitter.emit(XMPPEvents.CHAT_ERROR_RECEIVED,\n                $(msg).find('>text').text(), txt);\n\n            return true;\n        }\n\n        const subject = $(msg).find('>subject');\n\n        if (subject.length) {\n            const subjectText = subject.text();\n\n            if (subjectText || subjectText === '') {\n                this.eventEmitter.emit(XMPPEvents.SUBJECT_CHANGED, subjectText);\n                logger.log(`Subject is changed to ${subjectText}`);\n            }\n        }\n\n        // xep-0203 delay\n        let stamp = $(msg).find('>delay').attr('stamp');\n\n        if (!stamp) {\n            // or xep-0091 delay, UTC timestamp\n            stamp = $(msg).find('>[xmlns=\"jabber:x:delay\"]').attr('stamp');\n\n            if (stamp) {\n                // the format is CCYYMMDDThh:mm:ss\n                const dateParts\n                    = stamp.match(/(\\d{4})(\\d{2})(\\d{2}T\\d{2}:\\d{2}:\\d{2})/);\n\n                stamp = `${dateParts[1]}-${dateParts[2]}-${dateParts[3]}Z`;\n            }\n        }\n\n        if (from === this.roomjid\n                && $(msg)\n                    .find(\n                        '>x[xmlns=\"http://jabber.org/protocol/muc#user\"]'\n                            + '>status[code=\"104\"]')\n                    .length) {\n            this.discoRoomInfo();\n        }\n\n        const json = tryParseJSONAndVerify(txt);\n\n        if (json) {\n            this.eventEmitter.emit(XMPPEvents.JSON_MESSAGE_RECEIVED,\n                from, json);\n\n            return;\n        }\n\n        if (txt) {\n            logger.log('chat', nick, txt);\n            this.eventEmitter.emit(XMPPEvents.MESSAGE_RECEIVED,\n                from, nick, txt, this.myroomjid, stamp);\n        }\n    }\n\n    /**\n     *\n     * @param pres\n     * @param from\n     */\n    onPresenceError(pres, from) {\n        if ($(pres)\n                .find(\n                    '>error[type=\"auth\"]'\n                        + '>not-authorized['\n                        + 'xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]')\n                .length) {\n            logger.log('on password required', from);\n            this.eventEmitter.emit(XMPPEvents.PASSWORD_REQUIRED);\n        } else if ($(pres)\n                .find(\n                    '>error[type=\"cancel\"]'\n                        + '>not-allowed['\n                        + 'xmlns=\"urn:ietf:params:xml:ns:xmpp-stanzas\"]')\n                .length) {\n            const toDomain = Strophe.getDomainFromJid(pres.getAttribute('to'));\n\n            if (toDomain === this.xmpp.options.hosts.anonymousdomain) {\n                // enter the room by replying with 'not-authorized'. This would\n                // result in reconnection from authorized domain.\n                // We're either missing Jicofo/Prosody config for anonymous\n                // domains or something is wrong.\n                this.eventEmitter.emit(XMPPEvents.ROOM_JOIN_ERROR);\n\n            } else {\n                logger.warn('onPresError ', pres);\n                this.eventEmitter.emit(\n                    XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR);\n            }\n        } else if ($(pres).find('>error>service-unavailable').length) {\n            logger.warn('Maximum users limit for the room has been reached',\n                pres);\n            this.eventEmitter.emit(XMPPEvents.ROOM_MAX_USERS_ERROR);\n        } else {\n            logger.warn('onPresError ', pres);\n            this.eventEmitter.emit(XMPPEvents.ROOM_CONNECT_ERROR);\n        }\n    }\n\n    /**\n     *\n     * @param jid\n     */\n    kick(jid) {\n        const kickIQ = $iq({ to: this.roomjid,\n            type: 'set' })\n            .c('query', { xmlns: 'http://jabber.org/protocol/muc#admin' })\n            .c('item', { nick: Strophe.getResourceFromJid(jid),\n                role: 'none' })\n            .c('reason').t('You have been kicked.').up().up().up();\n\n        this.connection.sendIQ(\n            kickIQ,\n            result => logger.log('Kick participant with jid: ', jid, result),\n            error => logger.log('Kick participant error: ', error));\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     *\n     * @param key\n     * @param onSuccess\n     * @param onError\n     * @param onNotSupported\n     */\n    lockRoom(key, onSuccess, onError, onNotSupported) {\n        // http://xmpp.org/extensions/xep-0045.html#roomconfig\n        this.connection.sendIQ(\n            $iq({\n                to: this.roomjid,\n                type: 'get'\n            })\n                .c('query', { xmlns: 'http://jabber.org/protocol/muc#owner' }),\n            res => {\n                if ($(res)\n                        .find(\n                            '>query>x[xmlns=\"jabber:x:data\"]'\n                                + '>field[var=\"muc#roomconfig_roomsecret\"]')\n                        .length) {\n                    const formsubmit\n                        = $iq({\n                            to: this.roomjid,\n                            type: 'set'\n                        })\n                            .c('query', {\n                                xmlns: 'http://jabber.org/protocol/muc#owner'\n                            });\n\n                    formsubmit.c('x', {\n                        xmlns: 'jabber:x:data',\n                        type: 'submit'\n                    });\n                    formsubmit\n                        .c('field', { 'var': 'FORM_TYPE' })\n                        .c('value')\n                        .t('http://jabber.org/protocol/muc#roomconfig')\n                        .up()\n                        .up();\n                    formsubmit\n                        .c('field', { 'var': 'muc#roomconfig_roomsecret' })\n                        .c('value')\n                        .t(key)\n                        .up()\n                        .up();\n\n                    // Fixes a bug in prosody 0.9.+\n                    // https://code.google.com/p/lxmppd/issues/detail?id=373\n                    formsubmit\n                        .c('field', { 'var': 'muc#roomconfig_whois' })\n                        .c('value')\n                        .t('anyone')\n                        .up()\n                        .up();\n\n                    // FIXME: is muc#roomconfig_passwordprotectedroom required?\n                    this.connection.sendIQ(formsubmit, onSuccess, onError);\n                } else {\n                    onNotSupported();\n                }\n            },\n            onError);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     *\n     * @param key\n     * @param values\n     */\n    addToPresence(key, values) {\n        values.tagName = key;\n        this.removeFromPresence(key);\n        this.presMap.nodes.push(values);\n    }\n\n    /**\n     *\n     * @param key\n     */\n    removeFromPresence(key) {\n        const nodes = this.presMap.nodes.filter(node => key !== node.tagName);\n\n        this.presMap.nodes = nodes;\n    }\n\n    /**\n     *\n     * @param name\n     * @param handler\n     */\n    addPresenceListener(name, handler) {\n        if (typeof handler !== 'function') {\n            throw new Error('\"handler\" is not a function');\n        }\n        let tagHandlers = this.presHandlers[name];\n\n        if (!tagHandlers) {\n            this.presHandlers[name] = tagHandlers = [];\n        }\n        if (tagHandlers.indexOf(handler) === -1) {\n            tagHandlers.push(handler);\n        } else {\n            logger.warn(\n                `Trying to add the same handler more than once for: ${name}`);\n        }\n    }\n\n    /**\n     *\n     * @param name\n     * @param handler\n     */\n    removePresenceListener(name, handler) {\n        const tagHandlers = this.presHandlers[name];\n        const handlerIdx = tagHandlers ? tagHandlers.indexOf(handler) : -1;\n\n        // eslint-disable-next-line no-negated-condition\n        if (handlerIdx !== -1) {\n            tagHandlers.splice(handlerIdx, 1);\n        } else {\n            logger.warn(`Handler for: ${name} was not registered`);\n        }\n    }\n\n    /**\n     * Checks if the user identified by given <tt>mucJid</tt> is the conference\n     * focus.\n     * @param mucJid the full MUC address of the user to be checked.\n     * @returns {boolean|null} <tt>true</tt> if MUC user is the conference focus\n     * or <tt>false</tt> if is not. When given <tt>mucJid</tt> does not exist in\n     * the MUC then <tt>null</tt> is returned.\n     */\n    isFocus(mucJid) {\n        const member = this.members[mucJid];\n\n        if (member) {\n            return member.isFocus;\n        }\n\n        return null;\n    }\n\n    /**\n     *\n     */\n    isModerator() {\n        return this.role === 'moderator';\n    }\n\n    /**\n     *\n     * @param peerJid\n     */\n    getMemberRole(peerJid) {\n        if (this.members[peerJid]) {\n            return this.members[peerJid].role;\n        }\n\n        return null;\n    }\n\n    /**\n     *\n     * @param mute\n     * @param callback\n     */\n    setVideoMute(mute, callback) {\n        this.sendVideoInfoPresence(mute);\n        if (callback) {\n            callback(mute);\n        }\n    }\n\n    /**\n     *\n     * @param mute\n     * @param callback\n     */\n    setAudioMute(mute, callback) {\n        return this.sendAudioInfoPresence(mute, callback);\n    }\n\n    /**\n     *\n     * @param mute\n     */\n    addAudioInfoToPresence(mute) {\n        this.removeFromPresence('audiomuted');\n        this.addToPresence(\n            'audiomuted',\n            {\n                attributes: { 'xmlns': 'http://jitsi.org/jitmeet/audio' },\n                value: mute.toString()\n            });\n    }\n\n    /**\n     *\n     * @param mute\n     * @param callback\n     */\n    sendAudioInfoPresence(mute, callback) {\n        this.addAudioInfoToPresence(mute);\n        if (this.connection) {\n            this.sendPresence();\n        }\n        if (callback) {\n            callback();\n        }\n    }\n\n    /**\n     *\n     * @param mute\n     */\n    addVideoInfoToPresence(mute) {\n        this.removeFromPresence('videomuted');\n        this.addToPresence(\n            'videomuted',\n            {\n                attributes: { 'xmlns': 'http://jitsi.org/jitmeet/video' },\n                value: mute.toString()\n            });\n    }\n\n    /**\n     *\n     * @param mute\n     */\n    sendVideoInfoPresence(mute) {\n        this.addVideoInfoToPresence(mute);\n        if (!this.connection) {\n            return;\n        }\n        this.sendPresence();\n    }\n\n    /**\n     * Obtains the info about given media advertised in the MUC presence of\n     * the participant identified by the given endpoint JID.\n     * @param {string} endpointId the endpoint ID mapped to the participant\n     * which corresponds to MUC nickname.\n     * @param {MediaType} mediaType the type of the media for which presence\n     * info will be obtained.\n     * @return {PeerMediaInfo} presenceInfo an object with media presence\n     * info or <tt>null</tt> either if there is no presence available or if\n     * the media type given is invalid.\n     */\n    getMediaPresenceInfo(endpointId, mediaType) {\n        // Will figure out current muted status by looking up owner's presence\n        const pres = this.lastPresences[`${this.roomjid}/${endpointId}`];\n\n        if (!pres) {\n            // No presence available\n            return null;\n        }\n        const data = {\n            muted: false, // unmuted by default\n            videoType: undefined // no video type by default\n        };\n        let mutedNode = null;\n\n        if (mediaType === MediaType.AUDIO) {\n            mutedNode = filterNodeFromPresenceJSON(pres, 'audiomuted');\n        } else if (mediaType === MediaType.VIDEO) {\n            mutedNode = filterNodeFromPresenceJSON(pres, 'videomuted');\n            const videoTypeNode = filterNodeFromPresenceJSON(pres, 'videoType');\n\n            if (videoTypeNode.length > 0) {\n                data.videoType = videoTypeNode[0].value;\n            }\n        } else {\n            logger.error(`Unsupported media type: ${mediaType}`);\n\n            return null;\n        }\n\n        data.muted = mutedNode.length > 0 && mutedNode[0].value === 'true';\n\n        return data;\n    }\n\n    /**\n     * Returns true if the recording is supproted and false if not.\n     */\n    isRecordingSupported() {\n        if (this.recording) {\n            return this.recording.isSupported();\n        }\n\n        return false;\n    }\n\n    /**\n     * Returns null if the recording is not supported, \"on\" if the recording\n     * started and \"off\" if the recording is not started.\n     */\n    getRecordingState() {\n        return this.recording ? this.recording.getState() : undefined;\n    }\n\n    /**\n     * Returns the url of the recorded video.\n     */\n    getRecordingURL() {\n        return this.recording ? this.recording.getURL() : null;\n    }\n\n    /**\n     * Starts/stops the recording\n     * @param token token for authentication\n     * @param statusChangeHandler {function} receives the new status as\n     * argument.\n     */\n    toggleRecording(options, statusChangeHandler) {\n        if (this.recording) {\n            return this.recording.toggleRecording(options, statusChangeHandler);\n        }\n\n        return statusChangeHandler('error',\n            new Error('The conference is not created yet!'));\n    }\n\n    /**\n     * Returns true if the SIP calls are supported and false otherwise\n     */\n    isSIPCallingSupported() {\n        if (this.moderator) {\n            return this.moderator.isSipGatewayEnabled();\n        }\n\n        return false;\n    }\n\n    /**\n     * Dials a number.\n     * @param number the number\n     */\n    dial(number) {\n        return this.connection.rayo.dial(number, 'fromnumber',\n            Strophe.getBareJidFromJid(this.myroomjid), this.password,\n            this.focusMucJid);\n    }\n\n    /**\n     * Hangup an existing call\n     */\n    hangup() {\n        return this.connection.rayo.hangup();\n    }\n\n    /**\n     * Returns the phone number for joining the conference.\n     */\n    getPhoneNumber() {\n        return this.phoneNumber;\n    }\n\n    /**\n     * Returns the pin for joining the conference with phone.\n     */\n    getPhonePin() {\n        return this.phonePin;\n    }\n\n    /**\n     * Mutes remote participant.\n     * @param jid of the participant\n     * @param mute\n     */\n    muteParticipant(jid, mute) {\n        logger.info('set mute', mute);\n        const iqToFocus = $iq(\n            { to: this.focusMucJid,\n                type: 'set' })\n            .c('mute', {\n                xmlns: 'http://jitsi.org/jitmeet/audio',\n                jid\n            })\n            .t(mute.toString())\n            .up();\n\n        this.connection.sendIQ(\n            iqToFocus,\n            result => logger.log('set mute', result),\n            error => logger.log('set mute error', error));\n    }\n\n    /**\n     *\n     * @param iq\n     */\n    onMute(iq) {\n        const from = iq.getAttribute('from');\n\n        if (from !== this.focusMucJid) {\n            logger.warn('Ignored mute from non focus peer');\n\n            return false;\n        }\n        const mute = $(iq).find('mute');\n\n        if (mute.length) {\n            const doMuteAudio = mute.text() === 'true';\n\n            this.eventEmitter.emit(\n                XMPPEvents.AUDIO_MUTED_BY_FOCUS,\n                doMuteAudio);\n        }\n\n        return true;\n    }\n\n    /**\n     * Leaves the room. Closes the jingle session.\n     * @returns {Promise} which is resolved if XMPPEvents.MUC_LEFT is received\n     * less than 5s after sending presence unavailable. Otherwise the promise is\n     * rejected.\n     */\n    leave() {\n        return new Promise((resolve, reject) => {\n            const timeout = setTimeout(() => onMucLeft(true), 5000);\n            const eventEmitter = this.eventEmitter;\n\n            /**\n             *\n             * @param doReject\n             */\n            function onMucLeft(doReject = false) {\n                eventEmitter.removeListener(XMPPEvents.MUC_LEFT, onMucLeft);\n                clearTimeout(timeout);\n                if (doReject) {\n                    // the timeout expired\n                    reject(new Error('The timeout for the confirmation about '\n                        + 'leaving the room expired.'));\n                } else {\n                    resolve();\n                }\n            }\n            eventEmitter.on(XMPPEvents.MUC_LEFT, onMucLeft);\n            this.doLeave();\n        });\n    }\n}\n\n/* eslint-enable newline-per-chained-call */\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/ChatRoom.js","/* global $, Promise */\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\nimport { $iq, Strophe } from 'strophe.js';\n\nconst XMPPEvents = require('../../service/xmpp/XMPPEvents');\nconst AuthenticationEvents\n    = require('../../service/authentication/AuthenticationEvents');\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\n\nimport RTCBrowserType from '../RTC/RTCBrowserType';\nimport Settings from '../settings/Settings';\n\n/**\n *\n * @param step\n */\nfunction createExpBackoffTimer(step) {\n    let count = 1;\n\n    return function(reset) {\n        // Reset call\n        if (reset) {\n            count = 1;\n\n            return;\n        }\n\n        // Calculate next timeout\n        const timeout = Math.pow(2, count - 1);\n\n        count += 1;\n\n        return timeout * step;\n    };\n}\n\n/* eslint-disable max-params */\n\n/**\n *\n * @param roomName\n * @param xmpp\n * @param emitter\n * @param options\n */\nexport default function Moderator(roomName, xmpp, emitter, options) {\n    this.roomName = roomName;\n    this.xmppService = xmpp;\n    this.getNextTimeout = createExpBackoffTimer(1000);\n    this.getNextErrorTimeout = createExpBackoffTimer(1000);\n\n    // External authentication stuff\n    this.externalAuthEnabled = false;\n    this.options = options;\n\n    // Sip gateway can be enabled by configuring Jigasi host in config.js or\n    // it will be enabled automatically if focus detects the component through\n    // service discovery.\n    this.sipGatewayEnabled\n        = this.options.connection.hosts\n            && this.options.connection.hosts.call_control !== undefined;\n\n    this.eventEmitter = emitter;\n\n    this.connection = this.xmppService.connection;\n\n    // FIXME: Message listener that talks to POPUP window\n    /**\n     *\n     * @param event\n     */\n    function listener(event) {\n        if (event.data && event.data.sessionId) {\n            if (event.origin !== window.location.origin) {\n                logger.warn(\n                    `Ignoring sessionId from different origin: ${\n                        event.origin}`);\n\n                return;\n            }\n            Settings.sessionId = event.data.sessionId;\n\n            // After popup is closed we will authenticate\n        }\n    }\n\n    // Register\n    if (window.addEventListener) {\n        window.addEventListener('message', listener, false);\n    } else {\n        window.attachEvent('onmessage', listener);\n    }\n}\n\n/* eslint-enable max-params */\n\nModerator.prototype.isExternalAuthEnabled = function() {\n    return this.externalAuthEnabled;\n};\n\nModerator.prototype.isSipGatewayEnabled = function() {\n    return this.sipGatewayEnabled;\n};\n\nModerator.prototype.onMucMemberLeft = function(jid) {\n    logger.info(`Someone left is it focus ? ${jid}`);\n    const resource = Strophe.getResourceFromJid(jid);\n\n    if (resource === 'focus') {\n        logger.info(\n            'Focus has left the room - leaving conference');\n        this.eventEmitter.emit(XMPPEvents.FOCUS_LEFT);\n    }\n};\n\nModerator.prototype.setFocusUserJid = function(focusJid) {\n    if (!this.focusUserJid) {\n        this.focusUserJid = focusJid;\n        logger.info(`Focus jid set to:  ${this.focusUserJid}`);\n    }\n};\n\nModerator.prototype.getFocusUserJid = function() {\n    return this.focusUserJid;\n};\n\nModerator.prototype.getFocusComponent = function() {\n    // Get focus component address\n    let focusComponent = this.options.connection.hosts.focus;\n\n    // If not specified use default:  'focus.domain'\n\n    if (!focusComponent) {\n        focusComponent = `focus.${this.options.connection.hosts.domain}`;\n    }\n\n    return focusComponent;\n};\n\nModerator.prototype.createConferenceIq = function() {\n    // Generate create conference IQ\n    const elem = $iq({ to: this.getFocusComponent(),\n        type: 'set' });\n\n    // Session Id used for authentication\n    const { sessionId } = Settings;\n    const machineUID = Settings.machineId;\n\n    logger.info(`Session ID: ${sessionId} machine UID: ${machineUID}`);\n\n    elem.c('conference', {\n        xmlns: 'http://jitsi.org/protocol/focus',\n        room: this.roomName,\n        'machine-uid': machineUID\n    });\n\n    if (sessionId) {\n        elem.attrs({ 'session-id': sessionId });\n    }\n    if (this.options.connection.enforcedBridge !== undefined) {\n        elem.c(\n            'property', {\n                name: 'enforcedBridge',\n                value: this.options.connection.enforcedBridge\n            }).up();\n    }\n\n    // Tell the focus we have Jigasi configured\n    if (this.options.connection.hosts !== undefined\n        && this.options.connection.hosts.call_control !== undefined) {\n        elem.c(\n            'property', {\n                name: 'call_control',\n                value: this.options.connection.hosts.call_control\n            }).up();\n    }\n    if (this.options.conference.channelLastN !== undefined) {\n        elem.c(\n            'property', {\n                name: 'channelLastN',\n                value: this.options.conference.channelLastN\n            }).up();\n    }\n    elem.c(\n        'property', {\n            name: 'disableRtx',\n            value: Boolean(this.options.conference.disableRtx)\n        }).up();\n    elem.c(\n        'property', {\n            name: 'enableLipSync',\n            value: this.options.connection.enableLipSync !== false\n        }).up();\n    if (this.options.conference.audioPacketDelay !== undefined) {\n        elem.c(\n            'property', {\n                name: 'audioPacketDelay',\n                value: this.options.conference.audioPacketDelay\n            }).up();\n    }\n    if (this.options.conference.startBitrate) {\n        elem.c(\n            'property', {\n                name: 'startBitrate',\n                value: this.options.conference.startBitrate\n            }).up();\n    }\n    if (this.options.conference.minBitrate) {\n        elem.c(\n            'property', {\n                name: 'minBitrate',\n                value: this.options.conference.minBitrate\n            }).up();\n    }\n\n    let openSctp;\n\n    switch (this.options.conference.openBridgeChannel) {\n    case 'datachannel':\n    case true:\n    case undefined:\n        openSctp = true;\n        break;\n    case 'websocket':\n        openSctp = false;\n        break;\n    }\n\n    if (openSctp && !RTCBrowserType.supportsDataChannels()) {\n        openSctp = false;\n    }\n\n    elem.c(\n        'property', {\n            name: 'openSctp',\n            value: openSctp\n        }).up();\n\n    if (this.options.conference.startAudioMuted !== undefined) {\n        elem.c(\n            'property', {\n                name: 'startAudioMuted',\n                value: this.options.conference.startAudioMuted\n            }).up();\n    }\n    if (this.options.conference.startVideoMuted !== undefined) {\n        elem.c(\n            'property', {\n                name: 'startVideoMuted',\n                value: this.options.conference.startVideoMuted\n            }).up();\n    }\n    if (this.options.conference.stereo !== undefined) {\n        elem.c(\n            'property', {\n                name: 'stereo',\n                value: this.options.conference.stereo\n            }).up();\n    }\n    if (this.options.conference.useRoomAsSharedDocumentName !== undefined) {\n        elem.c(\n            'property', {\n                name: 'useRoomAsSharedDocumentName',\n                value: this.options.conference.useRoomAsSharedDocumentName\n            }).up();\n    }\n    elem.up();\n\n    return elem;\n};\n\n\nModerator.prototype.parseSessionId = function(resultIq) {\n    // eslint-disable-next-line newline-per-chained-call\n    const sessionId = $(resultIq).find('conference').attr('session-id');\n\n    if (sessionId) {\n        logger.info(`Received sessionId:  ${sessionId}`);\n        Settings.sessionId = sessionId;\n    }\n};\n\nModerator.prototype.parseConfigOptions = function(resultIq) {\n    // eslint-disable-next-line newline-per-chained-call\n    this.setFocusUserJid($(resultIq).find('conference').attr('focusjid'));\n\n    const authenticationEnabled\n        = $(resultIq).find(\n            '>conference>property'\n            + '[name=\\'authentication\\'][value=\\'true\\']').length > 0;\n\n    logger.info(`Authentication enabled: ${authenticationEnabled}`);\n\n    this.externalAuthEnabled = $(resultIq).find(\n        '>conference>property'\n            + '[name=\\'externalAuth\\'][value=\\'true\\']').length > 0;\n\n    logger.info(\n        `External authentication enabled: ${this.externalAuthEnabled}`);\n\n    if (!this.externalAuthEnabled) {\n        // We expect to receive sessionId in 'internal' authentication mode\n        this.parseSessionId(resultIq);\n    }\n\n    // eslint-disable-next-line newline-per-chained-call\n    const authIdentity = $(resultIq).find('>conference').attr('identity');\n\n    this.eventEmitter.emit(AuthenticationEvents.IDENTITY_UPDATED,\n        authenticationEnabled, authIdentity);\n\n    // Check if focus has auto-detected Jigasi component(this will be also\n    // included if we have passed our host from the config)\n    if ($(resultIq).find(\n        '>conference>property'\n        + '[name=\\'sipGatewayEnabled\\'][value=\\'true\\']').length) {\n        this.sipGatewayEnabled = true;\n    }\n\n    logger.info(`Sip gateway enabled:  ${this.sipGatewayEnabled}`);\n};\n\n// FIXME We need to show the fact that we're waiting for the focus to the user\n// (or that the focus is not available)\n/**\n * Allocates the conference focus.\n *\n * @param {Function} callback - the function to be called back upon the\n * successful allocation of the conference focus\n */\nModerator.prototype.allocateConferenceFocus = function(callback) {\n    // Try to use focus user JID from the config\n    this.setFocusUserJid(this.options.connection.focusUserJid);\n\n    // Send create conference IQ\n    this.connection.sendIQ(\n        this.createConferenceIq(),\n        result => this._allocateConferenceFocusSuccess(result, callback),\n        error => this._allocateConferenceFocusError(error, callback));\n\n    // XXX We're pressed for time here because we're beginning a complex and/or\n    // lengthy conference-establishment process which supposedly involves\n    // multiple RTTs. We don't have the time to wait for Strophe to decide to\n    // send our IQ.\n    this.connection.flush();\n};\n\n/**\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving an\n * error result.\n *\n * @param error - the error result of the request that\n * {@link #allocateConferenceFocus} sent\n * @param {Function} callback - the function to be called back upon the\n * successful allocation of the conference focus\n */\nModerator.prototype._allocateConferenceFocusError = function(error, callback) {\n    // If the session is invalid, remove and try again without session ID to get\n    // a new one\n    const invalidSession\n        = $(error).find('>error>session-invalid').length\n            || $(error).find('>error>not-acceptable').length;\n\n    if (invalidSession) {\n        logger.info('Session expired! - removing');\n        Settings.sessionId = undefined;\n    }\n    if ($(error).find('>error>graceful-shutdown').length) {\n        this.eventEmitter.emit(XMPPEvents.GRACEFUL_SHUTDOWN);\n\n        return;\n    }\n\n    // Check for error returned by the reservation system\n    const reservationErr = $(error).find('>error>reservation-error');\n\n    if (reservationErr.length) {\n        // Trigger error event\n        const errorCode = reservationErr.attr('error-code');\n        const errorTextNode = $(error).find('>error>text');\n        let errorMsg;\n\n        if (errorTextNode) {\n            errorMsg = errorTextNode.text();\n        }\n        this.eventEmitter.emit(\n            XMPPEvents.RESERVATION_ERROR,\n            errorCode,\n            errorMsg);\n\n        return;\n    }\n\n    // Not authorized to create new room\n    if ($(error).find('>error>not-authorized').length) {\n        logger.warn('Unauthorized to start the conference', error);\n        const toDomain = Strophe.getDomainFromJid(error.getAttribute('to'));\n\n        if (toDomain !== this.options.connection.hosts.anonymousdomain) {\n            // FIXME \"is external\" should come either from the focus or\n            // config.js\n            this.externalAuthEnabled = true;\n        }\n        this.eventEmitter.emit(XMPPEvents.AUTHENTICATION_REQUIRED);\n\n        return;\n    }\n    const waitMs = this.getNextErrorTimeout();\n    const errmsg = `Focus error, retry after ${waitMs}`;\n\n    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n    logger.error(errmsg, error);\n\n    // Show message\n    const focusComponent = this.getFocusComponent();\n    const retrySec = waitMs / 1000;\n\n    // FIXME: message is duplicated ? Do not show in case of session invalid\n    // which means just a retry\n\n    if (!invalidSession) {\n        this.eventEmitter.emit(\n            XMPPEvents.FOCUS_DISCONNECTED,\n            focusComponent,\n            retrySec);\n    }\n\n    // Reset response timeout\n    this.getNextTimeout(true);\n    window.setTimeout(() => this.allocateConferenceFocus(callback), waitMs);\n};\n\n/**\n * Invoked by {@link #allocateConferenceFocus} upon its request receiving a\n * success (i.e. non-error) result.\n *\n * @param result - the success (i.e. non-error) result of the request that\n * {@link #allocateConferenceFocus} sent\n * @param {Function} callback - the function to be called back upon the\n * successful allocation of the conference focus\n */\nModerator.prototype._allocateConferenceFocusSuccess = function(\n        result,\n        callback) {\n    // Setup config options\n    this.parseConfigOptions(result);\n\n    // Reset the error timeout (because we haven't failed here).\n    this.getNextErrorTimeout(true);\n\n    // eslint-disable-next-line newline-per-chained-call\n    if ($(result).find('conference').attr('ready') === 'true') {\n        // Reset the non-error timeout (because we've succeeded here).\n        this.getNextTimeout(true);\n\n        // Exec callback\n        callback();\n    } else {\n        const waitMs = this.getNextTimeout();\n\n        logger.info(`Waiting for the focus... ${waitMs}`);\n        window.setTimeout(() => this.allocateConferenceFocus(callback),\n            waitMs);\n    }\n};\n\nModerator.prototype.authenticate = function() {\n    return new Promise((resolve, reject) => {\n        this.connection.sendIQ(\n            this.createConferenceIq(),\n            result => {\n                this.parseSessionId(result);\n                resolve();\n            },\n            errorIq => reject({\n                error: $(errorIq).find('iq>error :first')\n                    .prop('tagName'),\n                message: $(errorIq).find('iq>error>text')\n                    .text()\n            })\n        );\n    });\n};\n\nModerator.prototype.getLoginUrl = function(urlCallback, failureCallback) {\n    this._getLoginUrl(/* popup */ false, urlCallback, failureCallback);\n};\n\n/**\n *\n * @param {boolean} popup false for {@link Moderator#getLoginUrl} or true for\n * {@link Moderator#getPopupLoginUrl}\n * @param urlCb\n * @param failureCb\n */\nModerator.prototype._getLoginUrl = function(popup, urlCb, failureCb) {\n    const iq = $iq({ to: this.getFocusComponent(),\n        type: 'get' });\n    const attrs = {\n        xmlns: 'http://jitsi.org/protocol/focus',\n        room: this.roomName,\n        'machine-uid': Settings.machineId\n    };\n    let str = 'auth url'; // for logger\n\n    if (popup) {\n        attrs.popup = true;\n        str = `POPUP ${str}`;\n    }\n    iq.c('login-url', attrs);\n\n    /**\n     * Implements a failure callback which reports an error message and an error\n     * through (1) GlobalOnErrorHandler, (2) logger, and (3) failureCb.\n     *\n     * @param {string} errmsg the error messsage to report\n     * @param {*} error the error to report (in addition to errmsg)\n     */\n    function reportError(errmsg, err) {\n        GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n        logger.error(errmsg, err);\n        failureCb(err);\n    }\n    this.connection.sendIQ(\n        iq,\n        result => {\n            // eslint-disable-next-line newline-per-chained-call\n            let url = $(result).find('login-url').attr('url');\n\n            url = decodeURIComponent(url);\n            if (url) {\n                logger.info(`Got ${str}: ${url}`);\n                urlCb(url);\n            } else {\n                reportError(`Failed to get ${str} from the focus`, result);\n            }\n        },\n        reportError.bind(undefined, `Get ${str} error`)\n    );\n};\n\nModerator.prototype.getPopupLoginUrl = function(urlCallback, failureCallback) {\n    this._getLoginUrl(/* popup */ true, urlCallback, failureCallback);\n};\n\nModerator.prototype.logout = function(callback) {\n    const iq = $iq({ to: this.getFocusComponent(),\n        type: 'set' });\n    const { sessionId } = Settings;\n\n    if (!sessionId) {\n        callback();\n\n        return;\n    }\n    iq.c('logout', {\n        xmlns: 'http://jitsi.org/protocol/focus',\n        'session-id': sessionId\n    });\n    this.connection.sendIQ(\n        iq,\n        result => {\n            // eslint-disable-next-line newline-per-chained-call\n            let logoutUrl = $(result).find('logout').attr('logout-url');\n\n            if (logoutUrl) {\n                logoutUrl = decodeURIComponent(logoutUrl);\n            }\n            logger.info(`Log out OK, url: ${logoutUrl}`, result);\n            Settings.sessionId = undefined;\n            callback(logoutUrl);\n        },\n        error => {\n            const errmsg = 'Logout error';\n\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n            logger.error(errmsg, error);\n        }\n    );\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/moderator.js","/* global $, __filename */\n\nimport {\n    SESSION_INITIATE_RECEIVED,\n    TRANSPORT_REPLACE_START,\n    TRANSPORT_REPLACE_SUCCESS\n} from '../../service/statistics/AnalyticsEvents';\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\n\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport RandomUtil from '../util/RandomUtil';\nimport Statistics from '../statistics/statistics';\n\nimport JingleSessionPC from './JingleSessionPC';\nimport ConnectionPlugin from './ConnectionPlugin';\n\nconst logger = getLogger(__filename);\n\n// XXX Strophe is build around the idea of chaining function calls so allow long\n// function call chains.\n/* eslint-disable newline-per-chained-call */\n\n/**\n *\n */\nclass JingleConnectionPlugin extends ConnectionPlugin {\n    /**\n     * Creates new <tt>JingleConnectionPlugin</tt>\n     * @param {XMPP} xmpp\n     * @param {EventEmitter} eventEmitter\n     * @param {Object} iceConfig an object that holds the iceConfig to be passed\n     * to the p2p and the jvb <tt>PeerConnection</tt>.\n     */\n    constructor(xmpp, eventEmitter, iceConfig) {\n        super();\n        this.xmpp = xmpp;\n        this.eventEmitter = eventEmitter;\n        this.sessions = {};\n        this.jvbIceConfig = iceConfig.jvb;\n        this.p2pIceConfig = iceConfig.p2p;\n        this.mediaConstraints = {\n            mandatory: {\n                'OfferToReceiveAudio': true,\n                'OfferToReceiveVideo': true\n            }\n\n            // MozDontOfferDataChannel: true when this is firefox\n        };\n    }\n\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n        this.connection.addHandler(this.onJingle.bind(this),\n            'urn:xmpp:jingle:1', 'iq', 'set', null, null);\n    }\n\n    /**\n     *\n     * @param iq\n     */\n    onJingle(iq) {\n        const sid = $(iq).find('jingle').attr('sid');\n        const action = $(iq).find('jingle').attr('action');\n        const fromJid = iq.getAttribute('from');\n\n        // send ack first\n        const ack = $iq({ type: 'result',\n            to: fromJid,\n            id: iq.getAttribute('id')\n        });\n\n        logger.log(`on jingle ${action} from ${fromJid}`, iq);\n        let sess = this.sessions[sid];\n\n        if (action !== 'session-initiate') {\n            if (!sess) {\n                ack.attrs({ type: 'error' });\n                ack.c('error', { type: 'cancel' })\n                    .c('item-not-found', {\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\n                    })\n                    .up()\n                    .c('unknown-session', {\n                        xmlns: 'urn:xmpp:jingle:errors:1'\n                    });\n                logger.warn('invalid session id', iq);\n                this.connection.send(ack);\n\n                return true;\n            }\n\n            // local jid is not checked\n            if (fromJid !== sess.remoteJid) {\n                logger.warn(\n                    'jid mismatch for session id', sid, sess.remoteJid, iq);\n                ack.attrs({ type: 'error' });\n                ack.c('error', { type: 'cancel' })\n                    .c('item-not-found', {\n                        xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\n                    })\n                    .up()\n                    .c('unknown-session', {\n                        xmlns: 'urn:xmpp:jingle:errors:1'\n                    });\n                this.connection.send(ack);\n\n                return true;\n            }\n        } else if (sess !== undefined) {\n            // Existing session with same session id. This might be out-of-order\n            // if the sess.remoteJid is the same as from.\n            ack.attrs({ type: 'error' });\n            ack.c('error', { type: 'cancel' })\n                .c('service-unavailable', {\n                    xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas'\n                })\n                .up();\n            logger.warn('duplicate session id', sid, iq);\n            this.connection.send(ack);\n\n            return true;\n        }\n        const now = window.performance.now();\n\n        // see http://xmpp.org/extensions/xep-0166.html#concepts-session\n\n        switch (action) {\n        case 'session-initiate': {\n            logger.log('(TIME) received session-initiate:\\t', now);\n            const startMuted = $(iq).find('jingle>startmuted');\n\n            if (startMuted && startMuted.length > 0) {\n                const audioMuted = startMuted.attr('audio');\n                const videoMuted = startMuted.attr('video');\n\n                this.eventEmitter.emit(\n                    XMPPEvents.START_MUTED_FROM_FOCUS,\n                    audioMuted === 'true',\n                    videoMuted === 'true');\n            }\n\n            // FIXME that should work most of the time, but we'd have to\n            // think how secure it is to assume that user with \"focus\"\n            // nickname is Jicofo.\n            const isP2P = Strophe.getResourceFromJid(fromJid) !== 'focus';\n\n            logger.info(\n                `Marking session from ${fromJid\n                } as ${isP2P ? '' : '*not*'} P2P`);\n            sess\n                = new JingleSessionPC(\n                    $(iq).find('jingle').attr('sid'),\n                    $(iq).attr('to'),\n                    fromJid,\n                    this.connection,\n                    this.mediaConstraints,\n                    isP2P ? this.p2pIceConfig : this.jvbIceConfig,\n                    isP2P,\n                    /* initiator */ false,\n                    this.xmpp.options);\n\n            this.sessions[sess.sid] = sess;\n\n            this.eventEmitter.emit(XMPPEvents.CALL_INCOMING,\n                sess, $(iq).find('>jingle'), now);\n            Statistics.analytics.sendEvent(\n                SESSION_INITIATE_RECEIVED, { value: now });\n            break;\n        }\n        case 'session-accept': {\n            this.eventEmitter.emit(\n                XMPPEvents.CALL_ACCEPTED, sess, $(iq).find('>jingle'));\n            break;\n        }\n        case 'content-modify': {\n            sess.modifyContents($(iq).find('>jingle'));\n            break;\n        }\n        case 'transport-info': {\n            this.eventEmitter.emit(\n                XMPPEvents.TRANSPORT_INFO, sess, $(iq).find('>jingle'));\n            break;\n        }\n        case 'session-terminate': {\n            logger.log('terminating...', sess.sid);\n            let reasonCondition = null;\n            let reasonText = null;\n\n            if ($(iq).find('>jingle>reason').length) {\n                reasonCondition\n                    = $(iq).find('>jingle>reason>:first')[0].tagName;\n                reasonText = $(iq).find('>jingle>reason>text').text();\n            }\n            this.terminate(sess.sid, reasonCondition, reasonText);\n            this.eventEmitter.emit(XMPPEvents.CALL_ENDED,\n                sess, reasonCondition, reasonText);\n            break;\n        }\n        case 'transport-replace':\n            logger.info('(TIME) Start transport replace', now);\n            Statistics.analytics.sendEvent(\n                TRANSPORT_REPLACE_START,\n                { value: now });\n\n            sess.replaceTransport($(iq).find('>jingle'), () => {\n                const successTime = window.performance.now();\n\n                logger.info('(TIME) Transport replace success!', successTime);\n                Statistics.analytics.sendEvent(\n                    TRANSPORT_REPLACE_SUCCESS,\n                    { value: successTime });\n            }, error => {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error('Transport replace failed', error);\n                sess.sendTransportReject();\n            });\n            break;\n        case 'addsource': // FIXME: proprietary, un-jingleish\n        case 'source-add': // FIXME: proprietary\n            sess.addRemoteStream($(iq).find('>jingle>content'));\n            break;\n        case 'removesource': // FIXME: proprietary, un-jingleish\n        case 'source-remove': // FIXME: proprietary\n            sess.removeRemoteStream($(iq).find('>jingle>content'));\n            break;\n        default:\n            logger.warn('jingle action not implemented', action);\n            ack.attrs({ type: 'error' });\n            ack.c('error', { type: 'cancel' })\n                .c('bad-request',\n                    { xmlns: 'urn:ietf:params:xml:ns:xmpp-stanzas' })\n                .up();\n            break;\n        }\n        this.connection.send(ack);\n\n        return true;\n    }\n\n    /**\n     * Creates new <tt>JingleSessionPC</tt> meant to be used in a direct P2P\n     * connection, configured as 'initiator'.\n     * @param {string} me our JID\n     * @param {string} peer remote participant's JID\n     * @return {JingleSessionPC}\n     */\n    newP2PJingleSession(me, peer) {\n        const sess\n            = new JingleSessionPC(\n                RandomUtil.randomHexString(12),\n                me,\n                peer,\n                this.connection,\n                this.mediaConstraints,\n                this.p2pIceConfig,\n                /* P2P */ true,\n                /* initiator */ true,\n                this.xmpp.options);\n\n        this.sessions[sess.sid] = sess;\n\n        return sess;\n    }\n\n    /**\n     *\n     * @param sid\n     * @param reasonCondition\n     * @param reasonText\n     */\n    terminate(sid, reasonCondition, reasonText) {\n        if (this.sessions.hasOwnProperty(sid)) {\n            if (this.sessions[sid].state !== 'ended') {\n                this.sessions[sid].onTerminated(reasonCondition, reasonText);\n            }\n            delete this.sessions[sid];\n        }\n    }\n\n    /**\n     *\n     */\n    getStunAndTurnCredentials() {\n        // get stun and turn configuration from server via xep-0215\n        // uses time-limited credentials as described in\n        // http://tools.ietf.org/html/draft-uberti-behave-turn-rest-00\n        //\n        // See https://code.google.com/p/prosody-modules/source/browse/\n        // mod_turncredentials/mod_turncredentials.lua\n        // for a prosody module which implements this.\n        //\n        // Currently, this doesn't work with updateIce and therefore credentials\n        // with a long validity have to be fetched before creating the\n        // peerconnection.\n        // TODO: implement refresh via updateIce as described in\n        //      https://code.google.com/p/webrtc/issues/detail?id=1650\n        this.connection.sendIQ(\n            $iq({ type: 'get',\n                to: this.connection.domain })\n                .c('services', { xmlns: 'urn:xmpp:extdisco:1' })\n                .c('service', { host: `turn.${this.connection.domain}` }),\n            res => {\n                const iceservers = [];\n\n                $(res).find('>services>service').each((idx, el) => {\n                    // eslint-disable-next-line no-param-reassign\n                    el = $(el);\n                    const dict = {};\n                    const type = el.attr('type');\n\n                    switch (type) {\n                    case 'stun':\n                        dict.url = `stun:${el.attr('host')}`;\n                        if (el.attr('port')) {\n                            dict.url += `:${el.attr('port')}`;\n                        }\n                        iceservers.push(dict);\n                        break;\n                    case 'turn':\n                    case 'turns': {\n                        dict.url = `${type}:`;\n                        const username = el.attr('username');\n\n                        // https://code.google.com/p/webrtc/issues/detail\n                        // ?id=1508\n\n                        if (username) {\n                            const match\n                                = navigator.userAgent.match(\n                                    /Chrom(e|ium)\\/([0-9]+)\\./);\n\n                            if (match && parseInt(match[2], 10) < 28) {\n                                dict.url += `${username}@`;\n                            } else {\n                                // only works in M28\n                                dict.username = username;\n                            }\n                        }\n                        dict.url += el.attr('host');\n                        const port = el.attr('port');\n\n                        if (port && port !== '3478') {\n                            dict.url += `:${el.attr('port')}`;\n                        }\n                        const transport = el.attr('transport');\n\n                        if (transport && transport !== 'udp') {\n                            dict.url += `?transport=${transport}`;\n                        }\n\n                        dict.credential = el.attr('password')\n                                || dict.credential;\n                        iceservers.push(dict);\n                        break;\n                    }\n                    }\n                });\n\n                const options = this.xmpp.options;\n\n                if (options.useStunTurn) {\n                    this.jvbIceConfig.iceServers = iceservers;\n                }\n\n                if (options.p2p && options.p2p.useStunTurn) {\n                    this.p2pIceConfig.iceServers = iceservers;\n                }\n\n            }, err => {\n                logger.warn('getting turn credentials failed', err);\n                logger.warn('is mod_turncredentials or similar installed?');\n            });\n\n        // implement push?\n    }\n\n    /**\n     * Returns the data saved in 'updateLog' in a format to be logged.\n     */\n    getLog() {\n        const data = {};\n\n        Object.keys(this.sessions).forEach(sid => {\n            const session = this.sessions[sid];\n            const pc = session.peerconnection;\n\n            if (pc && pc.updateLog) {\n                // FIXME: should probably be a .dump call\n                data[`jingle_${sid}`] = {\n                    updateLog: pc.updateLog,\n                    stats: pc.stats,\n                    url: window.location.href\n                };\n            }\n        });\n\n        return data;\n    }\n}\n\n/* eslint-enable newline-per-chained-call */\n\n/**\n *\n * @param XMPP\n * @param eventEmitter\n * @param iceConfig\n */\nexport default function initJingle(XMPP, eventEmitter, iceConfig) {\n    Strophe.addConnectionPlugin(\n        'jingle',\n        new JingleConnectionPlugin(XMPP, eventEmitter, iceConfig));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/strophe.jingle.js","/* global __filename, $ */\n\nimport {\n    _ICE_CHECKING_DURATION,\n    _ICE_CONNECTION_STATE_,\n    _ICE_ESTABLISHMENT_DURATION,\n    _ICE_GATHERING_DURATION\n} from '../../service/statistics/AnalyticsEvents';\nimport async from 'async';\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\nimport { integerHash } from '../util/StringUtils';\n\nimport JingleSession from './JingleSession';\nimport * as JingleSessionState from './JingleSessionState';\nimport SDP from './SDP';\nimport SDPDiffer from './SDPDiffer';\nimport SDPUtil from './SDPUtil';\nimport SignalingLayerImpl from './SignalingLayerImpl';\n\nimport Statistics from '../statistics/statistics';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = getLogger(__filename);\n\n/**\n * Constant tells how long we're going to wait for IQ response, before timeout\n * error is  triggered.\n * @type {number}\n */\nconst IQ_TIMEOUT = 10000;\n\n/**\n *\n */\nexport default class JingleSessionPC extends JingleSession {\n    /**\n     * Parses 'senders' attribute of the video content.\n     * @param {jQuery} jingleContents\n     * @return {string|null} one of the values of content \"senders\" attribute\n     * defined by Jingle. If there is no \"senders\" attribute or if the value is\n     * invalid then <tt>null</tt> will be returned.\n     * @private\n     */\n    static parseVideoSenders(jingleContents) {\n        const videoContents = jingleContents.find('>content[name=\"video\"]');\n\n        if (videoContents.length) {\n            const senders = videoContents[0].getAttribute('senders');\n\n            if (senders === 'both'\n                || senders === 'initiator'\n                || senders === 'responder'\n                || senders === 'none') {\n                return senders;\n            }\n        }\n\n        return null;\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Creates new <tt>JingleSessionPC</tt>\n     * @param {string} sid the Jingle Session ID - random string which\n     * identifies the session\n     * @param {string} localJid our JID\n     * @param {string} remoteJid remote peer JID\n     * @param {Strophe.Connection} connection Strophe XMPP connection instance\n     * used to send packets.\n     * @param mediaConstraints the media constraints object passed to\n     * createOffer/Answer, as defined by the WebRTC standard\n     * @param iceConfig the ICE servers config object as defined by the WebRTC\n     * standard.\n     * @param {boolean} isP2P indicates whether this instance is\n     * meant to be used in a direct, peer to peer connection or <tt>false</tt>\n     * if it's a JVB connection.\n     * @param {boolean} isInitiator indicates whether or not we are the side\n     * which sends the 'session-initiate'.\n     * @param {object} options a set of config options\n     * @param {boolean} options.webrtcIceUdpDisable <tt>true</tt> to block UDP\n     * candidates.\n     * @param {boolean} options.webrtcIceTcpDisable <tt>true</tt> to block TCP\n     * candidates.\n     * @param {boolean} options.failICE it's an option used in the tests. Set to\n     * <tt>true</tt> to block any real candidates and make the ICE fail.\n     *\n     * @constructor\n     *\n     * @implements {SignalingLayer}\n     */\n    constructor(\n            sid,\n            localJid,\n            remoteJid,\n            connection,\n            mediaConstraints,\n            iceConfig,\n            isP2P,\n            isInitiator,\n            options) {\n        super(\n            sid, localJid, remoteJid, connection, mediaConstraints, iceConfig);\n\n        /**\n         * Stores result of {@link window.performance.now()} at the time when\n         * ICE enters 'checking' state.\n         * @type {number|null} null if no value has been stored yet\n         * @private\n         */\n        this._iceCheckingStartedTimestamp = null;\n\n        /**\n         * Stores result of {@link window.performance.now()} at the time when\n         * first ICE candidate is spawned by the peerconnection to mark when\n         * ICE gathering started. That's, because ICE gathering state changed\n         * events are not supported by most of the browsers, so we try something\n         * that will work everywhere. It may not be as accurate, but given that\n         * 'host' candidate usually comes first, the delay should be minimal.\n         * @type {number|null} null if no value has been stored yet\n         * @private\n         */\n        this._gatheringStartedTimestamp = null;\n\n        /**\n         * Indicates whether or not this session is willing to send/receive\n         * video media. When set to <tt>false</tt> the underlying peer\n         * connection will disable local video transfer and the remote peer will\n         * be will be asked to stop sending video via 'content-modify' IQ\n         * (the senders attribute of video contents will be adjusted\n         * accordingly). Note that this notification is sent only in P2P\n         * session, because Jicofo does not support it yet. Obviously when\n         * the value is changed from <tt>false</tt> to <tt>true</tt> another\n         * notification will be sent to resume video transfer on the remote\n         * side.\n         * @type {boolean}\n         * @private\n         */\n        this._localVideoActive = true;\n\n        /**\n         * Indicates whether or not the remote peer has video transfer active.\n         * When set to <tt>true</tt> it means that remote peer is neither\n         * sending nor willing to receive video. In such case we'll ask\n         * our peerconnection to stop sending video by calling\n         * {@link TraceablePeerConnection.setVideoTransferActive} with\n         * <tt>false</tt>.\n         * @type {boolean}\n         * @private\n         */\n        this._remoteVideoActive = true;\n\n        /**\n         * Marks that ICE gathering duration has been reported already. That\n         * prevents reporting it again, after eventual 'transport-replace' (JVB\n         * conference migration/ICE restart).\n         * @type {boolean}\n         * @private\n         */\n        this._gatheringReported = false;\n\n        this.lasticecandidate = false;\n        this.closed = false;\n\n        /**\n         * Indicates whether this instance is an initiator or an answerer of\n         * the Jingle session.\n         * @type {boolean}\n         */\n        this.isInitiator = isInitiator;\n\n        /**\n         * Indicates whether or not this <tt>JingleSessionPC</tt> is used in\n         * a peer to peer type of session.\n         * @type {boolean} <tt>true</tt> if it's a peer to peer\n         * session or <tt>false</tt> if it's a JVB session\n         */\n        this.isP2P = isP2P;\n\n        /**\n         * The signaling layer implementation.\n         * @type {SignalingLayerImpl}\n         */\n        this.signalingLayer = new SignalingLayerImpl();\n\n        this.webrtcIceUdpDisable = Boolean(options.webrtcIceUdpDisable);\n        this.webrtcIceTcpDisable = Boolean(options.webrtcIceTcpDisable);\n\n        /**\n         * Flag used to enforce ICE failure through the URL parameter for\n         * the automatic testing purpose.\n         * @type {boolean}\n         */\n        this.failICE = Boolean(options.failICE);\n\n        this.modificationQueue\n            = async.queue(this._processQueueTasks.bind(this), 1);\n\n        /**\n         * Flag used to guarantee that the connection established event is\n         * triggered just once.\n         * @type {boolean}\n         */\n        this.wasConnected = false;\n\n        /**\n         * Keeps track of how long (in ms) it took from ICE start to ICE\n         * connect.\n         *\n         * @type {number}\n         */\n        this.establishmentDuration = undefined;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Checks whether or not this session instance has been ended and eventually\n     * logs a message which mentions that given <tt>actionName</tt> was\n     * cancelled.\n     * @param {string} actionName\n     * @return {boolean} <tt>true</tt> if this {@link JingleSessionPC} has\n     * entered {@link JingleSessionState.ENDED} or <tt>false</tt> otherwise.\n     * @private\n     */\n    _assertNotEnded(actionName) {\n        if (this.state === JingleSessionState.ENDED) {\n            logger.log(\n                `The session has ended - cancelling action: ${actionName}`);\n\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     *\n     */\n    doInitialize() {\n        this.lasticecandidate = false;\n\n        // True if reconnect is in progress\n        this.isreconnect = false;\n\n        // Set to true if the connection was ever stable\n        this.wasstable = false;\n\n        const pcOptions = { disableRtx: this.room.options.disableRtx };\n\n        if (this.isP2P) {\n            // simulcast needs to be disabled for P2P (121) calls\n            pcOptions.disableSimulcast = true;\n            pcOptions.disableH264\n                = this.room.options.p2p && this.room.options.p2p.disableH264;\n            pcOptions.preferH264\n                = this.room.options.p2p && this.room.options.p2p.preferH264;\n\n            const abtestSuspendVideo = this._abtestSuspendVideoEnabled();\n\n            if (typeof abtestSuspendVideo !== 'undefined') {\n                pcOptions.abtestSuspendVideo = abtestSuspendVideo;\n            }\n        } else {\n            // H264 does not support simulcast, so it needs to be disabled.\n            pcOptions.disableSimulcast\n                = this.room.options.disableSimulcast\n                    || (this.room.options.preferH264\n                            && !this.room.options.disableH264);\n            pcOptions.preferH264 = this.room.options.preferH264;\n            pcOptions.enableFirefoxSimulcast\n                = this.room.options.testing\n                    && this.room.options.testing.enableFirefoxSimulcast;\n        }\n\n        this.peerconnection\n            = this.rtc.createPeerConnection(\n                    this.signalingLayer,\n                    this.iceConfig,\n                    this.isP2P,\n                    pcOptions);\n\n        this.peerconnection.onicecandidate = ev => {\n            if (!ev) {\n                // There was an incomplete check for ev before which left\n                // the last line of the function unprotected from a potential\n                // throw of an exception. Consequently, it may be argued that\n                // the check is unnecessary. Anyway, I'm leaving it and making\n                // the check complete.\n                return;\n            }\n\n            // XXX this is broken, candidate is not parsed.\n            const candidate = ev.candidate;\n            const now = window.performance.now();\n\n            if (candidate) {\n                if (this._gatheringStartedTimestamp === null) {\n                    this._gatheringStartedTimestamp = now;\n                }\n\n                // Discard candidates of disabled protocols.\n                let protocol = candidate.protocol;\n\n                if (typeof protocol === 'string') {\n                    protocol = protocol.toLowerCase();\n                    if (protocol === 'tcp' || protocol === 'ssltcp') {\n                        if (this.webrtcIceTcpDisable) {\n                            return;\n                        }\n                    } else if (protocol === 'udp') {\n                        if (this.webrtcIceUdpDisable) {\n                            return;\n                        }\n                    }\n                }\n            } else if (!this._gatheringReported) {\n                // End of gathering\n                let eventName = this.isP2P ? 'p2p.ice.' : 'ice.';\n\n                eventName += this.isInitiator ? 'initiator.' : 'responder.';\n                eventName += _ICE_GATHERING_DURATION;\n                Statistics.analytics.sendEvent(\n                    eventName,\n                    { value: now - this._gatheringStartedTimestamp });\n                this._gatheringReported = true;\n            }\n            this.sendIceCandidate(candidate);\n        };\n\n        // Note there is a change in the spec about closed:\n        // This value moved into the RTCPeerConnectionState enum in\n        // the May 13, 2016 draft of the specification, as it reflects the state\n        // of the RTCPeerConnection, not the signaling connection. You now\n        // detect a closed connection by checking for connectionState to be\n        // \"closed\" instead.\n        // I suppose at some point this will be moved to onconnectionstatechange\n        this.peerconnection.onsignalingstatechange = () => {\n            if (!this.peerconnection) {\n                return;\n            }\n            if (this.peerconnection.signalingState === 'stable') {\n                this.wasstable = true;\n            } else if (\n                (this.peerconnection.signalingState === 'closed'\n                || this.peerconnection.connectionState === 'closed')\n                && !this.closed) {\n                this.room.eventEmitter.emit(XMPPEvents.SUSPEND_DETECTED, this);\n            }\n        };\n\n        /**\n         * The oniceconnectionstatechange event handler contains the code to\n         * execute when the iceconnectionstatechange event, of type Event,\n         * is received by this RTCPeerConnection. Such an event is sent when\n         * the value of RTCPeerConnection.iceConnectionState changes.\n         */\n        this.peerconnection.oniceconnectionstatechange = () => {\n            if (!this.peerconnection\n                    || !this._assertNotEnded('oniceconnectionstatechange')) {\n                return;\n            }\n            const now = window.performance.now();\n\n            if (!this.isP2P) {\n                this.room.connectionTimes[\n                    `ice.state.${this.peerconnection.iceConnectionState}`]\n                    = now;\n            }\n            logger.log(\n                `(TIME) ICE ${this.peerconnection.iceConnectionState}`\n                    + ` P2P? ${this.isP2P}:\\t`,\n                now);\n            const iceConnectionEventName\n                = `${this.isP2P ? 'p2p.' : ''}${_ICE_CONNECTION_STATE_}.${\n                    this.peerconnection.iceConnectionState}`;\n\n            Statistics.analytics.sendEvent(\n                iceConnectionEventName, { value: now });\n            this.room.eventEmitter.emit(\n                XMPPEvents.ICE_CONNECTION_STATE_CHANGED,\n                this,\n                this.peerconnection.iceConnectionState);\n            switch (this.peerconnection.iceConnectionState) {\n            case 'checking':\n                this._iceCheckingStartedTimestamp = now;\n                break;\n            case 'connected':\n                // Informs interested parties that the connection has been\n                // restored.\n                if (this.peerconnection.signalingState === 'stable') {\n                    if (this.isreconnect) {\n                        this.room.eventEmitter.emit(\n                            XMPPEvents.CONNECTION_RESTORED, this);\n                    }\n                }\n\n                if (!this.wasConnected && this.wasstable) {\n                    let eventName = this.isP2P ? 'p2p.ice.' : 'ice.';\n\n                    eventName += this.isInitiator ? 'initiator.' : 'responder.';\n                    Statistics.analytics.sendEvent(\n                        `${eventName}${_ICE_CHECKING_DURATION}`,\n                        {\n                            value: now - this._iceCheckingStartedTimestamp\n                        });\n\n                    // Switch between ICE gathering and ICE checking whichever\n                    // started first (scenarios are different for initiator\n                    // vs responder)\n                    const iceStarted\n                        = Math.min(\n                            this._iceCheckingStartedTimestamp,\n                            this._gatheringStartedTimestamp);\n\n                    this.establishmentDuration = now - iceStarted;\n\n                    Statistics.analytics.sendEvent(\n                        `${eventName}${_ICE_ESTABLISHMENT_DURATION}`,\n                        {\n                            value: this.establishmentDuration\n                        });\n                    this.wasConnected = true;\n                    this.room.eventEmitter.emit(\n                        XMPPEvents.CONNECTION_ESTABLISHED, this);\n                }\n                this.isreconnect = false;\n                break;\n            case 'disconnected':\n                if (this.closed) {\n                    break;\n                }\n                this.isreconnect = true;\n\n                // Informs interested parties that the connection has been\n                // interrupted.\n                if (this.wasstable) {\n                    this.room.eventEmitter.emit(\n                        XMPPEvents.CONNECTION_INTERRUPTED, this);\n                }\n                break;\n            case 'failed':\n                this.room.eventEmitter.emit(\n                    XMPPEvents.CONNECTION_ICE_FAILED, this);\n                this.room.eventEmitter.emit(\n                    XMPPEvents.CONFERENCE_SETUP_FAILED,\n                    this,\n                    new Error('ICE fail'));\n                break;\n            }\n        };\n        this.peerconnection.onnegotiationneeded = () => {\n            this.room.eventEmitter.emit(XMPPEvents.PEERCONNECTION_READY, this);\n        };\n\n        // The signaling layer will bind it's listeners at this point\n        this.signalingLayer.setChatRoom(this.room);\n    }\n\n    /**\n     * Sends given candidate in Jingle 'transport-info' message.\n     * @param {RTCIceCandidate} candidate the WebRTC ICE candidate instance\n     * @private\n     */\n    sendIceCandidate(candidate) {\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\n\n        if (candidate && !this.lasticecandidate) {\n            const ice\n                = SDPUtil.iceparams(\n                    localSDP.media[candidate.sdpMLineIndex], localSDP.session);\n            const jcand = SDPUtil.candidateToJingle(candidate.candidate);\n\n            if (!(ice && jcand)) {\n                const errorMesssage = 'failed to get ice && jcand';\n\n                GlobalOnErrorHandler.callErrorHandler(new Error(errorMesssage));\n                logger.error(errorMesssage);\n\n                return;\n            }\n            ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\n\n            if (this.usedrip) {\n                if (this.dripContainer.length === 0) {\n                    // start 20ms callout\n                    setTimeout(() => {\n                        if (this.dripContainer.length === 0) {\n                            return;\n                        }\n                        this.sendIceCandidates(this.dripContainer);\n                        this.dripContainer = [];\n                    }, 20);\n                }\n                this.dripContainer.push(candidate);\n            } else {\n                this.sendIceCandidates([ candidate ]);\n            }\n        } else {\n            logger.log('sendIceCandidate: last candidate.');\n\n            // FIXME: remember to re-think in ICE-restart\n            this.lasticecandidate = true;\n        }\n    }\n\n    /**\n     * Sends given candidates in Jingle 'transport-info' message.\n     * @param {Array<RTCIceCandidate>} candidates an array of the WebRTC ICE\n     * candidate instances\n     * @private\n     */\n    sendIceCandidates(candidates) {\n        if (!this._assertNotEnded('sendIceCandidates')) {\n\n            return;\n        }\n\n        logger.log('sendIceCandidates', candidates);\n        const cand = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\n                action: 'transport-info',\n                initiator: this.initiator,\n                sid: this.sid });\n\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\n\n        for (let mid = 0; mid < localSDP.media.length; mid++) {\n            const cands = candidates.filter(el => el.sdpMLineIndex === mid);\n            const mline\n                = SDPUtil.parseMLine(localSDP.media[mid].split('\\r\\n')[0]);\n\n            if (cands.length > 0) {\n                const ice\n                    = SDPUtil.iceparams(localSDP.media[mid], localSDP.session);\n\n                ice.xmlns = 'urn:xmpp:jingle:transports:ice-udp:1';\n                cand.c('content', {\n                    creator: this.initiator === this.localJid\n                        ? 'initiator' : 'responder',\n                    name: cands[0].sdpMid ? cands[0].sdpMid : mline.media\n                }).c('transport', ice);\n                for (let i = 0; i < cands.length; i++) {\n                    const candidate\n                        = SDPUtil.candidateToJingle(cands[i].candidate);\n\n                    // Mangle ICE candidate if 'failICE' test option is enabled\n\n                    if (this.failICE) {\n                        candidate.ip = '1.1.1.1';\n                    }\n                    cand.c('candidate', candidate).up();\n                }\n\n                // add fingerprint\n                const fingerprintLine\n                    = SDPUtil.findLine(\n                        localSDP.media[mid],\n                        'a=fingerprint:', localSDP.session);\n\n                if (fingerprintLine) {\n                    const tmp = SDPUtil.parseFingerprint(fingerprintLine);\n\n                    tmp.required = true;\n                    cand.c(\n                        'fingerprint',\n                        { xmlns: 'urn:xmpp:jingle:apps:dtls:0' })\n                        .t(tmp.fingerprint);\n                    delete tmp.fingerprint;\n                    cand.attrs(tmp);\n                    cand.up();\n                }\n                cand.up(); // transport\n                cand.up(); // content\n            }\n        }\n\n        // might merge last-candidate notification into this, but it is called\n        // a lot later. See webrtc issue #2340\n        // logger.log('was this the last candidate', this.lasticecandidate);\n        this.connection.sendIQ(\n            cand, null, this.newJingleErrorHandler(cand), IQ_TIMEOUT);\n    }\n\n    /**\n     * {@inheritDoc}\n     */\n    addIceCandidates(elem) {\n        if (this.peerconnection.signalingState === 'closed') {\n            logger.warn('Ignored add ICE candidate when in closed state');\n\n            return;\n        }\n\n        const iceCandidates = [];\n\n        elem.find('>content>transport>candidate')\n            .each((idx, candidate) => {\n                let line = SDPUtil.candidateFromJingle(candidate);\n\n                line = line.replace('\\r\\n', '').replace('a=', '');\n\n                // FIXME this code does not care to handle\n                // non-bundle transport\n                const rtcCandidate = new RTCIceCandidate({\n                    sdpMLineIndex: 0,\n\n                    // FF comes up with more complex names like audio-23423,\n                    // Given that it works on both Chrome and FF without\n                    // providing it, let's leave it like this for the time\n                    // being...\n                    // sdpMid: 'audio',\n                    sdpMid: '',\n                    candidate: line\n                });\n\n                iceCandidates.push(rtcCandidate);\n            });\n\n        if (!iceCandidates.length) {\n            logger.error(\n                'No ICE candidates to add ?', elem[0] && elem[0].outerHTML);\n\n            return;\n        }\n\n        // We want to have this task queued, so that we know it is executed,\n        // after the initial sRD/sLD offer/answer cycle was done (based on\n        // the assumption that candidates are spawned after the offer/answer\n        // and XMPP preserves order).\n        const workFunction = finishedCallback => {\n            for (const iceCandidate of iceCandidates) {\n                this.peerconnection.addIceCandidate(\n                    iceCandidate,\n                    () => {\n                        logger.debug('addIceCandidate ok!');\n                    },\n                    error => {\n                        logger.error('addIceCandidate failed!', error);\n                    });\n            }\n\n            finishedCallback();\n        };\n\n        logger.debug(\n            `Queued add (${iceCandidates.length}) ICE candidates task...`);\n        this.modificationQueue.push(workFunction);\n    }\n\n    /**\n     *\n     * @param contents\n     */\n    readSsrcInfo(contents) {\n        const ssrcs\n            = $(contents).find(\n                '>description>'\n                    + 'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n\n        ssrcs.each((i, ssrcElement) => {\n            const ssrc = Number(ssrcElement.getAttribute('ssrc'));\n\n            if (this.isP2P) {\n                // In P2P all SSRCs are owner by the remote peer\n                this.signalingLayer.setSSRCOwner(\n                    ssrc, Strophe.getResourceFromJid(this.remoteJid));\n            } else {\n                $(ssrcElement)\n                    .find('>ssrc-info[xmlns=\"http://jitsi.org/jitmeet\"]')\n                    .each((i3, ssrcInfoElement) => {\n                        const owner = ssrcInfoElement.getAttribute('owner');\n\n                        if (owner && owner.length) {\n                            if (isNaN(ssrc) || ssrc < 0) {\n                                logger.warn(\n                                    `Invalid SSRC ${ssrc} value received`\n                                        + ` for ${owner}`);\n                            } else {\n                                this.signalingLayer.setSSRCOwner(\n                                    ssrc,\n                                    Strophe.getResourceFromJid(owner));\n                            }\n                        }\n                    });\n            }\n        });\n    }\n\n    /**\n     * Makes the underlying TraceablePeerConnection generate new SSRC for\n     * the recvonly video stream.\n     * @deprecated\n     */\n    generateRecvonlySsrc() {\n        if (this.peerconnection) {\n            this.peerconnection.generateRecvonlySsrc();\n        } else {\n            logger.error(\n                'Unable to generate recvonly SSRC - no peerconnection');\n        }\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Accepts incoming Jingle 'session-initiate' and should send\n     * 'session-accept' in result.\n     * @param jingleOffer jQuery selector pointing to the jingle element of\n     * the offer IQ\n     * @param success callback called when we accept incoming session\n     * successfully and receive RESULT packet to 'session-accept' sent.\n     * @param failure function(error) called if for any reason we fail to accept\n     * the incoming offer. 'error' argument can be used to log some details\n     * about the error.\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\n     * the local tracks that will be added, before the offer/answer cycle\n     * executes. We allow the localTracks to optionally be passed in so that\n     * the addition of the local tracks and the processing of the initial offer\n     * can all be done atomically. We want to make sure that any other\n     * operations which originate in the XMPP Jingle messages related with\n     * this session to be executed with an assumption that the initial\n     * offer/answer cycle has been executed already.\n     */\n    acceptOffer(jingleOffer, success, failure, localTracks) {\n        this.setOfferAnswerCycle(\n            jingleOffer,\n            () => {\n                // FIXME we may not care about RESULT packet for session-accept\n                // then we should either call 'success' here immediately or\n                // modify sendSessionAccept method to do that\n                this.sendSessionAccept(success, failure);\n            },\n            failure,\n            localTracks);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Creates an offer and sends Jingle 'session-initiate' to the remote peer.\n     * @param {Array<JitsiLocalTrack>} localTracks the local tracks that will be\n     * added, before the offer/answer cycle executes (for the local track\n     * addition to be an atomic operation together with the offer/answer).\n     */\n    invite(localTracks) {\n        if (!this.isInitiator) {\n            throw new Error('Trying to invite from the responder session');\n        }\n        const workFunction = finishedCallback => {\n            for (const localTrack of localTracks) {\n                this.peerconnection.addTrack(localTrack);\n            }\n            this.peerconnection.createOffer(\n                offerSdp => {\n                    this.peerconnection.setLocalDescription(\n                        offerSdp,\n                        () => {\n                            // NOTE that the offer is obtained from\n                            // the localDescription getter as it needs to go\n                            // though the transformation chain.\n                            this.sendSessionInitiate(\n                                this.peerconnection.localDescription.sdp);\n                            finishedCallback();\n                        },\n                        error => {\n                            logger.error(\n                                'Failed to set local SDP', error, offerSdp);\n                            finishedCallback(error);\n                        });\n                },\n                error => {\n                    logger.error(\n                        'Failed to create an offer',\n                        error,\n                        this.mediaConstraints);\n                    finishedCallback(error);\n                },\n                this.mediaConstraints);\n        };\n\n        this.modificationQueue.push(\n            workFunction,\n            error => {\n                if (error) {\n                    logger.error('invite error', error);\n                } else {\n                    logger.debug('invite executed - OK');\n                }\n            });\n    }\n\n    /**\n     * Sends 'session-initiate' to the remote peer.\n     *\n     * NOTE this method is synchronous and we're not waiting for the RESULT\n     * response which would delay the startup process.\n     *\n     * @param {string} offerSdp  - The local session description which will be\n     * used to generate an offer.\n     * @private\n     */\n    sendSessionInitiate(offerSdp) {\n        let init = $iq({\n            to: this.remoteJid,\n            type: 'set'\n        }).c('jingle', {\n            xmlns: 'urn:xmpp:jingle:1',\n            action: 'session-initiate',\n            initiator: this.initiator,\n            sid: this.sid\n        });\n\n        new SDP(offerSdp).toJingle(\n            init,\n            this.initiator === this.me ? 'initiator' : 'responder');\n        init = init.tree();\n        logger.info('Session-initiate: ', init);\n        this.connection.sendIQ(init,\n            () => {\n                logger.info('Got RESULT for \"session-initiate\"');\n            },\n            error => {\n                logger.error('\"session-initiate\" error', error);\n            },\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * Sets the answer received from the remote peer.\n     * @param jingleAnswer\n     */\n    setAnswer(jingleAnswer) {\n        if (!this.isInitiator) {\n            throw new Error('Trying to set an answer on the responder session');\n        }\n        this.setOfferAnswerCycle(\n            jingleAnswer,\n            () => {\n                logger.info('setAnswer - succeeded');\n            },\n            error => {\n                logger.error('setAnswer failed: ', error);\n            });\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * This is a setRemoteDescription/setLocalDescription cycle which starts at\n     * converting Strophe Jingle IQ into remote offer SDP. Once converted\n     * setRemoteDescription, createAnswer and setLocalDescription calls follow.\n     * @param jingleOfferAnswerIq jQuery selector pointing to the jingle element\n     *        of the offer (or answer) IQ\n     * @param success callback called when sRD/sLD cycle finishes successfully.\n     * @param failure callback called with an error object as an argument if we\n     *        fail at any point during setRD, createAnswer, setLD.\n     * @param {Array<JitsiLocalTrack>} [localTracks] the optional list of\n     * the local tracks that will be added, before the offer/answer cycle\n     * executes (for the local track addition to be an atomic operation together\n     * with the offer/answer).\n     */\n    setOfferAnswerCycle(jingleOfferAnswerIq, success, failure, localTracks) {\n        const workFunction = finishedCallback => {\n\n            if (localTracks) {\n                for (const track of localTracks) {\n                    this.peerconnection.addTrack(track);\n                }\n            }\n\n            const newRemoteSdp\n                = this._processNewJingleOfferIq(jingleOfferAnswerIq);\n            const oldLocalSdp\n                = this.peerconnection.localDescription.sdp;\n\n            this._renegotiate(newRemoteSdp.raw)\n                .then(() => {\n                    if (this.state === JingleSessionState.PENDING) {\n                        this.state = JingleSessionState.ACTIVE;\n\n                        // Sync up video transfer active/inactive only after\n                        // the initial O/A cycle. We want to adjust the video\n                        // media direction only in the local SDP and the Jingle\n                        // contents direction included in the initial\n                        // offer/answer is mapped to the remote SDP. Jingle\n                        // 'content-modify' IQ is processed in a way that it\n                        // will only modify local SDP when remote peer is no\n                        // longer interested in receiving video content.\n                        // Changing media direction in the remote SDP will mess\n                        // up our SDP translation chain (simulcast, video mute,\n                        // RTX etc.)\n                        if (this.isP2P && !this._localVideoActive) {\n                            this.sendContentModify(this._localVideoActive);\n                        }\n                    }\n\n                    // Old local SDP will be available when we're setting answer\n                    // for the first time, but not when offer and it's fine\n                    // since we're generating an answer now it will contain all\n                    // our SSRCs\n                    if (oldLocalSdp) {\n                        const newLocalSdp\n                            = new SDP(this.peerconnection.localDescription.sdp);\n\n                        this.notifyMySSRCUpdate(\n                            new SDP(oldLocalSdp), newLocalSdp);\n                    }\n\n                    finishedCallback();\n                }, error => {\n                    logger.error(\n                        `Error renegotiating after setting new remote ${\n                            this.isInitiator ? 'answer: ' : 'offer: '}${error}`,\n                        newRemoteSdp);\n                    JingleSessionPC.onJingleFatalError(this, error);\n                    finishedCallback(error);\n                });\n        };\n\n        this.modificationQueue.push(\n            workFunction,\n            error => {\n                error ? failure(error) : success();\n            });\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Although it states \"replace transport\" it does accept full Jingle offer\n     * which should contain new ICE transport details.\n     * @param jingleOfferElem an element Jingle IQ that contains new offer and\n     *        transport info.\n     * @param success callback called when we succeed to accept new offer.\n     * @param failure function(error) called when we fail to accept new offer.\n     */\n    replaceTransport(jingleOfferElem, success, failure) {\n\n        // We need to first set an offer without the 'data' section to have the\n        // SCTP stack cleaned up. After that the original offer is set to have\n        // the SCTP connection established with the new bridge.\n        this.room.eventEmitter.emit(XMPPEvents.ICE_RESTARTING, this);\n        const originalOffer = jingleOfferElem.clone();\n\n        jingleOfferElem.find('>content[name=\\'data\\']').remove();\n\n        // First set an offer without the 'data' section\n        this.setOfferAnswerCycle(\n            jingleOfferElem,\n            () => {\n                // Now set the original offer(with the 'data' section)\n                this.setOfferAnswerCycle(\n                    originalOffer,\n                    () => {\n                        const localSDP\n                            = new SDP(this.peerconnection.localDescription.sdp);\n\n                        this.sendTransportAccept(localSDP, success, failure);\n                    },\n                    failure);\n            },\n            failure\n        );\n    }\n\n    /**\n     * Sends Jingle 'session-accept' message.\n     * @param {function()} success callback called when we receive 'RESULT'\n     *        packet for the 'session-accept'\n     * @param {function(error)} failure called when we receive an error response\n     *        or when the request has timed out.\n     * @private\n     */\n    sendSessionAccept(success, failure) {\n        // NOTE: since we're just reading from it, we don't need to be within\n        //  the modification queue to access the local description\n        const localSDP = new SDP(this.peerconnection.localDescription.sdp);\n        let accept = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', { xmlns: 'urn:xmpp:jingle:1',\n                action: 'session-accept',\n                initiator: this.initiator,\n                responder: this.responder,\n                sid: this.sid });\n\n        if (this.webrtcIceTcpDisable) {\n            localSDP.removeTcpCandidates = true;\n        }\n        if (this.webrtcIceUdpDisable) {\n            localSDP.removeUdpCandidates = true;\n        }\n        if (this.failICE) {\n            localSDP.failICE = true;\n        }\n        localSDP.toJingle(\n            accept,\n            this.initiator === this.localJid ? 'initiator' : 'responder',\n            null);\n\n        // Calling tree() to print something useful\n        accept = accept.tree();\n        logger.info('Sending session-accept', accept);\n        this.connection.sendIQ(accept,\n            success,\n            this.newJingleErrorHandler(accept, error => {\n                failure(error);\n\n                // 'session-accept' is a critical timeout and we'll\n                // have to restart\n                this.room.eventEmitter.emit(\n                    XMPPEvents.SESSION_ACCEPT_TIMEOUT, this);\n            }),\n            IQ_TIMEOUT);\n\n        // XXX Videobridge needs WebRTC's answer (ICE ufrag and pwd, DTLS\n        // fingerprint and setup) ASAP in order to start the connection\n        // establishment.\n        //\n        // FIXME Flushing the connection at this point triggers an issue with\n        // BOSH request handling in Prosody on slow connections.\n        //\n        // The problem is that this request will be quite large and it may take\n        // time before it reaches Prosody. In the meantime Strophe may decide\n        // to send the next one. And it was observed that a small request with\n        // 'transport-info' usually follows this one. It does reach Prosody\n        // before the previous one was completely received. 'rid' on the server\n        // is increased and Prosody ignores the request with 'session-accept'.\n        // It will never reach Jicofo and everything in the request table is\n        // lost. Removing the flush does not guarantee it will never happen, but\n        // makes it much less likely('transport-info' is bundled with\n        // 'session-accept' and any immediate requests).\n        //\n        // this.connection.flush();\n    }\n\n    /**\n     * Will send 'content-modify' IQ in order to ask the remote peer to\n     * either stop or resume sending video media.\n     * @param {boolean} videoTransferActive <tt>false</tt> to let the other peer\n     * know that we're not sending nor interested in receiving video contents.\n     * When set to <tt>true</tt> remote peer will be asked to resume video\n     * transfer.\n     * @private\n     */\n    sendContentModify(videoTransferActive) {\n        const newSendersValue = videoTransferActive ? 'both' : 'none';\n\n        const sessionModify\n            = $iq({\n                to: this.remoteJid,\n                type: 'set'\n            })\n                .c('jingle', {\n                    xmlns: 'urn:xmpp:jingle:1',\n                    action: 'content-modify',\n                    initiator: this.initiator,\n                    sid: this.sid\n                })\n                .c('content', {\n                    name: 'video',\n                    senders: newSendersValue\n                });\n\n        logger.info(\n            `Sending content-modify, video senders: ${newSendersValue}`);\n\n        this.connection.sendIQ(\n            sessionModify,\n            null,\n            this.newJingleErrorHandler(sessionModify),\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * Sends Jingle 'transport-accept' message which is a response to\n     * 'transport-replace'.\n     * @param localSDP the 'SDP' object with local session description\n     * @param success callback called when we receive 'RESULT' packet for\n     *        'transport-replace'\n     * @param failure function(error) called when we receive an error response\n     *        or when the request has timed out.\n     * @private\n     */\n    sendTransportAccept(localSDP, success, failure) {\n        let transportAccept = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'transport-accept',\n                initiator: this.initiator,\n                sid: this.sid\n            });\n\n        localSDP.media.forEach((medialines, idx) => {\n            const mline = SDPUtil.parseMLine(medialines.split('\\r\\n')[0]);\n\n            transportAccept.c('content',\n                {\n                    creator:\n                        this.initiator === this.localJid\n                            ? 'initiator'\n                            : 'responder',\n                    name: mline.media\n                }\n            );\n            localSDP.transportToJingle(idx, transportAccept);\n            transportAccept.up();\n        });\n\n        // Calling tree() to print something useful to the logger\n        transportAccept = transportAccept.tree();\n        logger.info('Sending transport-accept: ', transportAccept);\n\n        this.connection.sendIQ(transportAccept,\n            success,\n            this.newJingleErrorHandler(transportAccept, failure),\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * Sends Jingle 'transport-reject' message which is a response to\n     * 'transport-replace'.\n     * @param success callback called when we receive 'RESULT' packet for\n     *        'transport-replace'\n     * @param failure function(error) called when we receive an error response\n     *        or when the request has timed out.\n     *\n     * FIXME method should be marked as private, but there's some spaghetti that\n     *       needs to be fixed prior doing that\n     */\n    sendTransportReject(success, failure) {\n        // Send 'transport-reject', so that the focus will\n        // know that we've failed\n        let transportReject = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'transport-reject',\n                initiator: this.initiator,\n                sid: this.sid\n            });\n\n        transportReject = transportReject.tree();\n        logger.info('Sending \\'transport-reject', transportReject);\n\n        this.connection.sendIQ(transportReject,\n            success,\n            this.newJingleErrorHandler(transportReject, failure),\n            IQ_TIMEOUT);\n    }\n\n    /**\n     * @inheritDoc\n     */\n    terminate(success, failure, options) {\n        if (this.state === JingleSessionState.ENDED) {\n            return;\n        }\n\n        if (!options || Boolean(options.sendSessionTerminate)) {\n            let sessionTerminate\n                = $iq({\n                    to: this.remoteJid,\n                    type: 'set'\n                })\n                    .c('jingle', {\n                        xmlns: 'urn:xmpp:jingle:1',\n                        action: 'session-terminate',\n                        initiator: this.initiator,\n                        sid: this.sid\n                    })\n                    .c('reason')\n                    .c((options && options.reason) || 'success');\n\n            if (options && options.reasonDescription) {\n                sessionTerminate.up()\n                    .c('text')\n                    .t(options.reasonDescription);\n            }\n\n            // Calling tree() to print something useful\n            sessionTerminate = sessionTerminate.tree();\n            logger.info('Sending session-terminate', sessionTerminate);\n            this.connection.sendIQ(\n                sessionTerminate,\n                success,\n                this.newJingleErrorHandler(sessionTerminate, failure),\n                IQ_TIMEOUT);\n        } else {\n            logger.info(`Skipped sending session-terminate for ${this}`);\n        }\n\n        // this should result in 'onTerminated' being called by strope.jingle.js\n        this.connection.jingle.terminate(this.sid);\n    }\n\n    /**\n     *\n     * @param reasonCondition\n     * @param reasonText\n     */\n    onTerminated(reasonCondition, reasonText) {\n        this.state = JingleSessionState.ENDED;\n        this.establishmentDuration = undefined;\n\n        // Do something with reason and reasonCondition when we start to care\n        // this.reasonCondition = reasonCondition;\n        // this.reasonText = reasonText;\n        logger.info(`Session terminated ${this}`, reasonCondition, reasonText);\n\n        this.close();\n    }\n\n    /**\n     * Parse the information from the xml sourceAddElem and translate it\n     *  into sdp lines\n     * @param {jquery xml element} sourceAddElem the source-add\n     *  element from jingle\n     * @param {SDP object} currentRemoteSdp the current remote\n     *  sdp (as of this new source-add)\n     * @returns {list} a list of SDP line strings that should\n     *  be added to the remote SDP\n     */\n    _parseSsrcInfoFromSourceAdd(sourceAddElem, currentRemoteSdp) {\n        const addSsrcInfo = [];\n\n        $(sourceAddElem).each((i1, content) => {\n            const name = $(content).attr('name');\n            let lines = '';\n\n            $(content)\n                .find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\n                .each(function() {\n                    // eslint-disable-next-line no-invalid-this\n                    const semantics = this.getAttribute('semantics');\n                    const ssrcs\n                        = $(this) // eslint-disable-line no-invalid-this\n                            .find('>source')\n                            .map(function() {\n                                // eslint-disable-next-line no-invalid-this\n                                return this.getAttribute('ssrc');\n                            })\n                            .get();\n\n                    if (ssrcs.length) {\n                        lines\n                            += `a=ssrc-group:${semantics} ${\n                                ssrcs.join(' ')}\\r\\n`;\n                    }\n                });\n\n            // handles both >source and >description>source\n            const tmp\n                = $(content).find(\n                    'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n\n            /* eslint-disable no-invalid-this */\n            tmp.each(function() {\n                const ssrc = $(this).attr('ssrc');\n\n                if (currentRemoteSdp.containsSSRC(ssrc)) {\n                    logger.warn(\n                        `Source-add request for existing SSRC: ${ssrc}`);\n\n                    return;\n                }\n\n                // eslint-disable-next-line newline-per-chained-call\n                $(this).find('>parameter').each(function() {\n                    lines += `a=ssrc:${ssrc} ${$(this).attr('name')}`;\n                    if ($(this).attr('value') && $(this).attr('value').length) {\n                        lines += `:${$(this).attr('value')}`;\n                    }\n                    lines += '\\r\\n';\n                });\n            });\n\n            /* eslint-enable no-invalid-this */\n            currentRemoteSdp.media.forEach((media, i2) => {\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\n                    return;\n                }\n                if (!addSsrcInfo[i2]) {\n                    addSsrcInfo[i2] = '';\n                }\n                addSsrcInfo[i2] += lines;\n            });\n        });\n\n        return addSsrcInfo;\n    }\n\n    /**\n     * Handles a Jingle source-add message for this Jingle session.\n     * @param elem An array of Jingle \"content\" elements.\n     */\n    addRemoteStream(elem) {\n        this._addOrRemoveRemoteStream(true /* add */, elem);\n    }\n\n    /**\n     * Handles a Jingle source-remove message for this Jingle session.\n     * @param elem An array of Jingle \"content\" elements.\n     */\n    removeRemoteStream(elem) {\n        this._addOrRemoveRemoteStream(false /* remove */, elem);\n    }\n\n    /**\n     * Handles either Jingle 'source-add' or 'source-remove' message for this\n     * Jingle session.\n     * @param {boolean} isAdd <tt>true</tt> for 'source-add' or <tt>false</tt>\n     * otherwise.\n     * @param {Array<Element>} elem an array of Jingle \"content\" elements.\n     * @private\n     */\n    _addOrRemoveRemoteStream(isAdd, elem) {\n        const logPrefix = isAdd ? 'addRemoteStream' : 'removeRemoteStream';\n\n        if (isAdd) {\n            this.readSsrcInfo(elem);\n        }\n\n        const workFunction = finishedCallback => {\n            if (!this.peerconnection.localDescription\n                || !this.peerconnection.localDescription.sdp) {\n                const errMsg = `${logPrefix} - localDescription not ready yet`;\n\n                logger.error(errMsg);\n                finishedCallback(errMsg);\n\n                return;\n            }\n\n            logger.log(`Processing ${logPrefix}`);\n            logger.log(\n                'ICE connection state: ',\n                this.peerconnection.iceConnectionState);\n\n            const oldLocalSdp\n                = new SDP(this.peerconnection.localDescription.sdp);\n            const sdp = new SDP(this.peerconnection.remoteDescription.sdp);\n            const addOrRemoveSsrcInfo\n                = isAdd\n                    ? this._parseSsrcInfoFromSourceAdd(elem, sdp)\n                    : this._parseSsrcInfoFromSourceRemove(elem, sdp);\n            const newRemoteSdp\n                = isAdd\n                    ? this._processRemoteAddSource(addOrRemoveSsrcInfo)\n                    : this._processRemoteRemoveSource(addOrRemoveSsrcInfo);\n\n            this._renegotiate(newRemoteSdp.raw)\n                .then(() => {\n                    const newLocalSdp\n                        = new SDP(this.peerconnection.localDescription.sdp);\n\n                    logger.log(\n                        `${logPrefix} - OK, SDPs: `, oldLocalSdp, newLocalSdp);\n                    this.notifyMySSRCUpdate(oldLocalSdp, newLocalSdp);\n                    finishedCallback();\n                }, error => {\n                    logger.error(`${logPrefix} failed:`, error);\n                    finishedCallback(error);\n                });\n        };\n\n        // Queue and execute\n        this.modificationQueue.push(workFunction);\n    }\n\n    /**\n     * The 'task' function will be given a callback it MUST call with either:\n     *  1) No arguments if it was successful or\n     *  2) An error argument if there was an error\n     * If the task wants to process the success or failure of the task, it\n     * should pass a handler to the .push function, e.g.:\n     * queue.push(task, (err) => {\n     *     if (err) {\n     *         // error handling\n     *     } else {\n     *         // success handling\n     *     }\n     * });\n     */\n    _processQueueTasks(task, finishedCallback) {\n        task(finishedCallback);\n    }\n\n    /**\n     * Takes in a jingle offer iq, returns the new sdp offer\n     * @param {jquery xml element} offerIq the incoming offer\n     * @returns {SDP object} the jingle offer translated to SDP\n     */\n    _processNewJingleOfferIq(offerIq) {\n        const remoteSdp = new SDP('');\n\n        if (this.webrtcIceTcpDisable) {\n            remoteSdp.removeTcpCandidates = true;\n        }\n        if (this.webrtcIceUdpDisable) {\n            remoteSdp.removeUdpCandidates = true;\n        }\n        if (this.failICE) {\n            remoteSdp.failICE = true;\n        }\n\n        remoteSdp.fromJingle(offerIq);\n        this.readSsrcInfo($(offerIq).find('>content'));\n\n        return remoteSdp;\n    }\n\n    /**\n     * Remove the given ssrc lines from the current remote sdp\n     * @param {list} removeSsrcInfo a list of SDP line strings that\n     *  should be removed from the remote SDP\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\n     *  in removeSsrcInfo\n     */\n    _processRemoteRemoveSource(removeSsrcInfo) {\n        const remoteSdp = new SDP(this.peerconnection.remoteDescription.sdp);\n\n        removeSsrcInfo.forEach((lines, idx) => {\n            // eslint-disable-next-line no-param-reassign\n            lines = lines.split('\\r\\n');\n            lines.pop(); // remove empty last element;\n            lines.forEach(line => {\n                remoteSdp.media[idx]\n                    = remoteSdp.media[idx].replace(`${line}\\r\\n`, '');\n            });\n        });\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\n\n        return remoteSdp;\n    }\n\n    /**\n     * Add the given ssrc lines to the current remote sdp\n     * @param {list} addSsrcInfo a list of SDP line strings that\n     *  should be added to the remote SDP\n     * @returns type {SDP Object} the new remote SDP (after removing the lines\n     *  in removeSsrcInfo\n     */\n    _processRemoteAddSource(addSsrcInfo) {\n        const remoteSdp = new SDP(this.peerconnection.remoteDescription.sdp);\n\n        addSsrcInfo.forEach((lines, idx) => {\n            remoteSdp.media[idx] += lines;\n        });\n        remoteSdp.raw = remoteSdp.session + remoteSdp.media.join('');\n\n        return remoteSdp;\n    }\n\n    /**\n     * Do a new o/a flow using the existing remote description\n     * @param {string} [optionalRemoteSdp] optional, raw remote sdp\n     *  to use.  If not provided, the remote sdp from the\n     *  peerconnection will be used\n     * @returns {Promise} promise which resolves when the\n     *  o/a flow is complete with no arguments or\n     *  rejects with an error {string}\n     */\n    _renegotiate(optionalRemoteSdp) {\n        const remoteSdp\n            = optionalRemoteSdp || this.peerconnection.remoteDescription.sdp;\n\n        if (!remoteSdp) {\n            return Promise.reject(\n                'Can not renegotiate without remote description,'\n                    + `- current state: ${this.state}`);\n        }\n\n        const remoteDescription = new RTCSessionDescription({\n            type: this.isInitiator ? 'answer' : 'offer',\n            sdp: remoteSdp\n        });\n\n        return new Promise((resolve, reject) => {\n            if (this.peerconnection.signalingState === 'closed') {\n                reject('Attempted to renegotiate in state closed');\n\n                return;\n            }\n            if (this.isInitiator) {\n                this._initiatorRenegotiate(remoteDescription, resolve, reject);\n            } else {\n                this._responderRenegotiate(remoteDescription, resolve, reject);\n            }\n        });\n    }\n\n    /**\n     * Renegotiate cycle implementation for the responder case.\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\n     * which will be used as remote description in the cycle.\n     * @param {function} resolve the success callback\n     * @param {function} reject the failure callback\n     * @private\n     */\n    _responderRenegotiate(remoteDescription, resolve, reject) {\n        // FIXME use WebRTC promise API to simplify things\n        logger.debug('Renegotiate: setting remote description');\n        this.peerconnection.setRemoteDescription(\n            remoteDescription,\n            () => {\n                logger.debug('Renegotiate: creating answer');\n                this.peerconnection.createAnswer(\n                    answer => {\n                        logger.debug('Renegotiate: setting local description');\n                        this.peerconnection.setLocalDescription(\n                            answer,\n                            () => {\n                                resolve();\n                            },\n                            error => {\n                                reject(\n                                    `setLocalDescription failed: ${error}`);\n                            }\n                        );\n                    },\n                    error => reject(`createAnswer failed: ${error}`),\n                    this.mediaConstraints\n                );\n            },\n            error => reject(`setRemoteDescription failed: ${error}`)\n        );\n    }\n\n    /**\n     * Renegotiate cycle implementation for the initiator's case.\n     * @param {object} remoteDescription the SDP object as defined by the WebRTC\n     * which will be used as remote description in the cycle.\n     * @param {function} resolve the success callback\n     * @param {function} reject the failure callback\n     * @private\n     */\n    _initiatorRenegotiate(remoteDescription, resolve, reject) {\n        // FIXME use WebRTC promise API to simplify things\n        if (this.peerconnection.signalingState === 'have-local-offer') {\n\n            // Skip createOffer and setLocalDescription or FF will fail\n            logger.debug(\n                'Renegotiate: setting remote description');\n            this.peerconnection.setRemoteDescription(\n                remoteDescription,\n                () => {\n                    // In case when the answer is being set for the first time,\n                    // full sRD/sLD cycle is required to have the local\n                    // description updated and SSRCs synchronized correctly.\n                    // Otherwise SSRCs for streams added after invite, but\n                    // before the answer was accepted will not be detected.\n                    // The reason for that is that renegotiate can not be called\n                    // when adding tracks and they will not be reflected in\n                    // the local SDP.\n                    this._initiatorRenegotiate(\n                        remoteDescription, resolve, reject);\n                },\n                error => reject(`setRemoteDescription failed: ${error}`)\n            );\n        } else {\n            logger.debug('Renegotiate: creating offer');\n            this.peerconnection.createOffer(\n                offer => {\n                    logger.debug('Renegotiate: setting local description');\n                    this.peerconnection.setLocalDescription(offer,\n                        () => {\n                            logger.debug(\n                                'Renegotiate: setting remote description');\n                            this.peerconnection.setRemoteDescription(\n                                remoteDescription,\n                                () => {\n                                    resolve();\n                                },\n                                error => reject(\n                                    `setRemoteDescription failed: ${error}`)\n                            );\n                        },\n                        error => {\n                            reject('setLocalDescription failed: ', error);\n                        });\n                },\n                error => reject(`createOffer failed: ${error}`),\n                this.mediaConstraints);\n        }\n    }\n\n    /**\n     * Replaces <tt>oldTrack</tt> with <tt>newTrack</tt> and performs a single\n     * offer/answer cycle after both operations are done. Either\n     * <tt>oldTrack</tt> or <tt>newTrack</tt> can be null; replacing a valid\n     * <tt>oldTrack</tt> with a null <tt>newTrack</tt> effectively just removes\n     * <tt>oldTrack</tt>\n     * @param {JitsiLocalTrack|null} oldTrack the current track in use to be\n     * replaced\n     * @param {JitsiLocalTrack|null} newTrack the new track to use\n     * @returns {Promise} which resolves once the replacement is complete\n     *  with no arguments or rejects with an error {string}\n     */\n    replaceTrack(oldTrack, newTrack) {\n        const workFunction = finishedCallback => {\n            // Check if the connection was closed and pretend everything is OK.\n            // This can happen if a track removal is scheduled but takes place\n            // after the connection is closed.\n            if (this.peerconnection.signalingState === 'closed'\n                || this.peerconnection.connectionState === 'closed'\n                || this.closed) {\n\n                finishedCallback();\n\n                return;\n            }\n\n            const oldLocalSdp = this.peerconnection.localDescription.sdp;\n\n            // NOTE the code below assumes that no more than 1 video track\n            // can be added to the peer connection.\n            // Transition from no video to video (possibly screen sharing)\n            if (!oldTrack && newTrack && newTrack.isVideoTrack()) {\n                // Clearing current primary SSRC will make\n                // the SdpConsistency generate a new one which will result\n                // with:\n                // 1. source-remove for the recvonly\n                // 2. source-add for the new video stream\n                this.peerconnection.clearRecvonlySsrc();\n\n            // Transition from video to no video\n            } else if (oldTrack && oldTrack.isVideoTrack() && !newTrack) {\n                // Clearing current primary SSRC and generating the recvonly\n                // will result in:\n                // 1. source-remove for the old video stream\n                // 2. source-add for the recvonly stream\n                this.peerconnection.clearRecvonlySsrc();\n                this.peerconnection.generateRecvonlySsrc();\n            }\n            if (oldTrack) {\n                this.peerconnection.removeTrack(oldTrack);\n            }\n            if (newTrack) {\n                this.peerconnection.addTrack(newTrack);\n            }\n\n            if ((oldTrack || newTrack)\n                && this.state === JingleSessionState.ACTIVE) {\n                this._renegotiate()\n                    .then(() => {\n                        const newLocalSDP\n                            = new SDP(\n                                this.peerconnection.localDescription.sdp);\n\n                        this.notifyMySSRCUpdate(\n                            new SDP(oldLocalSdp), newLocalSDP);\n                        finishedCallback();\n                    },\n                    finishedCallback /* will be called with en error */);\n            } else {\n                finishedCallback();\n            }\n        };\n\n        this.modificationQueue.push(\n            workFunction,\n            error => {\n                if (error) {\n                    logger.error('Replace track error:', error);\n                } else {\n                    logger.info('Replace track done!');\n                }\n            });\n    }\n\n    /**\n     * Parse the information from the xml sourceRemoveElem and translate it\n     *  into sdp lines\n     * @param {jquery xml element} sourceRemoveElem the source-remove\n     *  element from jingle\n     * @param {SDP object} currentRemoteSdp the current remote\n     *  sdp (as of this new source-remove)\n     * @returns {list} a list of SDP line strings that should\n     *  be removed from the remote SDP\n     */\n    _parseSsrcInfoFromSourceRemove(sourceRemoveElem, currentRemoteSdp) {\n        const removeSsrcInfo = [];\n\n        $(sourceRemoveElem).each((i1, content) => {\n            const name = $(content).attr('name');\n            let lines = '';\n\n            $(content)\n                .find('ssrc-group[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]')\n                .each(function() {\n                    /* eslint-disable no-invalid-this */\n                    const semantics = this.getAttribute('semantics');\n                    const ssrcs\n                        = $(this)\n                            .find('>source')\n                            .map(function() {\n                                return this.getAttribute('ssrc');\n                            })\n                            .get();\n\n                    if (ssrcs.length) {\n                        lines\n                            += `a=ssrc-group:${semantics} ${\n                                ssrcs.join(' ')}\\r\\n`;\n                    }\n\n                    /* eslint-enable no-invalid-this */\n                });\n            const ssrcs = [];\n\n            // handles both >source and >description>source versions\n            const tmp\n                = $(content).find(\n                    'source[xmlns=\"urn:xmpp:jingle:apps:rtp:ssma:0\"]');\n\n            tmp.each(function() {\n                // eslint-disable-next-line no-invalid-this\n                const ssrc = $(this).attr('ssrc');\n\n                ssrcs.push(ssrc);\n            });\n            currentRemoteSdp.media.forEach((media, i2) => {\n                if (!SDPUtil.findLine(media, `a=mid:${name}`)) {\n                    return;\n                }\n                if (!removeSsrcInfo[i2]) {\n                    removeSsrcInfo[i2] = '';\n                }\n                ssrcs.forEach(ssrc => {\n                    const ssrcLines\n                        = SDPUtil.findLines(media, `a=ssrc:${ssrc}`);\n\n                    if (ssrcLines.length) {\n                        removeSsrcInfo[i2] += `${ssrcLines.join('\\r\\n')}\\r\\n`;\n                    }\n                });\n                removeSsrcInfo[i2] += lines;\n            });\n        });\n\n        return removeSsrcInfo;\n    }\n\n    /**\n     * Will print an error if there is any difference, between the SSRCs given\n     * in the <tt>oldSDP</tt> and the ones currently described in\n     * the peerconnection's local description.\n     * @param {string} operationName the operation's name which will be printed\n     * in the error message.\n     * @param {SDP} oldSDP the old local SDP which will be compared with\n     * the current one.\n     * @return {boolean} <tt>true</tt> if there was any change or <tt>false</tt>\n     * otherwise.\n     * @private\n     */\n    _verifyNoSSRCChanged(operationName, oldSDP) {\n        const currentLocalSDP\n            = new SDP(this.peerconnection.localDescription.sdp);\n        let sdpDiff = new SDPDiffer(oldSDP, currentLocalSDP);\n        const addedMedia = sdpDiff.getNewMedia();\n\n        if (Object.keys(addedMedia).length) {\n            logger.error(\n                `${this} - some SSRC were added on ${operationName}`,\n                addedMedia);\n\n            return false;\n        }\n\n        sdpDiff = new SDPDiffer(currentLocalSDP, oldSDP);\n        const removedMedia = sdpDiff.getNewMedia();\n\n        if (Object.keys(removedMedia).length) {\n            logger.error(\n                `${this} - some SSRCs were removed on ${operationName}`,\n                removedMedia);\n\n            return false;\n        }\n\n        return true;\n    }\n\n    /**\n     * Adds local track back to this session, as part of the unmute operation.\n     * @param {JitsiLocalTrack} track\n     * @return {Promise} a promise that will resolve once the local track is\n     * added back to this session and renegotiation succeeds. Will be rejected\n     * with a <tt>string</tt> that provides some error details in case something\n     * goes wrong.\n     */\n    addTrackAsUnmute(track) {\n        return this._addRemoveTrackAsMuteUnmute(\n            false /* add as unmute */, track);\n    }\n\n    /**\n     * Remove local track as part of the mute operation.\n     * @param {JitsiLocalTrack} track the local track to be removed\n     * @return {Promise} a promise which will be resolved once the local track\n     * is removed from this session and the renegotiation is performed.\n     * The promise will be rejected with a <tt>string</tt> that the describes\n     * the error if anything goes wrong.\n     */\n    removeTrackAsMute(track) {\n        return this._addRemoveTrackAsMuteUnmute(\n            true /* remove as mute */, track);\n    }\n\n    /**\n     * See {@link addTrackAsUnmute} and {@link removeTrackAsMute}.\n     * @param {boolean} isMute <tt>true</tt> for \"remove as mute\" or\n     * <tt>false</tt> for \"add as unmute\".\n     * @param {JitsiLocalTrack} track the track that will be added/removed\n     * @private\n     */\n    _addRemoveTrackAsMuteUnmute(isMute, track) {\n        if (!track) {\n            return Promise.reject('invalid \"track\" argument value');\n        }\n        const operationName = isMute ? 'removeTrackMute' : 'addTrackUnmute';\n        const workFunction = finishedCallback => {\n            const tpc = this.peerconnection;\n\n            if (!tpc) {\n                finishedCallback(\n                    `Error:  tried ${operationName} track with no active peer`\n                        + 'connection');\n\n                return;\n            }\n            const oldLocalSDP = tpc.localDescription.sdp;\n            const tpcOperation\n                = isMute\n                    ? tpc.removeTrackMute.bind(tpc, track)\n                    : tpc.addTrackUnmute.bind(tpc, track);\n\n            if (!tpcOperation()) {\n                finishedCallback(`${operationName} failed!`);\n            } else if (!oldLocalSDP || !tpc.remoteDescription.sdp) {\n                finishedCallback();\n            } else {\n                this._renegotiate()\n                    .then(() => {\n                        // The results are ignored, as this check failure is not\n                        // enough to fail the whole operation. It will log\n                        // an error inside.\n                        this._verifyNoSSRCChanged(\n                            operationName, new SDP(oldLocalSDP));\n                        finishedCallback();\n                    },\n                    finishedCallback /* will be called with an error */);\n            }\n        };\n\n        return new Promise((resolve, reject) => {\n            this.modificationQueue.push(\n                workFunction,\n                error => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        resolve();\n                    }\n                });\n        });\n    }\n\n    /**\n     * Resumes or suspends media transfer over the underlying peer connection.\n     * @param {boolean} audioActive <tt>true</tt> to enable audio media\n     * transfer or <tt>false</tt> to suspend audio media transmission.\n     * @param {boolean} videoActive <tt>true</tt> to enable video media\n     * transfer or <tt>false</tt> to suspend video media transmission.\n     * @return {Promise} a <tt>Promise</tt> which will resolve once\n     * the operation is done. It will be rejected with an error description as\n     * a string in case anything goes wrong.\n     */\n    setMediaTransferActive(audioActive, videoActive) {\n        if (!this.peerconnection) {\n            return Promise.reject(\n                'Can not modify transfer active state,'\n                    + ' before \"initialize\" is called');\n        }\n\n        const logAudioStr = audioActive ? 'audio active' : 'audio inactive';\n        const logVideoStr = videoActive ? 'video active' : 'video inactive';\n\n        logger.info(`Queued make ${logVideoStr}, ${logAudioStr} task...`);\n\n        const workFunction = finishedCallback => {\n            const isSessionActive = this.state === JingleSessionState.ACTIVE;\n\n            // Because the value is modified on the queue it's impossible to\n            // check it's final value reliably prior to submitting the task.\n            // The rule here is that the last submitted state counts.\n            // Check the values here to avoid unnecessary renegotiation cycle.\n            const audioActiveChanged\n                = this.peerconnection.setAudioTransferActive(audioActive);\n\n            if (this._localVideoActive !== videoActive) {\n                this._localVideoActive = videoActive;\n\n                // Do only for P2P - Jicofo will reply with 'bad-request'\n                // We don't want to send 'content-modify', before the initial\n                // O/A (state === JingleSessionState.ACTIVE), because that will\n                // mess up video media direction in the remote SDP.\n                // 'content-modify' when processed only affects the media\n                // direction in the local SDP. We're doing that, because setting\n                // 'inactive' on video media in remote SDP will mess up our SDP\n                // translation chain (simulcast, RTX, video mute etc.).\n                if (this.isP2P && isSessionActive) {\n                    this.sendContentModify(videoActive);\n                }\n            }\n\n            const pcVideoActiveChanged\n                = this.peerconnection.setVideoTransferActive(\n                    this._localVideoActive && this._remoteVideoActive);\n\n            // Will do the sRD/sLD cycle to update SDPs and adjust the media\n            // direction\n            if (isSessionActive\n                    && (audioActiveChanged || pcVideoActiveChanged)) {\n                this._renegotiate()\n                    .then(\n                        finishedCallback,\n                        finishedCallback /* will be called with an error */);\n            } else {\n                finishedCallback();\n            }\n        };\n\n        return new Promise((resolve, reject) => {\n            this.modificationQueue.push(\n                workFunction,\n                error => {\n                    if (error) {\n                        reject(error);\n                    } else {\n                        resolve();\n                    }\n                });\n        });\n    }\n\n    /**\n     * Will put and execute on the queue a session modify task. Currently it\n     * only checks the senders attribute of the video content in order to figure\n     * out if the remote peer has video in the inactive state (stored locally\n     * in {@link _remoteVideoActive} - see field description for more info).\n     * @param {jQuery} jingleContents jQuery selector pointing to the jingle\n     * element of the session modify IQ.\n     * @see {@link _remoteVideoActive}\n     * @see {@link _localVideoActive}\n     */\n    modifyContents(jingleContents) {\n        const newVideoSenders\n            = JingleSessionPC.parseVideoSenders(jingleContents);\n\n        if (newVideoSenders === null) {\n            logger.error(\n                `${this} - failed to parse video \"senders\" attribute in`\n                    + '\"content-modify\" action');\n\n            return;\n        }\n\n        const workFunction = finishedCallback => {\n            if (this._assertNotEnded('content-modify')\n                    && this._modifyRemoteVideoActive(newVideoSenders)) {\n                // Will do the sRD/sLD cycle to update SDPs and adjust\n                // the media direction\n                this._renegotiate()\n                    .then(finishedCallback, finishedCallback /* (error) */);\n            } else {\n                finishedCallback();\n            }\n        };\n\n        logger.debug(\n            `${this} queued \"content-modify\" task`\n                + `(video senders=\"${newVideoSenders}\")`);\n\n        this.modificationQueue.push(\n            workFunction,\n            error => {\n                if (error) {\n                    logger.error('\"content-modify\" failed', error);\n                }\n            });\n    }\n\n    /**\n     * Processes new value of remote video \"senders\" Jingle attribute and tries\n     * to apply it for {@link _remoteVideoActive}.\n     * @param {string} remoteVideoSenders the value of \"senders\" attribute of\n     * Jingle video content element advertised by remote peer.\n     * @return {boolean} <tt>true</tt> if the change affected state of\n     * the underlying peerconnection and renegotiation is required for\n     * the changes to take effect.\n     * @private\n     */\n    _modifyRemoteVideoActive(remoteVideoSenders) {\n        const isRemoteVideoActive\n            = remoteVideoSenders === 'both'\n                || (remoteVideoSenders === 'initiator' && this.isInitiator)\n                || (remoteVideoSenders === 'responder' && !this.isInitiator);\n\n        if (isRemoteVideoActive !== this._remoteVideoActive) {\n            logger.debug(\n                `${this} new remote video active: ${isRemoteVideoActive}`);\n            this._remoteVideoActive = isRemoteVideoActive;\n        }\n\n        return this.peerconnection.setVideoTransferActive(\n            this._localVideoActive && this._remoteVideoActive);\n    }\n\n    /**\n     * Figures out added/removed ssrcs and send update IQs.\n     * @param oldSDP SDP object for old description.\n     * @param newSDP SDP object for new description.\n     */\n    notifyMySSRCUpdate(oldSDP, newSDP) {\n\n        if (this.state !== JingleSessionState.ACTIVE) {\n            logger.warn(`Skipping SSRC update in '${this.state} ' state.`);\n\n            return;\n        }\n\n        // send source-remove IQ.\n        let sdpDiffer = new SDPDiffer(newSDP, oldSDP);\n        const remove = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'source-remove',\n                initiator: this.initiator,\n                sid: this.sid\n            }\n            );\n        const removedAnySSRCs = sdpDiffer.toJingle(remove);\n\n        if (removedAnySSRCs) {\n            logger.info('Sending source-remove', remove.tree());\n            this.connection.sendIQ(\n                remove, null,\n                this.newJingleErrorHandler(remove), IQ_TIMEOUT);\n        } else {\n            logger.log('removal not necessary');\n        }\n\n        // send source-add IQ.\n        sdpDiffer = new SDPDiffer(oldSDP, newSDP);\n        const add = $iq({ to: this.remoteJid,\n            type: 'set' })\n            .c('jingle', {\n                xmlns: 'urn:xmpp:jingle:1',\n                action: 'source-add',\n                initiator: this.initiator,\n                sid: this.sid\n            }\n            );\n\n        const containsNewSSRCs = sdpDiffer.toJingle(add);\n\n        if (containsNewSSRCs) {\n            logger.info('Sending source-add', add.tree());\n            this.connection.sendIQ(\n                add, null, this.newJingleErrorHandler(add), IQ_TIMEOUT);\n        } else {\n            logger.log('addition not necessary');\n        }\n    }\n\n    /**\n     * Method returns function(errorResponse) which is a callback to be passed\n     * to Strophe connection.sendIQ method. An 'error' structure is created that\n     * is passed as 1st argument to given <tt>failureCb</tt>. The format of this\n     * structure is as follows:\n     * {\n     *  code: {XMPP error response code}\n     *  reason: {the name of XMPP error reason element or 'timeout' if the\n      *          request has timed out within <tt>IQ_TIMEOUT</tt> milliseconds}\n     *  source: {request.tree() that provides original request}\n     *  session: {this JingleSessionPC.toString()}\n     * }\n     * @param request Strophe IQ instance which is the request to be dumped into\n     *        the error structure\n     * @param failureCb function(error) called when error response was returned\n     *        or when a timeout has occurred.\n     * @returns {function(this:JingleSessionPC)}\n     */\n    newJingleErrorHandler(request, failureCb) {\n        return errResponse => {\n\n            const error = {};\n\n            // Get XMPP error code and condition(reason)\n            const errorElSel = $(errResponse).find('error');\n\n            if (errorElSel.length) {\n                error.code = errorElSel.attr('code');\n                const errorReasonSel = $(errResponse).find('error :first');\n\n                if (errorReasonSel.length) {\n                    error.reason = errorReasonSel[0].tagName;\n                }\n\n                const errorMsgSel = errorElSel.find('>text');\n\n                if (errorMsgSel.length) {\n                    error.msg = errorMsgSel.text();\n                }\n            }\n\n            if (!errResponse) {\n                error.reason = 'timeout';\n            }\n\n            error.session = this.toString();\n\n            if (failureCb) {\n                failureCb(error);\n            } else if (this.state === JingleSessionState.ENDED\n                        && error.reason === 'item-not-found') {\n                // When remote peer decides to terminate the session, but it\n                // still have few messages on the queue for processing,\n                // it will first send us 'session-terminate' (we enter ENDED)\n                // and then follow with 'item-not-found' for the queued requests\n                // We don't want to have that logged on error level.\n                logger.debug(`Jingle error: ${JSON.stringify(error)}`);\n            } else {\n                GlobalOnErrorHandler.callErrorHandler(\n                    new Error(\n                        `Jingle error: ${JSON.stringify(error)}`));\n            }\n        };\n    }\n\n    /**\n     *\n     * @param session\n     * @param error\n     */\n    static onJingleFatalError(session, error) {\n        if (this.room) {\n            this.room.eventEmitter.emit(\n                XMPPEvents.CONFERENCE_SETUP_FAILED, session, error);\n            this.room.eventEmitter.emit(\n                XMPPEvents.JINGLE_FATAL_ERROR, session, error);\n        }\n    }\n\n    /**\n     * Returns the ice connection state for the peer connection.\n     * @returns the ice connection state for the peer connection.\n     */\n    getIceConnectionState() {\n        return this.peerconnection.iceConnectionState;\n    }\n\n    /**\n     * Closes the peerconnection.\n     */\n    close() {\n        this.closed = true;\n\n        // The signaling layer will remove it's listeners\n        this.signalingLayer.setChatRoom(null);\n\n        // do not try to close if already closed.\n        this.peerconnection\n            && ((this.peerconnection.signalingState\n                    && this.peerconnection.signalingState !== 'closed')\n                || (this.peerconnection.connectionState\n                    && this.peerconnection.connectionState !== 'closed'))\n            && this.peerconnection.close();\n    }\n\n    /**\n     * Converts to string with minor summary.\n     * @return {string}\n     */\n    toString() {\n        return `JingleSessionPC[p2p=${this.isP2P},`\n                    + `initiator=${this.isInitiator},sid=${this.sid}]`;\n    }\n\n    /**\n     * If the A/B test for suspend video is disabled according to the room's\n     * configuration, returns undefined. Otherwise returns a boolean which\n     * indicates whether the suspend video option should be enabled or disabled.\n     */\n    _abtestSuspendVideoEnabled() {\n        if (!this.room.options.abTesting\n            || !this.room.options.abTesting.enableSuspendVideoTest) {\n            return;\n        }\n\n        // We want the two participants in a P2P call to agree on the value of\n        // the \"suspend\" option. We use the JID of the initiator, because it is\n        // both randomly selected and agreed upon by both participants.\n        const jid = this._getInitiatorJid();\n\n        return integerHash(jid) % 2 === 0;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/JingleSessionPC.js","/*!\n * async\n * https://github.com/caolan/async\n *\n * Copyright 2010-2014 Caolan McMahon\n * Released under the MIT license\n */\n/*jshint onevar: false, indent:4 */\n/*global setImmediate: false, setTimeout: false, console: false */\n(function () {\n\n    var async = {};\n\n    // global on the server, window in the browser\n    var root, previous_async;\n\n    root = this;\n    if (root != null) {\n      previous_async = root.async;\n    }\n\n    async.noConflict = function () {\n        root.async = previous_async;\n        return async;\n    };\n\n    function only_once(fn) {\n        var called = false;\n        return function() {\n            if (called) throw new Error(\"Callback was already called.\");\n            called = true;\n            fn.apply(root, arguments);\n        }\n    }\n\n    //// cross-browser compatiblity functions ////\n\n    var _toString = Object.prototype.toString;\n\n    var _isArray = Array.isArray || function (obj) {\n        return _toString.call(obj) === '[object Array]';\n    };\n\n    var _each = function (arr, iterator) {\n        if (arr.forEach) {\n            return arr.forEach(iterator);\n        }\n        for (var i = 0; i < arr.length; i += 1) {\n            iterator(arr[i], i, arr);\n        }\n    };\n\n    var _map = function (arr, iterator) {\n        if (arr.map) {\n            return arr.map(iterator);\n        }\n        var results = [];\n        _each(arr, function (x, i, a) {\n            results.push(iterator(x, i, a));\n        });\n        return results;\n    };\n\n    var _reduce = function (arr, iterator, memo) {\n        if (arr.reduce) {\n            return arr.reduce(iterator, memo);\n        }\n        _each(arr, function (x, i, a) {\n            memo = iterator(memo, x, i, a);\n        });\n        return memo;\n    };\n\n    var _keys = function (obj) {\n        if (Object.keys) {\n            return Object.keys(obj);\n        }\n        var keys = [];\n        for (var k in obj) {\n            if (obj.hasOwnProperty(k)) {\n                keys.push(k);\n            }\n        }\n        return keys;\n    };\n\n    //// exported async module functions ////\n\n    //// nextTick implementation with browser-compatible fallback ////\n    if (typeof process === 'undefined' || !(process.nextTick)) {\n        if (typeof setImmediate === 'function') {\n            async.nextTick = function (fn) {\n                // not a direct alias for IE10 compatibility\n                setImmediate(fn);\n            };\n            async.setImmediate = async.nextTick;\n        }\n        else {\n            async.nextTick = function (fn) {\n                setTimeout(fn, 0);\n            };\n            async.setImmediate = async.nextTick;\n        }\n    }\n    else {\n        async.nextTick = process.nextTick;\n        if (typeof setImmediate !== 'undefined') {\n            async.setImmediate = function (fn) {\n              // not a direct alias for IE10 compatibility\n              setImmediate(fn);\n            };\n        }\n        else {\n            async.setImmediate = async.nextTick;\n        }\n    }\n\n    async.each = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        _each(arr, function (x) {\n            iterator(x, only_once(done) );\n        });\n        function done(err) {\n          if (err) {\n              callback(err);\n              callback = function () {};\n          }\n          else {\n              completed += 1;\n              if (completed >= arr.length) {\n                  callback();\n              }\n          }\n        }\n    };\n    async.forEach = async.each;\n\n    async.eachSeries = function (arr, iterator, callback) {\n        callback = callback || function () {};\n        if (!arr.length) {\n            return callback();\n        }\n        var completed = 0;\n        var iterate = function () {\n            iterator(arr[completed], function (err) {\n                if (err) {\n                    callback(err);\n                    callback = function () {};\n                }\n                else {\n                    completed += 1;\n                    if (completed >= arr.length) {\n                        callback();\n                    }\n                    else {\n                        iterate();\n                    }\n                }\n            });\n        };\n        iterate();\n    };\n    async.forEachSeries = async.eachSeries;\n\n    async.eachLimit = function (arr, limit, iterator, callback) {\n        var fn = _eachLimit(limit);\n        fn.apply(null, [arr, iterator, callback]);\n    };\n    async.forEachLimit = async.eachLimit;\n\n    var _eachLimit = function (limit) {\n\n        return function (arr, iterator, callback) {\n            callback = callback || function () {};\n            if (!arr.length || limit <= 0) {\n                return callback();\n            }\n            var completed = 0;\n            var started = 0;\n            var running = 0;\n\n            (function replenish () {\n                if (completed >= arr.length) {\n                    return callback();\n                }\n\n                while (running < limit && started < arr.length) {\n                    started += 1;\n                    running += 1;\n                    iterator(arr[started - 1], function (err) {\n                        if (err) {\n                            callback(err);\n                            callback = function () {};\n                        }\n                        else {\n                            completed += 1;\n                            running -= 1;\n                            if (completed >= arr.length) {\n                                callback();\n                            }\n                            else {\n                                replenish();\n                            }\n                        }\n                    });\n                }\n            })();\n        };\n    };\n\n\n    var doParallel = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.each].concat(args));\n        };\n    };\n    var doParallelLimit = function(limit, fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [_eachLimit(limit)].concat(args));\n        };\n    };\n    var doSeries = function (fn) {\n        return function () {\n            var args = Array.prototype.slice.call(arguments);\n            return fn.apply(null, [async.eachSeries].concat(args));\n        };\n    };\n\n\n    var _asyncMap = function (eachfn, arr, iterator, callback) {\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        if (!callback) {\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err) {\n                    callback(err);\n                });\n            });\n        } else {\n            var results = [];\n            eachfn(arr, function (x, callback) {\n                iterator(x.value, function (err, v) {\n                    results[x.index] = v;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n    async.map = doParallel(_asyncMap);\n    async.mapSeries = doSeries(_asyncMap);\n    async.mapLimit = function (arr, limit, iterator, callback) {\n        return _mapLimit(limit)(arr, iterator, callback);\n    };\n\n    var _mapLimit = function(limit) {\n        return doParallelLimit(limit, _asyncMap);\n    };\n\n    // reduce only has a series version, as doing reduce in parallel won't\n    // work in many situations.\n    async.reduce = function (arr, memo, iterator, callback) {\n        async.eachSeries(arr, function (x, callback) {\n            iterator(memo, x, function (err, v) {\n                memo = v;\n                callback(err);\n            });\n        }, function (err) {\n            callback(err, memo);\n        });\n    };\n    // inject alias\n    async.inject = async.reduce;\n    // foldl alias\n    async.foldl = async.reduce;\n\n    async.reduceRight = function (arr, memo, iterator, callback) {\n        var reversed = _map(arr, function (x) {\n            return x;\n        }).reverse();\n        async.reduce(reversed, memo, iterator, callback);\n    };\n    // foldr alias\n    async.foldr = async.reduceRight;\n\n    var _filter = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.filter = doParallel(_filter);\n    async.filterSeries = doSeries(_filter);\n    // select alias\n    async.select = async.filter;\n    async.selectSeries = async.filterSeries;\n\n    var _reject = function (eachfn, arr, iterator, callback) {\n        var results = [];\n        arr = _map(arr, function (x, i) {\n            return {index: i, value: x};\n        });\n        eachfn(arr, function (x, callback) {\n            iterator(x.value, function (v) {\n                if (!v) {\n                    results.push(x);\n                }\n                callback();\n            });\n        }, function (err) {\n            callback(_map(results.sort(function (a, b) {\n                return a.index - b.index;\n            }), function (x) {\n                return x.value;\n            }));\n        });\n    };\n    async.reject = doParallel(_reject);\n    async.rejectSeries = doSeries(_reject);\n\n    var _detect = function (eachfn, arr, iterator, main_callback) {\n        eachfn(arr, function (x, callback) {\n            iterator(x, function (result) {\n                if (result) {\n                    main_callback(x);\n                    main_callback = function () {};\n                }\n                else {\n                    callback();\n                }\n            });\n        }, function (err) {\n            main_callback();\n        });\n    };\n    async.detect = doParallel(_detect);\n    async.detectSeries = doSeries(_detect);\n\n    async.some = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (v) {\n                    main_callback(true);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(false);\n        });\n    };\n    // any alias\n    async.any = async.some;\n\n    async.every = function (arr, iterator, main_callback) {\n        async.each(arr, function (x, callback) {\n            iterator(x, function (v) {\n                if (!v) {\n                    main_callback(false);\n                    main_callback = function () {};\n                }\n                callback();\n            });\n        }, function (err) {\n            main_callback(true);\n        });\n    };\n    // all alias\n    async.all = async.every;\n\n    async.sortBy = function (arr, iterator, callback) {\n        async.map(arr, function (x, callback) {\n            iterator(x, function (err, criteria) {\n                if (err) {\n                    callback(err);\n                }\n                else {\n                    callback(null, {value: x, criteria: criteria});\n                }\n            });\n        }, function (err, results) {\n            if (err) {\n                return callback(err);\n            }\n            else {\n                var fn = function (left, right) {\n                    var a = left.criteria, b = right.criteria;\n                    return a < b ? -1 : a > b ? 1 : 0;\n                };\n                callback(null, _map(results.sort(fn), function (x) {\n                    return x.value;\n                }));\n            }\n        });\n    };\n\n    async.auto = function (tasks, callback) {\n        callback = callback || function () {};\n        var keys = _keys(tasks);\n        var remainingTasks = keys.length\n        if (!remainingTasks) {\n            return callback();\n        }\n\n        var results = {};\n\n        var listeners = [];\n        var addListener = function (fn) {\n            listeners.unshift(fn);\n        };\n        var removeListener = function (fn) {\n            for (var i = 0; i < listeners.length; i += 1) {\n                if (listeners[i] === fn) {\n                    listeners.splice(i, 1);\n                    return;\n                }\n            }\n        };\n        var taskComplete = function () {\n            remainingTasks--\n            _each(listeners.slice(0), function (fn) {\n                fn();\n            });\n        };\n\n        addListener(function () {\n            if (!remainingTasks) {\n                var theCallback = callback;\n                // prevent final callback from calling itself if it errors\n                callback = function () {};\n\n                theCallback(null, results);\n            }\n        });\n\n        _each(keys, function (k) {\n            var task = _isArray(tasks[k]) ? tasks[k]: [tasks[k]];\n            var taskCallback = function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (args.length <= 1) {\n                    args = args[0];\n                }\n                if (err) {\n                    var safeResults = {};\n                    _each(_keys(results), function(rkey) {\n                        safeResults[rkey] = results[rkey];\n                    });\n                    safeResults[k] = args;\n                    callback(err, safeResults);\n                    // stop subsequent errors hitting callback multiple times\n                    callback = function () {};\n                }\n                else {\n                    results[k] = args;\n                    async.setImmediate(taskComplete);\n                }\n            };\n            var requires = task.slice(0, Math.abs(task.length - 1)) || [];\n            var ready = function () {\n                return _reduce(requires, function (a, x) {\n                    return (a && results.hasOwnProperty(x));\n                }, true) && !results.hasOwnProperty(k);\n            };\n            if (ready()) {\n                task[task.length - 1](taskCallback, results);\n            }\n            else {\n                var listener = function () {\n                    if (ready()) {\n                        removeListener(listener);\n                        task[task.length - 1](taskCallback, results);\n                    }\n                };\n                addListener(listener);\n            }\n        });\n    };\n\n    async.retry = function(times, task, callback) {\n        var DEFAULT_TIMES = 5;\n        var attempts = [];\n        // Use defaults if times not passed\n        if (typeof times === 'function') {\n            callback = task;\n            task = times;\n            times = DEFAULT_TIMES;\n        }\n        // Make sure times is a number\n        times = parseInt(times, 10) || DEFAULT_TIMES;\n        var wrappedTask = function(wrappedCallback, wrappedResults) {\n            var retryAttempt = function(task, finalAttempt) {\n                return function(seriesCallback) {\n                    task(function(err, result){\n                        seriesCallback(!err || finalAttempt, {err: err, result: result});\n                    }, wrappedResults);\n                };\n            };\n            while (times) {\n                attempts.push(retryAttempt(task, !(times-=1)));\n            }\n            async.series(attempts, function(done, data){\n                data = data[data.length - 1];\n                (wrappedCallback || callback)(data.err, data.result);\n            });\n        }\n        // If a callback is passed, run this as a controll flow\n        return callback ? wrappedTask() : wrappedTask\n    };\n\n    async.waterfall = function (tasks, callback) {\n        callback = callback || function () {};\n        if (!_isArray(tasks)) {\n          var err = new Error('First argument to waterfall must be an array of functions');\n          return callback(err);\n        }\n        if (!tasks.length) {\n            return callback();\n        }\n        var wrapIterator = function (iterator) {\n            return function (err) {\n                if (err) {\n                    callback.apply(null, arguments);\n                    callback = function () {};\n                }\n                else {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    var next = iterator.next();\n                    if (next) {\n                        args.push(wrapIterator(next));\n                    }\n                    else {\n                        args.push(callback);\n                    }\n                    async.setImmediate(function () {\n                        iterator.apply(null, args);\n                    });\n                }\n            };\n        };\n        wrapIterator(async.iterator(tasks))();\n    };\n\n    var _parallel = function(eachfn, tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            eachfn.map(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            eachfn.each(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.parallel = function (tasks, callback) {\n        _parallel({ map: async.map, each: async.each }, tasks, callback);\n    };\n\n    async.parallelLimit = function(tasks, limit, callback) {\n        _parallel({ map: _mapLimit(limit), each: _eachLimit(limit) }, tasks, callback);\n    };\n\n    async.series = function (tasks, callback) {\n        callback = callback || function () {};\n        if (_isArray(tasks)) {\n            async.mapSeries(tasks, function (fn, callback) {\n                if (fn) {\n                    fn(function (err) {\n                        var args = Array.prototype.slice.call(arguments, 1);\n                        if (args.length <= 1) {\n                            args = args[0];\n                        }\n                        callback.call(null, err, args);\n                    });\n                }\n            }, callback);\n        }\n        else {\n            var results = {};\n            async.eachSeries(_keys(tasks), function (k, callback) {\n                tasks[k](function (err) {\n                    var args = Array.prototype.slice.call(arguments, 1);\n                    if (args.length <= 1) {\n                        args = args[0];\n                    }\n                    results[k] = args;\n                    callback(err);\n                });\n            }, function (err) {\n                callback(err, results);\n            });\n        }\n    };\n\n    async.iterator = function (tasks) {\n        var makeCallback = function (index) {\n            var fn = function () {\n                if (tasks.length) {\n                    tasks[index].apply(null, arguments);\n                }\n                return fn.next();\n            };\n            fn.next = function () {\n                return (index < tasks.length - 1) ? makeCallback(index + 1): null;\n            };\n            return fn;\n        };\n        return makeCallback(0);\n    };\n\n    async.apply = function (fn) {\n        var args = Array.prototype.slice.call(arguments, 1);\n        return function () {\n            return fn.apply(\n                null, args.concat(Array.prototype.slice.call(arguments))\n            );\n        };\n    };\n\n    var _concat = function (eachfn, arr, fn, callback) {\n        var r = [];\n        eachfn(arr, function (x, cb) {\n            fn(x, function (err, y) {\n                r = r.concat(y || []);\n                cb(err);\n            });\n        }, function (err) {\n            callback(err, r);\n        });\n    };\n    async.concat = doParallel(_concat);\n    async.concatSeries = doSeries(_concat);\n\n    async.whilst = function (test, iterator, callback) {\n        if (test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.whilst(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doWhilst = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (test.apply(null, args)) {\n                async.doWhilst(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.until = function (test, iterator, callback) {\n        if (!test()) {\n            iterator(function (err) {\n                if (err) {\n                    return callback(err);\n                }\n                async.until(test, iterator, callback);\n            });\n        }\n        else {\n            callback();\n        }\n    };\n\n    async.doUntil = function (iterator, test, callback) {\n        iterator(function (err) {\n            if (err) {\n                return callback(err);\n            }\n            var args = Array.prototype.slice.call(arguments, 1);\n            if (!test.apply(null, args)) {\n                async.doUntil(iterator, test, callback);\n            }\n            else {\n                callback();\n            }\n        });\n    };\n\n    async.queue = function (worker, concurrency) {\n        if (concurrency === undefined) {\n            concurrency = 1;\n        }\n        function _insert(q, data, pos, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n\n              if (pos) {\n                q.tasks.unshift(item);\n              } else {\n                q.tasks.push(item);\n              }\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n\n        var workers = 0;\n        var q = {\n            tasks: [],\n            concurrency: concurrency,\n            saturated: null,\n            empty: null,\n            drain: null,\n            started: false,\n            paused: false,\n            push: function (data, callback) {\n              _insert(q, data, false, callback);\n            },\n            kill: function () {\n              q.drain = null;\n              q.tasks = [];\n            },\n            unshift: function (data, callback) {\n              _insert(q, data, true, callback);\n            },\n            process: function () {\n                if (!q.paused && workers < q.concurrency && q.tasks.length) {\n                    var task = q.tasks.shift();\n                    if (q.empty && q.tasks.length === 0) {\n                        q.empty();\n                    }\n                    workers += 1;\n                    var next = function () {\n                        workers -= 1;\n                        if (task.callback) {\n                            task.callback.apply(task, arguments);\n                        }\n                        if (q.drain && q.tasks.length + workers === 0) {\n                            q.drain();\n                        }\n                        q.process();\n                    };\n                    var cb = only_once(next);\n                    worker(task.data, cb);\n                }\n            },\n            length: function () {\n                return q.tasks.length;\n            },\n            running: function () {\n                return workers;\n            },\n            idle: function() {\n                return q.tasks.length + workers === 0;\n            },\n            pause: function () {\n                if (q.paused === true) { return; }\n                q.paused = true;\n                q.process();\n            },\n            resume: function () {\n                if (q.paused === false) { return; }\n                q.paused = false;\n                q.process();\n            }\n        };\n        return q;\n    };\n    \n    async.priorityQueue = function (worker, concurrency) {\n        \n        function _compareTasks(a, b){\n          return a.priority - b.priority;\n        };\n        \n        function _binarySearch(sequence, item, compare) {\n          var beg = -1,\n              end = sequence.length - 1;\n          while (beg < end) {\n            var mid = beg + ((end - beg + 1) >>> 1);\n            if (compare(item, sequence[mid]) >= 0) {\n              beg = mid;\n            } else {\n              end = mid - 1;\n            }\n          }\n          return beg;\n        }\n        \n        function _insert(q, data, priority, callback) {\n          if (!q.started){\n            q.started = true;\n          }\n          if (!_isArray(data)) {\n              data = [data];\n          }\n          if(data.length == 0) {\n             // call drain immediately if there are no tasks\n             return async.setImmediate(function() {\n                 if (q.drain) {\n                     q.drain();\n                 }\n             });\n          }\n          _each(data, function(task) {\n              var item = {\n                  data: task,\n                  priority: priority,\n                  callback: typeof callback === 'function' ? callback : null\n              };\n              \n              q.tasks.splice(_binarySearch(q.tasks, item, _compareTasks) + 1, 0, item);\n\n              if (q.saturated && q.tasks.length === q.concurrency) {\n                  q.saturated();\n              }\n              async.setImmediate(q.process);\n          });\n        }\n        \n        // Start with a normal queue\n        var q = async.queue(worker, concurrency);\n        \n        // Override push to accept second parameter representing priority\n        q.push = function (data, priority, callback) {\n          _insert(q, data, priority, callback);\n        };\n        \n        // Remove unshift function\n        delete q.unshift;\n\n        return q;\n    };\n\n    async.cargo = function (worker, payload) {\n        var working     = false,\n            tasks       = [];\n\n        var cargo = {\n            tasks: tasks,\n            payload: payload,\n            saturated: null,\n            empty: null,\n            drain: null,\n            drained: true,\n            push: function (data, callback) {\n                if (!_isArray(data)) {\n                    data = [data];\n                }\n                _each(data, function(task) {\n                    tasks.push({\n                        data: task,\n                        callback: typeof callback === 'function' ? callback : null\n                    });\n                    cargo.drained = false;\n                    if (cargo.saturated && tasks.length === payload) {\n                        cargo.saturated();\n                    }\n                });\n                async.setImmediate(cargo.process);\n            },\n            process: function process() {\n                if (working) return;\n                if (tasks.length === 0) {\n                    if(cargo.drain && !cargo.drained) cargo.drain();\n                    cargo.drained = true;\n                    return;\n                }\n\n                var ts = typeof payload === 'number'\n                            ? tasks.splice(0, payload)\n                            : tasks.splice(0, tasks.length);\n\n                var ds = _map(ts, function (task) {\n                    return task.data;\n                });\n\n                if(cargo.empty) cargo.empty();\n                working = true;\n                worker(ds, function () {\n                    working = false;\n\n                    var args = arguments;\n                    _each(ts, function (data) {\n                        if (data.callback) {\n                            data.callback.apply(null, args);\n                        }\n                    });\n\n                    process();\n                });\n            },\n            length: function () {\n                return tasks.length;\n            },\n            running: function () {\n                return working;\n            }\n        };\n        return cargo;\n    };\n\n    var _console_fn = function (name) {\n        return function (fn) {\n            var args = Array.prototype.slice.call(arguments, 1);\n            fn.apply(null, args.concat([function (err) {\n                var args = Array.prototype.slice.call(arguments, 1);\n                if (typeof console !== 'undefined') {\n                    if (err) {\n                        if (console.error) {\n                            console.error(err);\n                        }\n                    }\n                    else if (console[name]) {\n                        _each(args, function (x) {\n                            console[name](x);\n                        });\n                    }\n                }\n            }]));\n        };\n    };\n    async.log = _console_fn('log');\n    async.dir = _console_fn('dir');\n    /*async.info = _console_fn('info');\n    async.warn = _console_fn('warn');\n    async.error = _console_fn('error');*/\n\n    async.memoize = function (fn, hasher) {\n        var memo = {};\n        var queues = {};\n        hasher = hasher || function (x) {\n            return x;\n        };\n        var memoized = function () {\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            var key = hasher.apply(null, args);\n            if (key in memo) {\n                async.nextTick(function () {\n                    callback.apply(null, memo[key]);\n                });\n            }\n            else if (key in queues) {\n                queues[key].push(callback);\n            }\n            else {\n                queues[key] = [callback];\n                fn.apply(null, args.concat([function () {\n                    memo[key] = arguments;\n                    var q = queues[key];\n                    delete queues[key];\n                    for (var i = 0, l = q.length; i < l; i++) {\n                      q[i].apply(null, arguments);\n                    }\n                }]));\n            }\n        };\n        memoized.memo = memo;\n        memoized.unmemoized = fn;\n        return memoized;\n    };\n\n    async.unmemoize = function (fn) {\n      return function () {\n        return (fn.unmemoized || fn).apply(null, arguments);\n      };\n    };\n\n    async.times = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.map(counter, iterator, callback);\n    };\n\n    async.timesSeries = function (count, iterator, callback) {\n        var counter = [];\n        for (var i = 0; i < count; i++) {\n            counter.push(i);\n        }\n        return async.mapSeries(counter, iterator, callback);\n    };\n\n    async.seq = function (/* functions... */) {\n        var fns = arguments;\n        return function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            async.reduce(fns, args, function (newargs, fn, cb) {\n                fn.apply(that, newargs.concat([function () {\n                    var err = arguments[0];\n                    var nextargs = Array.prototype.slice.call(arguments, 1);\n                    cb(err, nextargs);\n                }]))\n            },\n            function (err, results) {\n                callback.apply(that, [err].concat(results));\n            });\n        };\n    };\n\n    async.compose = function (/* functions... */) {\n      return async.seq.apply(null, Array.prototype.reverse.call(arguments));\n    };\n\n    var _applyEach = function (eachfn, fns /*args...*/) {\n        var go = function () {\n            var that = this;\n            var args = Array.prototype.slice.call(arguments);\n            var callback = args.pop();\n            return eachfn(fns, function (fn, cb) {\n                fn.apply(that, args.concat([cb]));\n            },\n            callback);\n        };\n        if (arguments.length > 2) {\n            var args = Array.prototype.slice.call(arguments, 2);\n            return go.apply(this, args);\n        }\n        else {\n            return go;\n        }\n    };\n    async.applyEach = doParallel(_applyEach);\n    async.applyEachSeries = doSeries(_applyEach);\n\n    async.forever = function (fn, callback) {\n        function next(err) {\n            if (err) {\n                if (callback) {\n                    return callback(err);\n                }\n                throw err;\n            }\n            fn(next);\n        }\n        next();\n    };\n\n    // Node.js\n    if (typeof module !== 'undefined' && module.exports) {\n        module.exports = async;\n    }\n    // AMD / RequireJS\n    else if (typeof define !== 'undefined' && define.amd) {\n        define([], function () {\n            return async;\n        });\n    }\n    // included directly via <script> tag\n    else {\n        root.async = async;\n    }\n\n}());\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/async/lib/async.js\n// module id = 102\n// module chunks = 0","/**\n * Implements a simple hash code for a string (see\n * https://en.wikipedia.org/wiki/Java_hashCode()).\n *\n * @param {string} The string to return a hash of.\n * @return {Number} the integer hash code of the string.\n */\nfunction integerHash(string) {\n    if (!string) {\n        return 0;\n    }\n\n    let char, hash = 0, i;\n\n    for (i = 0; i < string.length; i++) {\n        char = string.charCodeAt(i);\n        hash += char * Math.pow(31, string.length - 1 - i);\n        hash = Math.abs(hash | 0); // eslint-disable-line no-bitwise\n    }\n\n    return hash;\n}\n\nmodule.exports = { integerHash };\n\n\n\n// WEBPACK FOOTER //\n// ./modules/util/StringUtils.js","/* global __filename */\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as JingleSessionState from './JingleSessionState';\n\nconst logger = getLogger(__filename);\n\n/**\n * JingleSession provides an API to manage a single Jingle session. We will\n * have different implementations depending on the underlying interface used\n * (i.e. WebRTC and ORTC) and here we hold the code common to all of them.\n */\nexport default class JingleSession {\n\n    /* eslint-disable max-params */\n\n    /**\n     * Creates new <tt>JingleSession</tt>.\n     * @param {string} sid the Jingle session identifier\n     * @param {string} localJid our JID\n     * @param {string} remoteJid the JID of the remote peer\n     * @param {Strophe.Connection} connection the XMPP connection\n     * @param {Object} mediaConstraints the media constraints object passed to\n     * the PeerConnection onCreateAnswer/Offer as defined by the WebRTC.\n     * @param {Object} iceConfig the ICE servers config object as defined by\n     * the WebRTC. Passed to the PeerConnection's constructor.\n     */\n    constructor(\n            sid,\n            localJid,\n            remoteJid,\n            connection,\n            mediaConstraints,\n            iceConfig) {\n        this.sid = sid;\n        this.localJid = localJid;\n        this.remoteJid = remoteJid;\n        this.connection = connection;\n        this.mediaConstraints = mediaConstraints;\n        this.iceConfig = iceConfig;\n\n        /**\n         * Whether to use dripping or not. Dripping is sending trickle\n         * candidates not one-by-one.\n         */\n        this.usedrip = true;\n\n        /**\n         *  When dripping is used, stores ICE candidates which are to be sent.\n         */\n        this.dripContainer = [];\n\n        /**\n         * The chat room instance associated with the session.\n         * @type {ChatRoom}\n         */\n        this.room = null;\n\n        /**\n         * Jingle session state - uninitialized until {@link initialize} is\n         * called @type {JingleSessionState}\n         */\n        this.state = null;\n\n        /**\n         * The RTC service instance\n         * @type {RTC}\n         */\n        this.rtc = null;\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Prepares this object to initiate a session.\n     * @param {boolean} isInitiator whether we will be the Jingle initiator.\n     * @param {ChatRoom} room the chat room for the conference associated with\n     * this session\n     * @param {RTC} rtc the RTC service instance\n     */\n    initialize(isInitiator, room, rtc) {\n        if (this.state !== null) {\n            const errmsg\n                = `attempt to initiate on session ${this.sid}\n                   in state ${this.state}`;\n\n            logger.error(errmsg);\n            throw new Error(errmsg);\n        }\n        this.room = room;\n        this.rtc = rtc;\n        this.state = JingleSessionState.PENDING;\n        this.initiator = isInitiator ? this.localJid : this.remoteJid;\n        this.responder = isInitiator ? this.remoteJid : this.localJid;\n        this.doInitialize();\n    }\n\n    /**\n     * The implementing class finishes initialization here. Called at the end of\n     * {@link initialize}.\n     * @protected\n     */\n    doInitialize() {} // eslint-disable-line no-empty-function\n\n    /* eslint-disable no-unused-vars, no-empty-function */\n\n    /**\n     * Adds the ICE candidates found in the 'contents' array as remote\n     * candidates?\n     * Note: currently only used on transport-info\n     *\n     * @param contents\n     */\n    addIceCandidates(contents) {}\n\n    /* eslint-enable no-unused-vars, no-empty-function */\n\n    /**\n     * Returns current state of this <tt>JingleSession</tt> instance.\n     * @returns {JingleSessionState} the current state of this session instance.\n     */\n    getState() {\n        return this.state;\n    }\n\n    /* eslint-disable no-unused-vars, no-empty-function */\n\n    /**\n     * Handles an 'add-source' event.\n     *\n     * @param contents an array of Jingle 'content' elements.\n     */\n    addSources(contents) {}\n\n    /**\n     * Handles a 'remove-source' event.\n     *\n     * @param contents an array of Jingle 'content' elements.\n     */\n    removeSources(contents) {}\n\n    /**\n     * Terminates this Jingle session by sending session-terminate\n     * @param success a callback called once the 'session-terminate' packet has\n     * been acknowledged with RESULT.\n     * @param failure a callback called when either timeout occurs or ERROR\n     * response is received.\n     * @param {Object} options\n     * @param {string} [options.reason] XMPP Jingle error condition\n     * @param {string} [options.reasonDescription] some meaningful error message\n     * @param {boolean} [options.sendSessionTerminate=true] set to false to skip\n     * sending session-terminate. It may not make sense to send it if the XMPP\n     * connection has been closed already or if the remote peer has disconnected\n     */\n    terminate(success, failure, options) {}\n\n    /**\n     * Handles an offer from the remote peer (prepares to accept a session).\n     * @param jingle the 'jingle' XML element.\n     * @param success callback called when we the incoming session has been\n     * accepted\n     * @param failure callback called when we fail for any reason, will supply\n     * error object with details(which is meant more to be printed to the logger\n     * than analysed in the code, as the error is unrecoverable anyway)\n     */\n    acceptOffer(jingle, success, failure) {}\n\n    /**\n     * Returns the JID of the initiator of the jingle session.\n     */\n    _getInitiatorJid() {\n        return this.isInitiator ? this.localJid : this.remoteJid;\n    }\n\n    /* eslint-enable no-unused-vars, no-empty-function */\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/JingleSession.js","import SDPUtil from './SDPUtil';\n\n// this could be useful in Array.prototype.\n/**\n *\n * @param array1\n * @param array2\n */\nfunction arrayEquals(array1, array2) {\n    // if the other array is a falsy value, return\n    if (!array2) {\n        return false;\n    }\n\n    // compare lengths - can save a lot of time\n    if (array1.length !== array2.length) {\n        return false;\n    }\n\n    for (let i = 0, l = array1.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (array1[i] instanceof Array && array2[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!array1[i].equals(array2[i])) {\n                return false;\n            }\n        } else if (array1[i] !== array2[i]) {\n            // Warning - two different object instances will never be\n            // equal: {x:20} != {x:20}\n            return false;\n        }\n    }\n\n    return true;\n}\n\n/**\n *\n * @param mySDP\n * @param otherSDP\n */\nexport default function SDPDiffer(mySDP, otherSDP) {\n    this.mySDP = mySDP;\n    this.otherSDP = otherSDP;\n    if (!mySDP) {\n        throw new Error('\"mySDP\" is undefined!');\n    } else if (!otherSDP) {\n        throw new Error('\"otherSDP\" is undefined!');\n    }\n}\n\n/**\n * Returns map of MediaChannel that contains media contained in\n * 'mySDP', but not contained in 'otherSdp'. Mapped by channel idx.\n */\nSDPDiffer.prototype.getNewMedia = function() {\n\n    const myMedias = this.mySDP.getMediaSsrcMap();\n    const othersMedias = this.otherSDP.getMediaSsrcMap();\n    const newMedia = {};\n\n    Object.keys(othersMedias).forEach(othersMediaIdx => {\n        const myMedia = myMedias[othersMediaIdx];\n        const othersMedia = othersMedias[othersMediaIdx];\n\n        if (!myMedia && othersMedia) {\n            // Add whole channel\n            newMedia[othersMediaIdx] = othersMedia;\n\n            return;\n        }\n\n        // Look for new ssrcs across the channel\n        Object.keys(othersMedia.ssrcs).forEach(ssrc => {\n            if (Object.keys(myMedia.ssrcs).indexOf(ssrc) === -1) {\n                // Allocate channel if we've found ssrc that doesn't exist in\n                // our channel\n                if (!newMedia[othersMediaIdx]) {\n                    newMedia[othersMediaIdx] = {\n                        mediaindex: othersMedia.mediaindex,\n                        mid: othersMedia.mid,\n                        ssrcs: {},\n                        ssrcGroups: []\n                    };\n                }\n                newMedia[othersMediaIdx].ssrcs[ssrc] = othersMedia.ssrcs[ssrc];\n            }\n        });\n\n        // Look for new ssrc groups across the channels\n        othersMedia.ssrcGroups.forEach(otherSsrcGroup => {\n\n            // try to match the other ssrc-group with an ssrc-group of ours\n            let matched = false;\n\n            for (let i = 0; i < myMedia.ssrcGroups.length; i++) {\n                const mySsrcGroup = myMedia.ssrcGroups[i];\n\n                if (otherSsrcGroup.semantics === mySsrcGroup.semantics\n                    && arrayEquals(otherSsrcGroup.ssrcs, mySsrcGroup.ssrcs)) {\n\n                    matched = true;\n                    break;\n                }\n            }\n\n            if (!matched) {\n                // Allocate channel if we've found an ssrc-group that doesn't\n                // exist in our channel\n\n                if (!newMedia[othersMediaIdx]) {\n                    newMedia[othersMediaIdx] = {\n                        mediaindex: othersMedia.mediaindex,\n                        mid: othersMedia.mid,\n                        ssrcs: {},\n                        ssrcGroups: []\n                    };\n                }\n                newMedia[othersMediaIdx].ssrcGroups.push(otherSsrcGroup);\n            }\n        });\n    });\n\n    return newMedia;\n};\n\n/**\n * TODO: document!\n */\nSDPDiffer.prototype.toJingle = function(modify) {\n    const sdpMediaSsrcs = this.getNewMedia();\n\n    let modified = false;\n\n    Object.keys(sdpMediaSsrcs).forEach(mediaindex => {\n        modified = true;\n        const media = sdpMediaSsrcs[mediaindex];\n\n        modify.c('content', { name: media.mid });\n\n        modify.c('description',\n            { xmlns: 'urn:xmpp:jingle:apps:rtp:1',\n                media: media.mid });\n\n        // FIXME: not completely sure this operates on blocks and / or handles\n        // different ssrcs correctly\n        // generate sources from lines\n        Object.keys(media.ssrcs).forEach(ssrcNum => {\n            const mediaSsrc = media.ssrcs[ssrcNum];\n\n            modify.c('source', { xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0' });\n            modify.attrs({ ssrc: mediaSsrc.ssrc });\n\n            // iterate over ssrc lines\n            mediaSsrc.lines.forEach(line => {\n                const idx = line.indexOf(' ');\n                const kv = line.substr(idx + 1);\n\n                modify.c('parameter');\n                if (kv.indexOf(':') === -1) {\n                    modify.attrs({ name: kv });\n                } else {\n                    const nv = kv.split(':', 2);\n                    const name = nv[0];\n                    const value = SDPUtil.filterSpecialChars(nv[1]);\n\n                    modify.attrs({ name });\n                    modify.attrs({ value });\n                }\n                modify.up(); // end of parameter\n            });\n            modify.up(); // end of source\n        });\n\n        // generate source groups from lines\n        media.ssrcGroups.forEach(ssrcGroup => {\n            if (ssrcGroup.ssrcs.length) {\n\n                modify.c('ssrc-group', {\n                    semantics: ssrcGroup.semantics,\n                    xmlns: 'urn:xmpp:jingle:apps:rtp:ssma:0'\n                });\n\n                ssrcGroup.ssrcs.forEach(ssrc => {\n                    modify.c('source', { ssrc })\n                        .up(); // end of source\n                });\n                modify.up(); // end of ssrc-group\n            }\n        });\n\n        modify.up(); // end of description\n        modify.up(); // end of content\n    });\n\n    return modified;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/SDPDiffer.js","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\nimport SignalingLayer from '../../service/RTC/SignalingLayer';\n\nconst logger = getLogger(__filename);\n\n/**\n * Default XMPP implementation of the {@link SignalingLayer} interface. Obtains\n * the data from the MUC presence.\n */\nexport default class SignalingLayerImpl extends SignalingLayer {\n    /**\n     * Creates new instance.\n     */\n    constructor() {\n        super();\n\n        /**\n         * A map that stores SSRCs of remote streams. And is used only locally\n         * We store the mapping when jingle is received, and later is used\n         * onaddstream webrtc event where we have only the ssrc\n         * FIXME: This map got filled and never cleaned and can grow during long\n         * conference\n         * @type {Map<number, string>} maps SSRC number to jid\n         */\n        this.ssrcOwners = new Map();\n\n        /**\n         *\n         * @type {ChatRoom|null}\n         */\n        this.chatRoom = null;\n    }\n\n    /**\n     * Sets the <tt>ChatRoom</tt> instance used and binds presence listeners.\n     * @param {ChatRoom} room\n     */\n    setChatRoom(room) {\n        const oldChatRoom = this.chatRoom;\n\n        this.chatRoom = room;\n        if (oldChatRoom) {\n            oldChatRoom.removePresenceListener(\n                'audiomuted', this._audioMuteHandler);\n            oldChatRoom.removePresenceListener(\n                'videomuted', this._videoMuteHandler);\n            oldChatRoom.removePresenceListener(\n                'videoType', this._videoTypeHandler);\n        }\n        if (room) {\n            // SignalingEvents\n            this._audioMuteHandler = (node, from) => {\n                this.eventEmitter.emit(\n                    SignalingEvents.PEER_MUTED_CHANGED,\n                    from, MediaType.AUDIO, node.value === 'true');\n            };\n            room.addPresenceListener('audiomuted', this._audioMuteHandler);\n\n            this._videoMuteHandler = (node, from) => {\n                this.eventEmitter.emit(\n                    SignalingEvents.PEER_MUTED_CHANGED,\n                    from, MediaType.VIDEO, node.value === 'true');\n            };\n            room.addPresenceListener('videomuted', this._videoMuteHandler);\n\n            this._videoTypeHandler = (node, from) => {\n                this.eventEmitter.emit(\n                    SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\n                    from, node.value);\n            };\n            room.addPresenceListener('videoType', this._videoTypeHandler);\n        }\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getPeerMediaInfo(owner, mediaType) {\n        if (this.chatRoom) {\n            return this.chatRoom.getMediaPresenceInfo(owner, mediaType);\n        }\n        logger.error('Requested peer media info, before room was set');\n    }\n\n    /**\n     * @inheritDoc\n     */\n    getSSRCOwner(ssrc) {\n        return this.ssrcOwners.get(ssrc);\n    }\n\n    /**\n     * Set an SSRC owner.\n     * @param {number} ssrc an SSRC to be owned\n     * @param {string} endpointId owner's ID (MUC nickname)\n     * @throws TypeError if <tt>ssrc</tt> is not a number\n     */\n    setSSRCOwner(ssrc, endpointId) {\n        if (typeof ssrc !== 'number') {\n            throw new TypeError(`SSRC(${ssrc}) must be a number`);\n        }\n        this.ssrcOwners.set(ssrc, endpointId);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/SignalingLayerImpl.js","\nimport Listenable from '../../modules/util/Listenable';\n\n/**\n * An object that carries the info about specific media type advertised by\n * participant in the signaling channel.\n * @typedef {Object} PeerMediaInfo\n * @property {boolean} muted indicates if the media is currently muted\n * @property {VideoType|undefined} videoType the type of the video if applicable\n */\n\n/**\n * Interface used to expose the information carried over the signaling channel\n * which is not available to the RTC module in the media SDP.\n *\n * @interface SignalingLayer\n */\nexport default class SignalingLayer extends Listenable {\n\n    /**\n     * Obtains the endpoint ID for given SSRC.\n     * @param {number} ssrc the SSRC number.\n     * @return {string|null} the endpoint ID for given media SSRC.\n     */\n    getSSRCOwner(ssrc) { // eslint-disable-line no-unused-vars\n        throw new Error('not implemented');\n    }\n\n    /**\n     * Obtains the info about given media advertised in the MUC presence of\n     * the participant identified by the given MUC JID.\n     * @param {string} owner the MUC jid of the participant for whom\n     * {@link PeerMediaInfo} will be obtained.\n     * @param {MediaType} mediaType the type of the media for which presence\n     * info will be obtained.\n     * @return {PeerMediaInfo|null} presenceInfo an object with media presence\n     * info or <tt>null</tt> either if there is no presence available for given\n     * JID or if the media type given is invalid.\n     */\n    getPeerMediaInfo(owner, mediaType) { // eslint-disable-line no-unused-vars\n        throw new Error('not implemented');\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./service/RTC/SignalingLayer.js","/* global __filename */\n/**\n * Strophe logger implementation. Logs from level WARN and above.\n */\nimport { getLogger } from 'jitsi-meet-logger';\nimport { Strophe } from 'strophe.js';\n\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = getLogger(__filename);\n\n/**\n * This is the last HTTP error status captured from Strophe debug logs.\n * The purpose of storing it is to distinguish between the network and\n * infrastructure reason for connection being dropped (see connectionHandler in\n * xmpp.js). The value will be cleared (-1) if the subsequent request succeeds\n * which means that the failure could be transient.\n *\n * FIXME in the latest Strophe (not released on npm) there is API to handle\n * particular HTTP errors, but there is no way to learn if the subsequent\n * request succeeded in order to tell if the error was one time incident or if\n * it was the reason for dropping the connection by Strophe (the connection is\n * dropped after 5 subsequent failures). Ideally Strophe should provide more\n * details about the reason on why the connection stopped.\n *\n * @type {number}\n */\nlet lastErrorStatus = -1;\n\n/**\n * A regular expression used to catch Strophe's log message indicating that the\n * last BOSH request was successful. When there is such message seen the\n * {@link lastErrorStatus} will be set back to '-1'.\n * @type {RegExp}\n */\nconst resetLastErrorStatusRegExpr = /request id \\d+.\\d+ got 200/;\n\n/**\n * A regular expression used to capture the current value of the BOSH request\n * error status (HTTP error code or '0' or something else).\n * @type {RegExp}\n */\nconst lastErrorStatusRegExpr\n    = /request errored, status: (\\d+), number of errors: \\d+/;\n\n/**\n *\n */\nexport default function() {\n\n    Strophe.log = function(level, msg) {\n        // Our global handler reports uncaught errors to the stats which may\n        // interpret those as partial call failure.\n        // Strophe log entry about secondary request timeout does not mean that\n        // it's a final failure(the request will be restarted), so we lower it's\n        // level here to a warning.\n        logger.trace('Strophe', level, msg);\n        if (typeof msg === 'string'\n                && msg.indexOf('Request ') !== -1\n                && msg.indexOf('timed out (secondary), restarting') !== -1) {\n            // eslint-disable-next-line no-param-reassign\n            level = Strophe.LogLevel.WARN;\n        }\n\n        /* eslint-disable no-case-declarations */\n        switch (level) {\n        case Strophe.LogLevel.DEBUG:\n            // The log message which reports successful status is logged on\n            // Strophe's DEBUG level.\n            if (lastErrorStatus !== -1\n                    && resetLastErrorStatusRegExpr.test(msg)) {\n                logger.debug('Reset lastErrorStatus');\n                lastErrorStatus = -1;\n            }\n            break;\n        case Strophe.LogLevel.WARN:\n            logger.warn(`Strophe: ${msg}`);\n            const errStatusCapture = lastErrorStatusRegExpr.exec(msg);\n\n            if (errStatusCapture && errStatusCapture.length === 2) {\n                lastErrorStatus = parseInt(errStatusCapture[1], 10);\n                logger.debug(`lastErrorStatus set to: ${lastErrorStatus}`);\n            }\n            break;\n        case Strophe.LogLevel.ERROR:\n        case Strophe.LogLevel.FATAL:\n            // eslint-disable-next-line no-param-reassign\n            msg = `Strophe: ${msg}`;\n            GlobalOnErrorHandler.callErrorHandler(new Error(msg));\n            logger.error(msg);\n            break;\n        }\n\n        /* eslint-enable no-case-declarations */\n    };\n\n    /**\n     * Returns error status (HTTP error code) of the last BOSH request.\n     *\n     * @return {number} HTTP error code, '0' for unknown or \"god knows what\"\n     * (this is a hack).\n     */\n    Strophe.getLastErrorStatus = function() {\n        return lastErrorStatus;\n    };\n\n    Strophe.getStatusString = function(status) {\n        switch (status) {\n        case Strophe.Status.ERROR:\n            return 'ERROR';\n        case Strophe.Status.CONNECTING:\n            return 'CONNECTING';\n        case Strophe.Status.CONNFAIL:\n            return 'CONNFAIL';\n        case Strophe.Status.AUTHENTICATING:\n            return 'AUTHENTICATING';\n        case Strophe.Status.AUTHFAIL:\n            return 'AUTHFAIL';\n        case Strophe.Status.CONNECTED:\n            return 'CONNECTED';\n        case Strophe.Status.DISCONNECTED:\n            return 'DISCONNECTED';\n        case Strophe.Status.DISCONNECTING:\n            return 'DISCONNECTING';\n        case Strophe.Status.ATTACHED:\n            return 'ATTACHED';\n        default:\n            return 'unknown';\n        }\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/strophe.util.js","import { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\n\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nimport ConnectionPlugin from './ConnectionPlugin';\n\n\nconst logger = getLogger(__filename);\n\n/**\n * Ping every 10 sec\n */\nconst PING_INTERVAL = 10000;\n\n/**\n * Ping timeout error after 15 sec of waiting.\n */\nconst PING_TIMEOUT = 15000;\n\n/**\n * Will close the connection after 3 consecutive ping errors.\n */\nconst PING_THRESHOLD = 3;\n\n/**\n * XEP-0199 ping plugin.\n *\n * Registers \"urn:xmpp:ping\" namespace under Strophe.NS.PING.\n */\nclass PingConnectionPlugin extends ConnectionPlugin {\n    /**\n     * Contructs new object\n     * @param {XMPP} xmpp the xmpp module.\n     * @constructor\n     */\n    constructor(xmpp) {\n        super();\n        this.failedPings = 0;\n        this.xmpp = xmpp;\n    }\n\n    /**\n     * Initializes the plugin. Method called by Strophe.\n     * @param connection Strophe connection instance.\n     */\n    init(connection) {\n        super.init(connection);\n        Strophe.addNamespace('PING', 'urn:xmpp:ping');\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     * Sends \"ping\" to given <tt>jid</tt>\n     * @param jid the JID to which ping request will be sent.\n     * @param success callback called on success.\n     * @param error callback called on error.\n     * @param timeout ms how long are we going to wait for the response. On\n     * timeout <tt>error<//t> callback is called with undefined error argument.\n     */\n    ping(jid, success, error, timeout) {\n        const iq = $iq({\n            type: 'get',\n            to: jid\n        });\n\n        iq.c('ping', { xmlns: Strophe.NS.PING });\n        this.connection.sendIQ(iq, success, error, timeout);\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * Checks if given <tt>jid</tt> has XEP-0199 ping support.\n     * @param jid the JID to be checked for ping support.\n     * @param callback function with boolean argument which will be\n     * <tt>true</tt> if XEP-0199 ping is supported by given <tt>jid</tt>\n     */\n    hasPingSupport(jid, callback) {\n        this.xmpp.caps.getFeatures(jid).then(features =>\n            callback(features.has('urn:xmpp:ping')), error => {\n            const errmsg = 'Ping feature discovery error';\n\n            GlobalOnErrorHandler.callErrorHandler(\n                new Error(`${errmsg}: ${error}`));\n            logger.error(errmsg, error);\n            callback(false);\n        });\n    }\n\n    /**\n     * Starts to send ping in given interval to specified remote JID.\n     * This plugin supports only one such task and <tt>stopInterval</tt>\n     * must be called before starting a new one.\n     * @param remoteJid remote JID to which ping requests will be sent to.\n     * @param interval task interval in ms.\n     */\n    startInterval(remoteJid, interval = PING_INTERVAL) {\n        if (this.intervalId) {\n            const errmsg = 'Ping task scheduled already';\n\n            GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n            logger.error(errmsg);\n\n            return;\n        }\n        this.intervalId = window.setInterval(() => {\n            this.ping(remoteJid, () => {\n                this.failedPings = 0;\n            }, error => {\n                this.failedPings += 1;\n                const errmsg = `Ping ${error ? 'error' : 'timeout'}`;\n\n                if (this.failedPings >= PING_THRESHOLD) {\n                    GlobalOnErrorHandler.callErrorHandler(new Error(errmsg));\n                    logger.error(errmsg, error);\n\n                    // FIXME it doesn't help to disconnect when 3rd PING\n                    // times out, it only stops Strophe from retrying.\n                    // Not really sure what's the right thing to do in that\n                    // situation, but just closing the connection makes no\n                    // sense.\n                    // self.connection.disconnect();\n                } else {\n                    logger.warn(errmsg, error);\n                }\n            }, PING_TIMEOUT);\n        }, interval);\n        logger.info(`XMPP pings will be sent every ${interval} ms`);\n    }\n\n    /**\n     * Stops current \"ping\"  interval task.\n     */\n    stopInterval() {\n        if (this.intervalId) {\n            window.clearInterval(this.intervalId);\n            this.intervalId = null;\n            this.failedPings = 0;\n            logger.info('Ping interval cleared');\n        }\n    }\n}\n\n/**\n *\n * @param xmpp\n */\nexport default function(xmpp) {\n    Strophe.addConnectionPlugin('ping', new PingConnectionPlugin(xmpp));\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/strophe.ping.js","/* global $ */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { $iq, Strophe } from 'strophe.js';\n\nimport ConnectionPlugin from './ConnectionPlugin';\n\nconst logger = getLogger(__filename);\n\nconst RAYO_XMLNS = 'urn:xmpp:rayo:1';\n\n/**\n *\n */\nclass RayoConnectionPlugin extends ConnectionPlugin {\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n\n        this.connection.addHandler(\n            this.onRayo.bind(this), RAYO_XMLNS, 'iq', 'set', null, null);\n    }\n\n    /**\n     *\n     * @param iq\n     */\n    onRayo(iq) {\n        logger.info('Rayo IQ', iq);\n    }\n\n    /* eslint-disable max-params */\n\n    /**\n     *\n     * @param to\n     * @param from\n     * @param roomName\n     * @param roomPass\n     * @param focusMucJid\n     */\n    dial(to, from, roomName, roomPass, focusMucJid) {\n        return new Promise((resolve, reject) => {\n            if (!focusMucJid) {\n                reject(new Error('Internal error!'));\n\n                return;\n            }\n            const req = $iq({\n                type: 'set',\n                to: focusMucJid\n            });\n\n            req.c('dial', {\n                xmlns: RAYO_XMLNS,\n                to,\n                from\n            });\n            req.c('header', {\n                name: 'JvbRoomName',\n                value: roomName\n            }).up();\n\n            if (roomPass && roomPass.length) {\n                req.c('header', {\n                    name: 'JvbRoomPassword',\n                    value: roomPass\n                }).up();\n            }\n\n            this.connection.sendIQ(\n                req,\n                result => {\n                    logger.info('Dial result ', result);\n\n                    // eslint-disable-next-line newline-per-chained-call\n                    const resource = $(result).find('ref').attr('uri');\n\n                    this.callResource = resource.substr('xmpp:'.length);\n                    logger.info(`Received call resource: ${this.callResource}`);\n                    resolve();\n                },\n                error => {\n                    logger.info('Dial error ', error);\n                    reject(error);\n                });\n        });\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     *\n     */\n    hangup() {\n        return new Promise((resolve, reject) => {\n            if (!this.callResource) {\n                reject(new Error('No call in progress'));\n                logger.warn('No call in progress');\n\n                return;\n            }\n\n            const req = $iq({\n                type: 'set',\n                to: this.callResource\n            });\n\n            req.c('hangup', {\n                xmlns: RAYO_XMLNS\n            });\n\n            this.connection.sendIQ(req, result => {\n                logger.info('Hangup result ', result);\n                this.callResource = null;\n                resolve();\n            }, error => {\n                logger.info('Hangup error ', error);\n                this.callResource = null;\n                reject(new Error('Hangup error '));\n            });\n        });\n    }\n}\n\n/**\n *\n */\nexport default function() {\n    Strophe.addConnectionPlugin('rayo', new RayoConnectionPlugin());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/strophe.rayo.js","import { Strophe } from 'strophe.js';\n\nimport ConnectionPlugin from './ConnectionPlugin';\n\n/**\n *  Logs raw stanzas and makes them available for download as JSON\n */\nclass StropheLogger extends ConnectionPlugin {\n    /**\n     *\n     */\n    constructor() {\n        super();\n        this.log = [];\n    }\n\n    /**\n     *\n     * @param connection\n     */\n    init(connection) {\n        super.init(connection);\n        this.connection.rawInput = this.logIncoming.bind(this);\n        this.connection.rawOutput = this.logOutgoing.bind(this);\n    }\n\n    /**\n     *\n     * @param stanza\n     */\n    logIncoming(stanza) {\n        this.log.push([ new Date().getTime(), 'incoming', stanza ]);\n    }\n\n    /**\n     *\n     * @param stanza\n     */\n    logOutgoing(stanza) {\n        this.log.push([ new Date().getTime(), 'outgoing', stanza ]);\n    }\n}\n\n/**\n *\n */\nexport default function() {\n    Strophe.addConnectionPlugin('logger', new StropheLogger());\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/strophe.logger.js","/* global $ */\n\nimport { b64_sha1, Strophe } from 'strophe.js'; // eslint-disable-line camelcase\n\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\nimport Listenable from '../util/Listenable';\n\n/**\n * The property\n */\nconst IDENTITY_PROPERTIES = [ 'category', 'type', 'lang', 'name' ];\nconst IDENTITY_PROPERTIES_FOR_COMPARE = [ 'category', 'type', 'lang' ];\nconst HASH = 'sha-1';\n\n/**\n *\n * @param a\n * @param b\n */\nfunction compareIdentities(a, b) {\n    let res = 0;\n\n    IDENTITY_PROPERTIES_FOR_COMPARE.some(key =>\n        (res = ((a[key] > b[key]) && 1) || ((a[key] < b[key]) && -1)) !== 0\n    );\n\n    return res;\n}\n\n/**\n * Implements xep-0115 ( http://xmpp.org/extensions/xep-0115.html )\n */\nexport default class Caps extends Listenable {\n    /**\n     * Constructs new Caps instance.\n     * @param {Strophe.Connection} connection the strophe connection object\n     * @param {String} node the value of the node attribute of the \"c\" xml node\n     * that will be sent to the other participants\n     */\n    constructor(connection = {}, node = 'http://jitsi.org/jitsimeet') {\n        super();\n        this.node = node;\n        this.disco = connection.disco;\n        if (!this.disco) {\n            throw new Error(\n                'Missing strophe-plugins '\n                + '(disco plugin is required)!');\n        }\n\n        this.versionToCapabilities = Object.create(null);\n        this.jidToVersion = Object.create(null);\n        this.version = '';\n        this.rooms = new Set();\n\n        const emuc = connection.emuc;\n\n        emuc.addListener(XMPPEvents.EMUC_ROOM_ADDED,\n            room => this._addChatRoom(room));\n        emuc.addListener(XMPPEvents.EMUC_ROOM_REMOVED,\n            room => this._removeChatRoom(room));\n        Object.keys(emuc.rooms).forEach(jid => {\n            this._addChatRoom(emuc.rooms[jid]);\n        });\n\n        Strophe.addNamespace('CAPS', 'http://jabber.org/protocol/caps');\n        this.disco.addFeature(Strophe.NS.CAPS);\n        connection.addHandler(this._handleCaps.bind(this), Strophe.NS.CAPS);\n\n        this._onMucMemberLeft = this._removeJidToVersionEntry.bind(this);\n    }\n\n    /**\n     * Adds new feature to the list of supported features for the local\n     * participant\n     * @param {String} feature the name of the feature.\n     * @param {boolean} submit if true - new presence with updated \"c\" node\n     * will be sent.\n     */\n    addFeature(feature, submit = false) {\n        this.disco.addFeature(feature);\n        this._generateVersion();\n        if (submit) {\n            this.submit();\n        }\n    }\n\n    /**\n     * Removes a feature from the list of supported features for the local\n     * participant\n     * @param {String} feature the name of the feature.\n     * @param {boolean} submit if true - new presence with updated \"c\" node\n     * will be sent.\n     */\n    removeFeature(feature, submit = false) {\n        this.disco.removeFeature(feature);\n        this._generateVersion();\n        if (submit) {\n            this.submit();\n        }\n    }\n\n    /**\n     * Sends new presence stanza for every room from the list of rooms.\n     */\n    submit() {\n        this.rooms.forEach(room => room.sendPresence());\n    }\n\n    /**\n     * Returns a set with the features for a participant.\n     * @param {String} jid the jid of the participant\n     * @param {int} timeout the timeout in ms for reply from the participant.\n     * @returns {Promise<Set<String>, Error>}\n     */\n    getFeatures(jid, timeout = 5000) {\n        const user\n            = jid in this.jidToVersion ? this.jidToVersion[jid] : null;\n\n        if (!user || !(user.version in this.versionToCapabilities)) {\n            const node = user ? `${user.node}#${user.version}` : null;\n\n\n            return new Promise((resolve, reject) =>\n                this.disco.info(jid, node, response => {\n                    const features = new Set();\n\n                    $(response)\n                        .find('>query>feature')\n                        .each(\n                            (idx, el) => features.add(el.getAttribute('var')));\n                    if (user) {\n                        // TODO: Maybe use the version + node + hash as keys?\n                        this.versionToCapabilities[user.version] = features;\n                    }\n                    resolve(features);\n                }, reject, timeout)\n            );\n        }\n\n        return Promise.resolve(this.versionToCapabilities[user.version]);\n    }\n\n    /**\n     * Adds ChatRoom instance to the list of rooms. Adds listeners to the room\n     * and adds \"c\" element to the presences of the room.\n     * @param {ChatRoom} room the room.\n     */\n    _addChatRoom(room) {\n        this.rooms.add(room);\n        room.addListener(XMPPEvents.MUC_MEMBER_LEFT, this._onMucMemberLeft);\n        this._fixChatRoomPresenceMap(room);\n    }\n\n    /**\n     * Removes ChatRoom instance from the list of rooms. Removes listeners\n     * added from the Caps class.\n     * @param {ChatRoom} room the room.\n     */\n    _removeChatRoom(room) {\n        this.rooms.delete(room);\n        room.removeListener(XMPPEvents.MUC_MEMBER_LEFT, this._onMucMemberLeft);\n    }\n\n    /**\n     * Creates/updates the \"c\" xml node into the presence of the passed room.\n     * @param {ChatRoom} room the room.\n     */\n    _fixChatRoomPresenceMap(room) {\n        room.addToPresence('c', {\n            attributes: {\n                xmlns: Strophe.NS.CAPS,\n                hash: HASH,\n                node: this.node,\n                ver: this.version\n            }\n        });\n    }\n\n    /**\n     * Handles this.version changes.\n     */\n    _notifyVersionChanged() {\n        // update the version for all rooms\n        this.rooms.forEach(room => this._fixChatRoomPresenceMap(room));\n        this.submit();\n    }\n\n    /**\n     * Generates the value for the \"ver\" attribute.\n     */\n    _generateVersion() {\n        const identities\n          = this.disco._identities.sort(compareIdentities).reduce(\n              (accumulatedValue, identity) =>\n                  `${\n                      IDENTITY_PROPERTIES.reduce(\n                          (tmp, key, idx) =>\n                              tmp\n                                  + (idx === 0 ? '' : '/')\n                                  + identity[key],\n                          '')\n                  }<`,\n              '');\n        const features\n            = this.disco._features.sort().reduce(\n                (tmp, feature) => `${tmp + feature}<`, '');\n\n        this.version = b64_sha1(identities + features);\n        this._notifyVersionChanged();\n    }\n\n    /**\n     * Parses the \"c\" xml node from presence.\n     * @param {DOMElement} stanza the presence packet\n     */\n    _handleCaps(stanza) {\n        const from = stanza.getAttribute('from');\n        const caps = stanza.querySelector('c');\n        const version = caps.getAttribute('ver');\n        const node = caps.getAttribute('node');\n        const oldVersion = this.jidToVersion[from];\n\n        this.jidToVersion[from] = { version,\n            node };\n        if (oldVersion && oldVersion.version !== version) {\n            this.eventEmitter.emit(XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\n                from);\n        }\n\n        // return true to not remove the handler from Strophe\n        return true;\n    }\n\n    /**\n     * Removes entry from this.jidToVersion map.\n     * @param {String} jid the jid to be removed.\n     */\n    _removeJidToVersionEntry(jid) {\n        if (jid in this.jidToVersion) {\n            delete this.jidToVersion[jid];\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/Caps.js","/* global __filename */\nimport { Strophe } from 'strophe.js';\n\nimport {\n    _CONNECTION_TIMES_,\n    BRIDGE_DOWN,\n    CONFERENCE_ERROR_,\n    CONNECTION_INTERRUPTED,\n    CONNECTION_RESTORED,\n    DATA_CHANNEL_OPEN,\n    FOCUS_LEFT,\n    REMOTELY_MUTED\n} from './service/statistics/AnalyticsEvents';\nimport AuthenticationEvents\n    from './service/authentication/AuthenticationEvents';\nimport EventEmitterForwarder from './modules/util/EventEmitterForwarder';\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as JitsiConferenceErrors from './JitsiConferenceErrors';\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport * as MediaType from './service/RTC/MediaType';\nimport RTCEvents from './service/RTC/RTCEvents';\nimport VideoType from './service/RTC/VideoType';\nimport Statistics from './modules/statistics/statistics';\nimport XMPPEvents from './service/xmpp/XMPPEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * Setups all event listeners related to conference\n * @param conference {JitsiConference} the conference\n */\nexport default function JitsiConferenceEventManager(conference) {\n    this.conference = conference;\n\n    // Listeners related to the conference only\n    conference.on(JitsiConferenceEvents.TRACK_MUTE_CHANGED,\n        track => {\n            if (!track.isLocal() || !conference.statistics) {\n                return;\n            }\n            const session\n                = track.isP2P\n                    ? conference.p2pJingleSession : conference.jvbJingleSession;\n\n            // TPC will be null, before the conference starts, but the event\n            // still should be queued\n            const tpc = (session && session.peerconnection) || null;\n\n            conference.statistics.sendMuteEvent(\n                tpc,\n                track.isMuted(),\n                track.getType());\n        });\n    conference.on(\n        JitsiConferenceEvents.CONNECTION_INTERRUPTED,\n        Statistics.sendEventToAll.bind(\n            Statistics, CONNECTION_INTERRUPTED));\n    conference.on(\n        JitsiConferenceEvents.CONNECTION_RESTORED,\n        Statistics.sendEventToAll.bind(\n            Statistics, CONNECTION_RESTORED));\n}\n\n/**\n * Setups event listeners related to conference.chatRoom\n */\nJitsiConferenceEventManager.prototype.setupChatRoomListeners = function() {\n    const conference = this.conference;\n    const chatRoom = conference.room;\n\n    this.chatRoomForwarder = new EventEmitterForwarder(chatRoom,\n        this.conference.eventEmitter);\n\n    chatRoom.addListener(XMPPEvents.ICE_RESTARTING, jingleSession => {\n        if (!jingleSession.isP2P) {\n            // If using DataChannel as bridge channel, it must be closed\n            // before ICE restart, otherwise Chrome will not trigger \"opened\"\n            // event for the channel established with the new bridge.\n            // TODO: This may be bypassed when using a WebSocket as bridge\n            // channel.\n            conference.rtc.closeBridgeChannel();\n        }\n\n        // else: there are no DataChannels in P2P session (at least for now)\n    });\n\n    chatRoom.addListener(XMPPEvents.AUDIO_MUTED_BY_FOCUS,\n        value => {\n            Statistics.analytics.sendEvent(REMOTELY_MUTED);\n\n            // set isMutedByFocus when setAudioMute Promise ends\n            conference.rtc.setAudioMute(value).then(\n                () => {\n                    conference.isMutedByFocus = true;\n                },\n                () =>\n                    logger.warn(\n                        'Error while audio muting due to focus request'));\n        }\n    );\n\n    this.chatRoomForwarder.forward(XMPPEvents.SUBJECT_CHANGED,\n        JitsiConferenceEvents.SUBJECT_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_JOINED,\n        JitsiConferenceEvents.CONFERENCE_JOINED);\n\n    // send some analytics events\n    chatRoom.addListener(XMPPEvents.MUC_JOINED,\n        () => {\n            this.conference.isJvbConnectionInterrupted = false;\n\n            Object.keys(chatRoom.connectionTimes).forEach(key => {\n                const value = chatRoom.connectionTimes[key];\n                const eventName = `conference.${_CONNECTION_TIMES_}${key}`;\n\n                Statistics.analytics.sendEvent(eventName, { value });\n            });\n            Object.keys(chatRoom.xmpp.connectionTimes).forEach(key => {\n                const value = chatRoom.xmpp.connectionTimes[key];\n                const eventName = `xmpp.${_CONNECTION_TIMES_}${key}`;\n\n                Statistics.analytics.sendEvent(eventName, { value });\n            });\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_JOIN_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONNECTION_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONNECTION_ERROR);\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_CONNECT_NOT_ALLOWED_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.NOT_ALLOWED_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.ROOM_MAX_USERS_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONFERENCE_MAX_USERS);\n\n    this.chatRoomForwarder.forward(XMPPEvents.PASSWORD_REQUIRED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.PASSWORD_REQUIRED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.AUTHENTICATION_REQUIRED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.AUTHENTICATION_REQUIRED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.BRIDGE_DOWN,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.VIDEOBRIDGE_NOT_AVAILABLE);\n    chatRoom.addListener(\n        XMPPEvents.BRIDGE_DOWN,\n        () => Statistics.analytics.sendEvent(BRIDGE_DOWN));\n\n    this.chatRoomForwarder.forward(XMPPEvents.RESERVATION_ERROR,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.RESERVATION_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.GRACEFUL_SHUTDOWN,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.GRACEFUL_SHUTDOWN);\n\n    chatRoom.addListener(XMPPEvents.JINGLE_FATAL_ERROR,\n        (session, error) => {\n            if (!session.isP2P) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.JINGLE_FATAL_ERROR, error);\n            }\n        });\n\n    chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\n        jingleSession => {\n            conference._onIceConnectionFailed(jingleSession);\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_DESTROYED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.CONFERENCE_DESTROYED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.CHAT_ERROR_RECEIVED,\n        JitsiConferenceEvents.CONFERENCE_ERROR,\n        JitsiConferenceErrors.CHAT_ERROR);\n\n    this.chatRoomForwarder.forward(XMPPEvents.FOCUS_DISCONNECTED,\n        JitsiConferenceEvents.CONFERENCE_FAILED,\n        JitsiConferenceErrors.FOCUS_DISCONNECTED);\n\n    chatRoom.addListener(XMPPEvents.FOCUS_LEFT,\n        () => {\n            Statistics.analytics.sendEvent(FOCUS_LEFT);\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.CONFERENCE_FAILED,\n                JitsiConferenceErrors.FOCUS_LEFT);\n        });\n\n    const eventLogHandler\n        = reason => Statistics.sendEventToAll(`${CONFERENCE_ERROR_}.${reason}`);\n\n    chatRoom.addListener(XMPPEvents.SESSION_ACCEPT_TIMEOUT,\n        jingleSession => {\n            eventLogHandler(\n                jingleSession.isP2P\n                    ? 'p2pSessionAcceptTimeout' : 'sessionAcceptTimeout');\n        });\n\n    this.chatRoomForwarder.forward(XMPPEvents.RECORDER_STATE_CHANGED,\n        JitsiConferenceEvents.RECORDER_STATE_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.TRANSCRIPTION_STATUS_CHANGED,\n        JitsiConferenceEvents.TRANSCRIPTION_STATUS_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED,\n        JitsiConferenceEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED);\n\n    this.chatRoomForwarder.forward(\n        XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\n        JitsiConferenceEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED);\n\n    this.chatRoomForwarder.forward(XMPPEvents.PHONE_NUMBER_CHANGED,\n        JitsiConferenceEvents.PHONE_NUMBER_CHANGED);\n\n    chatRoom.addListener(\n        XMPPEvents.CONFERENCE_SETUP_FAILED,\n        (jingleSession, error) => {\n            if (!jingleSession.isP2P) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.CONFERENCE_FAILED,\n                    JitsiConferenceErrors.SETUP_FAILED,\n                    error);\n            }\n        });\n\n    chatRoom.setParticipantPropertyListener((node, from) => {\n        const participant = conference.getParticipantById(from);\n\n        if (!participant) {\n            return;\n        }\n\n        participant.setProperty(\n            node.tagName.substring('jitsi_participant_'.length),\n            node.value);\n    });\n\n    this.chatRoomForwarder.forward(XMPPEvents.KICKED,\n        JitsiConferenceEvents.KICKED);\n    chatRoom.addListener(XMPPEvents.KICKED,\n        () => {\n            conference.room = null;\n            conference.leave();\n        });\n    chatRoom.addListener(XMPPEvents.SUSPEND_DETECTED,\n        conference.onSuspendDetected.bind(conference));\n\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LOCK_CHANGED,\n        JitsiConferenceEvents.LOCK_STATE_CHANGED);\n\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_JOINED,\n        conference.onMemberJoined.bind(conference));\n    chatRoom.addListener(XMPPEvents.MUC_MEMBER_LEFT,\n        conference.onMemberLeft.bind(conference));\n    this.chatRoomForwarder.forward(XMPPEvents.MUC_LEFT,\n        JitsiConferenceEvents.CONFERENCE_LEFT);\n\n    chatRoom.addListener(XMPPEvents.DISPLAY_NAME_CHANGED,\n        conference.onDisplayNameChanged.bind(conference));\n\n    chatRoom.addListener(XMPPEvents.LOCAL_ROLE_CHANGED, role => {\n        conference.onLocalRoleChanged(role);\n\n        // log all events for the recorder operated by the moderator\n        if (conference.statistics && conference.isModerator()) {\n            conference.on(JitsiConferenceEvents.RECORDER_STATE_CHANGED,\n                (status, error) => {\n                    const logObject = {\n                        id: 'recorder_status',\n                        status\n                    };\n\n                    if (error) {\n                        logObject.error = error;\n                    }\n                    Statistics.sendLog(JSON.stringify(logObject));\n                });\n        }\n    });\n\n    chatRoom.addListener(XMPPEvents.MUC_ROLE_CHANGED,\n        conference.onUserRoleChanged.bind(conference));\n\n    chatRoom.addListener(AuthenticationEvents.IDENTITY_UPDATED,\n        (authEnabled, authIdentity) => {\n            conference.authEnabled = authEnabled;\n            conference.authIdentity = authIdentity;\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.AUTH_STATUS_CHANGED, authEnabled,\n                authIdentity);\n        });\n\n    chatRoom.addListener(\n        XMPPEvents.MESSAGE_RECEIVED,\n\n        // eslint-disable-next-line max-params\n        (jid, displayName, txt, myJid, ts) => {\n            const id = Strophe.getResourceFromJid(jid);\n\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.MESSAGE_RECEIVED,\n                id, txt, ts);\n        });\n\n    chatRoom.addListener(XMPPEvents.PRESENCE_STATUS,\n        (jid, status) => {\n            const id = Strophe.getResourceFromJid(jid);\n            const participant = conference.getParticipantById(id);\n\n            if (!participant || participant._status === status) {\n                return;\n            }\n            participant._status = status;\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.USER_STATUS_CHANGED, id, status);\n        });\n\n    chatRoom.addListener(XMPPEvents.JSON_MESSAGE_RECEIVED,\n        (from, payload) => {\n            const id = Strophe.getResourceFromJid(from);\n            const participant = conference.getParticipantById(id);\n\n            if (participant) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n                    participant, payload);\n            } else {\n                logger.warn(\n                    'Ignored XMPPEvents.JSON_MESSAGE_RECEIVED for not existing '\n                    + `participant: ${from}`,\n                    payload);\n            }\n        });\n\n    chatRoom.addPresenceListener('startmuted', (data, from) => {\n        let isModerator = false;\n\n        if (conference.myUserId() === from && conference.isModerator()) {\n            isModerator = true;\n        } else {\n            const participant = conference.getParticipantById(from);\n\n            if (participant && participant.isModerator()) {\n                isModerator = true;\n            }\n        }\n\n        if (!isModerator) {\n            return;\n        }\n\n        const startAudioMuted = data.attributes.audio === 'true';\n        const startVideoMuted = data.attributes.video === 'true';\n\n        let updated = false;\n\n        if (startAudioMuted !== conference.startMutedPolicy.audio) {\n            conference.startMutedPolicy.audio = startAudioMuted;\n            updated = true;\n        }\n\n        if (startVideoMuted !== conference.startMutedPolicy.video) {\n            conference.startMutedPolicy.video = startVideoMuted;\n            updated = true;\n        }\n\n        if (updated) {\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.START_MUTED_POLICY_CHANGED,\n                conference.startMutedPolicy\n            );\n        }\n    });\n\n    chatRoom.addPresenceListener('devices', (data, from) => {\n        let isAudioAvailable = false;\n        let isVideoAvailable = false;\n\n        data.children.forEach(config => {\n            if (config.tagName === 'audio') {\n                isAudioAvailable = config.value === 'true';\n            }\n            if (config.tagName === 'video') {\n                isVideoAvailable = config.value === 'true';\n            }\n        });\n\n        let availableDevices;\n\n        if (conference.myUserId() === from) {\n            availableDevices = conference.availableDevices;\n        } else {\n            const participant = conference.getParticipantById(from);\n\n            if (!participant) {\n                return;\n            }\n\n            availableDevices = participant._availableDevices;\n        }\n\n        let updated = false;\n\n        if (availableDevices.audio !== isAudioAvailable) {\n            updated = true;\n            availableDevices.audio = isAudioAvailable;\n        }\n\n        if (availableDevices.video !== isVideoAvailable) {\n            updated = true;\n            availableDevices.video = isVideoAvailable;\n        }\n\n        if (updated) {\n            conference.eventEmitter.emit(\n                JitsiConferenceEvents.AVAILABLE_DEVICES_CHANGED,\n                from, availableDevices);\n        }\n    });\n\n    if (conference.statistics) {\n        // FIXME ICE related events should end up in RTCEvents eventually\n        chatRoom.addListener(XMPPEvents.CONNECTION_ICE_FAILED,\n            session => {\n                conference.statistics.sendIceConnectionFailedEvent(\n                    session.peerconnection);\n            });\n\n        // FIXME XMPPEvents.ADD_ICE_CANDIDATE_FAILED is never emitted\n        chatRoom.addListener(XMPPEvents.ADD_ICE_CANDIDATE_FAILED,\n            (e, pc) => {\n                conference.statistics.sendAddIceCandidateFailed(e, pc);\n            });\n    }\n};\n\n/**\n * Setups event listeners related to conference.rtc\n */\nJitsiConferenceEventManager.prototype.setupRTCListeners = function() {\n    const conference = this.conference;\n    const rtc = conference.rtc;\n\n    rtc.addListener(\n        RTCEvents.REMOTE_TRACK_ADDED,\n        conference.onRemoteTrackAdded.bind(conference));\n\n    rtc.addListener(\n        RTCEvents.REMOTE_TRACK_REMOVED,\n        conference.onRemoteTrackRemoved.bind(conference));\n\n    rtc.addListener(RTCEvents.DOMINANT_SPEAKER_CHANGED,\n        id => {\n            if (conference.lastDominantSpeaker !== id && conference.room) {\n                conference.lastDominantSpeaker = id;\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED, id);\n            }\n            if (conference.statistics && conference.myUserId() === id) {\n                // We are the new dominant speaker.\n                conference.statistics.sendDominantSpeakerEvent();\n            }\n        });\n\n    rtc.addListener(RTCEvents.DATA_CHANNEL_OPEN, () => {\n        const now = window.performance.now();\n\n        logger.log('(TIME) data channel opened ', now);\n        conference.room.connectionTimes['data.channel.opened'] = now;\n        Statistics.analytics.sendEvent(DATA_CHANNEL_OPEN, { value: now });\n\n        conference.eventEmitter.emit(JitsiConferenceEvents.DATA_CHANNEL_OPENED);\n    });\n\n    rtc.addListener(\n        RTCEvents.AVAILABLE_DEVICES_CHANGED,\n        devices => conference.room.updateDeviceAvailability(devices));\n\n    rtc.addListener(RTCEvents.ENDPOINT_MESSAGE_RECEIVED,\n        (from, payload) => {\n            const participant = conference.getParticipantById(from);\n\n            if (participant) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.ENDPOINT_MESSAGE_RECEIVED,\n                    participant, payload);\n            } else {\n                logger.warn(\n                    'Ignored ENDPOINT_MESSAGE_RECEIVED for not existing '\n                        + `participant: ${from}`,\n                    payload);\n            }\n        });\n\n    rtc.addListener(RTCEvents.LOCAL_UFRAG_CHANGED,\n        (tpc, ufrag) => {\n            if (!tpc.isP2P) {\n                Statistics.sendLog(\n                    JSON.stringify({\n                        id: 'local_ufrag',\n                        value: ufrag\n                    }));\n            }\n        });\n    rtc.addListener(RTCEvents.REMOTE_UFRAG_CHANGED,\n        (tpc, ufrag) => {\n            if (!tpc.isP2P) {\n                Statistics.sendLog(\n                    JSON.stringify({\n                        id: 'remote_ufrag',\n                        value: ufrag\n                    }));\n            }\n        });\n\n    rtc.addListener(RTCEvents.CREATE_ANSWER_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendCreateAnswerFailed(e, tpc);\n        });\n\n    rtc.addListener(RTCEvents.CREATE_OFFER_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendCreateOfferFailed(e, tpc);\n        });\n\n    rtc.addListener(RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendSetLocalDescFailed(e, tpc);\n        });\n\n    rtc.addListener(RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\n        (e, tpc) => {\n            conference.statistics.sendSetRemoteDescFailed(e, tpc);\n        });\n\n    rtc.addListener(RTCEvents.LOCAL_TRACK_SSRC_UPDATED,\n        (track, ssrc) => {\n            // when starting screen sharing, the track is created and when\n            // we do set local description and we process the ssrc we\n            // will be notified for it and we will report it with the event\n            // for screen sharing\n            if (track.isVideoTrack() && track.videoType === VideoType.DESKTOP) {\n                conference.statistics.sendScreenSharingEvent(true, ssrc);\n            }\n        });\n};\n\n/**\n * Setups event listeners related to conference.xmpp\n */\nJitsiConferenceEventManager.prototype.setupXMPPListeners = function() {\n    const conference = this.conference;\n\n    conference.xmpp.caps.addListener(XMPPEvents.PARTCIPANT_FEATURES_CHANGED,\n        from => {\n            const participant\n                = conference.getParticipantById(\n                    Strophe.getResourceFromJid(from));\n\n            if (participant) {\n                conference.eventEmitter.emit(\n                    JitsiConferenceEvents.PARTCIPANT_FEATURES_CHANGED,\n                    participant);\n            }\n        });\n    conference.xmpp.addListener(\n        XMPPEvents.CALL_INCOMING,\n        conference.onIncomingCall.bind(conference));\n    conference.xmpp.addListener(\n        XMPPEvents.CALL_ACCEPTED,\n        conference.onCallAccepted.bind(conference));\n    conference.xmpp.addListener(\n        XMPPEvents.TRANSPORT_INFO,\n        conference.onTransportInfo.bind(conference));\n    conference.xmpp.addListener(\n        XMPPEvents.CALL_ENDED,\n        conference.onCallEnded.bind(conference));\n\n    conference.xmpp.addListener(XMPPEvents.START_MUTED_FROM_FOCUS,\n        (audioMuted, videoMuted) => {\n            if (conference.options.config.ignoreStartMuted) {\n                return;\n            }\n\n            conference.startAudioMuted = audioMuted;\n            conference.startVideoMuted = videoMuted;\n\n            // mute existing local tracks because this is initial mute from\n            // Jicofo\n            conference.getLocalTracks().forEach(track => {\n                switch (track.getType()) {\n                case MediaType.AUDIO:\n                    conference.startAudioMuted && track.mute();\n                    break;\n                case MediaType.VIDEO:\n                    conference.startVideoMuted && track.mute();\n                    break;\n                }\n            });\n\n            conference.eventEmitter.emit(JitsiConferenceEvents.STARTED_MUTED);\n        });\n};\n\n/**\n * Setups event listeners related to conference.statistics\n */\nJitsiConferenceEventManager.prototype.setupStatisticsListeners = function() {\n    const conference = this.conference;\n\n    if (!conference.statistics) {\n        return;\n    }\n\n    /* eslint-disable max-params */\n    conference.statistics.addAudioLevelListener((tpc, ssrc, level, isLocal) => {\n        conference.rtc.setAudioLevel(tpc, ssrc, level, isLocal);\n    });\n\n    /* eslint-enable max-params */\n\n    // Forward the \"before stats disposed\" event\n    conference.statistics.addBeforeDisposedListener(() => {\n        conference.eventEmitter.emit(\n            JitsiConferenceEvents.BEFORE_STATISTICS_DISPOSED);\n    });\n    conference.statistics.addByteSentStatsListener((tpc, stats) => {\n        conference.getLocalTracks(MediaType.AUDIO).forEach(track => {\n            const ssrc = tpc.getLocalSSRC(track);\n\n            if (!ssrc || !stats.hasOwnProperty(ssrc)) {\n                return;\n            }\n\n            track._onByteSentStatsReceived(tpc, stats[ssrc]);\n        });\n    });\n};\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiConferenceEventManager.js","/**\n * Implements utility to forward events from one eventEmitter to another.\n * @param src {object} instance of EventEmitter or another class that implements\n * addListener method which will register listener to EventEmitter instance.\n * @param dest {object} instance of EventEmitter or another class that\n * implements emit method which will emit an event.\n */\nfunction EventEmitterForwarder(src, dest) {\n    if (!src || !dest || typeof src.addListener !== 'function'\n        || typeof dest.emit !== 'function') {\n        throw new Error('Invalid arguments passed to EventEmitterForwarder');\n    }\n    this.src = src;\n    this.dest = dest;\n}\n\n/**\n * Adds event to be forwarded from src to dest.\n * @param srcEvent {string} the event that EventEmitterForwarder is listening\n * for.\n * @param dstEvent {string} the event that will be fired from dest.\n * @param arguments all other passed arguments are going to be fired with\n * dstEvent.\n */\nEventEmitterForwarder.prototype.forward = function(...args) {\n    const srcEvent = args[0];\n\n    // This will be the \"this\" value for emit function.\n\n    args[0] = this.dest;\n\n    // Using bind.apply to pass the arguments as Array-like object (\"arguments\")\n    this.src.addListener(\n        srcEvent,\n        Function.prototype.bind.apply(this.dest.emit, args));\n};\n\nmodule.exports = EventEmitterForwarder;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/util/EventEmitterForwarder.js","const logger = require('jitsi-meet-logger').getLogger(__filename);\n\n/**\n *\n * @param localAudio\n * @param peerConnection\n */\nfunction JitsiDTMFManager(localAudio, peerConnection) {\n    const audioTrack = localAudio.getTrack();\n\n    if (!audioTrack) {\n        throw new Error('Failed to initialize DTMFSender: no audio track.');\n    }\n    this.dtmfSender\n        = peerConnection.peerconnection.createDTMFSender(audioTrack);\n    logger.debug('Initialized DTMFSender');\n}\n\nJitsiDTMFManager.prototype.sendTones = function(tones, duration, pause) {\n    this.dtmfSender.insertDTMF(tones, duration || 200, pause || 200);\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/DTMF/JitsiDTMFManager.js","\nimport { Strophe } from 'strophe.js';\n\nimport * as JitsiConferenceEvents from './JitsiConferenceEvents';\nimport { ParticipantConnectionStatus }\n    from './modules/connectivity/ParticipantConnectionStatus';\nimport * as MediaType from './service/RTC/MediaType';\n\n/**\n * Represents a participant in (i.e. a member of) a conference.\n */\nexport default class JitsiParticipant {\n\n    /* eslint-disable max-params */\n\n    /**\n     * Initializes a new JitsiParticipant instance.\n     *\n     * @constructor\n     * @param jid the conference XMPP jid\n     * @param conference\n     * @param displayName\n     * @param {Boolean} hidden - True if the new JitsiParticipant instance is to\n     * represent a hidden participant; otherwise, false.\n     * @param {string} statsID - optional participant statsID\n     * @param {string} status - the initial status if any.\n     */\n    constructor(jid, conference, displayName, hidden, statsID, status) {\n        this._jid = jid;\n        this._id = Strophe.getResourceFromJid(jid);\n        this._conference = conference;\n        this._displayName = displayName;\n        this._supportsDTMF = false;\n        this._tracks = [];\n        this._role = 'none';\n        this._status = status;\n        this._availableDevices = {\n            audio: undefined,\n            video: undefined\n        };\n        this._hidden = hidden;\n        this._statsID = statsID;\n        this._connectionStatus = ParticipantConnectionStatus.ACTIVE;\n        this._properties = {};\n    }\n\n    /* eslint-enable max-params */\n\n    /**\n     * @returns {JitsiConference} The conference that this participant belongs\n     * to.\n     */\n    getConference() {\n        return this._conference;\n    }\n\n    /**\n     * Gets the value of a property of this participant.\n     */\n    getProperty(name) {\n        return this._properties[name];\n    }\n\n    /**\n     * Checks whether this <tt>JitsiParticipant</tt> has any video tracks which\n     * are muted according to their underlying WebRTC <tt>MediaStreamTrack</tt>\n     * muted status.\n     * @return {boolean} <tt>true</tt> if this <tt>participant</tt> contains any\n     * video <tt>JitsiTrack</tt>s which are muted as defined in\n     * {@link JitsiTrack.isWebRTCTrackMuted}.\n     */\n    hasAnyVideoTrackWebRTCMuted() {\n        return (\n            this.getTracks().some(\n                jitsiTrack =>\n                    jitsiTrack.getType() === MediaType.VIDEO\n                        && jitsiTrack.isWebRTCTrackMuted()));\n    }\n\n    /**\n     * Updates participant's connection status.\n     * @param {string} state the current participant connection state.\n     * {@link ParticipantConnectionStatus}.\n     * @private\n     */\n    _setConnectionStatus(status) {\n        this._connectionStatus = status;\n    }\n\n    /**\n     * Return participant's connectivity status.\n     *\n     * @returns {string} the connection status\n     * <tt>ParticipantConnectionStatus</tt> of the user.\n     * {@link ParticipantConnectionStatus}.\n     */\n    getConnectionStatus() {\n        return this._connectionStatus;\n    }\n\n    /**\n     * Sets the value of a property of this participant, and fires an event if\n     * the value has changed.\n     * @name the name of the property.\n     * @value the value to set.\n     */\n    setProperty(name, value) {\n        const oldValue = this._properties[name];\n\n        if (value !== oldValue) {\n            this._properties[name] = value;\n            this._conference.eventEmitter.emit(\n                JitsiConferenceEvents.PARTICIPANT_PROPERTY_CHANGED,\n                this,\n                name,\n                oldValue,\n                value);\n        }\n    }\n\n    /**\n     * @returns {Array.<JitsiTrack>} The list of media tracks for this\n     * participant.\n     */\n    getTracks() {\n        return this._tracks.slice();\n    }\n\n    /**\n     * @param {MediaType} mediaType\n     * @returns {Array.<JitsiTrack>} an array of media tracks for this\n     * participant, for given media type.\n     */\n    getTracksByMediaType(mediaType) {\n        return this.getTracks().filter(track => track.getType() === mediaType);\n    }\n\n    /**\n     * @returns {String} The ID of this participant.\n     */\n    getId() {\n        return this._id;\n    }\n\n    /**\n     * @returns {String} The JID of this participant.\n     */\n    getJid() {\n        return this._jid;\n    }\n\n    /**\n     * @returns {String} The human-readable display name of this participant.\n     */\n    getDisplayName() {\n        return this._displayName;\n    }\n\n    /**\n     * @returns {String} The stats ID of this participant.\n     */\n    getStatsID() {\n        return this._statsID;\n    }\n\n    /**\n     * @returns {String} The status of the participant.\n     */\n    getStatus() {\n        return this._status;\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant is a moderator or not.\n     */\n    isModerator() {\n        return this._role === 'moderator';\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant is a hidden participant. Some\n     * special system participants may want to join hidden (like for example the\n     * recorder).\n     */\n    isHidden() {\n        return this._hidden;\n    }\n\n    // Gets a link to an etherpad instance advertised by the participant?\n    // getEtherpad() {\n    // }\n\n    /**\n     * @returns {Boolean} Whether this participant has muted their audio.\n     */\n    isAudioMuted() {\n        return this._isMediaTypeMuted(MediaType.AUDIO);\n    }\n\n    /**\n     * Determines whether all JitsiTracks which are of a specific MediaType and\n     * which belong to this JitsiParticipant are muted.\n     *\n     * @param {MediaType} mediaType - The MediaType of the JitsiTracks to be\n     * checked.\n     * @private\n     * @returns {Boolean} True if all JitsiTracks which are of the specified\n     * mediaType and which belong to this JitsiParticipant are muted; otherwise,\n     * false.\n     */\n    _isMediaTypeMuted(mediaType) {\n        return this.getTracks().reduce(\n            (muted, track) =>\n                muted && (track.getType() !== mediaType || track.isMuted()),\n            true);\n    }\n\n    /**\n     * @returns {Boolean} Whether this participant has muted their video.\n     */\n    isVideoMuted() {\n        return this._isMediaTypeMuted(MediaType.VIDEO);\n    }\n\n    /**\n     * @returns {String} The role of this participant.\n     */\n    getRole() {\n        return this._role;\n    }\n\n    /**\n     *\n     */\n    supportsDTMF() {\n        return this._supportsDTMF;\n    }\n\n    /**\n     * Returns a set with the features for the participant.\n     * @param {int} timeout the timeout in ms for reply from the participant.\n     * @returns {Promise<Set<String>, Error>}\n     */\n    getFeatures(timeout = 5000) {\n        return this._conference.xmpp.caps.getFeatures(this._jid, timeout);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiParticipant.js","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\n\nconst logger = getLogger(__filename);\n\n/**\n * Emits {@link JitsiConferenceEvents.JVB121_STATUS} events based on the current\n * P2P status and the conference participants count. See the event description\n * for more info.\n */\nexport default class Jvb121EventGenerator {\n    /**\n     * Creates new <tt>Jvb121EventGenerator</tt> for the given conference.\n     * @param {JitsiConference} conference\n     */\n    constructor(conference) {\n        this._conference = conference;\n\n        /**\n         * Indicates whether it's a one to one JVB conference (<tt>true</tt>)\n         * or a multiparty (<tt>false</tt>). Will be also <tt>false</tt> if\n         * the conference is currently in the P2P mode.\n         * @type {boolean}\n         * @private\n         */\n        this._jvb121 = true;\n\n        this._conference.addEventListener(\n            JitsiConferenceEvents.USER_JOINED, () => this.evaluateStatus());\n        this._conference.addEventListener(\n            JitsiConferenceEvents.USER_LEFT, () => this.evaluateStatus());\n        this._conference.addEventListener(\n            JitsiConferenceEvents.P2P_STATUS, () => this.evaluateStatus());\n    }\n\n    /**\n     * Checks whether the JVB121 value should be updated and a new event\n     * emitted.\n     */\n    evaluateStatus() {\n        const oldStatus = this._jvb121;\n        const newStatus\n            = !this._conference.isP2PActive()\n                && this._conference.getParticipantCount() <= 2;\n\n        if (oldStatus !== newStatus) {\n            this._jvb121 = newStatus;\n            logger.debug(`JVB121 status ${oldStatus} => ${newStatus}`);\n            this._conference.eventEmitter.emit(\n                JitsiConferenceEvents.JVB121_STATUS, oldStatus, newStatus);\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/event/Jvb121EventGenerator.js","import * as JitsiConferenceEvents from '../JitsiConferenceEvents';\n\n/**\n * The value which we use to say, every sound over this threshold\n * is talking on the mic.\n * @type {number}\n */\nconst SPEECH_DETECT_THRESHOLD = 0.6;\n\n/**\n * The <tt>P2PDominantSpeakerDetection</tt> is activated only when p2p is\n * currently used.\n * Listens for changes in the audio level changes of the local p2p audio track\n * or remote p2p one and fires dominant speaker events to be able to use\n * features depending on those events (speaker stats), to make them work without\n * the video bridge.\n */\nexport default class P2PDominantSpeakerDetection {\n    /**\n     * Creates P2PDominantSpeakerDetection\n     * @param conference the JitsiConference instance that created us.\n     * @constructor\n     */\n    constructor(conference) {\n        this.conference = conference;\n\n        conference.addEventListener(\n            JitsiConferenceEvents.TRACK_AUDIO_LEVEL_CHANGED,\n            this._audioLevel.bind(this));\n\n        this.myUserID = this.conference.myUserId();\n    }\n\n    /**\n     * Receives audio level events for all streams in the conference.\n     *\n     * @param {String} id - The participant id\n     * @param {number} audioLevel - The audio level.\n     */\n    _audioLevel(id, audioLevel) {\n\n        // we do not process if p2p is not active\n        // or audio level is under certain threshold\n        // or if the audio level is for local audio track which is muted\n        if (!this.conference.isP2PActive()\n            || audioLevel <= SPEECH_DETECT_THRESHOLD\n            || (id === this.myUserID\n                    && this.conference.getLocalAudioTrack().isMuted())) {\n            return;\n        }\n\n        this.conference.eventEmitter.emit(\n            JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED,\n            id);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/P2PDominantSpeakerDetection.js","import { getLogger } from 'jitsi-meet-logger';\n\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\n\nconst logger = getLogger(__filename);\n\n/**\n * Handles a WebRTC RTCPeerConnection or a WebSocket instance to communicate\n * with the videobridge.\n */\nexport default class BridgeChannel {\n    /**\n     * Binds \"ondatachannel\" event listener on the given RTCPeerConnection\n     * instance, or creates a WebSocket connection with the videobridge.\n     * At least one of both, peerconnection or wsUrl parameters, must be\n     * given.\n     * @param {RTCPeerConnection} [peerconnection] WebRTC peer connection\n     * instance.\n     * @param {string} [wsUrl] WebSocket URL.\n     * @param {EventEmitter} eventEmitter EventEmitter instance.\n     */\n    constructor(peerconnection, wsUrl, emitter) {\n        if (!peerconnection && !wsUrl) {\n            throw new TypeError(\n                'At least peerconnection or wsUrl must be given');\n        } else if (peerconnection && wsUrl) {\n            throw new TypeError(\n                'Just one of peerconnection or wsUrl must be given');\n        }\n\n        if (peerconnection) {\n            logger.debug('constructor() with peerconnection');\n        } else {\n            logger.debug(`constructor() with wsUrl:\"${wsUrl}\"`);\n        }\n\n        // The underlying WebRTC RTCDataChannel or WebSocket instance.\n        // @type {RTCDataChannel|WebSocket}\n        this._channel = null;\n\n        // @type {EventEmitter}\n        this._eventEmitter = emitter;\n\n        // Whether a RTCDataChannel or WebSocket is internally used.\n        // @type {string} \"datachannel\" / \"websocket\"\n        this._mode = null;\n\n        // If a RTCPeerConnection is given, listen for new RTCDataChannel\n        // event.\n        if (peerconnection) {\n            peerconnection.ondatachannel = event => {\n                // NOTE: We assume that the \"onDataChannel\" event just fires\n                // once.\n\n                const datachannel = event.channel;\n\n                // Handle the RTCDataChannel.\n                this._handleChannel(datachannel);\n                this._mode = 'datachannel';\n            };\n\n        // Otherwise create a WebSocket connection.\n        } else if (wsUrl) {\n            // Create a WebSocket instance.\n            const ws = new WebSocket(wsUrl);\n\n            // Handle the WebSocket.\n            this._handleChannel(ws);\n            this._mode = 'websocket';\n        }\n    }\n\n    /**\n     * The channel mode.\n     * @return {string} \"datachannel\" or \"websocket\" (or null if not yet set).\n     */\n    get mode() {\n        return this._mode;\n    }\n\n    /**\n     * Closes the currently opened channel.\n     */\n    close() {\n        if (this._channel) {\n            try {\n                this._channel.close();\n            } catch (error) {} // eslint-disable-line no-empty\n\n            this._channel = null;\n        }\n    }\n\n    /**\n     * Whether there is an underlying RTCDataChannel or WebSocket and it's\n     * open.\n     * @return {boolean}\n     */\n    isOpen() {\n        return this._channel && (this._channel.readyState === 'open'\n            || this._channel.readyState === WebSocket.OPEN);\n    }\n\n    /**\n     * Sends message via the channel.\n     * @param {string} to The id of the endpoint that should receive the\n     * message. If \"\" the message will be sent to all participants.\n     * @param  {object} payload The payload of the message.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    sendMessage(to, payload) {\n        this._send({\n            colibriClass: 'EndpointMessage',\n            msgPayload: payload,\n            to\n        });\n    }\n\n    /**\n     * Sends a \"lastN value changed\" message via the channel.\n     * @param {number} value The new value for lastN. -1 means unlimited.\n     */\n    sendSetLastNMessage(value) {\n        const jsonObject = {\n            colibriClass: 'LastNChangedEvent',\n            lastN: value\n        };\n\n        this._send(jsonObject);\n        logger.log(`Channel lastN set to: ${value}`);\n    }\n\n    /**\n     * Sends a \"pinned endpoint changed\" message via the channel.\n     * @param {string} endpointId The id of the pinned endpoint.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    sendPinnedEndpointMessage(endpointId) {\n        logger.log(\n            'sending pinned changed notification to the bridge for endpoint ',\n            endpointId);\n\n        this._send({\n            colibriClass: 'PinnedEndpointChangedEvent',\n            pinnedEndpoint: endpointId || null\n        });\n    }\n\n    /**\n     * Sends a \"selected endpoint changed\" message via the channel.\n     * @param {string} endpointId The id of the selected endpoint.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    sendSelectedEndpointMessage(endpointId) {\n        logger.log(\n            'sending selected changed notification to the bridge for endpoint ',\n            endpointId);\n\n        this._send({\n            colibriClass: 'SelectedEndpointChangedEvent',\n            selectedEndpoint: endpointId || null\n        });\n    }\n\n    /**\n     * Sends a \"receiver video constraint\" message via the channel.\n     * @param {Number} maxFrameHeightPixels the maximum frame height,\n     * in pixels, this receiver is willing to receive\n     */\n    sendReceiverVideoConstraintMessage(maxFrameHeightPixels) {\n        logger.log('sending a ReceiverVideoConstraint message with '\n            + `a maxFrameHeight of ${maxFrameHeightPixels} pixels`);\n        this._send({\n            colibriClass: 'ReceiverVideoConstraint',\n            maxFrameHeight: maxFrameHeightPixels\n        });\n    }\n\n    /**\n     * Set events on the given RTCDataChannel or WebSocket instance.\n     */\n    _handleChannel(channel) {\n        const emitter = this._eventEmitter;\n\n        channel.onopen = () => {\n            logger.info(`${this._mode} channel opened`);\n\n            // Code sample for sending string and/or binary data.\n            // Sends string message to the bridge:\n            //     channel.send(\"Hello bridge!\");\n            // Sends 12 bytes binary message to the bridge:\n            //     channel.send(new ArrayBuffer(12));\n\n            emitter.emit(RTCEvents.DATA_CHANNEL_OPEN);\n        };\n\n        channel.onerror = error => {\n            logger.error('Channel error:', error);\n        };\n\n        channel.onmessage = ({ data }) => {\n            // JSON object.\n            let obj;\n\n            try {\n                obj = JSON.parse(data);\n            } catch (error) {\n                GlobalOnErrorHandler.callErrorHandler(error);\n                logger.error(\n                    'Failed to parse channel message as JSON: ',\n                    data, error);\n\n                return;\n            }\n\n            const colibriClass = obj.colibriClass;\n\n            switch (colibriClass) {\n            case 'DominantSpeakerEndpointChangeEvent': {\n                // Endpoint ID from the Videobridge.\n                const dominantSpeakerEndpoint = obj.dominantSpeakerEndpoint;\n\n                logger.info(\n                    'Channel new dominant speaker event: ',\n                    dominantSpeakerEndpoint);\n                emitter.emit(\n                    RTCEvents.DOMINANT_SPEAKER_CHANGED,\n                    dominantSpeakerEndpoint);\n                break;\n            }\n            case 'EndpointConnectivityStatusChangeEvent': {\n                const endpoint = obj.endpoint;\n                const isActive = obj.active === 'true';\n\n                logger.info(\n                    `Endpoint connection status changed: ${endpoint} active ? ${\n                        isActive}`);\n                emitter.emit(RTCEvents.ENDPOINT_CONN_STATUS_CHANGED,\n                    endpoint, isActive);\n\n                break;\n            }\n            case 'EndpointMessage': {\n                emitter.emit(\n                    RTCEvents.ENDPOINT_MESSAGE_RECEIVED, obj.from,\n                    obj.msgPayload);\n\n                break;\n            }\n            case 'LastNEndpointsChangeEvent': {\n                // The new/latest list of last-n endpoint IDs.\n                const lastNEndpoints = obj.lastNEndpoints;\n\n                logger.info('Channel new last-n event: ',\n                    lastNEndpoints, obj);\n                emitter.emit(RTCEvents.LASTN_ENDPOINT_CHANGED,\n                    lastNEndpoints, obj);\n\n                break;\n            }\n            default: {\n                logger.debug('Channel JSON-formatted message: ', obj);\n\n                // The received message appears to be appropriately formatted\n                // (i.e. is a JSON object which assigns a value to the\n                // mandatory property colibriClass) so don't just swallow it,\n                // expose it to public consumption.\n                emitter.emit(`rtc.datachannel.${colibriClass}`, obj);\n            }\n            }\n        };\n\n        channel.onclose = () => {\n            logger.info('Channel closed');\n\n            // Remove the channel.\n            this._channel = null;\n        };\n\n        // Store the channel.\n        this._channel = channel;\n    }\n\n    /**\n     * Sends passed object via the channel.\n     * @param {object} jsonObject The object that will be sent.\n     * @throws NetworkError or InvalidStateError from RTCDataChannel#send (@see\n     * {@link https://developer.mozilla.org/docs/Web/API/RTCDataChannel/send})\n     * or from WebSocket#send or Error with \"No opened channel\" message.\n     */\n    _send(jsonObject) {\n        const channel = this._channel;\n\n        if (!this.isOpen()) {\n            throw new Error('No opened channel');\n        }\n\n        channel.send(JSON.stringify(jsonObject));\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/BridgeChannel.js","/* global __filename, Promise */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport JitsiTrack from './JitsiTrack';\nimport JitsiTrackError from '../../JitsiTrackError';\nimport {\n    TRACK_IS_DISPOSED,\n    TRACK_NO_STREAM_FOUND\n} from '../../JitsiTrackErrors';\nimport {\n    LOCAL_TRACK_STOPPED,\n    NO_DATA_FROM_SOURCE,\n    TRACK_MUTE_CHANGED\n} from '../../JitsiTrackEvents';\nimport RTCBrowserType from './RTCBrowserType';\nimport RTCUtils from './RTCUtils';\nimport CameraFacingMode from '../../service/RTC/CameraFacingMode';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport VideoType from '../../service/RTC/VideoType';\nimport {\n    _NO_DATA_FROM_SOURCE,\n    _TRACK_UNMUTE\n} from '../../service/statistics/AnalyticsEvents';\nimport Statistics from '../statistics/statistics';\n\nconst logger = getLogger(__filename);\n\n/**\n * Represents a single media track(either audio or video).\n * One <tt>JitsiLocalTrack</tt> corresponds to one WebRTC MediaStreamTrack.\n */\nexport default class JitsiLocalTrack extends JitsiTrack {\n    /**\n     * Constructs new JitsiLocalTrack instanse.\n     *\n     * @constructor\n     * @param {Object} trackInfo\n     * @param {number} trackInfo.rtcId the ID assigned by the RTC module\n     * @param trackInfo.stream WebRTC MediaStream, parent of the track\n     * @param trackInfo.track underlying WebRTC MediaStreamTrack for new\n     * JitsiRemoteTrack\n     * @param trackInfo.mediaType the MediaType of the JitsiRemoteTrack\n     * @param trackInfo.videoType the VideoType of the JitsiRemoteTrack\n     * @param trackInfo.resolution the video resolution if it's a video track\n     * @param trackInfo.deviceId the ID of the local device for this track\n     * @param trackInfo.facingMode the camera facing mode used in getUserMedia\n     * call\n     * @param {sourceId} trackInfo.sourceId - The id of the desktop sharing\n     * source. NOTE: defined for desktop sharing tracks only.\n     */\n    constructor({\n        deviceId,\n        facingMode,\n        mediaType,\n        resolution,\n        rtcId,\n        sourceId,\n        sourceType,\n        stream,\n        track,\n        videoType\n    }) {\n        super(\n            /* conference */ null,\n            stream,\n            track,\n            /* streamInactiveHandler */ () => this.emit(LOCAL_TRACK_STOPPED),\n            mediaType,\n            videoType);\n\n        /**\n         * The ID assigned by the RTC module on instance creation.\n         *\n         * @type {number}\n         */\n        this.rtcId = rtcId;\n        this.sourceId = sourceId;\n        this.sourceType = sourceType;\n\n        if (RTCBrowserType.usesNewGumFlow()) {\n            // Get the resolution from the track itself because it cannot be\n            // certain which resolution webrtc has fallen back to using.\n            this.resolution = track.getSettings().height;\n\n            // Cache the constraints of the track in case of any this track\n            // model needs to call getUserMedia again, such as when unmuting.\n            this._constraints = track.getConstraints();\n        } else {\n            // FIXME Currently, Firefox is ignoring our constraints about\n            // resolutions so we do not store it, to avoid wrong reporting of\n            // local track resolution.\n            this.resolution = RTCBrowserType.isFirefox() ? null : resolution;\n        }\n\n        this.deviceId = deviceId;\n\n        /**\n         * The <tt>Promise</tt> which represents the progress of a previously\n         * queued/scheduled {@link _setMuted} (from the point of view of\n         * {@link _queueSetMuted}).\n         *\n         * @private\n         * @type {Promise}\n         */\n        this._prevSetMuted = Promise.resolve();\n\n        /**\n         * The facing mode of the camera from which this JitsiLocalTrack\n         * instance was obtained.\n         *\n         * @private\n         * @type {CameraFacingMode|undefined}\n         */\n        this._facingMode = facingMode;\n\n        // Currently there is no way to know the MediaStreamTrack ended due to\n        // to device disconnect in Firefox through e.g. \"readyState\" property.\n        // Instead we will compare current track's label with device labels from\n        // enumerateDevices() list.\n        this._trackEnded = false;\n\n        /**\n         * Indicates whether data has been sent or not.\n         */\n        this._hasSentData = false;\n\n        /**\n         * Used only for detection of audio problems. We want to check only once\n         * whether the track is sending data ot not. This flag is set to false\n         * after the check.\n         */\n        this._testDataSent = true;\n\n        // Currently there is no way to determine with what device track was\n        // created (until getConstraints() support), however we can associate\n        // tracks with real devices obtained from enumerateDevices() call as\n        // soon as it's called.\n        this._realDeviceId = this.deviceId === '' ? undefined : this.deviceId;\n\n        /**\n         * On mute event we are waiting for 3s to check if the stream is going\n         * to be still muted before firing the event for camera issue detected\n         * (NO_DATA_FROM_SOURCE).\n         */\n        this._noDataFromSourceTimeout = null;\n\n        this._onDeviceListChanged = devices => {\n            this._setRealDeviceIdFromDeviceList(devices);\n\n            // Mark track as ended for those browsers that do not support\n            // \"readyState\" property. We do not touch tracks created with\n            // default device ID \"\".\n            if (typeof this.getTrack().readyState === 'undefined'\n                    && typeof this._realDeviceId !== 'undefined'\n                    && !devices.find(d => d.deviceId === this._realDeviceId)) {\n                this._trackEnded = true;\n            }\n        };\n\n        // Subscribe each created local audio track to\n        // RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED event. This is different from\n        // handling this event for remote tracks (which are handled in RTC.js),\n        // because there might be local tracks not attached to a conference.\n        if (this.isAudioTrack() && RTCUtils.isDeviceChangeAvailable('output')) {\n            this._onAudioOutputDeviceChanged = this.setAudioOutput.bind(this);\n            RTCUtils.addListener(\n                RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                this._onAudioOutputDeviceChanged);\n        }\n\n        RTCUtils.addListener(\n            RTCEvents.DEVICE_LIST_CHANGED,\n            this._onDeviceListChanged);\n\n        this._initNoDataFromSourceHandlers();\n    }\n\n    /**\n     * Returns if associated MediaStreamTrack is in the 'ended' state\n     *\n     * @returns {boolean}\n     */\n    isEnded() {\n        return this.getTrack().readyState === 'ended' || this._trackEnded;\n    }\n\n    /**\n     * Sets handlers to the MediaStreamTrack object that will detect camera\n     * issues.\n     */\n    _initNoDataFromSourceHandlers() {\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\n            const _onNoDataFromSourceError\n                = this._onNoDataFromSourceError.bind(this);\n\n            this._setHandler('track_mute', () => {\n                if (this._checkForCameraIssues()) {\n                    const now = window.performance.now();\n\n                    this._noDataFromSourceTimeout\n                        = setTimeout(_onNoDataFromSourceError, 3000);\n                    this._setHandler('track_unmute', () => {\n                        this._clearNoDataFromSourceMuteResources();\n                        Statistics.sendEventToAll(\n                            `${this.getType()}.${_TRACK_UNMUTE}`,\n                            { value: window.performance.now() - now });\n                    });\n                }\n            });\n            this._setHandler('track_ended', _onNoDataFromSourceError);\n        }\n    }\n\n    /**\n     * Clears all timeouts and handlers set on MediaStreamTrack mute event.\n     * FIXME: Change the name of the method with better one.\n     */\n    _clearNoDataFromSourceMuteResources() {\n        if (this._noDataFromSourceTimeout) {\n            clearTimeout(this._noDataFromSourceTimeout);\n            this._noDataFromSourceTimeout = null;\n        }\n        this._setHandler('track_unmute', undefined);\n    }\n\n    /**\n     * Called when potential camera issue is detected. Clears the handlers and\n     * timeouts set on MediaStreamTrack muted event. Verifies that the camera\n     * issue persists and fires NO_DATA_FROM_SOURCE event.\n     */\n    _onNoDataFromSourceError() {\n        this._clearNoDataFromSourceMuteResources();\n        if (this._checkForCameraIssues()) {\n            this._fireNoDataFromSourceEvent();\n        }\n    }\n\n    /**\n     * Fires NO_DATA_FROM_SOURCE event and logs it to analytics and callstats.\n     */\n    _fireNoDataFromSourceEvent() {\n        this.emit(NO_DATA_FROM_SOURCE);\n        const eventName = `${this.getType()}.${_NO_DATA_FROM_SOURCE}`;\n\n        Statistics.analytics.sendEvent(eventName);\n        const log = { name: eventName };\n\n        if (this.isAudioTrack()) {\n            log.isReceivingData = this._isReceivingData();\n        }\n        Statistics.sendLog(JSON.stringify(log));\n    }\n\n    /**\n     * Sets real device ID by comparing track information with device\n     * information. This is temporary solution until getConstraints() method\n     * will be implemented in browsers.\n     *\n     * @param {MediaDeviceInfo[]} devices - list of devices obtained from\n     * enumerateDevices() call\n     */\n    _setRealDeviceIdFromDeviceList(devices) {\n        const track = this.getTrack();\n\n        // FIXME for temasys video track, label refers to id not the actual\n        // device\n        const device = devices.find(\n            d => d.kind === `${track.kind}input` && d.label === track.label);\n\n        if (device) {\n            this._realDeviceId = device.deviceId;\n        }\n    }\n\n    /**\n     * Sets the stream property of JitsiLocalTrack object and sets all stored\n     * handlers to it.\n     *\n     * @param {MediaStream} stream the new stream.\n     * @protected\n     */\n    _setStream(stream) {\n        super._setStream(stream);\n\n        if (stream) {\n            // Store the MSID for video mute/unmute purposes.\n            this.storedMSID = this.getMSID();\n            logger.debug(`Setting new MSID: ${this.storedMSID} on ${this}`);\n        } else {\n            logger.debug(`Setting 'null' stream on ${this}`);\n        }\n    }\n\n    /**\n     * Asynchronously mutes this track.\n     *\n     * @returns {Promise}\n     */\n    mute() {\n        return this._queueSetMuted(true);\n    }\n\n    /**\n     * Asynchronously unmutes this track.\n     *\n     * @returns {Promise}\n     */\n    unmute() {\n        return this._queueSetMuted(false);\n    }\n\n    /**\n     * Initializes a new Promise to execute {@link #_setMuted}. May be called\n     * multiple times in a row and the invocations of {@link #_setMuted} and,\n     * consequently, {@link #mute} and/or {@link #unmute} will be resolved in a\n     * serialized fashion.\n     *\n     * @param {boolean} muted - The value to invoke <tt>_setMuted</tt> with.\n     * @returns {Promise}\n     */\n    _queueSetMuted(muted) {\n        const setMuted = this._setMuted.bind(this, muted);\n\n        this._prevSetMuted = this._prevSetMuted.then(setMuted, setMuted);\n\n        return this._prevSetMuted;\n    }\n\n    /**\n     * Mutes / unmutes this track.\n     *\n     * @param {boolean} muted - If <tt>true</tt>, this track will be muted;\n     * otherwise, this track will be unmuted.\n     * @private\n     * @returns {Promise}\n     */\n    _setMuted(muted) {\n        if (this.isMuted() === muted) {\n            return Promise.resolve();\n        }\n\n        if (this.disposed) {\n            return Promise.reject(new JitsiTrackError(TRACK_IS_DISPOSED));\n        }\n\n        let promise = Promise.resolve();\n\n        // A function that will print info about muted status transition\n        const logMuteInfo = () => logger.info(`Mute ${this}: ${muted}`);\n\n        if (this.isAudioTrack()\n                || this.videoType === VideoType.DESKTOP\n                || !RTCBrowserType.doesVideoMuteByStreamRemove()) {\n            logMuteInfo();\n            if (this.track) {\n                this.track.enabled = !muted;\n            }\n        } else if (muted) {\n            promise = new Promise((resolve, reject) => {\n                logMuteInfo();\n                this._removeStreamFromConferenceAsMute(\n                    () => {\n                        // FIXME: Maybe here we should set the SRC for the\n                        // containers to something\n                        // We don't want any events to be fired on this stream\n                        this._unregisterHandlers();\n                        this._stopStream();\n                        this._setStream(null);\n                        resolve();\n                    },\n                    reject);\n            });\n        } else {\n            logMuteInfo();\n\n            // This path is only for camera.\n            const streamOptions = {\n                cameraDeviceId: this.getDeviceId(),\n                devices: [ MediaType.VIDEO ],\n                facingMode: this.getCameraFacingMode()\n            };\n\n            if (RTCBrowserType.usesNewGumFlow()) {\n                promise\n                    = RTCUtils.newObtainAudioAndVideoPermissions(Object.assign(\n                        {},\n                        streamOptions,\n                        { constraints: { video: this._constraints } }));\n            } else {\n                if (this.resolution) {\n                    streamOptions.resolution = this.resolution;\n                }\n\n                promise\n                    = RTCUtils.obtainAudioAndVideoPermissions(streamOptions);\n            }\n\n            promise.then(streamsInfo => {\n                const mediaType = this.getType();\n                const streamInfo\n                    = RTCBrowserType.usesNewGumFlow()\n                        ? streamsInfo.find(\n                            info => info.track.kind === mediaType)\n                        : streamsInfo.find(\n                            info => info.mediaType === mediaType);\n\n                if (streamInfo) {\n                    this._setStream(streamInfo.stream);\n                    this.track = streamInfo.track;\n\n                    // This is not good when video type changes after\n                    // unmute, but let's not crash here\n                    if (this.videoType !== streamInfo.videoType) {\n                        logger.warn(\n                            `${this}: video type has changed after unmute!`,\n                            this.videoType, streamInfo.videoType);\n                        this.videoType = streamInfo.videoType;\n                    }\n                } else {\n                    throw new JitsiTrackError(TRACK_NO_STREAM_FOUND);\n                }\n\n                this.containers = this.containers.map(\n                    cont => RTCUtils.attachMediaStream(cont, this.stream));\n\n                return this._addStreamToConferenceAsUnmute();\n            });\n        }\n\n        return promise\n            .then(() => this._sendMuteStatus(muted))\n            .then(() => this.emit(TRACK_MUTE_CHANGED, this));\n    }\n\n    /**\n     * Adds stream to conference and marks it as \"unmute\" operation.\n     *\n     * @private\n     * @returns {Promise}\n     */\n    _addStreamToConferenceAsUnmute() {\n        if (!this.conference) {\n            return Promise.resolve();\n        }\n\n        // FIXME it would be good to not included conference as part of this\n        // process. Only TraceablePeerConnections to which the track is attached\n        // should care about this action. The TPCs to which the track is not\n        // attached can sync up when track is re-attached.\n        // A problem with that is that the \"modify sources\" queue is part of\n        // the JingleSessionPC and it would be excluded from the process. One\n        // solution would be to extract class between TPC and JingleSessionPC\n        // which would contain the queue and would notify the signaling layer\n        // when local SSRCs are changed. This would help to separate XMPP from\n        // the RTC module.\n        return new Promise((resolve, reject) => {\n            this.conference._addLocalTrackAsUnmute(this)\n                .then(resolve, error => reject(new Error(error)));\n        });\n    }\n\n    /**\n     * Removes stream from conference and marks it as \"mute\" operation.\n     *\n     * @param {Function} successCallback will be called on success\n     * @param {Function} errorCallback will be called on error\n     * @private\n     */\n    _removeStreamFromConferenceAsMute(successCallback, errorCallback) {\n        if (!this.conference) {\n            successCallback();\n\n            return;\n        }\n        this.conference._removeLocalTrackAsMute(this).then(\n            successCallback,\n            error => errorCallback(new Error(error)));\n    }\n\n    /**\n     * Sends mute status for a track to conference if any.\n     *\n     * @param {boolean} mute - If track is muted.\n     * @private\n     * @returns {Promise}\n     */\n    _sendMuteStatus(mute) {\n        if (!this.conference || !this.conference.room) {\n            return Promise.resolve();\n        }\n\n        return new Promise(resolve => {\n            this.conference.room[\n                this.isAudioTrack()\n                    ? 'setAudioMute'\n                    : 'setVideoMute'](mute, resolve);\n        });\n    }\n\n    /**\n     * @inheritdoc\n     *\n     * Stops sending the media track. And removes it from the HTML.\n     * NOTE: Works for local tracks only.\n     *\n     * @extends JitsiTrack#dispose\n     * @returns {Promise}\n     */\n    dispose() {\n        let promise = Promise.resolve();\n\n        if (this.conference) {\n            promise = this.conference.removeTrack(this);\n        }\n\n        if (this.stream) {\n            this._stopStream();\n            this.detach();\n        }\n\n        RTCUtils.removeListener(RTCEvents.DEVICE_LIST_CHANGED,\n            this._onDeviceListChanged);\n\n        if (this._onAudioOutputDeviceChanged) {\n            RTCUtils.removeListener(RTCEvents.AUDIO_OUTPUT_DEVICE_CHANGED,\n                this._onAudioOutputDeviceChanged);\n        }\n\n        return promise.then(() => super.dispose());\n    }\n\n    /**\n     * Returns <tt>true</tt> - if the stream is muted and <tt>false</tt>\n     * otherwise.\n     *\n     * @returns {boolean} <tt>true</tt> - if the stream is muted and\n     * <tt>false</tt> otherwise.\n     */\n    isMuted() {\n        // this.stream will be null when we mute local video on Chrome\n        if (!this.stream) {\n            return true;\n        }\n        if (this.isVideoTrack() && !this.isActive()) {\n            return true;\n        }\n\n        return !this.track || !this.track.enabled;\n    }\n\n    /**\n     * Sets the JitsiConference object associated with the track. This is temp\n     * solution.\n     *\n     * @param conference the JitsiConference object\n     */\n    _setConference(conference) {\n        this.conference = conference;\n\n        // We want to keep up with postponed events which should have been fired\n        // on \"attach\" call, but for local track we not always have the\n        // conference before attaching. However this may result in duplicated\n        // events if they have been triggered on \"attach\" already.\n        for (let i = 0; i < this.containers.length; i++) {\n            this._maybeFireTrackAttached(this.containers[i]);\n        }\n    }\n\n    /**\n     * Returns <tt>true</tt>.\n     *\n     * @returns {boolean} <tt>true</tt>\n     */\n    isLocal() {\n        return true;\n    }\n\n    /**\n     * Returns device id associated with track.\n     *\n     * @returns {string}\n     */\n    getDeviceId() {\n        return this._realDeviceId || this.deviceId;\n    }\n\n    /**\n     * Returns the participant id which owns the track.\n     *\n     * @returns {string} the id of the participants. It corresponds to the\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\n     */\n    getParticipantId() {\n        return this.conference && this.conference.myUserId();\n    }\n\n    /**\n     * Handles bytes sent statistics.\n     *\n     * @param {TraceablePeerConnection} tpc the source of the \"bytes sent\" stat\n     * @param {number} bytesSent the new value\n     * NOTE: used only for audio tracks to detect audio issues.\n     */\n    _onByteSentStatsReceived(tpc, bytesSent) {\n        if (bytesSent > 0) {\n            this._hasSentData = true;\n        }\n        const iceConnectionState = tpc.getConnectionState();\n\n        if (this._testDataSent && iceConnectionState === 'connected') {\n            setTimeout(() => {\n                if (!this._hasSentData) {\n                    logger.warn(`${this} 'bytes sent' <= 0: \\\n                        ${this._bytesSent}`);\n\n                    // we are not receiving anything from the microphone\n                    this._fireNoDataFromSourceEvent();\n                }\n            }, 3000);\n            this._testDataSent = false;\n        }\n    }\n\n    /**\n     * Returns facing mode for video track from camera. For other cases (e.g.\n     * audio track or 'desktop' video track) returns undefined.\n     *\n     * @returns {CameraFacingMode|undefined}\n     */\n    getCameraFacingMode() {\n        if (this.isVideoTrack() && this.videoType === VideoType.CAMERA) {\n            // MediaStreamTrack#getSettings() is not implemented in many\n            // browsers, so we need feature checking here. Progress on the\n            // respective browser's implementation can be tracked at\n            // https://bugs.chromium.org/p/webrtc/issues/detail?id=2481 for\n            // Chromium and https://bugzilla.mozilla.org/show_bug.cgi?id=1213517\n            // for Firefox. Even if a browser implements getSettings() already,\n            // it might still not return anything for 'facingMode'.\n            let trackSettings;\n\n            try {\n                trackSettings = this.track.getSettings();\n            } catch (e) {\n                // XXX React-native-webrtc, for example, defines\n                // MediaStreamTrack#getSettings() but the implementation throws\n                // a \"Not implemented\" Error.\n            }\n            if (trackSettings && 'facingMode' in trackSettings) {\n                return trackSettings.facingMode;\n            }\n\n            if (typeof this._facingMode !== 'undefined') {\n                return this._facingMode;\n            }\n\n            // In most cases we are showing a webcam. So if we've gotten here,\n            // it should be relatively safe to assume that we are probably\n            // showing the user-facing camera.\n            return CameraFacingMode.USER;\n        }\n\n        return undefined;\n    }\n\n    /**\n     * Stops the associated MediaStream.\n     */\n    _stopStream() {\n\n        /**\n         * Indicates that we are executing {@link #_stopStream} i.e.\n         * {@link RTCUtils#stopMediaStream} for the <tt>MediaStream</tt>\n         * associated with this <tt>JitsiTrack</tt> instance.\n         *\n         * @private\n         * @type {boolean}\n         */\n        this._stopStreamInProgress = true;\n\n        try {\n            RTCUtils.stopMediaStream(this.stream);\n        } finally {\n            this._stopStreamInProgress = false;\n        }\n    }\n\n    /**\n     * Switches the camera facing mode if the WebRTC implementation supports the\n     * custom MediaStreamTrack._switchCamera method. Currently, the method in\n     * question is implemented in react-native-webrtc only. When such a WebRTC\n     * implementation is executing, the method is the preferred way to switch\n     * between the front/user-facing and the back/environment-facing cameras\n     * because it will likely be (as is the case of react-native-webrtc)\n     * noticeably faster that creating a new MediaStreamTrack via a new\n     * getUserMedia call with the switched facingMode constraint value.\n     * Moreover, the approach with a new getUserMedia call may not even work:\n     * WebRTC on Android and iOS is either very slow to open the camera a second\n     * time or plainly freezes attempting to do that.\n     */\n    _switchCamera() {\n        if (this.isVideoTrack()\n                && this.videoType === VideoType.CAMERA\n                && typeof this.track._switchCamera === 'function') {\n            this.track._switchCamera();\n\n            this._facingMode\n                = this._facingMode === CameraFacingMode.ENVIRONMENT\n                    ? CameraFacingMode.USER\n                    : CameraFacingMode.ENVIRONMENT;\n        }\n    }\n\n    /**\n     * Detects camera issues on ended and mute events from MediaStreamTrack.\n     *\n     * @returns {boolean} true if an issue is detected and false otherwise\n     */\n    _checkForCameraIssues() {\n        if (!this.isVideoTrack()\n                || this._stopStreamInProgress\n                || this.videoType === VideoType.DESKTOP) {\n            return false;\n        }\n\n        return !this._isReceivingData();\n    }\n\n    /**\n     * Checks whether the attached MediaStream is receiving data from source or\n     * not. If the stream property is null(because of mute or another reason)\n     * this method will return false.\n     * NOTE: This method doesn't indicate problem with the streams directly.\n     * For example in case of video mute the method will return false or if the\n     * user has disposed the track.\n     *\n     * @returns {boolean} true if the stream is receiving data and false\n     * this otherwise.\n     */\n    _isReceivingData() {\n        if (!this.stream) {\n            return false;\n        }\n\n        // In older version of the spec there is no muted property and\n        // readyState can have value muted. In the latest versions\n        // readyState can have values \"live\" and \"ended\" and there is\n        // muted boolean property. If the stream is muted that means that\n        // we aren't receiving any data from the source. We want to notify\n        // the users for error if the stream is muted or ended on it's\n        // creation.\n        return this.stream.getTracks().some(track =>\n            (!('readyState' in track) || track.readyState === 'live')\n                && (!('muted' in track) || track.muted !== true));\n    }\n\n    /**\n     * Creates a text representation of this local track instance.\n     *\n     * @return {string}\n     */\n    toString() {\n        return `LocalTrack[${this.rtcId},${this.getType()}]`;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/JitsiLocalTrack.js","/* global __filename, RTCIceGatherer, RTCIceTransport, RTCDtlsTransport,\nRTCRtpSender, RTCRtpReceiver */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport yaeti from 'yaeti';\n\nimport RTCSessionDescription from './RTCSessionDescription';\nimport * as utils from './utils';\nimport { InvalidStateError } from './errors';\nimport RandomUtil from '../../util/RandomUtil';\nimport SDPUtil from '../../xmpp/SDPUtil';\n\nconst logger = getLogger(__filename);\n\nconst RTCSignalingState = {\n    stable: 'stable',\n    haveLocalOffer: 'have-local-offer',\n    haveRemoteOffer: 'have-remote-offer',\n    closed: 'closed'\n};\n\nconst RTCIceGatheringState = {\n    new: 'new',\n    gathering: 'gathering',\n    complete: 'complete'\n};\n\nconst CNAME = `jitsi-ortc-cname-${RandomUtil.randomInt(10000, 99999)}`;\n\n/**\n * RTCPeerConnection shim for ORTC based endpoints (such as Edge).\n *\n * The interface is based on the W3C specification of 2015, which matches\n * the implementation of Chrome nowadays:\n *\n *   https://www.w3.org/TR/2015/WD-webrtc-20150210/\n *\n * It also implements Plan-B for multi-stream, and assumes single BUNDLEd\n * transport and rtcp-mux.\n */\nexport default class ortcRTCPeerConnection extends yaeti.EventTarget {\n    /**\n     */\n    constructor(pcConfig) {\n        super();\n\n        logger.debug('constructor() pcConfig:', pcConfig);\n\n        // Buffered local ICE candidates (in WebRTC format).\n        // @type {sequence<RTCIceCandidate>}\n        this._bufferedIceCandidates = [];\n\n        // Closed flag.\n        // @type {Boolean}\n        this._closed = false;\n\n        // RTCDtlsTransport.\n        // @type {RTCDtlsTransport}\n        this._dtlsTransport = null;\n\n        // RTCIceGatherer.\n        // @type {RTCIceGatherer}\n        this._iceGatherer = null;\n\n        // RTCPeerConnection iceGatheringState.\n        // NOTE: This should not be needed, but Edge does not implement\n        // iceGatherer.state.\n        // @type {RTCIceGatheringState}\n        this._iceGatheringState = RTCIceGatheringState.new;\n\n        // RTCIceTransport.\n        // @type {RTCIceTransport}\n        this._iceTransport = null;\n\n        // Local RTP capabilities (filtered with remote ones).\n        // @type {RTCRtpCapabilities}\n        this._localCapabilities = null;\n\n        // Local RTCSessionDescription.\n        // @type {RTCSessionDescription}\n        this._localDescription = null;\n\n        // Map with info regarding local media.\n        // - index: MediaStreamTrack.id\n        // - value: Object\n        //   - rtpSender: Associated RTCRtpSender instance\n        //   - stream: Associated MediaStream instance\n        //   - ssrc: Provisional or definitive SSRC\n        //   - rtxSsrc: Provisional or definitive SSRC for RTX\n        //   - sending: Boolean indicating whether rtpSender.send() was called.\n        this._localTrackInfos = new Map();\n\n        // Ordered Map with MID as key and kind as value.\n        // @type {map<String, String>}\n        this._mids = new Map();\n\n        // Remote RTCSessionDescription.\n        // @type {RTCSessionDescription}\n        this._remoteDescription = null;\n\n        // Map of remote streams.\n        // - index: MediaStream.jitsiRemoteId (as signaled in remote SDP)\n        // - value: MediaStream (locally generated so id does not match)\n        // @type {map<Number, MediaStream>}\n        this._remoteStreams = new Map();\n\n        // Map with info about receiving media.\n        // - index: Media SSRC\n        // - value: Object\n        //   - kind: 'audio' / 'video'\n        //   - ssrc: Media SSRC\n        //   - rtxSsrc: RTX SSRC (may be unset)\n        //   - streamId: MediaStream.jitsiRemoteId\n        //   - trackId: MediaStreamTrack.jitsiRemoteId\n        //   - cname: CNAME\n        //   - stream: MediaStream\n        //   - track: MediaStreamTrack\n        //   - rtpReceiver: Associated RTCRtpReceiver instance\n        // @type {map<Number, Object>}\n        this._remoteTrackInfos = new Map();\n\n        // Local SDP global fields.\n        this._sdpGlobalFields = {\n            id: SDPUtil.generateSsrc(),\n            version: 0\n        };\n\n        // RTCPeerConnection signalingState.\n        // @type {RTCSignalingState}\n        this._signalingState = RTCSignalingState.stable;\n\n        // Create the RTCIceGatherer.\n        this._setIceGatherer(pcConfig);\n\n        // Create the RTCIceTransport.\n        this._setIceTransport(this._iceGatherer);\n\n        // Create the RTCDtlsTransport.\n        this._setDtlsTransport(this._iceTransport);\n    }\n\n    /**\n     * Current ICE+DTLS connection state.\n     * @return {RTCPeerConnectionState}\n     */\n    get connectionState() {\n        return this._dtlsTransport.state;\n    }\n\n    /**\n     * Current ICE connection state.\n     * @return {RTCIceConnectionState}\n     */\n    get iceConnectionState() {\n        return this._iceTransport.state;\n    }\n\n    /**\n     * Current ICE gathering state.\n     * @return {RTCIceGatheringState}\n     */\n    get iceGatheringState() {\n        return this._iceGatheringState;\n    }\n\n    /**\n     * Gets the local description.\n     * @return {RTCSessionDescription}\n     */\n    get localDescription() {\n        return this._localDescription;\n    }\n\n    /**\n     * Gets the remote description.\n     * @return {RTCSessionDescription}\n     */\n    get remoteDescription() {\n        return this._remoteDescription;\n    }\n\n    /**\n     * Current signaling state.\n     * @return {RTCSignalingState}\n     */\n    get signalingState() {\n        return this._signalingState;\n    }\n\n    /**\n     * Adds a remote ICE candidate. Implements both the old callbacks based\n     * signature and the new Promise based style.\n     *\n     * Arguments in Promise mode:\n     * @param {RTCIceCandidate} candidate\n     *\n     * Arguments in callbacks mode:\n     * @param {RTCIceCandidate} candidate\n     * @param {function()} callback\n     * @param {function(error)} errback\n     */\n    addIceCandidate(candidate, ...args) {\n        let usePromise;\n        let callback;\n        let errback;\n\n        if (!candidate) {\n            throw new TypeError('candidate missing');\n        }\n\n        if (args.length === 0) {\n            usePromise = true;\n        } else {\n            usePromise = false;\n            callback = args[0];\n            errback = args[1];\n\n            if (typeof callback !== 'function') {\n                throw new TypeError('callback missing');\n            }\n\n            if (typeof errback !== 'function') {\n                throw new TypeError('errback missing');\n            }\n        }\n\n        logger.debug('addIceCandidate() candidate:', candidate);\n\n        if (usePromise) {\n            return this._addIceCandidate(candidate);\n        }\n\n        this._addIceCandidate(candidate)\n            .then(() => callback())\n            .catch(error => errback(error));\n    }\n\n    /**\n     * Adds a local MediaStream.\n     * @param {MediaStream} stream.\n     * NOTE: Deprecated API.\n     */\n    addStream(stream) {\n        logger.debug('addStream()');\n\n        this._addStream(stream);\n    }\n\n    /**\n     * Closes the RTCPeerConnection and all the underlying ORTC objects.\n     */\n    close() {\n        if (this._closed) {\n            return;\n        }\n\n        this._closed = true;\n\n        logger.debug('close()');\n\n        this._updateAndEmitSignalingStateChange(RTCSignalingState.closed);\n\n        // Close RTCIceGatherer.\n        // NOTE: Not yet implemented by Edge.\n        try {\n            this._iceGatherer.close();\n        } catch (error) {\n            logger.warn(`iceGatherer.close() failed:${error}`);\n        }\n\n        // Close RTCIceTransport.\n        try {\n            this._iceTransport.stop();\n        } catch (error) {\n            logger.warn(`iceTransport.stop() failed:${error}`);\n        }\n\n        // Close RTCDtlsTransport.\n        try {\n            this._dtlsTransport.stop();\n        } catch (error) {\n            logger.warn(`dtlsTransport.stop() failed:${error}`);\n        }\n\n        // Close and clear RTCRtpSenders.\n        for (const info of this._localTrackInfos.values()) {\n            const rtpSender = info.rtpSender;\n\n            try {\n                rtpSender.stop();\n            } catch (error) {\n                logger.warn(`rtpSender.stop() failed:${error}`);\n            }\n        }\n\n        this._localTrackInfos.clear();\n\n        // Close and clear RTCRtpReceivers.\n        for (const info of this._remoteTrackInfos.values()) {\n            const rtpReceiver = info.rtpReceiver;\n\n            try {\n                rtpReceiver.stop();\n            } catch (error) {\n                logger.warn(`rtpReceiver.stop() failed:${error}`);\n            }\n        }\n\n        this._remoteTrackInfos.clear();\n\n        // Clear remote streams.\n        this._remoteStreams.clear();\n    }\n\n    /**\n     * Creates a local answer. Implements both the old callbacks based signature\n     * and the new Promise based style.\n     *\n     * Arguments in Promise mode:\n     * @param {RTCOfferOptions} [options]\n     *\n     * Arguments in callbacks mode:\n     * @param {function(desc)} callback\n     * @param {function(error)} errback\n     * @param {MediaConstraints} [constraints]\n     */\n    createAnswer(...args) {\n        let usePromise;\n        let options;\n        let callback;\n        let errback;\n\n        if (args.length <= 1) {\n            usePromise = true;\n            options = args[0];\n        } else {\n            usePromise = false;\n            callback = args[0];\n            errback = args[1];\n            options = args[2];\n\n            if (typeof callback !== 'function') {\n                throw new TypeError('callback missing');\n            }\n\n            if (typeof errback !== 'function') {\n                throw new TypeError('errback missing');\n            }\n        }\n\n        logger.debug('createAnswer() options:', options);\n\n        if (usePromise) {\n            return this._createAnswer(options);\n        }\n\n        this._createAnswer(options)\n            .then(desc => callback(desc))\n            .catch(error => errback(error));\n    }\n\n    /**\n     * Creates a RTCDataChannel.\n     */\n    createDataChannel() {\n        logger.debug('createDataChannel()');\n\n        // NOTE: DataChannels not implemented in Edge.\n        throw new Error('createDataChannel() not supported in Edge');\n    }\n\n    /**\n     * Creates a local offer. Implements both the old callbacks based signature\n     * and the new Promise based style.\n     *\n     * Arguments in Promise mode:\n     * @param {RTCOfferOptions} [options]\n     *\n     * Arguments in callbacks mode:\n     * @param {function(desc)} callback\n     * @param {function(error)} errback\n     * @param {MediaConstraints} [constraints]\n     */\n    createOffer(...args) {\n        let usePromise;\n        let options;\n        let callback;\n        let errback;\n\n        if (args.length <= 1) {\n            usePromise = true;\n            options = args[0];\n        } else {\n            usePromise = false;\n            callback = args[0];\n            errback = args[1];\n            options = args[2];\n\n            if (typeof callback !== 'function') {\n                throw new TypeError('callback missing');\n            }\n\n            if (typeof errback !== 'function') {\n                throw new TypeError('errback missing');\n            }\n        }\n\n        logger.debug('createOffer() options:', options);\n\n        if (usePromise) {\n            return this._createOffer(options);\n        }\n\n        this._createOffer(options)\n            .then(desc => callback(desc))\n            .catch(error => errback(error));\n    }\n\n    /**\n     * Gets a sequence of local MediaStreams.\n     * @return {sequence<MediaStream>}\n     */\n    getLocalStreams() {\n        return Array.from(this._localTrackInfos.values())\n            .map(info => info.stream)\n            .filter((elem, pos, arr) => arr.indexOf(elem) === pos);\n    }\n\n    /**\n     * Gets a sequence of remote MediaStreams.\n     * @return {sequence<MediaStream>}\n     */\n    getRemoteStreams() {\n        return Array.from(this._remoteStreams.values());\n    }\n\n    /**\n     * Get RTP statistics. Implements both the old callbacks based signature\n     * and the new Promise based style.\n     *\n     * Arguments in Promise mode:\n     * @param {MediaStreamTrack} [selector]\n     *\n     * Arguments in callbacks mode:\n     * @param {MediaStreamTrack} [selector]\n     * @param {function(desc)} callback\n     * @param {function(error)} errback\n     */\n    getStats(...args) {\n        let usePromise;\n        let selector;\n        let callback;\n        let errback;\n\n        if (typeof args[0] === 'function') {\n            usePromise = false;\n            callback = args[0];\n            errback = args[1];\n        } else if (typeof args[1] === 'function') {\n            usePromise = false;\n            selector = args[0];\n            callback = args[1];\n            errback = args[2];\n        } else {\n            usePromise = true;\n            selector = args[0];\n        }\n\n        if (!usePromise && !errback) {\n            errback = error => {\n                logger.error(`getStats() failed: ${error}`);\n                logger.error(error.stack);\n            };\n        }\n\n        if (usePromise) {\n            return this._getStats(selector);\n        }\n\n        this._getStats(selector)\n            .then(stats => callback(stats))\n            .catch(error => errback(error));\n    }\n\n    /**\n     * Removes a local MediaStream.\n     * @param {MediaStream} stream.\n     * NOTE: Deprecated API.\n     */\n    removeStream(stream) {\n        logger.debug('removeStream()');\n\n        this._removeStream(stream);\n    }\n\n    /**\n     * Applies a local description. Implements both the old callbacks based\n     * signature and the new Promise based style.\n     *\n     * Arguments in Promise mode:\n     * @param {RTCSessionDescriptionInit} desc\n     *\n     * Arguments in callbacks mode:\n     * @param {RTCSessionDescription} desc\n     * @param {function()} callback\n     * @param {function(error)} errback\n     */\n    setLocalDescription(desc, ...args) {\n        let usePromise;\n        let callback;\n        let errback;\n\n        if (!desc) {\n            throw new TypeError('description missing');\n        }\n\n        if (args.length === 0) {\n            usePromise = true;\n        } else {\n            usePromise = false;\n            callback = args[0];\n            errback = args[1];\n\n            if (typeof callback !== 'function') {\n                throw new TypeError('callback missing');\n            }\n\n            if (typeof errback !== 'function') {\n                throw new TypeError('errback missing');\n            }\n        }\n\n        logger.debug('setLocalDescription() desc:', desc);\n\n        if (usePromise) {\n            return this._setLocalDescription(desc);\n        }\n\n        this._setLocalDescription(desc)\n            .then(() => callback())\n            .catch(error => errback(error));\n    }\n\n    /**\n     * Applies a remote description. Implements both the old callbacks based\n     * signature and the new Promise based style.\n     *\n     * Arguments in Promise mode:\n     * @param {RTCSessionDescriptionInit} desc\n     *\n     * Arguments in callbacks mode:\n     * @param {RTCSessionDescription} desc\n     * @param {function()} callback\n     * @param {function(error)} errback\n     */\n    setRemoteDescription(desc, ...args) {\n        let usePromise;\n        let callback;\n        let errback;\n\n        if (!desc) {\n            throw new TypeError('description missing');\n        }\n\n        if (args.length === 0) {\n            usePromise = true;\n        } else {\n            usePromise = false;\n            callback = args[0];\n            errback = args[1];\n\n            if (typeof callback !== 'function') {\n                throw new TypeError('callback missing');\n            }\n\n            if (typeof errback !== 'function') {\n                throw new TypeError('errback missing');\n            }\n        }\n\n        logger.debug('setRemoteDescription() desc:', desc);\n\n        if (usePromise) {\n            return this._setRemoteDescription(desc);\n        }\n\n        this._setRemoteDescription(desc)\n            .then(() => callback())\n            .catch(error => errback(error));\n    }\n\n    /**\n     * Promise based implementation for addIceCandidate().\n     * @return {Promise}\n     * @private\n     */\n    _addIceCandidate(candidate) { // eslint-disable-line no-unused-vars\n        if (this._closed) {\n            return Promise.reject(\n                new InvalidStateError('RTCPeerConnection closed'));\n        }\n\n        // NOTE: Edge does not support Trickle-ICE so just candidates in the\n        // remote SDP are applied. Candidates given later would be just\n        // ignored, so notify the called about that.\n        return Promise.reject(new Error('addIceCandidate() not supported'));\n    }\n\n    /**\n     * Implementation for addStream().\n     * @private\n     */\n    _addStream(stream) {\n        if (this._closed) {\n            throw new InvalidStateError('RTCPeerConnection closed');\n        }\n\n        // Create a RTCRtpSender for each track.\n        for (const track of stream.getTracks()) {\n            // Ignore if ended.\n            if (track.readyState === 'ended') {\n                logger.warn('ignoring ended MediaStreamTrack');\n\n                continue; // eslint-disable-line no-continue\n            }\n\n            // Ignore if track is already present.\n            if (this._localTrackInfos.has(track.id)) {\n                logger.warn('ignoring already handled MediaStreamTrack');\n\n                continue; // eslint-disable-line no-continue\n            }\n\n            const rtpSender = new RTCRtpSender(track, this._dtlsTransport);\n\n            // Store it in the map.\n            this._localTrackInfos.set(track.id, {\n                rtpSender,\n                stream\n            });\n        }\n\n        // Check for local tracks removal.\n        for (const [ trackId, info ] of this._localTrackInfos) {\n            const track = info.rtpSender.track;\n\n            // Check if any of the local tracks has been stopped.\n            if (track.readyState === 'ended') {\n                logger.warn(\n                    '_addStream() an already handled track was stopped, '\n                    + `track.id:${track.id}`);\n\n                try {\n                    info.rtpSender.stop();\n                } catch (error) {\n                    logger.warn(`rtpSender.stop() failed:${error}`);\n                }\n\n                // Remove from the map.\n                this._localTrackInfos.delete(track.id);\n\n            // Also, if the stream was already handled, check whether tracks\n            // have been removed via stream.removeTrack() and, if so, stop\n            // their RtpSenders.\n            } else if (info.stream === stream\n                && !stream.getTrackById(trackId)) {\n                logger.warn(\n                    '_addStream() a track in this stream was removed, '\n                    + `track.id:${trackId}`);\n\n                try {\n                    info.rtpSender.stop();\n                } catch (error) {\n                    logger.warn(`rtpSender.stop() failed:${error}`);\n                }\n\n                // Remove from the map.\n                this._localTrackInfos.delete(track.id);\n            }\n        }\n\n        // It may need to renegotiate.\n        this._emitNegotiationNeeded();\n    }\n\n    /**\n     * Promise based implementation for createAnswer().\n     * @returns {Promise}\n     * @private\n     */\n    _createAnswer(options) { // eslint-disable-line no-unused-vars\n        if (this._closed) {\n            return Promise.reject(\n                new InvalidStateError('RTCPeerConnection closed'));\n        }\n\n        if (this.signalingState !== RTCSignalingState.haveRemoteOffer) {\n            return Promise.reject(new InvalidStateError(\n                `invalid signalingState \"${this.signalingState}\"`));\n        }\n\n        // Create an answer.\n        const localDescription = this._createLocalDescription('answer');\n\n        // Resolve with it.\n        return Promise.resolve(localDescription);\n    }\n\n    /**\n     * Creates the local RTCSessionDescription.\n     * @param {String} type - 'offer' / 'answer'.\n     * @return {RTCSessionDescription}\n     */\n    _createLocalDescription(type) {\n        const sdpObject = {};\n        const localIceParameters = this._iceGatherer.getLocalParameters();\n        const localIceCandidates = this._iceGatherer.getLocalCandidates();\n        const localDtlsParameters = this._dtlsTransport.getLocalParameters();\n        const remoteDtlsParameters = this._dtlsTransport.getRemoteParameters();\n        const localCapabilities = this._localCapabilities;\n        const localTrackInfos = this._localTrackInfos;\n\n        // Increase SDP version if an offer.\n        if (type === 'offer') {\n            this._sdpGlobalFields.version++;\n        }\n\n        // SDP global fields.\n        sdpObject.version = 0;\n        sdpObject.origin = {\n            address: '127.0.0.1',\n            ipVer: 4,\n            netType: 'IN',\n            sessionId: this._sdpGlobalFields.id,\n            sessionVersion: this._sdpGlobalFields.version,\n            username: 'jitsi-ortc-webrtc-shim'\n        };\n        sdpObject.name = '-';\n        sdpObject.timing = {\n            start: 0,\n            stop: 0\n        };\n        sdpObject.msidSemantic = {\n            semantic: 'WMS',\n            token: '*'\n        };\n        sdpObject.groups = [\n            {\n                mids: Array.from(this._mids.keys()).join(' '),\n                type: 'BUNDLE'\n            }\n        ];\n        sdpObject.media = [];\n\n        // DTLS fingerprint.\n        sdpObject.fingerprint = {\n            hash: localDtlsParameters.fingerprints[0].value,\n            type: localDtlsParameters.fingerprints[0].algorithm\n        };\n\n        // Let's check whether there is video RTX.\n        let hasVideoRtx = false;\n\n        for (const codec of localCapabilities.codecs) {\n            if (codec.kind === 'video' && codec.name === 'rtx') {\n                hasVideoRtx = true;\n                break;\n            }\n        }\n\n        // Add m= sections.\n        for (const [ mid, kind ] of this._mids) {\n            addMediaSection.call(this, mid, kind);\n        }\n\n        // Create a RTCSessionDescription.\n        const localDescription = new RTCSessionDescription({\n            type,\n            _sdpObject: sdpObject\n        });\n\n        logger.debug('_createLocalDescription():', localDescription);\n\n        return localDescription;\n\n        /**\n         * Add a m= section.\n         */\n        function addMediaSection(mid, kind) {\n            const mediaObject = {};\n\n            // m= line.\n            mediaObject.type = kind;\n\n            switch (kind) {\n            case 'audio':\n            case 'video':\n                mediaObject.protocol = 'RTP/SAVPF';\n                mediaObject.port = 9;\n                mediaObject.direction = 'sendrecv';\n                break;\n            case 'application':\n                mediaObject.protocol = 'DTLS/SCTP';\n                mediaObject.port = 0; // Reject m section.\n                mediaObject.payloads = '0'; // Just put something.\n                mediaObject.direction = 'inactive';\n                break;\n            }\n\n            // c= line.\n            mediaObject.connection = {\n                ip: '127.0.0.1',\n                version: 4\n            };\n\n            // a=mid attribute.\n            mediaObject.mid = mid;\n\n            // ICE.\n            mediaObject.iceUfrag = localIceParameters.usernameFragment;\n            mediaObject.icePwd = localIceParameters.password;\n            mediaObject.candidates = [];\n\n            for (const candidate of localIceCandidates) {\n                const candidateObject = {};\n\n                // rtcp-mux is assumed, so component is always 1 (RTP).\n                candidateObject.component = 1;\n                candidateObject.foundation = candidate.foundation;\n                candidateObject.ip = candidate.ip;\n                candidateObject.port = candidate.port;\n                candidateObject.priority = candidate.priority;\n                candidateObject.transport\n                    = candidate.protocol.toLowerCase();\n                candidateObject.type = candidate.type;\n                if (candidateObject.transport === 'tcp') {\n                    candidateObject.tcptype = candidate.tcpType;\n                }\n\n                mediaObject.candidates.push(candidateObject);\n            }\n\n            mediaObject.endOfCandidates = 'end-of-candidates';\n\n            // DTLS.\n            // If 'offer' always use 'actpass'.\n            if (type === 'offer') {\n                mediaObject.setup = 'actpass';\n            } else {\n                mediaObject.setup = remoteDtlsParameters.role === 'server'\n                    ? 'active' : 'passive';\n            }\n\n            if (kind === 'audio' || kind === 'video') {\n                mediaObject.rtp = [];\n                mediaObject.rtcpFb = [];\n                mediaObject.fmtp = [];\n\n                // Array of payload types.\n                const payloads = [];\n\n                // Add codecs.\n                for (const codec of localCapabilities.codecs) {\n                    if (codec.kind && codec.kind !== kind) {\n                        continue; // eslint-disable-line no-continue\n                    }\n\n                    payloads.push(codec.preferredPayloadType);\n\n                    const rtpObject = {\n                        codec: codec.name,\n                        payload: codec.preferredPayloadType,\n                        rate: codec.clockRate\n                    };\n\n                    if (codec.numChannels > 1) {\n                        rtpObject.encoding = codec.numChannels;\n                    }\n\n                    mediaObject.rtp.push(rtpObject);\n\n                    // If codec has parameters add them into a=fmtp attributes.\n                    if (codec.parameters) {\n                        const paramFmtp = {\n                            config: '',\n                            payload: codec.preferredPayloadType\n                        };\n\n                        for (const name of Object.keys(codec.parameters)) {\n                            /* eslint-disable max-depth */\n                            if (paramFmtp.config) {\n                                paramFmtp.config += ';';\n                            }\n                            /* eslint-enable max-depth */\n\n                            paramFmtp.config\n                                += `${name}=${codec.parameters[name]}`;\n                        }\n\n                        if (paramFmtp.config) {\n                            mediaObject.fmtp.push(paramFmtp);\n                        }\n                    }\n\n                    // Set RTCP feedback.\n                    for (const fb of codec.rtcpFeedback || []) {\n                        mediaObject.rtcpFb.push({\n                            payload: codec.preferredPayloadType,\n                            subtype: fb.parameter || undefined,\n                            type: fb.type\n                        });\n                    }\n                }\n\n                // If there are no codecs, set this m section as unavailable.\n                if (payloads.length === 0) {\n                    mediaObject.payloads = '9'; // Just put something.\n                    mediaObject.port = 0;\n                    mediaObject.direction = 'inactive';\n                } else {\n                    mediaObject.payloads = payloads.join(' ');\n                }\n\n                // SSRCs.\n                mediaObject.ssrcs = [];\n                mediaObject.ssrcGroups = [];\n\n                // Add RTP sending stuff.\n                for (const info of localTrackInfos.values()) {\n                    const rtpSender = info.rtpSender;\n                    const streamId = info.stream.id;\n                    const track = rtpSender.track;\n\n                    // Ignore if ended.\n                    if (track.readyState === 'ended') {\n                        continue; // eslint-disable-line no-continue\n                    }\n\n                    if (track.kind !== kind) {\n                        continue; // eslint-disable-line no-continue\n                    }\n\n                    // Set a random provisional SSRC if not set.\n                    if (!info.ssrc) {\n                        info.ssrc = SDPUtil.generateSsrc();\n                    }\n\n                    // Whether RTX should be enabled.\n                    const enableRtx = hasVideoRtx && track.kind === 'video';\n\n                    // Set a random provisional RTX SSRC if not set.\n                    if (enableRtx && !info.rtxSsrc) {\n                        info.rtxSsrc = info.ssrc + 1;\n                    }\n\n                    mediaObject.ssrcs.push({\n                        attribute: 'cname',\n                        id: info.ssrc,\n                        value: CNAME\n                    });\n\n                    mediaObject.ssrcs.push({\n                        attribute: 'msid',\n                        id: info.ssrc,\n                        value: `${streamId} ${track.id}`\n                    });\n\n                    mediaObject.ssrcs.push({\n                        attribute: 'mslabel',\n                        id: info.ssrc,\n                        value: streamId\n                    });\n\n                    mediaObject.ssrcs.push({\n                        attribute: 'label',\n                        id: info.ssrc,\n                        value: track.id\n                    });\n\n                    if (enableRtx) {\n                        mediaObject.ssrcs.push({\n                            attribute: 'cname',\n                            id: info.rtxSsrc,\n                            value: CNAME\n                        });\n\n                        mediaObject.ssrcs.push({\n                            attribute: 'msid',\n                            id: info.rtxSsrc,\n                            value: `${streamId} ${track.id}`\n                        });\n\n                        mediaObject.ssrcs.push({\n                            attribute: 'mslabel',\n                            id: info.rtxSsrc,\n                            value: streamId\n                        });\n\n                        mediaObject.ssrcs.push({\n                            attribute: 'label',\n                            id: info.rtxSsrc,\n                            value: track.id\n                        });\n\n                        mediaObject.ssrcGroups.push({\n                            semantics: 'FID',\n                            ssrcs: `${info.ssrc} ${info.rtxSsrc}`\n                        });\n                    }\n                }\n\n                // RTP header extensions.\n                mediaObject.ext = [];\n\n                for (const extension of localCapabilities.headerExtensions) {\n                    if (extension.kind && extension.kind !== kind) {\n                        continue; // eslint-disable-line no-continue\n                    }\n\n                    mediaObject.ext.push({\n                        value: extension.preferredId,\n                        uri: extension.uri\n                    });\n                }\n\n                // a=rtcp-mux attribute.\n                mediaObject.rtcpMux = 'rtcp-mux';\n\n                // a=rtcp-rsize.\n                mediaObject.rtcpRsize = 'rtcp-rsize';\n            }\n\n            // Add the media section.\n            sdpObject.media.push(mediaObject);\n        }\n    }\n\n    /**\n     * Promise based implementation for createOffer().\n     * @returns {Promise}\n     * @private\n     */\n    _createOffer(options) { // eslint-disable-line no-unused-vars\n        if (this._closed) {\n            return Promise.reject(\n                new InvalidStateError('RTCPeerConnection closed'));\n        }\n\n        if (this.signalingState !== RTCSignalingState.stable) {\n            return Promise.reject(new InvalidStateError(\n                `invalid signalingState \"${this.signalingState}\"`));\n        }\n\n        // NOTE: P2P mode not yet supported, so createOffer() should never be\n        // called.\n        return Promise.reject(new Error('createoOffer() not yet supported'));\n    }\n\n    /**\n     * Emit 'addstream' event.\n     * @private\n     */\n    _emitAddStream(stream) {\n        if (this._closed) {\n            return;\n        }\n\n        logger.debug('emitting \"addstream\"');\n\n        const event = new yaeti.Event('addstream');\n\n        event.stream = stream;\n        this.dispatchEvent(event);\n    }\n\n    /**\n     * May emit buffered ICE candidates.\n     * @private\n     */\n    _emitBufferedIceCandidates() {\n        if (this._closed) {\n            return;\n        }\n\n        for (const sdpCandidate of this._bufferedIceCandidates) {\n            if (!sdpCandidate) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            // Now we have set the MID values of the SDP O/A, so let's fill the\n            // sdpMIndex of the candidate.\n            sdpCandidate.sdpMIndex = this._mids.keys().next().value;\n\n            logger.debug(\n                'emitting buffered \"icecandidate\", candidate:', sdpCandidate);\n\n            const event = new yaeti.Event('icecandidate');\n\n            event.candidate = sdpCandidate;\n            this.dispatchEvent(event);\n        }\n\n        this._bufferedIceCandidates = [];\n    }\n\n    /**\n     * May emit 'connectionstatechange' event.\n     * @private\n     */\n    _emitConnectionStateChange() {\n        if (this._closed && this.connectionState !== 'closed') {\n            return;\n        }\n\n        logger.debug(\n            'emitting \"connectionstatechange\", connectionState:',\n            this.connectionState);\n\n        const event = new yaeti.Event('connectionstatechange');\n\n        this.dispatchEvent(event);\n    }\n\n    /**\n     * May emit 'icecandidate' event.\n     * @private\n     */\n    _emitIceCandidate(candidate) {\n        if (this._closed) {\n            return;\n        }\n\n        let sdpCandidate = null;\n\n        if (candidate) {\n            // NOTE: We assume BUNDLE so let's just emit candidates for the\n            // first m= section.\n            const sdpMIndex = this._mids.keys().next().value;\n            const sdpMLineIndex = 0;\n            let sdpAttribute\n                = `candidate:${candidate.foundation} 1 ${candidate.protocol}`\n                + ` ${candidate.priority} ${candidate.ip} ${candidate.port}`\n                + ` typ ${candidate.type}`;\n\n            if (candidate.relatedAddress) {\n                sdpAttribute += ` raddr ${candidate.relatedAddress}`;\n            }\n            if (candidate.relatedPort) {\n                sdpAttribute += ` rport ${candidate.relatedPort}`;\n            }\n            if (candidate.protocol === 'tcp') {\n                sdpAttribute += ` tcptype ${candidate.tcpType}`;\n            }\n\n            sdpCandidate = {\n                candidate: sdpAttribute,\n                component: 1, // rtcp-mux assumed, so always 1 (RTP).\n                foundation: candidate.foundation,\n                ip: candidate.ip,\n                port: candidate.port,\n                priority: candidate.priority,\n                protocol: candidate.protocol,\n                type: candidate.type,\n                sdpMIndex,\n                sdpMLineIndex\n            };\n\n            if (candidate.protocol === 'tcp') {\n                sdpCandidate.tcptype = candidate.tcpType;\n            }\n            if (candidate.relatedAddress) {\n                sdpCandidate.relatedAddress = candidate.relatedAddress;\n            }\n            if (candidate.relatedPort) {\n                sdpCandidate.relatedPort = candidate.relatedPort;\n            }\n        }\n\n        // If we don't have yet a local description, buffer the candidate.\n        if (this._localDescription) {\n            logger.debug(\n                'emitting \"icecandidate\", candidate:', sdpCandidate);\n\n            const event = new yaeti.Event('icecandidate');\n\n            event.candidate = sdpCandidate;\n            this.dispatchEvent(event);\n        } else {\n            logger.debug(\n                'buffering gathered ICE candidate:', sdpCandidate);\n\n            this._bufferedIceCandidates.push(sdpCandidate);\n        }\n    }\n\n    /**\n     * May emit 'iceconnectionstatechange' event.\n     * @private\n     */\n    _emitIceConnectionStateChange() {\n        if (this._closed && this.iceConnectionState !== 'closed') {\n            return;\n        }\n\n        logger.debug(\n            'emitting \"iceconnectionstatechange\", iceConnectionState:',\n            this.iceConnectionState);\n\n        const event = new yaeti.Event('iceconnectionstatechange');\n\n        this.dispatchEvent(event);\n    }\n\n    /**\n     * May emit 'negotiationneeded' event.\n     * @private\n     */\n    _emitNegotiationNeeded() {\n        // Ignore if signalingState is not 'stable'.\n        if (this.signalingState !== RTCSignalingState.stable) {\n            return;\n        }\n\n        logger.debug('emitting \"negotiationneeded\"');\n\n        const event = new yaeti.Event('negotiationneeded');\n\n        this.dispatchEvent(event);\n    }\n\n    /**\n     * Emit 'removestream' event.\n     * @private\n     */\n    _emitRemoveStream(stream) {\n        if (this._closed) {\n            return;\n        }\n\n        logger.debug('emitting \"removestream\"');\n\n        const event = new yaeti.Event('removestream');\n\n        event.stream = stream;\n        this.dispatchEvent(event);\n    }\n\n    /**\n     * Get RTP parameters for a RTCRtpReceiver.\n     * @private\n     * @return {RTCRtpParameters}\n     */\n    _getParametersForRtpReceiver(kind, data) {\n        const ssrc = data.ssrc;\n        const rtxSsrc = data.rtxSsrc;\n        const cname = data.cname;\n        const localCapabilities = this._localCapabilities;\n        const parameters = {\n            codecs: [],\n            degradationPreference: 'balanced',\n            encodings: [],\n            headerExtensions: [],\n            muxId: '',\n            rtcp: {\n                cname,\n                compound: true, // NOTE: Implemented in Edge.\n                mux: true,\n                reducedSize: true // NOTE: Not yet implemented in Edge.\n            }\n        };\n\n        const codecs = [];\n        let codecPayloadType;\n\n        for (const codecCapability of localCapabilities.codecs) {\n            if (codecCapability.kind !== kind\n                || codecCapability.name === 'rtx') {\n                continue; // eslint-disable-line no-continue\n            }\n\n            codecPayloadType = codecCapability.preferredPayloadType;\n            codecs.push({\n                clockRate: codecCapability.clockRate,\n                maxptime: codecCapability.maxptime,\n                mimeType: codecCapability.mimeType,\n                name: codecCapability.name,\n                numChannels: codecCapability.numChannels,\n                parameters: codecCapability.parameters,\n                payloadType: codecCapability.preferredPayloadType,\n                ptime: codecCapability.ptime,\n                rtcpFeedback: codecCapability.rtcpFeedback\n            });\n\n            break;\n        }\n\n        if (rtxSsrc) {\n            for (const codecCapability of localCapabilities.codecs) {\n                if (codecCapability.kind !== kind\n                    || codecCapability.name !== 'rtx') {\n                    continue; // eslint-disable-line no-continue\n                }\n\n                codecs.push({\n                    clockRate: codecCapability.clockRate,\n                    mimeType: codecCapability.mimeType,\n                    name: 'rtx',\n                    parameters: codecCapability.parameters,\n                    payloadType: codecCapability.preferredPayloadType,\n                    rtcpFeedback: codecCapability.rtcpFeedback\n                });\n\n                break;\n            }\n        }\n\n        parameters.codecs = codecs;\n\n        const encoding = {\n            active: true,\n            codecPayloadType,\n            ssrc\n        };\n\n        if (rtxSsrc) {\n            encoding.rtx = {\n                ssrc: rtxSsrc\n            };\n        }\n\n        parameters.encodings.push(encoding);\n\n        for (const extension of localCapabilities.headerExtensions) {\n            if (extension.kind !== kind) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            parameters.headerExtensions.push({\n                encrypt: extension.preferredEncrypt,\n                id: extension.preferredId,\n                uri: extension.uri\n            });\n        }\n\n        return parameters;\n    }\n\n    /**\n     * Get RTP parameters for a RTCRtpSender.\n     * @private\n     * @return {RTCRtpParameters}\n     */\n    _getParametersForRtpSender(kind, data) {\n        const ssrc = data.ssrc;\n        const rtxSsrc = data.rtxSsrc;\n        const cname = CNAME;\n        const localCapabilities = this._localCapabilities;\n        const parameters = {\n            codecs: [],\n            degradationPreference: 'balanced',\n            encodings: [],\n            headerExtensions: [],\n            muxId: '',\n            rtcp: {\n                cname,\n                compound: true, // NOTE: Implemented in Edge.\n                mux: true,\n                reducedSize: true // NOTE: Not yet implemented in Edge.\n            }\n        };\n\n        const codecs = [];\n        let codecPayloadType;\n\n        for (const codecCapability of localCapabilities.codecs) {\n            if (codecCapability.kind !== kind\n                || codecCapability.name === 'rtx') {\n                continue; // eslint-disable-line no-continue\n            }\n\n            codecPayloadType = codecCapability.preferredPayloadType;\n            codecs.push({\n                clockRate: codecCapability.clockRate,\n                maxptime: codecCapability.maxptime,\n                mimeType: codecCapability.mimeType,\n                name: codecCapability.name,\n                numChannels: codecCapability.numChannels,\n                parameters: codecCapability.parameters,\n                payloadType: codecCapability.preferredPayloadType,\n                ptime: codecCapability.ptime,\n                rtcpFeedback: codecCapability.rtcpFeedback\n            });\n\n            break;\n        }\n\n        if (rtxSsrc) {\n            for (const codecCapability of localCapabilities.codecs) {\n                if (codecCapability.kind !== kind\n                    || codecCapability.name !== 'rtx') {\n                    continue; // eslint-disable-line no-continue\n                }\n\n                codecs.push({\n                    clockRate: codecCapability.clockRate,\n                    mimeType: codecCapability.mimeType,\n                    name: 'rtx',\n                    parameters: codecCapability.parameters,\n                    payloadType: codecCapability.preferredPayloadType,\n                    rtcpFeedback: codecCapability.rtcpFeedback\n                });\n\n                break;\n            }\n        }\n\n        parameters.codecs = codecs;\n\n        const encoding = {\n            active: true,\n            codecPayloadType,\n            ssrc\n        };\n\n        if (rtxSsrc) {\n            encoding.rtx = {\n                ssrc: rtxSsrc\n            };\n        }\n\n        parameters.encodings.push(encoding);\n\n        for (const extension of localCapabilities.headerExtensions) {\n            if (extension.kind !== kind) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            parameters.headerExtensions.push({\n                encrypt: extension.preferredEncrypt,\n                id: extension.preferredId,\n                uri: extension.uri\n            });\n        }\n\n        return parameters;\n    }\n\n    /**\n     * Promise based implementation for getStats().\n     * @return {Promise} RTCStats dictionary.\n     * @private\n     */\n    _getStats(selector) { // eslint-disable-line no-unused-vars\n        if (this._closed) {\n            return Promise.reject(\n                new InvalidStateError('RTCPeerConnection closed'));\n        }\n\n        const iceGatherer = this._iceGatherer;\n        const iceTransport = this._iceTransport;\n        const rtpSenders = [];\n        const rtpReceivers = [];\n        const promises = [];\n\n        // Get RtpSenders.\n        for (const info of this._localTrackInfos.values()) {\n            const { rtpSender, sending } = info;\n\n            if (sending) {\n                rtpSenders.push(rtpSender);\n            }\n        }\n\n        // Get RtpReceivers.\n        for (const info of this._remoteTrackInfos.values()) {\n            const { rtpReceiver } = info;\n\n            rtpReceivers.push(rtpReceiver);\n        }\n\n        // Collect all the stats.\n\n        if (iceGatherer) {\n            promises.push(\n                iceGatherer.getStats()\n                    .catch(() => null));\n        }\n\n        if (iceTransport) {\n            promises.push(\n                iceTransport.getStats()\n                    .catch(() => null));\n\n            // NOTE: Proprietary stuff in Edge.\n            if (typeof iceTransport.msGetStats === 'function') {\n                promises.push(\n                    iceTransport.msGetStats()\n                        .catch(() => null));\n            }\n        }\n\n        for (const rtpSender of rtpSenders) {\n            const isAudio = rtpSender.track.kind === 'audio';\n\n            promises.push(rtpSender.getStats()\n                .then(data => {\n                    // Remove audioLevel from type=\"track\" stats if this is\n                    // not an audio sender.\n                    if (!isAudio) {\n                        for (const key of Object.keys(data)) {\n                            const stat = data[key];\n\n                            if (stat.type === 'track') {\n                                delete stat.audioLevel;\n                            }\n                        }\n                    }\n\n                    return data;\n                })\n                .catch(() => null));\n        }\n\n        for (const rtpReceiver of rtpReceivers) {\n            const isAudio = rtpReceiver.track.kind === 'audio';\n\n            promises.push(rtpReceiver.getStats()\n                .then(data => {\n                    // Remove audioLevel from type=\"track\" stats if this is\n                    // not an audio receiver.\n                    if (!isAudio) {\n                        for (const key of Object.keys(data)) {\n                            const stat = data[key];\n\n                            if (stat.type === 'track') {\n                                delete stat.audioLevel;\n                            }\n                        }\n                    }\n\n                    return data;\n                })\n                .catch(() => null));\n        }\n\n        return Promise.all(promises)\n            .then(datas => {\n                const stats = {};\n\n                for (const data of datas) {\n                    if (!data) {\n                        continue; // eslint-disable-line no-continue\n                    }\n\n                    for (const key of Object.keys(data)) {\n                        stats[key] = data[key];\n                    }\n                }\n\n                return stats;\n            });\n    }\n\n    /**\n     * Handles the local initial answer.\n     * @return {Promise}\n     * @private\n     */\n    _handleLocalInitialAnswer(desc) {\n        logger.debug('_handleLocalInitialAnswer(), desc:', desc);\n\n        const sdpObject = desc.sdpObject;\n\n        // Update local capabilities as decided by the app.\n        this._localCapabilities = utils.extractCapabilities(sdpObject);\n\n        logger.debug('local capabilities:', this._localCapabilities);\n\n        // NOTE: We assume that the answer given by the app does not change\n        // SSRC or PT values. If so, things won't work as expected.\n    }\n\n    /**\n     * Handles a local re-answer.\n     * @return {Promise}\n     * @private\n     */\n    _handleLocalReAnswer(desc) {\n        logger.debug('_handleLocalReAnswer(), desc:', desc);\n\n        const sdpObject = desc.sdpObject;\n\n        // Update local capabilities as decided by the app.\n        this._localCapabilities = utils.extractCapabilities(sdpObject);\n\n        logger.debug('local capabilities:', this._localCapabilities);\n\n        // NOTE: We assume that the answer given by the app does not change\n        // SSRC or PT values. If so, things won't work as expected.\n    }\n\n    /**\n     * Handles the remote initial offer.\n     * @return {Promise}\n     * @private\n     */\n    _handleRemoteInitialOffer(desc) {\n        logger.debug('_handleRemoteInitialOffer(), desc:', desc);\n\n        const sdpObject = desc.sdpObject;\n\n        // Set MID values.\n        this._mids = utils.extractMids(sdpObject);\n\n        // Get remote RTP capabilities.\n        const remoteCapabilities = utils.extractCapabilities(sdpObject);\n\n        logger.debug('remote capabilities:', remoteCapabilities);\n\n        // Get local RTP capabilities (filter them with remote capabilities).\n        this._localCapabilities\n            = utils.getLocalCapabilities(remoteCapabilities);\n\n        // Start ICE and DTLS.\n        this._startIceAndDtls(desc);\n    }\n\n    /**\n     * Handles a remote re-offer.\n     * @return {Promise}\n     * @private\n     */\n    _handleRemoteReOffer(desc) {\n        logger.debug('_handleRemoteReOffer(), desc:', desc);\n\n        const sdpObject = desc.sdpObject;\n\n        // Update MID values (just in case).\n        this._mids = utils.extractMids(sdpObject);\n\n        // Get remote RTP capabilities (filter them with remote capabilities).\n        const remoteCapabilities = utils.extractCapabilities(sdpObject);\n\n        logger.debug('remote capabilities:', remoteCapabilities);\n\n        // Update local RTP capabilities (just in case).\n        this._localCapabilities\n            = utils.getLocalCapabilities(remoteCapabilities);\n    }\n\n    /**\n     * Start receiving remote media.\n     */\n    _receiveMedia() {\n        logger.debug('_receiveMedia()');\n\n        const currentRemoteSsrcs = new Set(this._remoteTrackInfos.keys());\n        const newRemoteTrackInfos\n            = utils.extractTrackInfos(this._remoteDescription.sdpObject);\n\n        // Map of new remote MediaStream indexed by MediaStream.jitsiRemoteId.\n        const addedRemoteStreams = new Map();\n\n        // Map of remote MediaStream indexed by added MediaStreamTrack.\n        // NOTE: Just filled for already existing streams.\n        const addedRemoteTracks = new Map();\n\n        // Map of remote MediaStream indexed by removed MediaStreamTrack.\n        const removedRemoteTracks = new Map();\n\n        logger.debug(\n            '_receiveMedia() remote track infos:', newRemoteTrackInfos);\n\n        // Check new tracks.\n        for (const [ ssrc, info ] of newRemoteTrackInfos) {\n            // If already handled, ignore it.\n            if (currentRemoteSsrcs.has(ssrc)) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            logger.debug(`_receiveMedia() new remote track, ssrc:${ssrc}`);\n\n            // Otherwise append to the map.\n            this._remoteTrackInfos.set(ssrc, info);\n\n            const kind = info.kind;\n            const rtxSsrc = info.rtxSsrc;\n            const streamRemoteId = info.streamId;\n            const trackRemoteId = info.trackId;\n            const cname = info.cname;\n            const isNewStream = !this._remoteStreams.has(streamRemoteId);\n            let stream;\n\n            if (isNewStream) {\n                logger.debug(\n                    `_receiveMedia() new remote stream, id:${streamRemoteId}`);\n\n                // Create a new MediaStream.\n                stream = new MediaStream();\n\n                // Set custom property with the remote id.\n                stream.jitsiRemoteId = streamRemoteId;\n\n                addedRemoteStreams.set(streamRemoteId, stream);\n                this._remoteStreams.set(streamRemoteId, stream);\n            } else {\n                stream = this._remoteStreams.get(streamRemoteId);\n            }\n\n            const rtpReceiver = new RTCRtpReceiver(this._dtlsTransport, kind);\n            const parameters = this._getParametersForRtpReceiver(kind, {\n                ssrc,\n                rtxSsrc,\n                cname\n            });\n\n            // Store the track into the info object.\n            // NOTE: This should not be needed, but Edge has a bug:\n            //   https://developer.microsoft.com/en-us/microsoft-edge/platform/\n            //   issues/12399497/\n            info.track = rtpReceiver.track;\n\n            // Set error handler.\n            rtpReceiver.onerror = ev => {\n                logger.error('rtpReceiver \"error\" event, event:');\n                logger.error(ev);\n            };\n\n            // Fill the info with the stream and rtpReceiver.\n            info.stream = stream;\n            info.rtpReceiver = rtpReceiver;\n\n            logger.debug(\n                'calling rtpReceiver.receive(), parameters:', parameters);\n\n            // Start receiving media.\n            try {\n                rtpReceiver.receive(parameters);\n\n                // Get the associated MediaStreamTrack.\n                const track = info.track;\n\n                // Set custom property with the remote id.\n                track.jitsiRemoteId = trackRemoteId;\n\n                // Add the track to the stream.\n                stream.addTrack(track);\n\n                if (!addedRemoteStreams.has(streamRemoteId)) {\n                    addedRemoteTracks.set(track, stream);\n                }\n            } catch (error) {\n                logger.error(`rtpReceiver.receive() failed:${error.message}`);\n                logger.error(error);\n            }\n        }\n\n        // Check track removal.\n        for (const ssrc of currentRemoteSsrcs) {\n            if (newRemoteTrackInfos.has(ssrc)) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            logger.debug(`_receiveMedia() remote track removed, ssrc:${ssrc}`);\n\n            const info = this._remoteTrackInfos.get(ssrc);\n            const stream = info.stream;\n            const track = info.track;\n            const rtpReceiver = info.rtpReceiver;\n\n            try {\n                rtpReceiver.stop();\n            } catch (error) {\n                logger.warn(`rtpReceiver.stop() failed:${error}`);\n            }\n\n            removedRemoteTracks.set(track, stream);\n            stream.removeTrack(track);\n            this._remoteTrackInfos.delete(ssrc);\n        }\n\n        // Emit MediaStream 'addtrack' for new tracks in already existing\n        // streams.\n        for (const [ track, stream ] of addedRemoteTracks) {\n            const event = new Event('addtrack');\n\n            event.track = track;\n            stream.dispatchEvent(event);\n        }\n\n        // Emit MediaStream 'removetrack' for removed tracks.\n        for (const [ track, stream ] of removedRemoteTracks) {\n            const event = new Event('removetrack');\n\n            event.track = track;\n            stream.dispatchEvent(event);\n        }\n\n        // Emit RTCPeerConnection 'addstream' for new remote streams.\n        for (const stream of addedRemoteStreams.values()) {\n            // Check whether at least a track was added, otherwise ignore it.\n            if (stream.getTracks().length === 0) {\n                logger.warn(\n                    'ignoring new stream for which no track could be added');\n\n                addedRemoteStreams.delete(stream.jitsiRemoteId);\n                this._remoteStreams.delete(stream.jitsiRemoteId);\n            } else {\n                this._emitAddStream(stream);\n            }\n        }\n\n        // Emit RTCPeerConnection 'removestream' for removed remote streams.\n        for (const [ streamRemoteId, stream ] of this._remoteStreams) {\n            if (stream.getTracks().length > 0) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            this._remoteStreams.delete(streamRemoteId);\n            this._emitRemoveStream(stream);\n        }\n    }\n\n    /**\n     * Implementation for removeStream().\n     * @private\n     */\n    _removeStream(stream) {\n        if (this._closed) {\n            throw new InvalidStateError('RTCPeerConnection closed');\n        }\n\n        // Stop and remove the RTCRtpSender associated to each track.\n        for (const track of stream.getTracks()) {\n            // Ignore if track not present.\n            if (!this._localTrackInfos.has(track.id)) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            const rtpSender = this._localTrackInfos.get(track.id).rtpSender;\n\n            try {\n                rtpSender.stop();\n            } catch (error) {\n                logger.warn(`rtpSender.stop() failed:${error}`);\n            }\n\n            // Remove from the map.\n            this._localTrackInfos.delete(track.id);\n        }\n\n        // It may need to renegotiate.\n        this._emitNegotiationNeeded();\n    }\n\n    /**\n     * Start sending our media to the remote.\n     */\n    _sendMedia() {\n        logger.debug('_sendMedia()');\n\n        for (const info of this._localTrackInfos.values()) {\n            // Ignore if already sending.\n            if (info.sending) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            const rtpSender = info.rtpSender;\n            const ssrc = info.ssrc;\n            const rtxSsrc = info.rtxSsrc;\n            const track = rtpSender.track;\n            const kind = track.kind;\n\n            const parameters = this._getParametersForRtpSender(kind, {\n                ssrc,\n                rtxSsrc\n            });\n\n            logger.debug(\n                'calling rtpSender.send(), parameters:', parameters);\n\n            // Start sending media.\n            try {\n                rtpSender.send(parameters);\n\n                // Update sending field.\n                info.sending = true;\n            } catch (error) {\n                logger.error(`rtpSender.send() failed:${error.message}`);\n                logger.error(error);\n            }\n        }\n    }\n\n    /**\n     * Creates the RTCDtlsTransport.\n     * @private\n     */\n    _setDtlsTransport(iceTransport) {\n        const dtlsTransport = new RTCDtlsTransport(iceTransport);\n\n        // NOTE: Not yet implemented by Edge.\n        dtlsTransport.onstatechange = () => {\n            logger.debug(\n                'dtlsTransport \"statechange\" event, '\n                + `state:${dtlsTransport.state}`);\n\n            this._emitConnectionStateChange();\n        };\n\n        // NOTE: Not standard, but implemented by Edge.\n        dtlsTransport.ondtlsstatechange = () => {\n            logger.debug(\n                'dtlsTransport \"dtlsstatechange\" event, '\n                + `state:${dtlsTransport.state}`);\n\n            this._emitConnectionStateChange();\n        };\n\n        dtlsTransport.onerror = ev => {\n            let message;\n\n            if (ev.message) {\n                message = ev.message;\n            } else if (ev.error) {\n                message = ev.error.message;\n            }\n\n            logger.error(`dtlsTransport \"error\" event, message:${message}`);\n\n            // TODO: Edge does not set state to 'failed' on error. We may\n            // hack it.\n\n            this._emitConnectionStateChange();\n        };\n\n        this._dtlsTransport = dtlsTransport;\n    }\n\n    /**\n     * Creates the RTCIceGatherer.\n     * @private\n     */\n    _setIceGatherer(pcConfig) {\n        const iceGatherOptions = {\n            gatherPolicy: pcConfig.iceTransportPolicy || 'all',\n            iceServers: pcConfig.iceServers || []\n        };\n        const iceGatherer = new RTCIceGatherer(iceGatherOptions);\n\n        // NOTE: Not yet implemented by Edge.\n        iceGatherer.onstatechange = () => {\n            logger.debug(\n                `iceGatherer \"statechange\" event, state:${iceGatherer.state}`);\n\n            this._updateAndEmitIceGatheringStateChange(iceGatherer.state);\n        };\n\n        iceGatherer.onlocalcandidate = ev => {\n            let candidate = ev.candidate;\n\n            // NOTE: Not yet implemented by Edge.\n            const complete = ev.complete;\n\n            logger.debug(\n                'iceGatherer \"localcandidate\" event, candidate:', candidate);\n\n            // NOTE: Instead of null candidate or complete:true, current Edge\n            // signals end of gathering with an empty candidate object.\n            if (complete\n                || !candidate\n                || Object.keys(candidate).length === 0) {\n\n                candidate = null;\n\n                this._updateAndEmitIceGatheringStateChange(\n                    RTCIceGatheringState.complete);\n                this._emitIceCandidate(null);\n            } else {\n                this._emitIceCandidate(candidate);\n            }\n        };\n\n        iceGatherer.onerror = ev => {\n            const errorCode = ev.errorCode;\n            const errorText = ev.errorText;\n\n            logger.error(\n                `iceGatherer \"error\" event, errorCode:${errorCode}, `\n                + `errorText:${errorText}`);\n        };\n\n        // NOTE: Not yet implemented by Edge, which starts gathering\n        // automatically.\n        try {\n            iceGatherer.gather();\n        } catch (error) {\n            logger.warn(`iceGatherer.gather() failed:${error}`);\n        }\n\n        this._iceGatherer = iceGatherer;\n    }\n\n    /**\n     * Creates the RTCIceTransport.\n     * @private\n     */\n    _setIceTransport(iceGatherer) {\n        const iceTransport = new RTCIceTransport(iceGatherer);\n\n        // NOTE: Not yet implemented by Edge.\n        iceTransport.onstatechange = () => {\n            logger.debug(\n                'iceTransport \"statechange\" event, '\n                + `state:${iceTransport.state}`);\n\n            this._emitIceConnectionStateChange();\n        };\n\n        // NOTE: Not standard, but implemented by Edge.\n        iceTransport.onicestatechange = () => {\n            logger.debug(\n                'iceTransport \"icestatechange\" event, '\n                + `state:${iceTransport.state}`);\n\n            if (iceTransport.state === 'completed') {\n                logger.debug(\n                    'nominated candidate pair:',\n                    iceTransport.getNominatedCandidatePair());\n            }\n\n            this._emitIceConnectionStateChange();\n        };\n\n        iceTransport.oncandidatepairchange = ev => {\n            logger.debug(\n                'iceTransport \"candidatepairchange\" event, '\n                + `pair:${ev.pair}`);\n        };\n\n        this._iceTransport = iceTransport;\n    }\n\n    /**\n     * Promise based implementation for setLocalDescription().\n     * @returns {Promise}\n     * @private\n     */\n    _setLocalDescription(desc) {\n        if (this._closed) {\n            return Promise.reject(\n                new InvalidStateError('RTCPeerConnection closed'));\n        }\n\n        let localDescription;\n\n        try {\n            localDescription = new RTCSessionDescription(desc);\n        } catch (error) {\n            return Promise.reject(new TypeError(\n                `invalid RTCSessionDescriptionInit: ${error}`));\n        }\n\n        switch (desc.type) {\n        case 'offer': {\n            if (this.signalingState !== RTCSignalingState.stable) {\n                return Promise.reject(new InvalidStateError(\n                    `invalid signalingState \"${this.signalingState}\"`));\n            }\n\n            // NOTE: P2P mode not yet supported, so createOffer() should never\n            // has been called, neither setLocalDescription() with an offer.\n            return Promise.reject(new TypeError(\n                'setLocalDescription() with type \"offer\" not supported'));\n        }\n        case 'answer': {\n            if (this.signalingState !== RTCSignalingState.haveRemoteOffer) {\n                return Promise.reject(new InvalidStateError(\n                    `invalid signalingState \"${this.signalingState}\"`));\n            }\n\n            const isLocalInitialAnswer = Boolean(!this._localDescription);\n\n            return Promise.resolve()\n                .then(() => {\n                    // Different handling for initial answer and re-answer.\n                    if (isLocalInitialAnswer) {\n                        return this._handleLocalInitialAnswer(localDescription);\n                    } else { // eslint-disable-line no-else-return\n                        return this._handleLocalReAnswer(localDescription);\n                    }\n                })\n                .then(() => {\n                    logger.debug('setLocalDescription() succeed');\n\n                    // Update local description.\n                    this._localDescription = localDescription;\n\n                    // Update signaling state.\n                    this._updateAndEmitSignalingStateChange(\n                        RTCSignalingState.stable);\n\n                    // If initial answer, emit buffered ICE candidates.\n                    if (isLocalInitialAnswer) {\n                        this._emitBufferedIceCandidates();\n                    }\n\n                    // Send our RTP.\n                    this._sendMedia();\n\n                    // Receive remote RTP.\n                    this._receiveMedia();\n                })\n                .catch(error => {\n                    logger.error(\n                        `setLocalDescription() failed: ${error.message}`);\n                    logger.error(error);\n\n                    throw error;\n                });\n        }\n        default:\n            return Promise.reject(new TypeError(\n                `unsupported description.type \"${desc.type}\"`));\n        }\n    }\n\n    /**\n     * Promise based implementation for setRemoteDescription().\n     * @returns {Promise}\n     * @private\n     */\n    _setRemoteDescription(desc) {\n        if (this._closed) {\n            return Promise.reject(\n                new InvalidStateError('RTCPeerConnection closed'));\n        }\n\n        let remoteDescription;\n\n        try {\n            remoteDescription = new RTCSessionDescription(desc);\n        } catch (error) {\n            return Promise.reject(new TypeError(\n                `invalid RTCSessionDescriptionInit: ${error}`));\n        }\n\n        switch (desc.type) {\n        case 'offer': {\n            if (this.signalingState !== RTCSignalingState.stable) {\n                return Promise.reject(new InvalidStateError(\n                    `invalid signalingState \"${this.signalingState}\"`));\n            }\n\n            const isRemoteInitialOffer = Boolean(!this._remoteDescription);\n\n            return Promise.resolve()\n                .then(() => {\n                    // Different handling for initial answer and re-answer.\n                    if (isRemoteInitialOffer) {\n                        return this._handleRemoteInitialOffer(\n                            remoteDescription);\n                    } else { // eslint-disable-line no-else-return\n                        return this._handleRemoteReOffer(remoteDescription);\n                    }\n                })\n                .then(() => {\n                    logger.debug('setRemoteDescription() succeed');\n\n                    // Update remote description.\n                    this._remoteDescription = remoteDescription;\n\n                    // Update signaling state.\n                    this._updateAndEmitSignalingStateChange(\n                        RTCSignalingState.haveRemoteOffer);\n                })\n                .catch(error => {\n                    logger.error(`setRemoteDescription() failed: ${error}`);\n\n                    throw error;\n                });\n        }\n        case 'answer': {\n            if (this.signalingState !== RTCSignalingState.haveLocalOffer) {\n                return Promise.reject(new InvalidStateError(\n                    `invalid signalingState \"${this.signalingState}\"`));\n            }\n\n            // NOTE: P2P mode not yet supported, so createOffer() should never\n            // has been called, neither setRemoteDescription() with an answer.\n            return Promise.reject(new TypeError(\n                'setRemoteDescription() with type \"answer\" not supported'));\n        }\n        default:\n            return Promise.reject(new TypeError(\n                `unsupported description.type \"${desc.type}\"`));\n        }\n    }\n\n    /**\n     * Start ICE and DTLS connection procedures.\n     * @param {RTCSessionDescription} desc - Remote description.\n     */\n    _startIceAndDtls(desc) {\n        const sdpObject = desc.sdpObject;\n        const remoteIceParameters\n            = utils.extractIceParameters(sdpObject);\n        const remoteIceCandidates\n            = utils.extractIceCandidates(sdpObject);\n        const remoteDtlsParameters\n            = utils.extractDtlsParameters(sdpObject);\n\n        // Start the RTCIceTransport.\n        switch (desc.type) {\n        case 'offer':\n            this._iceTransport.start(\n                this._iceGatherer, remoteIceParameters, 'controlled');\n            break;\n        case 'answer':\n            this._iceTransport.start(\n                this._iceGatherer, remoteIceParameters, 'controlling');\n            break;\n        }\n\n        // Add remote ICE candidates.\n        // NOTE: Remove candidates that Edge doesn't like.\n        for (const candidate of remoteIceCandidates) {\n            if (candidate.port === 0 || candidate.port === 9) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            this._iceTransport.addRemoteCandidate(candidate);\n        }\n\n        // Also signal a 'complete' candidate as per spec.\n        // NOTE: It should be {complete: true} but Edge prefers {}.\n        // NOTE: We know that addCandidate() is never used so we need to signal\n        // end of candidates (otherwise the RTCIceTransport never enters the\n        // 'completed' state).\n        this._iceTransport.addRemoteCandidate({});\n\n        // Set desired remote DTLS role (as we receive the offer).\n        switch (desc.type) {\n        case 'offer':\n            remoteDtlsParameters.role = 'server';\n            break;\n        case 'answer':\n            remoteDtlsParameters.role = 'client';\n            break;\n        }\n\n        // Start RTCDtlsTransport.\n        this._dtlsTransport.start(remoteDtlsParameters);\n    }\n\n    /**\n     * May update iceGatheringState and emit 'icegatheringstatechange' event.\n     * @private\n     */\n    _updateAndEmitIceGatheringStateChange(state) {\n        if (this._closed || state === this.iceGatheringState) {\n            return;\n        }\n\n        this._iceGatheringState = state;\n\n        logger.debug(\n            'emitting \"icegatheringstatechange\", iceGatheringState:',\n            this.iceGatheringState);\n\n        const event = new yaeti.Event('icegatheringstatechange');\n\n        this.dispatchEvent(event);\n    }\n\n    /**\n     * May update signalingState and emit 'signalingstatechange' event.\n     * @private\n     */\n    _updateAndEmitSignalingStateChange(state) {\n        if (state === this.signalingState) {\n            return;\n        }\n\n        this._signalingState = state;\n\n        logger.debug(\n            'emitting \"signalingstatechange\", signalingState:',\n            this.signalingState);\n\n        const event = new yaeti.Event('signalingstatechange');\n\n        this.dispatchEvent(event);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/ortc/RTCPeerConnection.js","module.exports =\n{\n\tEventTarget : require('./lib/EventTarget'),\n\tEvent       : require('./lib/Event')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/yaeti/index.js\n// module id = 122\n// module chunks = 0","function yaetiEventTarget()\n{\n\tthis._listeners = {};\n}\n\nObject.defineProperties(yaetiEventTarget.prototype,\n\t{\n\t\tlisteners:\n\t\t{\n\t\t\tget: function()\n\t\t\t{\n\t\t\t\treturn this._listeners;\n\t\t\t}\n\t\t}\n\t});\n\nyaetiEventTarget.prototype.addEventListener = function(type, newListener)\n{\n\tvar listenersType;\n\tvar i;\n\tvar listener;\n\n\tif (!type || !newListener)\n\t\treturn;\n\n\tlistenersType = this._listeners[type];\n\n\tif (listenersType === undefined)\n\t\tthis._listeners[type] = listenersType = [];\n\n\tfor (i = 0; !!(listener = listenersType[i]); i++)\n\t{\n\t\tif (listener === newListener)\n\t\t\treturn;\n\t}\n\n\tlistenersType.push(newListener);\n};\n\nyaetiEventTarget.prototype.removeEventListener = function(type, oldListener)\n{\n\tvar listenersType;\n\tvar i;\n\tvar listener;\n\n\tif (!type || !oldListener)\n\t\treturn;\n\n\tlistenersType = this._listeners[type];\n\n\tif (listenersType === undefined)\n\t\treturn;\n\n\tfor (i = 0; !!(listener = listenersType[i]); i++)\n\t{\n\t\tif (listener === oldListener)\n\t\t{\n\t\t\tlistenersType.splice(i, 1);\n\t\t\tbreak;\n\t\t}\n\t}\n\n\tif (listenersType.length === 0)\n\t\tdelete this._listeners[type];\n};\n\nyaetiEventTarget.prototype.dispatchEvent = function(event)\n{\n\tvar type;\n\tvar listenersType;\n\tvar dummyListener;\n\tvar stopImmediatePropagation = false;\n\tvar i;\n\tvar listener;\n\n\tif (!event || typeof event.type !== 'string')\n\t\tthrow new Error('`event` must have a valid `type` property');\n\n\t// Do some stuff to emulate DOM Event behavior (just if this is not a\n\t// DOM Event object).\n\tif (event._yaeti)\n\t{\n\t\tevent.target = this;\n\t\tevent.cancelable = true;\n\t}\n\n\t// Attempt to override the stopImmediatePropagation() method.\n\ttry\n\t{\n\t\tevent.stopImmediatePropagation = function()\n\t\t{\n\t\t\tstopImmediatePropagation = true;\n\t\t};\n\t}\n\tcatch (error)\n\t{}\n\n\ttype = event.type;\n\tlistenersType = (this._listeners[type] || []);\n\n\tdummyListener = this['on' + type];\n\n\tif (typeof dummyListener === 'function')\n\t{\n\t\ttry\n\t\t{\n\t\t\tdummyListener.call(this, event);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\tfor (i = 0; !!(listener = listenersType[i]); i++)\n\t{\n\t\tif (stopImmediatePropagation)\n\t\t\tbreak;\n\n\t\ttry\n\t\t{\n\t\t\tlistener.call(this, event);\n\t\t}\n\t\tcatch (error)\n\t\t{\n\t\t\tconsole.error(error);\n\t\t}\n\t}\n\n\treturn !event.defaultPrevented;\n};\n\nmodule.exports = yaetiEventTarget;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/yaeti/lib/EventTarget.js\n// module id = 123\n// module chunks = 0","/**\n * In browsers export the native Event interface.\n */\n\nmodule.exports = global.Event;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/yaeti/lib/Event.browser.js\n// module id = 124\n// module chunks = 0","import sdpTransform from 'sdp-transform';\n\n/**\n * RTCSessionDescription implementation.\n */\nexport default class RTCSessionDescription {\n    /**\n     * RTCSessionDescription constructor.\n     * @param {Object} [data]\n     * @param {String} [data.type] - 'offer' / 'answer'.\n     * @param {String} [data.sdp] - SDP string.\n     * @param {Object} [data._sdpObject] - SDP object generated by the\n     * sdp-transform library.\n     */\n    constructor(data) {\n        // @type {String}\n        this._sdp = null;\n\n        // @type {Object}\n        this._sdpObject = null;\n\n        // @type {String}\n        this._type = null;\n\n        switch (data.type) {\n        case 'offer':\n            break;\n        case 'answer':\n            break;\n        default:\n            throw new TypeError(`invalid type \"${data.type}\"`);\n        }\n\n        this._type = data.type;\n\n        if (typeof data.sdp === 'string') {\n            this._sdp = data.sdp;\n            try {\n                this._sdpObject = sdpTransform.parse(data.sdp);\n            } catch (error) {\n                throw new Error(`invalid sdp: ${error}`);\n            }\n        } else if (typeof data._sdpObject === 'object') {\n            this._sdpObject = data._sdpObject;\n            try {\n                this._sdp = sdpTransform.write(data._sdpObject);\n            } catch (error) {\n                throw new Error(`invalid sdp object: ${error}`);\n            }\n        } else {\n            throw new TypeError('invalid sdp or _sdpObject');\n        }\n    }\n\n    /**\n     * Get sdp field.\n     * @return {String}\n     */\n    get sdp() {\n        return this._sdp;\n    }\n\n    /**\n     * Set sdp field.\n     * NOTE: This is not allowed per spec, but lib-jitsi-meet uses it.\n     * @param {String} sdp\n     */\n    set sdp(sdp) {\n        try {\n            this._sdpObject = sdpTransform.parse(sdp);\n        } catch (error) {\n            throw new Error(`invalid sdp: ${error}`);\n        }\n\n        this._sdp = sdp;\n    }\n\n    /**\n     * Gets the internal sdp object.\n     * @return {Object}\n     * @private\n     */\n    get sdpObject() {\n        return this._sdpObject;\n    }\n\n    /**\n     * Get type field.\n     * @return {String}\n     */\n    get type() {\n        return this._type;\n    }\n\n    /**\n     * Returns an object with type and sdp fields.\n     * @return {Object}\n     */\n    toJSON() {\n        return {\n            sdp: this._sdp,\n            type: this._type\n        };\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/ortc/RTCSessionDescription.js","var toIntIfInt = function (v) {\n  return String(Number(v)) === v ? Number(v) : v;\n};\n\nvar attachProperties = function (match, location, names, rawName) {\n  if (rawName && !names) {\n    location[rawName] = toIntIfInt(match[1]);\n  }\n  else {\n    for (var i = 0; i < names.length; i += 1) {\n      if (match[i+1] != null) {\n        location[names[i]] = toIntIfInt(match[i+1]);\n      }\n    }\n  }\n};\n\nvar parseReg = function (obj, location, content) {\n  var needsBlank = obj.name && obj.names;\n  if (obj.push && !location[obj.push]) {\n    location[obj.push] = [];\n  }\n  else if (needsBlank && !location[obj.name]) {\n    location[obj.name] = {};\n  }\n  var keyLocation = obj.push ?\n    {} :  // blank object that will be pushed\n    needsBlank ? location[obj.name] : location; // otherwise, named location or root\n\n  attachProperties(content.match(obj.reg), keyLocation, obj.names, obj.name);\n\n  if (obj.push) {\n    location[obj.push].push(keyLocation);\n  }\n};\n\nvar grammar = require('./grammar');\nvar validLine = RegExp.prototype.test.bind(/^([a-z])=(.*)/);\n\nexports.parse = function (sdp) {\n  var session = {}\n    , media = []\n    , location = session; // points at where properties go under (one of the above)\n\n  // parse lines we understand\n  sdp.split(/(\\r\\n|\\r|\\n)/).filter(validLine).forEach(function (l) {\n    var type = l[0];\n    var content = l.slice(2);\n    if (type === 'm') {\n      media.push({rtp: [], fmtp: []});\n      location = media[media.length-1]; // point at latest media line\n    }\n\n    for (var j = 0; j < (grammar[type] || []).length; j += 1) {\n      var obj = grammar[type][j];\n      if (obj.reg.test(content)) {\n        return parseReg(obj, location, content);\n      }\n    }\n  });\n\n  session.media = media; // link it up\n  return session;\n};\n\nvar paramReducer = function (acc, expr) {\n  var s = expr.split(/=(.+)/, 2);\n  if (s.length === 2) {\n    acc[s[0]] = toIntIfInt(s[1]);\n  }\n  return acc;\n};\n\nexports.parseParams = function (str) {\n  return str.split(/\\;\\s?/).reduce(paramReducer, {});\n};\n\n// For backward compatibility - alias will be removed in 3.0.0\nexports.parseFmtpConfig = exports.parseParams;\n\nexports.parsePayloads = function (str) {\n  return str.split(' ').map(Number);\n};\n\nexports.parseRemoteCandidates = function (str) {\n  var candidates = [];\n  var parts = str.split(' ').map(toIntIfInt);\n  for (var i = 0; i < parts.length; i += 3) {\n    candidates.push({\n      component: parts[i],\n      ip: parts[i + 1],\n      port: parts[i + 2]\n    });\n  }\n  return candidates;\n};\n\nexports.parseImageAttributes = function (str) {\n  return str.split(' ').map(function (item) {\n    return item.substring(1, item.length-1).split(',').reduce(paramReducer, {});\n  });\n};\n\nexports.parseSimulcastStreamList = function (str) {\n  return str.split(';').map(function (stream) {\n    return stream.split(',').map(function (format) {\n      var scid, paused = false;\n\n      if (format[0] !== '~') {\n        scid = toIntIfInt(format);\n      } else {\n        scid = toIntIfInt(format.substring(1, format.length));\n        paused = true;\n      }\n\n      return {\n        scid: scid,\n        paused: paused\n      };\n    });\n  });\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp-transform/lib/parser.js\n// module id = 126\n// module chunks = 0","var grammar = require('./grammar');\n\n// customized util.format - discards excess arguments and can void middle ones\nvar formatRegExp = /%[sdv%]/g;\nvar format = function (formatStr) {\n  var i = 1;\n  var args = arguments;\n  var len = args.length;\n  return formatStr.replace(formatRegExp, function (x) {\n    if (i >= len) {\n      return x; // missing argument\n    }\n    var arg = args[i];\n    i += 1;\n    switch (x) {\n    case '%%':\n      return '%';\n    case '%s':\n      return String(arg);\n    case '%d':\n      return Number(arg);\n    case '%v':\n      return '';\n    }\n  });\n  // NB: we discard excess arguments - they are typically undefined from makeLine\n};\n\nvar makeLine = function (type, obj, location) {\n  var str = obj.format instanceof Function ?\n    (obj.format(obj.push ? location : location[obj.name])) :\n    obj.format;\n\n  var args = [type + '=' + str];\n  if (obj.names) {\n    for (var i = 0; i < obj.names.length; i += 1) {\n      var n = obj.names[i];\n      if (obj.name) {\n        args.push(location[obj.name][n]);\n      }\n      else { // for mLine and push attributes\n        args.push(location[obj.names[i]]);\n      }\n    }\n  }\n  else {\n    args.push(location[obj.name]);\n  }\n  return format.apply(null, args);\n};\n\n// RFC specified order\n// TODO: extend this with all the rest\nvar defaultOuterOrder = [\n  'v', 'o', 's', 'i',\n  'u', 'e', 'p', 'c',\n  'b', 't', 'r', 'z', 'a'\n];\nvar defaultInnerOrder = ['i', 'c', 'b', 'a'];\n\n\nmodule.exports = function (session, opts) {\n  opts = opts || {};\n  // ensure certain properties exist\n  if (session.version == null) {\n    session.version = 0; // 'v=0' must be there (only defined version atm)\n  }\n  if (session.name == null) {\n    session.name = ' '; // 's= ' must be there if no meaningful name set\n  }\n  session.media.forEach(function (mLine) {\n    if (mLine.payloads == null) {\n      mLine.payloads = '';\n    }\n  });\n\n  var outerOrder = opts.outerOrder || defaultOuterOrder;\n  var innerOrder = opts.innerOrder || defaultInnerOrder;\n  var sdp = [];\n\n  // loop through outerOrder for matching properties on session\n  outerOrder.forEach(function (type) {\n    grammar[type].forEach(function (obj) {\n      if (obj.name in session && session[obj.name] != null) {\n        sdp.push(makeLine(type, obj, session));\n      }\n      else if (obj.push in session && session[obj.push] != null) {\n        session[obj.push].forEach(function (el) {\n          sdp.push(makeLine(type, obj, el));\n        });\n      }\n    });\n  });\n\n  // then for each media line, follow the innerOrder\n  session.media.forEach(function (mLine) {\n    sdp.push(makeLine('m', grammar.m[0], mLine));\n\n    innerOrder.forEach(function (type) {\n      grammar[type].forEach(function (obj) {\n        if (obj.name in mLine && mLine[obj.name] != null) {\n          sdp.push(makeLine(type, obj, mLine));\n        }\n        else if (obj.push in mLine && mLine[obj.push] != null) {\n          mLine[obj.push].forEach(function (el) {\n            sdp.push(makeLine(type, obj, el));\n          });\n        }\n      });\n    });\n  });\n\n  return sdp.join('\\r\\n') + '\\r\\n';\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp-transform/lib/writer.js\n// module id = 127\n// module chunks = 0","/* global RTCRtpReceiver */\n\nimport sdpTransform from 'sdp-transform';\n\n/**\n * Extract RTP capabilities from remote description.\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\n * @return {RTCRtpCapabilities}\n */\nexport function extractCapabilities(sdpObject) {\n    // Map of RtpCodecParameters indexed by payload type.\n    const codecsMap = new Map();\n\n    // Array of RtpHeaderExtensions.\n    const headerExtensions = [];\n\n    for (const m of sdpObject.media) {\n        // Media kind.\n        const kind = m.type;\n\n        if (kind !== 'audio' && kind !== 'video') {\n            continue; // eslint-disable-line no-continue\n        }\n\n        // Get codecs.\n        for (const rtp of m.rtp) {\n            const codec = {\n                clockRate: rtp.rate,\n                kind,\n                mimeType: `${kind}/${rtp.codec}`,\n                name: rtp.codec,\n                numChannels: rtp.encoding || 1,\n                parameters: {},\n                preferredPayloadType: rtp.payload,\n                rtcpFeedback: []\n            };\n\n            codecsMap.set(codec.preferredPayloadType, codec);\n        }\n\n        // Get codec parameters.\n        for (const fmtp of m.fmtp || []) {\n            const parameters = sdpTransform.parseFmtpConfig(fmtp.config);\n            const codec = codecsMap.get(fmtp.payload);\n\n            if (!codec) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            codec.parameters = parameters;\n        }\n\n        // Get RTCP feedback for each codec.\n        for (const fb of m.rtcpFb || []) {\n            const codec = codecsMap.get(fb.payload);\n\n            if (!codec) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            codec.rtcpFeedback.push({\n                parameter: fb.subtype || '',\n                type: fb.type\n            });\n        }\n\n        // Get RTP header extensions.\n        for (const ext of m.ext || []) {\n            const preferredId = ext.value;\n            const uri = ext.uri;\n            const headerExtension = {\n                kind,\n                uri,\n                preferredId\n            };\n\n            // Check if already present.\n            const duplicated = headerExtensions.find(savedHeaderExtension =>\n                headerExtension.kind === savedHeaderExtension.kind\n                    && headerExtension.uri === savedHeaderExtension.uri\n            );\n\n            if (!duplicated) {\n                headerExtensions.push(headerExtension);\n            }\n        }\n    }\n\n    return {\n        codecs: Array.from(codecsMap.values()),\n        fecMechanisms: [], // TODO\n        headerExtensions\n    };\n}\n\n/**\n * Extract DTLS parameters from remote description.\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\n * @return {RTCDtlsParameters}\n */\nexport function extractDtlsParameters(sdpObject) {\n    const media = getFirstActiveMediaSection(sdpObject);\n    const fingerprint = media.fingerprint || sdpObject.fingerprint;\n    let role;\n\n    switch (media.setup) {\n    case 'active':\n        role = 'client';\n        break;\n    case 'passive':\n        role = 'server';\n        break;\n    case 'actpass':\n        role = 'auto';\n        break;\n    }\n\n    return {\n        role,\n        fingerprints: [\n            {\n                algorithm: fingerprint.type,\n                value: fingerprint.hash\n            }\n        ]\n    };\n}\n\n/**\n * Extract ICE candidates from remote description.\n * NOTE: This implementation assumes a single BUNDLEd transport and rtcp-mux.\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\n * @return {sequence<RTCIceCandidate>}\n */\nexport function extractIceCandidates(sdpObject) {\n    const media = getFirstActiveMediaSection(sdpObject);\n    const candidates = [];\n\n    for (const c of media.candidates) {\n        // Ignore RTCP candidates (we assume rtcp-mux).\n        if (c.component !== 1) {\n            continue; // eslint-disable-line no-continue\n        }\n\n        const candidate = {\n            foundation: c.foundation,\n            ip: c.ip,\n            port: c.port,\n            priority: c.priority,\n            protocol: c.transport.toLowerCase(),\n            type: c.type\n        };\n\n        candidates.push(candidate);\n    }\n\n    return candidates;\n}\n\n/**\n * Extract ICE parameters from remote description.\n * NOTE: This implementation assumes a single BUNDLEd transport.\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\n * @return {RTCIceParameters}\n */\nexport function extractIceParameters(sdpObject) {\n    const media = getFirstActiveMediaSection(sdpObject);\n    const usernameFragment = media.iceUfrag;\n    const password = media.icePwd;\n    const icelite = sdpObject.icelite === 'ice-lite';\n\n    return {\n        icelite,\n        password,\n        usernameFragment\n    };\n}\n\n/**\n * Extract MID values from remote description.\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\n * @return {map<String, String>} Ordered Map with MID as key and kind as value.\n */\nexport function extractMids(sdpObject) {\n    const midToKind = new Map();\n\n    // Ignore disabled media sections.\n    for (const m of sdpObject.media) {\n        midToKind.set(m.mid, m.type);\n    }\n\n    return midToKind;\n}\n\n/**\n * Extract tracks information.\n * @param {Object} sdpObject - Remote SDP object generated by sdp-transform.\n * @return {Map}\n */\nexport function extractTrackInfos(sdpObject) {\n    // Map with info about receiving media.\n    // - index: Media SSRC\n    // - value: Object\n    //   - kind: 'audio' / 'video'\n    //   - ssrc: Media SSRC\n    //   - rtxSsrc: RTX SSRC (may be unset)\n    //   - streamId: MediaStream.jitsiRemoteId\n    //   - trackId: MediaStreamTrack.jitsiRemoteId\n    //   - cname: CNAME\n    // @type {map<Number, Object>}\n    const infos = new Map();\n\n    // Map with stream SSRC as index and associated RTX SSRC as value.\n    // @type {map<Number, Number>}\n    const rtxMap = new Map();\n\n    // Set of RTX SSRC values.\n    const rtxSet = new Set();\n\n    for (const m of sdpObject.media) {\n        const kind = m.type;\n\n        if (kind !== 'audio' && kind !== 'video') {\n            continue; // eslint-disable-line no-continue\n        }\n\n        // Get RTX information.\n        for (const ssrcGroup of m.ssrcGroups || []) {\n            // Just consider FID.\n            if (ssrcGroup.semantics !== 'FID') {\n                continue; // eslint-disable-line no-continue\n            }\n\n            const ssrcs\n                = ssrcGroup.ssrcs.split(' ').map(ssrc => Number(ssrc));\n            const ssrc = ssrcs[0];\n            const rtxSsrc = ssrcs[1];\n\n            rtxMap.set(ssrc, rtxSsrc);\n            rtxSet.add(rtxSsrc);\n        }\n\n        for (const ssrcObject of m.ssrcs || []) {\n            const ssrc = ssrcObject.id;\n\n            // Ignore RTX.\n            if (rtxSet.has(ssrc)) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            let info = infos.get(ssrc);\n\n            if (!info) {\n                info = {\n                    kind,\n                    rtxSsrc: rtxMap.get(ssrc),\n                    ssrc\n                };\n\n                infos.set(ssrc, info);\n            }\n\n            switch (ssrcObject.attribute) {\n            case 'cname': {\n                info.cname = ssrcObject.value;\n                break;\n            }\n            case 'msid': {\n                const values = ssrcObject.value.split(' ');\n                const streamId = values[0];\n                const trackId = values[1];\n\n                info.streamId = streamId;\n                info.trackId = trackId;\n                break;\n            }\n            case 'mslabel': {\n                const streamId = ssrcObject.value;\n\n                info.streamId = streamId;\n                break;\n            }\n            case 'label': {\n                const trackId = ssrcObject.value;\n\n                info.trackId = trackId;\n                break;\n            }\n            }\n        }\n    }\n\n    return infos;\n}\n\n/**\n * Get local ORTC RTP capabilities filtered and adapted to the given remote RTP\n * capabilities.\n * @param {RTCRtpCapabilities} filterWithCapabilities - RTP capabilities to\n * filter with.\n * @return {RTCRtpCapabilities}\n */\nexport function getLocalCapabilities(filterWithCapabilities) {\n    const localFullCapabilities = RTCRtpReceiver.getCapabilities();\n    const localCapabilities = {\n        codecs: [],\n        fecMechanisms: [],\n        headerExtensions: []\n    };\n\n    // Map of RTX and codec payloads.\n    // - index: Codec payloadType\n    // - value: Associated RTX payloadType\n    // @type {map<Number, Number>}\n    const remoteRtxMap = new Map();\n\n    // Set codecs.\n    for (const remoteCodec of filterWithCapabilities.codecs) {\n        const remoteCodecName = remoteCodec.name.toLowerCase();\n\n        if (remoteCodecName === 'rtx') {\n            remoteRtxMap.set(\n                remoteCodec.parameters.apt, remoteCodec.preferredPayloadType);\n\n            continue; // eslint-disable-line no-continue\n        }\n\n        const localCodec = localFullCapabilities.codecs.find(codec =>\n            codec.name.toLowerCase() === remoteCodecName\n                && codec.kind === remoteCodec.kind\n                && codec.clockRate === remoteCodec.clockRate\n        );\n\n        if (!localCodec) {\n            continue; // eslint-disable-line no-continue\n        }\n\n        const codec = {\n            clockRate: localCodec.clockRate,\n            kind: localCodec.kind,\n            mimeType: `${localCodec.kind}/${localCodec.name}`,\n            name: localCodec.name,\n            numChannels: localCodec.numChannels || 1,\n            parameters: {},\n            preferredPayloadType: remoteCodec.preferredPayloadType,\n            rtcpFeedback: []\n        };\n\n        for (const remoteParamName of Object.keys(remoteCodec.parameters)) {\n            const remoteParamValue\n                = remoteCodec.parameters[remoteParamName];\n\n            for (const localParamName of Object.keys(localCodec.parameters)) {\n                const localParamValue\n                    = localCodec.parameters[localParamName];\n\n                if (localParamName !== remoteParamName) {\n                    continue; // eslint-disable-line no-continue\n                }\n\n                // TODO: We should consider much more cases here, but Edge\n                // does not support many codec parameters.\n                if (localParamValue === remoteParamValue) {\n                    // Use this RTP parameter.\n                    codec.parameters[localParamName] = localParamValue;\n                    break;\n                }\n            }\n        }\n\n        for (const remoteFb of remoteCodec.rtcpFeedback) {\n            const localFb = localCodec.rtcpFeedback.find(fb =>\n                fb.type === remoteFb.type\n                    && fb.parameter === remoteFb.parameter\n            );\n\n            if (localFb) {\n                // Use this RTCP feedback.\n                codec.rtcpFeedback.push(localFb);\n            }\n        }\n\n        // Use this codec.\n        localCapabilities.codecs.push(codec);\n    }\n\n    // Add RTX for video codecs.\n    for (const codec of localCapabilities.codecs) {\n        const payloadType = codec.preferredPayloadType;\n\n        if (!remoteRtxMap.has(payloadType)) {\n            continue; // eslint-disable-line no-continue\n        }\n\n        const rtxCodec = {\n            clockRate: codec.clockRate,\n            kind: codec.kind,\n            mimeType: `${codec.kind}/rtx`,\n            name: 'rtx',\n            parameters: {\n                apt: payloadType\n            },\n            preferredPayloadType: remoteRtxMap.get(payloadType),\n            rtcpFeedback: []\n        };\n\n        // Add RTX codec.\n        localCapabilities.codecs.push(rtxCodec);\n    }\n\n    // Add RTP header extensions.\n    for (const remoteExtension of filterWithCapabilities.headerExtensions) {\n        const localExtension\n            = localFullCapabilities.headerExtensions.find(extension =>\n                extension.kind === remoteExtension.kind\n                    && extension.uri === remoteExtension.uri\n            );\n\n        if (localExtension) {\n            const extension = {\n                kind: localExtension.kind,\n                preferredEncrypt: Boolean(remoteExtension.preferredEncrypt),\n                preferredId: remoteExtension.preferredId,\n                uri: localExtension.uri\n            };\n\n            // Use this RTP header extension.\n            localCapabilities.headerExtensions.push(extension);\n        }\n    }\n\n    // Add FEC mechanisms.\n    // NOTE: We don't support FEC yet and, in fact, neither does Edge.\n    for (const remoteFecMechanism of filterWithCapabilities.fecMechanisms) {\n        const localFecMechanism\n            = localFullCapabilities.fecMechanisms.find(fec =>\n                fec === remoteFecMechanism\n            );\n\n        if (localFecMechanism) {\n            // Use this FEC mechanism.\n            localCapabilities.fecMechanisms.push(localFecMechanism);\n        }\n    }\n\n    return localCapabilities;\n}\n\n/**\n * Get the first acive media section.\n * @param {Object} sdpObject - SDP object generated by sdp-transform.\n * @return {Object} SDP media section as parsed by sdp-transform.\n */\nfunction getFirstActiveMediaSection(sdpObject) {\n    return sdpObject.media.find(m =>\n        m.iceUfrag && m.port !== 0\n    );\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/ortc/utils.js","/**\n * Create a class inheriting from Error.\n */\nfunction createErrorClass(name) {\n    const klass = class extends Error {\n        /**\n         * Custom error class constructor.\n         * @param {string} message\n         */\n        constructor(message) {\n            super(message);\n\n            // Override `name` property value and make it non enumerable.\n            Object.defineProperty(this, 'name', { value: name });\n        }\n    };\n\n    return klass;\n}\n\nexport const InvalidStateError = createErrorClass('InvalidStateError');\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/ortc/errors.js","/* global chrome, $, alert */\n\nimport JitsiTrackError from '../../JitsiTrackError';\nimport * as JitsiTrackErrors from '../../JitsiTrackErrors';\nimport RTCBrowserType from './RTCBrowserType';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\nconst GlobalOnErrorHandler = require('../util/GlobalOnErrorHandler');\n\n/**\n * Indicates whether the Chrome desktop sharing extension is installed.\n * @type {boolean}\n */\nlet chromeExtInstalled = false;\n\n/**\n * Indicates whether an update of the Chrome desktop sharing extension is\n * required.\n * @type {boolean}\n */\nlet chromeExtUpdateRequired = false;\n\n/**\n * Whether the jidesha extension for firefox is installed for the domain on\n * which we are running. Null designates an unknown value.\n * @type {null}\n */\nlet firefoxExtInstalled = null;\n\n/**\n * If set to true, detection of an installed firefox extension will be started\n * again the next time obtainScreenOnFirefox is called (e.g. next time the\n * user tries to enable screen sharing).\n */\nlet reDetectFirefoxExtension = false;\n\nlet gumFunction = null;\n\n/**\n * The error returned by chrome when trying to start inline installation from\n * popup.\n */\nconst CHROME_EXTENSION_POPUP_ERROR\n    = 'Inline installs can not be initiated from pop-up windows.';\n\n/**\n * The error returned by chrome when trying to start inline installation from\n * iframe.\n */\nconst CHROME_EXTENSION_IFRAME_ERROR\n    = 'Chrome Web Store installations can only be started by the top frame.';\n\n/**\n * The error returned by chrome when trying to start inline installation\n * not from the \"main\" whitelisted site.\n * @type {string}\n */\nconst CHROME_EXTENSION_INLINE_ERROR\n    = 'Installs can only be initiated by one of'\n        + ' the Chrome Web Store item\\'s verified sites.';\n\n/**\n * The error returned by chrome when trying to start inline installation\n * with extension that doesn't support inline installation.\n *\n * @type {string}\n */\nconst CHROME_EXTENSION_INLINE_NOT_SUPPORTED_ERROR\n    = 'Inline installation is not supported for this item. '\n        + 'The user will be redirected to the Chrome Web Store.';\n\n/**\n * The error message returned by chrome when the extension is installed.\n */\nconst CHROME_NO_EXTENSION_ERROR_MSG // eslint-disable-line no-unused-vars\n    = 'Could not establish connection. Receiving end does not exist.';\n\n/**\n * The error message returned by chrome when the extension install action needs\n * to be initiated by a user gesture.\n * @type {string}\n */\nconst CHROME_USER_GESTURE_REQ_ERROR\n    = 'Chrome Web Store installations can only be initated by a user gesture.';\n\n/**\n * Handles obtaining a stream from a screen capture on different browsers.\n */\nconst ScreenObtainer = {\n    /**\n     * If not <tt>null</tt> it means that the initialization process is still in\n     * progress. It is used to make desktop stream request wait and continue\n     * after it's done.\n     * {@type Promise|null}\n     */\n    intChromeExtPromise: null,\n\n    obtainStream: null,\n\n    /**\n     * Initializes the function used to obtain a screen capture\n     * (this.obtainStream).\n     *\n     * @param {object} options\n     * @param {boolean} [options.disableDesktopSharing]\n     * @param {boolean} [options.desktopSharingChromeDisabled]\n     * @param {boolean} [options.desktopSharingChromeExtId]\n     * @param {boolean} [options.desktopSharingFirefoxDisabled]\n     * @param {boolean} [options.desktopSharingFirefoxExtId] (deprecated)\n     * @param {Function} gum GUM method\n     */\n    init(options = {\n        disableDesktopSharing: false,\n        desktopSharingChromeDisabled: false,\n        desktopSharingChromeExtId: null,\n        desktopSharingFirefoxDisabled: false,\n        desktopSharingFirefoxExtId: null\n    }, gum) {\n        // eslint-disable-next-line no-param-reassign\n        this.options = options = options || {};\n        gumFunction = gum;\n\n        this.obtainStream\n            = this.options.disableDesktopSharing\n                ? null : this._createObtainStreamMethod(options);\n\n        if (!this.obtainStream) {\n            logger.info('Desktop sharing disabled');\n        }\n    },\n\n    /**\n     * Returns a method which will be used to obtain the screen sharing stream\n     * (based on the browser type).\n     *\n     * @param {object} options passed from {@link init} - check description\n     * there\n     * @returns {Function}\n     * @private\n     */\n    _createObtainStreamMethod(options) {\n        if (RTCBrowserType.isNWJS()) {\n            return (_, onSuccess, onFailure) => {\n                window.JitsiMeetNW.obtainDesktopStream(\n                    onSuccess,\n                    (error, constraints) => {\n                        let jitsiError;\n\n                        // FIXME:\n                        // This is very very dirty fix for recognising that the\n                        // user have clicked the cancel button from the Desktop\n                        // sharing pick window. The proper solution would be to\n                        // detect this in the NWJS application by checking the\n                        // streamId === \"\". Even better solution would be to\n                        // stop calling GUM from the NWJS app and just pass the\n                        // streamId to lib-jitsi-meet. This way the desktop\n                        // sharing implementation for NWJS and chrome extension\n                        // will be the same and lib-jitsi-meet will be able to\n                        // control the constraints, check the streamId, etc.\n                        //\n                        // I cannot find documentation about \"InvalidStateError\"\n                        // but this is what we are receiving from GUM when the\n                        // streamId for the desktop sharing is \"\".\n\n                        if (error && error.name === 'InvalidStateError') {\n                            jitsiError = new JitsiTrackError(\n                                JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED\n                            );\n                        } else {\n                            jitsiError = new JitsiTrackError(\n                                error, constraints, [ 'desktop' ]);\n                        }\n                        (typeof onFailure === 'function')\n                            && onFailure(jitsiError);\n                    });\n            };\n        } else if (RTCBrowserType.isElectron()) {\n            return this.obtainScreenOnElectron;\n        } else if (RTCBrowserType.isTemasysPluginUsed()) {\n            // XXX Don't require Temasys unless it's to be used because it\n            // doesn't run on React Native, for example.\n            const plugin\n                = require('./adapter.screenshare').WebRTCPlugin.plugin;\n\n            if (!plugin.HasScreensharingFeature) {\n                logger.warn(\n                    'Screensharing not supported by this plugin version');\n\n                return null;\n            } else if (!plugin.isScreensharingAvailable) {\n                logger.warn(\n                    'Screensharing not available with Temasys plugin on'\n                        + ' this site');\n\n                return null;\n            }\n\n            logger.info('Using Temasys plugin for desktop sharing');\n\n            return obtainWebRTCScreen;\n        } else if (RTCBrowserType.isChrome() || RTCBrowserType.isOpera()) {\n            if ((RTCBrowserType.getChromeVersion()\n                    || RTCBrowserType.getOperaVersion()) < 34) {\n                logger.info('Chrome extension not supported until ver 34');\n\n                return null;\n            } else if (options.desktopSharingChromeDisabled\n                || options.desktopSharingChromeMethod === false\n                || !options.desktopSharingChromeExtId) {\n\n                // TODO: desktopSharingChromeMethod is deprecated, remove.\n                return null;\n            }\n\n            logger.info('Using Chrome extension for desktop sharing');\n            this.intChromeExtPromise\n                = initChromeExtension(options).then(() => {\n                    this.intChromeExtPromise = null;\n                });\n\n            return this.obtainScreenFromExtension;\n        } else if (RTCBrowserType.isFirefox()) {\n            if (options.desktopSharingFirefoxDisabled) {\n                return null;\n            } else if (window.location.protocol === 'http:') {\n                logger.log('Screen sharing is not supported over HTTP. '\n                    + 'Use of HTTPS is required.');\n\n                return null;\n            }\n\n            initFirefoxExtensionDetection(options);\n\n            return this.obtainScreenOnFirefox;\n        }\n\n        logger.log(\n            'Screen sharing not supported by the current browser: ',\n            RTCBrowserType.getBrowserType(),\n            RTCBrowserType.getBrowserName());\n\n        return null;\n    },\n\n    /**\n     * Checks whether obtaining a screen capture is supported in the current\n     * environment.\n     * @returns {boolean}\n     */\n    isSupported() {\n        return this.obtainStream !== null;\n    },\n\n    /**\n     * Obtains a screen capture stream on Firefox.\n     * @param callback\n     * @param errorCallback\n     */\n    obtainScreenOnFirefox(options, callback, errorCallback) {\n        let extensionRequired = false;\n        const { desktopSharingFirefoxMaxVersionExtRequired } = this.options;\n\n        if (desktopSharingFirefoxMaxVersionExtRequired === -1\n            || (desktopSharingFirefoxMaxVersionExtRequired >= 0\n                && RTCBrowserType.getFirefoxVersion()\n                    <= desktopSharingFirefoxMaxVersionExtRequired)) {\n            extensionRequired = true;\n            logger.log(\n                `Jidesha extension required on firefox version ${\n                    RTCBrowserType.getFirefoxVersion()}`);\n        }\n\n        if (!extensionRequired || firefoxExtInstalled === true) {\n            obtainWebRTCScreen(options, callback, errorCallback);\n\n            return;\n        }\n\n        if (reDetectFirefoxExtension) {\n            reDetectFirefoxExtension = false;\n            initFirefoxExtensionDetection(this.options);\n        }\n\n        // Give it some (more) time to initialize, and assume lack of\n        // extension if it hasn't.\n        if (firefoxExtInstalled === null) {\n            window.setTimeout(\n                () => {\n                    if (firefoxExtInstalled === null) {\n                        firefoxExtInstalled = false;\n                    }\n                    this.obtainScreenOnFirefox(callback, errorCallback);\n                },\n                300);\n            logger.log(\n                'Waiting for detection of jidesha on firefox to finish.');\n\n            return;\n        }\n\n        // We need an extension and it isn't installed.\n\n        // Make sure we check for the extension when the user clicks again.\n        firefoxExtInstalled = null;\n        reDetectFirefoxExtension = true;\n\n        // Make sure desktopsharing knows that we failed, so that it doesn't get\n        // stuck in 'switching' mode.\n        errorCallback(\n            new JitsiTrackError(JitsiTrackErrors.FIREFOX_EXTENSION_NEEDED));\n    },\n\n    /**\n     * Obtains a screen capture stream on Electron.\n     *\n     * @param {Object} [options] - Screen sharing options.\n     * @param {Array<string>} [options.desktopSharingSources] - Array with the\n     * sources that have to be displayed in the desktop picker window ('screen',\n     * 'window', etc.).\n     * @param onSuccess - Success callback.\n     * @param onFailure - Failure callback.\n     */\n    obtainScreenOnElectron(options = {}, onSuccess, onFailure) {\n        if (window.JitsiMeetScreenObtainer\n            && window.JitsiMeetScreenObtainer.openDesktopPicker) {\n            window.JitsiMeetScreenObtainer.openDesktopPicker(\n                {\n                    desktopSharingSources:\n                        options.desktopSharingSources\n                            || this.options.desktopSharingChromeSources\n                },\n                (streamId, streamType) =>\n                    onGetStreamResponse(\n                        {\n                            streamId,\n                            streamType\n                        },\n                        onSuccess,\n                        onFailure\n                    ),\n                err => onFailure(new JitsiTrackError(\n                    JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_ERROR,\n                    err\n                ))\n            );\n        } else {\n            onFailure(new JitsiTrackError(\n                JitsiTrackErrors.ELECTRON_DESKTOP_PICKER_NOT_FOUND));\n        }\n    },\n\n    /**\n     * Asks Chrome extension to call chooseDesktopMedia and gets chrome\n     * 'desktop' stream for returned stream token.\n     */\n    obtainScreenFromExtension(options, streamCallback, failCallback) {\n        if (this.intChromeExtPromise !== null) {\n            this.intChromeExtPromise.then(() => {\n                this.obtainScreenFromExtension(\n                    options, streamCallback, failCallback);\n            });\n\n            return;\n        }\n\n        const {\n            desktopSharingChromeExtId,\n            desktopSharingChromeSources\n        } = this.options;\n\n        const gumOptions = {\n            desktopSharingChromeExtId,\n            desktopSharingChromeSources:\n                options.desktopSharingSources\n                    || desktopSharingChromeSources\n        };\n\n        if (chromeExtInstalled) {\n            doGetStreamFromExtension(\n                gumOptions,\n                streamCallback,\n                failCallback);\n        } else {\n            if (chromeExtUpdateRequired) {\n                /* eslint-disable no-alert */\n                alert(\n                    'Jitsi Desktop Streamer requires update. '\n                    + 'Changes will take effect after next Chrome restart.');\n\n                /* eslint-enable no-alert */\n            }\n\n            // for opera there is no inline install\n            // extension \"Download Chrome Extension\" allows us to open\n            // the chrome webstore and install from there and then activate our\n            // extension\n            if (RTCBrowserType.isOpera()) {\n                this.handleExternalInstall(options, streamCallback,\n                    failCallback);\n\n                return;\n            }\n\n            try {\n                chrome.webstore.install(\n                    getWebStoreInstallUrl(this.options),\n                    arg => {\n                        logger.log('Extension installed successfully', arg);\n                        chromeExtInstalled = true;\n\n                        // We need to give a moment to the endpoint to become\n                        // available.\n                        waitForExtensionAfterInstall(this.options, 200, 10)\n                            .then(() => {\n                                doGetStreamFromExtension(\n                                    gumOptions,\n                                    streamCallback,\n                                    failCallback);\n                            })\n                            .catch(() => {\n                                this.handleExtensionInstallationError(options,\n                                    streamCallback, failCallback);\n                            });\n                    },\n                    this.handleExtensionInstallationError.bind(this,\n                        options, streamCallback, failCallback)\n                );\n            } catch (e) {\n                this.handleExtensionInstallationError(options, streamCallback,\n                    failCallback, e);\n            }\n        }\n    },\n\n    /* eslint-disable max-params */\n\n    handleExternalInstall(options, streamCallback, failCallback, e) {\n        const webStoreInstallUrl = getWebStoreInstallUrl(this.options);\n\n        options.listener('waitingForExtension', webStoreInstallUrl);\n        this.checkForChromeExtensionOnInterval(options, streamCallback,\n            failCallback, e);\n    },\n\n    handleExtensionInstallationError(options, streamCallback, failCallback, e) {\n        const webStoreInstallUrl = getWebStoreInstallUrl(this.options);\n\n        if ((CHROME_EXTENSION_POPUP_ERROR === e\n             || CHROME_EXTENSION_IFRAME_ERROR === e\n             || CHROME_EXTENSION_INLINE_ERROR === e\n             || CHROME_EXTENSION_INLINE_NOT_SUPPORTED_ERROR === e)\n                && options.interval > 0\n                && typeof options.checkAgain === 'function'\n                && typeof options.listener === 'function') {\n            this.handleExternalInstall(options, streamCallback,\n                failCallback, e);\n\n            return;\n        }\n\n        const msg\n            = `Failed to install the extension from ${webStoreInstallUrl}`;\n\n        logger.log(msg, e);\n\n        const error\n            = e === CHROME_USER_GESTURE_REQ_ERROR\n                ? JitsiTrackErrors.CHROME_EXTENSION_USER_GESTURE_REQUIRED\n                : JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR;\n\n        failCallback(new JitsiTrackError(error, msg));\n    },\n\n    /* eslint-enable max-params */\n\n    checkForChromeExtensionOnInterval(options, streamCallback, failCallback) {\n        if (options.checkAgain() === false) {\n            failCallback(new JitsiTrackError(\n                JitsiTrackErrors.CHROME_EXTENSION_INSTALLATION_ERROR));\n\n            return;\n        }\n        waitForExtensionAfterInstall(this.options, options.interval, 1)\n            .then(() => {\n                chromeExtInstalled = true;\n                options.listener('extensionFound');\n                this.obtainScreenFromExtension(options,\n                    streamCallback, failCallback);\n            })\n            .catch(() => {\n                this.checkForChromeExtensionOnInterval(options,\n                    streamCallback, failCallback);\n            });\n    }\n};\n\n/**\n * Obtains a desktop stream using getUserMedia.\n * For this to work on Chrome, the\n * 'chrome://flags/#enable-usermedia-screen-capture' flag must be enabled.\n *\n * On firefox, the document's domain must be white-listed in the\n * 'media.getusermedia.screensharing.allowed_domains' preference in\n * 'about:config'.\n */\nfunction obtainWebRTCScreen(options, streamCallback, failCallback) {\n    gumFunction(\n        [ 'screen' ],\n        stream => streamCallback({ stream }),\n        failCallback\n    );\n}\n\n/**\n * Constructs inline install URL for Chrome desktop streaming extension.\n * The 'chromeExtensionId' must be defined in options parameter.\n * @param options supports \"desktopSharingChromeExtId\"\n * @returns {string}\n */\nfunction getWebStoreInstallUrl(options) {\n    return (\n        `https://chrome.google.com/webstore/detail/${\n            options.desktopSharingChromeExtId}`);\n}\n\n/**\n * Checks whether an update of the Chrome extension is required.\n * @param minVersion minimal required version\n * @param extVersion current extension version\n * @returns {boolean}\n */\nfunction isUpdateRequired(minVersion, extVersion) {\n    try {\n        const s1 = minVersion.split('.');\n        const s2 = extVersion.split('.');\n\n        const len = Math.max(s1.length, s2.length);\n\n        for (let i = 0; i < len; i++) {\n            let n1 = 0,\n                n2 = 0;\n\n            if (i < s1.length) {\n                n1 = parseInt(s1[i], 10);\n            }\n            if (i < s2.length) {\n                n2 = parseInt(s2[i], 10);\n            }\n\n            if (isNaN(n1) || isNaN(n2)) {\n                return true;\n            } else if (n1 !== n2) {\n                return n1 > n2;\n            }\n        }\n\n        // will happen if both versions have identical numbers in\n        // their components (even if one of them is longer, has more components)\n        return false;\n    } catch (e) {\n        GlobalOnErrorHandler.callErrorHandler(e);\n        logger.error('Failed to parse extension version', e);\n\n        return true;\n    }\n}\n\n/**\n *\n * @param callback\n * @param options\n */\nfunction checkChromeExtInstalled(callback, options) {\n    if (typeof chrome === 'undefined' || !chrome || !chrome.runtime) {\n        // No API, so no extension for sure\n        callback(false, false);\n\n        return;\n    }\n    chrome.runtime.sendMessage(\n        options.desktopSharingChromeExtId,\n        { getVersion: true },\n        response => {\n            if (!response || !response.version) {\n                // Communication failure - assume that no endpoint exists\n                logger.warn(\n                    'Extension not installed?: ', chrome.runtime.lastError);\n                callback(false, false);\n\n                return;\n            }\n\n            // Check installed extension version\n            const extVersion = response.version;\n\n            logger.log(`Extension version is: ${extVersion}`);\n            const updateRequired\n                = isUpdateRequired(\n                    options.desktopSharingChromeMinExtVersion,\n                    extVersion);\n\n            callback(!updateRequired, updateRequired);\n        }\n    );\n}\n\n/**\n *\n * @param options\n * @param streamCallback\n * @param failCallback\n */\nfunction doGetStreamFromExtension(options, streamCallback, failCallback) {\n    // Sends 'getStream' msg to the extension.\n    // Extension id must be defined in the config.\n    chrome.runtime.sendMessage(\n        options.desktopSharingChromeExtId,\n        {\n            getStream: true,\n            sources: options.desktopSharingChromeSources\n        },\n        response => {\n            if (!response) {\n                // possibly re-wraping error message to make code consistent\n                const lastError = chrome.runtime.lastError;\n\n                failCallback(lastError instanceof Error\n                    ? lastError\n                    : new JitsiTrackError(\n                        JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR,\n                        lastError));\n\n                return;\n            }\n            logger.log('Response from extension: ', response);\n            onGetStreamResponse(response, streamCallback, failCallback);\n        }\n    );\n}\n\n/**\n * Initializes <link rel=chrome-webstore-item /> with extension id set in\n * config.js to support inline installs. Host site must be selected as main\n * website of published extension.\n * @param options supports \"desktopSharingChromeExtId\"\n */\nfunction initInlineInstalls(options) {\n    if ($('link[rel=chrome-webstore-item]').length === 0) {\n        $('head').append('<link rel=\"chrome-webstore-item\">');\n    }\n    $('link[rel=chrome-webstore-item]').attr('href',\n        getWebStoreInstallUrl(options));\n}\n\n/**\n *\n * @param options\n *\n * @return {Promise} - a Promise resolved once the initialization process is\n * finished.\n */\nfunction initChromeExtension(options) {\n    // Initialize Chrome extension inline installs\n    initInlineInstalls(options);\n\n    return new Promise(resolve => {\n        // Check if extension is installed\n        checkChromeExtInstalled((installed, updateRequired) => {\n            chromeExtInstalled = installed;\n            chromeExtUpdateRequired = updateRequired;\n            logger.info(\n                `Chrome extension installed: ${\n                    chromeExtInstalled} updateRequired: ${\n                    chromeExtUpdateRequired}`);\n            resolve();\n        }, options);\n    });\n}\n\n/**\n * Checks \"retries\" times on every \"waitInterval\"ms whether the ext is alive.\n * @param {Object} options the options passed to ScreanObtainer.obtainStream\n * @param {int} waitInterval the number of ms between retries\n * @param {int} retries the number of retries\n * @returns {Promise} returns promise that will be resolved when the extension\n * is alive and rejected if the extension is not alive even after \"retries\"\n * checks\n */\nfunction waitForExtensionAfterInstall(options, waitInterval, retries) {\n    if (retries === 0) {\n        return Promise.reject();\n    }\n\n    return new Promise((resolve, reject) => {\n        let currentRetries = retries;\n        const interval = window.setInterval(() => {\n            checkChromeExtInstalled(installed => {\n                if (installed) {\n                    window.clearInterval(interval);\n                    resolve();\n                } else {\n                    currentRetries--;\n                    if (currentRetries === 0) {\n                        reject();\n                        window.clearInterval(interval);\n                    }\n                }\n            }, options);\n        }, waitInterval);\n    });\n}\n\n/**\n * Handles response from external application / extension and calls GUM to\n * receive the desktop streams or reports error.\n * @param {object} response\n * @param {string} response.streamId - the streamId for the desktop stream\n * @param {string} response.error - error to be reported.\n * @param {Function} onSuccess - callback for success.\n * @param {Function} onFailure - callback for failure.\n */\nfunction onGetStreamResponse(\n        { streamId, streamType, error },\n        onSuccess,\n        onFailure) {\n    if (streamId) {\n        gumFunction(\n            [ 'desktop' ],\n            stream => onSuccess({\n                stream,\n                sourceId: streamId,\n                sourceType: streamType\n            }),\n            onFailure,\n            { desktopStream: streamId });\n    } else {\n        // As noted in Chrome Desktop Capture API:\n        // If user didn't select any source (i.e. canceled the prompt)\n        // then the callback is called with an empty streamId.\n        if (streamId === '') {\n            onFailure(new JitsiTrackError(\n                JitsiTrackErrors.CHROME_EXTENSION_USER_CANCELED));\n\n            return;\n        }\n\n        onFailure(new JitsiTrackError(\n            JitsiTrackErrors.CHROME_EXTENSION_GENERIC_ERROR,\n            error));\n    }\n}\n\n/**\n * Starts the detection of an installed jidesha extension for firefox.\n * @param options supports \"desktopSharingFirefoxDisabled\",\n * \"desktopSharingFirefoxExtId\"\n */\nfunction initFirefoxExtensionDetection(options) {\n    if (options.desktopSharingFirefoxDisabled) {\n        return;\n    }\n    if (firefoxExtInstalled === false || firefoxExtInstalled === true) {\n        return;\n    }\n    if (!options.desktopSharingFirefoxExtId) {\n        firefoxExtInstalled = false;\n\n        return;\n    }\n\n    const img = document.createElement('img');\n\n    img.onload = () => {\n        logger.log('Detected firefox screen sharing extension.');\n        firefoxExtInstalled = true;\n    };\n    img.onerror = () => {\n        logger.log('Detected lack of firefox screen sharing extension.');\n        firefoxExtInstalled = false;\n    };\n\n    // The jidesha extension exposes an empty image file under the url:\n    // \"chrome://EXT_ID/content/DOMAIN.png\"\n    // Where EXT_ID is the ID of the extension with \"@\" replaced by \".\", and\n    // DOMAIN is a domain whitelisted by the extension.\n    const extId = options.desktopSharingFirefoxExtId.replace('@', '.');\n    const domain = document.location.hostname;\n    const src = `chrome://${extId}/content/${domain}.png`;\n\n    img.setAttribute('src', src);\n}\n\nexport default ScreenObtainer;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/ScreenObtainer.js","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar adapterFactory = require('./adapter_factory.js');\nmodule.exports = adapterFactory({window: global.window});\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/adapter_core.js\n// module id = 131\n// module chunks = 0","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n\n'use strict';\n\nvar utils = require('./utils');\n// Shimming starts here.\nmodule.exports = function(dependencies, opts) {\n  var window = dependencies && dependencies.window;\n\n  var options = {\n    shimChrome: true,\n    shimFirefox: true,\n    shimEdge: true,\n    shimSafari: true,\n  };\n\n  for (var key in opts) {\n    if (hasOwnProperty.call(opts, key)) {\n      options[key] = opts[key];\n    }\n  }\n\n  // Utils.\n  var logging = utils.log;\n  var browserDetails = utils.detectBrowser(window);\n\n  // Export to the adapter global object visible in the browser.\n  var adapter = {\n    browserDetails: browserDetails,\n    extractVersion: utils.extractVersion,\n    disableLog: utils.disableLog,\n    disableWarnings: utils.disableWarnings\n  };\n\n  // Uncomment the line below if you want logging to occur, including logging\n  // for the switch statement below. Can also be turned on in the browser via\n  // adapter.disableLog(false), but then logging from the switch statement below\n  // will not appear.\n  // require('./utils').disableLog(false);\n\n  // Browser shims.\n  var chromeShim = require('./chrome/chrome_shim') || null;\n  var edgeShim = require('./edge/edge_shim') || null;\n  var firefoxShim = require('./firefox/firefox_shim') || null;\n  var safariShim = require('./safari/safari_shim') || null;\n  var commonShim = require('./common_shim') || null;\n\n  // Shim browser if found.\n  switch (browserDetails.browser) {\n    case 'chrome':\n      if (!chromeShim || !chromeShim.shimPeerConnection ||\n          !options.shimChrome) {\n        logging('Chrome shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming chrome.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = chromeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      chromeShim.shimGetUserMedia(window);\n      chromeShim.shimMediaStream(window);\n      chromeShim.shimSourceObject(window);\n      chromeShim.shimPeerConnection(window);\n      chromeShim.shimOnTrack(window);\n      chromeShim.shimAddTrackRemoveTrack(window);\n      chromeShim.shimGetSendersWithDtmf(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      break;\n    case 'firefox':\n      if (!firefoxShim || !firefoxShim.shimPeerConnection ||\n          !options.shimFirefox) {\n        logging('Firefox shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming firefox.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = firefoxShim;\n      commonShim.shimCreateObjectURL(window);\n\n      firefoxShim.shimGetUserMedia(window);\n      firefoxShim.shimSourceObject(window);\n      firefoxShim.shimPeerConnection(window);\n      firefoxShim.shimOnTrack(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      break;\n    case 'edge':\n      if (!edgeShim || !edgeShim.shimPeerConnection || !options.shimEdge) {\n        logging('MS edge shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming edge.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = edgeShim;\n      commonShim.shimCreateObjectURL(window);\n\n      edgeShim.shimGetUserMedia(window);\n      edgeShim.shimPeerConnection(window);\n      edgeShim.shimReplaceTrack(window);\n\n      // the edge shim implements the full RTCIceCandidate object.\n      break;\n    case 'safari':\n      if (!safariShim || !options.shimSafari) {\n        logging('Safari shim is not included in this adapter release.');\n        return adapter;\n      }\n      logging('adapter.js shimming safari.');\n      // Export to the adapter global object visible in the browser.\n      adapter.browserShim = safariShim;\n      commonShim.shimCreateObjectURL(window);\n\n      safariShim.shimRTCIceServerUrls(window);\n      safariShim.shimCallbacksAPI(window);\n      safariShim.shimLocalStreamsAPI(window);\n      safariShim.shimRemoteStreamsAPI(window);\n      safariShim.shimTrackEventTransceiver(window);\n      safariShim.shimGetUserMedia(window);\n      safariShim.shimCreateOfferLegacy(window);\n\n      commonShim.shimRTCIceCandidate(window);\n      break;\n    default:\n      logging('Unsupported browser!');\n      break;\n  }\n\n  return adapter;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/adapter_factory.js\n// module id = 132\n// module chunks = 0","\n/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\nvar chromeShim = {\n  shimMediaStream: function(window) {\n    window.MediaStream = window.MediaStream || window.webkitMediaStream;\n  },\n\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n          }\n          this.addEventListener('track', this._ontrack = f);\n        }\n      });\n      var origSetRemoteDescription =\n          window.RTCPeerConnection.prototype.setRemoteDescription;\n      window.RTCPeerConnection.prototype.setRemoteDescription = function() {\n        var pc = this;\n        if (!pc._ontrackpoly) {\n          pc._ontrackpoly = function(e) {\n            // onaddstream does not fire when a track is added to an existing\n            // stream. But stream.onaddtrack is implemented so we use that.\n            e.stream.addEventListener('addtrack', function(te) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === te.track.id;\n                });\n              } else {\n                receiver = {track: te.track};\n              }\n\n              var event = new Event('track');\n              event.track = te.track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n            e.stream.getTracks().forEach(function(track) {\n              var receiver;\n              if (window.RTCPeerConnection.prototype.getReceivers) {\n                receiver = pc.getReceivers().find(function(r) {\n                  return r.track && r.track.id === track.id;\n                });\n              } else {\n                receiver = {track: track};\n              }\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = receiver;\n              event.transceiver = {receiver: receiver};\n              event.streams = [e.stream];\n              pc.dispatchEvent(event);\n            });\n          };\n          pc.addEventListener('addstream', pc._ontrackpoly);\n        }\n        return origSetRemoteDescription.apply(pc, arguments);\n      };\n    }\n  },\n\n  shimGetSendersWithDtmf: function(window) {\n    // Overrides addTrack/removeTrack, depends on shimAddTrackRemoveTrack.\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        !('getSenders' in window.RTCPeerConnection.prototype) &&\n        'createDTMFSender' in window.RTCPeerConnection.prototype) {\n      var shimSenderWithDtmf = function(pc, track) {\n        return {\n          track: track,\n          get dtmf() {\n            if (this._dtmf === undefined) {\n              if (track.kind === 'audio') {\n                this._dtmf = pc.createDTMFSender(track);\n              } else {\n                this._dtmf = null;\n              }\n            }\n            return this._dtmf;\n          },\n          _pc: pc\n        };\n      };\n\n      // augment addTrack when getSenders is not available.\n      if (!window.RTCPeerConnection.prototype.getSenders) {\n        window.RTCPeerConnection.prototype.getSenders = function() {\n          this._senders = this._senders || [];\n          return this._senders.slice(); // return a copy of the internal state.\n        };\n        var origAddTrack = window.RTCPeerConnection.prototype.addTrack;\n        window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n          var pc = this;\n          var sender = origAddTrack.apply(pc, arguments);\n          if (!sender) {\n            sender = shimSenderWithDtmf(pc, track);\n            pc._senders.push(sender);\n          }\n          return sender;\n        };\n\n        var origRemoveTrack = window.RTCPeerConnection.prototype.removeTrack;\n        window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n          var pc = this;\n          origRemoveTrack.apply(pc, arguments);\n          var idx = pc._senders.indexOf(sender);\n          if (idx !== -1) {\n            pc._senders.splice(idx, 1);\n          }\n        };\n      }\n      var origAddStream = window.RTCPeerConnection.prototype.addStream;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origAddStream.apply(pc, [stream]);\n        stream.getTracks().forEach(function(track) {\n          pc._senders.push(shimSenderWithDtmf(pc, track));\n        });\n      };\n\n      var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        var pc = this;\n        pc._senders = pc._senders || [];\n        origRemoveStream.apply(pc, [stream]);\n\n        stream.getTracks().forEach(function(track) {\n          var sender = pc._senders.find(function(s) {\n            return s.track === track;\n          });\n          if (sender) {\n            pc._senders.splice(pc._senders.indexOf(sender), 1); // remove sender\n          }\n        });\n      };\n    } else if (typeof window === 'object' && window.RTCPeerConnection &&\n               'getSenders' in window.RTCPeerConnection.prototype &&\n               'createDTMFSender' in window.RTCPeerConnection.prototype &&\n               window.RTCRtpSender &&\n               !('dtmf' in window.RTCRtpSender.prototype)) {\n      var origGetSenders = window.RTCPeerConnection.prototype.getSenders;\n      window.RTCPeerConnection.prototype.getSenders = function() {\n        var pc = this;\n        var senders = origGetSenders.apply(pc, []);\n        senders.forEach(function(sender) {\n          sender._pc = pc;\n        });\n        return senders;\n      };\n\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = this._pc.createDTMFSender(this.track);\n            } else {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function(window) {\n    var URL = window && window.URL;\n\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this._srcObject;\n          },\n          set: function(stream) {\n            var self = this;\n            // Use _srcObject as a private property for this shim\n            this._srcObject = stream;\n            if (this.src) {\n              URL.revokeObjectURL(this.src);\n            }\n\n            if (!stream) {\n              this.src = '';\n              return undefined;\n            }\n            this.src = URL.createObjectURL(stream);\n            // We need to recreate the blob url when a track is added or\n            // removed. Doing it manually since we want to avoid a recursion.\n            stream.addEventListener('addtrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n            stream.addEventListener('removetrack', function() {\n              if (self.src) {\n                URL.revokeObjectURL(self.src);\n              }\n              self.src = URL.createObjectURL(stream);\n            });\n          }\n        });\n      }\n    }\n  },\n\n  shimAddTrackRemoveTrack: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n    // shim addTrack and removeTrack.\n    if (window.RTCPeerConnection.prototype.addTrack &&\n        browserDetails.version >= 63) {\n      return;\n    }\n\n    // also shim pc.getLocalStreams when addTrack is shimmed\n    // to return the original streams.\n    var origGetLocalStreams = window.RTCPeerConnection.prototype\n        .getLocalStreams;\n    window.RTCPeerConnection.prototype.getLocalStreams = function() {\n      var self = this;\n      var nativeStreams = origGetLocalStreams.apply(this);\n      self._reverseStreams = self._reverseStreams || {};\n      return nativeStreams.map(function(stream) {\n        return self._reverseStreams[stream.id];\n      });\n    };\n\n    var origAddStream = window.RTCPeerConnection.prototype.addStream;\n    window.RTCPeerConnection.prototype.addStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      stream.getTracks().forEach(function(track) {\n        var alreadyExists = pc.getSenders().find(function(s) {\n          return s.track === track;\n        });\n        if (alreadyExists) {\n          throw new DOMException('Track already exists.',\n              'InvalidAccessError');\n        }\n      });\n      // Add identity mapping for consistency with addTrack.\n      // Unless this is being used with a stream from addTrack.\n      if (!pc._reverseStreams[stream.id]) {\n        var newStream = new window.MediaStream(stream.getTracks());\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        stream = newStream;\n      }\n      origAddStream.apply(pc, [stream]);\n    };\n\n    var origRemoveStream = window.RTCPeerConnection.prototype.removeStream;\n    window.RTCPeerConnection.prototype.removeStream = function(stream) {\n      var pc = this;\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n\n      origRemoveStream.apply(pc, [(pc._streams[stream.id] || stream)]);\n      delete pc._reverseStreams[(pc._streams[stream.id] ?\n          pc._streams[stream.id].id : stream.id)];\n      delete pc._streams[stream.id];\n    };\n\n    window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      var streams = [].slice.call(arguments, 1);\n      if (streams.length !== 1 ||\n          !streams[0].getTracks().find(function(t) {\n            return t === track;\n          })) {\n        // this is not fully correct but all we can manage without\n        // [[associated MediaStreams]] internal slot.\n        throw new DOMException(\n          'The adapter.js addTrack polyfill only supports a single ' +\n          ' stream which is associated with the specified track.',\n          'NotSupportedError');\n      }\n\n      var alreadyExists = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (alreadyExists) {\n        throw new DOMException('Track already exists.',\n            'InvalidAccessError');\n      }\n\n      pc._streams = pc._streams || {};\n      pc._reverseStreams = pc._reverseStreams || {};\n      var oldStream = pc._streams[stream.id];\n      if (oldStream) {\n        // this is using odd Chrome behaviour, use with caution:\n        // https://bugs.chromium.org/p/webrtc/issues/detail?id=7815\n        // Note: we rely on the high-level addTrack/dtmf shim to\n        // create the sender with a dtmf sender.\n        oldStream.addTrack(track);\n\n        // Trigger ONN async.\n        Promise.resolve().then(function() {\n          pc.dispatchEvent(new Event('negotiationneeded'));\n        });\n      } else {\n        var newStream = new window.MediaStream([track]);\n        pc._streams[stream.id] = newStream;\n        pc._reverseStreams[newStream.id] = stream;\n        pc.addStream(newStream);\n      }\n      return pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n    };\n\n    // replace the internal stream id with the external one and\n    // vice versa.\n    function replaceInternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(internalStream.id, 'g'),\n            externalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    function replaceExternalStreamId(pc, description) {\n      var sdp = description.sdp;\n      Object.keys(pc._reverseStreams || []).forEach(function(internalId) {\n        var externalStream = pc._reverseStreams[internalId];\n        var internalStream = pc._streams[externalStream.id];\n        sdp = sdp.replace(new RegExp(externalStream.id, 'g'),\n            internalStream.id);\n      });\n      return new RTCSessionDescription({\n        type: description.type,\n        sdp: sdp\n      });\n    }\n    ['createOffer', 'createAnswer'].forEach(function(method) {\n      var nativeMethod = window.RTCPeerConnection.prototype[method];\n      window.RTCPeerConnection.prototype[method] = function() {\n        var pc = this;\n        var args = arguments;\n        var isLegacyCall = arguments.length &&\n            typeof arguments[0] === 'function';\n        if (isLegacyCall) {\n          return nativeMethod.apply(pc, [\n            function(description) {\n              var desc = replaceInternalStreamId(pc, description);\n              args[0].apply(null, [desc]);\n            },\n            function(err) {\n              if (args[1]) {\n                args[1].apply(null, err);\n              }\n            }, arguments[2]\n          ]);\n        }\n        return nativeMethod.apply(pc, arguments)\n        .then(function(description) {\n          return replaceInternalStreamId(pc, description);\n        });\n      };\n    });\n\n    var origSetLocalDescription =\n        window.RTCPeerConnection.prototype.setLocalDescription;\n    window.RTCPeerConnection.prototype.setLocalDescription = function() {\n      var pc = this;\n      if (!arguments.length || !arguments[0].type) {\n        return origSetLocalDescription.apply(pc, arguments);\n      }\n      arguments[0] = replaceExternalStreamId(pc, arguments[0]);\n      return origSetLocalDescription.apply(pc, arguments);\n    };\n\n    // TODO: mangle getStats: https://w3c.github.io/webrtc-stats/#dom-rtcmediastreamstats-streamidentifier\n\n    var origLocalDescription = Object.getOwnPropertyDescriptor(\n        window.RTCPeerConnection.prototype, 'localDescription');\n    Object.defineProperty(window.RTCPeerConnection.prototype,\n        'localDescription', {\n          get: function() {\n            var pc = this;\n            var description = origLocalDescription.get.apply(this);\n            if (description.type === '') {\n              return description;\n            }\n            return replaceInternalStreamId(pc, description);\n          }\n        });\n\n    window.RTCPeerConnection.prototype.removeTrack = function(sender) {\n      var pc = this;\n      if (pc.signalingState === 'closed') {\n        throw new DOMException(\n          'The RTCPeerConnection\\'s signalingState is \\'closed\\'.',\n          'InvalidStateError');\n      }\n      // We can not yet check for sender instanceof RTCRtpSender\n      // since we shim RTPSender. So we check if sender._pc is set.\n      if (!sender._pc) {\n        throw new DOMException('Argument 1 of RTCPeerConnection.removeTrack ' +\n            'does not implement interface RTCRtpSender.', 'TypeError');\n      }\n      var isLocal = sender._pc === pc;\n      if (!isLocal) {\n        throw new DOMException('Sender was not created by this connection.',\n            'InvalidAccessError');\n      }\n\n      // Search for the native stream the senders track belongs to.\n      pc._streams = pc._streams || {};\n      var stream;\n      Object.keys(pc._streams).forEach(function(streamid) {\n        var hasTrack = pc._streams[streamid].getTracks().find(function(track) {\n          return sender.track === track;\n        });\n        if (hasTrack) {\n          stream = pc._streams[streamid];\n        }\n      });\n\n      if (stream) {\n        if (stream.getTracks().length === 1) {\n          // if this is the last track of the stream, remove the stream. This\n          // takes care of any shimmed _senders.\n          pc.removeStream(pc._reverseStreams[stream.id]);\n        } else {\n          // relying on the same odd chrome behaviour as above.\n          stream.removeTrack(sender.track);\n        }\n        pc.dispatchEvent(new Event('negotiationneeded'));\n      }\n    };\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        // Translate iceTransportPolicy to iceTransports,\n        // see https://code.google.com/p/webrtc/issues/detail?id=4869\n        // this was fixed in M56 along with unprefixing RTCPeerConnection.\n        logging('PeerConnection');\n        if (pcConfig && pcConfig.iceTransportPolicy) {\n          pcConfig.iceTransports = pcConfig.iceTransportPolicy;\n        }\n\n        return new window.webkitRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.webkitRTCPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      if (window.webkitRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.webkitRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n    } else {\n      // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n      var OrigPeerConnection = window.RTCPeerConnection;\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (pcConfig && pcConfig.iceServers) {\n          var newIceServers = [];\n          for (var i = 0; i < pcConfig.iceServers.length; i++) {\n            var server = pcConfig.iceServers[i];\n            if (!server.hasOwnProperty('urls') &&\n                server.hasOwnProperty('url')) {\n              utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n              server = JSON.parse(JSON.stringify(server));\n              server.urls = server.url;\n              newIceServers.push(server);\n            } else {\n              newIceServers.push(pcConfig.iceServers[i]);\n            }\n          }\n          pcConfig.iceServers = newIceServers;\n        }\n        return new OrigPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n      // wrap static methods. Currently just generateCertificate.\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n\n    var origGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(selector,\n        successCallback, errorCallback) {\n      var self = this;\n      var args = arguments;\n\n      // If selector is a function then we are in the old style stats so just\n      // pass back the original getStats format to avoid breaking old users.\n      if (arguments.length > 0 && typeof selector === 'function') {\n        return origGetStats.apply(this, arguments);\n      }\n\n      // When spec-style getStats is supported, return those when called with\n      // either no arguments or the selector argument is null.\n      if (origGetStats.length === 0 && (arguments.length === 0 ||\n          typeof arguments[0] !== 'function')) {\n        return origGetStats.apply(this, []);\n      }\n\n      var fixChromeStats_ = function(response) {\n        var standardReport = {};\n        var reports = response.result();\n        reports.forEach(function(report) {\n          var standardStats = {\n            id: report.id,\n            timestamp: report.timestamp,\n            type: {\n              localcandidate: 'local-candidate',\n              remotecandidate: 'remote-candidate'\n            }[report.type] || report.type\n          };\n          report.names().forEach(function(name) {\n            standardStats[name] = report.stat(name);\n          });\n          standardReport[standardStats.id] = standardStats;\n        });\n\n        return standardReport;\n      };\n\n      // shim getStats with maplike support\n      var makeMapStats = function(stats) {\n        return new Map(Object.keys(stats).map(function(key) {\n          return [key, stats[key]];\n        }));\n      };\n\n      if (arguments.length >= 2) {\n        var successCallbackWrapper_ = function(response) {\n          args[1](makeMapStats(fixChromeStats_(response)));\n        };\n\n        return origGetStats.apply(this, [successCallbackWrapper_,\n          arguments[0]]);\n      }\n\n      // promise-support\n      return new Promise(function(resolve, reject) {\n        origGetStats.apply(self, [\n          function(response) {\n            resolve(makeMapStats(fixChromeStats_(response)));\n          }, reject]);\n      }).then(successCallback, errorCallback);\n    };\n\n    // add promise support -- natively available in Chrome 51\n    if (browserDetails.version < 51) {\n      ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n          .forEach(function(method) {\n            var nativeMethod = window.RTCPeerConnection.prototype[method];\n            window.RTCPeerConnection.prototype[method] = function() {\n              var args = arguments;\n              var self = this;\n              var promise = new Promise(function(resolve, reject) {\n                nativeMethod.apply(self, [args[0], resolve, reject]);\n              });\n              if (args.length < 2) {\n                return promise;\n              }\n              return promise.then(function() {\n                args[1].apply(null, []);\n              },\n              function(err) {\n                if (args.length >= 3) {\n                  args[2].apply(null, [err]);\n                }\n              });\n            };\n          });\n    }\n\n    // promise support for createOffer and createAnswer. Available (without\n    // bugs) since M52: crbug/619289\n    if (browserDetails.version < 52) {\n      ['createOffer', 'createAnswer'].forEach(function(method) {\n        var nativeMethod = window.RTCPeerConnection.prototype[method];\n        window.RTCPeerConnection.prototype[method] = function() {\n          var self = this;\n          if (arguments.length < 1 || (arguments.length === 1 &&\n              typeof arguments[0] === 'object')) {\n            var opts = arguments.length === 1 ? arguments[0] : undefined;\n            return new Promise(function(resolve, reject) {\n              nativeMethod.apply(self, [resolve, reject, opts]);\n            });\n          }\n          return nativeMethod.apply(this, arguments);\n        };\n      });\n    }\n\n    // shim implicit creation of RTCSessionDescription/RTCIceCandidate\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n  }\n};\n\n\n// Expose public methods.\nmodule.exports = {\n  shimMediaStream: chromeShim.shimMediaStream,\n  shimOnTrack: chromeShim.shimOnTrack,\n  shimAddTrackRemoveTrack: chromeShim.shimAddTrackRemoveTrack,\n  shimGetSendersWithDtmf: chromeShim.shimGetSendersWithDtmf,\n  shimSourceObject: chromeShim.shimSourceObject,\n  shimPeerConnection: chromeShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/chrome/chrome_shim.js\n// module id = 133\n// module chunks = 0","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\nvar utils = require('../utils.js');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n\n  var constraintsToChrome_ = function(c) {\n    if (typeof c !== 'object' || c.mandatory || c.optional) {\n      return c;\n    }\n    var cc = {};\n    Object.keys(c).forEach(function(key) {\n      if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n        return;\n      }\n      var r = (typeof c[key] === 'object') ? c[key] : {ideal: c[key]};\n      if (r.exact !== undefined && typeof r.exact === 'number') {\n        r.min = r.max = r.exact;\n      }\n      var oldname_ = function(prefix, name) {\n        if (prefix) {\n          return prefix + name.charAt(0).toUpperCase() + name.slice(1);\n        }\n        return (name === 'deviceId') ? 'sourceId' : name;\n      };\n      if (r.ideal !== undefined) {\n        cc.optional = cc.optional || [];\n        var oc = {};\n        if (typeof r.ideal === 'number') {\n          oc[oldname_('min', key)] = r.ideal;\n          cc.optional.push(oc);\n          oc = {};\n          oc[oldname_('max', key)] = r.ideal;\n          cc.optional.push(oc);\n        } else {\n          oc[oldname_('', key)] = r.ideal;\n          cc.optional.push(oc);\n        }\n      }\n      if (r.exact !== undefined && typeof r.exact !== 'number') {\n        cc.mandatory = cc.mandatory || {};\n        cc.mandatory[oldname_('', key)] = r.exact;\n      } else {\n        ['min', 'max'].forEach(function(mix) {\n          if (r[mix] !== undefined) {\n            cc.mandatory = cc.mandatory || {};\n            cc.mandatory[oldname_(mix, key)] = r[mix];\n          }\n        });\n      }\n    });\n    if (c.advanced) {\n      cc.optional = (cc.optional || []).concat(c.advanced);\n    }\n    return cc;\n  };\n\n  var shimConstraints_ = function(constraints, func) {\n    if (browserDetails.version >= 61) {\n      return func(constraints);\n    }\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (constraints && typeof constraints.audio === 'object') {\n      var remap = function(obj, a, b) {\n        if (a in obj && !(b in obj)) {\n          obj[b] = obj[a];\n          delete obj[a];\n        }\n      };\n      constraints = JSON.parse(JSON.stringify(constraints));\n      remap(constraints.audio, 'autoGainControl', 'googAutoGainControl');\n      remap(constraints.audio, 'noiseSuppression', 'googNoiseSuppression');\n      constraints.audio = constraintsToChrome_(constraints.audio);\n    }\n    if (constraints && typeof constraints.video === 'object') {\n      // Shim facingMode for mobile & surface pro.\n      var face = constraints.video.facingMode;\n      face = face && ((typeof face === 'object') ? face : {ideal: face});\n      var getSupportedFacingModeLies = browserDetails.version < 66;\n\n      if ((face && (face.exact === 'user' || face.exact === 'environment' ||\n                    face.ideal === 'user' || face.ideal === 'environment')) &&\n          !(navigator.mediaDevices.getSupportedConstraints &&\n            navigator.mediaDevices.getSupportedConstraints().facingMode &&\n            !getSupportedFacingModeLies)) {\n        delete constraints.video.facingMode;\n        var matches;\n        if (face.exact === 'environment' || face.ideal === 'environment') {\n          matches = ['back', 'rear'];\n        } else if (face.exact === 'user' || face.ideal === 'user') {\n          matches = ['front'];\n        }\n        if (matches) {\n          // Look for matches in label, or use last cam for back (typical).\n          return navigator.mediaDevices.enumerateDevices()\n          .then(function(devices) {\n            devices = devices.filter(function(d) {\n              return d.kind === 'videoinput';\n            });\n            var dev = devices.find(function(d) {\n              return matches.some(function(match) {\n                return d.label.toLowerCase().indexOf(match) !== -1;\n              });\n            });\n            if (!dev && devices.length && matches.indexOf('back') !== -1) {\n              dev = devices[devices.length - 1]; // more likely the back cam\n            }\n            if (dev) {\n              constraints.video.deviceId = face.exact ? {exact: dev.deviceId} :\n                                                        {ideal: dev.deviceId};\n            }\n            constraints.video = constraintsToChrome_(constraints.video);\n            logging('chrome: ' + JSON.stringify(constraints));\n            return func(constraints);\n          });\n        }\n      }\n      constraints.video = constraintsToChrome_(constraints.video);\n    }\n    logging('chrome: ' + JSON.stringify(constraints));\n    return func(constraints);\n  };\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        PermissionDeniedError: 'NotAllowedError',\n        InvalidStateError: 'NotReadableError',\n        DevicesNotFoundError: 'NotFoundError',\n        ConstraintNotSatisfiedError: 'OverconstrainedError',\n        TrackStartError: 'NotReadableError',\n        MediaDeviceFailedDueToShutdown: 'NotReadableError',\n        MediaDeviceKillSwitchOn: 'NotReadableError'\n      }[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraintName,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    shimConstraints_(constraints, function(c) {\n      navigator.webkitGetUserMedia(c, onSuccess, function(e) {\n        if (onError) {\n          onError(shimError_(e));\n        }\n      });\n    });\n  };\n\n  navigator.getUserMedia = getUserMedia_;\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      navigator.getUserMedia(constraints, resolve, reject);\n    });\n  };\n\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {\n      getUserMedia: getUserMediaPromise_,\n      enumerateDevices: function() {\n        return new Promise(function(resolve) {\n          var kinds = {audio: 'audioinput', video: 'videoinput'};\n          return window.MediaStreamTrack.getSources(function(devices) {\n            resolve(devices.map(function(device) {\n              return {label: device.label,\n                kind: kinds[device.kind],\n                deviceId: device.id,\n                groupId: ''};\n            }));\n          });\n        });\n      },\n      getSupportedConstraints: function() {\n        return {\n          deviceId: true, echoCancellation: true, facingMode: true,\n          frameRate: true, height: true, width: true\n        };\n      }\n    };\n  }\n\n  // A shim for getUserMedia method on the mediaDevices object.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (!navigator.mediaDevices.getUserMedia) {\n    navigator.mediaDevices.getUserMedia = function(constraints) {\n      return getUserMediaPromise_(constraints);\n    };\n  } else {\n    // Even though Chrome 45 has navigator.mediaDevices and a getUserMedia\n    // function which returns a Promise, it does not accept spec-style\n    // constraints.\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(cs) {\n      return shimConstraints_(cs, function(c) {\n        return origGetUserMedia(c).then(function(stream) {\n          if (c.audio && !stream.getAudioTracks().length ||\n              c.video && !stream.getVideoTracks().length) {\n            stream.getTracks().forEach(function(track) {\n              track.stop();\n            });\n            throw new DOMException('', 'NotFoundError');\n          }\n          return stream;\n        }, function(e) {\n          return Promise.reject(shimError_(e));\n        });\n      });\n    };\n  }\n\n  // Dummy devicechange event methods.\n  // TODO(KaptenJansson) remove once implemented in Chrome stable.\n  if (typeof navigator.mediaDevices.addEventListener === 'undefined') {\n    navigator.mediaDevices.addEventListener = function() {\n      logging('Dummy mediaDevices.addEventListener called.');\n    };\n  }\n  if (typeof navigator.mediaDevices.removeEventListener === 'undefined') {\n    navigator.mediaDevices.removeEventListener = function() {\n      logging('Dummy mediaDevices.removeEventListener called.');\n    };\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/chrome/getusermedia.js\n// module id = 134\n// module chunks = 0","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar shimRTCPeerConnection = require('rtcpeerconnection-shim');\n\nmodule.exports = {\n  shimGetUserMedia: require('./getusermedia'),\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (window.RTCIceGatherer) {\n      // ORTC defines an RTCIceCandidate object but no constructor.\n      // Not implemented in Edge.\n      if (!window.RTCIceCandidate) {\n        window.RTCIceCandidate = function(args) {\n          return args;\n        };\n      }\n      // ORTC does not have a session description object but\n      // other browsers (i.e. Chrome) that will support both PC and ORTC\n      // in the future might have this defined already.\n      if (!window.RTCSessionDescription) {\n        window.RTCSessionDescription = function(args) {\n          return args;\n        };\n      }\n      // this adds an additional event listener to MediaStrackTrack that signals\n      // when a tracks enabled property was changed. Workaround for a bug in\n      // addStream, see below. No longer required in 15025+\n      if (browserDetails.version < 15025) {\n        var origMSTEnabled = Object.getOwnPropertyDescriptor(\n            window.MediaStreamTrack.prototype, 'enabled');\n        Object.defineProperty(window.MediaStreamTrack.prototype, 'enabled', {\n          set: function(value) {\n            origMSTEnabled.set.call(this, value);\n            var ev = new Event('enabled');\n            ev.enabled = value;\n            this.dispatchEvent(ev);\n          }\n        });\n      }\n    }\n\n    // ORTC defines the DTMF sender a bit different.\n    // https://github.com/w3c/ortc/issues/714\n    if (window.RTCRtpSender && !('dtmf' in window.RTCRtpSender.prototype)) {\n      Object.defineProperty(window.RTCRtpSender.prototype, 'dtmf', {\n        get: function() {\n          if (this._dtmf === undefined) {\n            if (this.track.kind === 'audio') {\n              this._dtmf = new window.RTCDtmfSender(this);\n            } else if (this.track.kind === 'video') {\n              this._dtmf = null;\n            }\n          }\n          return this._dtmf;\n        }\n      });\n    }\n\n    window.RTCPeerConnection =\n        shimRTCPeerConnection(window, browserDetails.version);\n  },\n  shimReplaceTrack: function(window) {\n    // ORTC has replaceTrack -- https://github.com/w3c/ortc/issues/614\n    if (window.RTCRtpSender &&\n        !('replaceTrack' in window.RTCRtpSender.prototype)) {\n      window.RTCRtpSender.prototype.replaceTrack =\n          window.RTCRtpSender.prototype.setTrack;\n    }\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/edge/edge_shim.js\n// module id = 135\n// module chunks = 0","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\n\nfunction writeMediaSection(transceiver, caps, type, stream, dtlsRole) {\n  var sdp = SDPUtils.writeRtpDescription(transceiver.kind, caps);\n\n  // Map ICE parameters (ufrag, pwd) to SDP.\n  sdp += SDPUtils.writeIceParameters(\n      transceiver.iceGatherer.getLocalParameters());\n\n  // Map DTLS parameters to SDP.\n  sdp += SDPUtils.writeDtlsParameters(\n      transceiver.dtlsTransport.getLocalParameters(),\n      type === 'offer' ? 'actpass' : dtlsRole || 'active');\n\n  sdp += 'a=mid:' + transceiver.mid + '\\r\\n';\n\n  if (transceiver.rtpSender && transceiver.rtpReceiver) {\n    sdp += 'a=sendrecv\\r\\n';\n  } else if (transceiver.rtpSender) {\n    sdp += 'a=sendonly\\r\\n';\n  } else if (transceiver.rtpReceiver) {\n    sdp += 'a=recvonly\\r\\n';\n  } else {\n    sdp += 'a=inactive\\r\\n';\n  }\n\n  if (transceiver.rtpSender) {\n    // spec.\n    var msid = 'msid:' + stream.id + ' ' +\n        transceiver.rtpSender.track.id + '\\r\\n';\n    sdp += 'a=' + msid;\n\n    // for Chrome.\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n        ' ' + msid;\n    if (transceiver.sendEncodingParameters[0].rtx) {\n      sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n          ' ' + msid;\n      sdp += 'a=ssrc-group:FID ' +\n          transceiver.sendEncodingParameters[0].ssrc + ' ' +\n          transceiver.sendEncodingParameters[0].rtx.ssrc +\n          '\\r\\n';\n    }\n  }\n  // FIXME: this should be written by writeRtpDescription.\n  sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].ssrc +\n      ' cname:' + SDPUtils.localCName + '\\r\\n';\n  if (transceiver.rtpSender && transceiver.sendEncodingParameters[0].rtx) {\n    sdp += 'a=ssrc:' + transceiver.sendEncodingParameters[0].rtx.ssrc +\n        ' cname:' + SDPUtils.localCName + '\\r\\n';\n  }\n  return sdp;\n}\n\n// Edge does not like\n// 1) stun: filtered after 14393 unless ?transport=udp is present\n// 2) turn: that does not have all of turn:host:port?transport=udp\n// 3) turn: with ipv6 addresses\n// 4) turn: occurring muliple times\nfunction filterIceServers(iceServers, edgeVersion) {\n  var hasTurn = false;\n  iceServers = JSON.parse(JSON.stringify(iceServers));\n  return iceServers.filter(function(server) {\n    if (server && (server.urls || server.url)) {\n      var urls = server.urls || server.url;\n      if (server.url && !server.urls) {\n        console.warn('RTCIceServer.url is deprecated! Use urls instead.');\n      }\n      var isString = typeof urls === 'string';\n      if (isString) {\n        urls = [urls];\n      }\n      urls = urls.filter(function(url) {\n        var validTurn = url.indexOf('turn:') === 0 &&\n            url.indexOf('transport=udp') !== -1 &&\n            url.indexOf('turn:[') === -1 &&\n            !hasTurn;\n\n        if (validTurn) {\n          hasTurn = true;\n          return true;\n        }\n        return url.indexOf('stun:') === 0 && edgeVersion >= 14393 &&\n            url.indexOf('?transport=udp') === -1;\n      });\n\n      delete server.url;\n      server.urls = isString ? urls[0] : urls;\n      return !!urls.length;\n    }\n  });\n}\n\n// Determines the intersection of local and remote capabilities.\nfunction getCommonCapabilities(localCapabilities, remoteCapabilities) {\n  var commonCapabilities = {\n    codecs: [],\n    headerExtensions: [],\n    fecMechanisms: []\n  };\n\n  var findCodecByPayloadType = function(pt, codecs) {\n    pt = parseInt(pt, 10);\n    for (var i = 0; i < codecs.length; i++) {\n      if (codecs[i].payloadType === pt ||\n          codecs[i].preferredPayloadType === pt) {\n        return codecs[i];\n      }\n    }\n  };\n\n  var rtxCapabilityMatches = function(lRtx, rRtx, lCodecs, rCodecs) {\n    var lCodec = findCodecByPayloadType(lRtx.parameters.apt, lCodecs);\n    var rCodec = findCodecByPayloadType(rRtx.parameters.apt, rCodecs);\n    return lCodec && rCodec &&\n        lCodec.name.toLowerCase() === rCodec.name.toLowerCase();\n  };\n\n  localCapabilities.codecs.forEach(function(lCodec) {\n    for (var i = 0; i < remoteCapabilities.codecs.length; i++) {\n      var rCodec = remoteCapabilities.codecs[i];\n      if (lCodec.name.toLowerCase() === rCodec.name.toLowerCase() &&\n          lCodec.clockRate === rCodec.clockRate) {\n        if (lCodec.name.toLowerCase() === 'rtx' &&\n            lCodec.parameters && rCodec.parameters.apt) {\n          // for RTX we need to find the local rtx that has a apt\n          // which points to the same local codec as the remote one.\n          if (!rtxCapabilityMatches(lCodec, rCodec,\n              localCapabilities.codecs, remoteCapabilities.codecs)) {\n            continue;\n          }\n        }\n        rCodec = JSON.parse(JSON.stringify(rCodec)); // deepcopy\n        // number of channels is the highest common number of channels\n        rCodec.numChannels = Math.min(lCodec.numChannels,\n            rCodec.numChannels);\n        // push rCodec so we reply with offerer payload type\n        commonCapabilities.codecs.push(rCodec);\n\n        // determine common feedback mechanisms\n        rCodec.rtcpFeedback = rCodec.rtcpFeedback.filter(function(fb) {\n          for (var j = 0; j < lCodec.rtcpFeedback.length; j++) {\n            if (lCodec.rtcpFeedback[j].type === fb.type &&\n                lCodec.rtcpFeedback[j].parameter === fb.parameter) {\n              return true;\n            }\n          }\n          return false;\n        });\n        // FIXME: also need to determine .parameters\n        //  see https://github.com/openpeer/ortc/issues/569\n        break;\n      }\n    }\n  });\n\n  localCapabilities.headerExtensions.forEach(function(lHeaderExtension) {\n    for (var i = 0; i < remoteCapabilities.headerExtensions.length;\n         i++) {\n      var rHeaderExtension = remoteCapabilities.headerExtensions[i];\n      if (lHeaderExtension.uri === rHeaderExtension.uri) {\n        commonCapabilities.headerExtensions.push(rHeaderExtension);\n        break;\n      }\n    }\n  });\n\n  // FIXME: fecMechanisms\n  return commonCapabilities;\n}\n\n// is action=setLocalDescription with type allowed in signalingState\nfunction isActionAllowedInSignalingState(action, type, signalingState) {\n  return {\n    offer: {\n      setLocalDescription: ['stable', 'have-local-offer'],\n      setRemoteDescription: ['stable', 'have-remote-offer']\n    },\n    answer: {\n      setLocalDescription: ['have-remote-offer', 'have-local-pranswer'],\n      setRemoteDescription: ['have-local-offer', 'have-remote-pranswer']\n    }\n  }[type][action].indexOf(signalingState) !== -1;\n}\n\nfunction maybeAddCandidate(iceTransport, candidate) {\n  // Edge's internal representation adds some fields therefore\n  // not all fieldѕ are taken into account.\n  var alreadyAdded = iceTransport.getRemoteCandidates()\n      .find(function(remoteCandidate) {\n        return candidate.foundation === remoteCandidate.foundation &&\n            candidate.ip === remoteCandidate.ip &&\n            candidate.port === remoteCandidate.port &&\n            candidate.priority === remoteCandidate.priority &&\n            candidate.protocol === remoteCandidate.protocol &&\n            candidate.type === remoteCandidate.type;\n      });\n  if (!alreadyAdded) {\n    iceTransport.addRemoteCandidate(candidate);\n  }\n  return !alreadyAdded;\n}\n\n\n// https://w3c.github.io/mediacapture-main/#mediastream\n// Helper function to add the track to the stream and\n// dispatch the event ourselves.\nfunction addTrackToStreamAndFireEvent(track, stream) {\n  stream.addTrack(track);\n  var e = new Event('addtrack'); // TODO: MediaStreamTrackEvent\n  e.track = track;\n  stream.dispatchEvent(e);\n}\n\nfunction removeTrackFromStreamAndFireEvent(track, stream) {\n  stream.removeTrack(track);\n  var e = new Event('removetrack'); // TODO: MediaStreamTrackEvent\n  e.track = track;\n  stream.dispatchEvent(e);\n}\n\nfunction fireAddTrack(pc, track, receiver, streams) {\n  var trackEvent = new Event('track');\n  trackEvent.track = track;\n  trackEvent.receiver = receiver;\n  trackEvent.transceiver = {receiver: receiver};\n  trackEvent.streams = streams;\n  window.setTimeout(function() {\n    pc._dispatchEvent('track', trackEvent);\n  });\n}\n\nfunction makeError(name, description) {\n  var e = new Error(description);\n  e.name = name;\n  return e;\n}\n\nmodule.exports = function(window, edgeVersion) {\n  var RTCPeerConnection = function(config) {\n    var pc = this;\n\n    var _eventTarget = document.createDocumentFragment();\n    ['addEventListener', 'removeEventListener', 'dispatchEvent']\n        .forEach(function(method) {\n          pc[method] = _eventTarget[method].bind(_eventTarget);\n        });\n\n    this.canTrickleIceCandidates = null;\n\n    this.needNegotiation = false;\n\n    this.localStreams = [];\n    this.remoteStreams = [];\n\n    this.localDescription = null;\n    this.remoteDescription = null;\n\n    this.signalingState = 'stable';\n    this.iceConnectionState = 'new';\n    this.iceGatheringState = 'new';\n\n    config = JSON.parse(JSON.stringify(config || {}));\n\n    this.usingBundle = config.bundlePolicy === 'max-bundle';\n    if (config.rtcpMuxPolicy === 'negotiate') {\n      throw(makeError('NotSupportedError',\n          'rtcpMuxPolicy \\'negotiate\\' is not supported'));\n    } else if (!config.rtcpMuxPolicy) {\n      config.rtcpMuxPolicy = 'require';\n    }\n\n    switch (config.iceTransportPolicy) {\n      case 'all':\n      case 'relay':\n        break;\n      default:\n        config.iceTransportPolicy = 'all';\n        break;\n    }\n\n    switch (config.bundlePolicy) {\n      case 'balanced':\n      case 'max-compat':\n      case 'max-bundle':\n        break;\n      default:\n        config.bundlePolicy = 'balanced';\n        break;\n    }\n\n    config.iceServers = filterIceServers(config.iceServers || [], edgeVersion);\n\n    this._iceGatherers = [];\n    if (config.iceCandidatePoolSize) {\n      for (var i = config.iceCandidatePoolSize; i > 0; i--) {\n        this._iceGatherers = new window.RTCIceGatherer({\n          iceServers: config.iceServers,\n          gatherPolicy: config.iceTransportPolicy\n        });\n      }\n    } else {\n      config.iceCandidatePoolSize = 0;\n    }\n\n    this._config = config;\n\n    // per-track iceGathers, iceTransports, dtlsTransports, rtpSenders, ...\n    // everything that is needed to describe a SDP m-line.\n    this.transceivers = [];\n\n    this._sdpSessionId = SDPUtils.generateSessionId();\n    this._sdpSessionVersion = 0;\n\n    this._dtlsRole = undefined; // role for a=setup to use in answers.\n\n    this._isClosed = false;\n  };\n\n  // set up event handlers on prototype\n  RTCPeerConnection.prototype.onicecandidate = null;\n  RTCPeerConnection.prototype.onaddstream = null;\n  RTCPeerConnection.prototype.ontrack = null;\n  RTCPeerConnection.prototype.onremovestream = null;\n  RTCPeerConnection.prototype.onsignalingstatechange = null;\n  RTCPeerConnection.prototype.oniceconnectionstatechange = null;\n  RTCPeerConnection.prototype.onicegatheringstatechange = null;\n  RTCPeerConnection.prototype.onnegotiationneeded = null;\n  RTCPeerConnection.prototype.ondatachannel = null;\n\n  RTCPeerConnection.prototype._dispatchEvent = function(name, event) {\n    if (this._isClosed) {\n      return;\n    }\n    this.dispatchEvent(event);\n    if (typeof this['on' + name] === 'function') {\n      this['on' + name](event);\n    }\n  };\n\n  RTCPeerConnection.prototype._emitGatheringStateChange = function() {\n    var event = new Event('icegatheringstatechange');\n    this._dispatchEvent('icegatheringstatechange', event);\n  };\n\n  RTCPeerConnection.prototype.getConfiguration = function() {\n    return this._config;\n  };\n\n  RTCPeerConnection.prototype.getLocalStreams = function() {\n    return this.localStreams;\n  };\n\n  RTCPeerConnection.prototype.getRemoteStreams = function() {\n    return this.remoteStreams;\n  };\n\n  // internal helper to create a transceiver object.\n  // (whih is not yet the same as the WebRTC 1.0 transceiver)\n  RTCPeerConnection.prototype._createTransceiver = function(kind) {\n    var hasBundleTransport = this.transceivers.length > 0;\n    var transceiver = {\n      track: null,\n      iceGatherer: null,\n      iceTransport: null,\n      dtlsTransport: null,\n      localCapabilities: null,\n      remoteCapabilities: null,\n      rtpSender: null,\n      rtpReceiver: null,\n      kind: kind,\n      mid: null,\n      sendEncodingParameters: null,\n      recvEncodingParameters: null,\n      stream: null,\n      associatedRemoteMediaStreams: [],\n      wantReceive: true\n    };\n    if (this.usingBundle && hasBundleTransport) {\n      transceiver.iceTransport = this.transceivers[0].iceTransport;\n      transceiver.dtlsTransport = this.transceivers[0].dtlsTransport;\n    } else {\n      var transports = this._createIceAndDtlsTransports();\n      transceiver.iceTransport = transports.iceTransport;\n      transceiver.dtlsTransport = transports.dtlsTransport;\n    }\n    this.transceivers.push(transceiver);\n    return transceiver;\n  };\n\n  RTCPeerConnection.prototype.addTrack = function(track, stream) {\n    var alreadyExists = this.transceivers.find(function(s) {\n      return s.track === track;\n    });\n\n    if (alreadyExists) {\n      throw makeError('InvalidAccessError', 'Track already exists.');\n    }\n\n    if (this.signalingState === 'closed') {\n      throw makeError('InvalidStateError',\n          'Attempted to call addTrack on a closed peerconnection.');\n    }\n\n    var transceiver;\n    for (var i = 0; i < this.transceivers.length; i++) {\n      if (!this.transceivers[i].track &&\n          this.transceivers[i].kind === track.kind) {\n        transceiver = this.transceivers[i];\n      }\n    }\n    if (!transceiver) {\n      transceiver = this._createTransceiver(track.kind);\n    }\n\n    this._maybeFireNegotiationNeeded();\n\n    if (this.localStreams.indexOf(stream) === -1) {\n      this.localStreams.push(stream);\n    }\n\n    transceiver.track = track;\n    transceiver.stream = stream;\n    transceiver.rtpSender = new window.RTCRtpSender(track,\n        transceiver.dtlsTransport);\n    return transceiver.rtpSender;\n  };\n\n  RTCPeerConnection.prototype.addStream = function(stream) {\n    var pc = this;\n    if (edgeVersion >= 15025) {\n      stream.getTracks().forEach(function(track) {\n        pc.addTrack(track, stream);\n      });\n    } else {\n      // Clone is necessary for local demos mostly, attaching directly\n      // to two different senders does not work (build 10547).\n      // Fixed in 15025 (or earlier)\n      var clonedStream = stream.clone();\n      stream.getTracks().forEach(function(track, idx) {\n        var clonedTrack = clonedStream.getTracks()[idx];\n        track.addEventListener('enabled', function(event) {\n          clonedTrack.enabled = event.enabled;\n        });\n      });\n      clonedStream.getTracks().forEach(function(track) {\n        pc.addTrack(track, clonedStream);\n      });\n    }\n  };\n\n  RTCPeerConnection.prototype.removeTrack = function(sender) {\n    if (!(sender instanceof window.RTCRtpSender)) {\n      throw new TypeError('Argument 1 of RTCPeerConnection.removeTrack ' +\n          'does not implement interface RTCRtpSender.');\n    }\n\n    var transceiver = this.transceivers.find(function(t) {\n      return t.rtpSender === sender;\n    });\n\n    if (!transceiver) {\n      throw makeError('InvalidAccessError',\n          'Sender was not created by this connection.');\n    }\n    var stream = transceiver.stream;\n\n    transceiver.rtpSender.stop();\n    transceiver.rtpSender = null;\n    transceiver.track = null;\n    transceiver.stream = null;\n\n    // remove the stream from the set of local streams\n    var localStreams = this.transceivers.map(function(t) {\n      return t.stream;\n    });\n    if (localStreams.indexOf(stream) === -1 &&\n        this.localStreams.indexOf(stream) > -1) {\n      this.localStreams.splice(this.localStreams.indexOf(stream), 1);\n    }\n\n    this._maybeFireNegotiationNeeded();\n  };\n\n  RTCPeerConnection.prototype.removeStream = function(stream) {\n    var pc = this;\n    stream.getTracks().forEach(function(track) {\n      var sender = pc.getSenders().find(function(s) {\n        return s.track === track;\n      });\n      if (sender) {\n        pc.removeTrack(sender);\n      }\n    });\n  };\n\n  RTCPeerConnection.prototype.getSenders = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpSender;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpSender;\n    });\n  };\n\n  RTCPeerConnection.prototype.getReceivers = function() {\n    return this.transceivers.filter(function(transceiver) {\n      return !!transceiver.rtpReceiver;\n    })\n    .map(function(transceiver) {\n      return transceiver.rtpReceiver;\n    });\n  };\n\n\n  RTCPeerConnection.prototype._createIceGatherer = function(sdpMLineIndex,\n      usingBundle) {\n    var pc = this;\n    if (usingBundle && sdpMLineIndex > 0) {\n      return this.transceivers[0].iceGatherer;\n    } else if (this._iceGatherers.length) {\n      return this._iceGatherers.shift();\n    }\n    var iceGatherer = new window.RTCIceGatherer({\n      iceServers: this._config.iceServers,\n      gatherPolicy: this._config.iceTransportPolicy\n    });\n    Object.defineProperty(iceGatherer, 'state',\n        {value: 'new', writable: true}\n    );\n\n    this.transceivers[sdpMLineIndex].candidates = [];\n    this.transceivers[sdpMLineIndex].bufferCandidates = function(event) {\n      var end = !event.candidate || Object.keys(event.candidate).length === 0;\n      // polyfill since RTCIceGatherer.state is not implemented in\n      // Edge 10547 yet.\n      iceGatherer.state = end ? 'completed' : 'gathering';\n      if (pc.transceivers[sdpMLineIndex].candidates !== null) {\n        pc.transceivers[sdpMLineIndex].candidates.push(event.candidate);\n      }\n    };\n    iceGatherer.addEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    return iceGatherer;\n  };\n\n  // start gathering from an RTCIceGatherer.\n  RTCPeerConnection.prototype._gather = function(mid, sdpMLineIndex) {\n    var pc = this;\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer.onlocalcandidate) {\n      return;\n    }\n    var candidates = this.transceivers[sdpMLineIndex].candidates;\n    this.transceivers[sdpMLineIndex].candidates = null;\n    iceGatherer.removeEventListener('localcandidate',\n      this.transceivers[sdpMLineIndex].bufferCandidates);\n    iceGatherer.onlocalcandidate = function(evt) {\n      if (pc.usingBundle && sdpMLineIndex > 0) {\n        // if we know that we use bundle we can drop candidates with\n        // ѕdpMLineIndex > 0. If we don't do this then our state gets\n        // confused since we dispose the extra ice gatherer.\n        return;\n      }\n      var event = new Event('icecandidate');\n      event.candidate = {sdpMid: mid, sdpMLineIndex: sdpMLineIndex};\n\n      var cand = evt.candidate;\n      // Edge emits an empty object for RTCIceCandidateComplete‥\n      var end = !cand || Object.keys(cand).length === 0;\n      if (end) {\n        // polyfill since RTCIceGatherer.state is not implemented in\n        // Edge 10547 yet.\n        if (iceGatherer.state === 'new' || iceGatherer.state === 'gathering') {\n          iceGatherer.state = 'completed';\n        }\n      } else {\n        if (iceGatherer.state === 'new') {\n          iceGatherer.state = 'gathering';\n        }\n        // RTCIceCandidate doesn't have a component, needs to be added\n        cand.component = 1;\n        event.candidate.candidate = SDPUtils.writeCandidate(cand);\n      }\n\n      // update local description.\n      var sections = SDPUtils.splitSections(pc.localDescription.sdp);\n      if (!end) {\n        sections[event.candidate.sdpMLineIndex + 1] +=\n            'a=' + event.candidate.candidate + '\\r\\n';\n      } else {\n        sections[event.candidate.sdpMLineIndex + 1] +=\n            'a=end-of-candidates\\r\\n';\n      }\n      pc.localDescription.sdp = sections.join('');\n      var complete = pc.transceivers.every(function(transceiver) {\n        return transceiver.iceGatherer &&\n            transceiver.iceGatherer.state === 'completed';\n      });\n\n      if (pc.iceGatheringState !== 'gathering') {\n        pc.iceGatheringState = 'gathering';\n        pc._emitGatheringStateChange();\n      }\n\n      // Emit candidate. Also emit null candidate when all gatherers are\n      // complete.\n      if (!end) {\n        pc._dispatchEvent('icecandidate', event);\n      }\n      if (complete) {\n        pc._dispatchEvent('icecandidate', new Event('icecandidate'));\n        pc.iceGatheringState = 'complete';\n        pc._emitGatheringStateChange();\n      }\n    };\n\n    // emit already gathered candidates.\n    window.setTimeout(function() {\n      candidates.forEach(function(candidate) {\n        var e = new Event('RTCIceGatherEvent');\n        e.candidate = candidate;\n        iceGatherer.onlocalcandidate(e);\n      });\n    }, 0);\n  };\n\n  // Create ICE transport and DTLS transport.\n  RTCPeerConnection.prototype._createIceAndDtlsTransports = function() {\n    var pc = this;\n    var iceTransport = new window.RTCIceTransport(null);\n    iceTransport.onicestatechange = function() {\n      pc._updateConnectionState();\n    };\n\n    var dtlsTransport = new window.RTCDtlsTransport(iceTransport);\n    dtlsTransport.ondtlsstatechange = function() {\n      pc._updateConnectionState();\n    };\n    dtlsTransport.onerror = function() {\n      // onerror does not set state to failed by itpc.\n      Object.defineProperty(dtlsTransport, 'state',\n          {value: 'failed', writable: true});\n      pc._updateConnectionState();\n    };\n\n    return {\n      iceTransport: iceTransport,\n      dtlsTransport: dtlsTransport\n    };\n  };\n\n  // Destroy ICE gatherer, ICE transport and DTLS transport.\n  // Without triggering the callbacks.\n  RTCPeerConnection.prototype._disposeIceAndDtlsTransports = function(\n      sdpMLineIndex) {\n    var iceGatherer = this.transceivers[sdpMLineIndex].iceGatherer;\n    if (iceGatherer) {\n      delete iceGatherer.onlocalcandidate;\n      delete this.transceivers[sdpMLineIndex].iceGatherer;\n    }\n    var iceTransport = this.transceivers[sdpMLineIndex].iceTransport;\n    if (iceTransport) {\n      delete iceTransport.onicestatechange;\n      delete this.transceivers[sdpMLineIndex].iceTransport;\n    }\n    var dtlsTransport = this.transceivers[sdpMLineIndex].dtlsTransport;\n    if (dtlsTransport) {\n      delete dtlsTransport.ondtlsstatechange;\n      delete dtlsTransport.onerror;\n      delete this.transceivers[sdpMLineIndex].dtlsTransport;\n    }\n  };\n\n  // Start the RTP Sender and Receiver for a transceiver.\n  RTCPeerConnection.prototype._transceive = function(transceiver,\n      send, recv) {\n    var params = getCommonCapabilities(transceiver.localCapabilities,\n        transceiver.remoteCapabilities);\n    if (send && transceiver.rtpSender) {\n      params.encodings = transceiver.sendEncodingParameters;\n      params.rtcp = {\n        cname: SDPUtils.localCName,\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.recvEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.recvEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpSender.send(params);\n    }\n    if (recv && transceiver.rtpReceiver && params.codecs.length > 0) {\n      // remove RTX field in Edge 14942\n      if (transceiver.kind === 'video'\n          && transceiver.recvEncodingParameters\n          && edgeVersion < 15019) {\n        transceiver.recvEncodingParameters.forEach(function(p) {\n          delete p.rtx;\n        });\n      }\n      if (transceiver.recvEncodingParameters.length) {\n        params.encodings = transceiver.recvEncodingParameters;\n      }\n      params.rtcp = {\n        compound: transceiver.rtcpParameters.compound\n      };\n      if (transceiver.rtcpParameters.cname) {\n        params.rtcp.cname = transceiver.rtcpParameters.cname;\n      }\n      if (transceiver.sendEncodingParameters.length) {\n        params.rtcp.ssrc = transceiver.sendEncodingParameters[0].ssrc;\n      }\n      transceiver.rtpReceiver.receive(params);\n    }\n  };\n\n  RTCPeerConnection.prototype.setLocalDescription = function(description) {\n    var pc = this;\n\n    if (!isActionAllowedInSignalingState('setLocalDescription',\n        description.type, this.signalingState) || this._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set local ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var sections;\n    var sessionpart;\n    if (description.type === 'offer') {\n      // VERY limited support for SDP munging. Limited to:\n      // * changing the order of codecs\n      sections = SDPUtils.splitSections(description.sdp);\n      sessionpart = sections.shift();\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var caps = SDPUtils.parseRtpParameters(mediaSection);\n        pc.transceivers[sdpMLineIndex].localCapabilities = caps;\n      });\n\n      this.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n        pc._gather(transceiver.mid, sdpMLineIndex);\n      });\n    } else if (description.type === 'answer') {\n      sections = SDPUtils.splitSections(pc.remoteDescription.sdp);\n      sessionpart = sections.shift();\n      var isIceLite = SDPUtils.matchPrefix(sessionpart,\n          'a=ice-lite').length > 0;\n      sections.forEach(function(mediaSection, sdpMLineIndex) {\n        var transceiver = pc.transceivers[sdpMLineIndex];\n        var iceGatherer = transceiver.iceGatherer;\n        var iceTransport = transceiver.iceTransport;\n        var dtlsTransport = transceiver.dtlsTransport;\n        var localCapabilities = transceiver.localCapabilities;\n        var remoteCapabilities = transceiver.remoteCapabilities;\n\n        // treat bundle-only as not-rejected.\n        var rejected = SDPUtils.isRejected(mediaSection) &&\n            SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n\n        if (!rejected && !transceiver.isDatachannel) {\n          var remoteIceParameters = SDPUtils.getIceParameters(\n              mediaSection, sessionpart);\n          var remoteDtlsParameters = SDPUtils.getDtlsParameters(\n              mediaSection, sessionpart);\n          if (isIceLite) {\n            remoteDtlsParameters.role = 'server';\n          }\n\n          if (!pc.usingBundle || sdpMLineIndex === 0) {\n            pc._gather(transceiver.mid, sdpMLineIndex);\n            if (iceTransport.state === 'new') {\n              iceTransport.start(iceGatherer, remoteIceParameters,\n                  isIceLite ? 'controlling' : 'controlled');\n            }\n            if (dtlsTransport.state === 'new') {\n              dtlsTransport.start(remoteDtlsParameters);\n            }\n          }\n\n          // Calculate intersection of capabilities.\n          var params = getCommonCapabilities(localCapabilities,\n              remoteCapabilities);\n\n          // Start the RTCRtpSender. The RTCRtpReceiver for this\n          // transceiver has already been started in setRemoteDescription.\n          pc._transceive(transceiver,\n              params.codecs.length > 0,\n              false);\n        }\n      });\n    }\n\n    this.localDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    switch (description.type) {\n      case 'offer':\n        this._updateSignalingState('have-local-offer');\n        break;\n      case 'answer':\n        this._updateSignalingState('stable');\n        break;\n      default:\n        throw new TypeError('unsupported type \"' + description.type +\n            '\"');\n    }\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.setRemoteDescription = function(description) {\n    var pc = this;\n\n    if (!isActionAllowedInSignalingState('setRemoteDescription',\n        description.type, this.signalingState) || this._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not set remote ' + description.type +\n          ' in state ' + pc.signalingState));\n    }\n\n    var streams = {};\n    this.remoteStreams.forEach(function(stream) {\n      streams[stream.id] = stream;\n    });\n    var receiverList = [];\n    var sections = SDPUtils.splitSections(description.sdp);\n    var sessionpart = sections.shift();\n    var isIceLite = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-lite').length > 0;\n    var usingBundle = SDPUtils.matchPrefix(sessionpart,\n        'a=group:BUNDLE ').length > 0;\n    this.usingBundle = usingBundle;\n    var iceOptions = SDPUtils.matchPrefix(sessionpart,\n        'a=ice-options:')[0];\n    if (iceOptions) {\n      this.canTrickleIceCandidates = iceOptions.substr(14).split(' ')\n          .indexOf('trickle') >= 0;\n    } else {\n      this.canTrickleIceCandidates = false;\n    }\n\n    sections.forEach(function(mediaSection, sdpMLineIndex) {\n      var lines = SDPUtils.splitLines(mediaSection);\n      var kind = SDPUtils.getKind(mediaSection);\n      // treat bundle-only as not-rejected.\n      var rejected = SDPUtils.isRejected(mediaSection) &&\n          SDPUtils.matchPrefix(mediaSection, 'a=bundle-only').length === 0;\n      var protocol = lines[0].substr(2).split(' ')[2];\n\n      var direction = SDPUtils.getDirection(mediaSection, sessionpart);\n      var remoteMsid = SDPUtils.parseMsid(mediaSection);\n\n      var mid = SDPUtils.getMid(mediaSection) || SDPUtils.generateIdentifier();\n\n      // Reject datachannels which are not implemented yet.\n      if (kind === 'application' && protocol === 'DTLS/SCTP') {\n        pc.transceivers[sdpMLineIndex] = {\n          mid: mid,\n          isDatachannel: true\n        };\n        return;\n      }\n\n      var transceiver;\n      var iceGatherer;\n      var iceTransport;\n      var dtlsTransport;\n      var rtpReceiver;\n      var sendEncodingParameters;\n      var recvEncodingParameters;\n      var localCapabilities;\n\n      var track;\n      // FIXME: ensure the mediaSection has rtcp-mux set.\n      var remoteCapabilities = SDPUtils.parseRtpParameters(mediaSection);\n      var remoteIceParameters;\n      var remoteDtlsParameters;\n      if (!rejected) {\n        remoteIceParameters = SDPUtils.getIceParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters = SDPUtils.getDtlsParameters(mediaSection,\n            sessionpart);\n        remoteDtlsParameters.role = 'client';\n      }\n      recvEncodingParameters =\n          SDPUtils.parseRtpEncodingParameters(mediaSection);\n\n      var rtcpParameters = SDPUtils.parseRtcpParameters(mediaSection);\n\n      var isComplete = SDPUtils.matchPrefix(mediaSection,\n          'a=end-of-candidates', sessionpart).length > 0;\n      var cands = SDPUtils.matchPrefix(mediaSection, 'a=candidate:')\n          .map(function(cand) {\n            return SDPUtils.parseCandidate(cand);\n          })\n          .filter(function(cand) {\n            return cand.component === 1;\n          });\n\n      // Check if we can use BUNDLE and dispose transports.\n      if ((description.type === 'offer' || description.type === 'answer') &&\n          !rejected && usingBundle && sdpMLineIndex > 0 &&\n          pc.transceivers[sdpMLineIndex]) {\n        pc._disposeIceAndDtlsTransports(sdpMLineIndex);\n        pc.transceivers[sdpMLineIndex].iceGatherer =\n            pc.transceivers[0].iceGatherer;\n        pc.transceivers[sdpMLineIndex].iceTransport =\n            pc.transceivers[0].iceTransport;\n        pc.transceivers[sdpMLineIndex].dtlsTransport =\n            pc.transceivers[0].dtlsTransport;\n        if (pc.transceivers[sdpMLineIndex].rtpSender) {\n          pc.transceivers[sdpMLineIndex].rtpSender.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n        if (pc.transceivers[sdpMLineIndex].rtpReceiver) {\n          pc.transceivers[sdpMLineIndex].rtpReceiver.setTransport(\n              pc.transceivers[0].dtlsTransport);\n        }\n      }\n      if (description.type === 'offer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex] ||\n            pc._createTransceiver(kind);\n        transceiver.mid = mid;\n\n        if (!transceiver.iceGatherer) {\n          transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n              usingBundle);\n        }\n\n        if (cands.length && transceiver.iceTransport.state === 'new') {\n          if (isComplete && (!usingBundle || sdpMLineIndex === 0)) {\n            transceiver.iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        localCapabilities = window.RTCRtpReceiver.getCapabilities(kind);\n\n        // filter RTX until additional stuff needed for RTX is implemented\n        // in adapter.js\n        if (edgeVersion < 15019) {\n          localCapabilities.codecs = localCapabilities.codecs.filter(\n              function(codec) {\n                return codec.name !== 'rtx';\n              });\n        }\n\n        sendEncodingParameters = transceiver.sendEncodingParameters || [{\n          ssrc: (2 * sdpMLineIndex + 2) * 1001\n        }];\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        var isNewTrack = false;\n        if (direction === 'sendrecv' || direction === 'sendonly') {\n          isNewTrack = !transceiver.rtpReceiver;\n          rtpReceiver = transceiver.rtpReceiver ||\n              new window.RTCRtpReceiver(transceiver.dtlsTransport, kind);\n\n          if (isNewTrack) {\n            var stream;\n            track = rtpReceiver.track;\n            // FIXME: does not work with Plan B.\n            if (remoteMsid && remoteMsid.stream === '-') {\n              // no-op. a stream id of '-' means: no associated stream.\n            } else if (remoteMsid) {\n              if (!streams[remoteMsid.stream]) {\n                streams[remoteMsid.stream] = new window.MediaStream();\n                Object.defineProperty(streams[remoteMsid.stream], 'id', {\n                  get: function() {\n                    return remoteMsid.stream;\n                  }\n                });\n              }\n              Object.defineProperty(track, 'id', {\n                get: function() {\n                  return remoteMsid.track;\n                }\n              });\n              stream = streams[remoteMsid.stream];\n            } else {\n              if (!streams.default) {\n                streams.default = new window.MediaStream();\n              }\n              stream = streams.default;\n            }\n            if (stream) {\n              addTrackToStreamAndFireEvent(track, stream);\n              transceiver.associatedRemoteMediaStreams.push(stream);\n            }\n            receiverList.push([track, rtpReceiver, stream]);\n          }\n        } else if (transceiver.rtpReceiver && transceiver.rtpReceiver.track) {\n          transceiver.associatedRemoteMediaStreams.forEach(function(s) {\n            var nativeTrack = s.getTracks().find(function(t) {\n              return t.id === transceiver.rtpReceiver.track.id;\n            });\n            if (nativeTrack) {\n              removeTrackFromStreamAndFireEvent(nativeTrack, s);\n            }\n          });\n          transceiver.associatedRemoteMediaStreams = [];\n        }\n\n        transceiver.localCapabilities = localCapabilities;\n        transceiver.remoteCapabilities = remoteCapabilities;\n        transceiver.rtpReceiver = rtpReceiver;\n        transceiver.rtcpParameters = rtcpParameters;\n        transceiver.sendEncodingParameters = sendEncodingParameters;\n        transceiver.recvEncodingParameters = recvEncodingParameters;\n\n        // Start the RTCRtpReceiver now. The RTPSender is started in\n        // setLocalDescription.\n        pc._transceive(pc.transceivers[sdpMLineIndex],\n            false,\n            isNewTrack);\n      } else if (description.type === 'answer' && !rejected) {\n        transceiver = pc.transceivers[sdpMLineIndex];\n        iceGatherer = transceiver.iceGatherer;\n        iceTransport = transceiver.iceTransport;\n        dtlsTransport = transceiver.dtlsTransport;\n        rtpReceiver = transceiver.rtpReceiver;\n        sendEncodingParameters = transceiver.sendEncodingParameters;\n        localCapabilities = transceiver.localCapabilities;\n\n        pc.transceivers[sdpMLineIndex].recvEncodingParameters =\n            recvEncodingParameters;\n        pc.transceivers[sdpMLineIndex].remoteCapabilities =\n            remoteCapabilities;\n        pc.transceivers[sdpMLineIndex].rtcpParameters = rtcpParameters;\n\n        if (cands.length && iceTransport.state === 'new') {\n          if ((isIceLite || isComplete) &&\n              (!usingBundle || sdpMLineIndex === 0)) {\n            iceTransport.setRemoteCandidates(cands);\n          } else {\n            cands.forEach(function(candidate) {\n              maybeAddCandidate(transceiver.iceTransport, candidate);\n            });\n          }\n        }\n\n        if (!usingBundle || sdpMLineIndex === 0) {\n          if (iceTransport.state === 'new') {\n            iceTransport.start(iceGatherer, remoteIceParameters,\n                'controlling');\n          }\n          if (dtlsTransport.state === 'new') {\n            dtlsTransport.start(remoteDtlsParameters);\n          }\n        }\n\n        pc._transceive(transceiver,\n            direction === 'sendrecv' || direction === 'recvonly',\n            direction === 'sendrecv' || direction === 'sendonly');\n\n        // TODO: rewrite to use http://w3c.github.io/webrtc-pc/#set-associated-remote-streams\n        if (rtpReceiver &&\n            (direction === 'sendrecv' || direction === 'sendonly')) {\n          track = rtpReceiver.track;\n          if (remoteMsid) {\n            if (!streams[remoteMsid.stream]) {\n              streams[remoteMsid.stream] = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams[remoteMsid.stream]);\n            receiverList.push([track, rtpReceiver, streams[remoteMsid.stream]]);\n          } else {\n            if (!streams.default) {\n              streams.default = new window.MediaStream();\n            }\n            addTrackToStreamAndFireEvent(track, streams.default);\n            receiverList.push([track, rtpReceiver, streams.default]);\n          }\n        } else {\n          // FIXME: actually the receiver should be created later.\n          delete transceiver.rtpReceiver;\n        }\n      }\n    });\n\n    if (this._dtlsRole === undefined) {\n      this._dtlsRole = description.type === 'offer' ? 'active' : 'passive';\n    }\n\n    this.remoteDescription = {\n      type: description.type,\n      sdp: description.sdp\n    };\n    switch (description.type) {\n      case 'offer':\n        this._updateSignalingState('have-remote-offer');\n        break;\n      case 'answer':\n        this._updateSignalingState('stable');\n        break;\n      default:\n        throw new TypeError('unsupported type \"' + description.type +\n            '\"');\n    }\n    Object.keys(streams).forEach(function(sid) {\n      var stream = streams[sid];\n      if (stream.getTracks().length) {\n        if (pc.remoteStreams.indexOf(stream) === -1) {\n          pc.remoteStreams.push(stream);\n          var event = new Event('addstream');\n          event.stream = stream;\n          window.setTimeout(function() {\n            pc._dispatchEvent('addstream', event);\n          });\n        }\n\n        receiverList.forEach(function(item) {\n          var track = item[0];\n          var receiver = item[1];\n          if (stream.id !== item[2].id) {\n            return;\n          }\n          fireAddTrack(pc, track, receiver, [stream]);\n        });\n      }\n    });\n    receiverList.forEach(function(item) {\n      if (item[2]) {\n        return;\n      }\n      fireAddTrack(pc, item[0], item[1], []);\n    });\n\n    // check whether addIceCandidate({}) was called within four seconds after\n    // setRemoteDescription.\n    window.setTimeout(function() {\n      if (!(pc && pc.transceivers)) {\n        return;\n      }\n      pc.transceivers.forEach(function(transceiver) {\n        if (transceiver.iceTransport &&\n            transceiver.iceTransport.state === 'new' &&\n            transceiver.iceTransport.getRemoteCandidates().length > 0) {\n          console.warn('Timeout for addRemoteCandidate. Consider sending ' +\n              'an end-of-candidates notification');\n          transceiver.iceTransport.addRemoteCandidate({});\n        }\n      });\n    }, 4000);\n\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.close = function() {\n    this.transceivers.forEach(function(transceiver) {\n      /* not yet\n      if (transceiver.iceGatherer) {\n        transceiver.iceGatherer.close();\n      }\n      */\n      if (transceiver.iceTransport) {\n        transceiver.iceTransport.stop();\n      }\n      if (transceiver.dtlsTransport) {\n        transceiver.dtlsTransport.stop();\n      }\n      if (transceiver.rtpSender) {\n        transceiver.rtpSender.stop();\n      }\n      if (transceiver.rtpReceiver) {\n        transceiver.rtpReceiver.stop();\n      }\n    });\n    // FIXME: clean up tracks, local streams, remote streams, etc\n    this._isClosed = true;\n    this._updateSignalingState('closed');\n  };\n\n  // Update the signaling state.\n  RTCPeerConnection.prototype._updateSignalingState = function(newState) {\n    this.signalingState = newState;\n    var event = new Event('signalingstatechange');\n    this._dispatchEvent('signalingstatechange', event);\n  };\n\n  // Determine whether to fire the negotiationneeded event.\n  RTCPeerConnection.prototype._maybeFireNegotiationNeeded = function() {\n    var pc = this;\n    if (this.signalingState !== 'stable' || this.needNegotiation === true) {\n      return;\n    }\n    this.needNegotiation = true;\n    window.setTimeout(function() {\n      if (pc.needNegotiation === false) {\n        return;\n      }\n      pc.needNegotiation = false;\n      var event = new Event('negotiationneeded');\n      pc._dispatchEvent('negotiationneeded', event);\n    }, 0);\n  };\n\n  // Update the connection state.\n  RTCPeerConnection.prototype._updateConnectionState = function() {\n    var newState;\n    var states = {\n      'new': 0,\n      closed: 0,\n      connecting: 0,\n      checking: 0,\n      connected: 0,\n      completed: 0,\n      disconnected: 0,\n      failed: 0\n    };\n    this.transceivers.forEach(function(transceiver) {\n      states[transceiver.iceTransport.state]++;\n      states[transceiver.dtlsTransport.state]++;\n    });\n    // ICETransport.completed and connected are the same for this purpose.\n    states.connected += states.completed;\n\n    newState = 'new';\n    if (states.failed > 0) {\n      newState = 'failed';\n    } else if (states.connecting > 0 || states.checking > 0) {\n      newState = 'connecting';\n    } else if (states.disconnected > 0) {\n      newState = 'disconnected';\n    } else if (states.new > 0) {\n      newState = 'new';\n    } else if (states.connected > 0 || states.completed > 0) {\n      newState = 'connected';\n    }\n\n    if (newState !== this.iceConnectionState) {\n      this.iceConnectionState = newState;\n      var event = new Event('iceconnectionstatechange');\n      this._dispatchEvent('iceconnectionstatechange', event);\n    }\n  };\n\n  RTCPeerConnection.prototype.createOffer = function() {\n    var pc = this;\n\n    if (this._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createOffer after close'));\n    }\n\n    var numAudioTracks = this.transceivers.filter(function(t) {\n      return t.kind === 'audio';\n    }).length;\n    var numVideoTracks = this.transceivers.filter(function(t) {\n      return t.kind === 'video';\n    }).length;\n\n    // Determine number of audio and video tracks we need to send/recv.\n    var offerOptions = arguments[0];\n    if (offerOptions) {\n      // Reject Chrome legacy constraints.\n      if (offerOptions.mandatory || offerOptions.optional) {\n        throw new TypeError(\n            'Legacy mandatory/optional constraints not supported.');\n      }\n      if (offerOptions.offerToReceiveAudio !== undefined) {\n        if (offerOptions.offerToReceiveAudio === true) {\n          numAudioTracks = 1;\n        } else if (offerOptions.offerToReceiveAudio === false) {\n          numAudioTracks = 0;\n        } else {\n          numAudioTracks = offerOptions.offerToReceiveAudio;\n        }\n      }\n      if (offerOptions.offerToReceiveVideo !== undefined) {\n        if (offerOptions.offerToReceiveVideo === true) {\n          numVideoTracks = 1;\n        } else if (offerOptions.offerToReceiveVideo === false) {\n          numVideoTracks = 0;\n        } else {\n          numVideoTracks = offerOptions.offerToReceiveVideo;\n        }\n      }\n    }\n\n    this.transceivers.forEach(function(transceiver) {\n      if (transceiver.kind === 'audio') {\n        numAudioTracks--;\n        if (numAudioTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      } else if (transceiver.kind === 'video') {\n        numVideoTracks--;\n        if (numVideoTracks < 0) {\n          transceiver.wantReceive = false;\n        }\n      }\n    });\n\n    // Create M-lines for recvonly streams.\n    while (numAudioTracks > 0 || numVideoTracks > 0) {\n      if (numAudioTracks > 0) {\n        this._createTransceiver('audio');\n        numAudioTracks--;\n      }\n      if (numVideoTracks > 0) {\n        this._createTransceiver('video');\n        numVideoTracks--;\n      }\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(this._sdpSessionId,\n        this._sdpSessionVersion++);\n    this.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      // For each track, create an ice gatherer, ice transport,\n      // dtls transport, potentially rtpsender and rtpreceiver.\n      var track = transceiver.track;\n      var kind = transceiver.kind;\n      var mid = SDPUtils.generateIdentifier();\n      transceiver.mid = mid;\n\n      if (!transceiver.iceGatherer) {\n        transceiver.iceGatherer = pc._createIceGatherer(sdpMLineIndex,\n            pc.usingBundle);\n      }\n\n      var localCapabilities = window.RTCRtpSender.getCapabilities(kind);\n      // filter RTX until additional stuff needed for RTX is implemented\n      // in adapter.js\n      if (edgeVersion < 15019) {\n        localCapabilities.codecs = localCapabilities.codecs.filter(\n            function(codec) {\n              return codec.name !== 'rtx';\n            });\n      }\n      localCapabilities.codecs.forEach(function(codec) {\n        // work around https://bugs.chromium.org/p/webrtc/issues/detail?id=6552\n        // by adding level-asymmetry-allowed=1\n        if (codec.name === 'H264' &&\n            codec.parameters['level-asymmetry-allowed'] === undefined) {\n          codec.parameters['level-asymmetry-allowed'] = '1';\n        }\n      });\n\n      // generate an ssrc now, to be used later in rtpSender.send\n      var sendEncodingParameters = transceiver.sendEncodingParameters || [{\n        ssrc: (2 * sdpMLineIndex + 1) * 1001\n      }];\n      if (track) {\n        // add RTX\n        if (edgeVersion >= 15019 && kind === 'video' &&\n            !sendEncodingParameters[0].rtx) {\n          sendEncodingParameters[0].rtx = {\n            ssrc: sendEncodingParameters[0].ssrc + 1\n          };\n        }\n      }\n\n      if (transceiver.wantReceive) {\n        transceiver.rtpReceiver = new window.RTCRtpReceiver(\n            transceiver.dtlsTransport, kind);\n      }\n\n      transceiver.localCapabilities = localCapabilities;\n      transceiver.sendEncodingParameters = sendEncodingParameters;\n    });\n\n    // always offer BUNDLE and dispose on return if not supported.\n    if (this._config.bundlePolicy !== 'max-compat') {\n      sdp += 'a=group:BUNDLE ' + this.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    sdp += 'a=ice-options:trickle\\r\\n';\n\n    this.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      sdp += writeMediaSection(transceiver, transceiver.localCapabilities,\n          'offer', transceiver.stream, pc._dtlsRole);\n      sdp += 'a=rtcp-rsize\\r\\n';\n\n      if (transceiver.iceGatherer && pc.iceGatheringState !== 'new' &&\n          (sdpMLineIndex === 0 || !pc.usingBundle)) {\n        transceiver.iceGatherer.getLocalCandidates().forEach(function(cand) {\n          cand.component = 1;\n          sdp += 'a=' + SDPUtils.writeCandidate(cand) + '\\r\\n';\n        });\n\n        if (transceiver.iceGatherer.state === 'completed') {\n          sdp += 'a=end-of-candidates\\r\\n';\n        }\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'offer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.createAnswer = function() {\n    var pc = this;\n\n    if (this._isClosed) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not call createAnswer after close'));\n    }\n\n    var sdp = SDPUtils.writeSessionBoilerplate(this._sdpSessionId,\n        this._sdpSessionVersion++);\n    if (this.usingBundle) {\n      sdp += 'a=group:BUNDLE ' + this.transceivers.map(function(t) {\n        return t.mid;\n      }).join(' ') + '\\r\\n';\n    }\n    var mediaSectionsInOffer = SDPUtils.splitSections(\n        this.remoteDescription.sdp).length - 1;\n    this.transceivers.forEach(function(transceiver, sdpMLineIndex) {\n      if (sdpMLineIndex + 1 > mediaSectionsInOffer) {\n        return;\n      }\n      if (transceiver.isDatachannel) {\n        sdp += 'm=application 0 DTLS/SCTP 5000\\r\\n' +\n            'c=IN IP4 0.0.0.0\\r\\n' +\n            'a=mid:' + transceiver.mid + '\\r\\n';\n        return;\n      }\n\n      // FIXME: look at direction.\n      if (transceiver.stream) {\n        var localTrack;\n        if (transceiver.kind === 'audio') {\n          localTrack = transceiver.stream.getAudioTracks()[0];\n        } else if (transceiver.kind === 'video') {\n          localTrack = transceiver.stream.getVideoTracks()[0];\n        }\n        if (localTrack) {\n          // add RTX\n          if (edgeVersion >= 15019 && transceiver.kind === 'video' &&\n              !transceiver.sendEncodingParameters[0].rtx) {\n            transceiver.sendEncodingParameters[0].rtx = {\n              ssrc: transceiver.sendEncodingParameters[0].ssrc + 1\n            };\n          }\n        }\n      }\n\n      // Calculate intersection of capabilities.\n      var commonCapabilities = getCommonCapabilities(\n          transceiver.localCapabilities,\n          transceiver.remoteCapabilities);\n\n      var hasRtx = commonCapabilities.codecs.filter(function(c) {\n        return c.name.toLowerCase() === 'rtx';\n      }).length;\n      if (!hasRtx && transceiver.sendEncodingParameters[0].rtx) {\n        delete transceiver.sendEncodingParameters[0].rtx;\n      }\n\n      sdp += writeMediaSection(transceiver, commonCapabilities,\n          'answer', transceiver.stream, pc._dtlsRole);\n      if (transceiver.rtcpParameters &&\n          transceiver.rtcpParameters.reducedSize) {\n        sdp += 'a=rtcp-rsize\\r\\n';\n      }\n    });\n\n    var desc = new window.RTCSessionDescription({\n      type: 'answer',\n      sdp: sdp\n    });\n    return Promise.resolve(desc);\n  };\n\n  RTCPeerConnection.prototype.addIceCandidate = function(candidate) {\n    var sections;\n    if (!candidate || candidate.candidate === '') {\n      for (var j = 0; j < this.transceivers.length; j++) {\n        if (this.transceivers[j].isDatachannel) {\n          continue;\n        }\n        this.transceivers[j].iceTransport.addRemoteCandidate({});\n        sections = SDPUtils.splitSections(this.remoteDescription.sdp);\n        sections[j + 1] += 'a=end-of-candidates\\r\\n';\n        this.remoteDescription.sdp = sections.join('');\n        if (this.usingBundle) {\n          break;\n        }\n      }\n    } else if (!(candidate.sdpMLineIndex !== undefined || candidate.sdpMid)) {\n      throw new TypeError('sdpMLineIndex or sdpMid required');\n    } else if (!this.remoteDescription) {\n      return Promise.reject(makeError('InvalidStateError',\n          'Can not add ICE candidate without a remote description'));\n    } else {\n      var sdpMLineIndex = candidate.sdpMLineIndex;\n      if (candidate.sdpMid) {\n        for (var i = 0; i < this.transceivers.length; i++) {\n          if (this.transceivers[i].mid === candidate.sdpMid) {\n            sdpMLineIndex = i;\n            break;\n          }\n        }\n      }\n      var transceiver = this.transceivers[sdpMLineIndex];\n      if (transceiver) {\n        if (transceiver.isDatachannel) {\n          return Promise.resolve();\n        }\n        var cand = Object.keys(candidate.candidate).length > 0 ?\n            SDPUtils.parseCandidate(candidate.candidate) : {};\n        // Ignore Chrome's invalid candidates since Edge does not like them.\n        if (cand.protocol === 'tcp' && (cand.port === 0 || cand.port === 9)) {\n          return Promise.resolve();\n        }\n        // Ignore RTCP candidates, we assume RTCP-MUX.\n        if (cand.component && cand.component !== 1) {\n          return Promise.resolve();\n        }\n        // when using bundle, avoid adding candidates to the wrong\n        // ice transport. And avoid adding candidates added in the SDP.\n        if (sdpMLineIndex === 0 || (sdpMLineIndex > 0 &&\n            transceiver.iceTransport !== this.transceivers[0].iceTransport)) {\n          if (!maybeAddCandidate(transceiver.iceTransport, cand)) {\n            return Promise.reject(makeError('OperationError',\n                'Can not add ICE candidate'));\n          }\n        }\n\n        // update the remoteDescription.\n        var candidateString = candidate.candidate.trim();\n        if (candidateString.indexOf('a=') === 0) {\n          candidateString = candidateString.substr(2);\n        }\n        sections = SDPUtils.splitSections(this.remoteDescription.sdp);\n        sections[sdpMLineIndex + 1] += 'a=' +\n            (cand.type ? candidateString : 'end-of-candidates')\n            + '\\r\\n';\n        this.remoteDescription.sdp = sections.join('');\n      } else {\n        return Promise.reject(makeError('OperationError',\n            'Can not add ICE candidate'));\n      }\n    }\n    return Promise.resolve();\n  };\n\n  RTCPeerConnection.prototype.getStats = function() {\n    var promises = [];\n    this.transceivers.forEach(function(transceiver) {\n      ['rtpSender', 'rtpReceiver', 'iceGatherer', 'iceTransport',\n          'dtlsTransport'].forEach(function(method) {\n            if (transceiver[method]) {\n              promises.push(transceiver[method].getStats());\n            }\n          });\n    });\n    var fixStatsType = function(stat) {\n      return {\n        inboundrtp: 'inbound-rtp',\n        outboundrtp: 'outbound-rtp',\n        candidatepair: 'candidate-pair',\n        localcandidate: 'local-candidate',\n        remotecandidate: 'remote-candidate'\n      }[stat.type] || stat.type;\n    };\n    return new Promise(function(resolve) {\n      // shim getStats with maplike support\n      var results = new Map();\n      Promise.all(promises).then(function(res) {\n        res.forEach(function(result) {\n          Object.keys(result).forEach(function(id) {\n            result[id].type = fixStatsType(result[id]);\n            results.set(id, result[id]);\n          });\n        });\n        resolve(results);\n      });\n    });\n  };\n\n  // legacy callback shims. Should be moved to adapter.js some days.\n  var methods = ['createOffer', 'createAnswer'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[0] === 'function' ||\n          typeof args[1] === 'function') { // legacy\n        return nativeMethod.apply(this, [arguments[2]])\n        .then(function(description) {\n          if (typeof args[0] === 'function') {\n            args[0].apply(null, [description]);\n          }\n        }, function(error) {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  methods = ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate'];\n  methods.forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function' ||\n          typeof args[2] === 'function') { // legacy\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        }, function(error) {\n          if (typeof args[2] === 'function') {\n            args[2].apply(null, [error]);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  // getStats is special. It doesn't have a spec legacy method yet we support\n  // getStats(something, cb) without error callbacks.\n  ['getStats'].forEach(function(method) {\n    var nativeMethod = RTCPeerConnection.prototype[method];\n    RTCPeerConnection.prototype[method] = function() {\n      var args = arguments;\n      if (typeof args[1] === 'function') {\n        return nativeMethod.apply(this, arguments)\n        .then(function() {\n          if (typeof args[1] === 'function') {\n            args[1].apply(null);\n          }\n        });\n      }\n      return nativeMethod.apply(this, arguments);\n    };\n  });\n\n  return RTCPeerConnection;\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/rtcpeerconnection-shim/rtcpeerconnection.js\n// module id = 136\n// module chunks = 0","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var navigator = window && window.navigator;\n\n  var shimError_ = function(e) {\n    return {\n      name: {PermissionDeniedError: 'NotAllowedError'}[e.name] || e.name,\n      message: e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name;\n      }\n    };\n  };\n\n  // getUserMedia error shim.\n  var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n      bind(navigator.mediaDevices);\n  navigator.mediaDevices.getUserMedia = function(c) {\n    return origGetUserMedia(c).catch(function(e) {\n      return Promise.reject(shimError_(e));\n    });\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/edge/getusermedia.js\n// module id = 137\n// module chunks = 0","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\n\nvar firefoxShim = {\n  shimOnTrack: function(window) {\n    if (typeof window === 'object' && window.RTCPeerConnection && !('ontrack' in\n        window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'ontrack', {\n        get: function() {\n          return this._ontrack;\n        },\n        set: function(f) {\n          if (this._ontrack) {\n            this.removeEventListener('track', this._ontrack);\n            this.removeEventListener('addstream', this._ontrackpoly);\n          }\n          this.addEventListener('track', this._ontrack = f);\n          this.addEventListener('addstream', this._ontrackpoly = function(e) {\n            e.stream.getTracks().forEach(function(track) {\n              var event = new Event('track');\n              event.track = track;\n              event.receiver = {track: track};\n              event.transceiver = {receiver: event.receiver};\n              event.streams = [e.stream];\n              this.dispatchEvent(event);\n            }.bind(this));\n          }.bind(this));\n        }\n      });\n    }\n    if (typeof window === 'object' && window.RTCTrackEvent &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        !('transceiver' in window.RTCTrackEvent.prototype)) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimSourceObject: function(window) {\n    // Firefox has supported mozSrcObject since FF22, unprefixed in 42.\n    if (typeof window === 'object') {\n      if (window.HTMLMediaElement &&\n        !('srcObject' in window.HTMLMediaElement.prototype)) {\n        // Shim the srcObject property, once, when HTMLMediaElement is found.\n        Object.defineProperty(window.HTMLMediaElement.prototype, 'srcObject', {\n          get: function() {\n            return this.mozSrcObject;\n          },\n          set: function(stream) {\n            this.mozSrcObject = stream;\n          }\n        });\n      }\n    }\n  },\n\n  shimPeerConnection: function(window) {\n    var browserDetails = utils.detectBrowser(window);\n\n    if (typeof window !== 'object' || !(window.RTCPeerConnection ||\n        window.mozRTCPeerConnection)) {\n      return; // probably media.peerconnection.enabled=false in about:config\n    }\n    // The RTCPeerConnection object.\n    if (!window.RTCPeerConnection) {\n      window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n        if (browserDetails.version < 38) {\n          // .urls is not supported in FF < 38.\n          // create RTCIceServers with a single url.\n          if (pcConfig && pcConfig.iceServers) {\n            var newIceServers = [];\n            for (var i = 0; i < pcConfig.iceServers.length; i++) {\n              var server = pcConfig.iceServers[i];\n              if (server.hasOwnProperty('urls')) {\n                for (var j = 0; j < server.urls.length; j++) {\n                  var newServer = {\n                    url: server.urls[j]\n                  };\n                  if (server.urls[j].indexOf('turn') === 0) {\n                    newServer.username = server.username;\n                    newServer.credential = server.credential;\n                  }\n                  newIceServers.push(newServer);\n                }\n              } else {\n                newIceServers.push(pcConfig.iceServers[i]);\n              }\n            }\n            pcConfig.iceServers = newIceServers;\n          }\n        }\n        return new window.mozRTCPeerConnection(pcConfig, pcConstraints);\n      };\n      window.RTCPeerConnection.prototype =\n          window.mozRTCPeerConnection.prototype;\n\n      // wrap static methods. Currently just generateCertificate.\n      if (window.mozRTCPeerConnection.generateCertificate) {\n        Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n          get: function() {\n            return window.mozRTCPeerConnection.generateCertificate;\n          }\n        });\n      }\n\n      window.RTCSessionDescription = window.mozRTCSessionDescription;\n      window.RTCIceCandidate = window.mozRTCIceCandidate;\n    }\n\n    // shim away need for obsolete RTCIceCandidate/RTCSessionDescription.\n    ['setLocalDescription', 'setRemoteDescription', 'addIceCandidate']\n        .forEach(function(method) {\n          var nativeMethod = window.RTCPeerConnection.prototype[method];\n          window.RTCPeerConnection.prototype[method] = function() {\n            arguments[0] = new ((method === 'addIceCandidate') ?\n                window.RTCIceCandidate :\n                window.RTCSessionDescription)(arguments[0]);\n            return nativeMethod.apply(this, arguments);\n          };\n        });\n\n    // support for addIceCandidate(null or undefined)\n    var nativeAddIceCandidate =\n        window.RTCPeerConnection.prototype.addIceCandidate;\n    window.RTCPeerConnection.prototype.addIceCandidate = function() {\n      if (!arguments[0]) {\n        if (arguments[1]) {\n          arguments[1].apply(null);\n        }\n        return Promise.resolve();\n      }\n      return nativeAddIceCandidate.apply(this, arguments);\n    };\n\n    // shim getStats with maplike support\n    var makeMapStats = function(stats) {\n      var map = new Map();\n      Object.keys(stats).forEach(function(key) {\n        map.set(key, stats[key]);\n        map[key] = stats[key];\n      });\n      return map;\n    };\n\n    var modernStatsTypes = {\n      inboundrtp: 'inbound-rtp',\n      outboundrtp: 'outbound-rtp',\n      candidatepair: 'candidate-pair',\n      localcandidate: 'local-candidate',\n      remotecandidate: 'remote-candidate'\n    };\n\n    var nativeGetStats = window.RTCPeerConnection.prototype.getStats;\n    window.RTCPeerConnection.prototype.getStats = function(\n      selector,\n      onSucc,\n      onErr\n    ) {\n      return nativeGetStats.apply(this, [selector || null])\n        .then(function(stats) {\n          if (browserDetails.version < 48) {\n            stats = makeMapStats(stats);\n          }\n          if (browserDetails.version < 53 && !onSucc) {\n            // Shim only promise getStats with spec-hyphens in type names\n            // Leave callback version alone; misc old uses of forEach before Map\n            try {\n              stats.forEach(function(stat) {\n                stat.type = modernStatsTypes[stat.type] || stat.type;\n              });\n            } catch (e) {\n              if (e.name !== 'TypeError') {\n                throw e;\n              }\n              // Avoid TypeError: \"type\" is read-only, in old versions. 34-43ish\n              stats.forEach(function(stat, i) {\n                stats.set(i, Object.assign({}, stat, {\n                  type: modernStatsTypes[stat.type] || stat.type\n                }));\n              });\n            }\n          }\n          return stats;\n        })\n        .then(onSucc, onErr);\n    };\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimOnTrack: firefoxShim.shimOnTrack,\n  shimSourceObject: firefoxShim.shimSourceObject,\n  shimPeerConnection: firefoxShim.shimPeerConnection,\n  shimGetUserMedia: require('./getusermedia')\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/firefox/firefox_shim.js\n// module id = 138\n// module chunks = 0","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar utils = require('../utils');\nvar logging = utils.log;\n\n// Expose public methods.\nmodule.exports = function(window) {\n  var browserDetails = utils.detectBrowser(window);\n  var navigator = window && window.navigator;\n  var MediaStreamTrack = window && window.MediaStreamTrack;\n\n  var shimError_ = function(e) {\n    return {\n      name: {\n        InternalError: 'NotReadableError',\n        NotSupportedError: 'TypeError',\n        PermissionDeniedError: 'NotAllowedError',\n        SecurityError: 'NotAllowedError'\n      }[e.name] || e.name,\n      message: {\n        'The operation is insecure.': 'The request is not allowed by the ' +\n        'user agent or the platform in the current context.'\n      }[e.message] || e.message,\n      constraint: e.constraint,\n      toString: function() {\n        return this.name + (this.message && ': ') + this.message;\n      }\n    };\n  };\n\n  // getUserMedia constraints shim.\n  var getUserMedia_ = function(constraints, onSuccess, onError) {\n    var constraintsToFF37_ = function(c) {\n      if (typeof c !== 'object' || c.require) {\n        return c;\n      }\n      var require = [];\n      Object.keys(c).forEach(function(key) {\n        if (key === 'require' || key === 'advanced' || key === 'mediaSource') {\n          return;\n        }\n        var r = c[key] = (typeof c[key] === 'object') ?\n            c[key] : {ideal: c[key]};\n        if (r.min !== undefined ||\n            r.max !== undefined || r.exact !== undefined) {\n          require.push(key);\n        }\n        if (r.exact !== undefined) {\n          if (typeof r.exact === 'number') {\n            r. min = r.max = r.exact;\n          } else {\n            c[key] = r.exact;\n          }\n          delete r.exact;\n        }\n        if (r.ideal !== undefined) {\n          c.advanced = c.advanced || [];\n          var oc = {};\n          if (typeof r.ideal === 'number') {\n            oc[key] = {min: r.ideal, max: r.ideal};\n          } else {\n            oc[key] = r.ideal;\n          }\n          c.advanced.push(oc);\n          delete r.ideal;\n          if (!Object.keys(r).length) {\n            delete c[key];\n          }\n        }\n      });\n      if (require.length) {\n        c.require = require;\n      }\n      return c;\n    };\n    constraints = JSON.parse(JSON.stringify(constraints));\n    if (browserDetails.version < 38) {\n      logging('spec: ' + JSON.stringify(constraints));\n      if (constraints.audio) {\n        constraints.audio = constraintsToFF37_(constraints.audio);\n      }\n      if (constraints.video) {\n        constraints.video = constraintsToFF37_(constraints.video);\n      }\n      logging('ff37: ' + JSON.stringify(constraints));\n    }\n    return navigator.mozGetUserMedia(constraints, onSuccess, function(e) {\n      onError(shimError_(e));\n    });\n  };\n\n  // Returns the result of getUserMedia as a Promise.\n  var getUserMediaPromise_ = function(constraints) {\n    return new Promise(function(resolve, reject) {\n      getUserMedia_(constraints, resolve, reject);\n    });\n  };\n\n  // Shim for mediaDevices on older versions.\n  if (!navigator.mediaDevices) {\n    navigator.mediaDevices = {getUserMedia: getUserMediaPromise_,\n      addEventListener: function() { },\n      removeEventListener: function() { }\n    };\n  }\n  navigator.mediaDevices.enumerateDevices =\n      navigator.mediaDevices.enumerateDevices || function() {\n        return new Promise(function(resolve) {\n          var infos = [\n            {kind: 'audioinput', deviceId: 'default', label: '', groupId: ''},\n            {kind: 'videoinput', deviceId: 'default', label: '', groupId: ''}\n          ];\n          resolve(infos);\n        });\n      };\n\n  if (browserDetails.version < 41) {\n    // Work around http://bugzil.la/1169665\n    var orgEnumerateDevices =\n        navigator.mediaDevices.enumerateDevices.bind(navigator.mediaDevices);\n    navigator.mediaDevices.enumerateDevices = function() {\n      return orgEnumerateDevices().then(undefined, function(e) {\n        if (e.name === 'NotFoundError') {\n          return [];\n        }\n        throw e;\n      });\n    };\n  }\n  if (browserDetails.version < 49) {\n    var origGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      return origGetUserMedia(c).then(function(stream) {\n        // Work around https://bugzil.la/802326\n        if (c.audio && !stream.getAudioTracks().length ||\n            c.video && !stream.getVideoTracks().length) {\n          stream.getTracks().forEach(function(track) {\n            track.stop();\n          });\n          throw new DOMException('The object can not be found here.',\n                                 'NotFoundError');\n        }\n        return stream;\n      }, function(e) {\n        return Promise.reject(shimError_(e));\n      });\n    };\n  }\n  if (!(browserDetails.version > 55 &&\n      'autoGainControl' in navigator.mediaDevices.getSupportedConstraints())) {\n    var remap = function(obj, a, b) {\n      if (a in obj && !(b in obj)) {\n        obj[b] = obj[a];\n        delete obj[a];\n      }\n    };\n\n    var nativeGetUserMedia = navigator.mediaDevices.getUserMedia.\n        bind(navigator.mediaDevices);\n    navigator.mediaDevices.getUserMedia = function(c) {\n      if (typeof c === 'object' && typeof c.audio === 'object') {\n        c = JSON.parse(JSON.stringify(c));\n        remap(c.audio, 'autoGainControl', 'mozAutoGainControl');\n        remap(c.audio, 'noiseSuppression', 'mozNoiseSuppression');\n      }\n      return nativeGetUserMedia(c);\n    };\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.getSettings) {\n      var nativeGetSettings = MediaStreamTrack.prototype.getSettings;\n      MediaStreamTrack.prototype.getSettings = function() {\n        var obj = nativeGetSettings.apply(this, arguments);\n        remap(obj, 'mozAutoGainControl', 'autoGainControl');\n        remap(obj, 'mozNoiseSuppression', 'noiseSuppression');\n        return obj;\n      };\n    }\n\n    if (MediaStreamTrack && MediaStreamTrack.prototype.applyConstraints) {\n      var nativeApplyConstraints = MediaStreamTrack.prototype.applyConstraints;\n      MediaStreamTrack.prototype.applyConstraints = function(c) {\n        if (this.kind === 'audio' && typeof c === 'object') {\n          c = JSON.parse(JSON.stringify(c));\n          remap(c, 'autoGainControl', 'mozAutoGainControl');\n          remap(c, 'noiseSuppression', 'mozNoiseSuppression');\n        }\n        return nativeApplyConstraints.apply(this, [c]);\n      };\n    }\n  }\n  navigator.getUserMedia = function(constraints, onSuccess, onError) {\n    if (browserDetails.version < 44) {\n      return getUserMedia_(constraints, onSuccess, onError);\n    }\n    // Replace Firefox 44+'s deprecation warning with unprefixed version.\n    utils.deprecated('navigator.getUserMedia',\n        'navigator.mediaDevices.getUserMedia');\n    navigator.mediaDevices.getUserMedia(constraints).then(onSuccess, onError);\n  };\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/firefox/getusermedia.js\n// module id = 139\n// module chunks = 0","/*\n *  Copyright (c) 2016 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n'use strict';\nvar utils = require('../utils');\n\nvar safariShim = {\n  // TODO: DrAlex, should be here, double check against LayoutTests\n\n  // TODO: once the back-end for the mac port is done, add.\n  // TODO: check for webkitGTK+\n  // shimPeerConnection: function() { },\n\n  shimLocalStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getLocalStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getLocalStreams = function() {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        return this._localStreams;\n      };\n    }\n    if (!('getStreamById' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getStreamById = function(id) {\n        var result = null;\n        if (this._localStreams) {\n          this._localStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        if (this._remoteStreams) {\n          this._remoteStreams.forEach(function(stream) {\n            if (stream.id === id) {\n              result = stream;\n            }\n          });\n        }\n        return result;\n      };\n    }\n    if (!('addStream' in window.RTCPeerConnection.prototype)) {\n      var _addTrack = window.RTCPeerConnection.prototype.addTrack;\n      window.RTCPeerConnection.prototype.addStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        if (this._localStreams.indexOf(stream) === -1) {\n          this._localStreams.push(stream);\n        }\n        var self = this;\n        stream.getTracks().forEach(function(track) {\n          _addTrack.call(self, track, stream);\n        });\n      };\n\n      window.RTCPeerConnection.prototype.addTrack = function(track, stream) {\n        if (stream) {\n          if (!this._localStreams) {\n            this._localStreams = [stream];\n          } else if (this._localStreams.indexOf(stream) === -1) {\n            this._localStreams.push(stream);\n          }\n        }\n        _addTrack.call(this, track, stream);\n      };\n    }\n    if (!('removeStream' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.removeStream = function(stream) {\n        if (!this._localStreams) {\n          this._localStreams = [];\n        }\n        var index = this._localStreams.indexOf(stream);\n        if (index === -1) {\n          return;\n        }\n        this._localStreams.splice(index, 1);\n        var self = this;\n        var tracks = stream.getTracks();\n        this.getSenders().forEach(function(sender) {\n          if (tracks.indexOf(sender.track) !== -1) {\n            self.removeTrack(sender);\n          }\n        });\n      };\n    }\n  },\n  shimRemoteStreamsAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    if (!('getRemoteStreams' in window.RTCPeerConnection.prototype)) {\n      window.RTCPeerConnection.prototype.getRemoteStreams = function() {\n        return this._remoteStreams ? this._remoteStreams : [];\n      };\n    }\n    if (!('onaddstream' in window.RTCPeerConnection.prototype)) {\n      Object.defineProperty(window.RTCPeerConnection.prototype, 'onaddstream', {\n        get: function() {\n          return this._onaddstream;\n        },\n        set: function(f) {\n          if (this._onaddstream) {\n            this.removeEventListener('addstream', this._onaddstream);\n            this.removeEventListener('track', this._onaddstreampoly);\n          }\n          this.addEventListener('addstream', this._onaddstream = f);\n          this.addEventListener('track', this._onaddstreampoly = function(e) {\n            var stream = e.streams[0];\n            if (!this._remoteStreams) {\n              this._remoteStreams = [];\n            }\n            if (this._remoteStreams.indexOf(stream) >= 0) {\n              return;\n            }\n            this._remoteStreams.push(stream);\n            var event = new Event('addstream');\n            event.stream = e.streams[0];\n            this.dispatchEvent(event);\n          }.bind(this));\n        }\n      });\n    }\n  },\n  shimCallbacksAPI: function(window) {\n    if (typeof window !== 'object' || !window.RTCPeerConnection) {\n      return;\n    }\n    var prototype = window.RTCPeerConnection.prototype;\n    var createOffer = prototype.createOffer;\n    var createAnswer = prototype.createAnswer;\n    var setLocalDescription = prototype.setLocalDescription;\n    var setRemoteDescription = prototype.setRemoteDescription;\n    var addIceCandidate = prototype.addIceCandidate;\n\n    prototype.createOffer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createOffer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    prototype.createAnswer = function(successCallback, failureCallback) {\n      var options = (arguments.length >= 2) ? arguments[2] : arguments[0];\n      var promise = createAnswer.apply(this, [options]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n\n    var withCallback = function(description, successCallback, failureCallback) {\n      var promise = setLocalDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setLocalDescription = withCallback;\n\n    withCallback = function(description, successCallback, failureCallback) {\n      var promise = setRemoteDescription.apply(this, [description]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.setRemoteDescription = withCallback;\n\n    withCallback = function(candidate, successCallback, failureCallback) {\n      var promise = addIceCandidate.apply(this, [candidate]);\n      if (!failureCallback) {\n        return promise;\n      }\n      promise.then(successCallback, failureCallback);\n      return Promise.resolve();\n    };\n    prototype.addIceCandidate = withCallback;\n  },\n  shimGetUserMedia: function(window) {\n    var navigator = window && window.navigator;\n\n    if (!navigator.getUserMedia) {\n      if (navigator.webkitGetUserMedia) {\n        navigator.getUserMedia = navigator.webkitGetUserMedia.bind(navigator);\n      } else if (navigator.mediaDevices &&\n          navigator.mediaDevices.getUserMedia) {\n        navigator.getUserMedia = function(constraints, cb, errcb) {\n          navigator.mediaDevices.getUserMedia(constraints)\n          .then(cb, errcb);\n        }.bind(navigator);\n      }\n    }\n  },\n  shimRTCIceServerUrls: function(window) {\n    // migrate from non-spec RTCIceServer.url to RTCIceServer.urls\n    var OrigPeerConnection = window.RTCPeerConnection;\n    window.RTCPeerConnection = function(pcConfig, pcConstraints) {\n      if (pcConfig && pcConfig.iceServers) {\n        var newIceServers = [];\n        for (var i = 0; i < pcConfig.iceServers.length; i++) {\n          var server = pcConfig.iceServers[i];\n          if (!server.hasOwnProperty('urls') &&\n              server.hasOwnProperty('url')) {\n            utils.deprecated('RTCIceServer.url', 'RTCIceServer.urls');\n            server = JSON.parse(JSON.stringify(server));\n            server.urls = server.url;\n            delete server.url;\n            newIceServers.push(server);\n          } else {\n            newIceServers.push(pcConfig.iceServers[i]);\n          }\n        }\n        pcConfig.iceServers = newIceServers;\n      }\n      return new OrigPeerConnection(pcConfig, pcConstraints);\n    };\n    window.RTCPeerConnection.prototype = OrigPeerConnection.prototype;\n    // wrap static methods. Currently just generateCertificate.\n    if ('generateCertificate' in window.RTCPeerConnection) {\n      Object.defineProperty(window.RTCPeerConnection, 'generateCertificate', {\n        get: function() {\n          return OrigPeerConnection.generateCertificate;\n        }\n      });\n    }\n  },\n  shimTrackEventTransceiver: function(window) {\n    // Add event.transceiver member over deprecated event.receiver\n    if (typeof window === 'object' && window.RTCPeerConnection &&\n        ('receiver' in window.RTCTrackEvent.prototype) &&\n        // can't check 'transceiver' in window.RTCTrackEvent.prototype, as it is\n        // defined for some reason even when window.RTCTransceiver is not.\n        !window.RTCTransceiver) {\n      Object.defineProperty(window.RTCTrackEvent.prototype, 'transceiver', {\n        get: function() {\n          return {receiver: this.receiver};\n        }\n      });\n    }\n  },\n\n  shimCreateOfferLegacy: function(window) {\n    var origCreateOffer = window.RTCPeerConnection.prototype.createOffer;\n    window.RTCPeerConnection.prototype.createOffer = function(offerOptions) {\n      var pc = this;\n      if (offerOptions) {\n        var audioTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'audio';\n        });\n        if (offerOptions.offerToReceiveAudio === false && audioTransceiver) {\n          if (audioTransceiver.direction === 'sendrecv') {\n            audioTransceiver.setDirection('sendonly');\n          } else if (audioTransceiver.direction === 'recvonly') {\n            audioTransceiver.setDirection('inactive');\n          }\n        } else if (offerOptions.offerToReceiveAudio === true &&\n            !audioTransceiver) {\n          pc.addTransceiver('audio');\n        }\n\n        var videoTransceiver = pc.getTransceivers().find(function(transceiver) {\n          return transceiver.sender.track &&\n              transceiver.sender.track.kind === 'video';\n        });\n        if (offerOptions.offerToReceiveVideo === false && videoTransceiver) {\n          if (videoTransceiver.direction === 'sendrecv') {\n            videoTransceiver.setDirection('sendonly');\n          } else if (videoTransceiver.direction === 'recvonly') {\n            videoTransceiver.setDirection('inactive');\n          }\n        } else if (offerOptions.offerToReceiveVideo === true &&\n            !videoTransceiver) {\n          pc.addTransceiver('video');\n        }\n      }\n      return origCreateOffer.apply(pc, arguments);\n    };\n  }\n};\n\n// Expose public methods.\nmodule.exports = {\n  shimCallbacksAPI: safariShim.shimCallbacksAPI,\n  shimLocalStreamsAPI: safariShim.shimLocalStreamsAPI,\n  shimRemoteStreamsAPI: safariShim.shimRemoteStreamsAPI,\n  shimGetUserMedia: safariShim.shimGetUserMedia,\n  shimRTCIceServerUrls: safariShim.shimRTCIceServerUrls,\n  shimTrackEventTransceiver: safariShim.shimTrackEventTransceiver,\n  shimCreateOfferLegacy: safariShim.shimCreateOfferLegacy\n  // TODO\n  // shimPeerConnection: safariShim.shimPeerConnection\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/safari/safari_shim.js\n// module id = 140\n// module chunks = 0","/*\n *  Copyright (c) 2017 The WebRTC project authors. All Rights Reserved.\n *\n *  Use of this source code is governed by a BSD-style license\n *  that can be found in the LICENSE file in the root of the source\n *  tree.\n */\n /* eslint-env node */\n'use strict';\n\nvar SDPUtils = require('sdp');\nvar utils = require('./utils');\n\n// Wraps the peerconnection event eventNameToWrap in a function\n// which returns the modified event object.\nfunction wrapPeerConnectionEvent(window, eventNameToWrap, wrapper) {\n  if (!window.RTCPeerConnection) {\n    return;\n  }\n  var proto = window.RTCPeerConnection.prototype;\n  var nativeAddEventListener = proto.addEventListener;\n  proto.addEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap) {\n      return nativeAddEventListener.apply(this, arguments);\n    }\n    var wrappedCallback = function(e) {\n      cb(wrapper(e));\n    };\n    this._eventMap = this._eventMap || {};\n    this._eventMap[cb] = wrappedCallback;\n    return nativeAddEventListener.apply(this, [nativeEventName,\n      wrappedCallback]);\n  };\n\n  var nativeRemoveEventListener = proto.removeEventListener;\n  proto.removeEventListener = function(nativeEventName, cb) {\n    if (nativeEventName !== eventNameToWrap || !this._eventMap\n        || !this._eventMap[cb]) {\n      return nativeRemoveEventListener.apply(this, arguments);\n    }\n    var unwrappedCb = this._eventMap[cb];\n    delete this._eventMap[cb];\n    return nativeRemoveEventListener.apply(this, [nativeEventName,\n      unwrappedCb]);\n  };\n\n  Object.defineProperty(proto, 'on' + eventNameToWrap, {\n    get: function() {\n      return this['_on' + eventNameToWrap];\n    },\n    set: function(cb) {\n      if (this['_on' + eventNameToWrap]) {\n        this.removeEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap]);\n        delete this['_on' + eventNameToWrap];\n      }\n      if (cb) {\n        this.addEventListener(eventNameToWrap,\n            this['_on' + eventNameToWrap] = cb);\n      }\n    }\n  });\n}\n\nmodule.exports = {\n  shimRTCIceCandidate: function(window) {\n    // foundation is arbitrarily chosen as an indicator for full support for\n    // https://w3c.github.io/webrtc-pc/#rtcicecandidate-interface\n    if (window.RTCIceCandidate && 'foundation' in\n        window.RTCIceCandidate.prototype) {\n      return;\n    }\n\n    var NativeRTCIceCandidate = window.RTCIceCandidate;\n    window.RTCIceCandidate = function(args) {\n      // Remove the a= which shouldn't be part of the candidate string.\n      if (typeof args === 'object' && args.candidate &&\n          args.candidate.indexOf('a=') === 0) {\n        args = JSON.parse(JSON.stringify(args));\n        args.candidate = args.candidate.substr(2);\n      }\n\n      // Augment the native candidate with the parsed fields.\n      var nativeCandidate = new NativeRTCIceCandidate(args);\n      var parsedCandidate = SDPUtils.parseCandidate(args.candidate);\n      var augmentedCandidate = Object.assign(nativeCandidate,\n          parsedCandidate);\n\n      // Add a serializer that does not serialize the extra attributes.\n      augmentedCandidate.toJSON = function() {\n        return {\n          candidate: augmentedCandidate.candidate,\n          sdpMid: augmentedCandidate.sdpMid,\n          sdpMLineIndex: augmentedCandidate.sdpMLineIndex,\n          usernameFragment: augmentedCandidate.usernameFragment,\n        };\n      };\n      return augmentedCandidate;\n    };\n\n    // Hook up the augmented candidate in onicecandidate and\n    // addEventListener('icecandidate', ...)\n    wrapPeerConnectionEvent(window, 'icecandidate', function(e) {\n      if (e.candidate) {\n        Object.defineProperty(e, 'candidate', {\n          value: new window.RTCIceCandidate(e.candidate),\n          writable: 'false'\n        });\n      }\n      return e;\n    });\n  },\n\n  // shimCreateObjectURL must be called before shimSourceObject to avoid loop.\n\n  shimCreateObjectURL: function(window) {\n    var URL = window && window.URL;\n\n    if (!(typeof window === 'object' && window.HTMLMediaElement &&\n          'srcObject' in window.HTMLMediaElement.prototype &&\n        URL.createObjectURL && URL.revokeObjectURL)) {\n      // Only shim CreateObjectURL using srcObject if srcObject exists.\n      return undefined;\n    }\n\n    var nativeCreateObjectURL = URL.createObjectURL.bind(URL);\n    var nativeRevokeObjectURL = URL.revokeObjectURL.bind(URL);\n    var streams = new Map(), newId = 0;\n\n    URL.createObjectURL = function(stream) {\n      if ('getTracks' in stream) {\n        var url = 'polyblob:' + (++newId);\n        streams.set(url, stream);\n        utils.deprecated('URL.createObjectURL(stream)',\n            'elem.srcObject = stream');\n        return url;\n      }\n      return nativeCreateObjectURL(stream);\n    };\n    URL.revokeObjectURL = function(url) {\n      nativeRevokeObjectURL(url);\n      streams.delete(url);\n    };\n\n    var dsc = Object.getOwnPropertyDescriptor(window.HTMLMediaElement.prototype,\n                                              'src');\n    Object.defineProperty(window.HTMLMediaElement.prototype, 'src', {\n      get: function() {\n        return dsc.get.apply(this);\n      },\n      set: function(url) {\n        this.srcObject = streams.get(url) || null;\n        return dsc.set.apply(this, [url]);\n      }\n    });\n\n    var nativeSetAttribute = window.HTMLMediaElement.prototype.setAttribute;\n    window.HTMLMediaElement.prototype.setAttribute = function() {\n      if (arguments.length === 2 &&\n          ('' + arguments[0]).toLowerCase() === 'src') {\n        this.srcObject = streams.get(arguments[1]) || null;\n      }\n      return nativeSetAttribute.apply(this, arguments);\n    };\n  }\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/webrtc-adapter/src/js/common_shim.js\n// module id = 141\n// module chunks = 0","/* global __filename, RTCSessionDescription */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport transform from 'sdp-transform';\n\nimport * as GlobalOnErrorHandler from '../util/GlobalOnErrorHandler';\nimport JitsiRemoteTrack from './JitsiRemoteTrack';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport LocalSdpMunger from './LocalSdpMunger';\nimport RTC from './RTC';\nimport RTCUtils from './RTCUtils';\nimport RTCBrowserType from './RTCBrowserType';\nimport RTCEvents from '../../service/RTC/RTCEvents';\nimport RtxModifier from '../xmpp/RtxModifier';\n\n// FIXME SDP tools should end up in some kind of util module\nimport SDP from '../xmpp/SDP';\nimport SdpConsistency from '../xmpp/SdpConsistency';\nimport { SdpTransformWrap } from '../xmpp/SdpTransformUtil';\nimport SDPUtil from '../xmpp/SDPUtil';\nimport * as SignalingEvents from '../../service/RTC/SignalingEvents';\n\nconst logger = getLogger(__filename);\nconst SIMULCAST_LAYERS = 3;\nconst SIM_LAYER_1_RID = '1';\nconst SIM_LAYER_2_RID = '2';\nconst SIM_LAYER_3_RID = '3';\nconst SIM_LAYER_RIDS = [ SIM_LAYER_1_RID, SIM_LAYER_2_RID, SIM_LAYER_3_RID ];\n\n/* eslint-disable max-params */\n\n/**\n * Creates new instance of 'TraceablePeerConnection'.\n *\n * @param {RTC} rtc the instance of <tt>RTC</tt> service\n * @param {number} id the peer connection id assigned by the parent RTC module.\n * @param {SignalingLayer} signalingLayer the signaling layer instance\n * @param {object} iceConfig WebRTC 'PeerConnection' ICE config\n * @param {object} constraints WebRTC 'PeerConnection' constraints\n * @param {boolean} isP2P indicates whether or not the new instance will be used\n * in a peer to peer connection\n * @param {object} options <tt>TracablePeerConnection</tt> config options.\n * @param {boolean} options.disableSimulcast if set to 'true' will disable\n * the simulcast.\n * @param {boolean} options.disableRtx if set to 'true' will disable the RTX\n * @param {boolean} options.enableFirefoxSimulcast if set to 'true' will enable\n * experimental simulcast support on Firefox.\n * @param {boolean} options.disableH264 If set to 'true' H264 will be\n *      disabled by removing it from the SDP.\n * @param {boolean} options.preferH264 if set to 'true' H264 will be preferred\n * over other video codecs.\n *\n * FIXME: initially the purpose of TraceablePeerConnection was to be able to\n * debug the peer connection. Since many other responsibilities have been added\n * it would make sense to extract a separate class from it and come up with\n * a more suitable name.\n *\n * @constructor\n */\nexport default function TraceablePeerConnection(\n        rtc,\n        id,\n        signalingLayer,\n        iceConfig,\n        constraints,\n        isP2P,\n        options) {\n\n    /**\n     * Indicates whether or not this peer connection instance is actively\n     * sending/receiving audio media. When set to <tt>false</tt> the SDP audio\n     * media direction will be adjusted to 'inactive' in order to suspend\n     * the transmission.\n     * @type {boolean}\n     * @private\n     */\n    this.audioTransferActive = true;\n\n    /**\n     * Indicates whether or not this peer connection instance is actively\n     * sending/receiving video media. When set to <tt>false</tt> the SDP video\n     * media direction will be adjusted to 'inactive' in order to suspend\n     * the transmission.\n     * @type {boolean}\n     * @private\n     */\n    this.videoTransferActive = true;\n\n    /**\n     * The parent instance of RTC service which created this\n     * <tt>TracablePeerConnection</tt>.\n     * @type {RTC}\n     */\n    this.rtc = rtc;\n\n    /**\n     * The peer connection identifier assigned by the RTC module.\n     * @type {number}\n     */\n    this.id = id;\n\n    /**\n     * Indicates whether or not this instance is used in a peer to peer\n     * connection.\n     * @type {boolean}\n     */\n    this.isP2P = isP2P;\n\n    // FIXME: We should support multiple streams per jid.\n    /**\n     * The map holds remote tracks associated with this peer connection.\n     * It maps user's JID to media type and remote track\n     * (one track per media type per user's JID).\n     * @type {Map<string, Map<MediaType, JitsiRemoteTrack>>}\n     */\n    this.remoteTracks = new Map();\n\n    /**\n     * A map which stores local tracks mapped by {@link JitsiLocalTrack.rtcId}\n     * @type {Map<number, JitsiLocalTrack>}\n     */\n    this.localTracks = new Map();\n\n    /**\n     * Keeps tracks of the WebRTC <tt>MediaStream</tt>s that have been added to\n     * the underlying WebRTC PeerConnection. An Array is used to avoid errors in\n     * IE11 with adding temasys MediaStream objects into other data structures.\n     * @type {Array}\n     * @private\n     */\n    this._addedStreams = [];\n\n    /**\n     * @typedef {Object} TPCGroupInfo\n     * @property {string} semantics the SSRC groups semantics\n     * @property {Array<number>} ssrcs group's SSRCs in order where the first\n     * one is group's primary SSRC, the second one is secondary (RTX) and so\n     * on...\n     */\n    /**\n     * @typedef {Object} TPCSSRCInfo\n     * @property {Array<number>} ssrcs an array which holds all track's SSRCs\n     * @property {Array<TPCGroupInfo>} groups an array stores all track's SSRC\n     * groups\n     */\n    /**\n     * Holds the info about local track's SSRCs mapped per their\n     * {@link JitsiLocalTrack.rtcId}\n     * @type {Map<number, TPCSSRCInfo>}\n     */\n    this.localSSRCs = new Map();\n\n    /**\n     * The local ICE username fragment for this session.\n     */\n    this.localUfrag = null;\n\n    /**\n     * The remote ICE username fragment for this session.\n     */\n    this.remoteUfrag = null;\n\n    /**\n     * The signaling layer which operates this peer connection.\n     * @type {SignalingLayer}\n     */\n    this.signalingLayer = signalingLayer;\n\n    // SignalingLayer listeners\n    this._peerVideoTypeChanged = this._peerVideoTypeChanged.bind(this);\n    this.signalingLayer.on(\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED,\n        this._peerVideoTypeChanged);\n\n    this._peerMutedChanged = this._peerMutedChanged.bind(this);\n    this.signalingLayer.on(\n        SignalingEvents.PEER_MUTED_CHANGED,\n        this._peerMutedChanged);\n    this.options = options;\n\n    this.peerconnection\n        = new RTCUtils.RTCPeerConnectionType(iceConfig, constraints);\n    this.updateLog = [];\n    this.stats = {};\n    this.statsinterval = null;\n\n    /**\n     * @type {number}\n     */\n    this.maxstats = 0;\n    const Interop = require('sdp-interop').Interop;\n\n    this.interop = new Interop();\n    const Simulcast = require('sdp-simulcast');\n\n    this.simulcast = new Simulcast({ numOfLayers: SIMULCAST_LAYERS,\n        explodeRemoteSimulcast: false });\n    this.sdpConsistency = new SdpConsistency(this.toString());\n\n    /**\n     * Munges local SDP provided to the Jingle Session in order to prevent from\n     * sending SSRC updates on attach/detach and mute/unmute (for video).\n     * @type {LocalSdpMunger}\n     */\n    this.localSdpMunger = new LocalSdpMunger(this);\n\n    /**\n     * TracablePeerConnection uses RTC's eventEmitter\n     * @type {EventEmitter}\n     */\n    this.eventEmitter = rtc.eventEmitter;\n    this.rtxModifier = new RtxModifier();\n\n    // override as desired\n    this.trace = (what, info) => {\n        /* logger.warn('WTRACE', what, info);\n        if (info && RTCBrowserType.isIExplorer()) {\n            if (info.length > 1024) {\n                logger.warn('WTRACE', what, info.substr(1024));\n            }\n            if (info.length > 2048) {\n                logger.warn('WTRACE', what, info.substr(2048));\n            }\n        }*/\n        this.updateLog.push({\n            time: new Date(),\n            type: what,\n            value: info || ''\n        });\n    };\n    this.onicecandidate = null;\n    this.peerconnection.onicecandidate = event => {\n        // FIXME: this causes stack overflow with Temasys Plugin\n        if (!RTCBrowserType.isTemasysPluginUsed()) {\n            this.trace(\n                'onicecandidate',\n                JSON.stringify(event.candidate, null, ' '));\n        }\n\n        if (this.onicecandidate !== null) {\n            this.onicecandidate(event);\n        }\n    };\n    this.peerconnection.onaddstream\n        = event => this._remoteStreamAdded(event.stream);\n    this.peerconnection.onremovestream\n        = event => this._remoteStreamRemoved(event.stream);\n    this.onsignalingstatechange = null;\n    this.peerconnection.onsignalingstatechange = event => {\n        this.trace('onsignalingstatechange', this.signalingState);\n        if (this.onsignalingstatechange !== null) {\n            this.onsignalingstatechange(event);\n        }\n    };\n    this.oniceconnectionstatechange = null;\n    this.peerconnection.oniceconnectionstatechange = event => {\n        this.trace('oniceconnectionstatechange', this.iceConnectionState);\n        if (this.oniceconnectionstatechange !== null) {\n            this.oniceconnectionstatechange(event);\n        }\n    };\n    this.onnegotiationneeded = null;\n    this.peerconnection.onnegotiationneeded = event => {\n        this.trace('onnegotiationneeded');\n        if (this.onnegotiationneeded !== null) {\n            this.onnegotiationneeded(event);\n        }\n    };\n    this.ondatachannel = null;\n    this.peerconnection.ondatachannel = event => {\n        this.trace('ondatachannel', event);\n        if (this.ondatachannel !== null) {\n            this.ondatachannel(event);\n        }\n    };\n\n    // XXX: do all non-firefox browsers which we support also support this?\n    if (!RTCBrowserType.isFirefox() && this.maxstats) {\n        this.statsinterval = window.setInterval(() => {\n            this.peerconnection.getStats(stats => {\n                const results = stats.result();\n                const now = new Date();\n\n                for (let i = 0; i < results.length; ++i) {\n                    results[i].names().forEach(name => {\n                        // eslint-disable-next-line no-shadow\n                        const id = `${results[i].id}-${name}`;\n                        let s = this.stats[id];\n\n                        if (!s) {\n                            this.stats[id] = s = {\n                                startTime: now,\n                                endTime: now,\n                                values: [],\n                                times: []\n                            };\n                        }\n                        s.values.push(results[i].stat(name));\n                        s.times.push(now.getTime());\n                        if (s.values.length > this.maxstats) {\n                            s.values.shift();\n                            s.times.shift();\n                        }\n                        s.endTime = now;\n                    });\n                }\n            });\n        }, 1000);\n    }\n\n    logger.info(`Create new ${this}`);\n}\n\n/* eslint-enable max-params */\n\n/**\n * Returns a string representation of a SessionDescription object.\n */\nconst dumpSDP = function(description) {\n    if (typeof description === 'undefined' || description === null) {\n        return '';\n    }\n\n    return `type: ${description.type}\\r\\n${description.sdp}`;\n};\n\n\n/**\n * Forwards the {@link peerconnection.iceConnectionState} state except that it\n * will convert \"completed\" into \"connected\" where both mean that the ICE has\n * succeeded and is up and running. We never see \"completed\" state for\n * the JVB connection, but it started appearing for the P2P one. This method\n * allows to adapt old logic to this new situation.\n * @return {string}\n */\nTraceablePeerConnection.prototype.getConnectionState = function() {\n    const state = this.peerconnection.iceConnectionState;\n\n    if (state === 'completed') {\n        return 'connected';\n    }\n\n    return state;\n};\n\n/**\n * Obtains the media direction for given {@link MediaType}. The method takes\n * into account whether or not there are any local tracks for media and\n * the {@link audioTransferActive} and {@link videoTransferActive} flags.\n * @param {MediaType} mediaType\n * @return {string} one of the SDP direction constants ('sendrecv, 'recvonly'\n * etc.) which should be used when setting local description on the peer\n * connection.\n * @private\n */\nTraceablePeerConnection.prototype._getDesiredMediaDirection = function(\n        mediaType) {\n    let mediaTransferActive = true;\n\n    if (mediaType === MediaType.AUDIO) {\n        mediaTransferActive = this.audioTransferActive;\n    } else if (mediaType === MediaType.VIDEO) {\n        mediaTransferActive = this.videoTransferActive;\n    }\n    if (mediaTransferActive) {\n        return this.hasAnyTracksOfType(mediaType) ? 'sendrecv' : 'recvonly';\n    }\n\n    return 'inactive';\n};\n\n/**\n * Tells whether or not this TPC instance is using Simulcast.\n * @return {boolean} <tt>true</tt> if simulcast is enabled and active or\n * <tt>false</tt> if it's turned off.\n */\nTraceablePeerConnection.prototype.isSimulcastOn = function() {\n    return !this.options.disableSimulcast\n        && RTCBrowserType.supportsSimulcast()\n\n        // Firefox has been added as supporting simulcast, but it is\n        // experimental so we only want to do it for firefox if the config\n        // option is set.  Unfortunately, RTCBrowserType::supportsSimulcast()\n        // doesn't have a reference to the config options, so we have\n        // to do it here\n        && (!RTCBrowserType.isFirefox()\n            || this.options.enableFirefoxSimulcast);\n};\n\n/**\n * Handles {@link SignalingEvents.PEER_VIDEO_TYPE_CHANGED}\n * @param {string} endpointId the video owner's ID (MUC nickname)\n * @param {VideoType} videoType the new value\n * @private\n */\nTraceablePeerConnection.prototype._peerVideoTypeChanged = function(\n        endpointId,\n        videoType) {\n    // Check if endpointId has a value to avoid action on random track\n    if (!endpointId) {\n        logger.error(`No endpointID on peerVideoTypeChanged ${this}`);\n\n        return;\n    }\n    const videoTrack = this.getRemoteTracks(endpointId, MediaType.VIDEO);\n\n    if (videoTrack.length) {\n        // NOTE 1 track per media type is assumed\n        videoTrack[0]._setVideoType(videoType);\n    }\n};\n\n/**\n * Handles remote track mute / unmute events.\n * @param {string} endpointId the track owner's identifier (MUC nickname)\n * @param {MediaType} mediaType \"audio\" or \"video\"\n * @param {boolean} isMuted the new mute state\n * @private\n */\nTraceablePeerConnection.prototype._peerMutedChanged = function(\n        endpointId,\n        mediaType,\n        isMuted) {\n    // Check if endpointId is a value to avoid doing action on all remote tracks\n    if (!endpointId) {\n        logger.error('On peerMuteChanged - no endpoint ID');\n\n        return;\n    }\n    const track = this.getRemoteTracks(endpointId, mediaType);\n\n    if (track.length) {\n        // NOTE 1 track per media type is assumed\n        track[0].setMute(isMuted);\n    }\n};\n\n/**\n * Obtains local tracks for given {@link MediaType}. If the <tt>mediaType</tt>\n * argument is omitted the list of all local tracks will be returned.\n * @param {MediaType} [mediaType]\n * @return {Array<JitsiLocalTrack>}\n */\nTraceablePeerConnection.prototype.getLocalTracks = function(mediaType) {\n    let tracks = Array.from(this.localTracks.values());\n\n    if (mediaType !== undefined) {\n        tracks = tracks.filter(track => track.getType() === mediaType);\n    }\n\n    return tracks;\n};\n\n/**\n * Checks whether or not this {@link TraceablePeerConnection} instance contains\n * any local tracks for given <tt>mediaType</tt>.\n * @param {MediaType} mediaType\n * @return {boolean}\n */\nTraceablePeerConnection.prototype.hasAnyTracksOfType = function(mediaType) {\n    if (!mediaType) {\n        throw new Error('\"mediaType\" is required');\n    }\n\n    return this.getLocalTracks(mediaType).length > 0;\n};\n\n/**\n * Obtains all remote tracks currently known to this PeerConnection instance.\n * @param {string} [endpointId] the track owner's identifier (MUC nickname)\n * @param {MediaType} [mediaType] the remote tracks will be filtered\n * by their media type if this argument is specified.\n * @return {Array<JitsiRemoteTrack>}\n */\nTraceablePeerConnection.prototype.getRemoteTracks = function(\n        endpointId,\n        mediaType) {\n    const remoteTracks = [];\n    const endpoints\n        = endpointId ? [ endpointId ] : this.remoteTracks.keys();\n\n    for (const endpoint of endpoints) {\n        const endpointTrackMap = this.remoteTracks.get(endpoint);\n\n        if (!endpointTrackMap) {\n\n            // Otherwise an empty Map() would have to be allocated above\n            // eslint-disable-next-line no-continue\n            continue;\n        }\n\n        for (const trackMediaType of endpointTrackMap.keys()) {\n            // per media type filtering\n            if (!mediaType || mediaType === trackMediaType) {\n                const mediaTrack = endpointTrackMap.get(trackMediaType);\n\n                if (mediaTrack) {\n                    remoteTracks.push(mediaTrack);\n                }\n            }\n        }\n    }\n\n    return remoteTracks;\n};\n\n/**\n * Tries to find {@link JitsiTrack} for given SSRC number. It will search both\n * local and remote tracks bound to this instance.\n * @param {number} ssrc\n * @return {JitsiTrack|null}\n */\nTraceablePeerConnection.prototype.getTrackBySSRC = function(ssrc) {\n    if (typeof ssrc !== 'number') {\n        throw new Error(`SSRC ${ssrc} is not a number`);\n    }\n    for (const localTrack of this.localTracks.values()) {\n        if (this.getLocalSSRC(localTrack) === ssrc) {\n            return localTrack;\n        }\n    }\n    for (const remoteTrack of this.getRemoteTracks()) {\n        if (remoteTrack.getSSRC() === ssrc) {\n            return remoteTrack;\n        }\n    }\n\n    return null;\n};\n\n/**\n * Called when new remote MediaStream is added to the PeerConnection.\n * @param {MediaStream} stream the WebRTC MediaStream for remote participant\n */\nTraceablePeerConnection.prototype._remoteStreamAdded = function(stream) {\n    const streamId = RTC.getStreamID(stream);\n\n    if (!RTC.isUserStreamById(streamId)) {\n        logger.info(\n            `${this} ignored remote 'stream added' event for non-user stream`\n             + `id: ${streamId}`);\n\n        return;\n    }\n\n    // Bind 'addtrack'/'removetrack' event handlers\n    if (RTCBrowserType.isChrome() || RTCBrowserType.isNWJS()\n        || RTCBrowserType.isElectron() || RTCBrowserType.isEdge()) {\n        stream.onaddtrack = event => {\n            this._remoteTrackAdded(stream, event.track);\n        };\n        stream.onremovetrack = event => {\n            this._remoteTrackRemoved(stream, event.track);\n        };\n    }\n\n    // Call remoteTrackAdded for each track in the stream\n    const streamAudioTracks = stream.getAudioTracks();\n\n    for (const audioTrack of streamAudioTracks) {\n        this._remoteTrackAdded(stream, audioTrack);\n    }\n    const streamVideoTracks = stream.getVideoTracks();\n\n    for (const videoTrack of streamVideoTracks) {\n        this._remoteTrackAdded(stream, videoTrack);\n    }\n};\n\n\n/**\n * Called on \"track added\" and \"stream added\" PeerConnection events (because we\n * handle streams on per track basis). Finds the owner and the SSRC for\n * the track and passes that to ChatRoom for further processing.\n * @param {MediaStream} stream the WebRTC MediaStream instance which is\n * the parent of the track\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack added for remote\n * participant\n */\nTraceablePeerConnection.prototype._remoteTrackAdded = function(stream, track) {\n    const streamId = RTC.getStreamID(stream);\n    const mediaType = track.kind;\n\n    logger.info(`${this} remote track added:`, streamId, mediaType);\n\n    // look up an associated JID for a stream id\n    if (!mediaType) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `MediaType undefined for remote track, stream id: ${streamId}`\n            ));\n\n        // Abort\n        return;\n    }\n\n    const remoteSDP = new SDP(this.remoteDescription.sdp);\n    const mediaLines\n        = remoteSDP.media.filter(mls => mls.startsWith(`m=${mediaType}`));\n\n    if (!mediaLines.length) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `No media lines for type ${\n                    mediaType} found in remote SDP for remote track: ${\n                    streamId}`));\n\n        // Abort\n        return;\n    }\n\n    let ssrcLines = SDPUtil.findLines(mediaLines[0], 'a=ssrc:');\n\n    ssrcLines = ssrcLines.filter(\n        line => {\n            const msid\n                = RTCBrowserType.isTemasysPluginUsed() ? 'mslabel' : 'msid';\n\n\n            return line.indexOf(`${msid}:${streamId}`) !== -1;\n        });\n    if (!ssrcLines.length) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `No SSRC lines for streamId ${\n                    streamId} for remote track, media type: ${mediaType}`));\n\n        // Abort\n        return;\n    }\n\n    // FIXME the length of ssrcLines[0] not verified, but it will fail\n    // with global error handler anyway\n    const ssrcStr = ssrcLines[0].substring(7).split(' ')[0];\n    const trackSsrc = Number(ssrcStr);\n    const ownerEndpointId = this.signalingLayer.getSSRCOwner(trackSsrc);\n\n    if (isNaN(trackSsrc) || trackSsrc < 0) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `Invalid SSRC: ${ssrcStr} for remote track, msid: ${\n                    streamId} media type: ${mediaType}`));\n\n        // Abort\n        return;\n    } else if (!ownerEndpointId) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `No SSRC owner known for: ${\n                    trackSsrc} for remote track, msid: ${\n                    streamId} media type: ${mediaType}`));\n\n        // Abort\n        return;\n    }\n\n    logger.log(`${this} associated ssrc`, ownerEndpointId, trackSsrc);\n\n    const peerMediaInfo\n        = this.signalingLayer.getPeerMediaInfo(ownerEndpointId, mediaType);\n\n    if (!peerMediaInfo) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(\n                `${this}: no peer media info available for ${\n                    ownerEndpointId}`));\n\n        return;\n    }\n\n    const muted = peerMediaInfo.muted;\n    const videoType = peerMediaInfo.videoType; // can be undefined\n\n    this._createRemoteTrack(\n        ownerEndpointId, stream, track, mediaType, videoType, trackSsrc, muted);\n};\n\n// FIXME cleanup params\n/* eslint-disable max-params */\n\n/**\n * Initializes a new JitsiRemoteTrack instance with the data provided by\n * the signaling layer and SDP.\n *\n * @param {string} ownerEndpointId the owner's endpoint ID (MUC nickname)\n * @param {MediaStream} stream the WebRTC stream instance\n * @param {MediaStreamTrack} track the WebRTC track instance\n * @param {MediaType} mediaType the track's type of the media\n * @param {VideoType} [videoType] the track's type of the video (if applicable)\n * @param {number} ssrc the track's main SSRC number\n * @param {boolean} muted the initial muted status\n */\nTraceablePeerConnection.prototype._createRemoteTrack = function(\n        ownerEndpointId,\n        stream,\n        track,\n        mediaType,\n        videoType,\n        ssrc,\n        muted) {\n    const remoteTrack\n        = new JitsiRemoteTrack(\n            this.rtc, this.rtc.conference,\n            ownerEndpointId,\n            stream, track, mediaType, videoType, ssrc, muted, this.isP2P);\n    let remoteTracksMap = this.remoteTracks.get(ownerEndpointId);\n\n    if (!remoteTracksMap) {\n        remoteTracksMap = new Map();\n        this.remoteTracks.set(ownerEndpointId, remoteTracksMap);\n    }\n\n    if (remoteTracksMap.has(mediaType)) {\n        logger.error(\n            `${this} overwriting remote track! ${remoteTrack}`,\n            ownerEndpointId, mediaType);\n    }\n    remoteTracksMap.set(mediaType, remoteTrack);\n\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_ADDED, remoteTrack);\n};\n\n/* eslint-enable max-params */\n\n/**\n * Handles remote stream removal.\n * @param stream the WebRTC MediaStream object which is being removed from the\n * PeerConnection\n */\nTraceablePeerConnection.prototype._remoteStreamRemoved = function(stream) {\n    if (!RTC.isUserStream(stream)) {\n        const id = RTC.getStreamID(stream);\n\n        logger.info(\n            `Ignored remote 'stream removed' event for non-user stream ${id}`);\n\n        return;\n    }\n\n    // Call remoteTrackRemoved for each track in the stream\n    const streamVideoTracks = stream.getVideoTracks();\n\n    for (const videoTrack of streamVideoTracks) {\n        this._remoteTrackRemoved(stream, videoTrack);\n    }\n    const streamAudioTracks = stream.getAudioTracks();\n\n    for (const audioTrack of streamAudioTracks) {\n        this._remoteTrackRemoved(stream, audioTrack);\n    }\n};\n\n/**\n * Handles remote media track removal.\n * @param {MediaStream} stream WebRTC MediaStream instance which is the parent\n * of the track.\n * @param {MediaStreamTrack} track the WebRTC MediaStreamTrack which has been\n * removed from the PeerConnection.\n */\nTraceablePeerConnection.prototype._remoteTrackRemoved = function(\n        stream,\n        track) {\n    const streamId = RTC.getStreamID(stream);\n    const trackId = track && RTC.getTrackID(track);\n\n    logger.info(`${this} - remote track removed: ${streamId}, ${trackId}`);\n\n    if (!streamId) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(`${this} remote track removal failed - no stream ID`));\n\n        return;\n    }\n\n    if (!trackId) {\n        GlobalOnErrorHandler.callErrorHandler(\n            new Error(`${this} remote track removal failed - no track ID`));\n\n        return;\n    }\n\n    if (!this._removeRemoteTrackById(streamId, trackId)) {\n        // NOTE this warning is always printed when user leaves the room,\n        // because we remove remote tracks manually on MUC member left event,\n        // before the SSRCs are removed by Jicofo. In most cases it is fine to\n        // ignore this warning, but still it's better to keep it printed for\n        // debugging purposes.\n        //\n        // We could change the behaviour to emit track removed only from here,\n        // but the order of the events will change and consuming apps could\n        // behave unexpectedly (the \"user left\" event would come before \"track\n        // removed\" events).\n        logger.warn(\n            `${this} Removed track not found for msid: ${streamId},\n             track id: ${trackId}`);\n    }\n};\n\n/**\n * Finds remote track by it's stream and track ids.\n * @param {string} streamId the media stream id as defined by the WebRTC\n * @param {string} trackId the media track id as defined by the WebRTC\n * @return {JitsiRemoteTrack|undefined} the track's instance or\n * <tt>undefined</tt> if not found.\n * @private\n */\nTraceablePeerConnection.prototype._getRemoteTrackById = function(\n        streamId,\n        trackId) {\n    // .find will break the loop once the first match is found\n    for (const endpointTrackMap of this.remoteTracks.values()) {\n        for (const mediaTrack of endpointTrackMap.values()) {\n            // FIXME verify and try to use ===\n            /* eslint-disable eqeqeq */\n            if (mediaTrack.getStreamId() == streamId\n                && mediaTrack.getTrackId() == trackId) {\n                return mediaTrack;\n            }\n\n            /* eslint-enable eqeqeq */\n        }\n    }\n\n    return undefined;\n};\n\n/**\n * Removes all JitsiRemoteTracks associated with given MUC nickname\n * (resource part of the JID). Returns array of removed tracks.\n *\n * @param {string} owner - The resource part of the MUC JID.\n * @returns {JitsiRemoteTrack[]}\n */\nTraceablePeerConnection.prototype.removeRemoteTracks = function(owner) {\n    const removedTracks = [];\n    const remoteTracksMap = this.remoteTracks.get(owner);\n\n    if (remoteTracksMap) {\n        const removedAudioTrack = remoteTracksMap.get(MediaType.AUDIO);\n        const removedVideoTrack = remoteTracksMap.get(MediaType.VIDEO);\n\n        removedAudioTrack && removedTracks.push(removedAudioTrack);\n        removedVideoTrack && removedTracks.push(removedVideoTrack);\n\n        this.remoteTracks.delete(owner);\n    }\n\n    logger.debug(\n        `${this} removed remote tracks for ${owner} count: ${\n            removedTracks.length}`);\n\n    return removedTracks;\n};\n\n/**\n * Removes and disposes given <tt>JitsiRemoteTrack</tt> instance. Emits\n * {@link RTCEvents.REMOTE_TRACK_REMOVED}.\n * @param {JitsiRemoteTrack} toBeRemoved\n */\nTraceablePeerConnection.prototype._removeRemoteTrack = function(toBeRemoved) {\n    toBeRemoved.dispose();\n    const participantId = toBeRemoved.getParticipantId();\n    const remoteTracksMap = this.remoteTracks.get(participantId);\n\n    if (!remoteTracksMap) {\n        logger.error(\n            `removeRemoteTrack: no remote tracks map for ${participantId}`);\n    } else if (!remoteTracksMap.delete(toBeRemoved.getType())) {\n        logger.error(\n            `Failed to remove ${toBeRemoved} - type mapping messed up ?`);\n    }\n    this.eventEmitter.emit(RTCEvents.REMOTE_TRACK_REMOVED, toBeRemoved);\n};\n\n/**\n * Removes and disposes <tt>JitsiRemoteTrack</tt> identified by given stream and\n * track ids.\n *\n * @param {string} streamId the media stream id as defined by the WebRTC\n * @param {string} trackId the media track id as defined by the WebRTC\n * @returns {JitsiRemoteTrack|undefined} the track which has been removed or\n * <tt>undefined</tt> if no track matching given stream and track ids was\n * found.\n */\nTraceablePeerConnection.prototype._removeRemoteTrackById = function(\n        streamId,\n        trackId) {\n    const toBeRemoved = this._getRemoteTrackById(streamId, trackId);\n\n    if (toBeRemoved) {\n        this._removeRemoteTrack(toBeRemoved);\n    }\n\n    return toBeRemoved;\n};\n\n/**\n * @typedef {Object} SSRCGroupInfo\n * @property {Array<number>} ssrcs group's SSRCs\n * @property {string} semantics\n */\n/**\n * @typedef {Object} TrackSSRCInfo\n * @property {Array<number>} ssrcs track's SSRCs\n * @property {Array<SSRCGroupInfo>} groups track's SSRC groups\n */\n/**\n * Returns map with keys msid and <tt>TrackSSRCInfo</tt> values.\n * @param {Object} desc the WebRTC SDP instance.\n * @return {Map<string,TrackSSRCInfo>}\n */\nfunction extractSSRCMap(desc) {\n    /**\n     * Track SSRC infos mapped by stream ID (msid)\n     * @type {Map<string,TrackSSRCInfo>}\n     */\n    const ssrcMap = new Map();\n\n    /**\n     * Groups mapped by primary SSRC number\n     * @type {Map<number,Array<SSRCGroupInfo>>}\n     */\n    const groupsMap = new Map();\n\n    if (typeof desc !== 'object' || desc === null\n        || typeof desc.sdp !== 'string') {\n        logger.warn('An empty description was passed as an argument.');\n\n        return ssrcMap;\n    }\n\n    const session = transform.parse(desc.sdp);\n\n    if (!Array.isArray(session.media)) {\n        return ssrcMap;\n    }\n\n    for (const mLine of session.media) {\n        if (!Array.isArray(mLine.ssrcs)) {\n            continue; // eslint-disable-line no-continue\n        }\n\n        if (Array.isArray(mLine.ssrcGroups)) {\n            for (const group of mLine.ssrcGroups) {\n                if (typeof group.semantics !== 'undefined'\n                    && typeof group.ssrcs !== 'undefined') {\n                    // Parse SSRCs and store as numbers\n                    const groupSSRCs\n                        = group.ssrcs.split(' ').map(\n                            ssrcStr => parseInt(ssrcStr, 10));\n                    const primarySSRC = groupSSRCs[0];\n\n                    // Note that group.semantics is already present\n\n                    group.ssrcs = groupSSRCs;\n\n                    // eslint-disable-next-line max-depth\n                    if (!groupsMap.has(primarySSRC)) {\n                        groupsMap.set(primarySSRC, []);\n                    }\n                    groupsMap.get(primarySSRC).push(group);\n                }\n            }\n        }\n        for (const ssrc of mLine.ssrcs) {\n            if (ssrc.attribute !== 'msid') {\n                continue; // eslint-disable-line no-continue\n            }\n\n            const msid = ssrc.value;\n            let ssrcInfo = ssrcMap.get(msid);\n\n            if (!ssrcInfo) {\n                ssrcInfo = {\n                    ssrcs: [],\n                    groups: [],\n                    msid\n                };\n                ssrcMap.set(msid, ssrcInfo);\n            }\n\n            const ssrcNumber = ssrc.id;\n\n            ssrcInfo.ssrcs.push(ssrcNumber);\n\n            if (groupsMap.has(ssrcNumber)) {\n                const ssrcGroups = groupsMap.get(ssrcNumber);\n\n                for (const group of ssrcGroups) {\n                    ssrcInfo.groups.push(group);\n                }\n            }\n        }\n    }\n\n    return ssrcMap;\n}\n\n/**\n * Takes a SessionDescription object and returns a \"normalized\" version.\n * Currently it only takes care of ordering the a=ssrc lines.\n */\nconst normalizePlanB = function(desc) {\n    if (typeof desc !== 'object' || desc === null\n        || typeof desc.sdp !== 'string') {\n        logger.warn('An empty description was passed as an argument.');\n\n        return desc;\n    }\n\n    // eslint-disable-next-line no-shadow\n    const transform = require('sdp-transform');\n    const session = transform.parse(desc.sdp);\n\n    if (typeof session !== 'undefined'\n            && typeof session.media !== 'undefined'\n            && Array.isArray(session.media)) {\n        session.media.forEach(mLine => {\n\n            // Chrome appears to be picky about the order in which a=ssrc lines\n            // are listed in an m-line when rtx is enabled (and thus there are\n            // a=ssrc-group lines with FID semantics). Specifically if we have\n            // \"a=ssrc-group:FID S1 S2\" and the \"a=ssrc:S2\" lines appear before\n            // the \"a=ssrc:S1\" lines, SRD fails.\n            // So, put SSRC which appear as the first SSRC in an FID ssrc-group\n            // first.\n            const firstSsrcs = [];\n            const newSsrcLines = [];\n\n            if (typeof mLine.ssrcGroups !== 'undefined'\n                && Array.isArray(mLine.ssrcGroups)) {\n                mLine.ssrcGroups.forEach(group => {\n                    if (typeof group.semantics !== 'undefined'\n                        && group.semantics === 'FID') {\n                        if (typeof group.ssrcs !== 'undefined') {\n                            firstSsrcs.push(Number(group.ssrcs.split(' ')[0]));\n                        }\n                    }\n                });\n            }\n\n            if (Array.isArray(mLine.ssrcs)) {\n                let i;\n\n                for (i = 0; i < mLine.ssrcs.length; i++) {\n                    if (typeof mLine.ssrcs[i] === 'object'\n                        && typeof mLine.ssrcs[i].id !== 'undefined'\n                        && firstSsrcs.indexOf(mLine.ssrcs[i].id) >= 0) {\n                        newSsrcLines.push(mLine.ssrcs[i]);\n                        delete mLine.ssrcs[i];\n                    }\n                }\n\n                for (i = 0; i < mLine.ssrcs.length; i++) {\n                    if (typeof mLine.ssrcs[i] !== 'undefined') {\n                        newSsrcLines.push(mLine.ssrcs[i]);\n                    }\n                }\n\n                mLine.ssrcs = newSsrcLines;\n            }\n        });\n    }\n\n    const resStr = transform.write(session);\n\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: resStr\n    });\n};\n\n/**\n * Makes sure that both audio and video directions are configured as 'sendrecv'.\n * @param {Object} localDescription the SDP object as defined by WebRTC.\n */\nconst enforceSendRecv = function(localDescription) {\n    if (!localDescription) {\n        throw new Error('No local description passed in.');\n    }\n\n    const transformer = new SdpTransformWrap(localDescription.sdp);\n    const audioMedia = transformer.selectMedia('audio');\n    let changed = false;\n\n    if (audioMedia && audioMedia.direction !== 'sendrecv') {\n        audioMedia.direction = 'sendrecv';\n        changed = true;\n    }\n\n    const videoMedia = transformer.selectMedia('video');\n\n    if (videoMedia && videoMedia.direction !== 'sendrecv') {\n        videoMedia.direction = 'sendrecv';\n        changed = true;\n    }\n\n    if (changed) {\n        return new RTCSessionDescription({\n            type: localDescription.type,\n            sdp: transformer.toRawSDP()\n        });\n    }\n\n    return localDescription;\n};\n\n/**\n *\n * @param {JitsiLocalTrack} localTrack\n */\nTraceablePeerConnection.prototype.getLocalSSRC = function(localTrack) {\n    const ssrcInfo = this._getSSRC(localTrack.rtcId);\n\n    return ssrcInfo && ssrcInfo.ssrcs[0];\n};\n\n/**\n * When doing unified plan simulcast, we'll have a set of ssrcs with the\n * same msid but no ssrc-group, since unified plan signals the simulcast\n * group via the a=simulcast line.  Unfortunately, Jicofo will complain\n * if it sees ssrcs with matching msids but no ssrc-group, so we'll inject\n * an ssrc-group line to make Jicofo happy.\n * NOTE: unlike plan B simulcast, the ssrcs in this inject ssrc-group will\n * NOT necessarily be in order of quality (low to high) because:\n * a) when translating between unified plan and plan b the order of the ssrcs\n * is not preserved and\n * b) it isn't guaranteed that firefox will give them to us in order to begin\n * with\n * @param desc A session description object (with 'type' and 'sdp' fields)\n * @return A session description object with its sdp field modified to\n * contain an inject ssrc-group for simulcast\n */\nTraceablePeerConnection.prototype._injectSsrcGroupForUnifiedSimulcast\n    = function(desc) {\n        const sdp = transform.parse(desc.sdp);\n        const video = sdp.media.find(mline => mline.type === 'video');\n\n        if (video.simulcast_03) {\n            const ssrcs = [];\n\n            video.ssrcs.forEach(ssrc => {\n                if (ssrc.attribute === 'msid') {\n                    ssrcs.push(ssrc.id);\n                }\n            });\n            video.ssrcGroups = video.ssrcGroups || [];\n            if (video.ssrcGroups.find(group => group.semantics === 'SIM')) {\n                // Group already exists, no need to do anything\n                return desc;\n            }\n            video.ssrcGroups.push({\n                semantics: 'SIM',\n                ssrcs: ssrcs.join(' ')\n            });\n        }\n\n        return new RTCSessionDescription({\n            type: desc.type,\n            sdp: transform.write(sdp)\n        });\n    };\n\n/* eslint-disable-next-line vars-on-top */\nconst getters = {\n    signalingState() {\n        return this.peerconnection.signalingState;\n    },\n    iceConnectionState() {\n        return this.peerconnection.iceConnectionState;\n    },\n    localDescription() {\n        let desc = this.peerconnection.localDescription;\n\n        if (!desc) {\n            logger.debug('getLocalDescription no localDescription found');\n\n            return {};\n        }\n\n        this.trace('getLocalDescription::preTransform', dumpSDP(desc));\n\n        // if we're running on FF, transform to Plan B first.\n        if (RTCBrowserType.usesUnifiedPlan()) {\n            desc = this.interop.toPlanB(desc);\n            this.trace('getLocalDescription::postTransform (Plan B)',\n                dumpSDP(desc));\n\n            desc = this._injectSsrcGroupForUnifiedSimulcast(desc);\n            this.trace('getLocalDescription::postTransform (inject ssrc group)',\n                dumpSDP(desc));\n        }\n\n        if (RTCBrowserType.doesVideoMuteByStreamRemove()) {\n            desc = this.localSdpMunger.maybeAddMutedLocalVideoTracksToSDP(desc);\n            logger.debug(\n                'getLocalDescription::postTransform (munge local SDP)', desc);\n        }\n\n        // What comes out of this getter will be signalled over Jingle to\n        // the other peer, so we need to make sure the media direction is\n        // 'sendrecv' because we won't change the direction later and don't want\n        // the other peer to think we can't send or receive.\n        //\n        // Note that the description we set in chrome does have the accurate\n        // direction (e.g. 'recvonly'), since that is technically what is\n        // happening (check setLocalDescription impl).\n        desc = enforceSendRecv(desc);\n\n        return desc;\n    },\n    remoteDescription() {\n        let desc = this.peerconnection.remoteDescription;\n\n        this.trace('getRemoteDescription::preTransform', dumpSDP(desc));\n\n        // if we're running on FF, transform to Plan B first.\n        if (RTCBrowserType.usesUnifiedPlan()) {\n            desc = this.interop.toPlanB(desc);\n            this.trace(\n                'getRemoteDescription::postTransform (Plan B)', dumpSDP(desc));\n        }\n\n        return desc || {};\n    }\n};\n\nObject.keys(getters).forEach(prop => {\n    Object.defineProperty(\n        TraceablePeerConnection.prototype,\n        prop, {\n            get: getters[prop]\n        }\n    );\n});\n\nTraceablePeerConnection.prototype._getSSRC = function(rtcId) {\n    return this.localSSRCs.get(rtcId);\n};\n\n/**\n * Add {@link JitsiLocalTrack} to this TPC.\n * @param {JitsiLocalTrack} track\n */\nTraceablePeerConnection.prototype.addTrack = function(track) {\n    const rtcId = track.rtcId;\n\n    logger.info(`add ${track} to: ${this}`);\n\n    if (this.localTracks.has(rtcId)) {\n        logger.error(`${track} is already in ${this}`);\n\n        return;\n    }\n\n    this.localTracks.set(rtcId, track);\n\n    const webrtcStream = track.getOriginalStream();\n\n    if (webrtcStream) {\n        this._addStream(webrtcStream);\n\n    // It's not ok for a track to not have a WebRTC stream if:\n    } else if (!RTCBrowserType.doesVideoMuteByStreamRemove()\n                || track.isAudioTrack()\n                || (track.isVideoTrack() && !track.isMuted())) {\n        logger.error(`${this} no WebRTC stream for: ${track}`);\n    }\n\n    // Muted video tracks do not have WebRTC stream\n    if (RTCBrowserType.doesVideoMuteByStreamRemove()\n            && track.isVideoTrack() && track.isMuted()) {\n        const ssrcInfo = this.generateNewStreamSSRCInfo(track);\n\n        this.sdpConsistency.setPrimarySsrc(ssrcInfo.ssrcs[0]);\n        const simGroup\n            = ssrcInfo.groups.find(groupInfo => groupInfo.semantics === 'SIM');\n\n        if (simGroup) {\n            this.simulcast.setSsrcCache(simGroup.ssrcs);\n        }\n        const fidGroups\n            = ssrcInfo.groups.filter(\n                groupInfo => groupInfo.semantics === 'FID');\n\n        if (fidGroups) {\n            const rtxSsrcMapping = new Map();\n\n            fidGroups.forEach(fidGroup => {\n                const primarySsrc = fidGroup.ssrcs[0];\n                const rtxSsrc = fidGroup.ssrcs[1];\n\n                rtxSsrcMapping.set(primarySsrc, rtxSsrc);\n            });\n            this.rtxModifier.setSsrcCache(rtxSsrcMapping);\n        }\n    }\n};\n\n/**\n * Adds local track as part of the unmute operation.\n * @param {JitsiLocalTrack} track the track to be added as part of the unmute\n * operation\n * @return {boolean} <tt>true</tt> if the state of underlying PC has changed and\n * the renegotiation is required or <tt>false</tt> otherwise.\n */\nTraceablePeerConnection.prototype.addTrackUnmute = function(track) {\n    if (!this._assertTrackBelongs('addTrackUnmute', track)) {\n        // Abort\n        return false;\n    }\n\n    logger.info(`Adding ${track} as unmute to ${this}`);\n    const webRtcStream = track.getOriginalStream();\n\n    if (!webRtcStream) {\n        logger.error(\n            `Unable to add ${track} as unmute to ${this} - no WebRTC stream`);\n\n        return false;\n    }\n    this._addStream(webRtcStream);\n\n    return true;\n};\n\n/**\n * Adds WebRTC media stream to the underlying PeerConnection\n * @param {MediaStream} mediaStream\n * @private\n */\nTraceablePeerConnection.prototype._addStream = function(mediaStream) {\n    this.peerconnection.addStream(mediaStream);\n    this._addedStreams.push(mediaStream);\n};\n\n/**\n * Removes WebRTC media stream from the underlying PeerConection\n * @param {MediaStream} mediaStream\n */\nTraceablePeerConnection.prototype._removeStream = function(mediaStream) {\n    if (RTCBrowserType.isFirefox()) {\n        this._handleFirefoxRemoveStream(mediaStream);\n    } else {\n        this.peerconnection.removeStream(mediaStream);\n    }\n    this._addedStreams\n        = this._addedStreams.filter(stream => stream !== mediaStream);\n};\n\n/**\n * This method when called will check if given <tt>localTrack</tt> belongs to\n * this TPC (that it has been previously added using {@link addTrack}). If the\n * track does not belong an error message will be logged.\n * @param {string} methodName the method name that will be logged in an error\n * message\n * @param {JitsiLocalTrack} localTrack\n * @return {boolean} <tt>true</tt> if given local track belongs to this TPC or\n * <tt>false</tt> otherwise.\n * @private\n */\nTraceablePeerConnection.prototype._assertTrackBelongs = function(\n        methodName,\n        localTrack) {\n    const doesBelong = this.localTracks.has(localTrack.rtcId);\n\n    if (!doesBelong) {\n        logger.error(\n            `${methodName}: ${localTrack} does not belong to ${this}`);\n    }\n\n    return doesBelong;\n};\n\n/**\n * Tells if the given WebRTC <tt>MediaStream</tt> has been added to\n * the underlying WebRTC PeerConnection.\n * @param {MediaStream} mediaStream\n * @returns {boolean}\n */\nTraceablePeerConnection.prototype.isMediaStreamInPc = function(mediaStream) {\n    return this._addedStreams.indexOf(mediaStream) > -1;\n};\n\n/**\n * Remove local track from this TPC.\n * @param {JitsiLocalTrack} localTrack the track to be removed from this TPC.\n *\n * FIXME It should probably remove a boolean just like {@link removeTrackMute}\n *       The same applies to addTrack.\n */\nTraceablePeerConnection.prototype.removeTrack = function(localTrack) {\n    const webRtcStream = localTrack.getOriginalStream();\n\n    this.trace(\n        'removeStream',\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : undefined);\n\n    if (!this._assertTrackBelongs('removeStream', localTrack)) {\n        // Abort - nothing to be done here\n        return;\n    }\n    this.localTracks.delete(localTrack.rtcId);\n    this.localSSRCs.delete(localTrack.rtcId);\n\n    if (webRtcStream) {\n        if (RTCBrowserType.isFirefox()) {\n            this._handleFirefoxRemoveStream(webRtcStream);\n        } else {\n            this.peerconnection.removeStream(webRtcStream);\n        }\n    }\n};\n\n/**\n * Removes local track as part of the mute operation.\n * @param {JitsiLocalTrack} localTrack the local track to be remove as part of\n * the mute operation.\n * @return {boolean} <tt>true</tt> if the underlying PeerConnection's state has\n * changed and the renegotiation is required or <tt>false</tt> otherwise.\n */\nTraceablePeerConnection.prototype.removeTrackMute = function(localTrack) {\n    const webRtcStream = localTrack.getOriginalStream();\n\n    this.trace(\n        'removeStreamMute',\n        localTrack.rtcId, webRtcStream ? webRtcStream.id : null);\n\n    if (!this._assertTrackBelongs('removeStreamMute', localTrack)) {\n        // Abort - nothing to be done here\n        return false;\n    }\n\n    if (webRtcStream) {\n        logger.info(\n            `Removing ${localTrack} as mute from ${this}`);\n        this._removeStream(webRtcStream);\n\n        return true;\n    }\n\n    logger.error(`removeStreamMute - no WebRTC stream for ${localTrack}`);\n\n    return false;\n};\n\n/**\n * Remove stream handling for firefox\n * @param stream: webrtc media stream\n */\nTraceablePeerConnection.prototype._handleFirefoxRemoveStream = function(\n        stream) {\n    if (!stream) {\n        // There is nothing to be changed\n        return;\n    }\n    let sender = null;\n\n    // On Firefox we don't replace MediaStreams as this messes up the\n    // m-lines (which can't be removed in Plan Unified) and brings a lot\n    // of complications. Instead, we use the RTPSender and remove just\n    // the track.\n    let track = null;\n\n    if (stream.getAudioTracks() && stream.getAudioTracks().length) {\n        track = stream.getAudioTracks()[0];\n    } else if (stream.getVideoTracks() && stream.getVideoTracks().length) {\n        track = stream.getVideoTracks()[0];\n    }\n\n    if (!track) {\n        logger.error('Cannot remove tracks: no tracks.');\n\n        return;\n    }\n\n    // Find the right sender (for audio or video)\n    this.peerconnection.getSenders().some(s => {\n        if (s.track === track) {\n            sender = s;\n\n            return true;\n        }\n\n        return false;\n    });\n\n    if (sender) {\n        this.peerconnection.removeTrack(sender);\n    } else {\n        logger.log('Cannot remove tracks: no RTPSender.');\n    }\n};\n\nTraceablePeerConnection.prototype.createDataChannel = function(label, opts) {\n    this.trace('createDataChannel', label, opts);\n\n    return this.peerconnection.createDataChannel(label, opts);\n};\n\n/**\n * Ensures that the simulcast ssrc-group appears after any other ssrc-groups\n * in the SDP so that simulcast is properly activated.\n *\n * @param {Object} localSdp the WebRTC session description instance for\n * the local description.\n * @private\n */\nTraceablePeerConnection.prototype._ensureSimulcastGroupIsLast = function(\n        localSdp) {\n    let sdpStr = localSdp.sdp;\n\n    const videoStartIndex = sdpStr.indexOf('m=video');\n    const simStartIndex = sdpStr.indexOf('a=ssrc-group:SIM', videoStartIndex);\n    let otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\n\n    if (simStartIndex === -1\n        || otherStartIndex === -1\n        || otherStartIndex === simStartIndex) {\n        return localSdp;\n    }\n\n    const simEndIndex = sdpStr.indexOf('\\r\\n', simStartIndex);\n    const simStr = sdpStr.substring(simStartIndex, simEndIndex + 2);\n\n    sdpStr = sdpStr.replace(simStr, '');\n    otherStartIndex = sdpStr.lastIndexOf('a=ssrc-group');\n    const otherEndIndex = sdpStr.indexOf('\\r\\n', otherStartIndex);\n    const sdpHead = sdpStr.slice(0, otherEndIndex);\n    const simStrTrimmed = simStr.trim();\n    const sdpTail = sdpStr.slice(otherEndIndex);\n\n    sdpStr = `${sdpHead}\\r\\n${simStrTrimmed}${sdpTail}`;\n\n    return new RTCSessionDescription({\n        type: localSdp.type,\n        sdp: sdpStr\n    });\n};\n\n/**\n * Will adjust audio and video media direction in the given SDP object to\n * reflect the current status of the {@link audioTransferActive} and\n * {@link videoTransferActive} flags.\n * @param {Object} localDescription the WebRTC session description instance for\n * the local description.\n * @private\n */\nTraceablePeerConnection.prototype._adjustLocalMediaDirection = function(\n        localDescription) {\n    const transformer = new SdpTransformWrap(localDescription.sdp);\n    let modifiedDirection = false;\n    const audioMedia = transformer.selectMedia('audio');\n\n    if (audioMedia) {\n        const desiredAudioDirection\n            = this._getDesiredMediaDirection(MediaType.AUDIO);\n\n        if (audioMedia.direction !== desiredAudioDirection) {\n            audioMedia.direction = desiredAudioDirection;\n            logger.info(\n                `Adjusted local audio direction to ${desiredAudioDirection}`);\n            modifiedDirection = true;\n        }\n    } else {\n        logger.warn('No \"audio\" media found int the local description');\n    }\n\n    const videoMedia = transformer.selectMedia('video');\n\n    if (videoMedia) {\n        const desiredVideoDirection\n            = this._getDesiredMediaDirection(MediaType.VIDEO);\n\n        if (videoMedia.direction !== desiredVideoDirection) {\n            videoMedia.direction = desiredVideoDirection;\n            logger.info(\n                `Adjusted local video direction to ${desiredVideoDirection}`);\n            modifiedDirection = true;\n        }\n    } else {\n        logger.warn('No \"video\" media found in the local description');\n    }\n\n    if (modifiedDirection) {\n        return new RTCSessionDescription({\n            type: localDescription.type,\n            sdp: transformer.toRawSDP()\n        });\n    }\n\n    return localDescription;\n};\n\nTraceablePeerConnection.prototype.setLocalDescription = function(\n        description,\n        successCallback,\n        failureCallback) {\n    let localSdp = description;\n\n    this.trace('setLocalDescription::preTransform', dumpSDP(localSdp));\n\n    if (this.options.disableH264 || this.options.preferH264) {\n        const parsedSdp = transform.parse(localSdp.sdp);\n        const videoMLine = parsedSdp.media.find(m => m.type === 'video');\n\n        if (this.options.disableH264) {\n            SDPUtil.stripVideoCodec(videoMLine, 'h264');\n        } else {\n            SDPUtil.preferVideoCodec(videoMLine, 'h264');\n        }\n\n        localSdp = new RTCSessionDescription({\n            type: localSdp.type,\n            sdp: transform.write(parsedSdp)\n        });\n\n        this.trace('setLocalDescription::postTransform (H264)',\n            dumpSDP(localSdp));\n    }\n\n    localSdp = this._adjustLocalMediaDirection(localSdp);\n\n    localSdp = this._ensureSimulcastGroupIsLast(localSdp);\n\n    // if we're using unified plan, transform to it first.\n    if (RTCBrowserType.usesUnifiedPlan()) {\n        localSdp = this.interop.toUnifiedPlan(localSdp);\n        this.trace(\n            'setLocalDescription::postTransform (Unified Plan)',\n            dumpSDP(localSdp));\n    }\n\n    this.peerconnection.setLocalDescription(localSdp,\n        () => {\n            this.trace('setLocalDescriptionOnSuccess');\n            const localUfrag = SDPUtil.getUfrag(localSdp.sdp);\n\n            if (localUfrag !== this.localUfrag) {\n                this.localUfrag = localUfrag;\n                this.eventEmitter.emit(\n                    RTCEvents.LOCAL_UFRAG_CHANGED, this, localUfrag);\n            }\n            successCallback();\n        },\n        err => {\n            this.trace('setLocalDescriptionOnFailure', err);\n            this.eventEmitter.emit(\n                RTCEvents.SET_LOCAL_DESCRIPTION_FAILED,\n                err, this);\n            failureCallback(err);\n        }\n    );\n};\n\n/**\n * Enables/disables audio media transmission on this peer connection. When\n * disabled the SDP audio media direction in the local SDP will be adjusted to\n * 'inactive' which means that no data will be sent nor accepted, but\n * the connection should be kept alive.\n * @param {boolean} active <tt>true</tt> to enable video media transmission or\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\n * no effect.\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\n * needs to be executed in order for the changes to take effect or\n * <tt>false</tt> if the given value was the same as the previous one.\n * @public\n */\nTraceablePeerConnection.prototype.setAudioTransferActive = function(active) {\n    logger.debug(`${this} audio transfer active: ${active}`);\n    const changed = this.audioTransferActive !== active;\n\n    this.audioTransferActive = active;\n\n    return changed;\n};\n\n/**\n * Takes in a *unified plan* offer and inserts the appropriate\n * parameters for adding simulcast receive support.\n * @param {Object} desc - A session description object\n * @param {String} desc.type - the type (offer/answer)\n * @param {String} desc.sdp - the sdp content\n *\n * @return {Object} A session description (same format as above) object\n * with its sdp field modified to advertise simulcast receive support\n */\nTraceablePeerConnection.prototype._insertUnifiedPlanSimulcastReceive\n    = function(desc) {\n        const sdp = transform.parse(desc.sdp);\n        const video = sdp.media.find(mline => mline.type === 'video');\n\n        // In order of lowest to highest spatial quality\n        video.rids = [\n            {\n                id: SIM_LAYER_1_RID,\n                direction: 'recv'\n            },\n            {\n                id: SIM_LAYER_2_RID,\n                direction: 'recv'\n            },\n            {\n                id: SIM_LAYER_3_RID,\n                direction: 'recv'\n            }\n        ];\n        // eslint-disable-next-line camelcase\n        video.simulcast_03 = {\n            value: `recv rid=${SIM_LAYER_RIDS.join(';')}`\n        };\n\n        return new RTCSessionDescription({\n            type: desc.type,\n            sdp: transform.write(sdp)\n        });\n    };\n\nTraceablePeerConnection.prototype.setRemoteDescription = function(\n        description,\n        successCallback,\n        failureCallback) {\n    this.trace('setRemoteDescription::preTransform', dumpSDP(description));\n\n    // TODO the focus should squeze or explode the remote simulcast\n    // eslint-disable-next-line no-param-reassign\n    description = this.simulcast.mungeRemoteDescription(description);\n    this.trace(\n        'setRemoteDescription::postTransform (simulcast)',\n        dumpSDP(description));\n\n    if (this.options.preferH264) {\n        const parsedSdp = transform.parse(description.sdp);\n        const videoMLine = parsedSdp.media.find(m => m.type === 'video');\n\n        SDPUtil.preferVideoCodec(videoMLine, 'h264');\n\n        // eslint-disable-next-line no-param-reassign\n        description = new RTCSessionDescription({\n            type: description.type,\n            sdp: transform.write(parsedSdp)\n        });\n    }\n\n    // If the browser uses unified plan, transform to it first\n    if (RTCBrowserType.usesUnifiedPlan()) {\n        // eslint-disable-next-line no-param-reassign\n        description = new RTCSessionDescription({\n            type: description.type,\n            sdp: this.rtxModifier.stripRtx(description.sdp)\n        });\n\n        this.trace(\n            'setRemoteDescription::postTransform (stripRtx)',\n            dumpSDP(description));\n\n        // eslint-disable-next-line no-param-reassign\n        description = this.interop.toUnifiedPlan(description);\n        this.trace(\n            'setRemoteDescription::postTransform (Plan A)',\n            dumpSDP(description));\n\n        if (this.isSimulcastOn()) {\n            // eslint-disable-next-line no-param-reassign\n            description = this._insertUnifiedPlanSimulcastReceive(description);\n            this.trace(\n                'setRemoteDescription::postTransform (sim receive)',\n                dumpSDP(description));\n        }\n    } else {\n        // Plan B\n        // eslint-disable-next-line no-param-reassign\n        description = normalizePlanB(description);\n    }\n\n    // Safari WebRTC errors when no supported video codec is found in the offer.\n    // To prevent the error, inject H264 into the video mLine.\n    if (RTCBrowserType.isSafariWithWebrtc()) {\n        logger.debug('Maybe injecting H264 into the remote description');\n\n        // eslint-disable-next-line no-param-reassign\n        description = this._injectH264IfNotPresent(description);\n    }\n\n    this.peerconnection.setRemoteDescription(\n        description,\n        () => {\n            this.trace('setRemoteDescriptionOnSuccess');\n            const remoteUfrag = SDPUtil.getUfrag(description.sdp);\n\n            if (remoteUfrag !== this.remoteUfrag) {\n                this.remoteUfrag = remoteUfrag;\n                this.eventEmitter.emit(\n                    RTCEvents.REMOTE_UFRAG_CHANGED, this, remoteUfrag);\n            }\n            successCallback();\n        },\n        err => {\n            this.trace('setRemoteDescriptionOnFailure', err);\n            this.eventEmitter.emit(\n                RTCEvents.SET_REMOTE_DESCRIPTION_FAILED,\n                err,\n                this);\n            failureCallback(err);\n        });\n};\n\n/**\n * Inserts an H264 payload into the description if not already present. This is\n * need for Safari WebRTC, which errors when no supported video codec is found\n * in the offer. Related bug reports:\n * https://bugs.webkit.org/show_bug.cgi?id=173141\n * https://bugs.chromium.org/p/webrtc/issues/detail?id=4957\n *\n * @param {RTCSessionDescription} description - An RTCSessionDescription\n * to inject with an H264 payload.\n * @private\n * @returns {RTCSessionDescription}\n */\nTraceablePeerConnection.prototype._injectH264IfNotPresent = function(\n        description) {\n    const parsedSdp = transform.parse(description.sdp);\n    const videoMLine = parsedSdp.media.find(m => m.type === 'video');\n\n    if (!videoMLine) {\n        logger.debug('No videoMLine found, no need to inject H264.');\n\n        return description;\n    }\n\n    if (videoMLine.rtp.some(rtp => rtp.codec.toLowerCase() === 'h264')) {\n        logger.debug('H264 codec found in video mLine, no need to inject.');\n\n        return description;\n    }\n\n    const { fmtp, payloads, rtp } = videoMLine;\n    const payloadsArray = payloads.toString().split(' ');\n    let dummyPayloadType;\n\n    for (let i = 127; i >= 96; i--) {\n        if (!payloadsArray.includes(i)) {\n            dummyPayloadType = i;\n            payloadsArray.push(i);\n            videoMLine.payloads = payloadsArray.join(' ');\n            break;\n        }\n    }\n\n    if (typeof dummyPayloadType === 'undefined') {\n        logger.error('Could not find valid payload type to inject.');\n\n        return description;\n    }\n\n    rtp.push({\n        codec: 'H264',\n        payload: dummyPayloadType,\n        rate: 90000\n    });\n\n    fmtp.push({\n        config: 'level-asymmetry-allowed=1;'\n            + 'packetization-mode=1;'\n            + 'profile-level-id=42e01f',\n        payload: dummyPayloadType\n    });\n\n    logger.debug(\n        `Injecting H264 payload type ${dummyPayloadType} into video mLine.`);\n\n    return new RTCSessionDescription({\n        type: description.type,\n        sdp: transform.write(parsedSdp)\n    });\n};\n\n/**\n * Enables/disables video media transmission on this peer connection. When\n * disabled the SDP video media direction in the local SDP will be adjusted to\n * 'inactive' which means that no data will be sent nor accepted, but\n * the connection should be kept alive.\n * @param {boolean} active <tt>true</tt> to enable video media transmission or\n * <tt>false</tt> to disable. If the value is not a boolean the call will have\n * no effect.\n * @return {boolean} <tt>true</tt> if the value has changed and sRD/sLD cycle\n * needs to be executed in order for the changes to take effect or\n * <tt>false</tt> if the given value was the same as the previous one.\n * @public\n */\nTraceablePeerConnection.prototype.setVideoTransferActive = function(active) {\n    logger.debug(`${this} video transfer active: ${active}`);\n    const changed = this.videoTransferActive !== active;\n\n    this.videoTransferActive = active;\n\n    return changed;\n};\n\n/**\n * Makes the underlying TraceablePeerConnection generate new SSRC for\n * the recvonly video stream.\n */\nTraceablePeerConnection.prototype.generateRecvonlySsrc = function() {\n    const newSSRC = SDPUtil.generateSsrc();\n\n    logger.info(`${this} generated new recvonly SSRC: ${newSSRC}`);\n    this.sdpConsistency.setPrimarySsrc(newSSRC);\n};\n\n/**\n * Makes the underlying TraceablePeerConnection forget the current primary video\n * SSRC.\n */\nTraceablePeerConnection.prototype.clearRecvonlySsrc = function() {\n    logger.info('Clearing primary video SSRC!');\n    this.sdpConsistency.clearVideoSsrcCache();\n};\n\n/**\n * Closes underlying WebRTC PeerConnection instance and removes all remote\n * tracks by emitting {@link RTCEvents.REMOTE_TRACK_REMOVED} for each one of\n * them.\n */\nTraceablePeerConnection.prototype.close = function() {\n    this.trace('stop');\n\n    // Off SignalingEvents\n    this.signalingLayer.off(\n        SignalingEvents.PEER_MUTED_CHANGED, this._peerMutedChanged);\n    this.signalingLayer.off(\n        SignalingEvents.PEER_VIDEO_TYPE_CHANGED, this._peerVideoTypeChanged);\n\n    for (const peerTracks of this.remoteTracks.values()) {\n        for (const remoteTrack of peerTracks.values()) {\n            this._removeRemoteTrack(remoteTrack);\n        }\n    }\n    this.remoteTracks.clear();\n\n    this._addedStreams = [];\n\n    if (!this.rtc._removePeerConnection(this)) {\n        logger.error('RTC._removePeerConnection returned false');\n    }\n    if (this.statsinterval !== null) {\n        window.clearInterval(this.statsinterval);\n        this.statsinterval = null;\n    }\n    logger.info(`Closing ${this}...`);\n    this.peerconnection.close();\n};\n\n/**\n * Modifies the values of the setup attributes (defined by\n * {@link http://tools.ietf.org/html/rfc4145#section-4}) of a specific SDP\n * answer in order to overcome a delay of 1 second in the connection\n * establishment between Chrome and Videobridge.\n *\n * @param {SDP} offer - the SDP offer to which the specified SDP answer is\n * being prepared to respond\n * @param {SDP} answer - the SDP to modify\n * @private\n */\nconst _fixAnswerRFC4145Setup = function(offer, answer) {\n    if (!RTCBrowserType.isChrome()) {\n        // It looks like Firefox doesn't agree with the fix (at least in its\n        // current implementation) because it effectively remains active even\n        // after we tell it to become passive. Apart from Firefox which I tested\n        // after the fix was deployed, I tested Chrome only. In order to prevent\n        // issues with other browsers, limit the fix to Chrome for the time\n        // being.\n        return;\n    }\n\n    // XXX Videobridge is the (SDP) offerer and WebRTC (e.g. Chrome) is the\n    // answerer (as orchestrated by Jicofo). In accord with\n    // http://tools.ietf.org/html/rfc5245#section-5.2 and because both peers\n    // are ICE FULL agents, Videobridge will take on the controlling role and\n    // WebRTC will take on the controlled role. In accord with\n    // https://tools.ietf.org/html/rfc5763#section-5, Videobridge will use the\n    // setup attribute value of setup:actpass and WebRTC will be allowed to\n    // choose either the setup attribute value of setup:active or\n    // setup:passive. Chrome will by default choose setup:active because it is\n    // RECOMMENDED by the respective RFC since setup:passive adds additional\n    // latency. The case of setup:active allows WebRTC to send a DTLS\n    // ClientHello as soon as an ICE connectivity check of its succeeds.\n    // Unfortunately, Videobridge will be unable to respond immediately because\n    // may not have WebRTC's answer or may have not completed the ICE\n    // connectivity establishment. Even more unfortunate is that in the\n    // described scenario Chrome's DTLS implementation will insist on\n    // retransmitting its ClientHello after a second (the time is in accord\n    // with the respective RFC) and will thus cause the whole connection\n    // establishment to exceed at least 1 second. To work around Chrome's\n    // idiosyncracy, don't allow it to send a ClientHello i.e. change its\n    // default choice of setup:active to setup:passive.\n    if (offer && answer\n            && offer.media && answer.media\n            && offer.media.length === answer.media.length) {\n        answer.media.forEach((a, i) => {\n            if (SDPUtil.findLine(\n                    offer.media[i],\n                    'a=setup:actpass',\n                    offer.session)) {\n                answer.media[i]\n                    = a.replace(/a=setup:active/g, 'a=setup:passive');\n            }\n        });\n        answer.raw = answer.session + answer.media.join('');\n    }\n};\n\nTraceablePeerConnection.prototype.createAnswer = function(\n        successCallback,\n        failureCallback,\n        constraints) {\n    if (RTCBrowserType.supportsRtpSender() && this.isSimulcastOn()) {\n        const videoSender\n            = this.peerconnection.getSenders().find(sender =>\n                sender.track.kind === 'video');\n        const simParams = {\n            encodings: [\n                {\n                    rid: SIM_LAYER_1_RID,\n                    scaleResolutionDownBy: 4\n                },\n                {\n                    rid: SIM_LAYER_2_RID,\n                    scaleResolutionDownBy: 2\n                },\n                {\n                    rid: SIM_LAYER_3_RID\n                }\n            ]\n        };\n\n        videoSender.setParameters(simParams);\n    }\n    this._createOfferOrAnswer(\n        false /* answer */, successCallback, failureCallback, constraints);\n};\n\nTraceablePeerConnection.prototype.createOffer = function(\n        successCallback,\n        failureCallback,\n        constraints) {\n    this._createOfferOrAnswer(\n        true /* offer */, successCallback, failureCallback, constraints);\n};\n\n/* eslint-disable max-params */\n\nTraceablePeerConnection.prototype._createOfferOrAnswer = function(\n        isOffer,\n        successCallback,\n        failureCallback,\n        constraints) {\n    const logName = isOffer ? 'Offer' : 'Answer';\n\n    this.trace(`create${logName}`, JSON.stringify(constraints, null, ' '));\n\n    const _successCallback = resultSdp => {\n        try {\n            this.trace(\n                `create${logName}OnSuccess::preTransform`, dumpSDP(resultSdp));\n\n            // if we're using unified plan, transform to Plan B.\n            if (RTCBrowserType.usesUnifiedPlan()) {\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = this.interop.toPlanB(resultSdp);\n                this.trace(\n                    `create${logName}OnSuccess::postTransform (Plan B)`,\n                    dumpSDP(resultSdp));\n                if (this.isSimulcastOn()) {\n                    // eslint-disable-next-line no-param-reassign\n                    resultSdp\n                        = this._injectSsrcGroupForUnifiedSimulcast(resultSdp);\n                    this.trace(\n                        `create${logName}OnSuccess::postTransform`\n                        + '(inject ssrc group)', dumpSDP(resultSdp));\n                }\n            }\n\n            /**\n             * We don't keep ssrcs consitent for Firefox because rewriting\n             *  the ssrcs between createAnswer and setLocalDescription breaks\n             *  the caching in sdp-interop (sdp-interop must know about all\n             *  ssrcs, and it updates its cache in toPlanB so if we rewrite them\n             *  after that, when we try and go back to unified plan it will\n             *  complain about unmapped ssrcs)\n             */\n            if (!RTCBrowserType.isFirefox()) {\n                // If there are no local video tracks, then a \"recvonly\"\n                // SSRC needs to be generated\n                if (!this.hasAnyTracksOfType(MediaType.VIDEO)\n                    && !this.sdpConsistency.hasPrimarySsrcCached()) {\n                    this.generateRecvonlySsrc();\n                }\n\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = new RTCSessionDescription({\n                    type: resultSdp.type,\n                    sdp: this.sdpConsistency.makeVideoPrimarySsrcsConsistent(\n                        resultSdp.sdp)\n                });\n\n                this.trace(\n                    `create${logName}OnSuccess::postTransform `\n                         + '(make primary audio/video ssrcs consistent)',\n                    dumpSDP(resultSdp));\n            }\n\n            // Add simulcast streams if simulcast is enabled\n            if (this.isSimulcastOn()) {\n\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = this.simulcast.mungeLocalDescription(resultSdp);\n                this.trace(\n                    `create${logName}`\n                        + 'OnSuccess::postTransform (simulcast)',\n                    dumpSDP(resultSdp));\n            }\n\n            if (!this.options.disableRtx && RTCBrowserType.supportsRtx()) {\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = new RTCSessionDescription({\n                    type: resultSdp.type,\n                    sdp: this.rtxModifier.modifyRtxSsrcs(resultSdp.sdp)\n                });\n\n                this.trace(\n                    `create${logName}`\n                         + 'OnSuccess::postTransform (rtx modifier)',\n                    dumpSDP(resultSdp));\n            }\n\n            // Fix the setup attribute (see _fixAnswerRFC4145Setup for\n            //  details)\n            if (!isOffer) {\n                const remoteDescription\n                    = new SDP(this.remoteDescription.sdp);\n                const localDescription = new SDP(resultSdp.sdp);\n\n                _fixAnswerRFC4145Setup(remoteDescription, localDescription);\n\n                // eslint-disable-next-line no-param-reassign\n                resultSdp = new RTCSessionDescription({\n                    type: resultSdp.type,\n                    sdp: localDescription.raw\n                });\n            }\n\n            const ssrcMap = extractSSRCMap(resultSdp);\n\n            logger.debug('Got local SSRCs MAP: ', ssrcMap);\n            this._processLocalSSRCsMap(ssrcMap);\n\n            successCallback(resultSdp);\n        } catch (e) {\n            this.trace(`create${logName}OnError`, e);\n            this.trace(`create${logName}OnError`, dumpSDP(resultSdp));\n            logger.error(`create${logName}OnError`, e, dumpSDP(resultSdp));\n            failureCallback(e);\n        }\n    };\n\n    const _errorCallback = err => {\n        this.trace(`create${logName}OnFailure`, err);\n        const eventType\n            = isOffer\n                ? RTCEvents.CREATE_OFFER_FAILED\n                : RTCEvents.CREATE_ANSWER_FAILED;\n\n        this.eventEmitter.emit(eventType, err, this);\n        failureCallback(err);\n    };\n\n    // NOTE Temasys plugin does not support \"bind\" on peerconnection methods\n    if (isOffer) {\n        this.peerconnection.createOffer(\n            _successCallback, _errorCallback, constraints);\n    } else {\n        this.peerconnection.createAnswer(\n            _successCallback, _errorCallback, constraints);\n    }\n};\n\n/* eslint-enable max-params */\n\n/**\n * Extract primary SSRC from given {@link TrackSSRCInfo} object.\n * @param {TrackSSRCInfo} ssrcObj\n * @return {number|null} the primary SSRC or <tt>null</tt>\n */\nfunction extractPrimarySSRC(ssrcObj) {\n    if (ssrcObj && ssrcObj.groups && ssrcObj.groups.length) {\n        return ssrcObj.groups[0].ssrcs[0];\n    } else if (ssrcObj && ssrcObj.ssrcs && ssrcObj.ssrcs.length) {\n        return ssrcObj.ssrcs[0];\n    }\n\n    return null;\n}\n\n/**\n * Goes over the SSRC map extracted from the latest local description and tries\n * to match them with the local tracks (by MSID). Will update the values\n * currently stored in the {@link TraceablePeerConnection.localSSRCs} map.\n * @param {Map<string,TrackSSRCInfo>} ssrcMap\n * @private\n */\nTraceablePeerConnection.prototype._processLocalSSRCsMap = function(ssrcMap) {\n    for (const track of this.localTracks.values()) {\n        const trackMSID = track.getMSID();\n\n        if (ssrcMap.has(trackMSID)) {\n            const newSSRC = ssrcMap.get(trackMSID);\n\n            if (!newSSRC) {\n                logger.error(`No SSRC found for: ${trackMSID} in ${this}`);\n\n                return;\n            }\n            const oldSSRC = this.localSSRCs.get(track.rtcId);\n            const newSSRCNum = extractPrimarySSRC(newSSRC);\n            const oldSSRCNum = extractPrimarySSRC(oldSSRC);\n\n            // eslint-disable-next-line no-negated-condition\n            if (newSSRCNum !== oldSSRCNum) {\n                if (oldSSRCNum === null) {\n                    logger.info(\n                        `Storing new local SSRC for ${track} in ${this}`,\n                        newSSRC);\n                } else {\n                    logger.error(\n                        `Overwriting SSRC for ${track} ${trackMSID} in ${this\n                        } with: `, newSSRC);\n                }\n                this.localSSRCs.set(track.rtcId, newSSRC);\n\n                this.eventEmitter.emit(\n                    RTCEvents.LOCAL_TRACK_SSRC_UPDATED, track, newSSRCNum);\n            } else {\n                logger.debug(\n                    `The local SSRC(${newSSRCNum}) for ${track} ${trackMSID}`\n                     + `is still up to date in ${this}`);\n            }\n        } else {\n            logger.warn(`No local track matched with: ${trackMSID} in ${this}`);\n        }\n    }\n};\n\nTraceablePeerConnection.prototype.addIceCandidate = function(\n        candidate,\n        successCallback,\n        failureCallback) {\n    // var self = this;\n    this.trace('addIceCandidate', JSON.stringify(candidate, null, ' '));\n    this.peerconnection.addIceCandidate(\n        candidate, successCallback, failureCallback);\n\n    /* maybe later\n     this.peerconnection.addIceCandidate(candidate,\n     function () {\n     self.trace('addIceCandidateOnSuccess');\n     successCallback();\n     },\n     function (err) {\n     self.trace('addIceCandidateOnFailure', err);\n     failureCallback(err);\n     }\n     );\n     */\n};\n\n/**\n * Obtains call-related stats from the peer connection.\n *\n * @param {Function} callback - The function to invoke after successfully\n * obtaining stats.\n * @param {Function} errback - The function to invoke after failing to obtain\n * stats.\n * @returns {void}\n */\nTraceablePeerConnection.prototype.getStats = function(callback, errback) {\n    // TODO: Is this the correct way to handle Opera, Temasys?\n    // TODO (brian): After moving all browsers to adapter, check if adapter is\n    // accounting for different getStats apis, making the browser-checking-if\n    // unnecessary.\n    if (RTCBrowserType.isFirefox()\n            || RTCBrowserType.isTemasysPluginUsed()\n            || RTCBrowserType.isReactNative()) {\n        this.peerconnection.getStats(\n            null,\n            callback,\n            errback || (() => {\n\n                // Making sure that getStats won't fail if error callback is\n                // not passed.\n            }));\n    } else if (RTCBrowserType.isSafariWithWebrtc()) {\n        // FIXME: Safari's native stats implementation is not compatibile with\n        // existing stats processing logic. Skip implementing stats for now to\n        // at least get native webrtc Safari available for use.\n    } else {\n        this.peerconnection.getStats(callback);\n    }\n};\n\n/**\n * Generates and stores new SSRC info object for given local track.\n * The method should be called only for a video track being added to this TPC\n * in the muted state (given that the current browser uses this strategy).\n * @param {JitsiLocalTrack} track\n * @return {TPCSSRCInfo}\n */\nTraceablePeerConnection.prototype.generateNewStreamSSRCInfo = function(track) {\n    const rtcId = track.rtcId;\n    let ssrcInfo = this._getSSRC(rtcId);\n\n    if (ssrcInfo) {\n        logger.error(`Will overwrite local SSRCs for track ID: ${rtcId}`);\n    }\n    if (this.isSimulcastOn()) {\n        ssrcInfo = {\n            ssrcs: [],\n            groups: []\n        };\n        for (let i = 0; i < SIMULCAST_LAYERS; i++) {\n            ssrcInfo.ssrcs.push(SDPUtil.generateSsrc());\n        }\n        ssrcInfo.groups.push({\n            ssrcs: ssrcInfo.ssrcs.slice(),\n            semantics: 'SIM'\n        });\n    } else {\n        ssrcInfo = {\n            ssrcs: [ SDPUtil.generateSsrc() ],\n            groups: []\n        };\n    }\n    if (!this.options.disableRtx && RTCBrowserType.supportsRtx()) {\n        // Specifically use a for loop here because we'll\n        //  be adding to the list we're iterating over, so we\n        //  only want to iterate through the items originally\n        //  on the list\n        const currNumSsrcs = ssrcInfo.ssrcs.length;\n\n        for (let i = 0; i < currNumSsrcs; ++i) {\n            const primarySsrc = ssrcInfo.ssrcs[i];\n            const rtxSsrc = SDPUtil.generateSsrc();\n\n            ssrcInfo.ssrcs.push(rtxSsrc);\n            ssrcInfo.groups.push({\n                ssrcs: [ primarySsrc, rtxSsrc ],\n                semantics: 'FID'\n            });\n        }\n    }\n    ssrcInfo.msid = track.storedMSID;\n    this.localSSRCs.set(rtcId, ssrcInfo);\n\n    return ssrcInfo;\n};\n\n/**\n * Creates a text representation of this <tt>TraceablePeerConnection</tt>\n * instance.\n * @return {string}\n */\nTraceablePeerConnection.prototype.toString = function() {\n    return `TPC[${this.id},p2p:${this.isP2P}]`;\n};\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/TraceablePeerConnection.js","import { _TTFM_ } from '../../service/statistics/AnalyticsEvents';\nimport JitsiTrack from './JitsiTrack';\nimport * as JitsiTrackEvents from '../../JitsiTrackEvents';\nimport RTCBrowserType from './RTCBrowserType';\nimport Statistics from '../statistics/statistics';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\nconst RTCEvents = require('../../service/RTC/RTCEvents');\n\nlet ttfmTrackerAudioAttached = false;\nlet ttfmTrackerVideoAttached = false;\n\n/* eslint-disable max-params */\n\n/**\n * Represents a single media track (either audio or video).\n */\nexport default class JitsiRemoteTrack extends JitsiTrack {\n    /**\n     * Creates new JitsiRemoteTrack instance.\n     * @param {RTC} rtc the RTC service instance.\n     * @param {JitsiConference} conference the conference to which this track\n     *        belongs to\n     * @param {string} ownerEndpointId the endpoint ID of the track owner\n     * @param {MediaStream} stream WebRTC MediaStream, parent of the track\n     * @param {MediaStreamTrack} track underlying WebRTC MediaStreamTrack for\n     *        the new JitsiRemoteTrack\n     * @param {MediaType} mediaType the type of the media\n     * @param {VideoType} videoType the type of the video if applicable\n     * @param {number} ssrc the SSRC number of the Media Stream\n     * @param {boolean} muted the initial muted state\n     * @param {boolean} isP2P indicates whether or not this track belongs to a\n     * P2P session\n     * @throws {TypeError} if <tt>ssrc</tt> is not a number.\n     * @constructor\n     */\n    constructor(\n            rtc,\n            conference,\n            ownerEndpointId,\n            stream,\n            track,\n            mediaType,\n            videoType,\n            ssrc,\n            muted,\n            isP2P) {\n        super(\n            conference,\n            stream,\n            track,\n            () => {\n                // Nothing to do if the track is inactive.\n            },\n            mediaType,\n            videoType);\n        this.rtc = rtc;\n\n        // Prevent from mixing up type of SSRC which should be a number\n        if (typeof ssrc !== 'number') {\n            throw new TypeError(`SSRC ${ssrc} is not a number`);\n        }\n        this.ssrc = ssrc;\n        this.ownerEndpointId = ownerEndpointId;\n        this.muted = muted;\n        this.isP2P = isP2P;\n\n        // we want to mark whether the track has been ever muted\n        // to detect ttfm events for startmuted conferences, as it can\n        // significantly increase ttfm values\n        this.hasBeenMuted = muted;\n\n        // Bind 'onmute' and 'onunmute' event handlers\n        if (this.rtc && this.track) {\n            this._bindMuteHandlers();\n        }\n    }\n\n    /* eslint-enable max-params */\n    /**\n     * Attaches the track muted handlers.\n     *\n     * @returns {void}\n     */\n    _bindMuteHandlers() {\n        // Use feature detection for finding what event handling function is\n        // supported. On Internet Explorer, which uses uses temasys/firebreath,\n        // the track will have attachEvent instead of addEventListener.\n        //\n        // FIXME it would be better to use recently added '_setHandler' method,\n        // but:\n        // 1. It does not allow to set more than one handler to the event\n        // 2. It does mix MediaStream('inactive') with MediaStreamTrack events\n        // 3. Allowing to bind more than one event handler requires too much\n        //    refactoring around camera issues detection.\n        if (this.track.addEventListener) {\n            this.track.addEventListener('mute', () => this._onTrackMute());\n            this.track.addEventListener('unmute', () => this._onTrackUnmute());\n        } else if (this.track.attachEvent) {\n            // FIXME Internet Explorer is not emitting out mute/unmute events.\n            this.track.attachEvent('onmute', () => this._onTrackMute());\n            this.track.attachEvent('onunmute', () => this._onTrackUnmute());\n        }\n    }\n\n    /**\n     * Callback invoked when the track is muted. Emits an event notifying\n     * listeners of the mute event.\n     *\n     * @private\n     * @returns {void}\n     */\n    _onTrackMute() {\n        logger.debug(\n            `\"onmute\" event(${Date.now()}): `,\n            this.getParticipantId(), this.getType(), this.getSSRC());\n\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_MUTE, this);\n    }\n\n    /**\n     * Callback invoked when the track is unmuted. Emits an event notifying\n     * listeners of the mute event.\n     *\n     * @private\n     * @returns {void}\n     */\n    _onTrackUnmute() {\n        logger.debug(\n            `\"onunmute\" event(${Date.now()}): `,\n            this.getParticipantId(), this.getType(), this.getSSRC());\n\n        this.rtc.eventEmitter.emit(RTCEvents.REMOTE_TRACK_UNMUTE, this);\n    }\n\n    /**\n     * Sets current muted status and fires an events for the change.\n     * @param value the muted status.\n     */\n    setMute(value) {\n        if (this.muted === value) {\n            return;\n        }\n\n        if (value) {\n            this.hasBeenMuted = true;\n        }\n\n        // we can have a fake video stream\n        if (this.stream) {\n            this.stream.muted = value;\n        }\n\n        this.muted = value;\n        this.emit(JitsiTrackEvents.TRACK_MUTE_CHANGED, this);\n    }\n\n    /**\n     * Returns the current muted status of the track.\n     * @returns {boolean|*|JitsiRemoteTrack.muted} <tt>true</tt> if the track is\n     * muted and <tt>false</tt> otherwise.\n     */\n    isMuted() {\n        return this.muted;\n    }\n\n    /**\n     * Returns the participant id which owns the track.\n     *\n     * @returns {string} the id of the participants. It corresponds to the\n     * Colibri endpoint id/MUC nickname in case of Jitsi-meet.\n     */\n    getParticipantId() {\n        return this.ownerEndpointId;\n    }\n\n    /**\n     * Return false;\n     */\n    isLocal() {\n        return false;\n    }\n\n    /**\n     * Returns the synchronization source identifier (SSRC) of this remote\n     * track.\n     *\n     * @returns {number} the SSRC of this remote track.\n     */\n    getSSRC() {\n        return this.ssrc;\n    }\n\n    /**\n     * Changes the video type of the track.\n     *\n     * @param {string} type - The new video type(\"camera\", \"desktop\").\n     */\n    _setVideoType(type) {\n        if (this.videoType === type) {\n            return;\n        }\n        this.videoType = type;\n        this.emit(JitsiTrackEvents.TRACK_VIDEOTYPE_CHANGED, type);\n    }\n\n    /**\n     * Handles track play events.\n     */\n    _playCallback() {\n        const type = this.isVideoTrack() ? 'video' : 'audio';\n\n        const now = window.performance.now();\n\n        console.log(`(TIME) Render ${type}:\\t`, now);\n        this.conference.getConnectionTimes()[`${type}.render`] = now;\n\n        // The conference can be started without calling GUM\n        // FIXME if there would be a module for connection times this kind\n        // of logic (gumDuration or ttfm) should end up there\n        const gumStart = window.connectionTimes['obtainPermissions.start'];\n        const gumEnd = window.connectionTimes['obtainPermissions.end'];\n        const gumDuration\n            = !isNaN(gumEnd) && !isNaN(gumStart) ? gumEnd - gumStart : 0;\n\n        const ttfm = now\n            - (this.conference.getConnectionTimes()['session.initiate']\n            - this.conference.getConnectionTimes()['muc.joined'])\n            - gumDuration;\n\n        this.conference.getConnectionTimes()[`${type}.ttfm`] = ttfm;\n        console.log(`(TIME) TTFM ${type}:\\t`, ttfm);\n        let eventName = `${type}.${_TTFM_}`;\n\n        if (this.hasBeenMuted) {\n            eventName += '.muted';\n        }\n        Statistics.analytics.sendEvent(eventName, { value: ttfm });\n    }\n\n    /**\n     * Attach time to first media tracker only if there is conference and only\n     * for the first element.\n     * @param container the HTML container which can be 'video' or 'audio'\n     * element. It can also be 'object' element if Temasys plugin is in use and\n     * this method has been called previously on video or audio HTML element.\n     * @private\n     */\n    _attachTTFMTracker(container) {\n        if ((ttfmTrackerAudioAttached && this.isAudioTrack())\n            || (ttfmTrackerVideoAttached && this.isVideoTrack())) {\n            return;\n        }\n\n        if (this.isAudioTrack()) {\n            ttfmTrackerAudioAttached = true;\n        }\n        if (this.isVideoTrack()) {\n            ttfmTrackerVideoAttached = true;\n        }\n\n        if (RTCBrowserType.isTemasysPluginUsed()) {\n            // XXX Don't require Temasys unless it's to be used because it\n            // doesn't run on React Native, for example.\n            const AdapterJS = require('./adapter.screenshare');\n\n            // FIXME: this is not working for IE11\n            AdapterJS.addEvent(\n                container,\n                'play',\n                this._playCallback.bind(this));\n        } else {\n            container.addEventListener(\n                'canplay',\n                this._playCallback.bind(this));\n        }\n    }\n\n    /**\n     * Creates a text representation of this remote track instance.\n     * @return {string}\n     */\n    toString() {\n        return `RemoteTrack[${\n            this.ownerEndpointId}, ${\n            this.getType()}, p2p: ${\n            this.isP2P}]`;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/JitsiRemoteTrack.js","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport * as MediaType from '../../service/RTC/MediaType';\nimport { SdpTransformWrap } from '../xmpp/SdpTransformUtil';\n\nconst logger = getLogger(__filename);\n\n/**\n * Fakes local SDP exposed to {@link JingleSessionPC} through the local\n * description getter. Modifies the SDP, so that it will contain muted local\n * video tracks description, even though their underlying {MediaStreamTrack}s\n * are no longer in the WebRTC peerconnection. That prevents from SSRC updates\n * being sent to Jicofo/remote peer and prevents sRD/sLD cycle on the remote\n * side.\n */\nexport default class LocalSdpMunger {\n\n    /**\n     * Creates new <tt>LocalSdpMunger</tt> instance.\n     *\n     * @param {TraceablePeerConnection} tpc\n     */\n    constructor(tpc) {\n        this.tpc = tpc;\n    }\n\n    /**\n     * Makes sure that muted local video tracks associated with the parent\n     * {@link TraceablePeerConnection} are described in the local SDP. It's done\n     * in order to prevent from sending 'source-remove'/'source-add' Jingle\n     * notifications when local video track is muted (<tt>MediaStream</tt> is\n     * removed from the peerconnection).\n     *\n     * NOTE 1 video track is assumed\n     *\n     * @param {SdpTransformWrap} transformer the transformer instance which will\n     * be used to process the SDP.\n     * @return {boolean} <tt>true</tt> if there were any modifications to\n     * the SDP wrapped by <tt>transformer</tt>.\n     * @private\n     */\n    _addMutedLocalVideoTracksToSDP(transformer) {\n        // Go over each video tracks and check if the SDP has to be changed\n        const localVideos = this.tpc.getLocalTracks(MediaType.VIDEO);\n\n        if (!localVideos.length) {\n            return false;\n        } else if (localVideos.length !== 1) {\n            logger.error(\n                `${this.tpc} there is more than 1 video track ! `\n                    + 'Strange things may happen !', localVideos);\n        }\n\n        const videoMLine = transformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(\n                `${this.tpc} unable to hack local video track SDP`\n                    + '- no \"video\" media');\n\n            return false;\n        }\n\n        let modified = false;\n\n        for (const videoTrack of localVideos) {\n            const muted = videoTrack.isMuted();\n            const mediaStream = videoTrack.getOriginalStream();\n\n            // During the mute/unmute operation there are periods of time when\n            // the track's underlying MediaStream is not added yet to\n            // the PeerConnection. The SDP needs to be munged in such case.\n            const isInPeerConnection\n                = mediaStream && this.tpc.isMediaStreamInPc(mediaStream);\n            const shouldFakeSdp = muted || !isInPeerConnection;\n\n            logger.debug(\n                `${this.tpc} ${videoTrack} muted: ${\n                    muted}, is in PeerConnection: ${\n                    isInPeerConnection} => should fake sdp ? : ${\n                    shouldFakeSdp}`);\n\n            if (!shouldFakeSdp) {\n                continue; // eslint-disable-line no-continue\n            }\n\n            // Inject removed SSRCs\n            const requiredSSRCs\n                = this.tpc.isSimulcastOn()\n                    ? this.tpc.simulcast.ssrcCache\n                    : [ this.tpc.sdpConsistency.cachedPrimarySsrc ];\n\n            if (!requiredSSRCs.length) {\n                logger.error(\n                    `No SSRCs stored for: ${videoTrack} in ${this.tpc}`);\n\n                continue; // eslint-disable-line no-continue\n            }\n\n            modified = true;\n\n            // We need to fake sendrecv.\n            // NOTE the SDP produced here goes only to Jicofo and is never set\n            // as localDescription. That's why\n            // TraceablePeerConnection.mediaTransferActive is ignored here.\n            videoMLine.direction = 'sendrecv';\n\n            // Check if the recvonly has MSID\n            const primarySSRC = requiredSSRCs[0];\n\n            // FIXME The cname could come from the stream, but may turn out to\n            // be too complex. It is fine to come up with any value, as long as\n            // we only care about the actual SSRC values when deciding whether\n            // or not an update should be sent.\n            const primaryCname = `injected-${primarySSRC}`;\n\n            for (const ssrcNum of requiredSSRCs) {\n                // Remove old attributes\n                videoMLine.removeSSRC(ssrcNum);\n\n                // Inject\n                logger.debug(\n                    `${this.tpc} injecting video SSRC: ${ssrcNum} for ${\n                        videoTrack}`);\n                videoMLine.addSSRCAttribute({\n                    id: ssrcNum,\n                    attribute: 'cname',\n                    value: primaryCname\n                });\n                videoMLine.addSSRCAttribute({\n                    id: ssrcNum,\n                    attribute: 'msid',\n                    value: videoTrack.storedMSID\n                });\n            }\n            if (requiredSSRCs.length > 1) {\n                const group = {\n                    ssrcs: requiredSSRCs.join(' '),\n                    semantics: 'SIM'\n                };\n\n                if (!videoMLine.findGroup(group.semantics, group.ssrcs)) {\n                    // Inject the group\n                    logger.debug(\n                        `${this.tpc} injecting SIM group for ${videoTrack}`,\n                        group);\n                    videoMLine.addSSRCGroup(group);\n                }\n            }\n\n            // Insert RTX\n            // FIXME in P2P RTX is used by Chrome regardless of config option\n            // status. Because of that 'source-remove'/'source-add'\n            // notifications are still sent to remove/add RTX SSRC and FID group\n            if (!this.tpc.options.disableRtx) {\n                this.tpc.rtxModifier.modifyRtxSsrcs2(videoMLine);\n            }\n        }\n\n        return modified;\n    }\n\n    /**\n     * Maybe modifies local description to fake local video tracks SDP when\n     * those are muted.\n     *\n     * @param {object} desc the WebRTC SDP object instance for the local\n     * description.\n     * @returns {RTCSessionDescription}\n     */\n    maybeAddMutedLocalVideoTracksToSDP(desc) {\n        if (!desc) {\n            throw new Error('No local description passed in.');\n        }\n\n        const transformer = new SdpTransformWrap(desc.sdp);\n\n        if (this._addMutedLocalVideoTracksToSDP(transformer)) {\n            return new RTCSessionDescription({\n                type: desc.type,\n                sdp: transformer.toRawSDP()\n            });\n        }\n\n        return desc;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/LocalSdpMunger.js","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport { parseSecondarySSRC, SdpTransformWrap } from './SdpTransformUtil';\nimport SDPUtil from './SDPUtil';\n\nconst logger = getLogger(__filename);\n\n/**\n * Begin helper functions\n */\n/**\n * Updates or inserts the appropriate rtx information for primarySsrc with\n *  the given rtxSsrc.  If no rtx ssrc for primarySsrc currently exists, it will\n *  add the appropriate ssrc and ssrc group lines.  If primarySsrc already has\n *  an rtx ssrc, the appropriate ssrc and group lines will be updated\n * @param {MLineWrap} mLine\n * @param {object} primarySsrcInfo the info (ssrc, msid & cname) for the\n *  primary ssrc\n * @param {number} rtxSsrc the rtx ssrc to associate with the primary ssrc\n */\nfunction updateAssociatedRtxStream(mLine, primarySsrcInfo, rtxSsrc) {\n    logger.debug(\n        `Updating mline to associate ${rtxSsrc}`\n        + `rtx ssrc with primary stream, ${primarySsrcInfo.id}`);\n    const primarySsrc = primarySsrcInfo.id;\n    const primarySsrcMsid = primarySsrcInfo.msid;\n    const primarySsrcCname = primarySsrcInfo.cname;\n\n    const previousRtxSSRC = mLine.getRtxSSRC(primarySsrc);\n\n    if (previousRtxSSRC === rtxSsrc) {\n        logger.debug(`${rtxSsrc} was already associated with ${primarySsrc}`);\n\n        return;\n    }\n    if (previousRtxSSRC) {\n        logger.debug(\n            `${primarySsrc} was previously associated with rtx`\n            + `${previousRtxSSRC}, removing all references to it`);\n\n        // Stream already had an rtx ssrc that is different than the one given,\n        //  remove all trace of the old one\n        mLine.removeSSRC(previousRtxSSRC);\n\n        logger.debug(`groups before filtering for ${previousRtxSSRC}`);\n        logger.debug(mLine.dumpSSRCGroups());\n\n        mLine.removeGroupsWithSSRC(previousRtxSSRC);\n    }\n    mLine.addSSRCAttribute({\n        id: rtxSsrc,\n        attribute: 'cname',\n        value: primarySsrcCname\n    });\n    mLine.addSSRCAttribute({\n        id: rtxSsrc,\n        attribute: 'msid',\n        value: primarySsrcMsid\n    });\n    mLine.addSSRCGroup({\n        semantics: 'FID',\n        ssrcs: `${primarySsrc} ${rtxSsrc}`\n    });\n}\n\n/**\n * End helper functions\n */\n\n/**\n * Adds any missing RTX streams for video streams\n *  and makes sure that they remain consistent\n */\nexport default class RtxModifier {\n    /**\n     * Constructor\n     */\n    constructor() {\n        /**\n         * Map of video ssrc to corresponding RTX\n         *  ssrc\n         */\n        this.correspondingRtxSsrcs = new Map();\n    }\n\n    /**\n     * Clear the cached map of primary video ssrcs to\n     *  their corresponding rtx ssrcs so that they will\n     *  not be used for the next call to modifyRtxSsrcs\n     */\n    clearSsrcCache() {\n        this.correspondingRtxSsrcs.clear();\n    }\n\n    /**\n     * Explicitly set the primary video ssrc -> rtx ssrc\n     *  mapping to be used in modifyRtxSsrcs\n     * @param {Map} ssrcMapping a mapping of primary video\n     *  ssrcs to their corresponding rtx ssrcs\n     */\n    setSsrcCache(ssrcMapping) {\n        logger.debug('Setting ssrc cache to ', ssrcMapping);\n        this.correspondingRtxSsrcs = ssrcMapping;\n    }\n\n    /**\n     * Adds RTX ssrcs for any video ssrcs that don't\n     *  already have them.  If the video ssrc has been\n     *  seen before, and already had an RTX ssrc generated,\n     *  the same RTX ssrc will be used again.\n     * @param {string} sdpStr sdp in raw string format\n     */\n    modifyRtxSsrcs(sdpStr) {\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\n        const videoMLine = sdpTransformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\n\n            return sdpStr;\n        }\n\n        return this.modifyRtxSsrcs2(videoMLine)\n            ? sdpTransformer.toRawSDP() : sdpStr;\n    }\n\n    /**\n     * Does the same thing as {@link modifyRtxSsrcs}, but takes the\n     *  {@link MLineWrap} instance wrapping video media as an argument.\n     * @param {MLineWrap} videoMLine\n     * @return {boolean} <tt>true</tt> if the SDP wrapped by\n     *  {@link SdpTransformWrap} has been modified or <tt>false</tt> otherwise.\n     */\n    modifyRtxSsrcs2(videoMLine) {\n        if (videoMLine.direction === 'recvonly') {\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\n\n            return false;\n        }\n        if (videoMLine.getSSRCCount() < 1) {\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\n\n            return false;\n        }\n        logger.debug('Current ssrc mapping: ', this.correspondingRtxSsrcs);\n        const primaryVideoSsrcs = videoMLine.getPrimaryVideoSSRCs();\n\n        logger.debug('Parsed primary video ssrcs ', primaryVideoSsrcs,\n            ' making sure all have rtx streams');\n        for (const ssrc of primaryVideoSsrcs) {\n            const msid = videoMLine.getSSRCAttrValue(ssrc, 'msid');\n            const cname = videoMLine.getSSRCAttrValue(ssrc, 'cname');\n            let correspondingRtxSsrc = this.correspondingRtxSsrcs.get(ssrc);\n\n            if (correspondingRtxSsrc) {\n                logger.debug(\n                    'Already have an associated rtx ssrc for'\n                    + `video ssrc ${ssrc}: ${correspondingRtxSsrc}`);\n            } else {\n                logger.debug(\n                    `No previously associated rtx ssrc for video ssrc ${ssrc}`);\n\n                // If there's one in the sdp already for it, we'll just set\n                //  that as the corresponding one\n                const previousAssociatedRtxStream = videoMLine.getRtxSSRC(ssrc);\n\n                if (previousAssociatedRtxStream) {\n                    logger.debug(\n                        `Rtx stream ${previousAssociatedRtxStream} `\n                        + 'already existed in the sdp as an rtx stream for '\n                        + `${ssrc}`);\n                    correspondingRtxSsrc = previousAssociatedRtxStream;\n                } else {\n                    correspondingRtxSsrc = SDPUtil.generateSsrc();\n                    logger.debug(`Generated rtx ssrc ${correspondingRtxSsrc} `\n                                 + `for ssrc ${ssrc}`);\n                }\n                logger.debug(`Caching rtx ssrc ${correspondingRtxSsrc} `\n                             + `for video ssrc ${ssrc}`);\n                this.correspondingRtxSsrcs.set(ssrc, correspondingRtxSsrc);\n            }\n            updateAssociatedRtxStream(\n                videoMLine,\n                {\n                    id: ssrc,\n                    cname,\n                    msid\n                },\n                correspondingRtxSsrc);\n        }\n\n        // FIXME we're not looking into much details whether the SDP has been\n        // modified or not once the precondition requirements are met.\n        return true;\n    }\n\n    /**\n     * Strip all rtx streams from the given sdp\n     * @param {string} sdpStr sdp in raw string format\n     * @returns {string} sdp string with all rtx streams stripped\n     */\n    stripRtx(sdpStr) {\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\n        const videoMLine = sdpTransformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(`No 'video' media found in the sdp: ${sdpStr}`);\n\n            return sdpStr;\n        }\n        if (videoMLine.direction === 'recvonly') {\n            logger.debug('RtxModifier doing nothing, video m line is recvonly');\n\n            return sdpStr;\n        }\n        if (videoMLine.getSSRCCount() < 1) {\n            logger.debug('RtxModifier doing nothing, no video ssrcs present');\n\n            return sdpStr;\n        }\n        if (!videoMLine.containsAnySSRCGroups()) {\n            logger.debug('RtxModifier doing nothing, '\n              + 'no video ssrcGroups present');\n\n            return sdpStr;\n        }\n        const fidGroups = videoMLine.findGroups('FID');\n\n        // Remove the fid groups from the mline\n\n        videoMLine.removeGroupsBySemantics('FID');\n\n        // Get the rtx ssrcs and remove them from the mline\n        for (const fidGroup of fidGroups) {\n            const rtxSsrc = parseSecondarySSRC(fidGroup);\n\n            videoMLine.removeSSRC(rtxSsrc);\n        }\n\n        return sdpTransformer.toRawSDP();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/RtxModifier.js","/* global __filename */\n\nimport { getLogger } from 'jitsi-meet-logger';\nimport {\n    parsePrimarySSRC,\n    parseSecondarySSRC,\n    SdpTransformWrap\n} from './SdpTransformUtil';\n\nconst logger = getLogger(__filename);\n\n/**\n * Handles the work of keeping video ssrcs consistent across multiple\n * o/a cycles, making it such that all stream operations can be\n * kept local and do not need to be signaled.\n * NOTE: This only keeps the 'primary' video ssrc consistent: meaning\n * the primary video stream\n */\nexport default class SdpConsistency {\n    /**\n     * Constructor\n     * @param {string} logPrefix the log prefix appended to every logged\n     * message, currently used to distinguish for which\n     * <tt>TraceablePeerConnection</tt> the instance works.\n     */\n    constructor(logPrefix) {\n        this.clearVideoSsrcCache();\n        this.logPrefix = logPrefix;\n    }\n\n    /**\n     * Clear the cached video primary and primary rtx ssrcs so that\n     *  they will not be used for the next call to\n     *  makeVideoPrimarySsrcsConsistent\n     */\n    clearVideoSsrcCache() {\n        this.cachedPrimarySsrc = null;\n        this.injectRecvOnly = false;\n    }\n\n    /**\n     * Explicitly set the primary ssrc to be used in\n     *  makeVideoPrimarySsrcsConsistent\n     * @param {number} primarySsrc the primarySsrc to be used\n     *  in future calls to makeVideoPrimarySsrcsConsistent\n     * @throws Error if <tt>primarySsrc</tt> is not a number\n     */\n    setPrimarySsrc(primarySsrc) {\n        if (typeof primarySsrc !== 'number') {\n            throw new Error('Primary SSRC must be a number!');\n        }\n        this.cachedPrimarySsrc = primarySsrc;\n    }\n\n    /**\n     * Checks whether or not there is a primary video SSRC cached already.\n     * @return {boolean}\n     */\n    hasPrimarySsrcCached() {\n        return Boolean(this.cachedPrimarySsrc);\n    }\n\n    /**\n     * Given an sdp string, either:\n     *  1) record the primary video and primary rtx ssrcs to be\n     *   used in future calls to makeVideoPrimarySsrcsConsistent or\n     *  2) change the primary and primary rtx ssrcs in the given sdp\n     *   to match the ones previously cached\n     * @param {string} sdpStr the sdp string to (potentially)\n     *  change to make the video ssrcs consistent\n     * @returns {string} a (potentially) modified sdp string\n     *  with ssrcs consistent with this class' cache\n     */\n    makeVideoPrimarySsrcsConsistent(sdpStr) {\n        const sdpTransformer = new SdpTransformWrap(sdpStr);\n        const videoMLine = sdpTransformer.selectMedia('video');\n\n        if (!videoMLine) {\n            logger.debug(\n                `${this.logPrefix} no 'video' media found in the sdp: `\n                    + `${sdpStr}`);\n\n            return sdpStr;\n        }\n\n        if (videoMLine.direction === 'recvonly') {\n            // If the mline is recvonly, we'll add the primary\n            //  ssrc as a recvonly ssrc\n            if (this.cachedPrimarySsrc && this.injectRecvOnly) {\n                videoMLine.addSSRCAttribute({\n                    id: this.cachedPrimarySsrc,\n                    attribute: 'cname',\n                    value: `recvonly-${this.cachedPrimarySsrc}`\n                });\n            } else {\n                logger.info(\n                    `${this.logPrefix} no SSRC found for the recvonly video`\n                        + 'stream!');\n            }\n        } else {\n            const newPrimarySsrc = videoMLine.getPrimaryVideoSsrc();\n\n            if (!newPrimarySsrc) {\n                logger.info(\n                    `${this.logPrefix} sdp-consistency couldn't`\n                        + ' parse new primary ssrc');\n\n                return sdpStr;\n            }\n            if (this.cachedPrimarySsrc) {\n                logger.info(\n                    `${this.logPrefix} sdp-consistency replacing new ssrc`\n                        + `${newPrimarySsrc} with cached `\n                        + `${this.cachedPrimarySsrc}`);\n                videoMLine.replaceSSRC(newPrimarySsrc, this.cachedPrimarySsrc);\n                for (const group of videoMLine.ssrcGroups) {\n                    if (group.semantics === 'FID') {\n                        const primarySsrc = parsePrimarySSRC(group);\n                        const rtxSsrc = parseSecondarySSRC(group);\n\n                        // eslint-disable-next-line max-depth\n                        if (primarySsrc === newPrimarySsrc) {\n                            group.ssrcs\n                                = `${this.cachedPrimarySsrc} ${rtxSsrc}`;\n                        }\n                    }\n                }\n            } else {\n                this.cachedPrimarySsrc = newPrimarySsrc;\n                logger.info(\n                    `${this.logPrefix} sdp-consistency caching primary ssrc`\n                        + `${this.cachedPrimarySsrc}`);\n            }\n\n            this.injectRecvOnly = true;\n        }\n\n        return sdpTransformer.toRawSDP();\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/xmpp/SdpConsistency.js","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nexports.Interop = require('./interop');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp-interop/lib/index.js\n// module id = 147\n// module chunks = 0","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/* global RTCSessionDescription */\n/* global RTCIceCandidate */\n/* jshint -W097 */\n\"use strict\";\n\nvar transform = require('./transform');\nvar arrayEquals = require('./array-equals');\n\nfunction Interop() {\n\n    /**\n     * This map holds the most recent Unified Plan offer/answer SDP that was\n     * converted to Plan B, with the SDP type ('offer' or 'answer') as keys and\n     * the SDP string as values.\n     *\n     * @type {{}}\n     */\n    this.cache = {\n        mlB2UMap : {},\n        mlU2BMap : {}\n    };\n}\n\nmodule.exports = Interop;\n\n/**\n * Changes the candidate args to match with the related Unified Plan\n */\nInterop.prototype.candidateToUnifiedPlan = function(candidate) {\n    var cand = new RTCIceCandidate(candidate);\n\n    cand.sdpMLineIndex = this.cache.mlB2UMap[cand.sdpMLineIndex];\n    /* TODO: change sdpMid to (audio|video)-SSRC */\n\n    return cand;\n};\n\n/**\n * Changes the candidate args to match with the related Plan B\n */\nInterop.prototype.candidateToPlanB = function(candidate) {\n    var cand = new RTCIceCandidate(candidate);\n\n    if (cand.sdpMid.indexOf('audio') === 0) {\n      cand.sdpMid = 'audio';\n    } else if (cand.sdpMid.indexOf('video') === 0) {\n      cand.sdpMid = 'video';\n    } else {\n      throw new Error('candidate with ' + cand.sdpMid + ' not allowed');\n    }\n\n    cand.sdpMLineIndex = this.cache.mlU2BMap[cand.sdpMLineIndex];\n\n    return cand;\n};\n\n/**\n * Returns the index of the first m-line with the given media type and with a\n * direction which allows sending, in the last Unified Plan description with\n * type \"answer\" converted to Plan B. Returns {null} if there is no saved\n * answer, or if none of its m-lines with the given type allow sending.\n * @param type the media type (\"audio\" or \"video\").\n * @returns {*}\n */\nInterop.prototype.getFirstSendingIndexFromAnswer = function(type) {\n    if (!this.cache.answer) {\n        return null;\n    }\n\n    var session = transform.parse(this.cache.answer);\n    if (session && session.media && Array.isArray(session.media)){\n        for (var i = 0; i < session.media.length; i++) {\n            if (session.media[i].type == type &&\n                (!session.media[i].direction /* default to sendrecv */ ||\n                    session.media[i].direction === 'sendrecv' ||\n                    session.media[i].direction === 'sendonly')){\n                return i;\n            }\n        }\n    }\n\n    return null;\n};\n\n/**\n * This method transforms a Unified Plan SDP to an equivalent Plan B SDP. A\n * PeerConnection wrapper transforms the SDP to Plan B before passing it to the\n * application.\n *\n * @param desc\n * @returns {*}\n */\nInterop.prototype.toPlanB = function(desc) {\n    var self = this;\n    //#region Preliminary input validation.\n\n    if (typeof desc !== 'object' || desc === null ||\n        typeof desc.sdp !== 'string') {\n        console.warn('An empty description was passed as an argument.');\n        return desc;\n    }\n\n    // Objectify the SDP for easier manipulation.\n    var session = transform.parse(desc.sdp);\n\n    // If the SDP contains no media, there's nothing to transform.\n    if (typeof session.media === 'undefined' ||\n        !Array.isArray(session.media) || session.media.length === 0) {\n        console.warn('The description has no media.');\n        return desc;\n    }\n\n    // Try some heuristics to \"make sure\" this is a Unified Plan SDP. Plan B\n    // SDP has a video, an audio and a data \"channel\" at most.\n    if (session.media.length <= 3 && session.media.every(function(m) {\n            return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\n        })) {\n        console.warn('This description does not look like Unified Plan.');\n        return desc;\n    }\n\n    //#endregion\n\n    // HACK https://bugzilla.mozilla.org/show_bug.cgi?id=1113443\n    var sdp = desc.sdp;\n    var rewrite = false;\n    for (var i = 0; i < session.media.length; i++) {\n        var uLine = session.media[i];\n        uLine.rtp.forEach(function(rtp) {\n            if (rtp.codec === 'NULL')\n            {\n                rewrite = true;\n                var offer = transform.parse(self.cache.offer);\n                rtp.codec = offer.media[i].rtp[0].codec;\n            }\n        });\n    }\n    if (rewrite) {\n        sdp = transform.write(session);\n    }\n\n    // Unified Plan SDP is our \"precious\". Cache it for later use in the Plan B\n    // -> Unified Plan transformation.\n    this.cache[desc.type] = sdp;\n\n    //#region Convert from Unified Plan to Plan B.\n\n    // We rebuild the session.media array.\n    var media = session.media;\n    session.media = [];\n\n    // Associative array that maps channel types to channel objects for fast\n    // access to channel objects by their type, e.g. type2bl['audio']->channel\n    // obj.\n    var type2bl = {};\n\n    // Used to build the group:BUNDLE value after the channels construction\n    // loop.\n    var types = [];\n\n    media.forEach(function(uLine) {\n        // rtcp-mux is required in the Plan B SDP.\n        if ((typeof uLine.rtcpMux !== 'string' ||\n            uLine.rtcpMux !== 'rtcp-mux') &&\n            uLine.direction !== 'inactive') {\n            throw new Error('Cannot convert to Plan B because m-lines ' +\n                'without the rtcp-mux attribute were found.');\n        }\n\n        // If we don't have a channel for this uLine.type OR the selected is\n        // inactive, then select this uLine as the channel basis.\n        if (typeof type2bl[uLine.type] === 'undefined' ||\n            type2bl[uLine.type].direction === 'inactive') {\n            type2bl[uLine.type] = uLine;\n        }\n    });\n\n    // Implode the Unified Plan m-lines/tracks into Plan B channels.\n    media.forEach(function(uLine) {\n        if (uLine.type === 'application') {\n            session.media.push(uLine);\n            types.push(uLine.mid);\n            return;\n        }\n\n        // Add sources to the channel and handle a=msid.\n        if (typeof uLine.sources === 'object') {\n            Object.keys(uLine.sources).forEach(function(ssrc) {\n                if (typeof type2bl[uLine.type].sources !== 'object')\n                    type2bl[uLine.type].sources = {};\n\n                // Assign the sources to the channel.\n                type2bl[uLine.type].sources[ssrc] =\n                    uLine.sources[ssrc];\n\n                if (typeof uLine.msid !== 'undefined') {\n                    // In Plan B the msid is an SSRC attribute. Also, we don't\n                    // care about the obsolete label and mslabel attributes.\n                    //\n                    // Note that it is not guaranteed that the uLine will\n                    // have an msid. recvonly channels in particular don't have\n                    // one.\n                    type2bl[uLine.type].sources[ssrc].msid =\n                        uLine.msid;\n                }\n                // NOTE ssrcs in ssrc groups will share msids, as\n                // draft-uberti-rtcweb-plan-00 mandates.\n            });\n        }\n\n        // Add ssrc groups to the channel.\n        if (typeof uLine.ssrcGroups !== 'undefined' &&\n                Array.isArray(uLine.ssrcGroups)) {\n\n            // Create the ssrcGroups array, if it's not defined.\n            if (typeof type2bl[uLine.type].ssrcGroups === 'undefined' ||\n                    !Array.isArray(type2bl[uLine.type].ssrcGroups)) {\n                type2bl[uLine.type].ssrcGroups = [];\n            }\n\n            type2bl[uLine.type].ssrcGroups =\n                type2bl[uLine.type].ssrcGroups.concat(\n                    uLine.ssrcGroups);\n        }\n\n        if (type2bl[uLine.type] === uLine) {\n            // Plan B mids are in ['audio', 'video', 'data']\n            uLine.mid = uLine.type;\n\n            // Plan B doesn't support/need the bundle-only attribute.\n            delete uLine.bundleOnly;\n\n            // In Plan B the msid is an SSRC attribute.\n            delete uLine.msid;\n\n            if (uLine.direction !== 'inactive') {\n              // Used to build the group:BUNDLE value after this loop.\n              types.push(uLine.type);\n            }\n\n            // Add the channel to the new media array.\n            session.media.push(uLine);\n        }\n    });\n\n    // We regenerate the BUNDLE group with the new mids.\n    session.groups.some(function(group) {\n        if (group.type === 'BUNDLE') {\n            group.mids = types.join(' ');\n            return true;\n        }\n    });\n\n    // msid semantic\n    session.msidSemantic = {\n        semantic: 'WMS',\n        token: '*'\n    };\n\n    var resStr = transform.write(session);\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: resStr\n    });\n\n    //#endregion\n};\n\n/**\n * This method transforms a Plan B SDP to an equivalent Unified Plan SDP. A\n * PeerConnection wrapper transforms the SDP to Unified Plan before passing it\n * to FF.\n *\n * @param desc\n * @returns {*}\n */\nInterop.prototype.toUnifiedPlan = function(desc) {\n    var self = this;\n    //#region Preliminary input validation.\n\n    if (typeof desc !== 'object' || desc === null ||\n        typeof desc.sdp !== 'string') {\n        console.warn('An empty description was passed as an argument.');\n        return desc;\n    }\n\n    var session = transform.parse(desc.sdp);\n\n    // If the SDP contains no media, there's nothing to transform.\n    if (typeof session.media === 'undefined' ||\n        !Array.isArray(session.media) || session.media.length === 0) {\n        console.warn('The description has no media.');\n        return desc;\n    }\n\n    // Try some heuristics to \"make sure\" this is a Plan B SDP. Plan B SDP has\n    // a video, an audio and a data \"channel\" at most.\n    if (session.media.length > 3 || !session.media.every(function(m) {\n            return ['video', 'audio', 'data'].indexOf(m.mid) !== -1;\n        })) {\n        console.warn('This description does not look like Plan B.');\n        return desc;\n    }\n\n    // Make sure this Plan B SDP can be converted to a Unified Plan SDP.\n    var mids = [];\n    session.media.forEach(function(m) {\n        mids.push(m.mid);\n    });\n\n    var hasBundle = false;\n    if (typeof session.groups !== 'undefined' &&\n        Array.isArray(session.groups)) {\n        hasBundle = session.groups.every(function(g) {\n            return g.type !== 'BUNDLE' ||\n                arrayEquals.apply(g.mids.sort(), [mids.sort()]);\n        });\n    }\n\n    if (!hasBundle) {\n        throw new Error(\"Cannot convert to Unified Plan because m-lines that\" +\n            \" are not bundled were found.\");\n    }\n\n    //#endregion\n\n\n    //#region Convert from Plan B to Unified Plan.\n\n    // Unfortunately, a Plan B offer/answer doesn't have enough information to\n    // rebuild an equivalent Unified Plan offer/answer.\n    //\n    // For example, if this is a local answer (in Unified Plan style) that we\n    // convert to Plan B prior to handing it over to the application (the\n    // PeerConnection wrapper called us, for instance, after a successful\n    // createAnswer), we want to remember the m-line at which we've seen the\n    // (local) SSRC. That's because when the application wants to do call the\n    // SLD method, forcing us to do the inverse transformation (from Plan B to\n    // Unified Plan), we need to know to which m-line to assign the (local)\n    // SSRC. We also need to know all the other m-lines that the original\n    // answer had and include them in the transformed answer as well.\n    //\n    // Another example is if this is a remote offer that we convert to Plan B\n    // prior to giving it to the application, we want to remember the mid at\n    // which we've seen the (remote) SSRC.\n    //\n    // In the iteration that follows, we use the cached Unified Plan (if it\n    // exists) to assign mids to ssrcs.\n\n    var cached;\n    if (typeof this.cache[desc.type] !== 'undefined') {\n        cached = transform.parse(this.cache[desc.type]);\n    }\n\n    var recvonlySsrcs = {\n        audio: {},\n        video: {}\n    };\n\n    // A helper map that sends mids to m-line objects. We use it later to\n    // rebuild the Unified Plan style session.media array.\n    var mid2ul = {};\n    var bIdx = 0;\n    var uIdx = 0;\n\n    session.media.forEach(function(bLine) {\n        if ((typeof bLine.rtcpMux !== 'string' ||\n            bLine.rtcpMux !== 'rtcp-mux') &&\n            bLine.direction !== 'inactive') {\n            throw new Error(\"Cannot convert to Unified Plan because m-lines \" +\n                \"without the rtcp-mux attribute were found.\");\n        }\n\n        if (bLine.type === 'application') {\n            mid2ul[bLine.mid] = bLine;\n            return;\n        }\n\n        // With rtcp-mux and bundle all the channels should have the same ICE\n        // stuff.\n        var sources = bLine.sources;\n        var ssrcGroups = bLine.ssrcGroups;\n        var candidates = bLine.candidates;\n        var iceUfrag = bLine.iceUfrag;\n        var icePwd = bLine.icePwd;\n        var fingerprint = bLine.fingerprint;\n        var port = bLine.port;\n\n        // We'll use the \"bLine\" object as a prototype for each new \"mLine\"\n        // that we create, but first we need to clean it up a bit.\n        delete bLine.sources;\n        delete bLine.ssrcGroups;\n        delete bLine.candidates;\n        delete bLine.iceUfrag;\n        delete bLine.icePwd;\n        delete bLine.fingerprint;\n        delete bLine.port;\n        delete bLine.mid;\n\n        // inverted ssrc group map\n        var ssrc2group = {};\n        if (typeof ssrcGroups !== 'undefined' && Array.isArray(ssrcGroups)) {\n            ssrcGroups.forEach(function (ssrcGroup) {\n\n                // TODO(gp) find out how to receive simulcast with FF. For the\n                // time being, hide it.\n                if (ssrcGroup.semantics === 'SIM') {\n                    return;\n                }\n\n                // XXX This might brake if an SSRC is in more than one group\n                // for some reason.\n                if (typeof ssrcGroup.ssrcs !== 'undefined' &&\n                    Array.isArray(ssrcGroup.ssrcs)) {\n                    ssrcGroup.ssrcs.forEach(function (ssrc) {\n                        if (typeof ssrc2group[ssrc] === 'undefined') {\n                            ssrc2group[ssrc] = [];\n                        }\n\n                        ssrc2group[ssrc].push(ssrcGroup);\n                    });\n                }\n            });\n        }\n\n        // ssrc to m-line index.\n        var ssrc2ml = {};\n\n        if (typeof sources === 'object') {\n\n            // Explode the Plan B channel sources with one m-line per source.\n            Object.keys(sources).forEach(function(ssrc) {\n\n                // The (unified) m-line for this SSRC. We either create it from\n                // scratch or, if it's a grouped SSRC, we re-use a related\n                // mline. In other words, if the source is grouped with another\n                // source, put the two together in the same m-line.\n                var uLine;\n\n                // We assume here that we are the answerer in the O/A, so any\n                // offers which we translate come from the remote side, while\n                // answers are local. So the check below is to make that we\n                // handle receive-only SSRCs in a special way only if they come\n                // from the remote side.\n                if (desc.type==='offer') {\n                    // We want to detect SSRCs which are used by a remote peer\n                    // in an m-line with direction=recvonly (i.e. they are\n                    // being used for RTCP only).\n                    // This information would have gotten lost if the remote\n                    // peer used Unified Plan and their local description was\n                    // translated to Plan B. So we use the lack of an MSID\n                    // attribute to deduce a \"receive only\" SSRC.\n                    if (!sources[ssrc].msid) {\n                        recvonlySsrcs[bLine.type][ssrc] = sources[ssrc];\n                        // Receive-only SSRCs must not create new m-lines. We\n                        // will assign them to an existing m-line later.\n                        return;\n                    }\n                }\n\n                if (typeof ssrc2group[ssrc] !== 'undefined' &&\n                    Array.isArray(ssrc2group[ssrc])) {\n                    ssrc2group[ssrc].some(function (ssrcGroup) {\n                        // ssrcGroup.ssrcs *is* an Array, no need to check\n                        // again here.\n                        return ssrcGroup.ssrcs.some(function (related) {\n                            if (typeof ssrc2ml[related] === 'object') {\n                                uLine = ssrc2ml[related];\n                                return true;\n                            }\n                        });\n                    });\n                }\n\n                if (typeof uLine === 'object') {\n                    // the m-line already exists. Just add the source.\n                    uLine.sources[ssrc] = sources[ssrc];\n                    delete sources[ssrc].msid;\n                } else {\n                    // Use the \"bLine\" as a prototype for the \"uLine\".\n                    uLine = Object.create(bLine);\n                    ssrc2ml[ssrc] = uLine;\n\n                    if (typeof sources[ssrc].msid !== 'undefined') {\n                        // Assign the msid of the source to the m-line. Note\n                        // that it is not guaranteed that the source will have\n                        // msid. In particular \"recvonly\" sources don't have an\n                        // msid. Note that \"recvonly\" is a term only defined\n                        // for m-lines.\n                        uLine.msid = sources[ssrc].msid;\n                        delete sources[ssrc].msid;\n                    }\n\n                    // We assign one SSRC per media line.\n                    uLine.sources = {};\n                    uLine.sources[ssrc] = sources[ssrc];\n                    uLine.ssrcGroups = ssrc2group[ssrc];\n\n                    // Use the cached Unified Plan SDP (if it exists) to assign\n                    // SSRCs to mids.\n                    if (typeof cached !== 'undefined' &&\n                        typeof cached.media !== 'undefined' &&\n                        Array.isArray(cached.media)) {\n\n                        cached.media.forEach(function (m) {\n                            if (typeof m.sources === 'object') {\n                                Object.keys(m.sources).forEach(function (s) {\n                                    if (s === ssrc) {\n                                        uLine.mid = m.mid;\n                                    }\n                                });\n                            }\n                        });\n                    }\n\n                    if (typeof uLine.mid === 'undefined') {\n\n                        // If this is an SSRC that we see for the first time\n                        // assign it a new mid. This is typically the case when\n                        // this method is called to transform a remote\n                        // description for the first time or when there is a\n                        // new SSRC in the remote description because a new\n                        // peer has joined the conference. Local SSRCs should\n                        // have already been added to the map in the toPlanB\n                        // method.\n                        //\n                        // Because FF generates answers in Unified Plan style,\n                        // we MUST already have a cached answer with all the\n                        // local SSRCs mapped to some m-line/mid.\n\n                        if (desc.type === 'answer') {\n                            throw new Error(\"An unmapped SSRC was found.\");\n                        }\n\n                        uLine.mid = [bLine.type, '-', ssrc].join('');\n                    }\n\n                    // Include the candidates in the 1st media line.\n                    uLine.candidates = candidates;\n                    uLine.iceUfrag = iceUfrag;\n                    uLine.icePwd = icePwd;\n                    uLine.fingerprint = fingerprint;\n                    uLine.port = port;\n\n                    mid2ul[uLine.mid] = uLine;\n\n                    self.cache.mlU2BMap[uIdx] = bIdx;\n                    if (typeof self.cache.mlB2UMap[bIdx] === 'undefined') {\n                      self.cache.mlB2UMap[bIdx] = uIdx;\n                    }\n                    uIdx++;\n                }\n            });\n        }\n\n        bIdx++;\n    });\n\n    // Rebuild the media array in the right order and add the missing mLines\n    // (missing from the Plan B SDP).\n    session.media = [];\n    mids = []; // reuse\n\n    if (desc.type === 'answer') {\n\n        // The media lines in the answer must match the media lines in the\n        // offer. The order is important too. Here we assume that Firefox is\n        // the answerer, so we merely have to use the reconstructed (unified)\n        // answer to update the cached (unified) answer accordingly.\n        //\n        // In the general case, one would have to use the cached (unified)\n        // offer to find the m-lines that are missing from the reconstructed\n        // answer, potentially grabbing them from the cached (unified) answer.\n        // One has to be careful with this approach because inactive m-lines do\n        // not always have an mid, making it tricky (impossible?) to find where\n        // exactly and which m-lines are missing from the reconstructed answer.\n\n        for (var i = 0; i < cached.media.length; i++) {\n            var uLine = cached.media[i];\n\n            if (typeof mid2ul[uLine.mid] === 'undefined') {\n\n                // The mid isn't in the reconstructed (unified) answer.\n                // This is either a (unified) m-line containing a remote\n                // track only, or a (unified) m-line containing a remote\n                // track and a local track that has been removed.\n                // In either case, it MUST exist in the cached\n                // (unified) answer.\n                //\n                // In case this is a removed local track, clean-up\n                // the (unified) m-line and make sure it's 'recvonly' or\n                // 'inactive'.\n\n                delete uLine.msid;\n                delete uLine.sources;\n                delete uLine.ssrcGroups;\n                if (!uLine.direction\n                    || uLine.direction === 'sendrecv')\n                    uLine.direction = 'recvonly';\n                else if (uLine.direction === 'sendonly')\n                    uLine.direction = 'inactive';\n            } else {\n                // This is an (unified) m-line/channel that contains a local\n                // track (sendrecv or sendonly channel) or it's a unified\n                // recvonly m-line/channel. In either case, since we're\n                // going from PlanB -> Unified Plan this m-line MUST\n                // exist in the cached answer.\n            }\n\n            session.media.push(uLine);\n\n            if (typeof uLine.mid === 'string') {\n                // inactive lines don't/may not have an mid.\n                mids.push(uLine.mid);\n            }\n        }\n    } else {\n\n        // SDP offer/answer (and the JSEP spec) forbids removing an m-section\n        // under any circumstances. If we are no longer interested in sending a\n        // track, we just remove the msid and ssrc attributes and set it to\n        // either a=recvonly (as the reofferer, we must use recvonly if the\n        // other side was previously sending on the m-section, but we can also\n        // leave the possibility open if it wasn't previously in use), or\n        // a=inactive.\n\n        if (typeof cached !== 'undefined' &&\n            typeof cached.media !== 'undefined' &&\n            Array.isArray(cached.media)) {\n            cached.media.forEach(function(uLine) {\n                mids.push(uLine.mid);\n                if (typeof mid2ul[uLine.mid] !== 'undefined') {\n                    session.media.push(mid2ul[uLine.mid]);\n                } else {\n                    delete uLine.msid;\n                    delete uLine.sources;\n                    delete uLine.ssrcGroups;\n                    if (!uLine.direction\n                        || uLine.direction === 'sendrecv')\n                        uLine.direction = 'recvonly';\n                    if (!uLine.direction\n                        || uLine.direction === 'sendonly')\n                        uLine.direction = 'inactive';\n                    session.media.push(uLine);\n                }\n            });\n        }\n\n        // Add all the remaining (new) m-lines of the transformed SDP.\n        Object.keys(mid2ul).forEach(function(mid) {\n            if (mids.indexOf(mid) === -1) {\n                mids.push(mid);\n                if (mid2ul[mid].direction === 'recvonly') {\n                    // This is a remote recvonly channel. Add its SSRC to the\n                    // appropriate sendrecv or sendonly channel.\n                    // TODO(gp) what if we don't have sendrecv/sendonly\n                    // channel?\n\n                    session.media.some(function (uLine) {\n                        if ((uLine.direction === 'sendrecv' ||\n                            uLine.direction === 'sendonly') &&\n                            uLine.type === mid2ul[mid].type) {\n\n                            // mid2ul[mid] shouldn't have any ssrc-groups\n                            Object.keys(mid2ul[mid].sources).forEach(\n                                function (ssrc) {\n                                uLine.sources[ssrc] =\n                                    mid2ul[mid].sources[ssrc];\n                            });\n\n                            return true;\n                        }\n                    });\n                } else {\n                    session.media.push(mid2ul[mid]);\n                }\n            }\n        });\n    }\n\n    // After we have constructed the Plan Unified m-lines we can figure out\n    // where (in which m-line) to place the 'recvonly SSRCs'.\n    // Note: we assume here that we are the answerer in the O/A, so any offers\n    // which we translate come from the remote side, while answers are local\n    // (and so our last local description is cached as an 'answer').\n    [\"audio\", \"video\"].forEach(function (type) {\n        if (!session || !session.media || !Array.isArray(session.media))\n            return;\n\n        var idx = null;\n        if (Object.keys(recvonlySsrcs[type]).length > 0) {\n            idx = self.getFirstSendingIndexFromAnswer(type);\n            if (idx === null){\n                // If this is the first offer we receive, we don't have a\n                // cached answer. Assume that we will be sending media using\n                // the first m-line for each media type.\n\n                for (var i = 0; i < session.media.length; i++) {\n                    if (session.media[i].type === type) {\n                        idx = i;\n                        break;\n                    }\n                }\n            }\n        }\n\n        if (idx && session.media.length > idx) {\n            var mLine = session.media[idx];\n            Object.keys(recvonlySsrcs[type]).forEach(function(ssrc) {\n                if (mLine.sources && mLine.sources[ssrc]) {\n                    console.warn(\"Replacing an existing SSRC.\");\n                }\n                if (!mLine.sources) {\n                    mLine.sources = {};\n                }\n\n                mLine.sources[ssrc] = recvonlySsrcs[type][ssrc];\n            });\n        }\n    });\n\n    // We regenerate the BUNDLE group (since we regenerated the mids)\n    session.groups.some(function(group) {\n        if (group.type === 'BUNDLE') {\n            group.mids = mids.join(' ');\n            return true;\n        }\n    });\n\n    // msid semantic\n    session.msidSemantic = {\n        semantic: 'WMS',\n        token: '*'\n    };\n\n    var resStr = transform.write(session);\n\n    // Cache the transformed SDP (Unified Plan) for later re-use in this\n    // function.\n    this.cache[desc.type] = resStr;\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: resStr\n    });\n\n    //#endregion\n};\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp-interop/lib/interop.js\n// module id = 148\n// module chunks = 0","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar transform = require('sdp-transform');\n\nexports.write = function(session, opts) {\n\n  if (typeof session !== 'undefined' &&\n      typeof session.media !== 'undefined' &&\n      Array.isArray(session.media)) {\n\n    session.media.forEach(function (mLine) {\n      // expand sources to ssrcs\n      if (typeof mLine.sources !== 'undefined' &&\n        Object.keys(mLine.sources).length !== 0) {\n          mLine.ssrcs = [];\n          Object.keys(mLine.sources).forEach(function (ssrc) {\n            var source = mLine.sources[ssrc];\n            Object.keys(source).forEach(function (attribute) {\n              mLine.ssrcs.push({\n                id: ssrc,\n                attribute: attribute,\n                value: source[attribute]\n              });\n            });\n          });\n          delete mLine.sources;\n        }\n\n      // join ssrcs in ssrc groups\n      if (typeof mLine.ssrcGroups !== 'undefined' &&\n        Array.isArray(mLine.ssrcGroups)) {\n          mLine.ssrcGroups.forEach(function (ssrcGroup) {\n            if (typeof ssrcGroup.ssrcs !== 'undefined' &&\n                Array.isArray(ssrcGroup.ssrcs)) {\n              ssrcGroup.ssrcs = ssrcGroup.ssrcs.join(' ');\n            }\n          });\n        }\n    });\n  }\n\n  // join group mids\n  if (typeof session !== 'undefined' &&\n      typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\n\n    session.groups.forEach(function (g) {\n      if (typeof g.mids !== 'undefined' && Array.isArray(g.mids)) {\n        g.mids = g.mids.join(' ');\n      }\n    });\n  }\n\n  return transform.write(session, opts);\n};\n\nexports.parse = function(sdp) {\n  var session = transform.parse(sdp);\n\n  if (typeof session !== 'undefined' && typeof session.media !== 'undefined' &&\n      Array.isArray(session.media)) {\n\n    session.media.forEach(function (mLine) {\n      // group sources attributes by ssrc\n      if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\n        mLine.sources = {};\n        mLine.ssrcs.forEach(function (ssrc) {\n          if (!mLine.sources[ssrc.id])\n          mLine.sources[ssrc.id] = {};\n        mLine.sources[ssrc.id][ssrc.attribute] = ssrc.value;\n        });\n\n        delete mLine.ssrcs;\n      }\n\n      // split ssrcs in ssrc groups\n      if (typeof mLine.ssrcGroups !== 'undefined' &&\n        Array.isArray(mLine.ssrcGroups)) {\n          mLine.ssrcGroups.forEach(function (ssrcGroup) {\n            if (typeof ssrcGroup.ssrcs === 'string') {\n              ssrcGroup.ssrcs = ssrcGroup.ssrcs.split(' ');\n            }\n          });\n        }\n    });\n  }\n  // split group mids\n  if (typeof session !== 'undefined' &&\n      typeof session.groups !== 'undefined' && Array.isArray(session.groups)) {\n\n    session.groups.forEach(function (g) {\n      if (typeof g.mids === 'string') {\n        g.mids = g.mids.split(' ');\n      }\n    });\n  }\n\n  return session;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp-interop/lib/transform.js\n// module id = 149\n// module chunks = 0","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nmodule.exports = function arrayEquals(array) {\n    // if the other array is a falsy value, return\n    if (!array)\n        return false;\n\n    // compare lengths - can save a lot of time\n    if (this.length != array.length)\n        return false;\n\n    for (var i = 0, l = this.length; i < l; i++) {\n        // Check if we have nested arrays\n        if (this[i] instanceof Array && array[i] instanceof Array) {\n            // recurse into the nested arrays\n            if (!arrayEquals.apply(this[i], [array[i]]))\n                return false;\n        } else if (this[i] != array[i]) {\n            // Warning - two different object instances will never be equal:\n            // {x:20} != {x:20}\n            return false;\n        }\n    }\n    return true;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp-interop/lib/array-equals.js\n// module id = 150\n// module chunks = 0","/* Copyright @ 2016 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\nvar transform = require('sdp-transform');\nvar transformUtils = require('./transform-utils');\nvar parseSsrcs = transformUtils.parseSsrcs;\nvar writeSsrcs = transformUtils.writeSsrcs;\n\n//region Constants\n\nvar DEFAULT_NUM_OF_LAYERS = 3;\n\n//endregion\n\nfunction getSsrcAttribute (mLine, ssrc, attributeName) {\n    return mLine\n        .ssrcs\n        .filter(function(ssrcInfo) { return ssrcInfo.id === ssrc; })\n        .filter(function(ssrcInfo) { return ssrcInfo.attribute === attributeName; })\n        .map(function(ssrcInfo) { return ssrcInfo.value; })[0];\n}\n\n//region Ctor\n\nfunction Simulcast(options) {\n\n    this.options = options ? options : {};\n\n    if (!this.options.numOfLayers) {\n        this.options.numOfLayers = DEFAULT_NUM_OF_LAYERS;\n    }\n    console.log(\"SdpSimulcast: using \" + this.options.numOfLayers + \" layers\");\n\n    /**\n     * An IN-ORDER list of the simulcast ssrcs\n     * @type {list<number>}\n     */\n    this.ssrcCache = [];\n}\n\n//endregion\n\n//region Stateless private utility functions\n\n/**\n * Returns a random integer between min (included) and max (excluded)\n * Using Math.round() gives a non-uniform distribution!\n * @returns {number}\n */\nfunction generateSSRC() {\n    var min = 0, max = 0xffffffff;\n    return Math.floor(Math.random() * (max - min)) + min;\n};\n\nfunction processVideo(session, action) {\n    if (session == null || !Array.isArray(session.media)) {\n        return;\n    }\n\n    session.media.forEach(function (mLine) {\n        if (mLine.type === 'video') {\n            action(mLine);\n        }\n    });\n};\n\nfunction validateDescription(desc)\n{\n    return desc && desc != null\n        && desc.type && desc.type != ''\n        && desc.sdp && desc.sdp != '';\n}\n\nfunction explodeRemoteSimulcast(mLine) {\n\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\n        return;\n    }\n\n    var sources = parseSsrcs(mLine);\n    var order = [];\n\n    // Find the SIM group and explode its sources.\n    var j = mLine.ssrcGroups.length;\n    while (j--) {\n\n        if (mLine.ssrcGroups[j].semantics !== 'SIM') {\n            continue;\n        }\n\n        var simulcastSsrcs = mLine.ssrcGroups[j].ssrcs.split(' ');\n\n        for (var i = 0; i < simulcastSsrcs.length; i++) {\n\n            var ssrc = simulcastSsrcs[i];\n            order.push(ssrc);\n\n            var parts = sources[ssrc].msid.split(' ');\n            sources[ssrc].msid = [parts[0], '/', i, ' ', parts[1], '/', i].join('');\n            sources[ssrc].cname = [sources[ssrc].cname, '/', i].join('');\n\n            // Remove all the groups that this SSRC participates in.\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\n                if (relatedGroup.semantics === 'SIM') {\n                    return;\n                }\n\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\n                    return;\n                }\n\n                // Nuke all the related SSRCs.\n                relatedSsrcs.forEach(function (relatedSSRC) {\n                    sources[relatedSSRC].msid = sources[ssrc].msid;\n                    sources[relatedSSRC].cname = sources[ssrc].cname;\n                    if (relatedSSRC !== ssrc) {\n                        order.push(relatedSSRC);\n                    }\n                });\n\n                // Schedule the related group for nuking.\n            })\n        }\n\n        mLine.ssrcs = writeSsrcs(sources, order);\n        mLine.ssrcGroups.splice(j, 1);\n    };\n}\n\nfunction implodeRemoteSimulcast(mLine) {\n\n    if (!mLine || !Array.isArray(mLine.ssrcGroups)) {\n        console.info('Halt: There are no SSRC groups in the remote ' +\n                'description.');\n        return;\n    }\n\n    var sources = parseSsrcs(mLine);\n\n    // Find the SIM group and nuke it.\n    mLine.ssrcGroups.forEach(function (simulcastGroup) {\n        if (simulcastGroup.semantics !== 'SIM') {\n            return;\n        }\n\n        console.info(\"Imploding SIM group: \" + simulcastGroup.ssrcs);\n        // Schedule the SIM group for nuking.\n        simulcastGroup.nuke = true;\n\n        var simulcastSsrcs = simulcastGroup.ssrcs.split(' ');\n\n        // Nuke all the higher layer SSRCs.\n        for (var i = 1; i < simulcastSsrcs.length; i++) {\n\n            var ssrc = simulcastSsrcs[i];\n            delete sources[ssrc];\n\n            // Remove all the groups that this SSRC participates in.\n            mLine.ssrcGroups.forEach(function (relatedGroup) {\n                if (relatedGroup.semantics === 'SIM') {\n                    return;\n                }\n\n                var relatedSsrcs = relatedGroup.ssrcs.split(' ');\n                if (relatedSsrcs.indexOf(ssrc) === -1) {\n                    return;\n                }\n\n                // Nuke all the related SSRCs.\n                relatedSsrcs.forEach(function (relatedSSRC) {\n                    delete sources[relatedSSRC];\n                });\n\n                // Schedule the related group for nuking.\n                relatedGroup.nuke = true;\n            })\n        }\n\n        return;\n    });\n\n    mLine.ssrcs = writeSsrcs(sources);\n\n    // Nuke all the scheduled groups.\n    var i = mLine.ssrcGroups.length;\n    while (i--) {\n        if (mLine.ssrcGroups[i].nuke) {\n            mLine.ssrcGroups.splice(i, 1);\n        }\n    }\n}\n\nfunction removeGoogConference(mLine) {\n    if (!mLine || !Array.isArray(mLine.invalid)) {\n        return;\n    }\n\n    var i = mLine.invalid.length;\n    while (i--) {\n        if (mLine.invalid[i].value == 'x-google-flag:conference') {\n            mLine.invalid.splice(i, 1);\n        }\n    }\n}\n\nfunction assertGoogConference(mLine) {\n    if (!mLine) {\n        return;\n    }\n\n    if (!Array.isArray(mLine.invalid)) {\n        mLine.invalid = [];\n    }\n\n    if (!mLine.invalid.some(\n            function (i) { return i.value === 'x-google-flag:conference' })) {\n        mLine.invalid.push({'value': 'x-google-flag:conference'});\n    }\n}\n\nSimulcast.prototype.clearSsrcCache = function() {\n    this.ssrcCache = [];\n}\n\n/**\n * When we start as video muted, all of the video\n *  ssrcs get generated so we can include them as part\n *  of the original session-accept.  That means we\n *  need this library to restore to those same ssrcs\n *  the first time we unmute, so we need the ability to\n *  force its cache\n */\nSimulcast.prototype.setSsrcCache = function(ssrcs) {\n    this.ssrcCache = ssrcs;\n}\n\n//endregion\n\n//region \"Private\" functions\n\n/**\n * Given a video mLine, return a list of the video ssrcs\n *  in simulcast layer order (returns a list of just\n *  the primary ssrc if there are no simulcast layers)\n */\nSimulcast.prototype._parseSimLayers = function (mLine) {\n    var simGroup = mLine.ssrcGroups &&\n        mLine.ssrcGroups.find(function(group) { return group.semantics === \"SIM\"; });\n    if (simGroup) {\n        return simGroup.ssrcs\n            .split(\" \")\n            .map(function(ssrcStr) { return parseInt(ssrcStr) });\n    } else {\n        return [mLine.ssrcs[0].id];\n    }\n}\n\nSimulcast.prototype._buildNewToOldSsrcMap = function (newSsrcList, oldSsrcList) {\n    var ssrcMap = {};\n    for (var i = 0; i < newSsrcList.length; ++i) {\n        var newSsrc = newSsrcList[i];\n        var oldSsrc = oldSsrcList[i] || null;\n        ssrcMap[newSsrc] = oldSsrc;\n    }\n    return ssrcMap;\n}\n\nSimulcast.prototype._fillInSourceDataFromCache = function(mLine) {\n    console.log(\"SdpSimulcast restoring from cache: \", this.ssrcCache);\n    var newSimSsrcs = this._parseSimLayers(mLine);\n    console.log(\"SdpSimulcast Parsed new sim ssrcs: \", newSimSsrcs);\n    var newMsid = getSsrcAttribute(mLine, newSimSsrcs[0], \"msid\");\n    var newCname = getSsrcAttribute(mLine, newSimSsrcs[0], \"cname\");\n    var ssrcsToReplace = this._buildNewToOldSsrcMap(newSimSsrcs, this.ssrcCache);\n    console.log(\"SdpSimulcast built replacement map: \", ssrcsToReplace);\n    // New sdp might only have 1 layer, so not every cached ssrc will have a new one\n    //  to replace directly\n    var ssrcsToAdd = this.ssrcCache\n        .filter(function(ssrc) { return Object.values(ssrcsToReplace).indexOf(ssrc) === -1; });\n    console.log(\"SdpSimulcast built ssrcs to add: \", ssrcsToAdd);\n\n    // First do the replacements\n    mLine.ssrcs.forEach(function(ssrc) {\n        if (ssrcsToReplace[ssrc.id]) {\n            ssrc.id = ssrcsToReplace[ssrc.id];\n        }\n    });\n    // Now the adds\n    ssrcsToAdd.forEach(function(ssrc) {\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"msid\",\n            value: newMsid\n        });\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"cname\",\n            value: newCname\n        });\n    });\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\n    mLine.ssrcGroups.push({\n        semantics: \"SIM\",\n        ssrcs: this.ssrcCache.join(\" \")\n    });\n    return mLine;\n}\n\nSimulcast.prototype._generateSourceData = function(mLine, primarySsrc) {\n    var addAssociatedStream = function(mLine, ssrc) {\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"cname\",\n            value: primarySsrcCname\n        });\n        mLine.ssrcs.push({\n            id: ssrc,\n            attribute: \"msid\",\n            value: primarySsrcMsid\n        });\n    }\n    var primarySsrcMsid = getSsrcAttribute(mLine, primarySsrc, \"msid\");\n    var primarySsrcCname = getSsrcAttribute(mLine, primarySsrc, \"cname\");\n\n    // Generate sim layers\n    var simSsrcs = [];\n    for (var i = 0; i < this.options.numOfLayers - 1; ++i) {\n        var simSsrc = generateSSRC();\n        addAssociatedStream(mLine, simSsrc);\n        simSsrcs.push(simSsrc);\n    }\n    mLine.ssrcGroups = mLine.ssrcGroups || [];\n    mLine.ssrcGroups.push({\n        semantics: \"SIM\",\n        ssrcs: primarySsrc + \" \" + simSsrcs.join(\" \")\n    });\n    return mLine;\n}\n\n\n\n// Assumptions:\n//  1) 'mLine' contains only a single primary video source\n//   (i.e. it will not already have simulcast streams inserted)\n//  2) 'mLine' MAY already contain an RTX stream for its video source\n//  3) 'mLine' is in sendrecv or sendonly state\n// Guarantees:\n//  1) return mLine will contain 2 additional simulcast layers\n//   generated\n//  2) if the base video ssrc in mLine has been seen before,\n//   then the same generated simulcast streams from before will\n//   be used again\n//  3) if rtx is enabled for the mLine, all generated simulcast\n//   streams will have rtx streams generated as well\n//  4) if rtx has been generated for a src before, we will generate\n//   the same rtx stream again\nSimulcast.prototype._restoreSimulcast = function(mLine) {\n    // First, find the primary video source in the given\n    // mLine and see if we've seen it before.\n    var primarySsrc;\n    var numSsrcs = mLine.ssrcs && mLine.ssrcs\n        .map(function(ssrcInfo) { return ssrcInfo.id; })\n        .filter(function(ssrc, index, array) {\n            return array.indexOf(ssrc) === index;\n        })\n        .length || 0;\n    var numGroups = (mLine.ssrcGroups && mLine.ssrcGroups.length) || 0;\n\n    if (numSsrcs === 0 || numSsrcs > 2) {\n        // Unsupported scenario\n        return mLine;\n    }\n    if (numSsrcs == 2 && numGroups === 0) {\n        // Unsupported scenario\n        return mLine;\n    }\n\n    if (numSsrcs === 1) {\n        primarySsrc = mLine.ssrcs[0].id;\n    } else {\n        // There must be an FID group, so parse\n        //  that and pull the primary ssrc from there\n        var fidGroup = mLine.ssrcGroups.filter(function(group) { return group.semantics === \"FID\"; })[0];\n        if (fidGroup) {\n            primarySsrc = parseInt(fidGroup.ssrcs.split(\" \")[0]);\n        } else {\n            // Unsupported scenario\n            return mLine;\n        }\n    }\n    console.log(\"SdpSimulcast: current ssrc cache: \", this.ssrcCache);\n    console.log(\"SdpSimulcast: parsed primary ssrc \" + primarySsrc);\n\n    var seenPrimarySsrc = this.ssrcCache.indexOf(primarySsrc) !== -1;\n\n    if (seenPrimarySsrc) {\n        console.log(\"SdpSimulcast: Have seen primary ssrc before, \" +\n            \"filling in data from cache\");\n        mLine = this._fillInSourceDataFromCache(mLine);\n    } else {\n        console.log(\"SdpSimulcast: Have not seen primary ssrc before, \" +\n            \"generating source data\");\n        mLine = this._generateSourceData(mLine, primarySsrc);\n    }\n    // Now update the cache to match whatever we've just put into this sdp\n    this.ssrcCache = this._parseSimLayers(mLine);\n    return mLine;\n}\n\n//endregion\n\n//region \"Public\" functions\n\n/**\n *\n * @param desc\n * @returns {RTCSessionDescription}\n */\nSimulcast.prototype.mungeRemoteDescription = function (desc) {\n\n    if (!validateDescription(desc)) {\n        return desc;\n    }\n\n    var session = transform.parse(desc.sdp);\n\n    var self = this;\n    processVideo(session, function (mLine) {\n\n        // Handle simulcast reception.\n        if (self.options.explodeRemoteSimulcast) {\n            explodeRemoteSimulcast(mLine);\n        } else {\n            implodeRemoteSimulcast(mLine);\n        }\n\n        // If native simulcast is enabled, we must append the x-goog-conference\n        // attribute to the SDP.\n        if (self.ssrcCache.length < 1) {\n            removeGoogConference(mLine);\n        } else {\n            assertGoogConference(mLine);\n        }\n    });\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: transform.write(session)\n    });\n};\n\n/**\n *\n * NOTE this method should be called only if simulcast is supported by\n * the current browser, otherwise local SDP should not be munged.\n * @param desc\n * @returns {RTCSessionDescription}\n */\nSimulcast.prototype.mungeLocalDescription = function (desc) {\n\n    if (!validateDescription(desc)) {\n        return desc;\n    }\n\n    var session = transform.parse(desc.sdp);\n\n    var self = this;\n    processVideo(session, function (mLine) {\n        if (mLine.direction == 'recvonly' || mLine.direction == 'inactive')\n        {\n            return;\n        }\n        self._restoreSimulcast(mLine);\n    });\n\n    return new RTCSessionDescription({\n        type: desc.type,\n        sdp: transform.write(session)\n    });\n};\n\n//endregion\n\nmodule.exports = Simulcast;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp-simulcast/lib/index.js\n// module id = 151\n// module chunks = 0","/* Copyright @ 2015 Atlassian Pty Ltd\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *     http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n\n/**\n * FIXME\n * @param sources FIXME\n * @param order An array of SSRCs which will be used to order the entries in\n * the returned array. Sources whose SSRC appears in 'order' will be added first,\n * in the specified order, and all other sources will be added afterwards (in\n * no specific order).\n * @returns {Array} FIXME\n */\nexports.writeSsrcs = function(sources, order) {\n  var ssrcs = [];\n\n  // expand sources to ssrcs\n  if (typeof sources !== 'undefined' &&\n      Object.keys(sources).length !== 0) {\n\n    if (!Array.isArray(order)) {\n      order = []\n    }\n\n    // Add the sources that appear in 'order' first.\n    for (var i = 0; i < order.length; i++) {\n      var ssrc = order[i];\n      var source = sources[ssrc];\n      Object.keys(source).forEach(function (attribute) {\n        ssrcs.push({\n          id: ssrc,\n          attribute: attribute,\n          value: source[attribute]\n        });\n      });\n    }\n\n    // Now add the rest of the sources.\n    Object.keys(sources).forEach(function (ssrc) {\n      ssrc = parseInt(ssrc); // Object.keys() returns string\n      if (order.indexOf(ssrc) >= 0) {\n        // Already added.\n        return;\n      }\n\n      var source = sources[ssrc];\n      Object.keys(source).forEach(function (attribute) {\n        ssrcs.push({\n          id: ssrc,\n          attribute: attribute,\n          value: source[attribute]\n        });\n      });\n    });\n  }\n\n  return ssrcs;\n};\n\nexports.parseSsrcs = function (mLine) {\n  var sources = {};\n  // group sources attributes by ssrc.\n  if (typeof mLine.ssrcs !== 'undefined' && Array.isArray(mLine.ssrcs)) {\n    mLine.ssrcs.forEach(function (ssrc) {\n      if (!sources[ssrc.id])\n        sources[ssrc.id] = {};\n      sources[ssrc.id][ssrc.attribute] = ssrc.value;\n    });\n  }\n  return sources;\n};\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./node_modules/sdp-simulcast/lib/transform-utils.js\n// module id = 152\n// module chunks = 0","import * as JitsiConferenceEvents from '../JitsiConferenceEvents';\n\n/**\n * The value which we use to say, every sound over this threshold\n * is talking on the mic.\n * @type {number}\n */\nconst SPEECH_DETECT_THRESHOLD = 0.6;\n\n/**\n * Detect user trying to speek while is locally muted and fires an event.\n */\nexport default class TalkMutedDetection {\n    /**\n     * Creates TalkMutedDetection\n     * @param conference the JitsiConference instance that created us.\n     * @param callback the callback to call when detected that the local user is\n     * talking while her microphone is muted.\n     * @constructor\n     */\n    constructor(conference, callback) {\n        /**\n         * The callback to call when detected that the local user is talking\n         * while her microphone is muted.\n         *\n         * @private\n         */\n        this._callback = callback;\n\n        /**\n         * The indicator which determines whether <tt>callback</tt> has been\n         * invoked for the current local audio track of <tt>conference</tt> so\n         * that it is invoked once only.\n         *\n         * @private\n         */\n        this._eventFired = false;\n\n        // XXX I went back and forth on the subject of where to put the access\n        // to statistics. On the one had, (1) statistics is likely intended to\n        // be private to conference and (2) there is a desire to keep the\n        // dependencies of modules to the minimum (i.e. not have\n        // TalkMutedDetection depend on statistics). On the other hand, (1)\n        // statistics is technically not private because\n        // JitsiConferenceEventManager accesses it and (2) TalkMutedDetection\n        // works exactly because it knows that there are no audio levels for\n        // JitsiLocalTrack but there are audio levels for the local participant\n        // through statistics.\n        conference.statistics.addAudioLevelListener(\n            this._audioLevel.bind(this));\n\n        conference.on(\n            JitsiConferenceEvents.TRACK_MUTE_CHANGED,\n            this._trackMuteChanged.bind(this));\n        conference.on(\n            JitsiConferenceEvents.TRACK_ADDED,\n            this._trackAdded.bind(this));\n    }\n\n    /* eslint-disable max-params */\n    /**\n     * Receives audio level events for all send and receive streams.\n     *\n     * @param {TraceablePeerConnection} pc - WebRTC PeerConnection object of the\n     * @param {number} ssrc - The synchronization source identifier (SSRC) of\n     * the endpoint/participant/stream being reported.\n     * @param {number} audioLevel - The audio level of <tt>ssrc</tt>.\n     * @param {boolean} isLocal - <tt>true</tt> if <tt>ssrc</tt> represents a\n     * local/send stream or <tt>false</tt> for a remote/receive stream.\n     */\n    _audioLevel(tpc, ssrc, audioLevel, isLocal) {\n        // We are interested in the local audio stream only and if event is not\n        // sent yet.\n        if (!isLocal || !this.audioTrack || this._eventFired) {\n            return;\n        }\n\n        if (this.audioTrack.isMuted()\n            && audioLevel > SPEECH_DETECT_THRESHOLD) {\n            this._eventFired = true;\n            this._callback();\n        }\n    }\n    /* eslint-enable max-params */\n\n    /**\n     * Determines whether a specific {@link JitsiTrack} represents a local audio\n     * track.\n     *\n     * @param {JitsiTrack} track - The <tt>JitsiTrack</tt> to be checked whether\n     * it represents a local audio track.\n     * @private\n     * @return {boolean} - <tt>true</tt> if the specified <tt>track</tt>\n     * represents a local audio track; otherwise, <tt>false</tt>.\n     */\n    _isLocalAudioTrack(track) {\n        return track.isAudioTrack() && track.isLocal();\n    }\n\n    /**\n     * Notifies this <tt>TalkMutedDetection</tt> that a {@link JitsiTrack} was\n     * added to the associated {@link JitsiConference}. Looks for the local\n     * audio track only.\n     *\n     * @param {JitsiTrack} track - The added <tt>JitsiTrack</tt>.\n     * @private\n     */\n    _trackAdded(track) {\n        if (this._isLocalAudioTrack(track)) {\n            this.audioTrack = track;\n        }\n    }\n\n    /**\n     * Notifies this <tt>TalkMutedDetection</tt> that the mute state of a\n     * {@link JitsiTrack} has changed. Looks for the local audio track only.\n     *\n     * @param {JitsiTrack} track - The <tt>JitsiTrack</tt> whose mute state has\n     * changed.\n     * @private\n     */\n    _trackMuteChanged(track) {\n        if (this._isLocalAudioTrack(track) && track.isMuted()) {\n            this._eventFired = false;\n        }\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/TalkMutedDetection.js","const AudioRecorder = require('./audioRecorder');\nconst SphinxService = require(\n    './transcriptionServices/SphinxTranscriptionService');\n\nconst BEFORE_STATE = 'before';\nconst RECORDING_STATE = 'recording';\nconst TRANSCRIBING_STATE = 'transcribing';\nconst FINISHED_STATE = 'finished';\n\n// the amount of characters each line in the transcription will have\nconst MAXIMUM_SENTENCE_LENGTH = 80;\n\n/**\n * This is the main object for handing the Transcription. It interacts with\n * the audioRecorder to record every person in a conference and sends the\n * recorder audio to a transcriptionService. The returned speech-to-text result\n * will be merged to create a transcript\n * @param {AudioRecorder} audioRecorder An audioRecorder recording a conference\n */\nfunction Transcriber() {\n    // the object which can record all audio in the conference\n    this.audioRecorder = new AudioRecorder();\n\n    // this object can send the recorder audio to a speech-to-text service\n    this.transcriptionService = new SphinxService();\n\n    // holds a counter to keep track if merging can start\n    this.counter = null;\n\n    // holds the date when transcription started which makes it possible\n    // to calculate the offset between recordings\n    this.startTime = null;\n\n    // will hold the transcription once it is completed\n    this.transcription = null;\n\n    // this will be a method which will be called once the transcription is done\n    // with the transcription as parameter\n    this.callback = null;\n\n    // stores all the retrieved speech-to-text results to merge together\n    // this value will store an Array<Word> object\n    this.results = [];\n\n    // Stores the current state of the transcription process\n    this.state = BEFORE_STATE;\n\n    // Used in the updateTranscription method to add a new line when the\n    // sentence becomes to long\n    this.lineLength = 0;\n}\n\n/**\n * Method to start the transcription process. It will tell the audioRecorder\n * to start storing all audio streams and record the start time for merging\n * purposes\n */\nTranscriber.prototype.start = function start() {\n    if (this.state !== BEFORE_STATE) {\n        throw new Error(\n            `The transcription can only start when it's in the \"${\n                BEFORE_STATE}\" state. It's currently in the \"${\n                this.state}\" state`);\n    }\n    this.state = RECORDING_STATE;\n    this.audioRecorder.start();\n    this.startTime = new Date();\n};\n\n/**\n * Method to stop the transcription process. It will tell the audioRecorder to\n * stop, and get all the recorded audio to send it to the transcription service\n\n * @param callback a callback which will receive the transcription\n */\nTranscriber.prototype.stop = function stop(callback) {\n    if (this.state !== RECORDING_STATE) {\n        throw new Error(\n            `The transcription can only stop when it's in the \"${\n                RECORDING_STATE}\" state. It's currently in the \"${\n                this.state}\" state`);\n    }\n\n    // stop the recording\n    console.log('stopping recording and sending audio files');\n    this.audioRecorder.stop();\n\n    // and send all recorded audio the the transcription service\n    const callBack = blobCallBack.bind(null, this);\n\n    this.audioRecorder.getRecordingResults().forEach(recordingResult => {\n        this.transcriptionService.send(recordingResult, callBack);\n        this.counter++;\n    });\n\n    // set the state to \"transcribing\" so that maybeMerge() functions correctly\n    this.state = TRANSCRIBING_STATE;\n\n    // and store the callback for later\n    this.callback = callback;\n};\n\n/**\n * This method gets the answer from the transcription service, calculates the\n * offset and adds is to every Word object. It will also start the merging\n * when every send request has been received\n *\n * note: Make sure to bind this as a Transcription object\n * @param {Transcriber} transcriber the transcriber instance\n * @param {RecordingResult} answer a RecordingResult object with a defined\n * WordArray\n */\nfunction blobCallBack(transcriber, answer) {\n    console.log(\n        'retrieved an answer from the transcription service. The answer has an'\n            + ` array of length: ${answer.wordArray.length}`);\n\n    // first add the offset between the start of the transcription and\n    // the start of the recording to all start and end times\n    if (answer.wordArray.length > 0) {\n        let offset = answer.startTime.getUTCMilliseconds()\n            - transcriber.startTime.getUTCMilliseconds();\n\n        // transcriber time will always be earlier\n\n        if (offset < 0) {\n            offset = 0; // presume 0 if it somehow not earlier\n        }\n\n        let array = '[';\n\n        answer.wordArray.forEach(wordObject => {\n            wordObject.begin += offset;\n            wordObject.end += offset;\n            array += `${wordObject.word},`;\n        });\n        array += ']';\n        console.log(array);\n\n        // give a name value to the Array object so that the merging can access\n        // the name value without having to use the whole recordingResult object\n        // in the algorithm\n        answer.wordArray.name = answer.name;\n    }\n\n    // then store the array and decrease the counter\n    transcriber.results.push(answer.wordArray);\n    transcriber.counter--;\n    console.log(`current counter: ${transcriber.counter}`);\n\n    // and check if all results have been received.\n    transcriber.maybeMerge();\n}\n\n/**\n * this method will check if the counter is zero. If it is, it will call\n * the merging method\n */\nTranscriber.prototype.maybeMerge = function() {\n    if (this.state === TRANSCRIBING_STATE && this.counter === 0) {\n        // make sure to include the events in the result arrays before\n        // merging starts\n        this.merge();\n    }\n};\n\n/**\n * This method will merge all speech-to-text arrays together in one\n * readable transcription string\n */\nTranscriber.prototype.merge = function() {\n    console.log(\n        `starting merge process!\\n The length of the array: ${\n            this.results.length}`);\n    this.transcription = '';\n\n    // the merging algorithm will look over all Word objects who are at pos 0 in\n    // every array. It will then select the one closest in time to the\n    // previously placed word, while removing the selected word from its array\n    // note: words can be skipped the skipped word's begin and end time somehow\n    // end up between the closest word start and end time\n    const arrays = this.results;\n\n    // arrays of Word objects\n    const potentialWords = []; // array of the first Word objects\n    // check if any arrays are already empty and remove them\n\n    hasPopulatedArrays(arrays);\n\n    // populate all the potential Words for a first time\n    arrays.forEach(array => pushWordToSortedArray(potentialWords, array));\n\n    // keep adding words to transcription until all arrays are exhausted\n    while (hasPopulatedArrays(arrays)) {\n        // first select the lowest array;\n        let lowestWordArray = arrays[0];\n\n        arrays.forEach(wordArray => {\n            if (wordArray[0].begin < lowestWordArray[0].begin) {\n                lowestWordArray = wordArray;\n            }\n        });\n\n        // put the word in the transcription\n        let wordToAdd = lowestWordArray.shift();\n\n        this.updateTranscription(wordToAdd, lowestWordArray.name);\n\n        // keep going until a word in another array has a smaller time\n        // or the array is empty\n        while (lowestWordArray.length > 0) {\n            let foundSmaller = false;\n            const wordToCompare = lowestWordArray[0].begin;\n\n            arrays.forEach(wordArray => {\n                if (wordArray[0].begin < wordToCompare) {\n                    foundSmaller = true;\n                }\n            });\n\n            // add next word if no smaller time has been found\n            if (foundSmaller) {\n                break;\n            }\n\n            wordToAdd = lowestWordArray.shift();\n            this.updateTranscription(wordToAdd, null);\n        }\n\n    }\n\n    // set the state to finished and do the necessary left-over tasks\n    this.state = FINISHED_STATE;\n    if (this.callback) {\n        this.callback(this.transcription);\n    }\n};\n\n/**\n * Appends a word object to the transcription. It will make a new line with a\n * name if a name is specified\n * @param {Word} word the Word object holding the word to append\n * @param {String|null} name the name of a new speaker. Null if not applicable\n */\nTranscriber.prototype.updateTranscription = function(word, name) {\n    if (name !== undefined && name !== null) {\n        this.transcription += `\\n${name}:`;\n        this.lineLength = name.length + 1; // +1 for the semi-colon\n    }\n    if (this.lineLength + word.word.length > MAXIMUM_SENTENCE_LENGTH) {\n        this.transcription += '\\n    ';\n        this.lineLength = 4; // because of the 4 spaces after the new line\n    }\n    this.transcription += ` ${word.word}`;\n    this.lineLength += word.word.length + 1; // +1 for the space\n};\n\n/**\n * Check if the given 2 dimensional array has any non-zero Word-arrays in them.\n * All zero-element arrays inside will be removed\n * If any non-zero-element arrays are found, the method will return true.\n * otherwise it will return false\n * @param {Array<Array>} twoDimensionalArray the array to check\n * @returns {boolean} true if any non-zero arrays inside, otherwise false\n */\nfunction hasPopulatedArrays(twoDimensionalArray) {\n    for (let i = 0; i < twoDimensionalArray.length; i++) {\n        if (twoDimensionalArray[i].length === 0) {\n            twoDimensionalArray.splice(i, 1);\n        }\n    }\n\n    return twoDimensionalArray.length > 0;\n}\n\n/**\n * Push a word to the right location in a sorted array. The array is sorted\n * from lowest to highest start time. Every word is stored in an object which\n * includes the name of the person saying the word.\n *\n * @param {Array<Word>} array the sorted array to push to\n * @param {Word} word the word to push into the array\n */\nfunction pushWordToSortedArray(array, word) {\n    if (array.length === 0) {\n        array.push(word);\n    } else {\n        if (array[array.length - 1].begin <= word.begin) {\n            array.push(word);\n\n            return;\n        }\n\n        for (let i = 0; i < array.length; i++) {\n            if (word.begin < array[i].begin) {\n                array.splice(i, 0, word);\n\n                return;\n            }\n        }\n        array.push(word); // fail safe\n    }\n}\n\n/**\n * Gives the transcriber a JitsiTrack holding an audioStream to transcribe.\n * The JitsiTrack is given to the audioRecorder. If it doesn't hold an\n * audiostream, it will not be added by the audioRecorder\n * @param {JitsiTrack} track the track to give to the audioRecorder\n */\nTranscriber.prototype.addTrack = function(track) {\n    this.audioRecorder.addTrack(track);\n};\n\n/**\n * Remove the given track from the auioRecorder\n * @param track\n */\nTranscriber.prototype.removeTrack = function(track) {\n    this.audioRecorder.removeTrack(track);\n};\n\n/**\n * Will return the created transcription if it's avialable or throw an error\n * when it's not done yet\n * @returns {String} the transcription as a String\n */\nTranscriber.prototype.getTranscription = function() {\n    if (this.state !== FINISHED_STATE) {\n        throw new Error(\n            `The transcription can only be retrieved when it's in the \"${\n                FINISHED_STATE}\" state. It's currently in the \"${\n                this.state}\" state`);\n    }\n\n    return this.transcription;\n};\n\n/**\n * Returns the current state of the transcription process\n */\nTranscriber.prototype.getState = function() {\n    return this.state;\n};\n\n/**\n * Resets the state to the \"before\" state, such that it's again possible to\n * call the start method\n */\nTranscriber.prototype.reset = function() {\n    this.state = BEFORE_STATE;\n    this.counter = null;\n    this.transcription = null;\n    this.startTime = null;\n    this.callback = null;\n    this.results = [];\n    this.lineLength = 0;\n};\n\nmodule.exports = Transcriber;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/transcription/transcriber.js","/* eslint-disable max-params */\n\n/**\n * This object stores variables needed around the recording of an audio stream\n * and passing this recording along with additional information along to\n * different processes\n * @param blob the recording audio stream as a single blob\n * @param name the name of the person of the audio stream\n * @param startTime the time in UTC when recording of the audiostream started\n * @param wordArray the recorder audio stream transcribed as an array of Word\n *                  objects\n */\nconst RecordingResult = function(blob, name, startTime, wordArray) {\n    this.blob = blob;\n    this.name = name;\n    this.startTime = startTime;\n    this.wordArray = wordArray;\n};\n\n/* eslint-enable max-params */\n\nmodule.exports = RecordingResult;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/transcription/recordingResult.js","/* global config */\n\nconst TranscriptionService = require('./AbstractTranscriptionService');\nconst Word = require('../word');\nconst audioRecorder = require('./../audioRecorder');\n\n/**\n * Implements a TranscriptionService for a Sphinx4 http server\n */\nconst SphinxService = function() {\n    // set the correct url\n    this.url = getURL();\n};\n\n/**\n * Subclass of AbstractTranscriptionService\n */\nSphinxService.prototype = Object.create(TranscriptionService.prototype);\n\n/**\n * Set the right constructor\n */\nSphinxService.constructor = SphinxService;\n\n/**\n * Overrides the sendRequest method from AbstractTranscriptionService\n * it will send the audio stream the a Sphinx4 server to get the transcription\n *\n * @param audioFileBlob the recorder audio stream an a single Blob\n * @param callback the callback function retrieving the server response\n */\nSphinxService.prototype.sendRequest = function(audioFileBlob, callback) {\n    console.log(`sending an audio file  to ${this.url}`);\n    console.log(`the audio file being sent: ${audioFileBlob}`);\n    const request = new XMLHttpRequest();\n\n    request.onreadystatechange = function() {\n        if (request.readyState === XMLHttpRequest.DONE\n            && request.status === 200) {\n            callback(request.responseText);\n        } else if (request.readyState === XMLHttpRequest.DONE) {\n            throw new Error(\n                `unable to accept response from sphinx server. status: ${\n                    request.status}`);\n        }\n\n        // if not ready no point to throw an error\n    };\n    request.open('POST', this.url);\n    request.setRequestHeader('Content-Type',\n        audioRecorder.determineCorrectFileType());\n    request.send(audioFileBlob);\n    console.log(`send ${audioFileBlob}`);\n};\n\n/**\n * Overrides the formatResponse method from AbstractTranscriptionService\n * It will parse the answer from the server in the expected format\n *\n * @param response the JSON body retrieved from the Sphinx4 server\n */\nSphinxService.prototype.formatResponse = function(response) {\n    const result = JSON.parse(response).objects;\n\n    // make sure to delete the session id object, which is always\n    // the first value in the JSON array\n\n    result.shift();\n    const array = [];\n\n    result.forEach(\n        word =>\n            word.filler\n                || array.push(new Word(word.word, word.start, word.end)));\n\n    return array;\n};\n\n/**\n * checks wether the reply is empty, or doesn't contain a correct JSON object\n * @param response the server response\n * @return {boolean} whether the response is valid\n */\nSphinxService.prototype.verify = function(response) {\n    console.log(`response from server:${response.toString()}`);\n\n    // test if server responded with a string object\n    if (typeof response !== 'string') {\n        return false;\n    }\n\n    // test if the string can be parsed into valid JSON\n    let json;\n\n    try {\n        json = JSON.parse(response);\n    } catch (error) {\n        console.log(error);\n\n        return false;\n    }\n\n    // check if the JSON has a \"objects\" value\n    if (json.objects === undefined) {\n        return false;\n    }\n\n    // get the \"objects\" value and check for a session ID\n    const array = json.objects;\n\n    if (!(array[0] && array[0]['session-id'])) {\n        return false;\n    }\n\n    // everything seems to be in order\n    return true;\n};\n\n/**\n * Gets the URL to the Sphinx4 server from the config file. If it's not there,\n * it will throw an error\n *\n * @returns {string} the URL to the sphinx4 server\n */\nfunction getURL() {\n    const message = 'config does not contain an url to a Sphinx4 https server';\n\n    if (config.sphinxURL === undefined) {\n        console.log(message);\n    } else {\n        const toReturn = config.sphinxURL;\n\n        if (toReturn.includes !== undefined && toReturn.includes('https://')) {\n            return toReturn;\n        }\n        console.log(message);\n\n    }\n}\n\nmodule.exports = SphinxService;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/transcription/transcriptionServices/SphinxTranscriptionService.js","/**\n * Abstract class representing an interface to implement a speech-to-text\n * service on.\n */\nconst TranscriptionService = function() {\n    throw new Error('TranscriptionService is abstract and cannot be'\n        + 'created');\n};\n\n/**\n * This method can be used to send the recorder audio stream and\n * retrieve the answer from the transcription service from the callback\n *\n * @param {RecordingResult} recordingResult a recordingResult object which\n * includes the recorded audio stream as a blob\n * @param {Function} callback  which will retrieve the a RecordingResult with\n *        the answer as a WordArray\n */\nTranscriptionService.prototype.send = function send(recordingResult, callback) {\n    this.sendRequest(recordingResult.blob, response => {\n        if (this.verify(response)) {\n            recordingResult.wordArray = this.formatResponse(response);\n        } else {\n            console.log('the retrieved response from the server is not valid!');\n            recordingResult.wordArray = [];\n        }\n        callback(recordingResult);\n    });\n};\n\n/**\n * Abstract method which will rend the recorder audio stream to the implemented\n * transcription service and will retrieve an answer, which will be\n * called on the given callback method\n *\n * @param {Blob} audioBlob the recorded audio stream as a single Blob\n * @param {function} callback function which will retrieve the answer\n *                            from the service\n */\n// eslint-disable-next-line no-unused-vars\nTranscriptionService.prototype.sendRequest = function(audioBlob, callback) {\n    throw new Error('TranscriptionService.sendRequest is abstract');\n};\n\n/**\n * Abstract method which will parse the output from the implemented\n * transcription service to the expected format\n *\n * The transcriber class expect an array of word objects, where each word\n * object is one transcribed word by the service.\n *\n * The expected output of this method is an array of word objects, in\n * the correct order. That is, the first object in the array is the first word\n * being said, and the last word in the array is the last word being said\n *\n * @param response the answer from the speech-to-text server which needs to be\n *                 formatted\n * @return {Array<Word>} an array of Word objects\n */\n// eslint-disable-next-line no-unused-vars\nTranscriptionService.prototype.formatResponse = function(response) {\n    throw new Error('TranscriptionService.format is abstract');\n};\n\n/**\n * Abstract method which will verify that the response from the server is valid\n *\n * @param response the response from the server\n * @return {boolean} true if response is valid, false otherwise\n */\n// eslint-disable-next-line no-unused-vars\nTranscriptionService.prototype.verify = function(response) {\n    throw new Error('TranscriptionService.verify is abstract');\n};\n\nmodule.exports = TranscriptionService;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/transcription/transcriptionServices/AbstractTranscriptionService.js","/**\n * An object representing a transcribed word, with some additional information\n * @param word the word\n * @param begin the time the word was started being uttered\n * @param end the time the word stopped being uttered\n */\nconst Word = function(word, begin, end) {\n    this.word = word;\n    this.begin = begin;\n    this.end = end;\n};\n\n/**\n * Get the string representation of the word\n * @returns {*} the word as a string\n */\nWord.prototype.getWord = function() {\n    return this.word;\n};\n\n/**\n * Get the time the word started being uttered\n * @returns {*} the start time as an integer\n */\nWord.prototype.getBeginTime = function() {\n    return this.begin;\n};\n\n/**\n * Get the time the word stopped being uttered\n * @returns {*} the end time as an integer\n */\nWord.prototype.getEndTime = function() {\n    return this.end;\n};\n\nmodule.exports = Word;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/transcription/word.js","import { getLogger } from 'jitsi-meet-logger';\nconst logger = getLogger(__filename);\n\nimport JitsiVideoSIPGWSession from './JitsiVideoSIPGWSession';\nimport * as Constants from './VideoSIPGWConstants';\nimport XMPPEvents from '../../service/xmpp/XMPPEvents';\n\n/**\n * Main video SIP GW handler. Stores references of all created sessions.\n */\nexport default class VideoSIPGW {\n\n    /**\n     * Creates new handler.\n     *\n     * @param {ChatRoom} chatRoom - Tha chat room to handle.\n     */\n    constructor(chatRoom) {\n        this.chatRoom = chatRoom;\n        this.eventEmitter = chatRoom.eventEmitter;\n        logger.debug('creating VideoSIPGW');\n        this.sessions = {};\n\n        this.sessionStateChangeListener = this.sessionStateChanged.bind(this);\n\n        // VideoSIPGW, JitsiConference and ChatRoom are not reusable and no\n        // more than one VideoSIPGW can be created per JitsiConference,\n        // so we don't bother to cleanup\n        chatRoom.addPresenceListener('jibri-sip-status',\n            this.handleJibriSIPStatus.bind(this));\n        chatRoom.addPresenceListener('jibri-sip-call-state',\n            this.handleJibriSIPState.bind(this));\n    }\n\n    /**\n     * Handles presence nodes with name: jibri-sip-status.\n     *\n     * @param {Object} node the presence node Object to handle.\n     * Object representing part of the presence received over xmpp.\n     */\n    handleJibriSIPStatus(node) {\n        const attributes = node.attributes;\n\n        if (!attributes) {\n            return;\n        }\n\n        logger.debug('Handle video sip gw status : ', attributes);\n        const newStatus = attributes.status;\n\n        // check for global availability of the service\n        if (newStatus !== this.status\n            && (newStatus === Constants.STATUS_UNDEFINED\n                || newStatus === Constants.STATUS_AVAILABLE\n                || newStatus === Constants.STATUS_BUSY)) {\n            this.status = newStatus;\n            this.eventEmitter.emit(\n                XMPPEvents.VIDEO_SIP_GW_AVAILABILITY_CHANGED, this.status);\n        }\n    }\n\n    /**\n     * Handles presence nodes with name: jibri-sip-call-state.\n     *\n     * @param {Object} node the presence node Object to handle.\n     * Object representing part of the presence received over xmpp.\n     */\n    handleJibriSIPState(node) {\n        const attributes = node.attributes;\n\n        if (!attributes) {\n            return;\n        }\n\n        logger.debug('Handle video sip gw state : ', attributes);\n\n        const newState = attributes.state;\n\n        if (newState === this.state) {\n            return;\n        }\n\n        switch (newState) {\n        case Constants.STATE_ON:\n        case Constants.STATE_OFF:\n        case Constants.STATE_PENDING:\n        case Constants.STATE_RETRYING:\n        case Constants.STATE_FAILED: {\n            const address = attributes.sipaddress;\n\n            if (!address) {\n                return;\n            }\n\n            // find the corresponding session and set its state\n            const session = this.sessions[address];\n\n            if (session) {\n                session.setState(newState);\n            } else {\n                logger.warn('Video SIP GW session not found:', address);\n            }\n        }\n        }\n    }\n\n    /**\n     * Creates new session and stores its reference if it does not exist or\n     * returns an error otherwise.\n     *\n     * @param {string} sipAddress - The sip address to use.\n     * @param {string} displayName - The display name to use.\n     * @returns {JitsiVideoSIPGWSession|Error}\n     */\n    createVideoSIPGWSession(sipAddress, displayName) {\n        if (this.sessions[sipAddress]) {\n            logger.warn('There was already a Video SIP GW session for address',\n                sipAddress);\n\n            return new Error(Constants.ERROR_SESSION_EXISTS);\n        }\n\n        const session = new JitsiVideoSIPGWSession(\n            sipAddress, displayName, this.chatRoom);\n\n        session.addStateListener(this.sessionStateChangeListener);\n\n        this.sessions[sipAddress] = session;\n\n        return session;\n    }\n\n    /**\n     * Listener for session state changed. When a session goes to off or failed\n     * we delete its reference.\n     *\n     * @param {options} event - { address, oldState, newState, displayName }\n     */\n    sessionStateChanged(event) {\n        const address = event.address;\n\n        if (event.newState === Constants.STATE_OFF\n            || event.newState === Constants.STATE_FAILED) {\n            const session = this.sessions[address];\n\n            if (!session) {\n                logger.error('Missing Video SIP GW session with address:',\n                    address);\n\n                return;\n            }\n\n            session.removeStateListener(this.sessionStateChangeListener);\n            delete this.sessions[address];\n        }\n\n        this.eventEmitter.emit(\n            XMPPEvents.VIDEO_SIP_GW_SESSION_STATE_CHANGED,\n            event);\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/videosipgw/VideoSIPGW.js","import { getLogger } from 'jitsi-meet-logger';\nimport { $iq } from 'strophe.js';\n\nimport Listenable from '../util/Listenable';\n\nimport * as VideoSIPGWConstants from './VideoSIPGWConstants';\n\nconst logger = getLogger(__filename);\n\n/**\n * The event name for current sip video session state changed.\n * @type {string} event name for sip video session state changed.\n */\nconst STATE_CHANGED = 'STATE_CHANGED';\n\n/**\n * Jitsi video SIP GW session. Holding its state and able to start/stop it.\n * When session is in OFF or FAILED stated it cannot be used anymore.\n */\nexport default class JitsiVideoSIPGWSession extends Listenable {\n\n    /**\n     * Creates new session with the desired sip address and display name.\n     *\n     * @param {string} sipAddress - The sip address to use when\n     * starting the session.\n     * @param {string} displayName - The display name to use for\n     * that participant.\n     * @param {ChatRoom} chatRoom - The chat room this session is bound to.\n     */\n    constructor(sipAddress, displayName, chatRoom) {\n        super();\n\n        this.sipAddress = sipAddress;\n        this.displayName = displayName;\n        this.chatRoom = chatRoom;\n\n        /*\n         * The initial state is undefined. Initial state cannot be STATE_OFF,\n         * the session enters this state when it was in STATE_ON and was stopped\n         * and such session cannot be used anymore.\n         *\n         * @type {VideoSIPGWConstants|undefined}\n         */\n        this.state = undefined;\n    }\n\n    /**\n     * Stops the current session.\n     */\n    stop() {\n        if (this.state === VideoSIPGWConstants.STATE_OFF\n            || this.state === VideoSIPGWConstants.STATE_FAILED) {\n            logger.warn('Video SIP GW session already stopped or failed!');\n\n            return;\n        }\n\n        this._sendJibriIQ('stop');\n    }\n\n    /**\n     * Starts a new session. Sends an iq to the focus.\n     */\n    start() {\n        // if state is off, this session was active for some reason\n        // and we should create new one, rather than reusing it\n        if (this.state === VideoSIPGWConstants.STATE_ON\n            || this.state === VideoSIPGWConstants.STATE_OFF\n            || this.state === VideoSIPGWConstants.STATE_PENDING\n            || this.state === VideoSIPGWConstants.STATE_RETRYING) {\n            logger.warn('Video SIP GW session already started!');\n\n            return;\n        }\n\n        this._sendJibriIQ('start');\n    }\n\n    /**\n     * Changes the state of this session.\n     *\n     * @param {string} newState - The new {VideoSIPGWConstants} state to set.\n     */\n    setState(newState) {\n        if (newState === this.state) {\n            return;\n        }\n\n        const oldState = this.state;\n\n        this.state = newState;\n        this.eventEmitter.emit(STATE_CHANGED,\n            {\n                address: this.sipAddress,\n                oldState,\n                newState: this.state,\n                displayName: this.displayName\n            }\n        );\n    }\n\n    /**\n     * Subscribes the passed listener to the event for state change of this\n     * session.\n     *\n     * @param {Function} listener - The function that will receive the event.\n     */\n    addStateListener(listener) {\n        this.addListener(STATE_CHANGED, listener);\n    }\n\n    /**\n     * Unsubscribes the passed handler.\n     *\n     * @param {Function} listener - The function to be removed.\n     */\n    removeStateListener(listener) {\n        this.removeListener(STATE_CHANGED, listener);\n    }\n\n    /**\n     * Sends a jibri command using an iq.\n     *\n     * @private\n     * @param {string} action - The action to send ('start' or 'stop').\n     */\n    _sendJibriIQ(action) {\n        const attributes = {\n            'xmlns': 'http://jitsi.org/protocol/jibri',\n            'action': action,\n            sipaddress: this.sipAddress\n        };\n\n        attributes.displayname = this.displayName;\n\n        const iq = $iq({\n            to: this.chatRoom.focusMucJid,\n            type: 'set' })\n            .c('jibri', attributes)\n            .up();\n\n        logger.debug(`${action} video SIP GW session`, iq.nodeTree);\n        this.chatRoom.connection.sendIQ(\n            iq,\n            () => {}, // eslint-disable-line no-empty-function\n            error => {\n                logger.error(\n                    `Failed to ${action} video SIP GW session, error: `, error);\n                this.setState(VideoSIPGWConstants.STATE_FAILED);\n            });\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/videosipgw/JitsiVideoSIPGWSession.js","import * as JitsiConferenceEvents from '../../JitsiConferenceEvents';\nimport SpeakerStats from './SpeakerStats';\n\n/**\n * A collection for tracking speaker stats. Attaches listeners\n * to the conference to automatically update on tracked events.\n */\nexport default class SpeakerStatsCollector {\n    /**\n     * Initializes a new SpeakerStatsCollector instance.\n     *\n     * @constructor\n     * @param {JitsiConference} conference - The conference to track.\n     * @returns {void}\n     */\n    constructor(conference) {\n        this.stats = {\n            users: {\n\n                // userId: SpeakerStats\n            },\n            dominantSpeakerId: null\n        };\n\n        const userId = conference.myUserId();\n\n        this.stats.users[userId] = new SpeakerStats(userId, null, true);\n\n        conference.addEventListener(\n            JitsiConferenceEvents.DOMINANT_SPEAKER_CHANGED,\n            this._onDominantSpeaker.bind(this));\n        conference.addEventListener(\n            JitsiConferenceEvents.USER_JOINED,\n            this._onUserJoin.bind(this));\n        conference.addEventListener(\n            JitsiConferenceEvents.USER_LEFT,\n            this._onUserLeave.bind(this));\n        conference.addEventListener(\n            JitsiConferenceEvents.DISPLAY_NAME_CHANGED,\n            this._onDisplayNameChange.bind(this));\n    }\n\n    /**\n     * Reacts to dominant speaker change events by changing its speaker stats\n     * models to reflect the current dominant speaker.\n     *\n     * @param {string} dominantSpeakerId - The user id of the new\n     * dominant speaker.\n     * @returns {void}\n     * @private\n     */\n    _onDominantSpeaker(dominantSpeakerId) {\n        const oldDominantSpeaker\n            = this.stats.users[this.stats.dominantSpeakerId];\n        const newDominantSpaker = this.stats.users[dominantSpeakerId];\n\n        oldDominantSpeaker && oldDominantSpeaker.setIsDominantSpeaker(false);\n        newDominantSpaker && newDominantSpaker.setIsDominantSpeaker(true);\n        this.stats.dominantSpeakerId = dominantSpeakerId;\n    }\n\n    /**\n     * Reacts to user join events by creating a new SpeakerStats model.\n     *\n     * @param {string} userId - The user id of the new user.\n     * @param {JitsiParticipant} - The JitsiParticipant model for the new user.\n     * @returns {void}\n     * @private\n     */\n    _onUserJoin(userId, participant) {\n        let savedUser = this.stats.users[userId];\n\n        if (!savedUser) {\n            savedUser = this.stats.users[userId]\n                = new SpeakerStats(userId, participant.getDisplayName());\n        }\n    }\n\n    /**\n     * Reacts to user leave events by updating the associated user's\n     * SpeakerStats model.\n     *\n     * @param {string} userId - The user id of the user that left.\n     * @returns {void}\n     * @private\n     */\n    _onUserLeave(userId) {\n        const savedUser = this.stats.users[userId];\n\n        if (savedUser) {\n            savedUser.markAsHasLeft();\n        }\n    }\n\n    /**\n     * Reacts to user name change events by updating the last known name\n     * tracked in the associated SpeakerStats model.\n     *\n     * @param {string} userId - The user id of the user that left.\n     * @returns {void}\n     * @private\n     */\n    _onDisplayNameChange(userId, newName) {\n        const savedUser = this.stats.users[userId];\n\n        if (savedUser) {\n            savedUser.setDisplayName(newName);\n        }\n    }\n\n    /**\n     * Return a copy of the tracked SpeakerStats models.\n     *\n     * @returns {Object} The keys are the user ids and the values are the\n     * associated user's SpeakerStats model.\n     * @private\n     */\n    getStats() {\n        return this.stats.users;\n    }\n}\n\n\n\n// WEBPACK FOOTER //\n// ./modules/statistics/SpeakerStatsCollector.js","/**\n * A model for keeping track of each user's total\n * time as a dominant speaker. The model also\n * keeps track of the user's last known name\n * in case the user has left the meeting,\n * which is also tracked.\n */\nclass SpeakerStats {\n    /**\n     * Initializes a new SpeakerStats instance.\n     *\n     * @constructor\n     * @param {string} userId - The id of the user being tracked.\n     * @param {string} displayName - The name of the user being tracked.\n     * @param {boolean} isLocalStats - True if the stats model tracks\n     * the local user.\n     * @returns {void}\n     */\n    constructor(userId, displayName, isLocalStats) {\n        this._userId = userId;\n        this.setDisplayName(displayName);\n        this._isLocalStats = isLocalStats || false;\n        this.setIsDominantSpeaker(false);\n        this.totalDominantSpeakerTime = 0;\n        this._dominantSpeakerStart = null;\n        this._hasLeft = false;\n    }\n\n    /**\n     * Get the user id being tracked.\n     *\n     * @returns {string} The user id.\n     */\n    getUserId() {\n        return this._userId;\n    }\n\n    /**\n     * Get the name of the user being tracked.\n     *\n     * @returns {string} The user name.\n     */\n    getDisplayName() {\n        return this.displayName;\n    }\n\n    /**\n     * Updates the last known name of the user being tracked.\n     *\n     * @param {string} - The user name.\n     * @returns {void}\n     */\n    setDisplayName(newName) {\n        this.displayName = newName;\n    }\n\n    /**\n     * Returns true if the stats are tracking the local user.\n     *\n     * @returns {boolean}\n     */\n    isLocalStats() {\n        return this._isLocalStats;\n    }\n\n    /**\n     * Returns true if the tracked user is currently a dominant speaker.\n     *\n     * @returns {boolean}\n     */\n    isDominantSpeaker() {\n        return this._isDominantSpeaker;\n    }\n\n    /**\n     * Returns true if the tracked user is currently a dominant speaker.\n     *\n     * @param {boolean} - If true, the user will being accumulating time\n     * as dominant speaker. If false, the user will not accumulate time\n     * and will record any time accumulated since starting as dominant speaker.\n     * @returns {void}\n     */\n    setIsDominantSpeaker(isNowDominantSpeaker) {\n        if (!this._isDominantSpeaker && isNowDominantSpeaker) {\n            this._dominantSpeakerStart = Date.now();\n        } else if (this._isDominantSpeaker && !isNowDominantSpeaker) {\n            const now = Date.now();\n            const timeElapsed = now - (this._dominantSpeakerStart || 0);\n\n            this.totalDominantSpeakerTime += timeElapsed;\n            this._dominantSpeakerStart = null;\n        }\n\n        this._isDominantSpeaker = isNowDominantSpeaker;\n    }\n\n    /**\n     * Get how long the tracked user has been dominant speaker.\n     *\n     * @returns {number} - The speaker time in milliseconds.\n     */\n    getTotalDominantSpeakerTime() {\n        let total = this.totalDominantSpeakerTime;\n\n        if (this._isDominantSpeaker) {\n            total += Date.now() - this._dominantSpeakerStart;\n        }\n\n        return total;\n    }\n\n    /**\n     * Get whether or not the user is still in the meeting.\n     *\n     * @returns {boolean} True if the user is no longer in the meeting.\n     */\n    hasLeft() {\n        return this._hasLeft;\n    }\n\n    /**\n     * Set the user as having left the meeting.\n     *\n     * @returns {void}\n     */\n    markAsHasLeft() {\n        this._hasLeft = true;\n        this.setIsDominantSpeaker(false);\n    }\n}\n\nmodule.exports = SpeakerStats;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/statistics/SpeakerStats.js","import EventEmitter from 'events';\nimport * as JitsiMediaDevicesEvents from './JitsiMediaDevicesEvents';\nimport * as MediaType from './service/RTC/MediaType';\nimport RTC from './modules/RTC/RTC';\nimport RTCBrowserType from './modules/RTC/RTCBrowserType';\nimport RTCEvents from './service/RTC/RTCEvents';\nimport Statistics from './modules/statistics/statistics';\n\nconst eventEmitter = new EventEmitter();\n\n/**\n * Gathers data and sends it to statistics.\n * @param deviceID the device id to log\n * @param devices list of devices\n */\nfunction logOutputDevice(deviceID, devices) {\n    const device\n        = devices.find(\n            d => d.kind === 'audiooutput' && d.deviceId === deviceID);\n\n    if (device) {\n        Statistics.sendActiveDeviceListEvent(\n            RTC.getEventDataForActiveDevice(device));\n    }\n}\n\nconst JitsiMediaDevices = {\n    /**\n     * Executes callback with list of media devices connected.\n     * @param {function} callback\n     */\n    enumerateDevices(callback) {\n        RTC.enumerateDevices(callback);\n    },\n\n    /**\n     * Checks if its possible to enumerate available cameras/micropones.\n     * @returns {Promise<boolean>} a Promise which will be resolved only once\n     * the WebRTC stack is ready, either with true if the device listing is\n     * available available or with false otherwise.\n     */\n    isDeviceListAvailable() {\n        return RTC.isDeviceListAvailable();\n    },\n\n    /**\n     * Returns true if changing the input (camera / microphone) or output\n     * (audio) device is supported and false if not.\n     * @param {string} [deviceType] - type of device to change. Default is\n     *      undefined or 'input', 'output' - for audio output device change.\n     * @returns {boolean} true if available, false otherwise.\n     */\n    isDeviceChangeAvailable(deviceType) {\n        return RTC.isDeviceChangeAvailable(deviceType);\n    },\n\n    /**\n     * Returns true if user granted permission to media devices.\n     * @param {'audio'|'video'} [type] - type of devices to check,\n     *      undefined stands for both 'audio' and 'video' together\n     * @returns {boolean}\n     */\n    isDevicePermissionGranted(type) {\n        const permissions = RTC.getDeviceAvailability();\n\n        switch (type) {\n        case MediaType.VIDEO:\n            return permissions.video === true;\n        case MediaType.AUDIO:\n            return permissions.audio === true;\n        default:\n            return permissions.video === true && permissions.audio === true;\n        }\n    },\n\n    /**\n     * Returns true if it is possible to be simultaneously capturing audio\n     * from more than one device.\n     *\n     * @returns {boolean}\n     */\n    isMultipleAudioInputSupported() {\n        return !RTCBrowserType.isFirefox();\n    },\n\n    /**\n     * Returns currently used audio output device id, 'default' stands\n     * for default device\n     * @returns {string}\n     */\n    getAudioOutputDevice() {\n        return RTC.getAudioOutputDevice();\n    },\n\n    /**\n     * Sets current audio output device.\n     * @param {string} deviceId - id of 'audiooutput' device from\n     *      navigator.mediaDevices.enumerateDevices(), 'default' is for\n     *      default device\n     * @returns {Promise} - resolves when audio output is changed, is rejected\n     *      otherwise\n     */\n    setAudioOutputDevice(deviceId) {\n\n        const availableDevices = RTC.getCurrentlyAvailableMediaDevices();\n\n        if (availableDevices && availableDevices.length > 0) {\n            // if we have devices info report device to stats\n            // normally this will not happen on startup as this method is called\n            // too early. This will happen only on user selection of new device\n            logOutputDevice(deviceId, RTC.getCurrentlyAvailableMediaDevices());\n        }\n\n        return RTC.setAudioOutputDevice(deviceId);\n    },\n\n    /**\n     * Adds an event handler.\n     * @param {string} event - event name\n     * @param {function} handler - event handler\n     */\n    addEventListener(event, handler) {\n        eventEmitter.addListener(event, handler);\n    },\n\n    /**\n     * Removes event handler.\n     * @param {string} event - event name\n     * @param {function} handler - event handler\n     */\n    removeEventListener(event, handler) {\n        eventEmitter.removeListener(event, handler);\n    },\n\n    /**\n     * Emits an event.\n     * @param {string} event - event name\n     */\n    emitEvent(event, ...args) {\n        eventEmitter.emit(event, ...args);\n    },\n\n    /**\n     * Returns whether or not the current browser can support capturing video,\n     * be it camera or desktop, and displaying received video.\n     *\n     * @returns {boolean}\n     */\n    supportsVideo() {\n        // Defer to RTCBrowserType to allow exposure of the api to the consumer\n        // but prevent other files from having to import JitsiMediaDevices.\n        return RTCBrowserType.supportsVideo();\n    }\n};\n\n\nRTC.addListener(\n    RTCEvents.DEVICE_LIST_CHANGED,\n    devices =>\n        eventEmitter.emit(\n            JitsiMediaDevicesEvents.DEVICE_LIST_CHANGED,\n            devices));\nRTC.addListener(\n    RTCEvents.DEVICE_LIST_AVAILABLE,\n    devices =>\n        logOutputDevice(\n            JitsiMediaDevices.getAudioOutputDevice(),\n            devices));\n\nexport default JitsiMediaDevices;\n\n\n\n// WEBPACK FOOTER //\n// ./JitsiMediaDevices.js","/* global $ */\n\nimport RTCBrowserType from './RTCBrowserType';\n\nconst logger = require('jitsi-meet-logger').getLogger(__filename);\n\nconst RTCUIHelper = {\n\n    /**\n     * Returns the name of 'video' element depending on the browser that we're\n     * currently using.\n     * @returns {string} 'video' or 'object' string name of WebRTC video element\n     */\n    getVideoElementName() {\n        return RTCBrowserType.isTemasysPluginUsed() ? 'object' : 'video';\n    },\n\n    /**\n     * Finds video element inside of the given container.\n     * @param containerElement HTML element node instance which is supposed to\n     *        contain the video element.\n     * @returns {HTMLElement} video HTML element instance if found inside of the\n     *          container or undefined otherwise.\n     */\n    findVideoElement(containerElement) {\n        const videoElemName = RTCUIHelper.getVideoElementName();\n\n        if (!RTCBrowserType.isTemasysPluginUsed()) {\n            return $(containerElement).find(videoElemName)[0];\n        }\n        const matching\n            = $(containerElement).find(\n                ` ${videoElemName}>param[value=\"video\"]`);\n\n        if (matching.length) {\n            if (matching.length > 1) {\n                logger.warn(\n                    'Container with more than one video elements: ',\n                    containerElement);\n            }\n\n            return matching.parent()[0];\n        }\n\n        return undefined;\n    },\n\n    /**\n     * Returns whether or not the video element fires resize events.\n     *\n     * @returns {boolean}\n     */\n    isResizeEventSupported() {\n        return !RTCBrowserType.isTemasysPluginUsed();\n    },\n\n    /**\n     * Sets 'volume' property of given HTML element displaying RTC audio or\n     * video stream.\n     * @param streamElement HTML element to which the RTC stream is attached to.\n     * @param volume the volume value to be set.\n     */\n    setVolume(streamElement, volume) {\n        if (!RTCBrowserType.isIExplorer()) {\n            streamElement.volume = volume;\n        }\n    },\n\n    /**\n     * Sets 'autoplay' property of given HTML element displaying RTC audio or\n     * video stream.\n     * @param streamElement HTML element to which the RTC stream is attached to.\n     * @param autoPlay 'true' or 'false'\n     */\n    setAutoPlay(streamElement, autoPlay) {\n        if (!RTCBrowserType.isIExplorer()) {\n            streamElement.autoplay = autoPlay;\n        }\n    }\n};\n\nexport default RTCUIHelper;\n\n\n\n// WEBPACK FOOTER //\n// ./modules/RTC/RTCUIHelper.js"],"sourceRoot":""}