{"map":"{\"version\":3,\"sources\":[\"webpack/bootstrap 0945c479bd27ddc4018a\",\"/srv/zwj.meet.com/react/features/base/config/parseURLParams.js\",\"/srv/zwj.meet.com/react/features/base/config/getRoomName.js\",\"/srv/zwj.meet.com/connection_optimization/do_external_connect.js\"],\"names\":[\"installedModules\",\"__webpack_require__\",\"moduleId\",\"exports\",\"module\",\"i\",\"l\",\"modules\",\"call\",\"m\",\"c\",\"d\",\"name\",\"getter\",\"o\",\"Object\",\"defineProperty\",\"configurable\",\"enumerable\",\"get\",\"n\",\"__esModule\",\"object\",\"property\",\"prototype\",\"hasOwnProperty\",\"p\",\"s\",\"url\",\"dontParse\",\"arguments\",\"length\",\"undefined\",\"paramStr\",\"search\",\"hash\",\"params\",\"substr\",\"split\",\"forEach\",\"part\",\"param\",\"key\",\"value\",\"JSON\",\"parse\",\"decodeURIComponent\",\"replace\",\"e\",\"msg\",\"String\",\"console\",\"warn\",\"window\",\"onerror\",\"getroomnode\",\"config\",\"path\",\"location\",\"pathname\",\"roomName\",\"substring\",\"lastIndexOf\",\"toLowerCase\",\"__WEBPACK_IMPORTED_MODULE_1__react_features_base_config_parseURLParams__\",\"createConnectionExternally\",\"externalConnectUrl\",\"isRecorder\",\"__WEBPACK_IMPORTED_MODULE_0__react_features_base_config_getRoomName__\",\"token\",\"jwt\",\"connectionInfo\",\"XMPPAttachInfo\",\"status\",\"data\",\"checkForConnectHandlerAndConnect\",\"errorCallback\",\"APP\",\"connect\",\"handler\",\"error\"],\"mappings\":\"aACA,IAAAA,KAGA,SAAAC,EAAAC,GAGA,GAAAF,EAAAE,GACA,OAAAF,EAAAE,GAAAC,QAGA,IAAAC,EAAAJ,EAAAE,IACAG,EAAAH,EACAI,GAAA,EACAH,YAUA,OANAI,EAAAL,GAAAM,KAAAJ,EAAAD,QAAAC,EAAAA,EAAAD,QAAAF,GAGAG,EAAAE,GAAA,EAGAF,EAAAD,QAKAF,EAAAQ,EAAAF,EAGAN,EAAAS,EAAAV,EAGAC,EAAAU,EAAA,SAAAR,EAAAS,EAAAC,GACAZ,EAAAa,EAAAX,EAAAS,IACAG,OAAAC,eAAAb,EAAAS,GACAK,cAAA,EACAC,YAAA,EACAC,IAAAN,KAMAZ,EAAAmB,EAAA,SAAAhB,GACA,IAAAS,EAAAT,GAAAA,EAAAiB,WACA,WAA2B,OAAAjB,EAAA,SAC3B,WAAiC,OAAAA,GAEjC,OADAH,EAAAU,EAAAE,EAAA,IAAAA,GACAA,GAIAZ,EAAAa,EAAA,SAAAQ,EAAAC,GAAsD,OAAAR,OAAAS,UAAAC,eAAAjB,KAAAc,EAAAC,IAGtDtB,EAAAyB,EAAA,SAGAzB,EAAAA,EAAA0B,EAAA,4CChDe,SACPC,GAEiC,IADjCC,EACiCC,UAAAC,OAAA,QAAAC,IAAAF,UAAA,IAAAA,UAAA,GAC/BG,EAAsB,YADSH,UAAAC,OAAA,QAAAC,IAAAF,UAAA,GAAAA,UAAA,GAAhB,QACkBF,EAAIM,OAASN,EAAIO,KAClDC,KA8BN,OA3BAH,GAAYA,EAASI,OAAO,GAAGC,MAAM,KAAKC,QAAQ,SAAAC,GAC9C,IAAMC,EAAQD,EAAKF,MAAM,KACnBI,EAAMD,EAAM,GAElB,GAAKC,EAAL,CAIA,IAAIC,OAAAA,EAEJ,IACIA,EAAQF,EAAM,GACTZ,IACDc,EACMC,KAAKC,MAAMC,mBAAmBH,GAAOI,QAAQ,MAAO,OAEhE,MAAOC,GACL,IAAMC,EAAAA,wCAA8CC,OAAOP,GAK3D,OAHAQ,QAAQC,KAAKH,EAAKD,QAClBK,OAAOC,SAAWD,OAAOC,QAAQL,EAAK,KAAM,KAAM,KAAMD,IAI5DZ,EAAOM,GAAOC,KAGXP,yCCvCI,WAAgC,IACnCmB,EAAgBC,OAAhBD,YACFE,EAAOJ,OAAOK,SAASC,SACzBC,OAAAA,EAIAA,EADAL,GAAsC,mBAAhBA,EACXA,EAAY/C,KAAKgD,OAAQC,GAO9BA,EAAKI,UAAUJ,EAAKK,YAAY,KAAO,GAAGC,oBACrC/B,EAGf,OAAO4B,mGC3BXI,EAAA/D,EAAA,KAiBA,GAA0C,mBAA/BgE,2BAA2C,CAElD,IAAIrC,EACEb,OAAAiD,EAAA,EAAAjD,CAAesC,OAAOK,UAAU,EAAM,QAChC,8BACDF,OAAOU,mBACZC,EACApD,OAAAiD,EAAA,EAAAjD,CAAesC,OAAOK,UAAU,EAAM,QAAQ,sBAEhDE,OAAAA,EAEJ,GAAIhC,IAAQgC,EAAW7C,OAAAqD,EAAA,EAAArD,MAAmBoD,EAAY,CAClDvC,GAAAA,SAAgBgC,EAEhB,IAAMS,EAAQtD,OAAAiD,EAAA,EAAAjD,CAAesC,OAAOK,UAAU,EAAM,UAAUY,IAE1DD,IACAzC,GAAAA,UAAiByC,GAGrBJ,2BACIrC,EACA,SAAA2C,GAGIlB,OAAOmB,gBACHC,OAAQ,UACRC,KAAMH,GAEVI,KAEJC,QAEJA,SAGJA,IASJ,SAASD,IACLtB,OAAOwB,KAC8B,UAA9BxB,OAAOwB,IAAIC,QAAQL,QACnBpB,OAAOwB,IAAIC,QAAQC,UAS9B,SAASH,EAAcI,GAEnBA,GAAS7B,QAAQC,KAAK4B,GAItB3B,OAAOmB,gBACHC,OAAQ,SAEZE\",\"sourcesContent\":[\" \\t// The module cache\\n \\tvar installedModules = {};\\n\\n \\t// The require function\\n \\tfunction __webpack_require__(moduleId) {\\n\\n \\t\\t// Check if module is in cache\\n \\t\\tif(installedModules[moduleId]) {\\n \\t\\t\\treturn installedModules[moduleId].exports;\\n \\t\\t}\\n \\t\\t// Create a new module (and put it into the cache)\\n \\t\\tvar module = installedModules[moduleId] = {\\n \\t\\t\\ti: moduleId,\\n \\t\\t\\tl: false,\\n \\t\\t\\texports: {}\\n \\t\\t};\\n\\n \\t\\t// Execute the module function\\n \\t\\tmodules[moduleId].call(module.exports, module, module.exports, __webpack_require__);\\n\\n \\t\\t// Flag the module as loaded\\n \\t\\tmodule.l = true;\\n\\n \\t\\t// Return the exports of the module\\n \\t\\treturn module.exports;\\n \\t}\\n\\n\\n \\t// expose the modules object (__webpack_modules__)\\n \\t__webpack_require__.m = modules;\\n\\n \\t// expose the module cache\\n \\t__webpack_require__.c = installedModules;\\n\\n \\t// define getter function for harmony exports\\n \\t__webpack_require__.d = function(exports, name, getter) {\\n \\t\\tif(!__webpack_require__.o(exports, name)) {\\n \\t\\t\\tObject.defineProperty(exports, name, {\\n \\t\\t\\t\\tconfigurable: false,\\n \\t\\t\\t\\tenumerable: true,\\n \\t\\t\\t\\tget: getter\\n \\t\\t\\t});\\n \\t\\t}\\n \\t};\\n\\n \\t// getDefaultExport function for compatibility with non-harmony modules\\n \\t__webpack_require__.n = function(module) {\\n \\t\\tvar getter = module && module.__esModule ?\\n \\t\\t\\tfunction getDefault() { return module['default']; } :\\n \\t\\t\\tfunction getModuleExports() { return module; };\\n \\t\\t__webpack_require__.d(getter, 'a', getter);\\n \\t\\treturn getter;\\n \\t};\\n\\n \\t// Object.prototype.hasOwnProperty.call\\n \\t__webpack_require__.o = function(object, property) { return Object.prototype.hasOwnProperty.call(object, property); };\\n\\n \\t// __webpack_public_path__\\n \\t__webpack_require__.p = \\\"/libs/\\\";\\n\\n \\t// Load entry module and return exports\\n \\treturn __webpack_require__(__webpack_require__.s = 769);\\n\",\"/* @flow */\\n\\n/**\\n * Parses the query/search or fragment/hash parameters out of a specific URL and\\n * returns them as a JS object.\\n *\\n * @param {string} url - The URL to parse.\\n * @param {boolean} dontParse - If falsy, some transformations (for parsing the\\n * value as JSON) will be executed.\\n * @param {string} source - If {@code 'search'}, the parameters will parsed out\\n * of {@code url.search}; otherwise, out of {@code url.hash}.\\n * @returns {Object}\\n */\\nexport default function parseURLParams(\\n        url: URL,\\n        dontParse: boolean = false,\\n        source: string = 'hash'): Object {\\n    const paramStr = source === 'search' ? url.search : url.hash;\\n    const params = {};\\n\\n    // eslint-disable-next-line newline-per-chained-call\\n    paramStr && paramStr.substr(1).split('&').forEach(part => {\\n        const param = part.split('=');\\n        const key = param[0];\\n\\n        if (!key) {\\n            return;\\n        }\\n\\n        let value;\\n\\n        try {\\n            value = param[1];\\n            if (!dontParse) {\\n                value\\n                    = JSON.parse(decodeURIComponent(value).replace(/\\\\\\\\&/, '&'));\\n            }\\n        } catch (e) {\\n            const msg = `Failed to parse URL parameter value: ${String(value)}`;\\n\\n            console.warn(msg, e);\\n            window.onerror && window.onerror(msg, null, null, null, e);\\n\\n            return;\\n        }\\n        params[key] = value;\\n    });\\n\\n    return params;\\n}\\n\",\"/* @flow */\\n\\ndeclare var config: Object;\\n\\n/**\\n * Builds and returns the room name.\\n *\\n * @returns {string}\\n */\\nexport default function getRoomName(): ?string {\\n    const { getroomnode } = config;\\n    const path = window.location.pathname;\\n    let roomName;\\n\\n    // Determine the room node from the URL.\\n    if (getroomnode && typeof getroomnode === 'function') {\\n        roomName = getroomnode.call(config, path);\\n    } else {\\n        // Fall back to the default strategy of making assumptions about how the\\n        // URL maps to the room (name). It currently assumes a deployment in\\n        // which the last non-directory component of the path (name) is the\\n        // room.\\n        roomName\\n            = path.substring(path.lastIndexOf('/') + 1).toLowerCase()\\n                || undefined;\\n    }\\n\\n    return roomName;\\n}\\n\",\"/* global config, createConnectionExternally */\\n\\nimport getRoomName from '../react/features/base/config/getRoomName';\\nimport parseURLParams from '../react/features/base/config/parseURLParams';\\n\\n/**\\n * Implements external connect using createConnectionExternally function defined\\n * in external_connect.js for Jitsi Meet. Parses the room name and JSON Web\\n * Token (JWT) from the URL and executes createConnectionExternally.\\n *\\n * NOTE: If you are using lib-jitsi-meet without Jitsi Meet, you should use this\\n * file as reference only because the implementation is Jitsi Meet-specific.\\n *\\n * NOTE: For optimal results this file should be included right after\\n * external_connect.js.\\n */\\n\\nif (typeof createConnectionExternally === 'function') {\\n    // URL params have higher priority than config params.\\n    let url\\n        = parseURLParams(window.location, true, 'hash')[\\n                'config.externalConnectUrl']\\n            || config.externalConnectUrl;\\n    const isRecorder\\n        = parseURLParams(window.location, true, 'hash')['config.iAmRecorder'];\\n\\n    let roomName;\\n\\n    if (url && (roomName = getRoomName()) && !isRecorder) {\\n        url += `?room=${roomName}`;\\n\\n        const token = parseURLParams(window.location, true, 'search').jwt;\\n\\n        if (token) {\\n            url += `&token=${token}`;\\n        }\\n\\n        createConnectionExternally(\\n            url,\\n            connectionInfo => {\\n                // Sets that global variable to be used later by connect method\\n                // in connection.js.\\n                window.XMPPAttachInfo = {\\n                    status: 'success',\\n                    data: connectionInfo\\n                };\\n                checkForConnectHandlerAndConnect();\\n            },\\n            errorCallback);\\n    } else {\\n        errorCallback();\\n    }\\n} else {\\n    errorCallback();\\n}\\n\\n/**\\n * Check if connect from connection.js was executed and executes the handler\\n * that is going to finish the connect work.\\n *\\n * @returns {void}\\n */\\nfunction checkForConnectHandlerAndConnect() {\\n    window.APP\\n        && window.APP.connect.status === 'ready'\\n        && window.APP.connect.handler();\\n}\\n\\n/**\\n * Implements a callback to be invoked if anything goes wrong.\\n *\\n * @param {Error} error - The specifics of what went wrong.\\n * @returns {void}\\n */\\nfunction errorCallback(error) {\\n    // The value of error is undefined if external connect is disabled.\\n    error && console.warn(error);\\n\\n    // Sets that global variable to be used later by connect method in\\n    // connection.js.\\n    window.XMPPAttachInfo = {\\n        status: 'error'\\n    };\\n    checkForConnectHandlerAndConnect();\\n}\\n\"]}","code":"!function(n){var o={};function t(e){if(o[e])return o[e].exports;var r=o[e]={i:e,l:!1,exports:{}};return n[e].call(r.exports,r,r.exports,t),r.l=!0,r.exports}t.m=n,t.c=o,t.d=function(n,o,e){t.o(n,o)||Object.defineProperty(n,o,{configurable:!1,enumerable:!0,get:e})},t.n=function(n){var o=n&&n.__esModule?function(){return n.default}:function(){return n};return t.d(o,\"a\",o),o},t.o=function(n,o){return Object.prototype.hasOwnProperty.call(n,o)},t.p=\"/libs/\",t(t.s=769)}({131:function(n,o,t){\"use strict\";o.a=function(n){var o=arguments.length>1&&void 0!==arguments[1]&&arguments[1],t=\"search\"===(arguments.length>2&&void 0!==arguments[2]?arguments[2]:\"hash\")?n.search:n.hash,e={};return t&&t.substr(1).split(\"&\").forEach(function(n){var t=n.split(\"=\"),r=t[0];if(r){var a=void 0;try{a=t[1],o||(a=JSON.parse(decodeURIComponent(a).replace(/\\\\&/,\"&\")))}catch(n){var c=\"Failed to parse URL parameter value: \"+String(a);return console.warn(c,n),void(window.onerror&&window.onerror(c,null,null,null,n))}e[r]=a}}),e}},186:function(n,o,t){\"use strict\";o.a=function(){var n=config.getroomnode,o=window.location.pathname,t=void 0;t=n&&\"function\"==typeof n?n.call(config,o):o.substring(o.lastIndexOf(\"/\")+1).toLowerCase()||void 0;return t}},769:function(n,o,t){\"use strict\";Object.defineProperty(o,\"__esModule\",{value:!0});var e=t(186),r=t(131);if(\"function\"==typeof createConnectionExternally){var a=Object(r.a)(window.location,!0,\"hash\")[\"config.externalConnectUrl\"]||config.externalConnectUrl,c=Object(r.a)(window.location,!0,\"hash\")[\"config.iAmRecorder\"],i=void 0;if(a&&(i=Object(e.a)())&&!c){a+=\"?room=\"+i;var l=Object(r.a)(window.location,!0,\"search\").jwt;l&&(a+=\"&token=\"+l),createConnectionExternally(a,function(n){window.XMPPAttachInfo={status:\"success\",data:n},s()},u)}else u()}else u();function s(){window.APP&&\"ready\"===window.APP.connect.status&&window.APP.connect.handler()}function u(n){n&&console.warn(n),window.XMPPAttachInfo={status:\"error\"},s()}}});","extractedComments":[]}